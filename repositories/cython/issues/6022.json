{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nSegmentation fault at https://github.com/python/cpython/blob/3.11/Objects/dictobject.c#L5582\r\n\r\nReproducer in Dockerfile: https://github.com/iphydf/toktok-stack/tree/cython-example/third_party/python/cython/bug6022\r\n\r\n```gdb\r\n#13 0.769 AttributeError: 'Derived' object has no attribute 'cleanup'\r\n#13 0.769 Exception ignored in: 'helloworld.Foo.__dealloc__'\r\n#13 0.769 AttributeError: 'Derived' object has no attribute 'cleanup'\r\n#13 2.084 warning: 5582\tObjects/dictobject.c: No such file or directory\r\n#13 2.084\r\n#13 2.084 Program received signal SIGSEGV, Segmentation fault.\r\n#13 2.084 _PyObject_FreeInstanceAttributes (self=0x7f4be34316d0)\r\n#13 2.084     at Objects/dictobject.c:5582\r\n#13 2.085 #0  _PyObject_FreeInstanceAttributes (self=0x7f4be34316d0)\r\n#13 2.085     at Objects/dictobject.c:5582\r\n#13 2.085 #1  subtype_dealloc (self=0x7f4be34316d0) at Objects/typeobject.c:1433\r\n#13 2.085 #2  0x00007f4be384199c in _Py_Dealloc (op=<optimized out>)\r\n#13 2.085     at Objects/object.c:2390\r\n#13 2.085 #3  Py_DECREF (op=<optimized out>) at ./Include/object.h:538\r\n#13 2.085 #4  AttributeError_clear (self=0x7f4be3618cf0) at Objects/exceptions.c:2287\r\n#13 2.085 #5  AttributeError_dealloc (self=0x7f4be3618cf0) at Objects/exceptions.c:2296\r\n#13 2.085 #6  0x00007f4be380d967 in _Py_Dealloc (op=<optimized out>)\r\n#13 2.085     at Objects/object.c:2390\r\n#13 2.085 #7  Py_DECREF (op=<optimized out>) at ./Include/object.h:538\r\n#13 2.085 #8  Py_XDECREF (op=<optimized out>) at ./Include/object.h:602\r\n#13 2.086 #9  insertdict (mp=0x7f4be36693c0, key=0x7f4be36b8030,\r\n#13 2.086     hash=3280292777369596347, value=0x7f4be3b42a20 <_Py_NoneStruct>)\r\n#13 2.086     at Objects/dictobject.c:1304\r\n#13 2.086 #10 0x00007f4be3870de9 in _PyModule_ClearDict (d=0x7f4be36693c0)\r\n#13 2.086     at Objects/moduleobject.c:634\r\n#13 2.086 #11 0x00007f4be38ced8c in finalize_clear_sys_builtins_dict (verbose=0,\r\n#13 2.086     interp=0x7f4be3b58f58 <_PyRuntime+58936>) at Python/pylifecycle.c:1512\r\n#13 2.086 #12 finalize_modules (tstate=tstate@entry=0x7f4be3b732d8 <_PyRuntime+166328>)\r\n#13 2.086     at Python/pylifecycle.c:1586\r\n#13 2.086 #13 0x00007f4be38bb775 in Py_FinalizeEx () at Python/pylifecycle.c:1833\r\n#13 2.087 #14 0x00007f4be38c8036 in Py_RunMain () at Modules/main.c:682\r\n#13 2.087 #15 0x00007f4be388ece7 in Py_BytesMain (argc=<optimized out>,\r\n#13 2.087     argv=<optimized out>) at Modules/main.c:734\r\n#13 2.088 #16 0x00007f4be3bd26d1 in libc_start_main_stage2 (main=0x558c3009a180 <main>,\r\n#13 2.088     argc=2, argv=0x7ffd921e9a88) at src/env/__libc_start_main.c:95\r\n#13 2.088 #17 0x0000558c3009a046 in _start ()\r\n#13 2.090 Cannot access memory at address 0x7f4be33ff028\r\n#13 2.090 $1 = 0x7f4be341b2a0 \"Derived\"\r\n#13 2.090 $2 = (PyDictKeysObject *) 0x7f4be33ff010\r\n```\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nhelloworld.pyx:\r\n```cython\r\n# cython: language_level=3, linetrace=True\r\nimport sys\r\n\r\n\r\ncdef class Foo:\r\n\r\n    def __init__(self):\r\n        print(\"Foo init\", file=sys.stderr)\r\n\r\n    def __dealloc__(self):\r\n        print(\"__dealloc__\", file=sys.stderr)\r\n        self.cleanup()\r\n```\r\n\r\nmain.py:\r\n```python\r\nimport helloworld\r\nimport sys\r\n\r\n\r\nclass Derived(helloworld.Foo):\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        print(\"DerivedWorking init\", file=sys.stderr)\r\n\r\n\r\nclass Main:\r\n    ob = Derived()\r\n\r\n\r\nMain()\r\n```\r\n\r\n### Expected behaviour\r\n\r\nI expect python to not segfault.\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.11\r\n\r\n### Cython version\r\n\r\n53ff506512377e70602b617adcc69940d3f7b4b9\r\n\r\n### Additional context\r\n\r\nIf `ob` is not in a class but in a function, e.g. `def Main(): ob = Derived()`, the segfault happens elsewhere:\r\n\r\n```\r\n#13 2.205 #0  0x00007f263dd878b4 in _PyObject_IS_GC (obj=0x7f263d9a9610)\r\n#13 2.205     at ./Include/internal/pycore_object.h:214\r\n...\r\n```\r\n\r\nReproducible on both 3.0.8 release and current master (53ff506512377e70602b617adcc69940d3f7b4b9).",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think the basic issue is that `__dealloc__` ends up being called twice. I really can't work out why or where though - I suspect a stray reference is kept to `ob` somewhere (maybe in a traceback or a stack frame saved somewhere or something like that)",
            "created_at": "2024-03-16T14:58:43Z",
            "html_url": "https://github.com/cython/cython/issues/6022#issuecomment-2002011963",
            "id": 2002011963,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6022",
            "node_id": "IC_kwDOABDGAc53VEc7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2002011963/reactions"
            },
            "updated_at": "2024-03-16T14:58:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2002011963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've moved away from `__dealloc__` entirely, and use `__del__` only. Works for me, but I still wanted to report it.",
            "created_at": "2024-03-16T15:29:16Z",
            "html_url": "https://github.com/cython/cython/issues/6022#issuecomment-2002021065",
            "id": 2002021065,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6022",
            "node_id": "IC_kwDOABDGAc53VGrJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2002021065/reactions"
            },
            "updated_at": "2024-03-16T15:34:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2002021065",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6022/comments",
    "created_at": "2024-02-22T15:58:41Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "159170202b5ec90fcc2ac5aa057655fa65af809a",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/159170202b5ec90fcc2ac5aa057655fa65af809a",
            "created_at": "2024-03-16T19:04:19Z",
            "event": "referenced",
            "id": 12140654453,
            "node_id": "REFE_lADOABDGAc6AHSO7zwAAAALTo691",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12140654453"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6022/events",
    "html_url": "https://github.com/cython/cython/issues/6022",
    "id": 2149393339,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6022/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6AHSO7",
    "number": 6022,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6022/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6022/timeline",
    "title": "[BUG] Segfault when __dealloc__ calls a non-existent method.",
    "updated_at": "2024-03-16T15:34:30Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6022",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
        "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
        "followers_url": "https://api.github.com/users/iphydf/followers",
        "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
        "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iphydf",
        "id": 10647936,
        "login": "iphydf",
        "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
        "organizations_url": "https://api.github.com/users/iphydf/orgs",
        "received_events_url": "https://api.github.com/users/iphydf/received_events",
        "repos_url": "https://api.github.com/users/iphydf/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iphydf"
    }
}