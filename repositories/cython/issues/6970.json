{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nHit a gcc compilation error stating the union of interest is not declared (but the Cython compiler was happy):\n```shell\n[1/1] Cythonizing /local/home/leof/dev/cython-tests/test_underscore_prefix.pyx\n/local/home/leof/dev/cython-tests/test_underscore_prefix.cpp: In function 'PyObject* __pyx_pf_22test_underscore_prefix_test(PyObject*)':\n/local/home/leof/dev/cython-tests/test_underscore_prefix.cpp:1313:46: error: '_anon_pod1' was not declared in this scope\n 1313 |   __pyx_t_1 = __Pyx_PyInt_FromSize_t((sizeof(_anon_pod1))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)\n      |                                              ^~~~~~~~~~\nerror: command '/local/home/leof/miniforge3/envs/py312_cu129/bin/x86_64-conda-linux-gnu-c++' failed with exit code 1\n```\nThe failure is seen only with the Case 1 below; Case 2 works.\n\n### Code to reproduce the behaviour:\n\n- `test_underscore_prefix.h`\n```c\n#if defined(__cplusplus)\nextern \"C\" {\n#endif\n\ntypedef struct obj {\n  union {\n    int fd;\n    void* handle;\n  } union_member;\n  void * outer;\n} obj_t;\n\n#if defined(__cplusplus)\n}\n#endif\n```\n- `test_underscore_prefix.pxd`\n```cython\n# # Case 1: Import definitions from a C header; this fails\n# cdef extern from \"test_underscore_prefix.h\":\n#     ctypedef union _anon_pod1 '_anon_pod1':\n#         int fd\n#         void* handle\n#     ctypedef struct obj_t 'obj_t':\n#         _anon_pod1 union_member\n#         void * outer\n\n\n# Case 2: Write definitions directly in .pxd; this works\nctypedef union _anon_pod1 '_anon_pod1':\n    int fd\n    void* handle\nctypedef struct obj_t 'obj_t':\n    _anon_pod1 union_member\n    void * outer\n```\n\n- `test_underscore_prefix.pyx`:\n```cython\n# distutils: language = c++\n# distutils: extra_compile_args = -std=c++17\n\n\ndef test():\n    print(sizeof(_anon_pod1))\n```\n\n### Expected behaviour\n\nBoth cases should have all definitions propagated to whichever `.pyx` that's `cimport`'ing the `.pxd` file. In particular, if both cases can pass the Cython compiler, the generated code should be valid and compilable by gcc.\n\n### OS\n\n_No response_\n\n### Python version\n\n_No response_\n\n### Cython version\n\n_No response_\n\n### Additional context\n\nIn our case, this issue was discovered when inspecting an error from our code generator. We want users to be able to choose if they need the headers at build time, hence we have a toggle for users to pick either Case 1 or Case 2. We want to ensure both cases are supported.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "What's more fun: In the `test_underscore_prefix.pyx` file  if we do this instead of printing `sizeof(_anon_pod1)`\n```cython\n# distutils: language = c++\n# distutils: extra_compile_args = -std=c++17\n\n\ndef test():\n    print(sizeof(obj_t))\n```\nthen both cases work without issue (and give matching results) ðŸ¤” ",
            "created_at": "2025-06-17T00:17:07Z",
            "html_url": "https://github.com/cython/cython/issues/6970#issuecomment-2978534574",
            "id": 2978534574,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6970",
            "node_id": "IC_kwDOABDGAc6xiNSu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2978534574/reactions"
            },
            "updated_at": "2025-06-17T00:17:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2978534574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6970/comments",
    "created_at": "2025-06-17T00:11:45Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6970/events",
    "html_url": "https://github.com/cython/cython/issues/6970",
    "id": 3151650338,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6970/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc672l4i",
    "number": 6970,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6970/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6970/timeline",
    "title": "[BUG] `cdef extern` declarations in `.pxd` are not propagated to `.pyx`",
    "type": null,
    "updated_at": "2025-06-17T00:17:07Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6970",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
        "events_url": "https://api.github.com/users/leofang/events{/privacy}",
        "followers_url": "https://api.github.com/users/leofang/followers",
        "following_url": "https://api.github.com/users/leofang/following{/other_user}",
        "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/leofang",
        "id": 5534781,
        "login": "leofang",
        "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
        "organizations_url": "https://api.github.com/users/leofang/orgs",
        "received_events_url": "https://api.github.com/users/leofang/received_events",
        "repos_url": "https://api.github.com/users/leofang/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/leofang",
        "user_view_type": "public"
    }
}