{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "I want to be able to write code such as\r\n```cython\r\ncdef int const_1 = 1\r\ncdef int const_2 = 2\r\nx = X()\r\nn = some_int\r\n{const_1: x.foo, const_2: x.bar}[n]()\r\n```\r\nand have Cython optimize it to a `switch`.\r\n\r\n_Originally posted by @jonashaag in https://github.com/cython/cython/issues/4890#issuecomment-1185418895_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "My feeling is that this is a bit of a stretch: to be useful it has to identify that the keys are constants (and presumably the same type), to identify that the dict is never used (so doesn't need to be created), probably identify that the values are all of the same type and shouldn't be coerced to Python. And in this case preserve the \"bound cdef func\" aspect of the values, but that's obviously very specific to this case.\r\n\r\nIt seem like an optimization that'll be hard for a user to rely on and that there's other ways of achieving the same thing. So I'm a bit sceptical of the value.",
            "created_at": "2022-07-15T15:04:42Z",
            "html_url": "https://github.com/cython/cython/issues/4891#issuecomment-1185634393",
            "id": 1185634393,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4891",
            "node_id": "IC_kwDOABDGAc5Gq1hZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1185634393/reactions"
            },
            "updated_at": "2022-07-15T15:04:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1185634393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can see this being a nice optimisation. If it was fast, people would probably make use of this pattern (more). I've seen it being used a few times, and I'd use it for prepared, constant dicts, but would probably never instantiate a dict just for one lookup.\r\n\r\nThis isn't free of drawbacks and limits, though:\r\n1) If the dict is somewhat large, hash values are pre-calculated, and/or comparisons are expensive, creating the dict and doing a lookup might actually be faster than running a long sequence of comparisons.\r\n2) If we cannot determine at compile time that all keys are hashable, we might have to try to hash them at runtime in order to make sure that we still allow the dict creation to fail in some cases.\r\n3) It's not clear how far we can go with the transformation. We can probably change the code into this:\r\n    ```cython\r\n    if 1 == n:\r\n        result = x.foo\r\n    elif 2 == n:\r\n        result = x.bar\r\n    else:\r\n        raise KeyError(n)\r\n    result()\r\n    ```\r\n    but I'm not sure if we can always change it to\r\n    ```cython\r\n    if 1 == n:\r\n        x.foo()\r\n    elif 2 == n:\r\n        x.bar()\r\n    else:\r\n        raise KeyError(n)\r\n    ```\r\n    Like, when there are non-trivial call arguments, for example. But the latter version would be required for allowing fast bound method calls, as you requested.\r\n\r\nMy guess is that this would be worth it in trivial cases like yours. But I would like to avoid adding optimisations for niche cases that are difficult to predict for users. If we fall back to something inefficient for a lot of code, then people might end up avoiding the feature because they'd learn that they could get more performance out of more C-ish code. People still ask about the old Pyrex \"for … from …\" loop these days.",
            "created_at": "2022-07-15T15:05:07Z",
            "html_url": "https://github.com/cython/cython/issues/4891#issuecomment-1185634781",
            "id": 1185634781,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4891",
            "node_id": "IC_kwDOABDGAc5Gq1nd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1185634781/reactions"
            },
            "updated_at": "2022-07-15T15:05:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1185634781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for even considering :) I think for a lot of code even the simple optimization (first example) would be nice. In that case the \"inline dict lookup\" thing becomes an alternative syntax to `switch` statements. That said, maybe with Python's new `match` syntax we don't need this kind of \"workaround\" for `switch` statements anymore.",
            "created_at": "2022-07-15T15:28:29Z",
            "html_url": "https://github.com/cython/cython/issues/4891#issuecomment-1185655198",
            "id": 1185655198,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4891",
            "node_id": "IC_kwDOABDGAc5Gq6me",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1185655198/reactions"
            },
            "updated_at": "2022-07-15T15:28:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1185655198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/175722?v=4",
                "events_url": "https://api.github.com/users/jonashaag/events{/privacy}",
                "followers_url": "https://api.github.com/users/jonashaag/followers",
                "following_url": "https://api.github.com/users/jonashaag/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jonashaag",
                "id": 175722,
                "login": "jonashaag",
                "node_id": "MDQ6VXNlcjE3NTcyMg==",
                "organizations_url": "https://api.github.com/users/jonashaag/orgs",
                "received_events_url": "https://api.github.com/users/jonashaag/received_events",
                "repos_url": "https://api.github.com/users/jonashaag/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jonashaag"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That said, maybe with Python's new match syntax we don't need this kind of \"workaround\" for switch statements anymore.\r\n\r\nThe authors of `match` seem fairly keen to point out that it isn't really intended as a switch substitute. Obviously you can use it for whatever you like (and my preliminary Cython implementation will usually manage to optimize very simple cases to a C switch), but the intent is mainly about unpacking more complex data structures.",
            "created_at": "2022-07-15T15:58:54Z",
            "html_url": "https://github.com/cython/cython/issues/4891#issuecomment-1185680715",
            "id": 1185680715,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4891",
            "node_id": "IC_kwDOABDGAc5GrA1L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1185680715/reactions"
            },
            "updated_at": "2022-07-15T15:58:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1185680715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4891/comments",
    "created_at": "2022-07-15T14:43:05Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/175722?v=4",
                "events_url": "https://api.github.com/users/jonashaag/events{/privacy}",
                "followers_url": "https://api.github.com/users/jonashaag/followers",
                "following_url": "https://api.github.com/users/jonashaag/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jonashaag",
                "id": 175722,
                "login": "jonashaag",
                "node_id": "MDQ6VXNlcjE3NTcyMg==",
                "organizations_url": "https://api.github.com/users/jonashaag/orgs",
                "received_events_url": "https://api.github.com/users/jonashaag/received_events",
                "repos_url": "https://api.github.com/users/jonashaag/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jonashaag"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-15T14:43:06Z",
            "event": "mentioned",
            "id": 7002467568,
            "node_id": "MEE_lADOABDGAc5N2db6zwAAAAGhYSzw",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7002467568"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/175722?v=4",
                "events_url": "https://api.github.com/users/jonashaag/events{/privacy}",
                "followers_url": "https://api.github.com/users/jonashaag/followers",
                "following_url": "https://api.github.com/users/jonashaag/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jonashaag",
                "id": 175722,
                "login": "jonashaag",
                "node_id": "MDQ6VXNlcjE3NTcyMg==",
                "organizations_url": "https://api.github.com/users/jonashaag/orgs",
                "received_events_url": "https://api.github.com/users/jonashaag/received_events",
                "repos_url": "https://api.github.com/users/jonashaag/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jonashaag"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-15T14:43:06Z",
            "event": "subscribed",
            "id": 7002467575,
            "node_id": "SE_lADOABDGAc5N2db6zwAAAAGhYSz3",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7002467575"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-15T14:44:11Z",
            "event": "labeled",
            "id": 7002474685,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "LE_lADOABDGAc5N2db6zwAAAAGhYUi9",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7002474685"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-15T14:44:11Z",
            "event": "labeled",
            "id": 7002474691,
            "label": {
                "color": "444444",
                "name": "Optimization"
            },
            "node_id": "LE_lADOABDGAc5N2db6zwAAAAGhYUjD",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7002474691"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4891/events",
    "html_url": "https://github.com/cython/cython/issues/4891",
    "id": 1306121978,
    "labels": [
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556272,
            "name": "Optimization",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNzI=",
            "url": "https://api.github.com/repos/cython/cython/labels/Optimization"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4891/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5N2db6",
    "number": 4891,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4891/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4891/timeline",
    "title": "Optimise immediate lookups on dict literals",
    "updated_at": "2022-07-15T15:58:54Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4891",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}