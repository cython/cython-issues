{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe your issue\n\nWe're limited in what changes we can do to the `cdef class memoryview` class in the utility code because it can be passed around from different Cython modules from different Cython versions, and the layout needs to be the same (e.g. for reference counting).\n\nI think I have a plan that gives a long-term solution:\n\n* Add an `abi` pointer field to the class. My proposal is that we use reuse the \n   https://github.com/cython/cython/blob/93edfdba69d4a5a2dc858e83901101a3a99b26fb/Cython/Utility/MemoryView.pyx#L335\n   field in the short-term (but long-term it doesn't need to remain fixed). This points to the contents of an interned string describing the structure of the class, so can be checked trivially with pointer comparison.\n* Within Cython, treat memoryviewslices in cimported modules as a different type (but allow coercion between the types).\n* Each Cython module provides its own \"__Pyx_CoerceToMyMemoryViewSlice(PyObject *memoryview_object, const char* api). If `api` is the same then it can be passed on directly. If `api` is different then it rewraps (using the buffer protocol).\n  * This coercion function is exported using the normal cdef export mechanism.\n  * When passing memoryviews to another Cython module we use their function (if it exists).\n  * When reading a memoryview from another Cython module we use our function.\n* In the short-term we still can't change the structure, because we might be receiving memoryviews from \"old\" Cython versions.\n* In the long-term we can be confident that everyone calling our module is using this interface and thus we can drop the ABI restriction.\n\nIt should be zero-cost within a single module, but adds a bit of friction on the boundary between modules (but mostly just a single pointer comparison).",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Seems a decent plan.",
            "created_at": "2025-07-22T17:39:31Z",
            "html_url": "https://github.com/cython/cython/issues/7029#issuecomment-3104038645",
            "id": 3104038645,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7029",
            "node_id": "IC_kwDOABDGAc65A971",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3104038645/reactions"
            },
            "updated_at": "2025-07-22T17:39:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3104038645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7029/comments",
    "created_at": "2025-07-22T16:59:32Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7029/events",
    "html_url": "https://github.com/cython/cython/issues/7029",
    "id": 3253427055,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7029/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7B61tv",
    "number": 7029,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7029/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7029/timeline",
    "title": "Plan for memoryview ABI compatibility",
    "type": null,
    "updated_at": "2025-07-22T17:39:31Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7029",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods",
        "user_view_type": "public"
    }
}