{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "<!--\r\n**Note:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently it is possible to define a `ctuple` like so (as [shown in the docs]( https://cython.readthedocs.io/en/latest/src/userguide/language_basics.html?highlight=ctuple#types )), which creates the needed C `struct` under-the-hood.\r\n\r\n```cython\r\ncdef (double, int) bar\r\n```\r\n\r\nThough one tricky thing with this kind of definition is the constituent elements need to be accessed via indexing. However it may not be clear what the indexes correspond to and requires a bit of re-reading of the code to figure out. To clarify the code a bit, it would be useful to name the constituent parts (analogous to what one can do with [`namedtuple`]( https://docs.python.org/3/library/collections.html#collections.namedtuple )).\r\n\r\n**Describe the solution you'd like**\r\n\r\nOne option to allow naming the constituents as part of the definition like so.\r\n\r\n```cython\r\ncdef (double d, int i) bar\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nAs `ctuple`s are just syntactic sugar for `struct`s, one could just define a `struct`.\r\n\r\n```cython\r\ncdef struct bar_t:\r\n    double d\r\n    int i\r\n\r\ncdef bar_t bar\r\n```\r\n\r\nHowever there are a couple of issues here. First this makes what could have been a succinct one line change and now spreads it over multiple lines (and possibly files), which could hinder instead of improving the readability issue raised earlier. Second it does not appear to be possible to coerce sequences (like `tuple`s) to `struct`s ( https://github.com/cython/cython/issues/3806 ).\r\n\r\n**Additional context**\r\n\r\nNA\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3807/comments",
    "created_at": "2020-09-02T23:38:00Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3807/events",
    "html_url": "https://github.com/cython/cython/issues/3807",
    "id": 691507378,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3807/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2OTE1MDczNzg=",
    "number": 3807,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] Named `ctuple`s (like `namedtuple`)",
    "updated_at": "2020-09-03T02:14:34Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3807",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jakirkham",
        "id": 3019665,
        "login": "jakirkham",
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jakirkham"
    }
}