{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Is your feature request related to a problem? Please describe.\n\nMany Cython users would benefit from a compile mode (read, C macro) that increases the compatibility with future CPython releases, even at the cost of some performance.\r\n\r\nThe code that Cython generates for CPython takes advantage of several implementation details, e.g. PyLong digits or PyList/PyTuple arrays. These can change in new CPython releases, which requires Cython to adapt and users to regenerate their code.\r\n\r\nIn many cases, users care more about a future proof extension module than a highly performant one. The Limited C-API in CPython was introduced in order to cater for this use case, but is not currently complete enough to implement all of Cython (really, all of Python) on top of it.\r\n\r\nRelated discussions:\r\n- the \"LIMITED_API\" option that replaces all usages of CPython internals with generic, public C-API calls (https://github.com/cython/cython/issues/2542)\r\n- the ticket that @markshannon opened, asking us to avoid implementation details (https://github.com/cython/cython/issues/4382)\r\n- the list of CPython internals that we use (https://github.com/cython/cython/issues/4635)\r\n- several incompatibilities between the code that Cython generated and changes that appeared in CPython 3.12a5 (https://github.com/cython/cython/issues/5238)\n\n### Describe the solution you'd like.\n\nThere should be a separate compile option, similar to `CYTHON_LIMITED_API` (which enables the `CYTHON_COMPILING_IN_LIMITED_API` set of feature flags), but without the limitations of the Limited C-API.\n\n### Describe alternatives you've considered.\n\nWe could disable all usages of internals for future CPython releases, and only enable their usage in newer Cython releases that were tested on the respective CPython versions. This would make sure that Cython generated code keeps working in future CPython releases (as long as there are no changes to existing public C-API functions), but would introduce an enforced slow-down in new CPython releases that would require users to regenerate their code with a more recent Cython release to solve.\n\n### Additional context\n\nOne disadvantage is that adding a new C compile option increases the number of CI jobs that are necessary to guarantee the correct functioning of the generated code.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "> These can change in new CPython releases, which requires Cython to adapt\r\n\r\nThis seems like a real cost to me\r\n\r\n> and users to regenerate their code.\r\n\r\nbut this does not.  Given that cython is pip installable (and the improvements for specifying build-time requirements in the broader Python ecosystem) I think is completely reasonable to expect users to re-cythonize when installing a package from source.  If you are building from source then you also need a c-compiler which is already much harder.  I think that cython should take the view that direct users of cython are sophisticated enough to have no problems installing cython and the 2nd-level users (users of projects that use cython) are either able easily get cython installed or are consuming some sort of binary build (wheels, conda packages, system packages, ....) where someone else is responsible for building.\r\n\r\n\r\nIf the goal is to make the path to supporting new versions of CPython smoother (it goes slower rather than fails so you get the bug report after CPython is released and someone's benchmarks got slower rather than me complaining as soon as it lands on CPython main) and that make the lives of cython developers easier then this seems like a great idea!\r\n\r\nIf the primary motivation is to make it so that down-stream users have to re-cythonize less then this seems like a lot of work for no practical benefit.",
            "created_at": "2023-02-15T15:59:48Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1431599390",
            "id": 1431599390,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5VVHke",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1431599390/reactions"
            },
            "updated_at": "2023-02-15T15:59:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1431599390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tacaswell I'm not sure what is the official recommendation now, but years ago Cython told folks to ship generated C sources within sdists. I've been doing so with my project until last release, but for the future I'll add Cython as a build-time dependency to run the Cython -> C translation at build time, precisely to avoid the issues we are discussing in here. \r\n\r\nThat being said, we still have the problem of working with in-development CPython versions. Recently, GitHub's `actions/setup-python` upgraded its `Py312-dev` to a beta with breaking changes. Cython-generated C code was no longer able to compile, my CI workflow got disrupted. I ended up doing this in my `setup.py`:\r\n\r\n```python\r\n# setup.py\r\nmaxknow_python = (3, 11)\r\n...\r\ndef get_extension(...):\r\n    ext = ...\r\n    if sys.version_info[:2] > maxknow_python:\r\n        ext['define_macros'].extend([\r\n            ('CYTHON_FAST_PYCALL', 0),\r\n            ('CYTHON_FAST_THREAD_STATE', 0),\r\n            ('CYTHON_USE_DICT_VERSIONS', 0),\r\n            ('CYTHON_USE_PYLONG_INTERNALS', 0),\r\n            ('CYTHON_USE_PYLIST_INTERNALS', 0),\r\n            ('CYTHON_USE_UNICODE_INTERNALS', 0),\r\n        ])\r\n```\r\nand I am still not sure if I turned off all the optimizations that may break in the next Py312 API change. \r\nIt would be much easier to have a single define (e.g. `CYTHON_USE_CPYTHON_INTERNALS`) to set.\r\n\r\nPS: After writing this comment, I realized I did it slightly wrong. I should define `maxknow_python` to the latest Py312 beta that is know to work. \r\n",
            "created_at": "2023-02-15T16:20:45Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1431631813",
            "id": 1431631813,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5VVPfF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1431631813/reactions"
            },
            "updated_at": "2023-02-15T16:20:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1431631813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Cython told folks to ship generated C sources within sdists\r\n\r\nSeparate issue: https://github.com/cython/cython/issues/5089",
            "created_at": "2023-02-15T17:59:42Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1431783605",
            "id": 1431783605,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5VV0i1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1431783605/reactions"
            },
            "updated_at": "2023-02-15T17:59:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1431783605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> After writing this comment, I realized I did it slightly wrong. I should define `maxknow_python` to the latest Py312 beta that is know to work.\r\n\r\nRight. ~As it stands, your version guard would already apply to Python 3.11.1,~ not just 3.12.0a5, which introduced several breaking changes.",
            "created_at": "2023-02-15T18:03:17Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1431788822",
            "id": 1431788822,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5VV10W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1431788822/reactions"
            },
            "updated_at": "2023-02-17T14:08:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1431788822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> your version guard would already apply to Python 3.11.1, not just 3.12.0a5\n\nWell, note the `[:2]` slice after `std.version_info`. But still, 3.12.0a4 was good, so I should do better.\n",
            "created_at": "2023-02-15T20:24:23Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1431981700",
            "id": 1431981700,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5VWk6E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1431981700/reactions"
            },
            "updated_at": "2023-02-15T20:24:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1431981700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            }
        },
        {
            "author_association": "NONE",
            "body": "What would be even better, would be an option to choose between cross-version compatibility and performance when compiling the C code generated by Cython.\r\nThat will need CPython support, so that we can provide the inline functions needed for the performance mode.\r\n\r\nIs there a list anywhere of all the inline functions that Cython defines that access CPython internals?\r\n",
            "created_at": "2023-02-16T15:48:07Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1433300497",
            "id": 1433300497,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5Vbm4R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1433300497/reactions"
            },
            "updated_at": "2023-02-16T15:48:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1433300497",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9448417?v=4",
                "events_url": "https://api.github.com/users/markshannon/events{/privacy}",
                "followers_url": "https://api.github.com/users/markshannon/followers",
                "following_url": "https://api.github.com/users/markshannon/following{/other_user}",
                "gists_url": "https://api.github.com/users/markshannon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/markshannon",
                "id": 9448417,
                "login": "markshannon",
                "node_id": "MDQ6VXNlcjk0NDg0MTc=",
                "organizations_url": "https://api.github.com/users/markshannon/orgs",
                "received_events_url": "https://api.github.com/users/markshannon/received_events",
                "repos_url": "https://api.github.com/users/markshannon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/markshannon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/markshannon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/markshannon"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What would be even better, would be an option to choose between cross-version compatibility and performance when compiling the C code generated by Cython.\r\n\r\nThat was the idea of the Limited C-API. Cython has partial support for that (at C compile time, see https://github.com/cython/cython/issues/2542), which should be extended (both in Cython and CPython).\r\n\r\nHowever, I'm not sure that that's completely identical to the use case in this ticket. The described C compile mode could make use of more of the C-API than the Limited API, while still guarding a reasonably high level of forward compatibility.\r\n\r\nBasically, if the Limited API was complete enough to limit Cython to it (read: to implement Python on top of it it), we could use the existing \"CYTHON_LIMITED_API\" compile mode. But it's not, at least not as it stands. We may eventually end up merging the two modes at some point, but we need something complete for the time being. Something that users can explicitly enable and still get what they meant in the future.",
            "created_at": "2023-02-17T15:57:38Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1434842482",
            "id": 1434842482,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5VhfVy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1434842482/reactions"
            },
            "updated_at": "2023-02-17T15:57:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1434842482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a list anywhere of all the inline functions that Cython defines that access CPython internals?\r\n\r\nThere's https://github.com/cython/cython/issues/4635 which lists the internals that we use. Regarding the usages of these internals in the code, the best way to find them is probably to search for the respective macro guards in the sources, as listed above in https://github.com/cython/cython/issues/5249#issuecomment-1431631813 and (completely) near the top of https://github.com/cython/cython/blob/master/Cython/Utility/ModuleSetupCode.c.\r\n\r\nSeveral of these occurrences are not easy to extract, though, (which is what you seem to be after). Being a code generator, Cython can afford to adapt the usage to the source code that it translates. So there's a mix of pre-written utility functions, template-generated utility functions, and completely generated code snippets where the guards are being used.\r\n\r\nAlso note that there are different reasons why we implement our own helper functions. One is performance, another is incomplete coverage of Python's semantics in CPython's C-API, sometimes we really know better because Cython has C/Python type information, and sometimes it's just \"because we can afford to do so in a code generator\" (e.g. the generated code can be better adapted to the use case than a generic C-API call).",
            "created_at": "2023-02-17T16:15:17Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1434865955",
            "id": 1434865955,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5VhlEj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1434865955/reactions"
            },
            "updated_at": "2023-02-17T16:15:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1434865955",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As far as is possible I think we should keep this to just being a convenient way of defining all the other compatibility macros. Partly because I think that practically gets pretty close already, and partly as a matter of principle to try to minimize the amount of work and extra testing that's involved in this.",
            "created_at": "2023-02-18T18:51:37Z",
            "html_url": "https://github.com/cython/cython/issues/5249#issuecomment-1435738940",
            "id": 1435738940,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5249",
            "node_id": "IC_kwDOABDGAc5Vk6M8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1435738940/reactions"
            },
            "updated_at": "2023-02-18T18:51:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1435738940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5249/comments",
    "created_at": "2023-02-15T14:15:58Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-02-15T14:15:58Z",
            "event": "labeled",
            "id": 8526546563,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "LE_lADOABDGAc5eh31YzwAAAAH8OMaD",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8526546563"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-02-15T14:15:58Z",
            "event": "labeled",
            "id": 8526546572,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "LE_lADOABDGAc5eh31YzwAAAAH8OMaM",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8526546572"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9448417?v=4",
                "events_url": "https://api.github.com/users/markshannon/events{/privacy}",
                "followers_url": "https://api.github.com/users/markshannon/followers",
                "following_url": "https://api.github.com/users/markshannon/following{/other_user}",
                "gists_url": "https://api.github.com/users/markshannon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/markshannon",
                "id": 9448417,
                "login": "markshannon",
                "node_id": "MDQ6VXNlcjk0NDg0MTc=",
                "organizations_url": "https://api.github.com/users/markshannon/orgs",
                "received_events_url": "https://api.github.com/users/markshannon/received_events",
                "repos_url": "https://api.github.com/users/markshannon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/markshannon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/markshannon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/markshannon"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-02-15T14:15:59Z",
            "event": "mentioned",
            "id": 8526546674,
            "node_id": "MEE_lADOABDGAc5eh31YzwAAAAH8OMby",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8526546674"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9448417?v=4",
                "events_url": "https://api.github.com/users/markshannon/events{/privacy}",
                "followers_url": "https://api.github.com/users/markshannon/followers",
                "following_url": "https://api.github.com/users/markshannon/following{/other_user}",
                "gists_url": "https://api.github.com/users/markshannon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/markshannon",
                "id": 9448417,
                "login": "markshannon",
                "node_id": "MDQ6VXNlcjk0NDg0MTc=",
                "organizations_url": "https://api.github.com/users/markshannon/orgs",
                "received_events_url": "https://api.github.com/users/markshannon/received_events",
                "repos_url": "https://api.github.com/users/markshannon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/markshannon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/markshannon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/markshannon"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-02-15T14:15:59Z",
            "event": "subscribed",
            "id": 8526546697,
            "node_id": "SE_lADOABDGAc5eh31YzwAAAAH8OMcJ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8526546697"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-02-15T14:18:31Z",
            "event": "renamed",
            "id": 8526572993,
            "node_id": "RTE_lADOABDGAc5eh31YzwAAAAH8OS3B",
            "performed_via_github_app": null,
            "rename": {
                "from": "[ENH] Provide a \"compatibility over performance\" C compile mode",
                "to": "[ENH] Provide a \"compatibility over performance\" C compile mode for CPython"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/8526572993"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-02-15T16:20:45Z",
            "event": "mentioned",
            "id": 8527879571,
            "node_id": "MEE_lADOABDGAc5eh31YzwAAAAH8TR2T",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8527879571"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-02-15T16:20:45Z",
            "event": "subscribed",
            "id": 8527879583,
            "node_id": "SE_lADOABDGAc5eh31YzwAAAAH8TR2f",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8527879583"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5249/events",
    "html_url": "https://github.com/cython/cython/issues/5249",
    "id": 1585937752,
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5249/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5eh31Y",
    "number": 5249,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5249/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5249/timeline",
    "title": "[ENH] Provide a \"compatibility over performance\" C compile mode for CPython",
    "updated_at": "2023-02-18T18:51:38Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5249",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}