{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**Note:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI would like to be able to install custom exception handlers in my code to automate the translation of additional C++ exceptions into Python exceptions, similar to the automatic translation described [here](http://docs.cython.org/en/latest/src/userguide/wrapping_CPlusPlus.html#exceptions) and implemented [here](https://github.com/cython/cython/blob/db19667d81066aa20cf13ab3ea9cba8d5ab9c948/Cython/Utility/CppSupport.cpp#L9). It appears that such a handler is already possible to implement according to [this StackOverflow post](https://stackoverflow.com/questions/10684983/handling-custom-c-exceptions-in-cython). However, I don't find this behavior documented anywhere.\r\n\r\n**Describe the solution you'd like**\r\nIt would be helpful to add an example to the documentation showing how such a handler could be installed. I am happy to contribute it, but I don't know enough to know if the approach recommended in the post linked above is a good one or if it would need to be changed. I can certainly do it with some pointers.\r\n\r\n**Describe alternatives you've considered**\r\nI stumbled upon this while investigating whether it would be possible to add a Cython feature to directly modify the existing exception handler by defining a mapping between custom Python and C++ exceptions in a Cython file. While that seemed like an interesting idea, if it is already possible to accomplish this with a little C++ boilerplate as shown above I don't think there's much reason to add that complexity to Cython.\r\n\r\n**Additional context**\r\nNone.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "The default implementation in [`__Pyx_CppExn2PyErr()`](https://github.com/cython/cython/blob/db19667d81066aa20cf13ab3ea9cba8d5ab9c948/Cython/Utility/CppSupport.cpp#L9) that you already linked to is probably the best example there is. I don't think a custom handler would look much different.\r\n\r\nI agree that it would be good to add at least an example to the docs, and maybe also link to `__Pyx_CppExn2PyErr()`. The SO posts pretty much fill in all the details.\r\n\r\nOTOH, if you want to share the handler across modules, then it might be worth implementing it in a `.pxd` file as [verbatim C++ code](https://cython.readthedocs.io/en/latest/src/userguide/external_C_code.html#including-verbatim-c-code). It should usually be a simple function, so this shouldn't feel excessive, but would leave the code easily visible from your Cython code editor.\r\n\r\nPR welcome.",
            "created_at": "2022-02-03T10:17:46Z",
            "html_url": "https://github.com/cython/cython/issues/4613#issuecomment-1028832150",
            "id": 1028832150,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4613",
            "node_id": "IC_kwDOABDGAc49UruW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1028832150/reactions"
            },
            "updated_at": "2022-02-03T10:17:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1028832150",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4613/comments",
    "created_at": "2022-02-02T23:09:10Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-02-03T10:13:47Z",
            "event": "labeled",
            "id": 6001608539,
            "label": {
                "color": "444444",
                "name": "Documentation"
            },
            "node_id": "LE_lADOABDGAc5C56uHzwAAAAFluUdb",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6001608539"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4613/events",
    "html_url": "https://github.com/cython/cython/issues/4613",
    "id": 1122478983,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425561345,
            "name": "Documentation",
            "node_id": "MDU6TGFiZWw0MjU1NjEzNDU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Documentation"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4613/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5C56uH",
    "number": 4613,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4613/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4613/timeline",
    "title": "[ENH] Improve documentation of installing custom C++ exception handlers",
    "updated_at": "2022-02-03T10:17:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4613",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vyasr",
        "id": 1538165,
        "login": "vyasr",
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vyasr"
    }
}