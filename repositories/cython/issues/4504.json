{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Python 3.9.5, Cython 0.29.25, Windows 10 64-bit\r\nIt seems that if I define a fused type consisting of purely types that are static arrays with the same type but different sizes, then type inference fails but manually specializing and calling the function is still possible. I was doing it this way to get something like an efficient C equivilent of varargs.\r\n\r\nHere's an example:\r\ncimport cython\r\n\r\ncdef fused double_array:\r\n\tdouble[1]\r\n\tdouble[2]\r\n\tdouble[3]\r\n\tdouble[4]\r\n\tdouble[5]\r\n\r\n@cython.cdivision(True)\r\ncdef do_array(double_array v):\r\n\tcdef double i\r\n// calculate the size of the array, since apparently this function just gets a pointer to the start of the array. This is why we turn on cdivision, as otherwise it would not work\r\n\tcdef int array_size = sizeof(double_array) / sizeof(double)\r\n\tprint(array_size)\r\n\tfor i in v[:array_size]:\r\n\t\tprint(i)\r\ndo_array([1,2,3,4,5]) // doesn't work\r\ndo_array([1,2,3]) // doesn't work\r\ndo_array[double[5]]([1,2,3,4,5])\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "This seems like it'd be tricky to make work:\r\n\r\n```\r\ncdef double[5] x = [1,2,3,4,5]\r\n```\r\nis relatively easy because Cython knows the type that's being assigned to.\r\n\r\n```\r\ndo_array([1,2,3,4,5])\r\n```\r\nrequires Cython to iterate through all the possible types and work out if any of them have a possible compile-time assignment from that length of list.\r\n\r\nIt'd definitely be nice for it to work, but it looks like a difficult problem generally",
            "created_at": "2021-12-18T22:14:45Z",
            "html_url": "https://github.com/cython/cython/issues/4504#issuecomment-997292099",
            "id": 997292099,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4504",
            "node_id": "IC_kwDOABDGAc47cXhD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/997292099/reactions"
            },
            "updated_at": "2021-12-18T22:14:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/997292099",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there any other way to get a function that can be called efficiently with any number of arguments?\r\nGuess I could do:\r\ncdef fused float_tuples:\r\n    (float)\r\n        (float, float)\r\n            (float, float, float)\r\n\r\nBut this would require code for each specific number of floats, so I might as well just use an array pointer and length.",
            "created_at": "2021-12-18T22:32:00Z",
            "html_url": "https://github.com/cython/cython/issues/4504#issuecomment-997293805",
            "id": 997293805,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4504",
            "node_id": "IC_kwDOABDGAc47cX7t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/997293805/reactions"
            },
            "updated_at": "2021-12-18T22:32:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/997293805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/47483928?v=4",
                "events_url": "https://api.github.com/users/Keithcat1/events{/privacy}",
                "followers_url": "https://api.github.com/users/Keithcat1/followers",
                "following_url": "https://api.github.com/users/Keithcat1/following{/other_user}",
                "gists_url": "https://api.github.com/users/Keithcat1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Keithcat1",
                "id": 47483928,
                "login": "Keithcat1",
                "node_id": "MDQ6VXNlcjQ3NDgzOTI4",
                "organizations_url": "https://api.github.com/users/Keithcat1/orgs",
                "received_events_url": "https://api.github.com/users/Keithcat1/received_events",
                "repos_url": "https://api.github.com/users/Keithcat1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Keithcat1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Keithcat1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Keithcat1"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You didn't tell us anything about the problem that you are trying to solve, but I get the impression that you might be optimising in the wrong place.\n",
            "created_at": "2021-12-19T07:00:21Z",
            "html_url": "https://github.com/cython/cython/issues/4504#issuecomment-997340335",
            "id": 997340335,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4504",
            "node_id": "IC_kwDOABDGAc47cjSv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/997340335/reactions"
            },
            "updated_at": "2021-12-19T07:00:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/997340335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "So I'm wrapping a C library that has many many constants, and many functions that expect you to XOR together sets of integers. I decided that my API would look alot nicer if each function just accepts a bunch of bint arguments, once for each flag and if that argument is true it adds that flag to the set using the | operator. Because there are so many flags, I wanted a function that I can pass a List<Tuple<c_constant, should_xor_constant>>. I just realized I could do it in Python though with a function that accepts *args without much of a slowdown. Still, this C library does weird things with integers like expecting you to pass values in the LOWORD and HIWORD parts of an integer.",
            "created_at": "2021-12-23T20:22:41Z",
            "html_url": "https://github.com/cython/cython/issues/4504#issuecomment-1000508681",
            "id": 1000508681,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4504",
            "node_id": "IC_kwDOABDGAc47oo0J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1000508681/reactions"
            },
            "updated_at": "2021-12-23T20:22:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1000508681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/47483928?v=4",
                "events_url": "https://api.github.com/users/Keithcat1/events{/privacy}",
                "followers_url": "https://api.github.com/users/Keithcat1/followers",
                "following_url": "https://api.github.com/users/Keithcat1/following{/other_user}",
                "gists_url": "https://api.github.com/users/Keithcat1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Keithcat1",
                "id": 47483928,
                "login": "Keithcat1",
                "node_id": "MDQ6VXNlcjQ3NDgzOTI4",
                "organizations_url": "https://api.github.com/users/Keithcat1/orgs",
                "received_events_url": "https://api.github.com/users/Keithcat1/received_events",
                "repos_url": "https://api.github.com/users/Keithcat1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Keithcat1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Keithcat1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Keithcat1"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think, the usual C approach would be to pass an array pointer and an item count (read: length). If the length is statically known, you can allocate it on the stack. C compilers can also inline such functions, if appropriate, which should then give you pretty much the same binary code as you'd get with an (inlined)  n-args function.",
            "created_at": "2021-12-23T22:51:23Z",
            "html_url": "https://github.com/cython/cython/issues/4504#issuecomment-1000553270",
            "id": 1000553270,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4504",
            "node_id": "IC_kwDOABDGAc47ozs2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1000553270/reactions"
            },
            "updated_at": "2021-12-23T22:51:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1000553270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4504/comments",
    "created_at": "2021-12-18T21:42:44Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/47483928?v=4",
                "events_url": "https://api.github.com/users/Keithcat1/events{/privacy}",
                "followers_url": "https://api.github.com/users/Keithcat1/followers",
                "following_url": "https://api.github.com/users/Keithcat1/following{/other_user}",
                "gists_url": "https://api.github.com/users/Keithcat1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Keithcat1",
                "id": 47483928,
                "login": "Keithcat1",
                "node_id": "MDQ6VXNlcjQ3NDgzOTI4",
                "organizations_url": "https://api.github.com/users/Keithcat1/orgs",
                "received_events_url": "https://api.github.com/users/Keithcat1/received_events",
                "repos_url": "https://api.github.com/users/Keithcat1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Keithcat1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Keithcat1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Keithcat1"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-12-18T22:29:12Z",
            "event": "renamed",
            "id": 5788527377,
            "node_id": "RTE_lADOABDGAc5Am8mUzwAAAAFZBesR",
            "performed_via_github_app": null,
            "rename": {
                "from": "Fused type inferance doesn't work when fused type includes arrays",
                "to": "Fused type inference doesn't work when fused type includes arrays"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/5788527377"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4504/events",
    "html_url": "https://github.com/cython/cython/issues/4504",
    "id": 1083951508,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4504/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5Am8mU",
    "number": 4504,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4504/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4504/timeline",
    "title": "Fused type inference doesn't work when fused type includes arrays",
    "updated_at": "2021-12-23T22:51:23Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4504",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/47483928?v=4",
        "events_url": "https://api.github.com/users/Keithcat1/events{/privacy}",
        "followers_url": "https://api.github.com/users/Keithcat1/followers",
        "following_url": "https://api.github.com/users/Keithcat1/following{/other_user}",
        "gists_url": "https://api.github.com/users/Keithcat1/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Keithcat1",
        "id": 47483928,
        "login": "Keithcat1",
        "node_id": "MDQ6VXNlcjQ3NDgzOTI4",
        "organizations_url": "https://api.github.com/users/Keithcat1/orgs",
        "received_events_url": "https://api.github.com/users/Keithcat1/received_events",
        "repos_url": "https://api.github.com/users/Keithcat1/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Keithcat1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Keithcat1/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Keithcat1"
    }
}