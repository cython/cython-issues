{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\nThe [code object cache used for tracebacks](https://github.com/cython/cython/blob/6a60479de2871e9d776fc984c4158c2e6092769b/Cython/Utility/ModuleSetupCode.c#L1618) is not thread-safe under the free-threaded build. There's a few different solutions we could go with:\n\n1. Turn off the cache under the free-threaded build. \n2. Make the cache thread-local.\n3. Make the cache thread-safe.\n\n### Code to reproduce the behaviour:\n\nSteps to reproduce:\n1. Compile CPython with debug symbols and thread sanitizer support (`./configure --with-thread-sanitizer` when building)\n2. Compile the following extension module, again with thread sanitizer support (doing `CFLAGS=\"-fsanitize=thread\" pip install .` should suffice)\n\n   ```cython\n   # cython: freethreading_compatible=True\n\n   def tmp():\n       try:\n           1 / 0\n       except ZeroDivisionError:\n           print(\"error\")\n   ```\n\n3. Run this helper:\n\n   ```python\n   import threading\n   import tmp\n   \n   def f(barrier):\n       barrier.wait()\n       tmp.tmp()\n\n   NUM_THREADS = 10\n   barrier = threading.Barrier(NUM_THREADS)\n   threads = []\n   for _ in range(NUM_THREADS):\n       threads.append(threading.Thread(target=f, args=(barrier,)))\n\n   for thread in threads:\n       thread.start()\n\n   for thread in threads:\n       thread.join()\n   ```\n\nIt might take a few times for the data race to be triggered, but I can reproduce the following traceback pretty consistently.\n\n<details>\n<summary>TSAN traceback</summary>\n\n```\n==================\nWARNING: ThreadSanitizer: data race (pid=80369)\n  Read of size 8 at 0x00014aa4ca20 by thread T5:\n    #0 __pyx_find_code_object tmp.c:5102 (tmp.cpython-313td-darwin.so:arm64+0xc218)\n    #1 __Pyx_AddTraceback tmp.c:5283 (tmp.cpython-313td-darwin.so:arm64+0x4d28)\n    #2 __pyx_pf_3tmp_tmp tmp.c:2259 (tmp.cpython-313td-darwin.so:arm64+0xabb0)\n    #3 __pyx_pw_3tmp_1tmp tmp.c:2185 (tmp.cpython-313td-darwin.so:arm64+0xaa48)\n    #4 __Pyx_CyFunction_Vectorcall_NOARGS tmp.c:4735 (tmp.cpython-313td-darwin.so:arm64+0xa3d0)\n    #5 _PyObject_VectorcallTstate pycore_call.h:168 (python3.13:arm64+0x1000e634c)\n    #6 PyObject_Vectorcall call.c:327 (python3.13:arm64+0x1000e7e00)\n    #7 _PyEval_EvalFrameDefault generated_cases.c.h:813 (python3.13:arm64+0x10031a2d0)\n    #8 _PyEval_Vector ceval.c:1812 (python3.13:arm64+0x100314ce8)\n    #9 _PyFunction_Vectorcall call.c (python3.13:arm64+0x1000e8340)\n    #10 _PyObject_VectorcallTstate pycore_call.h:168 (python3.13:arm64+0x1000edc3c)\n    #11 method_vectorcall classobject.c:70 (python3.13:arm64+0x1000ec178)\n    #12 _PyVectorcall_Call call.c:273 (python3.13:arm64+0x1000e7cb4)\n    #13 _PyObject_Call call.c:348 (python3.13:arm64+0x1000e7efc)\n    #14 PyObject_Call call.c:373 (python3.13:arm64+0x1000e8128)\n    #15 thread_run _threadmodule.c:337 (python3.13:arm64+0x1004fe5a4)\n    #16 pythread_wrapper thread_pthread.h:243 (python3.13:arm64+0x100445658)\n\n  Previous write of size 8 at 0x00014aa4ca20 by thread T10:\n    #0 __pyx_insert_code_object tmp.c:5123 (tmp.cpython-313td-darwin.so:arm64+0xc8e0)\n    #1 __Pyx_AddTraceback tmp.c:5297 (tmp.cpython-313td-darwin.so:arm64+0x4e38)\n    #2 __pyx_pf_3tmp_tmp tmp.c:2259 (tmp.cpython-313td-darwin.so:arm64+0xabb0)\n    #3 __pyx_pw_3tmp_1tmp tmp.c:2185 (tmp.cpython-313td-darwin.so:arm64+0xaa48)\n    #4 __Pyx_CyFunction_Vectorcall_NOARGS tmp.c:4735 (tmp.cpython-313td-darwin.so:arm64+0xa3d0)\n    #5 _PyObject_VectorcallTstate pycore_call.h:168 (python3.13:arm64+0x1000e634c)\n    #6 PyObject_Vectorcall call.c:327 (python3.13:arm64+0x1000e7e00)\n    #7 _PyEval_EvalFrameDefault generated_cases.c.h:813 (python3.13:arm64+0x10031a2d0)\n    #8 _PyEval_Vector ceval.c:1812 (python3.13:arm64+0x100314ce8)\n    #9 _PyFunction_Vectorcall call.c (python3.13:arm64+0x1000e8340)\n    #10 _PyObject_VectorcallTstate pycore_call.h:168 (python3.13:arm64+0x1000edc3c)\n    #11 method_vectorcall classobject.c:70 (python3.13:arm64+0x1000ec178)\n    #12 _PyVectorcall_Call call.c:273 (python3.13:arm64+0x1000e7cb4)\n    #13 _PyObject_Call call.c:348 (python3.13:arm64+0x1000e7efc)\n    #14 PyObject_Call call.c:373 (python3.13:arm64+0x1000e8128)\n    #15 thread_run _threadmodule.c:337 (python3.13:arm64+0x1004fe5a4)\n    #16 pythread_wrapper thread_pthread.h:243 (python3.13:arm64+0x100445658)\n\n  Location is global '__pyx_code_cache' at 0x00014aa4ca18 (tmp.cpython-313td-darwin.so+0x14a20)\n\n  Thread T5 (tid=6304385, running) created by main thread at:\n    #0 pthread_create <null>:103815856 (libclang_rt.tsan_osx_dynamic.dylib:arm64e+0x309d8)\n    #1 do_start_joinable_thread thread_pthread.h:290 (python3.13:arm64+0x1004441ac)\n    #2 PyThread_start_joinable_thread thread_pthread.h:314 (python3.13:arm64+0x100443ff0)\n    #3 do_start_new_thread _threadmodule.c:1849 (python3.13:arm64+0x1004fe0b8)\n    #4 thread_PyThread_start_joinable_thread _threadmodule.c:1972 (python3.13:arm64+0x1004fcb98)\n    #5 cfunction_call methodobject.c:540 (python3.13:arm64+0x10019bc40)\n    #6 _PyObject_MakeTpCall call.c:242 (python3.13:arm64+0x1000e6a4c)\n    #7 _PyObject_VectorcallTstate pycore_call.h:166 (python3.13:arm64+0x1000e63b4)\n    #8 PyObject_Vectorcall call.c:327 (python3.13:arm64+0x1000e7e00)\n    #9 _PyEval_EvalFrameDefault generated_cases.c.h:1502 (python3.13:arm64+0x10031ddc4)\n    #10 _PyEval_Vector ceval.c:1812 (python3.13:arm64+0x100314ce8)\n    #11 PyEval_EvalCode ceval.c:602 (python3.13:arm64+0x100314950)\n    #12 run_eval_code_obj pythonrun.c:1337 (python3.13:arm64+0x1004281a0)\n    #13 run_mod pythonrun.c:1422 (python3.13:arm64+0x100427cd4)\n    #14 _PyRun_SimpleFileObject pythonrun.c:490 (python3.13:arm64+0x10042267c)\n    #15 _PyRun_AnyFileObject pythonrun.c:77 (python3.13:arm64+0x100421e9c)\n    #16 Py_RunMain main.c:776 (python3.13:arm64+0x10045d624)\n    #17 pymain_main main.c:806 (python3.13:arm64+0x10045e26c)\n    #18 Py_BytesMain main.c:830 (python3.13:arm64+0x10045e2e8)\n    #19 main python.c:15 (python3.13:arm64+0x100000dc0)\n\n  Thread T10 (tid=6304390, running) created by main thread at:\n    #0 pthread_create <null>:103813504 (libclang_rt.tsan_osx_dynamic.dylib:arm64e+0x309d8)\n    #1 do_start_joinable_thread thread_pthread.h:290 (python3.13:arm64+0x1004441ac)\n    #2 PyThread_start_joinable_thread thread_pthread.h:314 (python3.13:arm64+0x100443ff0)\n    #3 do_start_new_thread _threadmodule.c:1849 (python3.13:arm64+0x1004fe0b8)\n    #4 thread_PyThread_start_joinable_thread _threadmodule.c:1972 (python3.13:arm64+0x1004fcb98)\n    #5 cfunction_call methodobject.c:540 (python3.13:arm64+0x10019bc40)\n    #6 _PyObject_MakeTpCall call.c:242 (python3.13:arm64+0x1000e6a4c)\n    #7 _PyObject_VectorcallTstate pycore_call.h:166 (python3.13:arm64+0x1000e63b4)\n    #8 PyObject_Vectorcall call.c:327 (python3.13:arm64+0x1000e7e00)\n    #9 _PyEval_EvalFrameDefault generated_cases.c.h:1502 (python3.13:arm64+0x10031ddc4)\n    #10 _PyEval_Vector ceval.c:1812 (python3.13:arm64+0x100314ce8)\n    #11 PyEval_EvalCode ceval.c:602 (python3.13:arm64+0x100314950)\n    #12 run_eval_code_obj pythonrun.c:1337 (python3.13:arm64+0x1004281a0)\n    #13 run_mod pythonrun.c:1422 (python3.13:arm64+0x100427cd4)\n    #14 _PyRun_SimpleFileObject pythonrun.c:490 (python3.13:arm64+0x10042267c)\n    #15 _PyRun_AnyFileObject pythonrun.c:77 (python3.13:arm64+0x100421e9c)\n    #16 Py_RunMain main.c:776 (python3.13:arm64+0x10045d624)\n    #17 pymain_main main.c:806 (python3.13:arm64+0x10045e26c)\n    #18 Py_BytesMain main.c:830 (python3.13:arm64+0x10045e2e8)\n    #19 main python.c:15 (python3.13:arm64+0x100000dc0)\n\nSUMMARY: ThreadSanitizer: data race tmp.c:5102 in __pyx_find_code_object\n==================\n```\n\n</details>\n\n### Expected behaviour\n\nNo data races.\n\n### OS\n\nmacOS\n\n### Python version\n\n3.13t\n\n### Cython version\n\nNightly\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'll have a look later. I suspect we want to keep the cache even under free-threaded build. I think it's a reasonable time saving. \n\nI also think it wants to move into the module state, but that's slightly tangentially to the thread safety issue.",
            "created_at": "2025-02-12T12:15:58Z",
            "html_url": "https://github.com/cython/cython/issues/6663#issuecomment-2653545890",
            "id": 2653545890,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6663",
            "node_id": "IC_kwDOABDGAc6eKeWi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2653545890/reactions"
            },
            "updated_at": "2025-02-12T12:15:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2653545890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6663/comments",
    "created_at": "2025-02-12T11:11:44Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-12T21:24:41Z",
            "event": "labeled",
            "id": 16287302021,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc6pv88tzwAAAAPKzIGF",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16287302021"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-12T21:24:41Z",
            "event": "labeled",
            "id": 16287302026,
            "label": {
                "color": "A37CC3",
                "name": "freethreading CPython"
            },
            "node_id": "LE_lADOABDGAc6pv88tzwAAAAPKzIGK",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16287302026"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6663/events",
    "html_url": "https://github.com/cython/cython/issues/6663",
    "id": 2847919917,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "A37CC3",
            "default": false,
            "description": "",
            "id": 6871764375,
            "name": "freethreading CPython",
            "node_id": "LA_kwDOABDGAc8AAAABmZbNlw",
            "url": "https://api.github.com/repos/cython/cython/labels/freethreading%20CPython"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6663/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6pv88t",
    "number": 6663,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6663/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6663/timeline",
    "title": "[BUG] Code object cache for tracebacks is not thread-safe",
    "updated_at": "2025-02-12T21:24:41Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6663",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20306270?v=4",
        "events_url": "https://api.github.com/users/lysnikolaou/events{/privacy}",
        "followers_url": "https://api.github.com/users/lysnikolaou/followers",
        "following_url": "https://api.github.com/users/lysnikolaou/following{/other_user}",
        "gists_url": "https://api.github.com/users/lysnikolaou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lysnikolaou",
        "id": 20306270,
        "login": "lysnikolaou",
        "node_id": "MDQ6VXNlcjIwMzA2Mjcw",
        "organizations_url": "https://api.github.com/users/lysnikolaou/orgs",
        "received_events_url": "https://api.github.com/users/lysnikolaou/received_events",
        "repos_url": "https://api.github.com/users/lysnikolaou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lysnikolaou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lysnikolaou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lysnikolaou",
        "user_view_type": "public"
    }
}