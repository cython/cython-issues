{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nWhen cython.pymutex is used in a cdef public class in some pxd, cimporting the pxd from another file leads to compilation error.\n\n### Code to reproduce the behaviour:\n\nIn directory `blah`:\n\n`__init__.py`\n```\n# EMPTY\n```\n\na.pxd\n```\ncimport cython\n\ncdef class A:\n    cdef cython.pymutex mu\n```\n\n\na.pyx\n```\ncdef class A:\n    def __init__(self):\n        pass\n\n    def hello(self):\n        with self.mu:\n            print(\"Hello from A\")\n```\n\nb.pxd\n```\nfrom .a cimport A\n\ncdef class B:\n    cdef A a\n```\n\nb.pyx\n```\nfrom .a cimport A\n\ncdef class B:\n    def __init__(self):\n        self.a = A()\n\n    def hello(self):\n        print(\"Hello from B\")\n        self.a.hello()\n```\n\n\ncythonize -i a.pyx: OK\n\ncythonize -i b.pyx: error: unknown type name ‘__Pyx_Locks_PyMutex’\n\n### Expected behaviour\n\nCompilation succeeds\n\n### OS\n\nLinux\n\n### Python version\n\n3.13.5\n\n### Cython version\n\n3.1.2\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. I'm now running into the same issue in lxml, trying to support freethreading Python by adding locks to existing public classes.\n\nThis is difficult to resolve because the declarations differ in the Limited-API. Thus, if the module that defines the cdef class is compiled against the Limited-API and the module that cimports it is not (or vice versa), they will not assume the correct type struct size and layout on both sides.\n\nIt's unfortunate that this was already released in Cython 3.1, but OTOH, lucky that it fails to compile. So it was previously unusable, which now allows incompatible changes – which are probably needed.\n\nWe could change the struct size of public cdef classes such that they always use the same size for public PyMutex fields, e.g. by using a union of both possible types. That wouldn't allow actually using the mutex on the cimporting side, but it would at least allow compilation.\n\nWe could also prevent the compilation in the Limited-API if a mutex attribute is used in a public cdef class. But that would make users start to use it in non-Limited-API code and tie us to the struct layouts. We should at least be sure that we can keep it working in the future if we do that.\n\nSo, maybe do both?",
            "created_at": "2025-08-23T04:46:51Z",
            "html_url": "https://github.com/cython/cython/issues/6995#issuecomment-3216242962",
            "id": 3216242962,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6995",
            "node_id": "IC_kwDOABDGAc6_s_kS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3216242962/reactions"
            },
            "updated_at": "2025-08-23T04:46:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3216242962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think this is fixed by #7002\n\n> We could also prevent the compilation in the Limited-API if a mutex attribute is used in a public cdef class\n\nhttps://github.com/cython/cython/blob/fc5584cf0783cfdb598af6e229ef66b0b4c57eaa/Cython/Utility/Synchronization.c#L371-L376\n\nI already did that in the initial implementation (I suspect it isn't perfect about when it gets triggered, but it's mostly OK).\n\nSo I don't think the Limited API is an issue here - you can't mix Limited API and non-Limited API when using PyMutex, but that is really all we can do. People that want to mix can use pythread_type_lock instead.",
            "created_at": "2025-08-23T06:23:44Z",
            "html_url": "https://github.com/cython/cython/issues/6995#issuecomment-3216397082",
            "id": 3216397082,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6995",
            "node_id": "IC_kwDOABDGAc6_tlMa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3216397082/reactions"
            },
            "updated_at": "2025-08-23T06:24:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3216397082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6995/comments",
    "created_at": "2025-06-29T19:01:45Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": "c2df5dbfa6f7cf3cc9efd4cc4a44b02d15263ac6",
            "commit_url": "https://api.github.com/repos/scoder/lxml/commits/c2df5dbfa6f7cf3cc9efd4cc4a44b02d15263ac6",
            "created_at": "2025-08-23T05:21:17Z",
            "event": "referenced",
            "id": 19299072634,
            "node_id": "REFE_lADOABDGAc697aJwzwAAAAR-UHp6",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/19299072634"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6995/events",
    "html_url": "https://github.com/cython/cython/issues/6995",
    "id": 3186467440,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6995/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc697aJw",
    "number": 6995,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6995/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6995/timeline",
    "title": "[BUG] error: unknown type name ‘__Pyx_Locks_PyMutex’",
    "type": null,
    "updated_at": "2025-08-23T06:24:22Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6995",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3155613?v=4",
        "events_url": "https://api.github.com/users/stephane-martin/events{/privacy}",
        "followers_url": "https://api.github.com/users/stephane-martin/followers",
        "following_url": "https://api.github.com/users/stephane-martin/following{/other_user}",
        "gists_url": "https://api.github.com/users/stephane-martin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/stephane-martin",
        "id": 3155613,
        "login": "stephane-martin",
        "node_id": "MDQ6VXNlcjMxNTU2MTM=",
        "organizations_url": "https://api.github.com/users/stephane-martin/orgs",
        "received_events_url": "https://api.github.com/users/stephane-martin/received_events",
        "repos_url": "https://api.github.com/users/stephane-martin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/stephane-martin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stephane-martin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/stephane-martin",
        "user_view_type": "public"
    }
}