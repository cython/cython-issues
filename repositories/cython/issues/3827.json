{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "**Describe the bug**\r\nThe code generated when assigning a memory view `a` to itself,  `a = a`, does not function correctly with regards to reference counting. When doing this outside of a function, an `UnboundLocalError` is raised the next time `a` is used. When doing this inside a function, a segfault occurs.\r\n\r\n**To Reproduce**\r\n```cython\r\nimport numpy as np\r\n\r\ncdef int[::1] a\r\na = np.zeros(1, dtype=np.intc)\r\nprint('before bad assignment:', a[0])\r\na = a\r\nprint('after bad assignment:', a[0])\r\n```\r\n\r\n**Expected behavior**\r\nThe above should of course print\r\n```\r\nbefore bad assignment: 0\r\nafter bad assignment: 0\r\n```\r\nIn actuality only the first line is written, as the code fails on the last `a[0]` lookup. When doing this outside of a function, we get\r\n```\r\nUnboundLocalError: local variable 'a' referenced before assignment\r\n```\r\n\r\n**Environment**\r\n - OS: Linux Mint 19.3\r\n - Python version: 3.8.2\r\n - Cython version: 0.29.16\r\n\r\n\r\n**Additional context**\r\nLooking at the generated C code, the problematic `a = a` statement turns into\r\n```C\r\n__PYX_XDEC_MEMVIEW(&__pyx_v_a, 1);\r\n__PYX_INC_MEMVIEW(&__pyx_v_a, 0);\r\n__pyx_v_a = __pyx_v_a;\r\n```\r\nI'm not familiar with the details of `__PYX_XDEC_MEMVIEW` and `__PYX_INC_MEMVIEW`, but I presume they decrement and increment the reference count of `__pyx_v_a` (i.e. `a`). Removing these two lines and keeping only the bottom one fixes the issue.\r\n\r\nOne can of course just as well remove all three lines, since `__pyx_v_a = __pyx_v_a` is guaranteed to be a no-op (it will be optimized away by the C compiler anyway).",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. Indeed, this looks wrong. It should incref _before_ the decref in an assignment, for exacly this reason. Probably easy to fix, just an ordering in the code generation of the assignment (`SingleAssignmentNode` in `Nodes.py`). PR welcome. Tests go into `tests/memoryview/memslice.pyx`, somewhere near the top (since it's pretty basic).\r\n\r\n> When doing this outside of a function, we get `UnboundLocalError`\r\n\r\nThat seems surprising. There are no local variables outside of a function. Are you saying that this is the result of the module level code that you show above?\r\n\r\n> One can of course just as well remove all three lines\r\n\r\nSure, but it's not worth doing in Cython, because a) no real code would benefit from it and b), as you wrote:\r\n\r\n> it will be optimized away by the C compiler anyway",
            "created_at": "2020-09-15T14:23:47Z",
            "html_url": "https://github.com/cython/cython/issues/3827#issuecomment-692749478",
            "id": 692749478,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3827",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mjc0OTQ3OA==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T14:23:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692749478",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> It should incref _before_ the decref in an assignment, for exacly this reason\r\n\r\nI tried this patch yesterday and it didn't fix it... At that point I got a bit stuck. But I don't think it's quite as simple as it looks.\r\n\r\n> That seems surprising. There are no local variables outside of a function. Are you saying that this is the result of the module level code that you show above?\r\n\r\nThis was my result too - `UnboundLocalError` when the code is run at module scope, segmentation fault inside a function.",
            "created_at": "2020-09-15T17:14:37Z",
            "html_url": "https://github.com/cython/cython/issues/3827#issuecomment-692853763",
            "id": 692853763,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3827",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mjg1Mzc2Mw==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T17:14:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692853763",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> [`UnboundLocalError`] Are you saying that this is the result of the module level code that you show above?\r\n\r\nSurprisingly, yes. One does not get a `NameError`. Checking the generated code, we indeed see\r\n```cython\r\nif (unlikely(!__pyx_v_3bug_a.memview)) { __Pyx_RaiseUnboundLocalError(\"a\"); __PYX_ERR(0, 6, __pyx_L1_error) }\r\n```\r\nwhen my sample code is placed at the module level. When inside a function, no `__Pyx_RaiseUnboundLocalError(\"a\")` is generated, leading to the segfault instead.\r\n\r\nAs @da-woods writes, placing the `__PYX_INC_MEMVIEW` before the `__PYX_XDEC_MEMVIEW` does not solve the issue.\r\n",
            "created_at": "2020-09-15T17:19:55Z",
            "html_url": "https://github.com/cython/cython/issues/3827#issuecomment-692856578",
            "id": 692856578,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3827",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mjg1NjU3OA==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T17:19:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692856578",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/9202794?v=4",
                "events_url": "https://api.github.com/users/jmd-dk/events{/privacy}",
                "followers_url": "https://api.github.com/users/jmd-dk/followers",
                "following_url": "https://api.github.com/users/jmd-dk/following{/other_user}",
                "gists_url": "https://api.github.com/users/jmd-dk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jmd-dk",
                "id": 9202794,
                "login": "jmd-dk",
                "node_id": "MDQ6VXNlcjkyMDI3OTQ=",
                "organizations_url": "https://api.github.com/users/jmd-dk/orgs",
                "received_events_url": "https://api.github.com/users/jmd-dk/received_events",
                "repos_url": "https://api.github.com/users/jmd-dk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jmd-dk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jmd-dk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jmd-dk"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I think the issue is that `__Pyx_XDEC_MEMVIEW` is actually misnamed a bit and really acts more like `Py_CLEAR`. That probably also explains why I wasn't able to get memoryviews under quite the same reference counting scheme as PyObjects.\r\n\r\nFor the sake of this bug I think we either have to identify that the two sides have the same cname and not generate the code, or we have to juggle temps like `Py_DECREF_SET`.\r\n\r\nI wonder if the naming should be changed to match what it actually does though.",
            "created_at": "2020-09-15T22:37:36Z",
            "html_url": "https://github.com/cython/cython/issues/3827#issuecomment-693015993",
            "id": 693015993,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3827",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzAxNTk5Mw==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T22:37:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/693015993",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3827/comments",
    "created_at": "2020-09-14T12:56:15Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/9202794?v=4",
                "events_url": "https://api.github.com/users/jmd-dk/events{/privacy}",
                "followers_url": "https://api.github.com/users/jmd-dk/followers",
                "following_url": "https://api.github.com/users/jmd-dk/following{/other_user}",
                "gists_url": "https://api.github.com/users/jmd-dk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jmd-dk",
                "id": 9202794,
                "login": "jmd-dk",
                "node_id": "MDQ6VXNlcjkyMDI3OTQ=",
                "organizations_url": "https://api.github.com/users/jmd-dk/orgs",
                "received_events_url": "https://api.github.com/users/jmd-dk/received_events",
                "repos_url": "https://api.github.com/users/jmd-dk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jmd-dk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jmd-dk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jmd-dk"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-09-14T12:56:29Z",
            "event": "renamed",
            "id": 3763183473,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mzc2MzE4MzQ3Mw==",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] Wrong reference counting when assigning a memory view to itself",
                "to": "[BUG] Bad reference counting when assigning a memory view to itself"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/3763183473"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-09-15T14:10:27Z",
            "event": "labeled",
            "id": 3768557994,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDM3Njg1NTc5OTQ=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3768557994"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-09-15T14:10:27Z",
            "event": "labeled",
            "id": 3768557999,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDM3Njg1NTc5OTk=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3768557999"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-09-15T17:19:55Z",
            "event": "mentioned",
            "id": 3769486697,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc2OTQ4NjY5Nw==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3769486697"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-09-15T17:19:55Z",
            "event": "subscribed",
            "id": 3769486702,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3Njk0ODY3MDI=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3769486702"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3827/events",
    "html_url": "https://github.com/cython/cython/issues/3827",
    "id": 701070391,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3827/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3MDEwNzAzOTE=",
    "number": 3827,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] Bad reference counting when assigning a memory view to itself",
    "updated_at": "2020-09-15T22:37:36Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3827",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/9202794?v=4",
        "events_url": "https://api.github.com/users/jmd-dk/events{/privacy}",
        "followers_url": "https://api.github.com/users/jmd-dk/followers",
        "following_url": "https://api.github.com/users/jmd-dk/following{/other_user}",
        "gists_url": "https://api.github.com/users/jmd-dk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jmd-dk",
        "id": 9202794,
        "login": "jmd-dk",
        "node_id": "MDQ6VXNlcjkyMDI3OTQ=",
        "organizations_url": "https://api.github.com/users/jmd-dk/orgs",
        "received_events_url": "https://api.github.com/users/jmd-dk/received_events",
        "repos_url": "https://api.github.com/users/jmd-dk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jmd-dk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jmd-dk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jmd-dk"
    }
}