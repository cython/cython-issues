{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nSee below\n\n### Code to reproduce the behaviour:\n\n```cython\nclass A:\n    def __getattr__(self, name):\n        return None\n\n\n%load_ext cython\n\n%%cython\nimport cython\nclass B:\n    def __getattr__(self, name):\n        return None\n\n@cython.cclass\nclass C:\n    def __getattr__(self, name):\n        return None\n\na = A()\nb = B()\nc = C()\n\n%timeit a.a     # 100 ns\n%timeit b.a     #  60 ns\n%timeit c.a     # 560 ns\n```\n\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nmacOS\n\n### Python version\n\n3.12\n\n### Cython version\n\n3.0.11\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "If you go back to Python 3.11 you find that all 3 cases are the same order of magnitude as the slow case and the Cython cclass case is the quickest of the 3. So what's really happened here is that Python's managed to optimize the other 2 cases.\n\nWith that said, it may be possible to improve it.",
            "created_at": "2025-02-01T17:12:38Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629032174",
            "id": 2629032174,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6cs9ju",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629032174/reactions"
            },
            "updated_at": "2025-02-01T17:12:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629032174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can't see an easy way to improve it\n\n(I'd wondered if it'd work if you just didn't set `tp_getattro` and let it fall back to the default mechanism with a lookup of `__getattr__` as a string. That doesn't work though.)\n\nUsing `__getattribute__` is quick though. I know the behaviour isn't the same.",
            "created_at": "2025-02-01T17:47:34Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629044452",
            "id": 2629044452,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctAjk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629044452/reactions"
            },
            "updated_at": "2025-02-01T17:47:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629044452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "For this specific case `__getattribute__` will work for me. Thanks.\n\nI am not very familiar with `cython`.\nWhat is the main difference between normal and `cclass` which causes these differences in behaviour?",
            "created_at": "2025-02-01T17:52:59Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629046475",
            "id": 2629046475,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctBDL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629046475/reactions"
            },
            "updated_at": "2025-02-01T17:52:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629046475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
                "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
                "followers_url": "https://api.github.com/users/dg-pb/followers",
                "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
                "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dg-pb",
                "id": 3577712,
                "login": "dg-pb",
                "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
                "organizations_url": "https://api.github.com/users/dg-pb/orgs",
                "received_events_url": "https://api.github.com/users/dg-pb/received_events",
                "repos_url": "https://api.github.com/users/dg-pb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dg-pb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's slightly difficult to answer because the Python interpreter is doing some magic that I don't know to optimize it. But:\n\n`class B` in Cython is defined with almost exactly the same mechanism as `class A` in Python. The only real difference is that its methods are compiled. So from the point of view of the Python interpreter `A` and `B` are basically the same.\n\nA bit of a guess at what it might be able to do:\n* spot that `A/B` uses the normal PyObject `tp_getattro` slot. That will never change so once you've identified that you can always treat every instance of the class the same. And it's a mechanism the interpreter understands.\n* cache the result of the lookup of `__getattr__` in the class dict.\n* knows that the instance dictionary hasn't changed since last time you used it, so it can skip the lookup of `\"a\"` and proceed directly to the `__getattr__` call.\n \nThis'll probably all be done in the adaptive bytecode, so essentially a few quick checks that the assumptions still hold, and then replace the bytecode at the call-site.\n\nIn contrast for `C`, the `tp_getattro` slot is a mysterious blob that the interpreter knows nothing about. To emulate the Python behaviour Cython first calls `PyObject_GenericGetAttr` which looks like it isn't particularly optimized and can't benefit from the adaptive optimizations because it's in C code. When that fails it calls your `__getattr__` function (which will be fast).",
            "created_at": "2025-02-01T18:09:33Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629052651",
            "id": 2629052651,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctCjr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629052651/reactions"
            },
            "updated_at": "2025-02-01T18:11:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629052651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "But you'll get a better answer if you take the Cython bit out and ask the CPython people \"what have you done to speed up `A` between Python3.11 and 3.12?\"",
            "created_at": "2025-02-01T18:13:34Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629054245",
            "id": 2629054245,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctC8l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629054245/reactions"
            },
            "updated_at": "2025-02-01T18:13:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629054245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "So if I was to write these 2 by hand, what is the key difference?\nAre there examples of each in CPython repo? (I would like to avoid reading `cython` compiled `*.c`...)",
            "created_at": "2025-02-01T18:40:51Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629064430",
            "id": 2629064430,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctFbu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629064430/reactions"
            },
            "updated_at": "2025-02-01T18:40:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629064430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
                "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
                "followers_url": "https://api.github.com/users/dg-pb/followers",
                "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
                "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dg-pb",
                "id": 3577712,
                "login": "dg-pb",
                "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
                "organizations_url": "https://api.github.com/users/dg-pb/orgs",
                "received_events_url": "https://api.github.com/users/dg-pb/received_events",
                "repos_url": "https://api.github.com/users/dg-pb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dg-pb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> these 2 by hand\n\nWhat's \"these 2\" in this context?",
            "created_at": "2025-02-01T18:43:20Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629065222",
            "id": 2629065222,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctFoG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629065222/reactions"
            },
            "updated_at": "2025-02-01T18:43:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629065222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Cython compiled class and cython compiled class with `@cclass` decorator.",
            "created_at": "2025-02-01T18:50:15Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629067790",
            "id": 2629067790,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctGQO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629067790/reactions"
            },
            "updated_at": "2025-02-01T18:50:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629067790",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
                "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
                "followers_url": "https://api.github.com/users/dg-pb/followers",
                "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
                "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dg-pb",
                "id": 3577712,
                "login": "dg-pb",
                "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
                "organizations_url": "https://api.github.com/users/dg-pb/orgs",
                "received_events_url": "https://api.github.com/users/dg-pb/received_events",
                "repos_url": "https://api.github.com/users/dg-pb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dg-pb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I imagine `class C` is done along the lines of: https://docs.python.org/3/c-api/typeobj.html#examples\n\nI am just having a bit of trouble understanding how `class B` is constructed.",
            "created_at": "2025-02-01T18:57:10Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629070284",
            "id": 2629070284,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctG3M",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629070284/reactions"
            },
            "updated_at": "2025-02-01T18:57:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629070284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
                "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
                "followers_url": "https://api.github.com/users/dg-pb/followers",
                "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
                "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dg-pb",
                "id": 3577712,
                "login": "dg-pb",
                "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
                "organizations_url": "https://api.github.com/users/dg-pb/orgs",
                "received_events_url": "https://api.github.com/users/dg-pb/received_events",
                "repos_url": "https://api.github.com/users/dg-pb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dg-pb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The class with the `cclass` decorator is effectively just the first example in https://docs.python.org/3/extending/newtypes_tutorial.html. The only interesting difference is that it has\n\n``` C\nstatic PyObject *__pyx_tp_getattro_5gattr_C(PyObject *o, PyObject *n) {\n  PyObject *v = PyObject_GenericGetAttr(o, n);\n  if (!v && PyErr_ExceptionMatches(PyExc_AttributeError)) {\n    PyErr_Clear();\n    v = Py_NewRef(Py_None);\n  }\n  return v;\n}\n```\nand\n``` C\n.tp_getattro = __pyx_tp_getattro_5gattr_C\n```\nadded to the initialization of `CustomType`.\n\nThe Cython compiled class isn't very interesting. It's fiddly to replicated in C code but it's effectively just the Python code:\n\n``` python\ntype(\n    \"B\",  # name\n    (),  # bases\n    {\"__getattr__\", getattrfunc}  # dict\n)\n```\n\nwhere `getattrfunc` is just an arbitrary callable object that ends up calling a C function that's pretty close to `Py_RETURN_NONE` and nothing else.",
            "created_at": "2025-02-01T18:59:12Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629070892",
            "id": 2629070892,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctHAs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629070892/reactions"
            },
            "updated_at": "2025-02-01T18:59:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629070892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks, it is clearer now.\n\nMy guess is that it would be \"fixed\" if `Py_TPFLAGS_MANAGED_DICT` was set.\n\nHowever, it can only be done for heap types which requires multi-phase initialised module if I understand correctly.\n\nWould this be achievable?",
            "created_at": "2025-02-01T19:22:20Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629079074",
            "id": 2629079074,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctJAi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629079074/reactions"
            },
            "updated_at": "2025-02-01T19:22:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629079074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
                "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
                "followers_url": "https://api.github.com/users/dg-pb/followers",
                "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
                "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dg-pb",
                "id": 3577712,
                "login": "dg-pb",
                "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
                "organizations_url": "https://api.github.com/users/dg-pb/orgs",
                "received_events_url": "https://api.github.com/users/dg-pb/received_events",
                "repos_url": "https://api.github.com/users/dg-pb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dg-pb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My guess is that it would be \"fixed\" if `Py_TPFLAGS_MANAGED_DICT` was set.\n\nDoesn't fix it and I wouldn't really expect it to.",
            "created_at": "2025-02-01T19:45:59Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629086537",
            "id": 2629086537,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctK1J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629086537/reactions"
            },
            "updated_at": "2025-02-01T19:45:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629086537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Setting that flag does have an effect on attribute access (at least on 3.14). E.g.:\n```python\nimport types\nimport typing\na = types.SimpleNamespace(a=1)   # static type\nb = partial(lambda: None)    # Heap, \nc = typing.TypeVar(\"a\")      # Heap, has Py_TPFLAGS_MANAGED_DICT\n\nb.a = 1\nc.a = 1\n\n# 3.12\n%timeit a.a    # 48 ns\n%timeit b.a    # 48 ns\n%timeit c.a    # 48 ns\n\n# 3.13\n%timeit a.a    # 45 ns\n%timeit b.a    # 40 ns\n%timeit c.a    # 40 ns\n\n# 3.14\n%timeit a.a    # 40 ns\n%timeit b.a    # 40 ns\n%timeit c.a    # 10 ns\n```\n\nAttribute access speed improvement for normal python classes happened at 3.12.\nSee: https://discuss.python.org/t/add-builtins-namespace/78343/14\n\nHowever, `C` classes (although introduced a flag at 3.12) seem to have received the speed benefit later than that.\n\n`_PyObject_GenericGetAttrWithDict` has extra logic for it and there were changes between 3.12 and 3.13. but not between 3.13 and 3.14.\n\nEither way, for some reason on 3.14 attribute access is 4x faster for C-defined classes with *the flag*.\nMy best guess is that it has something to do with `Py_TPFLAGS_MANAGED_DICT`, but I might be wrong...",
            "created_at": "2025-02-01T20:38:51Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629104264",
            "id": 2629104264,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctPKI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629104264/reactions"
            },
            "updated_at": "2025-02-01T20:38:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629104264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
                "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
                "followers_url": "https://api.github.com/users/dg-pb/followers",
                "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
                "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dg-pb",
                "id": 3577712,
                "login": "dg-pb",
                "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
                "organizations_url": "https://api.github.com/users/dg-pb/orgs",
                "received_events_url": "https://api.github.com/users/dg-pb/received_events",
                "repos_url": "https://api.github.com/users/dg-pb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dg-pb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The vast majority of Cython `cclass` classes don't have a dict at all (and thus they behave very similarly to a class defined with `__slots__` in that you can't add unknown attributes to it). So it shouldn't be trying to look in a dict either way.\n\nYou can manually add a dict to a `cclass` by adding `__dict__: dict` in the body. In this case here might be an argument in favour of using `Py_TPFLAGS_MANAGED_DICT`",
            "created_at": "2025-02-01T20:44:38Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629106243",
            "id": 2629106243,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctPpD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629106243/reactions"
            },
            "updated_at": "2025-02-01T20:44:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629106243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "When `Py_TPFLAGS_MANAGED_DICT` is set, there is no need for explicit `dict` creation, it does it automatically. \n\nFor example, I think it does it here (on demand):\nhttps://github.com/python/cpython/blob/cf4c4ecc26c7e3b89f2e56893260a8a3319dab3d/Objects/object.c#L1710\n\nIt may be worth checking whether adding this improves `getattr(obj, name)` and also, whether it has an impact on `__getattr__` performance of `cython.cclass` on 3.14.",
            "created_at": "2025-02-01T20:52:16Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629109015",
            "id": 2629109015,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctQUX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629109015/reactions"
            },
            "updated_at": "2025-02-01T20:52:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629109015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
                "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
                "followers_url": "https://api.github.com/users/dg-pb/followers",
                "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
                "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dg-pb",
                "id": 3577712,
                "login": "dg-pb",
                "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
                "organizations_url": "https://api.github.com/users/dg-pb/orgs",
                "received_events_url": "https://api.github.com/users/dg-pb/received_events",
                "repos_url": "https://api.github.com/users/dg-pb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dg-pb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`@cython.cclass`es don't have a dict unless the user explicitly asks for it _by design_. We don't intend to change this because it would change their behaviour in a number of ways (e.g. increase the object size, require GC support in classes that don't have GC support right now, and more).",
            "created_at": "2025-02-01T20:59:50Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629111613",
            "id": 2629111613,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctQ89",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629111613/reactions"
            },
            "updated_at": "2025-02-01T20:59:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629111613",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yeah ok, I see.\n\nWould be still interesting to know whether that would fix the performance.\nAt any chance you can test it out without too much effort?",
            "created_at": "2025-02-01T21:03:01Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629112883",
            "id": 2629112883,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctRQz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629112883/reactions"
            },
            "updated_at": "2025-02-01T21:03:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629112883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
                "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
                "followers_url": "https://api.github.com/users/dg-pb/followers",
                "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
                "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dg-pb",
                "id": 3577712,
                "login": "dg-pb",
                "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
                "organizations_url": "https://api.github.com/users/dg-pb/orgs",
                "received_events_url": "https://api.github.com/users/dg-pb/received_events",
                "repos_url": "https://api.github.com/users/dg-pb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dg-pb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's the [specialisation code](https://github.com/python/cpython/blob/cf4c4ecc26c7e3b89f2e56893260a8a3319dab3d/Python/specialize.c#L886) that analyses attribute lookups to determine how to handle them. It specifically checks for only the builtin `getattro` slot functions to do specialisation, and if it's custom immediately fails, using the generic load-attr. So it might be better for the `C` class to also only define `__getattr__`, and avoid setting `getattro` unless `__getattribute__` is actually defined. If there is then an attribute read to specifically an object slot, I think it will successfully specialise. If it results in needing to call the C function, it'll just fail though.  ",
            "created_at": "2025-02-01T21:25:14Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629120693",
            "id": 2629120693,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctTK1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629120693/reactions"
            },
            "updated_at": "2025-02-01T21:25:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629120693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would be still interesting to know whether that would fix the performance.\n> At any chance you can test it out without too much effort?\n\nIt didn't make a difference on Python 3.13. I haven't got 3.14 to hand, but I wouldn't expect it to make a difference. \n\n> So it might be better for the C class to also only define __getattr__, and avoid setting getattro unless __getattribute__ is actually defined. \n\n@TeamSpen210 thanks. That was largely what I thought. Leaving it empty definitely isn't sufficient though (I tried that) - I think you have to set `tp_getattro` to `_Py_slot_tp_getattr_hook` which is trickier because it's private.",
            "created_at": "2025-02-01T21:48:32Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629129130",
            "id": 2629129130,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctVOq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629129130/reactions"
            },
            "updated_at": "2025-02-01T21:48:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629129130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I guess you could get at it by creating a Python class and reading the pointer, but probably the best long term thing would be for the interpreter to have hooks to let it know when it can specialise this stuff. `BINARY_OP` and `BINARY_SUBSCR` [are being](https://github.com/python/cpython/pull/129379) changed to use a table based approach, with among other things the goal to allow classes to hook in and provide their own, maybe the same would happen with attributes.",
            "created_at": "2025-02-01T22:39:46Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2629145539",
            "id": 2629145539,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6ctZPD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2629145539/reactions"
            },
            "updated_at": "2025-02-01T22:39:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2629145539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> [@TeamSpen210](https://github.com/TeamSpen210) thanks. That was largely what I thought. Leaving it empty definitely isn't sufficient though (I tried that) - I think you have to set `tp_getattro` to `_Py_slot_tp_getattr_hook` which is trickier because it's private.\n\nIf that's needed, we can ask to make it public. Even if not, the discussion is probably worth pushing over to CPython at this point, to see what solution can be found in one way or another.",
            "created_at": "2025-04-03T15:48:57Z",
            "html_url": "https://github.com/cython/cython/issues/6644#issuecomment-2776244233",
            "id": 2776244233,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6644",
            "node_id": "IC_kwDOABDGAc6leiAJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2776244233/reactions"
            },
            "updated_at": "2025-04-03T15:48:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2776244233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 21,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6644/comments",
    "created_at": "2025-02-01T16:33:46Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-01T21:48:33Z",
            "event": "mentioned",
            "id": 16151181318,
            "node_id": "MEE_lADOABDGAc6oZq-XzwAAAAPCr3gG",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16151181318"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-01T21:48:33Z",
            "event": "subscribed",
            "id": 16151181321,
            "node_id": "SE_lADOABDGAc6oZq-XzwAAAAPCr3gJ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16151181321"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/663432?v=4",
                "events_url": "https://api.github.com/users/bdraco/events{/privacy}",
                "followers_url": "https://api.github.com/users/bdraco/followers",
                "following_url": "https://api.github.com/users/bdraco/following{/other_user}",
                "gists_url": "https://api.github.com/users/bdraco/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bdraco",
                "id": 663432,
                "login": "bdraco",
                "node_id": "MDQ6VXNlcjY2MzQzMg==",
                "organizations_url": "https://api.github.com/users/bdraco/orgs",
                "received_events_url": "https://api.github.com/users/bdraco/received_events",
                "repos_url": "https://api.github.com/users/bdraco/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bdraco/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bdraco/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bdraco",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-04-16T02:43:25Z",
            "event": "subscribed",
            "id": 17280150329,
            "node_id": "SE_lADOABDGAc6oZq-XzwAAAAQF-is5",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/17280150329"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-04-28T09:26:19Z",
            "event": "labeled",
            "id": 17430855266,
            "label": {
                "color": "f9d0c4",
                "name": "performance"
            },
            "node_id": "LE_lADOABDGAc6oZq-XzwAAAAQO9b5i",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/17430855266"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6644/events",
    "html_url": "https://github.com/cython/cython/issues/6644",
    "id": 2825301911,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805151,
            "name": "performance",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxNTE=",
            "url": "https://api.github.com/repos/cython/cython/labels/performance"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6644/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6oZq-X",
    "number": 6644,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6644/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6644/timeline",
    "title": "[BUG] __getattr__ extremely slow for @cython.cclass",
    "type": null,
    "updated_at": "2025-04-28T09:26:19Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6644",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3577712?v=4",
        "events_url": "https://api.github.com/users/dg-pb/events{/privacy}",
        "followers_url": "https://api.github.com/users/dg-pb/followers",
        "following_url": "https://api.github.com/users/dg-pb/following{/other_user}",
        "gists_url": "https://api.github.com/users/dg-pb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dg-pb",
        "id": 3577712,
        "login": "dg-pb",
        "node_id": "MDQ6VXNlcjM1Nzc3MTI=",
        "organizations_url": "https://api.github.com/users/dg-pb/orgs",
        "received_events_url": "https://api.github.com/users/dg-pb/received_events",
        "repos_url": "https://api.github.com/users/dg-pb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dg-pb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dg-pb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dg-pb",
        "user_view_type": "public"
    }
}