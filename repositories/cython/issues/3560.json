{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Trying to build https://github.com/silx-kit/pyFAI I am getting exceptions on cython master.  bisecting says 7d99b0f085bb254e9a9b4a9fe50aefe133837a81 is the first bad commit\r\n\r\nattn @kif \r\n\r\nIn particular https://github.com/silx-kit/pyFAI/blob/ed24539306aeb6834db240ce98abd8827be609ab/pyFAI/ext/preproc.pyx fails with\r\n\r\n```\r\njupiter@14:47  âž¤  cythonize  pyFAI/ext/preproc.pyx\r\nCompiling /home/tcaswell/source/bnl/esrf/pyFAI/pyFAI/ext/preproc.pyx because it changed.\r\n[1/1] Cythonizing /home/tcaswell/source/bnl/esrf/pyFAI/pyFAI/ext/preproc.pyx\r\n/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /home/tcaswell/source/bnl/esrf/pyFAI/pyFAI/ext/preproc.pyx\r\n  tree = Parsing.p_module(s, pxd, full_module_name)\r\nTraceback (most recent call last):\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/bin/cythonize\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Build/Cythonize.py\", line 224, in main\r\n    cython_compile(path, options)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Build/Cythonize.py\", line 68, in cython_compile\r\n    ext_modules = cythonize(\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Build/Dependencies.py\", line 1105, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Build/Dependencies.py\", line 1246, in cythonize_one\r\n    result = compile_single(pyx_file, options, full_module_name=full_module_name)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py\", line 575, in compile_single\r\n    return run_pipeline(source, options, full_module_name)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py\", line 503, in run_pipeline\r\n    err, enddata = Pipeline.run_pipeline(pipeline, source)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Pipeline.py\", line 356, in run_pipeline\r\n    data = run(phase, data)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Pipeline.py\", line 336, in run\r\n    return phase(data)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Pipeline.py\", line 52, in generate_pyx_code_stage\r\n    module_node.process_implementation(options, result)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/ModuleNode.py\", line 161, in process_implementation\r\n    self.generate_c_code(env, options, result)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/ModuleNode.py\", line 412, in generate_c_code\r\n    self.body.generate_function_definitions(env, code)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 398, in generate_function_definitions\r\n    stat.generate_function_definitions(env, code)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 398, in generate_function_definitions\r\n    stat.generate_function_definitions(env, code)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 345, in generate_function_definitions\r\n    self.body.generate_function_definitions(env, code)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 398, in generate_function_definitions\r\n    stat.generate_function_definitions(env, code)\r\n  File \"Cython/Compiler/FusedNode.py\", line 899, in Cython.Compiler.FusedNode.FusedCFuncDefNode.generate_function_definitions\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 2083, in generate_function_definitions\r\n    assert gil_owned['error'] == gil_owned['success'], \"%s != %s\" % (gil_owned['error'], gil_owned['success'])\r\nAssertionError: True != False\r\n```\r\n\r\nSorry I don't have a better reproduction case.\r\n\r\n----\r\n\r\noutput from build\r\n\r\n<details>\r\n\r\n```\r\n< --- snip --- >\r\n    cythoning pyFAI/ext/splitPixelFullCSR.pyx to pyFAI/ext/splitPixelFullCSR.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/splitPixelFullCSR.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/relabel.pyx to pyFAI/ext/relabel.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/relabel.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/bilinear.pyx to pyFAI/ext/bilinear.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/bilinear.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/_bispev.pyx to pyFAI/ext/_bispev.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/_bispev.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/_convolution.pyx to pyFAI/ext/_convolution.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/_convolution.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/_blob.pyx to pyFAI/ext/_blob.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/_blob.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/morphology.pyx to pyFAI/ext/morphology.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/morphology.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/watershed.pyx to pyFAI/ext/watershed.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/watershed.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/_tree.pyx to pyFAI/ext/_tree.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/_tree.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/sparse_utils.pyx to pyFAI/ext/sparse_utils.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/sparse_utils.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    cythoning pyFAI/ext/preproc.pyx to pyFAI/ext/preproc.c\r\n    /home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-req-build-frrjpdam/pyFAI/ext/preproc.pyx\r\n      tree = Parsing.p_module(s, pxd, full_module_name)\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-req-build-frrjpdam/setup.py\", line 1108, in <module>\r\n        setup_package()\r\n      File \"/tmp/pip-req-build-frrjpdam/setup.py\", line 1104, in setup_package\r\n        setup(**setup_kwargs)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/setuptools/__init__.py\", line 144, in setup\r\n        return distutils.core.setup(**attrs)\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/core.py\", line 148, in setup\r\n        dist.run_commands()\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/dist.py\", line 966, in run_commands\r\n        self.run_command(cmd)\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/dist.py\", line 985, in run_command\r\n        cmd_obj.run()\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/setuptools/command/install.py\", line 61, in run\r\n        return orig.install.run(self)\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/command/install.py\", line 546, in run\r\n        self.run_command('build')\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/cmd.py\", line 313, in run_command\r\n        self.distribution.run_command(command)\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/dist.py\", line 985, in run_command\r\n        cmd_obj.run()\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/command/build.py\", line 135, in run\r\n        self.run_command(cmd_name)\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/cmd.py\", line 313, in run_command\r\n        self.distribution.run_command(command)\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/dist.py\", line 984, in run_command\r\n        cmd_obj.ensure_finalized()\r\n      File \"/home/tcaswell/.pybuild/bleeding/lib/python3.9/distutils/cmd.py\", line 107, in ensure_finalized\r\n        self.finalize_options()\r\n      File \"/tmp/pip-req-build-frrjpdam/setup.py\", line 588, in finalize_options\r\n        build_ext.finalize_options(self)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/setuptools/command/build_ext.py\", line 144, in finalize_options\r\n        self.check_extensions_list(self.extensions)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Distutils/old_build_ext.py\", line 192, in check_extensions_list\r\n        ext.sources = self.cython_sources(ext.sources, ext)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Distutils/old_build_ext.py\", line 342, in cython_sources\r\n        result = cython_compile(source, options=options,\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py\", line 626, in compile\r\n        return compile_single(source, options, full_module_name)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py\", line 575, in compile_single\r\n        return run_pipeline(source, options, full_module_name)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Main.py\", line 503, in run_pipeline\r\n        err, enddata = Pipeline.run_pipeline(pipeline, source)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Pipeline.py\", line 356, in run_pipeline\r\n        data = run(phase, data)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Pipeline.py\", line 336, in run\r\n        return phase(data)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Pipeline.py\", line 52, in generate_pyx_code_stage\r\n        module_node.process_implementation(options, result)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/ModuleNode.py\", line 161, in process_implementation\r\n        self.generate_c_code(env, options, result)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/ModuleNode.py\", line 412, in generate_c_code\r\n        self.body.generate_function_definitions(env, code)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 398, in generate_function_definitions\r\n        stat.generate_function_definitions(env, code)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 398, in generate_function_definitions\r\n        stat.generate_function_definitions(env, code)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 345, in generate_function_definitions\r\n        self.body.generate_function_definitions(env, code)\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 398, in generate_function_definitions\r\n        stat.generate_function_definitions(env, code)\r\n      File \"Cython/Compiler/FusedNode.py\", line 899, in Cython.Compiler.FusedNode.FusedCFuncDefNode.generate_function_definitions\r\n      File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.9/site-packages/Cython/Compiler/Nodes.py\", line 2081, in generate_function_definitions\r\n        assert gil_owned['error'] == gil_owned['success'], \"%s != %s\" % (gil_owned['error'], gil_owned['success'])\r\n    AssertionError: True != False\r\n    ----------------------------------------\r\n```\r\n\r\n</details>\r\n\r\ngit bisect log\r\n\r\n<details>\r\n\r\nI started this when 01085d2ad588bf41e2d17cff6aa96d0507087ce3 was master, but have verified that it does not work with 792d80bade7138993ec3b1d2fb3133dced2bc871 either.\r\n\r\n```sh\r\njupiter@14:34  âž¤  git bisect log\r\ngit bisect start\r\n# good: [203ec86c39165c4001aa9238268f1911db1e8728] Update and split changelog for 3.0a2.\r\ngit bisect good 203ec86c39165c4001aa9238268f1911db1e8728\r\n# bad: [01085d2ad588bf41e2d17cff6aa96d0507087ce3] Make the GIL-avoidance in 7d99b0f0 actually work in nogil functions and not just nogil sections. Closes #3558.\r\ngit bisect bad 01085d2ad588bf41e2d17cff6aa96d0507087ce3\r\n# good: [4dbce65d359473c1dc37eb0c325ae177aa0774a2] Clean up and repair the type spec generation for the limited API, leaving more of the work to the TypeSlots instead of special-casing all sorts of things.\r\ngit bisect good 4dbce65d359473c1dc37eb0c325ae177aa0774a2\r\n# good: [cf5e3fe3520f51cdf001956e81bd4fdb5e86233b] Fix reference to missing utility function, which is not more than an alias to CPython's \"PyObject_GenericGetAttr\" in the limited API case.\r\ngit bisect good cf5e3fe3520f51cdf001956e81bd4fdb5e86233b\r\n# bad: [89172b6d6d40ef0fea20e6b0c37aab2148daedd3] Add a test for inferred integer %-operations.\r\ngit bisect bad 89172b6d6d40ef0fea20e6b0c37aab2148daedd3\r\n# good: [25b7d7e415d179077a6d8ee150d9bc59bc5e09e0] Relax class private names for c types (GH-3546)\r\ngit bisect good 25b7d7e415d179077a6d8ee150d9bc59bc5e09e0\r\n# bad: [a1a2bd70c66c8905d4011d189ac5fd8d38134521] Update changelog.\r\ngit bisect bad a1a2bd70c66c8905d4011d189ac5fd8d38134521\r\n# bad: [7d99b0f085bb254e9a9b4a9fe50aefe133837a81] Avoid acquiring the GIL at the end of nogil functions (GH-3556)\r\ngit bisect bad 7d99b0f085bb254e9a9b4a9fe50aefe133837a81\r\n# first bad commit: [7d99b0f085bb254e9a9b4a9fe50aefe133837a81] Avoid acquiring the GIL at the end of nogil functions (GH-3556)\r\n(bleeding) âœ”  ~/source/other_source/cython [:7d99b0f08|BISECTING|âš‘ 2]\r\n```\r\n\r\n</details>\r\n",
    "closed_at": "2020-04-30T21:21:49Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. The assertion actually wasn't correct â€“ but it was good to have it, because it also pointed at a few real bugs. Turns out that the error exit path of a nogil function is really more likely to require the GIL for cleanup actions than the success path â€“ which is a good thing. So I chose to degrade the error case in favour of less GIL handling on the success path in dc41690ac13a25253ac3790cb112d557a2430aae.\r\n\r\nI tried it with your code and it compiled for me. But it's also worth running some actual tests over it, I think.",
            "created_at": "2020-04-28T21:19:09Z",
            "html_url": "https://github.com/cython/cython/issues/3560#issuecomment-620860803",
            "id": 620860803,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3560",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDg2MDgwMw==",
            "updated_at": "2020-04-28T21:19:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/620860803",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks Thomas for the head's up.\n\nI created a bug in pyFAI and will investigate shortly\nhttps://github.com/silx-kit/pyFAI/issues/1349\n",
            "created_at": "2020-04-29T05:58:13Z",
            "html_url": "https://github.com/cython/cython/issues/3560#issuecomment-621006162",
            "id": 621006162,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3560",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTAwNjE2Mg==",
            "updated_at": "2020-04-29T05:58:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/621006162",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1018880?v=4",
                "events_url": "https://api.github.com/users/kif/events{/privacy}",
                "followers_url": "https://api.github.com/users/kif/followers",
                "following_url": "https://api.github.com/users/kif/following{/other_user}",
                "gists_url": "https://api.github.com/users/kif/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kif",
                "id": 1018880,
                "login": "kif",
                "node_id": "MDQ6VXNlcjEwMTg4ODA=",
                "organizations_url": "https://api.github.com/users/kif/orgs",
                "received_events_url": "https://api.github.com/users/kif/received_events",
                "repos_url": "https://api.github.com/users/kif/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kif/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kif/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kif"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3560/comments",
    "created_at": "2020-04-28T19:22:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1018880?v=4",
                "events_url": "https://api.github.com/users/kif/events{/privacy}",
                "followers_url": "https://api.github.com/users/kif/followers",
                "following_url": "https://api.github.com/users/kif/following{/other_user}",
                "gists_url": "https://api.github.com/users/kif/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kif",
                "id": 1018880,
                "login": "kif",
                "node_id": "MDQ6VXNlcjEwMTg4ODA=",
                "organizations_url": "https://api.github.com/users/kif/orgs",
                "received_events_url": "https://api.github.com/users/kif/received_events",
                "repos_url": "https://api.github.com/users/kif/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kif/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kif/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kif"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-28T19:22:08Z",
            "event": "mentioned",
            "id": 3281781922,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4MTc4MTkyMg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3281781922"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1018880?v=4",
                "events_url": "https://api.github.com/users/kif/events{/privacy}",
                "followers_url": "https://api.github.com/users/kif/followers",
                "following_url": "https://api.github.com/users/kif/following{/other_user}",
                "gists_url": "https://api.github.com/users/kif/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kif",
                "id": 1018880,
                "login": "kif",
                "node_id": "MDQ6VXNlcjEwMTg4ODA=",
                "organizations_url": "https://api.github.com/users/kif/orgs",
                "received_events_url": "https://api.github.com/users/kif/received_events",
                "repos_url": "https://api.github.com/users/kif/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kif/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kif/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kif"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-28T19:22:08Z",
            "event": "subscribed",
            "id": 3281781926,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODE3ODE5MjY=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3281781926"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-28T21:05:53Z",
            "event": "labeled",
            "id": 3282130851,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyODIxMzA4NTE=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3282130851"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-28T21:05:53Z",
            "event": "labeled",
            "id": 3282130852,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyODIxMzA4NTI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3282130852"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-28T21:05:58Z",
            "event": "milestoned",
            "id": 3282131162,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMyODIxMzExNjI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3282131162"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-30T21:21:49Z",
            "event": "closed",
            "id": 3291395865,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzI5MTM5NTg2NQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3291395865"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3560/events",
    "html_url": "https://github.com/cython/cython/issues/3560",
    "id": 608554936,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3560/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 213,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\nâ€“ New version scheme: 3.x instead of 0.x.\r\nâ€“ Change default `language_level` from `2` to `3`.\r\nâ€“ Change default for `binding` directive from `False` to `True`.\r\nâ€“ Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 19,
        "state": "open",
        "title": "3.0",
        "updated_at": "2020-05-01T07:01:41Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU2MDg1NTQ5MzY=",
    "number": 3560,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "cython master fails to cythonize pyFAI",
    "updated_at": "2020-04-30T21:21:49Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3560",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
        "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
        "followers_url": "https://api.github.com/users/tacaswell/followers",
        "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
        "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tacaswell",
        "id": 199813,
        "login": "tacaswell",
        "node_id": "MDQ6VXNlcjE5OTgxMw==",
        "organizations_url": "https://api.github.com/users/tacaswell/orgs",
        "received_events_url": "https://api.github.com/users/tacaswell/received_events",
        "repos_url": "https://api.github.com/users/tacaswell/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tacaswell"
    }
}