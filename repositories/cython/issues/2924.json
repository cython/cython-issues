{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Ok, I am now having the following problem:\r\n\r\nEdit: **go here for much better description:** https://github.com/pypa/pip/issues/6411\r\n\r\nI have a `.pxd` dependency from an external lib. Because `easy_install` breaks Cython sometimes and since `setup_requires` is deprecated anyway, I have moved this `.pxd`-included dependency to `pyproject.toml`'s `build-system.requires`. (since `install_requires` is too late, that doesn't guarantee it will be around during `build_ext` for `.pxd` inclusion but only later when it actually runs)\r\n\r\nNow the problem appears to be that with a `pyproject.toml` & pip19 you get this new fancy build isolation, and the result of that appears to be that everything in `build-system.requires` is *always* locally reinstalled from scratch even if it's already in the system site packages (since the build is isolated). But this installation will always run through `build_ext` as well - that is entirely unnecessary for `.pxd` inclusion but pip/setuptools don't know that, they think it's a build requirement so surely it needs to be fully installed to be available including compilation.\r\n\r\nThis reinstall from scratch means that for bigger `.pxd` Cython dependencies, this time is always added up on the regular build time which for big Cython projects can be significant. (for mine multiple minutes!) And it's a waste because the package is not *actually* needed to be fully installed, only the uncompiled `.pxd` files would be needed.\r\n\r\nIt would be therefore nice if you could sit together with pip & setuptools folks to figure out something like `sdist_requires` on top of `install_requires`/`build-system.requires` that somehow makes it available for Cython `.pxd` include use WITHOUT installing it fully. Otherwise all Cython builds around the world using `.pxd` includes will waste quite some additional time moving to the new pyproject.toml/pip19 ways of doing things",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "A real world example where this makes a huge impact for [the testing tool tox](https://tox.readthedocs.io/en/latest/):\r\n\r\n- tox prepares a virtualenv of all dependencies the first time it runs the tests\r\n- then with each later run, it will usually only make an sdist of the project, and install the project directly without deps to rerun the newer version's tests\r\n\r\n**Historic result:**\r\n\r\nThe dependencies, even if they take very long to build, don't get too much into the way because they're only built once and when really needed. (version bump/resetting the virtualenv due to some other issue) This also applies to `setup_requires` dependencies needed for `.pxd` imports\r\n\r\n**Degradation with `pyproject.toml`/`.pxd` imports:**\r\n\r\nWith a `pyproject.toml` and a package from which I want to `.pxd` import specified as `build-system.requires` in that toml file (which is the new, only not-broken way to ensure external `.pxd`s are around, right?) pip 19 will enable build isolation.\r\n\r\nResult: deps, even if already installed by tox and in the virtualenv, are *not around* during build. However, the `.pxd` dependency is needed during build, and hence will be *rebuilt from scratch every single time* the main project is also rebuilt. (my dep actually has another indirect Cython dep, so **both** are rebuilt in addition!)\r\n\r\nThis is not the case for 99% of the other deps since almost all will just be `install_requires`, and even things like `setuptools` that are truly needed for build don't need long to install, unlike substantial Cython projects - the problem is purely limited to external `.pxd` import targets.\r\n\r\n**Overall result/problem: potentially many minutes of additional time on every single test run.**\r\n\r\nAnd that all because there's no good way of stating \"Give me the .pxd files during install but don't actually *build* it please\" - kind of the equivalent of needing the development headers only, and being forced to rebuild the entire external lib to get them",
            "created_at": "2019-04-15T00:59:54Z",
            "html_url": "https://github.com/cython/cython/issues/2924#issuecomment-483075348",
            "id": 483075348,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzA3NTM0OA==",
            "updated_at": "2019-04-15T01:05:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/483075348",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        },
        {
            "author_association": "NONE",
            "body": "(Of course `setup_requires` has kinda the same issue, but without the new `pyproject.toml` build isolation being enabled it's not as bad because it will only impact the first run. Also if the dep is in `install_requires` as well it's not useless that it's built at some point, so one might not actually lose any time in overall.)",
            "created_at": "2019-04-15T01:07:40Z",
            "html_url": "https://github.com/cython/cython/issues/2924#issuecomment-483076084",
            "id": 483076084,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzA3NjA4NA==",
            "updated_at": "2019-04-15T01:07:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/483076084",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I guess the canonical answer to this is:\r\n1) make sure your dependencies provide wheels\r\n2) if your goal is to build only an sdist and you have non-wheel binary build dependencies, then set the `CFLAGS` to something fast, e.g. `CFLAGS=-O0 python setup.py sdist`.",
            "created_at": "2019-04-15T04:47:40Z",
            "html_url": "https://github.com/cython/cython/issues/2924#issuecomment-483106084",
            "id": 483106084,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzEwNjA4NA==",
            "updated_at": "2019-04-15T04:47:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/483106084",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> make sure your dependencies provide wheels\r\n\r\nThat helps a little, but still the wheel building itself will be still unnecessarily slow. Also there is the problem that I can't actually do this right now I believe, since I mostly use it in python-for-android which is a cross-compile environment, I'd be surprised if wheels are set up to work properly. But maybe we need to fix that then, but that might take a while. (not sure pypi will even accept the unusual architecture entry at this point) But yeah, that does sound like it might be the best idea, I'll ponder this\r\n\r\n> if your goal is to build only an sdist and you have non-wheel binary build dependencies, then set the CFLAGS to something fast, e.g. CFLAGS=-O0 python setup.py sdist.\r\n\r\nNice! A bit of a hack though, and again not that easily done in a cross-compile environment where CFLAGS may already be set to other things and merging the value might be more complicated",
            "created_at": "2019-04-15T12:35:40Z",
            "html_url": "https://github.com/cython/cython/issues/2924#issuecomment-483233525",
            "id": 483233525,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzIzMzUyNQ==",
            "updated_at": "2019-04-15T12:35:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/483233525",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        },
        {
            "author_association": "NONE",
            "body": "Wait, can I even easily provide a wheel when I install from github/git master? This sounds like it might make quite complicated, I'm really not sure if that's a realistic option for a fast-moving in-development dependency. (which it currently is) Of course for a package on pypi it might work, but then again I'd also need to put android wheels onto pypi (and preferably all other arcane and non-arcane platforms) or we're back to the original problem. Thinking more about this it sounds like the better idea would be still to simply not require compilation when it's evidently not required at all, since that really is the source of all trouble",
            "created_at": "2019-04-15T12:44:05Z",
            "html_url": "https://github.com/cython/cython/issues/2924#issuecomment-483236094",
            "id": 483236094,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzIzNjA5NA==",
            "updated_at": "2019-04-15T12:44:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/483236094",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You can point pip to your own \"PyPI\" instance. Many people do that, e.g. using devpi or some other kind of caching proxy.",
            "created_at": "2019-04-15T19:34:50Z",
            "html_url": "https://github.com/cython/cython/issues/2924#issuecomment-483387872",
            "id": 483387872,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM4Nzg3Mg==",
            "updated_at": "2019-04-15T19:34:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/483387872",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes but isn't that horribly complicated? I appreciate the constructive ideas though, I'm just wondering if it wouldn't be worth it to make some sort of change in the tooling to make this case easier",
            "created_at": "2019-04-15T19:36:49Z",
            "html_url": "https://github.com/cython/cython/issues/2924#issuecomment-483388546",
            "id": 483388546,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM4ODU0Ng==",
            "updated_at": "2019-04-15T19:36:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/483388546",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2924/comments",
    "created_at": "2019-04-14T19:34:40Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-04-15T00:54:30Z",
            "event": "renamed",
            "id": 2275235868,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjI3NTIzNTg2OA==",
            "rename": {
                "from": "Would be nice if .pxd import could be done without requiring the package to be fully installed",
                "to": "Would be nice if .pxd import could be done without requiring the depedency to be fully installed"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/2275235868"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2924/events",
    "html_url": "https://github.com/cython/cython/issues/2924",
    "id": 433023324,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2924/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0MzMwMjMzMjQ=",
    "number": 2924,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Would be nice if .pxd import could be done without requiring the depedency to be fully installed",
    "updated_at": "2019-04-15T19:36:49Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2924",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
        "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
        "followers_url": "https://api.github.com/users/JonasT/followers",
        "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
        "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/JonasT",
        "id": 1573352,
        "login": "JonasT",
        "node_id": "MDQ6VXNlcjE1NzMzNTI=",
        "organizations_url": "https://api.github.com/users/JonasT/orgs",
        "received_events_url": "https://api.github.com/users/JonasT/received_events",
        "repos_url": "https://api.github.com/users/JonasT/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/JonasT"
    }
}