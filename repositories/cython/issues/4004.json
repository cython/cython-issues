{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\nI'm not actually sure if that is supposed to not work, but its not documented, so either it should be added to the docs or be considered a bug.\r\nAnyway, when having two extension types, one inheriting the other and deriving a method, e.g. a cdef one, which gets called within the base class's __cinit__() method, the derived method doesn't get called.\r\n**To Reproduce**\r\nCode to reproduce the behaviour:\r\n```cython\r\ncdef class Foo:\r\n\r\n  def __cinit__(self):\r\n    self.talk()\r\n\r\n  cdef void talk(self):\r\n    print(\"i'm talking\")\r\n\r\ncdef class Bar(Foo):\r\n\r\n  cdef void talk(self):\r\n    print(\"now you're talking!\")\r\n    \r\n```\r\n\r\n**Expected behavior**\r\nI'd expect it to print \"now you're talking!\", instead of printing \"i'm talking\".\r\nA rather obvious solution would be to switch from __cinit__() to __init__() here (at least i'd expect that to work, didn't try it yet though). I'm using this \"feature\" to initialize different attributes of my class, the subtype having more attributes than the base class, therefore the subtype derives the initialization cdef method to initialize all of its additional attributes. I just noticed that this never happens due to the base class only calling its own cdef instead of the derived ones.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: tested on Windows 10\r\n - Python version 3.8.2\r\n - Cython version 3.0a6\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "I wouldn't expect this to work or consider it a bug. You're right that it isn't explicitly documented though and a PR to correct this would probably be welcome.\r\n\r\nThe call order is roughly: \"base `__cinit__`\"->\"derived `__cinit__`\"->\"`__init__` functions as defined by Python\". Therefore base `__cinit__` is called very early and has basically no knowledge that it might be in a derived class. If you're familiar with C++ then I believe that virtual functions in C++ constructors work very similarly.\r\n\r\nI would expect your suggestion of moving code to `__init__` to work. A single class can have both a `__cinit__` or `__init__` method so you can use them both as needed.",
            "created_at": "2021-02-12T17:17:50Z",
            "html_url": "https://github.com/cython/cython/issues/4004#issuecomment-778325963",
            "id": 778325963,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4004",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODMyNTk2Mw==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-12T17:28:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/778325963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The virtual function table of the subclass probably isn't initialised yet at this point. That's reasonable, because `__cinit__()` is called on the way back from Python's object allocator. If it's not documented yet, then it's worth stating somewhere that the code in `__cinit__()` must not touch (or use) the state of subclasses, since they are not initialised yet when it is called.\r\n\r\nI consider the behaviour undefined in this case. You should not do this.\r\n\r\nAs suggested, use `__init__()` for anything that requires a fully initialised object.",
            "created_at": "2021-02-14T15:04:30Z",
            "html_url": "https://github.com/cython/cython/issues/4004#issuecomment-778790314",
            "id": 778790314,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4004",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODc5MDMxNA==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-14T15:04:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/778790314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4004/comments",
    "created_at": "2021-02-12T16:36:49Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-02-12T17:17:59Z",
            "event": "labeled",
            "id": 4325838238,
            "label": {
                "color": "444444",
                "name": "Documentation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQzMjU4MzgyMzg=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4325838238"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4004/events",
    "html_url": "https://github.com/cython/cython/issues/4004",
    "id": 807374727,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425561345,
            "name": "Documentation",
            "node_id": "MDU6TGFiZWw0MjU1NjEzNDU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Documentation"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4004/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4MDczNzQ3Mjc=",
    "number": 4004,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] derived method not called from within __cinit__",
    "updated_at": "2021-02-14T15:04:30Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4004",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1345878?v=4",
        "events_url": "https://api.github.com/users/Timtam/events{/privacy}",
        "followers_url": "https://api.github.com/users/Timtam/followers",
        "following_url": "https://api.github.com/users/Timtam/following{/other_user}",
        "gists_url": "https://api.github.com/users/Timtam/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Timtam",
        "id": 1345878,
        "login": "Timtam",
        "node_id": "MDQ6VXNlcjEzNDU4Nzg=",
        "organizations_url": "https://api.github.com/users/Timtam/orgs",
        "received_events_url": "https://api.github.com/users/Timtam/received_events",
        "repos_url": "https://api.github.com/users/Timtam/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Timtam/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Timtam/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Timtam"
    }
}