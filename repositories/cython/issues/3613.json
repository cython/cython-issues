{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/zarr-developers/numcodecs is explicitly setting the binding to `false` in their files (https://github.com/zarr-developers/numcodecs/blob/d142cb31f9d09676a09593b0ad399cba924f3d99/numcodecs/vlen.pyx#L4)\r\n\r\nIf you try to cythonize and compile with the pre-releases of cython you get errors that look like\r\n\r\n<details>\r\n\r\n```\r\n    gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Inumcodecs -Ic-blosc/internal-complibs/lz4-1.9.2 -I/home/tcaswell/.virtualenvs/bleeding/include -I/home/tcaswell/.pybuild/bleeding/include/python3.9 -c numcodecs/lz4.c -o build/temp.linux-x86_64-3.9/numcodecs/lz4.o -msse2 -mavx2\r\n    numcodecs/lz4.c: In function ‘__pyx_pf_9numcodecs_3lz4_2decompress’:\r\n    numcodecs/lz4.c:3184:49: warning: comparison of integer expressions of different signedness: ‘size_t’ {aka ‘long unsigned int’} and ‘int’ [-Wsign-compare]\r\n     3184 |       __pyx_t_6 = ((__pyx_v_dest_buffer->nbytes < __pyx_v_dest_size) != 0);\r\n          |                                                 ^\r\n    gcc -pthread -shared build/temp.linux-x86_64-3.9/c-blosc/internal-complibs/lz4-1.9.2/lz4.o build/temp.linux-x86_64-3.9/c-blosc/internal-complibs/lz4-1.9.2/lz4hc.o build/temp.linux-x86_64-3.9/numcodecs/lz4.o -o build/lib.linux-x86_64-3.9/numcodecs/lz4.cpython-39-x86_64-linux-gnu.so\r\n    building 'numcodecs.compat_ext' extension\r\n    gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/home/tcaswell/.virtualenvs/bleeding/include -I/home/tcaswell/.pybuild/bleeding/include/python3.9 -c numcodecs/compat_ext.c -o build/temp.linux-x86_64-3.9/numcodecs/compat_ext.o -msse2 -mavx2\r\n    gcc -pthread -shared build/temp.linux-x86_64-3.9/numcodecs/compat_ext.o -o build/lib.linux-x86_64-3.9/numcodecs/compat_ext.cpython-39-x86_64-linux-gnu.so\r\n    building 'numcodecs.vlen' extension\r\n    gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Inumcodecs -I/home/tcaswell/.virtualenvs/bleeding/include -I/home/tcaswell/.pybuild/bleeding/include/python3.9 -c numcodecs/vlen.c -o build/temp.linux-x86_64-3.9/numcodecs/vlen.o -msse2 -mavx2\r\n    numcodecs/vlen.c: In function ‘__pyx_pymod_exec_vlen’:\r\n    numcodecs/vlen.c:24772:39: error: ‘__pyx_mdef___pyx_array_1__reduce_cython__’ undeclared (first use in this function); did you mean ‘__pyx_pw___pyx_array_1__reduce_cython__’?\r\n    24772 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef___pyx_array_1__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_array___reduce_cython, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__59)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pw___pyx_array_1__reduce_cython__\r\n    numcodecs/vlen.c:24772:39: note: each undeclared identifier is reported only once for each function it appears in\r\n    numcodecs/vlen.c:24793:39: error: ‘__pyx_mdef___pyx_array_3__setstate_cython__’ undeclared (first use in this function); did you mean ‘__pyx_pw___pyx_array_3__setstate_cython__’?\r\n    24793 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef___pyx_array_3__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_array___setstate_cython, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__61)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 3, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pw___pyx_array_3__setstate_cython__\r\n    numcodecs/vlen.c:24813:39: error: ‘__pyx_mdef___pyx_MemviewEnum_1__reduce_cython__’ undeclared (first use in this function); did you mean ‘__pyx_pw___pyx_MemviewEnum_1__reduce_cython__’?\r\n    24813 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef___pyx_MemviewEnum_1__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Enum___reduce_cython, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__63)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pw___pyx_MemviewEnum_1__reduce_cython__\r\n    numcodecs/vlen.c:24830:39: error: ‘__pyx_mdef___pyx_MemviewEnum_3__setstate_cython__’ undeclared (first use in this function); did you mean ‘__pyx_pw___pyx_MemviewEnum_3__setstate_cython__’?\r\n    24830 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef___pyx_MemviewEnum_3__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Enum___setstate_cython, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__65)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 16, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pw___pyx_MemviewEnum_3__setstate_cython__\r\n    numcodecs/vlen.c:24957:39: error: ‘__pyx_mdef_15View_dot_MemoryView_10memoryview_17is_c_contig’ undeclared (first use in this function); did you mean ‘__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__’?\r\n    24957 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_15View_dot_MemoryView_10memoryview_17is_c_contig, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_memoryview_is_c_contig, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__72)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 630, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__\r\n    numcodecs/vlen.c:24975:39: error: ‘__pyx_mdef_15View_dot_MemoryView_10memoryview_19is_f_contig’ undeclared (first use in this function); did you mean ‘__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__’?\r\n    24975 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_15View_dot_MemoryView_10memoryview_19is_f_contig, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_memoryview_is_f_contig, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__74)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 636, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__\r\n    numcodecs/vlen.c:24993:39: error: ‘__pyx_mdef_15View_dot_MemoryView_10memoryview_21copy’ undeclared (first use in this function); did you mean ‘__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__’?\r\n    24993 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_15View_dot_MemoryView_10memoryview_21copy, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_memoryview_copy, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__76)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 642, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__\r\n    numcodecs/vlen.c:25011:39: error: ‘__pyx_mdef_15View_dot_MemoryView_10memoryview_23copy_fortran’ undeclared (first use in this function); did you mean ‘__pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__’?\r\n    25011 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_15View_dot_MemoryView_10memoryview_23copy_fortran, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_memoryview_copy_fortran, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__78)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 654, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__\r\n    numcodecs/vlen.c:25027:39: error: ‘__pyx_mdef___pyx_memoryview_1__reduce_cython__’ undeclared (first use in this function); did you mean ‘__pyx_pw___pyx_memoryview_1__reduce_cython__’?\r\n    25027 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef___pyx_memoryview_1__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_memoryview___reduce_cython, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__80)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pw___pyx_memoryview_1__reduce_cython__\r\n    numcodecs/vlen.c:25048:39: error: ‘__pyx_mdef___pyx_memoryview_3__setstate_cython__’ undeclared (first use in this function); did you mean ‘__pyx_pw___pyx_memoryview_3__setstate_cython__’?\r\n    25048 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef___pyx_memoryview_3__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_memoryview___setstate_cython, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__82)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 3, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pw___pyx_memoryview_3__setstate_cython__\r\n    numcodecs/vlen.c:25081:39: error: ‘__pyx_mdef___pyx_memoryviewslice_1__reduce_cython__’ undeclared (first use in this function); did you mean ‘__pyx_pw___pyx_memoryviewslice_1__reduce_cython__’?\r\n    25081 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef___pyx_memoryviewslice_1__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_memoryviewslice___reduce_cython, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__84)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pw___pyx_memoryviewslice_1__reduce_cython__\r\n    numcodecs/vlen.c:25102:39: error: ‘__pyx_mdef___pyx_memoryviewslice_3__setstate_cython__’ undeclared (first use in this function); did you mean ‘__pyx_pw___pyx_memoryviewslice_3__setstate_cython__’?\r\n    25102 |     __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef___pyx_memoryviewslice_3__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_memoryviewslice___setstate_cyth, NULL, __pyx_n_s_View_MemoryView, __pyx_t_5, ((PyObject *)__pyx_codeobj__86)); __pyx_t_5 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 3, __pyx_L1_error)\r\n          |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          |                                       __pyx_pw___pyx_memoryviewslice_3__setstate_cython__\r\n\r\n```\r\n\r\n</details>\r\n\r\nIf you change the `# cython: binding=False` directive at the top of `vlen.pyx` to `# cpython: binding=True` or revert b1704d61482cbfdb6a552c60e07d182877e710be things it will build correctly (and pass tests!). \r\n\r\nAlthough the simple fix is to change the directive is numcodecs, I a want to flag this upstream to make sure that this isn't indicative of a bigger problem. \r\n\r\nattn @alimanfoo @jakirkham",
    "closed_at": "2020-05-17T17:31:12Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's a simple reproducible example:\r\n\r\n```\r\n# cython: binding=False\r\n\r\ndef f(double[:] a):\r\n    pass\r\n```\r\n\r\nProduces very similar looking C compile errors.",
            "created_at": "2020-05-15T06:55:53Z",
            "html_url": "https://github.com/cython/cython/issues/3613#issuecomment-629065047",
            "id": 629065047,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3613",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTA2NTA0Nw==",
            "updated_at": "2020-05-15T06:55:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629065047",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the issue is that when `__reduce_cython__` and similar for the internally-defined types are first analysed they're done so in a `NonManglingModuleScope` with `binding` set to `True`. But when the code generation takes place it happens in the regular module scope with the overridden value for binding - i.e. at some stage when the utility code is taken from its specialized scope and put in the non-module scope https://github.com/cython/cython/blob/399a72d75c7413f67cf9b62a5a24e4084d4e4ba7/Cython/Compiler/UtilityCode.py#L226 all the directives applied to it get lost.",
            "created_at": "2020-05-15T07:09:50Z",
            "html_url": "https://github.com/cython/cython/issues/3613#issuecomment-629070432",
            "id": 629070432,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3613",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTA3MDQzMg==",
            "updated_at": "2020-05-15T07:13:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629070432",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report and the analysis. Yes, that makes sense. Then the `binding` directive isn't really the issue here, but `auto_pickle`. I wonder if that's needed for memory views at all. Not sure.\r\n\r\nIn any case, internal utility code should have a defined compilation environment that does not depend on the user provided module and its directives. Maybe we can just disable `binding` and `auto_pickle` for memory views?\r\n\r\nAnd finally, there seems to be an issue with the `mdef` declarations specifically. Maybe their generation is done under different conditions than their usage. That needs investigating.",
            "created_at": "2020-05-15T08:27:55Z",
            "html_url": "https://github.com/cython/cython/issues/3613#issuecomment-629104676",
            "id": 629104676,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3613",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTEwNDY3Ng==",
            "updated_at": "2020-05-15T08:27:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629104676",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just checked how much of a difference it makes in generated C code lines to disable both options for the memory view implementation. Here are the results for the test suite, with enabled (top) and disabled (bottom) options `binding` and `auto_pickle`. That's almost 2500 C lines saved per file. Now the question is what the functional impact of that is…\r\n```\r\n$ wc -l -c TEST_TMP/memoryview/c/*/*.c\r\n   27187  1037680 TEST_TMP/memoryview/c/compile_declarations/compile_declarations.c\r\n   27093  1034206 TEST_TMP/memoryview/c/contig_check/contig_check.c\r\n   32370  1267717 TEST_TMP/memoryview/c/cythonarray/cythonarray.c\r\n       1       78 TEST_TMP/memoryview/c/error_declarations/error_declarations.c\r\n   31203  1203442 TEST_TMP/memoryview/c/extension_type_memoryview/extension_type_memoryview.c\r\n   26984  1029918 TEST_TMP/memoryview/c/memoryview_annotation_typing/memoryview_annotation_typing.c\r\n   38068  1485873 TEST_TMP/memoryview/c/memoryviewattrs/memoryviewattrs.c\r\n   27203  1034406 TEST_TMP/memoryview/c/memoryview_inplace_division/memoryview_inplace_division.c\r\n   28920  1124269 TEST_TMP/memoryview/c/memoryview_in_subclasses/memoryview_in_subclasses.c\r\n   72498  3086961 TEST_TMP/memoryview/c/memoryview/memoryview.c\r\n   44013  1875112 TEST_TMP/memoryview/c/memoryview_pep484_typing/memoryview_pep484_typing.c\r\n   98658  4140062 TEST_TMP/memoryview/c/memslice/memslice.c\r\n   25074   953863 TEST_TMP/memoryview/c/memview_assignments/memview_assignments.c\r\n   77433  3267057 TEST_TMP/memoryview/c/numpy_memoryview/numpy_memoryview.c\r\n   32022  1245076 TEST_TMP/memoryview/c/numpy_memoryview_readonly/numpy_memoryview_readonly.c\r\n   26787  1023941 TEST_TMP/memoryview/c/relaxed_strides/relaxed_strides.c\r\n   28102  1081605 TEST_TMP/memoryview/c/transpose_refcount/transpose_refcount.c\r\n   26187   995874 TEST_TMP/memoryview/c/view_return_errors/view_return_errors.c\r\n  669803 26887140 insgesamt\r\n\r\n$ wc -l -c TEST_TMP/memoryview/c/*/*.c\r\n   23643   876211 TEST_TMP/memoryview/c/compile_declarations/compile_declarations.c\r\n   24619   910000 TEST_TMP/memoryview/c/contig_check/contig_check.c\r\n   29914  1144542 TEST_TMP/memoryview/c/cythonarray/cythonarray.c\r\n       1       78 TEST_TMP/memoryview/c/error_declarations/error_declarations.c\r\n   29081  1096933 TEST_TMP/memoryview/c/extension_type_memoryview/extension_type_memoryview.c\r\n   24446   903247 TEST_TMP/memoryview/c/memoryview_annotation_typing/memoryview_annotation_typing.c\r\n   35594  1361582 TEST_TMP/memoryview/c/memoryviewattrs/memoryviewattrs.c\r\n   24665   907732 TEST_TMP/memoryview/c/memoryview_inplace_division/memoryview_inplace_division.c\r\n   26627  1009987 TEST_TMP/memoryview/c/memoryview_in_subclasses/memoryview_in_subclasses.c\r\n   70385  2980639 TEST_TMP/memoryview/c/memoryview/memoryview.c\r\n   41900  1768764 TEST_TMP/memoryview/c/memoryview_pep484_typing/memoryview_pep484_typing.c\r\n   96563  4034662 TEST_TMP/memoryview/c/memslice/memslice.c\r\n   21530   792457 TEST_TMP/memoryview/c/memview_assignments/memview_assignments.c\r\n   75356  3162971 TEST_TMP/memoryview/c/numpy_memoryview/numpy_memoryview.c\r\n   29548  1120863 TEST_TMP/memoryview/c/numpy_memoryview_readonly/numpy_memoryview_readonly.c\r\n   24313   899734 TEST_TMP/memoryview/c/relaxed_strides/relaxed_strides.c\r\n   25980   975096 TEST_TMP/memoryview/c/transpose_refcount/transpose_refcount.c\r\n   23649   869202 TEST_TMP/memoryview/c/view_return_errors/view_return_errors.c\r\n  627814 24814700 insgesamt\r\n```\r\n",
            "created_at": "2020-05-15T08:33:31Z",
            "html_url": "https://github.com/cython/cython/issues/3613#issuecomment-629107354",
            "id": 629107354,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3613",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTEwNzM1NA==",
            "updated_at": "2020-05-15T08:33:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629107354",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I can confirm that this fixes numcodecs compilation issues, thank you for the (as usual) insanely fast fix!",
            "created_at": "2020-05-17T19:02:53Z",
            "html_url": "https://github.com/cython/cython/issues/3613#issuecomment-629844801",
            "id": 629844801,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3613",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTg0NDgwMQ==",
            "updated_at": "2020-05-17T19:02:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629844801",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3613/comments",
    "created_at": "2020-05-15T02:47:14Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/703554?v=4",
                "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}",
                "followers_url": "https://api.github.com/users/alimanfoo/followers",
                "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}",
                "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alimanfoo",
                "id": 703554,
                "login": "alimanfoo",
                "node_id": "MDQ6VXNlcjcwMzU1NA==",
                "organizations_url": "https://api.github.com/users/alimanfoo/orgs",
                "received_events_url": "https://api.github.com/users/alimanfoo/received_events",
                "repos_url": "https://api.github.com/users/alimanfoo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alimanfoo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-15T02:47:14Z",
            "event": "mentioned",
            "id": 3339132172,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMzOTEzMjE3Mg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3339132172"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/703554?v=4",
                "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}",
                "followers_url": "https://api.github.com/users/alimanfoo/followers",
                "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}",
                "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alimanfoo",
                "id": 703554,
                "login": "alimanfoo",
                "node_id": "MDQ6VXNlcjcwMzU1NA==",
                "organizations_url": "https://api.github.com/users/alimanfoo/orgs",
                "received_events_url": "https://api.github.com/users/alimanfoo/received_events",
                "repos_url": "https://api.github.com/users/alimanfoo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alimanfoo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-15T02:47:14Z",
            "event": "subscribed",
            "id": 3339132174,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMzkxMzIxNzQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3339132174"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-15T02:47:14Z",
            "event": "mentioned",
            "id": 3339132177,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMzOTEzMjE3Nw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3339132177"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-15T02:47:14Z",
            "event": "subscribed",
            "id": 3339132179,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMzkxMzIxNzk=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3339132179"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-15T08:28:07Z",
            "event": "labeled",
            "id": 3339906771,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMzMzk5MDY3NzE=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3339906771"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-15T08:28:07Z",
            "event": "labeled",
            "id": 3339906772,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMzMzk5MDY3NzI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3339906772"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "97f5858ad37026d3263f44d05cdc0bbc9eb3e721",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/97f5858ad37026d3263f44d05cdc0bbc9eb3e721",
            "created_at": "2020-05-16T16:46:39Z",
            "event": "referenced",
            "id": 3343765594,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzNDM3NjU1OTQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3343765594"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-17T17:31:12Z",
            "event": "closed",
            "id": 3344765836,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzM0NDc2NTgzNg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3344765836"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-17T17:31:47Z",
            "event": "milestoned",
            "id": 3344766215,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMzNDQ3NjYyMTU=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3344766215"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3613/events",
    "html_url": "https://github.com/cython/cython/issues/3613",
    "id": 618658442,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3613/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 228,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 20,
        "state": "open",
        "title": "3.0",
        "updated_at": "2020-05-18T07:58:39Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU2MTg2NTg0NDI=",
    "number": 3613,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Change to default value of 'binding' compiler directive breaks numcodecs",
    "updated_at": "2020-05-17T19:02:53Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3613",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
        "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
        "followers_url": "https://api.github.com/users/tacaswell/followers",
        "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
        "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tacaswell",
        "id": 199813,
        "login": "tacaswell",
        "node_id": "MDQ6VXNlcjE5OTgxMw==",
        "organizations_url": "https://api.github.com/users/tacaswell/orgs",
        "received_events_url": "https://api.github.com/users/tacaswell/received_events",
        "repos_url": "https://api.github.com/users/tacaswell/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tacaswell"
    }
}