{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I put this code the following code in test.pyx.\r\n\r\n```\r\nctypedef struct TestType:\r\n    char string[10]\r\n\r\ncdef f(const TestType *x):\r\n    cdef const char *y = x.string\r\n```\r\n\r\nThen I compiled it with `cython test.pyx -o test.c && gcc -I /usr/include/python3.6m/ -lpython3.6m test.c -shared -fPIC -Wall -o test.so`.\r\n\r\nx.string is an array behind a const pointer, so it becomes a `const char *`, which is then assigned to a `const char *` variable. The equivalent C code compiles without warnings unless you remove const from the variable (except for y being unused):\r\n\r\n```\r\nstruct TestType {\r\n    char string[10];\r\n};\r\n\r\nvoid f(const struct TestType *x) {\r\n    const char *y = x->string;\r\n}\r\n```\r\n\r\nThis was compiled with `gcc test2.c -shared -fPIC -Wall -o test2.so`.\r\n\r\nHowever, in the C code generated by Cython, the pointer if first assigned to an intermediate value (`__pyx_t_1`), which is declared as `char *`, which triggers a discarded-qualifiers warning.\r\n\r\nThis was done with Cython 0.27.3 and GCC 7.5.0",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Here's another example of what I think is the same issue.  I encountered it while trying to eliminate some compiler warnings that occur when building SciPy.\r\n\r\n`example.pyx`:\r\n```\r\nfrom cpython.pycapsule cimport PyCapsule_GetName\r\n\r\n\r\ncdef void raw_capsule_destructor(object capsule):\r\n    cdef const char *name\r\n    name = PyCapsule_GetName(capsule)\r\n```\r\nThe return type of [`PyCapsule_GetName`](https://docs.python.org/3/c-api/capsule.html#c.PyCapsule_GetName) is `const char *`.  The relevant bit of code generated by Cython 0.29.20 is\r\n```\r\n/* \"example.pyx\":4\r\n * \r\n * \r\n * cdef void raw_capsule_destructor(object capsule):             # <<<<<<<<<<<<<<\r\n *     cdef const char *name\r\n *     name = PyCapsule_GetName(capsule)\r\n */\r\n\r\nstatic void __pyx_f_7example_raw_capsule_destructor(PyObject *__pyx_v_capsule) {\r\n  CYTHON_UNUSED char const *__pyx_v_name;\r\n  __Pyx_RefNannyDeclarations\r\n  char *__pyx_t_1;\r\n  int __pyx_lineno = 0;\r\n  const char *__pyx_filename = NULL;\r\n  int __pyx_clineno = 0;\r\n  __Pyx_RefNannySetupContext(\"raw_capsule_destructor\", 0);\r\n\r\n  /* \"example.pyx\":6\r\n * cdef void raw_capsule_destructor(object capsule):\r\n *     cdef const char *name\r\n *     name = PyCapsule_GetName(capsule)             # <<<<<<<<<<<<<<\r\n */\r\n  __pyx_t_1 = PyCapsule_GetName(__pyx_v_capsule); if (unlikely(__pyx_t_1 == ((char *)NULL) && PyErr_Occurred())) __PYX_ERR(0, 6, __pyx_L1_error)\r\n  __pyx_v_name = __pyx_t_1;\r\n```\r\nThe compiler warns about the line `__pyx_t_1 = PyCapsule_GetName(...)`, because `__pyx_t_1` has type `char *`, not `const char *`.  `__pyx_v_name` has the correct type, but that is assigned from `__pyx_t_1` instead of directly from the call to `PyCapsule_GetName`.",
            "created_at": "2020-12-05T13:42:02Z",
            "html_url": "https://github.com/cython/cython/issues/3368#issuecomment-739252695",
            "id": 739252695,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3368",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczOTI1MjY5NQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-05T13:42:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/739252695",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/321463?v=4",
                "events_url": "https://api.github.com/users/WarrenWeckesser/events{/privacy}",
                "followers_url": "https://api.github.com/users/WarrenWeckesser/followers",
                "following_url": "https://api.github.com/users/WarrenWeckesser/following{/other_user}",
                "gists_url": "https://api.github.com/users/WarrenWeckesser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WarrenWeckesser",
                "id": 321463,
                "login": "WarrenWeckesser",
                "node_id": "MDQ6VXNlcjMyMTQ2Mw==",
                "organizations_url": "https://api.github.com/users/WarrenWeckesser/orgs",
                "received_events_url": "https://api.github.com/users/WarrenWeckesser/received_events",
                "repos_url": "https://api.github.com/users/WarrenWeckesser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WarrenWeckesser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WarrenWeckesser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WarrenWeckesser"
            }
        },
        {
            "author_association": "NONE",
            "body": "Maybe my issue isn't the same as the original problem reported here.  I see that in [`pycapsule.pxd`](https://github.com/cython/cython/blob/084a25f55d0b4cf8b4c3cd496ec57bb3e2f57f71/Cython/Includes/cpython/pycapsule.pxd), the prototype for `PyCapsule_GetName` is\r\n \r\n        char* PyCapsule_GetName(object capsule) except? NULL\r\n\r\nand there is comment near the top of the file that says \r\n\r\n    # note all char* in the below functions are actually const char*\r\n\r\nIf I use my own declaration instead of `pycapsule.pxd`, e.g.\r\n\r\n`example2.pyx`\r\n```\r\ncdef extern from \"Python.h\":\r\n    const char* PyCapsule_GetName(object capsule) except? NULL\r\n\r\ncdef void raw_capsule_destructor(object capsule):\r\n    cdef const char *name\r\n    name = PyCapsule_GetName(capsule)\r\n```\r\nthe declaration of `__pyx_t_1` has the `const` qualifier.\r\n\r\nSo I guess my question (off-topic for this issue, sorry @LinAGKar !) is why does `pycapsule.pxd` not include the `const` qualifier in the function prototypes?\r\n",
            "created_at": "2020-12-05T13:55:58Z",
            "html_url": "https://github.com/cython/cython/issues/3368#issuecomment-739254269",
            "id": 739254269,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3368",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczOTI1NDI2OQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-05T13:55:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/739254269",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/321463?v=4",
                "events_url": "https://api.github.com/users/WarrenWeckesser/events{/privacy}",
                "followers_url": "https://api.github.com/users/WarrenWeckesser/followers",
                "following_url": "https://api.github.com/users/WarrenWeckesser/following{/other_user}",
                "gists_url": "https://api.github.com/users/WarrenWeckesser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WarrenWeckesser",
                "id": 321463,
                "login": "WarrenWeckesser",
                "node_id": "MDQ6VXNlcjMyMTQ2Mw==",
                "organizations_url": "https://api.github.com/users/WarrenWeckesser/orgs",
                "received_events_url": "https://api.github.com/users/WarrenWeckesser/received_events",
                "repos_url": "https://api.github.com/users/WarrenWeckesser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WarrenWeckesser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WarrenWeckesser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WarrenWeckesser"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm not sure why these are declared `char *` rather than `const char *` (maybe it was before const was well supported?), but I'd welcome a pull request to resolve this. ",
            "created_at": "2020-12-09T04:43:19Z",
            "html_url": "https://github.com/cython/cython/issues/3368#issuecomment-741522925",
            "id": 741522925,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3368",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTUyMjkyNQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-09T04:43:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/741522925",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3368/comments",
    "created_at": "2020-02-19T13:05:44Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/3390621?v=4",
                "events_url": "https://api.github.com/users/LinAGKar/events{/privacy}",
                "followers_url": "https://api.github.com/users/LinAGKar/followers",
                "following_url": "https://api.github.com/users/LinAGKar/following{/other_user}",
                "gists_url": "https://api.github.com/users/LinAGKar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LinAGKar",
                "id": 3390621,
                "login": "LinAGKar",
                "node_id": "MDQ6VXNlcjMzOTA2MjE=",
                "organizations_url": "https://api.github.com/users/LinAGKar/orgs",
                "received_events_url": "https://api.github.com/users/LinAGKar/received_events",
                "repos_url": "https://api.github.com/users/LinAGKar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LinAGKar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LinAGKar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LinAGKar"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-12-05T13:55:58Z",
            "event": "mentioned",
            "id": 4075622845,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA3NTYyMjg0NQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4075622845"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/3390621?v=4",
                "events_url": "https://api.github.com/users/LinAGKar/events{/privacy}",
                "followers_url": "https://api.github.com/users/LinAGKar/followers",
                "following_url": "https://api.github.com/users/LinAGKar/following{/other_user}",
                "gists_url": "https://api.github.com/users/LinAGKar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LinAGKar",
                "id": 3390621,
                "login": "LinAGKar",
                "node_id": "MDQ6VXNlcjMzOTA2MjE=",
                "organizations_url": "https://api.github.com/users/LinAGKar/orgs",
                "received_events_url": "https://api.github.com/users/LinAGKar/received_events",
                "repos_url": "https://api.github.com/users/LinAGKar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LinAGKar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LinAGKar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LinAGKar"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-12-05T13:55:58Z",
            "event": "subscribed",
            "id": 4075622846,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwNzU2MjI4NDY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4075622846"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3368/events",
    "html_url": "https://github.com/cython/cython/issues/3368",
    "id": 567556537,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3368/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Njc1NTY1Mzc=",
    "number": 3368,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "C array behind const pointer assigned to non-const temporary pointer variable (triggers discarded-qualifiers warning)",
    "updated_at": "2020-12-09T04:43:19Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3368",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/3390621?v=4",
        "events_url": "https://api.github.com/users/LinAGKar/events{/privacy}",
        "followers_url": "https://api.github.com/users/LinAGKar/followers",
        "following_url": "https://api.github.com/users/LinAGKar/following{/other_user}",
        "gists_url": "https://api.github.com/users/LinAGKar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LinAGKar",
        "id": 3390621,
        "login": "LinAGKar",
        "node_id": "MDQ6VXNlcjMzOTA2MjE=",
        "organizations_url": "https://api.github.com/users/LinAGKar/orgs",
        "received_events_url": "https://api.github.com/users/LinAGKar/received_events",
        "repos_url": "https://api.github.com/users/LinAGKar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LinAGKar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LinAGKar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LinAGKar"
    }
}