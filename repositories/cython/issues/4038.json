{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Windows 10, Python 3.8.3, Cython 3.0a6, Visual Studio 2017 version 15.9.34.\r\n\r\n[__Pyx_FakeReference](https://github.com/cython/cython/blob/9a761a637fce6a7b70735ae2248963d63e569e14/Cython/Utility/ModuleSetupCode.c#L458) contains a comment explaining why it has to cast const away, so I'm not sure whether the following is a bug or permitted behavior.\r\n\r\nThis code can be used to call a non-const method on a const object:\r\n\r\n```cpp\r\n// ab.h\r\n\r\n#pragma once\r\n\r\n#include <iostream>\r\n\r\nstruct B\r\n{\r\n    void mutate()\r\n    {\r\n        std::cout << ++i << \"\\n\";\r\n    }\r\n    int i = 0;\r\n};\r\n\r\nstruct A\r\n{\r\n    const B& getB() const\r\n    {\r\n        return b;\r\n    }\r\n\r\n    B b;\r\n};\r\n```\r\n\r\n```cython\r\n# f.pyx\r\n\r\ncdef extern from \"ab.h\":\r\n    cppclass B:\r\n        void mutate()\r\n\r\n    cppclass A:\r\n        B& getB() except +\r\n\r\ncdef g(const A& a):\r\n    a.getB().mutate()\r\n\r\ndef f():\r\n    cdef A a\r\n    g(a)\r\n```\r\n\r\n```python\r\n# setup.py\r\n\r\n# python setup.py build_ext --inplace\r\n\r\nfrom setuptools import setup, Extension\r\nfrom Cython.Build import cythonize\r\n\r\ncommon_options = {\"language\": 'c++'}\r\n\r\nextensions = [\r\n    Extension(\"f\", [\"f.pyx\"], language='c++', extra_compile_args=[\"/Zc:__cplusplus\"])\r\n]\r\n\r\nsetup(\r\n    ext_modules=cythonize(extensions, compiler_directives={\"language_level\" : \"3\"}),\r\n    zip_safe=False\r\n)\r\n```\r\n\r\n**Observed behavior**\r\nCompiling the extension with `python setup.py build_ext --inplace` gives no warnings or errors and produces a .pyd file. Importing `f` and calling `f.f()` prints 1.\r\n\r\n**Expected behavior**\r\nIf `except +` is removed from `f.pyx`, the C++ compiler refuses to compile the generated C++ file because of `__pyx_v_a.getB().mutate()`. In my case (MSVC), it's error C2662 (\"cannot convert 'this' pointer from 'const B' to 'B&'\"). I was expecting some kind of failure to occur with `except +` as well.\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4038/comments",
    "created_at": "2021-03-16T16:28:29Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4038/events",
    "html_url": "https://github.com/cython/cython/issues/4038",
    "id": 832988775,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4038/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4MzI5ODg3NzU=",
    "number": 4038,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] `except +` allows bypassing `const`",
    "updated_at": "2021-03-16T16:28:29Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4038",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2109478?v=4",
        "events_url": "https://api.github.com/users/Zabolekar/events{/privacy}",
        "followers_url": "https://api.github.com/users/Zabolekar/followers",
        "following_url": "https://api.github.com/users/Zabolekar/following{/other_user}",
        "gists_url": "https://api.github.com/users/Zabolekar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Zabolekar",
        "id": 2109478,
        "login": "Zabolekar",
        "node_id": "MDQ6VXNlcjIxMDk0Nzg=",
        "organizations_url": "https://api.github.com/users/Zabolekar/orgs",
        "received_events_url": "https://api.github.com/users/Zabolekar/received_events",
        "repos_url": "https://api.github.com/users/Zabolekar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Zabolekar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Zabolekar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Zabolekar"
    }
}