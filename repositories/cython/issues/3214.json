{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Testing the latest release of Cython (0.29.13) using both Python2 and Python3 (with `language_level` \"2\" and \"3\", respectively), I believe I found a bug when comparing fields of a memoryview of a numpy recarray that are byte strings. The comparison always results in `False`. As a minimal example from the python3 code:\r\n\r\n```cython\r\nimport numpy as np\r\ncimport numpy as np\r\n\r\ncdef packed struct a_type:\r\n    np.float64_t a1\r\n    char[5] a2\r\n\r\ncpdef double test_func(a_type[::1] x):\r\n    cdef:\r\n        int i\r\n        double res\r\n\r\n    res = 0.0\r\n\r\n    for i in range(1, x.shape[0]):\r\n        print(x[0].a2, x[i].a2, x[0].a2 == x[i].a2, x[i].a2 == b'abcd')\r\n        if x[0].a2 == x[i].a2:\r\n            res += 1.0\r\n\r\n    return 0.0\r\n```\r\n\r\nand then running the code:\r\n\r\n```python\r\nimport numpy as np\r\n\r\nfrom mod1.ftest import test_func\r\n\r\nif __name__ == '__main__':\r\n    a = np.recarray(4, dtype=[('a1', np.float64), ('a2', 'S5')])\r\n    a[0] = (9.0, b'abcd')\r\n    a[1] = (8.0, b'abcd')\r\n    a[2] = (8.0, b'xyz')\r\n    a[3] = (8.0, b'abcd')\r\n\r\n    print(test_func(a))\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nb'abcd' b'abcd' False True\r\nb'abcd' b'xyz' False False\r\nb'abcd' b'abcd' False True\r\n0.0\r\n```\r\n\r\nComparing the field to a literal byte string works correctly as demonstrated in the print statement. Calling `.decode()` on the field also corrects the issue. \r\n\r\nI've also pulled up an old environment I had laying around with Cython 0.25.2, and I see the issue there as well.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": " **x[0].a2 == x[i].a2** \r\n transform to \r\n```\r\n__pyx_t_11 = __Pyx_PyBool_FromLong(((*((struct __pyx_t_6gh3214_a_type *) ( /* dim=0 */ ((char *) (((struct __pyx_t_6gh3214_a_type *) __pyx_v_x.data) + __pyx_t_9)) ))).a2 == (*((struct __pyx_t_6gh3214_a_type *) ( /* dim=0 */ ((char *) (((struct __p\r\nyx_t_6gh3214_a_type *) __pyx_v_x.data) + __pyx_t_10)) ))).a2));\r\n```\r\nso we are comparing char[] memory addresses NOT string literals.\r\n\r\nI could suggest such a workaround \r\n```\r\nfor i in range(1, x.shape[0]):\r\n        print(x[0].a2, x[i].a2, str(x[0].a2) == str(x[i].a2), x[i].a2 == b'abcd')\r\n        if x[0].a2 == x[i].a2:\r\n            res += 1.0\r\n```\r\nAs i can see it adding type conversion call \r\n`__Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_10)`\r\nbut after it's using \r\n**PyObject_RichCompare** instead of **==**.",
            "created_at": "2019-10-29T04:31:53Z",
            "html_url": "https://github.com/cython/cython/issues/3214#issuecomment-547251641",
            "id": 547251641,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3214",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI1MTY0MQ==",
            "updated_at": "2019-10-29T04:31:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/547251641",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/688715?v=4",
                "events_url": "https://api.github.com/users/achernomorov/events{/privacy}",
                "followers_url": "https://api.github.com/users/achernomorov/followers",
                "following_url": "https://api.github.com/users/achernomorov/following{/other_user}",
                "gists_url": "https://api.github.com/users/achernomorov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/achernomorov",
                "id": 688715,
                "login": "achernomorov",
                "node_id": "MDQ6VXNlcjY4ODcxNQ==",
                "organizations_url": "https://api.github.com/users/achernomorov/orgs",
                "received_events_url": "https://api.github.com/users/achernomorov/received_events",
                "repos_url": "https://api.github.com/users/achernomorov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/achernomorov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/achernomorov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/achernomorov"
            }
        },
        {
            "author_association": "NONE",
            "body": "https://github.com/cython/cython/issues/1141 seems related. ",
            "created_at": "2019-10-29T13:37:39Z",
            "html_url": "https://github.com/cython/cython/issues/3214#issuecomment-547423236",
            "id": 547423236,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3214",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzQyMzIzNg==",
            "updated_at": "2019-10-29T13:37:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/547423236",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/589279?v=4",
                "events_url": "https://api.github.com/users/synapticarbors/events{/privacy}",
                "followers_url": "https://api.github.com/users/synapticarbors/followers",
                "following_url": "https://api.github.com/users/synapticarbors/following{/other_user}",
                "gists_url": "https://api.github.com/users/synapticarbors/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/synapticarbors",
                "id": 589279,
                "login": "synapticarbors",
                "node_id": "MDQ6VXNlcjU4OTI3OQ==",
                "organizations_url": "https://api.github.com/users/synapticarbors/orgs",
                "received_events_url": "https://api.github.com/users/synapticarbors/received_events",
                "repos_url": "https://api.github.com/users/synapticarbors/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/synapticarbors/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/synapticarbors/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/synapticarbors"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3214/comments",
    "created_at": "2019-10-28T15:01:21Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3214/events",
    "html_url": "https://github.com/cython/cython/issues/3214",
    "id": 513360780,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3214/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MTMzNjA3ODA=",
    "number": 3214,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Incorrect result when comparing strings in memoryview of numpy recarray",
    "updated_at": "2019-10-29T13:37:39Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3214",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/589279?v=4",
        "events_url": "https://api.github.com/users/synapticarbors/events{/privacy}",
        "followers_url": "https://api.github.com/users/synapticarbors/followers",
        "following_url": "https://api.github.com/users/synapticarbors/following{/other_user}",
        "gists_url": "https://api.github.com/users/synapticarbors/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/synapticarbors",
        "id": 589279,
        "login": "synapticarbors",
        "node_id": "MDQ6VXNlcjU4OTI3OQ==",
        "organizations_url": "https://api.github.com/users/synapticarbors/orgs",
        "received_events_url": "https://api.github.com/users/synapticarbors/received_events",
        "repos_url": "https://api.github.com/users/synapticarbors/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/synapticarbors/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/synapticarbors/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/synapticarbors"
    }
}