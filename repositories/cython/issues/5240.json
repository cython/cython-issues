{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\r\n\r\nWorking on some Cython code I encountered a problem in using classes where a `cpdef` method in the parent class is used inside a generator in a child class. The compilation step doesn't fail but  it outputs this before finishing:\r\n\r\n```\r\n/home/bob/Desktop/mesa-perf/mesa_perf/bug_cython.c: In function ‘__pyx_pf_10bug_cython_1b_func’:\r\n/home/bob/Desktop/mesa-perf/mesa_perf/bug_cython.c:3214:220: warning: passing argument 1 of ‘__Pyx_CFunc_7b59a9__object__lParena__comma_object__comma_int__dunderpyx_skip_dispatch__rParen__etc_to_py_4self_1i’ from incompatible pointer type [-Wincompatible-pointer-types]\r\n 3214 | vtabstruct_10bug_cython_b *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.filt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)\r\n      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\r\n      |                                                                             |\r\n      |                                                                             PyObject * (*)(struct __pyx_obj_10bug_cython_a *, PyObject *, int) {aka struct _object * (*)(struct __pyx_obj_10bug_cython_a *, struct _object *, int)}\r\n/home/bob/Desktop/mesa-perf/mesa_perf/bug_cython.c:1959:132: note: expected ‘PyObject * (*)(struct __pyx_obj_10bug_cython_a *, PyObject *)’ {aka ‘struct _object * (*)(struct __pyx_obj_10bug_cython_a *, struct _object *)’} but argument is of type ‘PyObject * (*)(struct __pyx_obj_10bug_cython_a *, PyObject *, int)’ {aka ‘struct _object * (*)(struct __pyx_obj_10bug_cython_a *, struct _object *, int)’}\r\n 1959 | omma_object__comma_int__dunderpyx_skip_dispatch__rParen__etc_to_py_4self_1i(PyObject *(*)(struct __pyx_obj_10bug_cython_a *, PyObject *)); /*proto*/\r\n      |                  \r\n```                                                           \r\n\r\nAnd then, trying to use the function gives an error:\r\n\r\n```python\r\n>>> from bug_cython import b\r\n>>> s = b()\r\n>>> s.func([2])\r\n<filter object at 0x7f62c6e2a620>\r\n>>> list(s.func([2]))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<stringsource>\", line 67, in cfunc.to_py.__Pyx_CFunc_7b59a9__object__lParena__comma_object__comma_int__dunderpyx_skip_dispatch__rParen__etc_to_py_4self_1i.wrap\r\nTypeError: wrap() takes exactly 2 positional arguments (1 given)\r\n```\r\n\r\nExperimenting a bit it seems that if the `cpdef` function is mutated in a `def` function or if it is moved in the child class the code instead works.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n```cython\r\ncdef class a:\r\n    \r\n    cpdef filt(self, i):\r\n        \r\n        return True\r\n        \r\ncdef class b(a):\r\n        \r\n    def func(self, list_):\r\n\r\n        return filter(self.filt, list_) # it fails also with other functions returning iterators: map, ...\r\n```\r\n\r\n\r\n### Expected behaviour\r\n\r\nNo compilation warning and no error when using the method\r\n\r\n### Environment\r\n\r\nOS: Linux\r\nPython version: 3.10.6\r\nCython version: 3.0.0a11",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5240/comments",
    "created_at": "2023-02-04T19:48:42Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5240/events",
    "html_url": "https://github.com/cython/cython/issues/5240",
    "id": 1571099135,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5240/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5dpRH_",
    "number": 5240,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5240/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5240/timeline",
    "title": "[BUG] cpdef method used to create iterator from child class fails",
    "updated_at": "2023-02-11T13:32:26Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5240",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/68152031?v=4",
        "events_url": "https://api.github.com/users/Tortar/events{/privacy}",
        "followers_url": "https://api.github.com/users/Tortar/followers",
        "following_url": "https://api.github.com/users/Tortar/following{/other_user}",
        "gists_url": "https://api.github.com/users/Tortar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Tortar",
        "id": 68152031,
        "login": "Tortar",
        "node_id": "MDQ6VXNlcjY4MTUyMDMx",
        "organizations_url": "https://api.github.com/users/Tortar/orgs",
        "received_events_url": "https://api.github.com/users/Tortar/received_events",
        "repos_url": "https://api.github.com/users/Tortar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Tortar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Tortar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Tortar"
    }
}