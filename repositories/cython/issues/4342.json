{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "In the [Zokusei](https://github.com/RonnyPfannschmidt/Zokusei) project im currently exploring a alternative to data-classes/attrs\r\n\r\nfor optimization purposes, i'd like to explore enabling cython to create constructors/helper methods tailored to the specific classes instead of just using loops over field objects \r\n\r\ninstead of having something like https://github.com/RonnyPfannschmidt/Zokusei/blob/d4114c1266b740e421ee07368be55e6f0cc7e415/src/zokusei/__init__.py#L29-L44\r\n\r\n\r\ni'd like to be able to have cython act,\r\nas if for a\r\n\r\n```python\r\n# point.py\r\nclass Point(...)\r\n    x: int = field()\r\n    y: int = field()\r\n```\r\nthere also was a \r\n\r\n```\r\ndef __init__(self, x, y):\r\n   self.x = x\r\n   self.y = y\r\n```\r\n\r\nand in case there was a \r\n```cython\r\n# point.pyx\r\n\r\ncpdef class Point(...)::\r\n   cpdef int x\r\n   cpdef int y\r\n\r\n```\r\ni would like to be able to have cython act,\r\nas of the ctor was also declared with additional data types as well\r\n\r\nas next steps im exploring good ways to write the generic ctors in a way cython speeds them up a little, but i'd like to be able to use the  full power of cython from \"metaprogramming\"\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "Right now we don't have a lot of metaprogramming support (because it's a bit more complicated than regular Python - \"runtime\" no longer really works for code generation).\r\n\r\nI think there's been a number of proposals in the past, but none have been really convincing (and none have been implemented).\r\n\r\nOur own (proposed) implementation of dataclasses relies mostly on code-generation (which your project is aiming to avoid) but it also has access to a lot of internal Cython details to help it. And it isn't hugely pretty.\r\n\r\nSo I don't have any great suggestions - I can see why it'd be nice but I can also see why it hasn't been done",
            "created_at": "2021-08-14T20:20:04Z",
            "html_url": "https://github.com/cython/cython/issues/4342#issuecomment-898954780",
            "id": 898954780,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4342",
            "node_id": "IC_kwDOABDGAc41lPYc",
            "performed_via_github_app": null,
            "updated_at": "2021-08-14T20:20:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/898954780",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "for my particular use-case - it would probably be enough if there was a way to make cython inline loops of known values\r\nalternatively, if there was any way to generate/alter a \"Ast\" that cython is supposed to use it would also be a big help\r\n\r\nif there was any way to tell cython more about the building blocks its allowed to use in some places instead of the roundabout code,\r\nthat would help\r\n\r\nalso - i don't mind generating code for the cythonize my datatypes route\r\n\r\nafter all thats a compilers step to make class loading and execution cheaper and faster\r\n\r\nwhat i want to avoid however is runtime codegen (so if  its cythonize its fine to use a codegen , if its not cythonize, its bad to use a codegen\r\n\r\n",
            "created_at": "2021-08-14T20:30:03Z",
            "html_url": "https://github.com/cython/cython/issues/4342#issuecomment-898955630",
            "id": 898955630,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4342",
            "node_id": "IC_kwDOABDGAc41lPlu",
            "performed_via_github_app": null,
            "updated_at": "2021-08-14T20:30:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/898955630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/156838?v=4",
                "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
                "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
                "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
                "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/RonnyPfannschmidt",
                "id": 156838,
                "login": "RonnyPfannschmidt",
                "node_id": "MDQ6VXNlcjE1NjgzOA==",
                "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
                "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
                "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/RonnyPfannschmidt"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4342/comments",
    "created_at": "2021-08-14T19:18:14Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4342/events",
    "html_url": "https://github.com/cython/cython/issues/4342",
    "id": 970978372,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4342/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5NzA5NzgzNzI=",
    "number": 4342,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] provide helpers to allow cythonizing variants of custom declarative tools",
    "updated_at": "2021-08-14T20:30:03Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4342",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/156838?v=4",
        "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
        "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
        "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
        "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/RonnyPfannschmidt",
        "id": 156838,
        "login": "RonnyPfannschmidt",
        "node_id": "MDQ6VXNlcjE1NjgzOA==",
        "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
        "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
        "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/RonnyPfannschmidt"
    }
}