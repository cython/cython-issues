{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Compiling some code with g++ 9.2.1 will oftentimes segfault when there are openmp segments, sometimes throwing a message about double-free. Problem doesn't happen with earlier versions of g++, nor with clang or msvc.\r\n\r\nExample code that oftentimes segfaults:\r\n* `cppfile.cpp`:\r\n```cpp\r\n#include <vector>\r\n#include <stddef.h>\r\n#include <omp.h>\r\n#include <unordered_set>\r\n\r\nvoid check_more_two_values(double arr_num[], size_t nrows, size_t ncols, int nthreads, char too_few_values[])\r\n{\r\n    std::vector<std::unordered_set<double>> seen_values(ncols);\r\n\r\n    #pragma omp parallel for schedule(dynamic) num_threads(std::min(nthreads, (int)ncols)) shared(arr_num, nrows, ncols, too_few_values, seen_values)\r\n    for (size_t col = 0; col < ncols; col++) {\r\n        for (size_t row = 0; row < nrows; row++) {\r\n            if (!isnan(arr_num[row + col * nrows]))\r\n                seen_values[col].insert(arr_num[row + col * nrows]);\r\n            if (seen_values[col].size() > 2) break;\r\n        }\r\n        if (seen_values[col].size() <= 2) too_few_values[col] = true;\r\n    }\r\n}\r\n\r\n```\r\n\r\n* `cyfile.pyx`:\r\n```python\r\nimport numpy as np\r\ncimport numpy as np\r\nimport ctypes\r\n\r\ncdef extern from \"cppfile.cpp\":\r\n\tvoid check_more_two_values(double *arr_num, size_t nrows, size_t ncols, int nthreads, char *too_few_values)\r\n\r\ndef call_check_more_two_values(np.ndarray[double, ndim = 2] arr, int nthreads):\r\n\tcdef size_t nrows = arr.shape[0]\r\n\tcdef size_t ncols = arr.shape[1]\r\n\tcdef np.ndarray[char, ndim = 1] outp = np.zeros(ncols, dtype = ctypes.c_char)\r\n\r\n\tif not arr.flags['F_CONTIGUOUS']:\r\n\t\tarr = np.asfortranarray(arr)\r\n\t\r\n\tcheck_more_two_values(&arr[0, 0], nrows, ncols, nthreads, &outp[0])\r\n\treturn outp\r\n\r\n```\r\n\r\n* `setup.py`:\r\n```python\r\ntry:\r\n    from setuptools import setup\r\n    from setuptools.extension import Extension\r\nexcept:\r\n    from distutils.core import setup\r\n    from distutils.extension import Extension\r\n\r\nimport numpy as np\r\nfrom Cython.Distutils import build_ext\r\n\r\n\r\nsetup(\r\n    name  = \"cyext\",\r\n    packages = [\"cyext\"],\r\n    version = '1.0.6',\r\n    cmdclass = {'build_ext': build_ext},\r\n    ext_modules = [Extension(\r\n                                \"cyext\",\r\n                                sources=[\"cyfile.pyx\"],\r\n                                include_dirs=[np.get_include()],\r\n                                language=\"c++\",\r\n                                install_requires = [\"numpy\", \"pandas>=0.24.0\", \"cython\"],\r\n                                extra_compile_args = [\"-std=c++11\", \"-O2\", \"-march=native\", \"-fopenmp\"],\r\n                                extra_link_args = [\"-fopenmp\"]\r\n                            )]\r\n    )\r\n\r\n```\r\n\r\n* `pyfile.py`:\r\n```python\r\nimport numpy as np, pandas as pd\r\nimport cyext\r\n\r\nnrows = 2000\r\nncols = 9\r\nnthreads = 9\r\nnp.random.seed(100)\r\narr = pd.DataFrame({\r\n\t\"col1\" : np.random.gamma(1, 1, size = nrows),\r\n\t\"col2\" : np.random.random(size = nrows),\r\n\t\"col3\" : np.random.normal(size = nrows),\r\n\t\"col4\" : np.random.beta(1, 1, size = nrows),\r\n\t\"col5\" : np.zeros(nrows),\r\n\t\"col6\" : np.ones(nrows),\r\n\t\"col7\" : np.random.randint(5, size = nrows),\r\n\t\"col8\" : np.random.randint(2, size = nrows),\r\n\t\"col9\" : np.random.random(size = nrows) ** 2\r\n\t}).astype(\"float64\")\r\n\r\nhas_few_vals = cyext.call_check_more_two_values(arr.to_numpy(), nthreads)\r\nprint(has_few_vals)\r\n\r\narr *= 2\r\nhas_few_vals = cyext.call_check_more_two_values(arr.to_numpy(), nthreads)\r\nprint(has_few_vals)\r\n\r\n```\r\n\r\nCompile with `python setup.py build_ext --inplace --force`, then execute `python pyfile.py`. Removing `-fopenmp` from `setup.py` will not result in a segfault.\r\n\r\nSetup: Cython 0.29.13, Python 3.7.3, running on debian bullseye (testing), kernel 5.2, CPU Ryzen 2700.\r\n\r\nAttached is the whole older with cython-generated `.cpp` file from `cyfile.pyx` and the shared object.\r\n[cy_test.tar.gz](https://github.com/cython/cython/files/3586605/cy_test.tar.gz)\r\n\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3135/comments",
    "created_at": "2019-09-07T12:31:21Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/11860098?v=4",
                "events_url": "https://api.github.com/users/david-cortes/events{/privacy}",
                "followers_url": "https://api.github.com/users/david-cortes/followers",
                "following_url": "https://api.github.com/users/david-cortes/following{/other_user}",
                "gists_url": "https://api.github.com/users/david-cortes/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/david-cortes",
                "id": 11860098,
                "login": "david-cortes",
                "node_id": "MDQ6VXNlcjExODYwMDk4",
                "organizations_url": "https://api.github.com/users/david-cortes/orgs",
                "received_events_url": "https://api.github.com/users/david-cortes/received_events",
                "repos_url": "https://api.github.com/users/david-cortes/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/david-cortes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/david-cortes/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/david-cortes"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-07T12:37:38Z",
            "event": "renamed",
            "id": 2616186827,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjYxNjE4NjgyNw==",
            "rename": {
                "from": "Segfault when interfacing OpenMP C++ code",
                "to": "Segfault when interfacing OpenMP C++ code compiled with latest g++"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/2616186827"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/11860098?v=4",
                "events_url": "https://api.github.com/users/david-cortes/events{/privacy}",
                "followers_url": "https://api.github.com/users/david-cortes/followers",
                "following_url": "https://api.github.com/users/david-cortes/following{/other_user}",
                "gists_url": "https://api.github.com/users/david-cortes/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/david-cortes",
                "id": 11860098,
                "login": "david-cortes",
                "node_id": "MDQ6VXNlcjExODYwMDk4",
                "organizations_url": "https://api.github.com/users/david-cortes/orgs",
                "received_events_url": "https://api.github.com/users/david-cortes/received_events",
                "repos_url": "https://api.github.com/users/david-cortes/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/david-cortes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/david-cortes/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/david-cortes"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-08T08:34:54Z",
            "event": "renamed",
            "id": 2616632010,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjYxNjYzMjAxMA==",
            "rename": {
                "from": "Segfault when interfacing OpenMP C++ code compiled with latest g++",
                "to": "Segfault when passing np.array pointer to OpenMP code compiled with latest g++"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/2616632010"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3135/events",
    "html_url": "https://github.com/cython/cython/issues/3135",
    "id": 490630387,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3135/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTA2MzAzODc=",
    "number": 3135,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Segfault when passing np.array pointer to OpenMP code compiled with latest g++",
    "updated_at": "2019-09-08T08:34:54Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3135",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/11860098?v=4",
        "events_url": "https://api.github.com/users/david-cortes/events{/privacy}",
        "followers_url": "https://api.github.com/users/david-cortes/followers",
        "following_url": "https://api.github.com/users/david-cortes/following{/other_user}",
        "gists_url": "https://api.github.com/users/david-cortes/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/david-cortes",
        "id": 11860098,
        "login": "david-cortes",
        "node_id": "MDQ6VXNlcjExODYwMDk4",
        "organizations_url": "https://api.github.com/users/david-cortes/orgs",
        "received_events_url": "https://api.github.com/users/david-cortes/received_events",
        "repos_url": "https://api.github.com/users/david-cortes/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/david-cortes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/david-cortes/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/david-cortes"
    }
}