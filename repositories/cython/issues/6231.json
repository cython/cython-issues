{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\r\n\r\nWhen we declare a class that derives from another class, and some member functions are inherited, the return type of the inherited member does not accept a declaration as a `ctuple`. In that case `cythonize` returns an error indicating\r\n\r\n```\r\nSignature not compatible with previous declaration\r\n```\r\n\r\nIt works perfectly with simpler types that do not have a parenthesis (such as `tuple`, `double`...) and it also works when the parent and child class are within the same `.pyx` file.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nThe following does not work\r\n`parent.pxd`\r\n```cython\r\n# cython: language_level=3\r\n\r\ncdef class Parent:\r\n    cpdef (double, double) func(self, double[:] a, double[:] b)\r\n\r\n```\r\n\r\nand `child.pyx`\r\n```cython\r\n# cython: language_level=3\r\n\r\nfrom parent cimport Parent\r\n\r\ncdef class Child(Parent):\r\n    cpdef (double, double) func(self, double[:] a, double[:] b):\r\n        return 0,1\r\n```\r\n\r\n--------------------------------\r\n\r\nThe following works:\r\n\r\n`parent.pxd`\r\n```cython\r\n# cython: language_level=3\r\n\r\ncdef class Parent:\r\n    cpdef tuple func(self, double[:] a, double[:] b)\r\n\r\n```\r\n\r\nand `child.pyx`\r\n```cython\r\n# cython: language_level=3\r\nfrom parent cimport Parent\r\n\r\ncdef class Child(Parent):\r\n    cpdef tuple func(self, double[:] a, double[:] b):\r\n        return 0,1\r\n```\r\n\r\n\r\n--------------------------------\r\n\r\nThe following works:\r\n\r\n`child.pxd` # note here this is \"child.pxd\" and not \"parent.pxd\"\r\n```cython\r\n# cython: language_level=3\r\n\r\ncdef class Parent:\r\n    cpdef (double, double) func(self, double[:] a, double[:] b)\r\n```\r\n\r\nand `child.pyx`\r\n```cython\r\n# cython: language_level=3\r\n\r\ncdef class Parent:\r\n    cpdef (double, double) func(self, double[:] a, double[:] b):\r\n        pass\r\n\r\n\r\ncdef class Child(Parent):\r\n    cpdef (double, double) func(self, double[:] a, double[:] b):\r\n        return 0,1\r\n```\r\n\r\n\r\n\r\n\r\n### Expected behaviour\r\n\r\nThe return type of the inherited member function can always be `ctuple` even if/when we are spanning several cython modules.\r\n\r\n### OS\r\n\r\n_No response_\r\n\r\n### Python version\r\n\r\n3.11\r\n\r\n### Cython version\r\n\r\n3.0.10\r\n\r\n### Additional context\r\n\r\nThe command for running is simply `cythonize child.pyx`",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6231/comments",
    "created_at": "2024-06-07T14:30:59Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6231/events",
    "html_url": "https://github.com/cython/cython/issues/6231",
    "id": 2340606831,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6231/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6LgtNv",
    "number": 6231,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6231/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6231/timeline",
    "title": "[BUG] `ctuple` declaration on inherited membed function when parent class imported `.pxd` yields \"Signature not compatible with previous declaration\" error",
    "updated_at": "2024-06-07T14:32:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6231",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6357107?v=4",
        "events_url": "https://api.github.com/users/raffienficiaud/events{/privacy}",
        "followers_url": "https://api.github.com/users/raffienficiaud/followers",
        "following_url": "https://api.github.com/users/raffienficiaud/following{/other_user}",
        "gists_url": "https://api.github.com/users/raffienficiaud/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/raffienficiaud",
        "id": 6357107,
        "login": "raffienficiaud",
        "node_id": "MDQ6VXNlcjYzNTcxMDc=",
        "organizations_url": "https://api.github.com/users/raffienficiaud/orgs",
        "received_events_url": "https://api.github.com/users/raffienficiaud/received_events",
        "repos_url": "https://api.github.com/users/raffienficiaud/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/raffienficiaud/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/raffienficiaud/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/raffienficiaud"
    }
}