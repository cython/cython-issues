{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I would like to use the .py, with augmenting .pxd method for my Cython project so I can debug and use an IDE while I develop. For some reason this method leads to mangled exported function names. The definition of the function in the .pxd is ```cdef public int count_cwrap(int limit)``` and the .h file produced has this definition ```__PYX_EXTERN_C int __pyx_f_19pythagorean_triples_count_cwrap(int);``` If I convert the file to .pyx and add the cython definition, the name is not mangled anymore. I tried it and this occurs in both Linux and Windows.  I am attaching my source code to reproduce the issue.\r\n\r\npythagorean_triples.py:\r\n```Python\r\n# cython: language_level=3\r\nimport time\r\nimport cython\r\nimport numpy as np\r\n \r\ndef count(limit):\r\n    if limit < 3:\r\n       raise ValueError('Invalid limit value')\r\n    arr = np.zeros(10)\r\n    result : cython.int = 0\r\n    a : cython.int\r\n    b : cython.int\r\n    c : cython.int\r\n    for a in range(1, limit + 1):\r\n        for b in range(a + 1, limit + 1):\r\n            for c in range(b + 1, limit + 1):\r\n                if c * c > a * a + b * b:\r\n                    break\r\n \r\n                if c * c == (a * a + b * b):\r\n                    result += 1\r\n    return result\r\n\t\r\ndef count_cwrap(limit):\r\n    return count(limit)\r\n \r\nif __name__ == '__main__':\r\n    start = time.time()\r\n    result = count(1000)\r\n    duration = time.time() - start\r\n    print(result, duration)\r\n```\r\npythagorean_triples.pxd:\r\n```Cython\r\n# cython: language_level=3\r\ncdef public int count_cwrap(int limit)\r\n```\r\nsetup.py:\r\n```Python\r\nfrom distutils.core import setup\r\nfrom distutils.extension import Extension\r\nfrom Cython.Build import cythonize\r\n \r\nsetup(\r\n    ext_modules = cythonize(Extension('pythagorean_triples', sources = ['pythagorean_triples.py']))\r\n)\r\n```\r\n\r\n\r\nIs this a bug or am I doing something wrong perhaps in the setup.py?\r\n\r\nI built with ```python setup_py.py build_ext --inplace``` in windows or with\r\n```python3 setup_py.py build_ext --inplace``` in Linux\r\n\r\nThanks",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. Could be that the `private` marker is simply not copied when adapting the Python function signature from the `.pxd` file in `AlignFunctionDefinitions` syntax tree transformation (`ParseTreeTransforms.py`). Probably easy to add there. PR welcome.",
            "created_at": "2019-04-30T16:39:44Z",
            "html_url": "https://github.com/cython/cython/issues/2940#issuecomment-488025114",
            "id": 488025114,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2940",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODAyNTExNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/488025114/reactions"
            },
            "updated_at": "2019-04-30T16:39:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/488025114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "[Here](https://github.com/cython/cython/blob/master/tests/build/module_api.srctree) is an example of a test file that you could borrow from. It's just a bunch of files stuffed into one that the test runner extracts.",
            "created_at": "2019-04-30T17:28:11Z",
            "html_url": "https://github.com/cython/cython/issues/2940#issuecomment-488041948",
            "id": 488041948,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2940",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODA0MTk0OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/488041948/reactions"
            },
            "updated_at": "2019-04-30T17:28:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/488041948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just ran into this on `3.0.0a10` and I don't know how to fix it. Has anyone been able to workaround this?\r\n\r\nIt seems `AlignFunctionDefinitions.visit_DefNode` is receiving a `pxd_def` with its name mangled despite having `visibility == 'public'`. https://github.com/cython/cython/blob/ddaaa7b8bfe9885b7bed432cd0a5ab8191d112cd/Cython/Compiler/ParseTreeTransforms.py#L2598\r\n\r\nMy gut feeling is that's probably incorrect, but I don't know the codebase well enough to say for certain.\r\n\r\nI can see the `pxd_def` is generated in `ModuleScope.declare_cfunction` where it looks like the `(visibility == 'public' and defining)` condition is allowing it to be mangled.\r\nhttps://github.com/cython/cython/blob/ddaaa7b8bfe9885b7bed432cd0a5ab8191d112cd/Cython/Compiler/Symtab.py#L1552\r\n\r\n\r\nAlso, is it possible to specify the visibility when using the `@cython.cfunc` decorator? Something like how `@cython.declare(visibility='public')` does?\r\n",
            "created_at": "2022-03-14T13:56:49Z",
            "html_url": "https://github.com/cython/cython/issues/2940#issuecomment-1066825209",
            "id": 1066825209,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2940",
            "node_id": "IC_kwDOABDGAc4_lnX5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1066825209/reactions"
            },
            "updated_at": "2022-03-14T13:56:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1066825209",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65749166?v=4",
                "events_url": "https://api.github.com/users/gz-95/events{/privacy}",
                "followers_url": "https://api.github.com/users/gz-95/followers",
                "following_url": "https://api.github.com/users/gz-95/following{/other_user}",
                "gists_url": "https://api.github.com/users/gz-95/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gz-95",
                "id": 65749166,
                "login": "gz-95",
                "node_id": "MDQ6VXNlcjY1NzQ5MTY2",
                "organizations_url": "https://api.github.com/users/gz-95/orgs",
                "received_events_url": "https://api.github.com/users/gz-95/received_events",
                "repos_url": "https://api.github.com/users/gz-95/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gz-95/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gz-95/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gz-95"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2940/comments",
    "created_at": "2019-04-30T16:28:28Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2940/events",
    "html_url": "https://github.com/cython/cython/issues/2940",
    "id": 438866834,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2940/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0Mzg4NjY4MzQ=",
    "number": 2940,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/cython/cython/issues/2940/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/2940/timeline",
    "title": "Compiling a .py file with an augmenting .pxd leads to a mangled function name for cdef public function.",
    "updated_at": "2022-03-14T13:56:49Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2940",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/25863991?v=4",
        "events_url": "https://api.github.com/users/Jivko1212/events{/privacy}",
        "followers_url": "https://api.github.com/users/Jivko1212/followers",
        "following_url": "https://api.github.com/users/Jivko1212/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jivko1212/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Jivko1212",
        "id": 25863991,
        "login": "Jivko1212",
        "node_id": "MDQ6VXNlcjI1ODYzOTkx",
        "organizations_url": "https://api.github.com/users/Jivko1212/orgs",
        "received_events_url": "https://api.github.com/users/Jivko1212/received_events",
        "repos_url": "https://api.github.com/users/Jivko1212/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Jivko1212/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jivko1212/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Jivko1212"
    }
}