{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Recently I am making a tool that allows you to build just one Python extension that contains multiple Cython modules, and I need to call the PyInit functions of embedded Cython modules.\r\nMy tool works with any modules that compile to C code, but if they compile to C++, I get a compiler error that the symbol PyInit for this module can't be found. It tells me about a similar symbol with, but I think it's mangled.\r\nWhen I checked a C++ module, the PyInit function seemed to be declared as extern C.\r\nMaybe the problem is that extern C only works if I were to include the Cython files directly, and not link to there .o file.\r\nOne idea, assuming Cython puts a list of the same functions at the top of each file, add an option to not add those functions and instead, to put those into an include file. Then in theory, I can include the Cython module, making the resulting extension noticeably smaller in the process.\r\nAny help would be appreciated.\r\nAlso, thanks for Cython, I use it a lot and it's great which was why I wanted to make this tool.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "`extern \"C\"` prevents the name from being mangled. This is correct because when Python imports a compiled module it expects to find a function called `PyInit_<filename>`. If the name was mangled then it wouldn't find this function.\r\n\r\nMaking one or more functions `public` will cause Cython to generate a .h file that you can include.\r\n\r\nI think a short example would be needed to demonstrate your problem: C++ Cython modules are tested pretty thoroughly so they do work!",
            "created_at": "2019-12-05T19:39:54Z",
            "html_url": "https://github.com/cython/cython/issues/3250#issuecomment-562284211",
            "id": 562284211,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3250",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjI4NDIxMQ==",
            "updated_at": "2019-12-05T19:39:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/562284211",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Of course they work.\r\nBut let's say I compile a C++ module, called mod.cpp and it has the init function called PyInit_mod\r\nIf I create another module, init_mod.c, and write:\r\ncdef extern from *: # * is required because including Cython files doesn't work and you need to link to the .o files instead.\r\n    \"\"\"\r\nPyModuleDef* PyInit_mod();\r\n\"\"\"\r\n    PyModuleDef* PyInit_mod()\r\n\r\ncdef PyModuleDef* module=PyInit_mod()\r\n\r\nThis is how I load embedded extension modules, which seems to be the best way when embedding them in a single module.\r\nThis only works with C files though, and only by linking the .o or .obj files together.\r\nHope this made sense.",
            "created_at": "2019-12-05T19:57:01Z",
            "html_url": "https://github.com/cython/cython/issues/3250#issuecomment-562291590",
            "id": 562291590,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3250",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjI5MTU5MA==",
            "updated_at": "2019-12-05T19:57:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/562291590",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/47483928?v=4",
                "events_url": "https://api.github.com/users/Keithcat1/events{/privacy}",
                "followers_url": "https://api.github.com/users/Keithcat1/followers",
                "following_url": "https://api.github.com/users/Keithcat1/following{/other_user}",
                "gists_url": "https://api.github.com/users/Keithcat1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Keithcat1",
                "id": 47483928,
                "login": "Keithcat1",
                "node_id": "MDQ6VXNlcjQ3NDgzOTI4",
                "organizations_url": "https://api.github.com/users/Keithcat1/orgs",
                "received_events_url": "https://api.github.com/users/Keithcat1/received_events",
                "repos_url": "https://api.github.com/users/Keithcat1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Keithcat1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Keithcat1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Keithcat1"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This seems to works for me for both C and C++ modules. I wonder think your problem is that you're compiling init_mod with C++, and you are missing the `extern \"C\"`.\r\n\r\nIf you make _anything_ public then Cython will generate a header file which you can use instead of writing the header code in yourself. Just add a dummy public function:\r\n\r\n    cdef public void dummy():\r\n         pass\r\n\r\nI'll leave this conversation here since I don't think I have anything more to contribute.",
            "created_at": "2019-12-06T09:05:13Z",
            "html_url": "https://github.com/cython/cython/issues/3250#issuecomment-562491842",
            "id": 562491842,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3250",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ5MTg0Mg==",
            "updated_at": "2019-12-06T09:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/562491842",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "OK. My script is generating code to allow calling the PyInit function that looks exactly like this:\r\ncdef extern from \"t.h\":\r\n PyModuleDef* PyInit_t()\r\n\r\nThen when compiling, I statically link to t.obj. If t was compiled as t.c, it works fine. If however the filename was t.cpp, I get a compiler error:\r\ncall.obj : error LNK2001: unresolved external symbol PyInit_t\r\n  Hint on symbols that are defined and could potentially match:\r\n    \"struct _object * __cdecl PyInit_t(void)\" (?PyInit_t@@YAPEAU_object@@XZ)\r\nC:\\py\\call.pyd : fatal error LNK1120: 1 unresolved externals\r\n\r\nAre you saying I need to compile call to C++ code? Or is there an extern C marker Cython needs? Thanks a lot!",
            "created_at": "2019-12-06T15:59:23Z",
            "html_url": "https://github.com/cython/cython/issues/3250#issuecomment-562630659",
            "id": 562630659,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3250",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjYzMDY1OQ==",
            "updated_at": "2019-12-06T15:59:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/562630659",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/47483928?v=4",
                "events_url": "https://api.github.com/users/Keithcat1/events{/privacy}",
                "followers_url": "https://api.github.com/users/Keithcat1/followers",
                "following_url": "https://api.github.com/users/Keithcat1/following{/other_user}",
                "gists_url": "https://api.github.com/users/Keithcat1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Keithcat1",
                "id": 47483928,
                "login": "Keithcat1",
                "node_id": "MDQ6VXNlcjQ3NDgzOTI4",
                "organizations_url": "https://api.github.com/users/Keithcat1/orgs",
                "received_events_url": "https://api.github.com/users/Keithcat1/received_events",
                "repos_url": "https://api.github.com/users/Keithcat1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Keithcat1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Keithcat1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Keithcat1"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3250/comments",
    "created_at": "2019-11-27T16:03:47Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/694868?v=4",
                "events_url": "https://api.github.com/users/xz/events{/privacy}",
                "followers_url": "https://api.github.com/users/xz/followers",
                "following_url": "https://api.github.com/users/xz/following{/other_user}",
                "gists_url": "https://api.github.com/users/xz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xz",
                "id": 694868,
                "login": "xz",
                "node_id": "MDQ6VXNlcjY5NDg2OA==",
                "organizations_url": "https://api.github.com/users/xz/orgs",
                "received_events_url": "https://api.github.com/users/xz/received_events",
                "repos_url": "https://api.github.com/users/xz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xz"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-12-06T15:59:23Z",
            "event": "mentioned",
            "id": 2861895420,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjg2MTg5NTQyMA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2861895420"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/694868?v=4",
                "events_url": "https://api.github.com/users/xz/events{/privacy}",
                "followers_url": "https://api.github.com/users/xz/followers",
                "following_url": "https://api.github.com/users/xz/following{/other_user}",
                "gists_url": "https://api.github.com/users/xz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xz",
                "id": 694868,
                "login": "xz",
                "node_id": "MDQ6VXNlcjY5NDg2OA==",
                "organizations_url": "https://api.github.com/users/xz/orgs",
                "received_events_url": "https://api.github.com/users/xz/received_events",
                "repos_url": "https://api.github.com/users/xz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xz"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-12-06T15:59:23Z",
            "event": "subscribed",
            "id": 2861895421,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4NjE4OTU0MjE=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2861895421"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3250/events",
    "html_url": "https://github.com/cython/cython/issues/3250",
    "id": 529439543,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3250/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Mjk0Mzk1NDM=",
    "number": 3250,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Can't call PyInit function of a C++ Cython module from C",
    "updated_at": "2019-12-06T15:59:23Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3250",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/47483928?v=4",
        "events_url": "https://api.github.com/users/Keithcat1/events{/privacy}",
        "followers_url": "https://api.github.com/users/Keithcat1/followers",
        "following_url": "https://api.github.com/users/Keithcat1/following{/other_user}",
        "gists_url": "https://api.github.com/users/Keithcat1/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Keithcat1",
        "id": 47483928,
        "login": "Keithcat1",
        "node_id": "MDQ6VXNlcjQ3NDgzOTI4",
        "organizations_url": "https://api.github.com/users/Keithcat1/orgs",
        "received_events_url": "https://api.github.com/users/Keithcat1/received_events",
        "repos_url": "https://api.github.com/users/Keithcat1/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Keithcat1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Keithcat1/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Keithcat1"
    }
}