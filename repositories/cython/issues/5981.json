{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nIn my code, I would like to do [...]\r\n```cython\r\ncdef _somefunc(...) except +catcher\r\n     # make some calls to C++ code that has arguments with  \r\n     #Rvalue&& move semantics produced by C++ calls that get screwed up if they themselves were marked except+\r\n```\r\nin 3.0.8 this produces: `Only extern functions can throw C++ exceptions.` error at compile\r\n\r\nThis was working in 3.0a6 and is used by at least one extension at Meta.  There is some advanced C++ with `folly::SemiFuture` that are not copyable and we get away with it because the code generator usually produces `cxx_call_schedule_future[FutureResultType](cxx_call2_get_future(args), future_handler_written_in_cython, <PyObject *> fut)`. The issue is some times `cxx_call2_get_future` throw exceptions, but if we make that def `except+`, it screws up code generation and makes invalid C++.  \r\n\r\n\r\n\r\nBut being able to wrap a cython `cdef` in an `except +catcher` is quite handy. \r\n\r\n\r\n### Describe the solution you'd like.\r\n\r\nWe go back to allowing except+ on cdef methods not extern\r\n\r\n### Describe alternatives you've considered.\r\n\r\nIn the past I have fixed this by producing a `.h` file that has a helper that wraps the future in yet another future so the exception gets caught up in the future so the `future_handler_written_in_cython` can examine the results of the future and handle the exception in a way that doesn't produce broken C++ code.   This can be very problematic as it requires a helper function in C++ to exist for every C++ function we want to use from cython that has this behavior. \r\n\r\nI have a workaround i'm going to try in that I can set `cxx_call_schedule_future` as except+ and see if that works and I think it might.  \r\n\r\n### Additional context\r\n\r\nfunction names in my examples have been made up to protect the innocent. ",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I have had similar issues with non extern cdef functions that return unique_ptr.   I have to produce my own definition for make_unique that doesn't include the except+.   Otherwise the exception handling breaks the C++ code.  \r\n\r\nThis requested feature would allow me to wrap where i'm calling my cdef function and handle exceptions thrown by make_unique there where its possible to do something.  Not in a function that has to return a unique_ptr no matter what or throw and exception. ",
            "created_at": "2024-02-07T20:10:15Z",
            "html_url": "https://github.com/cython/cython/issues/5981#issuecomment-1932786816",
            "id": 1932786816,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5981",
            "node_id": "IC_kwDOABDGAc5zM_yA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1932786816/reactions"
            },
            "updated_at": "2024-02-07T20:12:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1932786816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/200457?v=4",
                "events_url": "https://api.github.com/users/fried/events{/privacy}",
                "followers_url": "https://api.github.com/users/fried/followers",
                "following_url": "https://api.github.com/users/fried/following{/other_user}",
                "gists_url": "https://api.github.com/users/fried/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fried",
                "id": 200457,
                "login": "fried",
                "node_id": "MDQ6VXNlcjIwMDQ1Nw==",
                "organizations_url": "https://api.github.com/users/fried/orgs",
                "received_events_url": "https://api.github.com/users/fried/received_events",
                "repos_url": "https://api.github.com/users/fried/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fried/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fried/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fried"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also as this seems to have been made a compile error on purpose I don't call this a bug but a feature request",
            "created_at": "2024-02-07T20:10:46Z",
            "html_url": "https://github.com/cython/cython/issues/5981#issuecomment-1932787474",
            "id": 1932787474,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5981",
            "node_id": "IC_kwDOABDGAc5zM_8S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1932787474/reactions"
            },
            "updated_at": "2024-02-07T20:10:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1932787474",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/200457?v=4",
                "events_url": "https://api.github.com/users/fried/events{/privacy}",
                "followers_url": "https://api.github.com/users/fried/followers",
                "following_url": "https://api.github.com/users/fried/following{/other_user}",
                "gists_url": "https://api.github.com/users/fried/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fried",
                "id": 200457,
                "login": "fried",
                "node_id": "MDQ6VXNlcjIwMDQ1Nw==",
                "organizations_url": "https://api.github.com/users/fried/orgs",
                "received_events_url": "https://api.github.com/users/fried/received_events",
                "repos_url": "https://api.github.com/users/fried/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fried/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fried/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fried"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If I understand correctly, inside `_somefunc` you call some c++ functions that can throw exceptions but which you're unable to mark as `except+`  because Cython fails to generate usable code for their return types. Therefore you're using `except +handler` to translate outside the Cython-defined function.\r\n\r\nI don't think it was ever intended that this worked in Cython. With that said, the error message was targeting plain `except+` (which did nothing) rather than `except +handler` (which does something, even if not intended).\r\n\r\nThe big problem is that a c++ exception will break any reference counting that happens inside `_somefunc`.\r\n\r\nI guess we could re-enable it for functions with no reference counted variables. I'd be very wary of re-enabling it generally though.\r\n",
            "created_at": "2024-02-07T22:52:44Z",
            "html_url": "https://github.com/cython/cython/issues/5981#issuecomment-1933067033",
            "id": 1933067033,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5981",
            "node_id": "IC_kwDOABDGAc5zOEMZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1933067033/reactions"
            },
            "updated_at": "2024-02-07T22:52:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1933067033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Changing the error to a warning in Nodes.py does re-enable the expected behavior so it still works technically ",
            "created_at": "2024-02-07T23:34:56Z",
            "html_url": "https://github.com/cython/cython/issues/5981#issuecomment-1933116076",
            "id": 1933116076,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5981",
            "node_id": "IC_kwDOABDGAc5zOQKs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1933116076/reactions"
            },
            "updated_at": "2024-02-07T23:34:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1933116076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/200457?v=4",
                "events_url": "https://api.github.com/users/fried/events{/privacy}",
                "followers_url": "https://api.github.com/users/fried/followers",
                "following_url": "https://api.github.com/users/fried/following{/other_user}",
                "gists_url": "https://api.github.com/users/fried/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fried",
                "id": 200457,
                "login": "fried",
                "node_id": "MDQ6VXNlcjIwMDQ1Nw==",
                "organizations_url": "https://api.github.com/users/fried/orgs",
                "received_events_url": "https://api.github.com/users/fried/received_events",
                "repos_url": "https://api.github.com/users/fried/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fried/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fried/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fried"
            }
        },
        {
            "author_association": "NONE",
            "body": "Would be nice if there was a mechanism to inject a C++ try/catch  at arbitrary points\r\n",
            "created_at": "2024-02-07T23:42:27Z",
            "html_url": "https://github.com/cython/cython/issues/5981#issuecomment-1933122469",
            "id": 1933122469,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5981",
            "node_id": "IC_kwDOABDGAc5zORul",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1933122469/reactions"
            },
            "updated_at": "2024-02-07T23:42:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1933122469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/200457?v=4",
                "events_url": "https://api.github.com/users/fried/events{/privacy}",
                "followers_url": "https://api.github.com/users/fried/followers",
                "following_url": "https://api.github.com/users/fried/following{/other_user}",
                "gists_url": "https://api.github.com/users/fried/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fried",
                "id": 200457,
                "login": "fried",
                "node_id": "MDQ6VXNlcjIwMDQ1Nw==",
                "organizations_url": "https://api.github.com/users/fried/orgs",
                "received_events_url": "https://api.github.com/users/fried/received_events",
                "repos_url": "https://api.github.com/users/fried/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fried/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fried/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fried"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5981/comments",
    "created_at": "2024-02-07T20:05:08Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5981/events",
    "html_url": "https://github.com/cython/cython/issues/5981",
    "id": 2123783186,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5981/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5-llwS",
    "number": 5981,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5981/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5981/timeline",
    "title": "[ENH] `extern +catcher` syntax for non extern cdef functions and methods",
    "updated_at": "2024-02-07T23:42:28Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5981",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/200457?v=4",
        "events_url": "https://api.github.com/users/fried/events{/privacy}",
        "followers_url": "https://api.github.com/users/fried/followers",
        "following_url": "https://api.github.com/users/fried/following{/other_user}",
        "gists_url": "https://api.github.com/users/fried/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fried",
        "id": 200457,
        "login": "fried",
        "node_id": "MDQ6VXNlcjIwMDQ1Nw==",
        "organizations_url": "https://api.github.com/users/fried/orgs",
        "received_events_url": "https://api.github.com/users/fried/received_events",
        "repos_url": "https://api.github.com/users/fried/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fried/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fried/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fried"
    }
}