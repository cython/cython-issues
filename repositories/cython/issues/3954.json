{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hello, I'm kinda new to Cython so hopefully I didn't miss anything obvious, but I think I've found a weird behavior of annotated function arguments.\r\nSeems like the ```__class__``` attribute acts unexpectedly when the arguments are annotated with pythonic \r\n\r\n```cython\r\ndef func(dict my_dict):\r\n    # The following prints \"<class 'dict'>\" as expected\r\n    print(my_dict.__class__)\r\n\r\n    # I would expect the following to print \"{}\" since this is the equivalent of dict()\r\n    # Instead, it once again prints \"<class 'dict'>\r\n    print(my_dict.__class__())\r\n\r\n    # Calling the class twice would create an empty dict and print \"{}\"\r\n    print(my_dict.__class__()())\r\n```\r\nRemoving the \"dict\" annotation from \"my_dict\" would make this function work as expected\r\n(printing \"<class 'dict'> followed by \"{}\" followed by an exception for calling a 'dict' object)\r\n\r\nThis behavior also occurs with other python types such as strings, lists and sets.\r\nHowever, when using ints, it behaved has expected.\r\n\r\nI'm using Cython 0.29.21 with Python 3.9.1 on Windows.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Agreed that this is a bug, but is there any use case for such code? I can't think of a case where `[some builtin object].__class__` isn't just the builtin type itself.",
            "created_at": "2021-03-21T13:49:30Z",
            "html_url": "https://github.com/cython/cython/issues/3954#issuecomment-803583647",
            "id": 803583647,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3954",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzU4MzY0Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-03-21T13:50:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/803583647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Agreed that this is a bug, but is there any use case for such code? I can't think of a case where `[some builtin object].__class__` isn't just the builtin type itself.\r\n\r\nThis is very artificial, but you can come up with cases where the user hasn't actually typed a variable, but Cython has successfully inferred it:\r\n\r\n```\r\ndef f(x: list):\r\n    y = x*2   # hmmmm - what type is this going to be?\r\n    return y.__class__()\r\n```\r\n\r\nHere Cython works out that `y` is going to be a `list` but it isn't necessarily obvious to the user. I haven't really convinced myself that this is a use-case, but you could invent more complicated examples: maybe `y` was created from a cdef function with a specified return type?",
            "created_at": "2021-03-21T14:22:52Z",
            "html_url": "https://github.com/cython/cython/issues/3954#issuecomment-803590543",
            "id": 803590543,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3954",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzU5MDU0Mw==",
            "performed_via_github_app": null,
            "updated_at": "2021-03-21T14:22:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/803590543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3954/comments",
    "created_at": "2020-12-24T20:51:31Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "c6238c356888aa7abe0d9766f5e475e435e99b15",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/c6238c356888aa7abe0d9766f5e475e435e99b15",
            "created_at": "2020-12-26T09:07:49Z",
            "event": "referenced",
            "id": 4149494377,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNDk0OTQzNzc=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4149494377"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-03-21T13:49:48Z",
            "event": "labeled",
            "id": 4486757955,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0ODY3NTc5NTU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4486757955"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-03-21T13:49:48Z",
            "event": "labeled",
            "id": 4486757956,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0ODY3NTc5NTY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4486757956"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3954/events",
    "html_url": "https://github.com/cython/cython/issues/3954",
    "id": 774556803,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3954/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3NzQ1NTY4MDM=",
    "number": 3954,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Unexpected behavior of __class__ attribute for annotated python arguments",
    "updated_at": "2021-03-21T14:22:52Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3954",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/21122724?v=4",
        "events_url": "https://api.github.com/users/UltimateLobster/events{/privacy}",
        "followers_url": "https://api.github.com/users/UltimateLobster/followers",
        "following_url": "https://api.github.com/users/UltimateLobster/following{/other_user}",
        "gists_url": "https://api.github.com/users/UltimateLobster/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/UltimateLobster",
        "id": 21122724,
        "login": "UltimateLobster",
        "node_id": "MDQ6VXNlcjIxMTIyNzI0",
        "organizations_url": "https://api.github.com/users/UltimateLobster/orgs",
        "received_events_url": "https://api.github.com/users/UltimateLobster/received_events",
        "repos_url": "https://api.github.com/users/UltimateLobster/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/UltimateLobster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/UltimateLobster/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/UltimateLobster"
    }
}