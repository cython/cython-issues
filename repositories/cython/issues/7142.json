{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe your issue\n\n[DLPack](https://dmlc.github.io/dlpack/latest/) is a C-ABI compatible data structure that allows data (tensor) exchange between frameworks. It has been adopted by packages such as Numpy, PyTorch and JAX. It shares some similar goals to the Buffer Protocol in Python.\n\nCython has added support to make it [easier](https://cython.readthedocs.io/en/latest/src/userguide/memoryviews.html) to interact with the Buffer Protocol in the past.\n\nIs there any way for Cython to achieve something similar for objects that support DLPack i.e. make it easy to share the underlying array in a zero-copy way?\n\nAs some relevant context: DLPack supports a number of data types that are relevant to machine-learning/deep-learning (e.g. bfloat16) and which are not currently supported by the Buffer Protocol. There has been some [discussion](https://discuss.python.org/t/buffer-protocol-and-arbitrary-data-types/26256) around extending the Buffer Protocol recently. DLPack is potentially another route. Given the importance of Cython in the scientific computing ecosystem (and beyond) I wanted to know how realistic it is to consider DLPack as an alternative.\n\nThanks!",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't think anyone would oppose this in principle, but then, there are the details.\n\nWe currently use the `PyBuffer` struct to describe buffers internally (because why not, it used to be enough for many years).\nhttps://github.com/cython/cython/blob/cfe30c7c46f851923a60e642a8731f19f464af1d/Cython/Utility/MemoryView.pyx#L338\n\nI only just skimmed over the `DLPack` documentation (which, BTW, makes it surprisingly hard to understand what kind of functionality it actually provides), so I'm mostly guessing here. We can certainly try both protocols when unpacking memory buffers, but it would be nice to avoid two separate implementations (and new syntax) for two things that seem vastly similar. If we had a superset of the buffer protocol and `DLPack`, then we could rebuild our memoryview implementation on top of that to support both. EDIT: I meant a superset of the buffer metadata. The rest can probably be mapped from one to the other. (That said, if there is/was a mapping between the protocols, we may not even have to support both but could use a more general shim to get at the data.)",
            "created_at": "2025-09-08T14:01:58Z",
            "html_url": "https://github.com/cython/cython/issues/7142#issuecomment-3266481301",
            "id": 3266481301,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7142",
            "node_id": "IC_kwDOABDGAc7CsoyV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3266481301/reactions"
            },
            "updated_at": "2025-09-08T14:21:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3266481301",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi, wearing my Python array API (& DLPack) hat, I'd like to chime in here.\n\nAs much as I'd love to have DLPack support auto-generated, there exists one gap as I see it, which is the accelerator hand-shaking. This is fully specified on the Python side as part of the Python array API standard ([here](https://dmlc.github.io/dlpack/latest/python_spec.html) and [here](https://data-apis.org/array-api/latest/design_topics/data_interchange.html#data-interchange), see in particular the `stream` argument), but the C side is still [being discussed](https://github.com/dmlc/dlpack/issues/65). It is not as simple as \"just populating a `Py_buffer`\" (which, btw, was exactly [what's done in mpi4py](https://github.com/mpi4py/mpi4py/blob/379261b71d37dd94b0e35c846a84b0c81dd096d8/src/mpi4py/MPI.src/asdlpack.pxi#L222), but it is safe there because we are protected by the MPI standard), it also involves how an accelerator library can safely access the data after handshaking. \n\nRight now Cython generates memoryviews for the buffer protocol that only support exchanges through two CPU-only libraries. But DLPack is a generic protocol that also supports accelerator libraries (CUDA, ROCm, SYCL, ...). It'd be nice to confirm the scope and potential technical blockers before proceeding. We'd also love to hear the perspectives from Cython as we iterate over the spec!",
            "created_at": "2025-09-15T15:21:18Z",
            "html_url": "https://github.com/cython/cython/issues/7142#issuecomment-3292735888",
            "id": 3292735888,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7142",
            "node_id": "IC_kwDOABDGAc7EQymQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3292735888/reactions"
            },
            "updated_at": "2025-09-15T15:21:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3292735888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7142/comments",
    "created_at": "2025-09-08T12:30:05Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/228076048?v=4",
                "events_url": "https://api.github.com/users/bot-nenb/events{/privacy}",
                "followers_url": "https://api.github.com/users/bot-nenb/followers",
                "following_url": "https://api.github.com/users/bot-nenb/following{/other_user}",
                "gists_url": "https://api.github.com/users/bot-nenb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bot-nenb",
                "id": 228076048,
                "login": "bot-nenb",
                "node_id": "U_kgDODZgqEA",
                "organizations_url": "https://api.github.com/users/bot-nenb/orgs",
                "received_events_url": "https://api.github.com/users/bot-nenb/received_events",
                "repos_url": "https://api.github.com/users/bot-nenb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bot-nenb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bot-nenb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bot-nenb",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-09-08T12:30:42Z",
            "event": "marked_as_duplicate",
            "id": 19563851056,
            "node_id": "MADE_lADOABDGAc7KTGMMzwAAAASOGK0w",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/19563851056"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-09-09T03:42:14Z",
            "event": "subscribed",
            "id": 19578420390,
            "node_id": "SE_lADOABDGAc7KTGMMzwAAAASO9vym",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/19578420390"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7142/events",
    "html_url": "https://github.com/cython/cython/issues/7142",
    "id": 3394003724,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7142/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7KTGMM",
    "number": 7142,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7142/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7142/timeline",
    "title": "Integration with dlpack protocol",
    "type": null,
    "updated_at": "2025-09-15T15:21:18Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7142",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55434794?v=4",
        "events_url": "https://api.github.com/users/nenb/events{/privacy}",
        "followers_url": "https://api.github.com/users/nenb/followers",
        "following_url": "https://api.github.com/users/nenb/following{/other_user}",
        "gists_url": "https://api.github.com/users/nenb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nenb",
        "id": 55434794,
        "login": "nenb",
        "node_id": "MDQ6VXNlcjU1NDM0Nzk0",
        "organizations_url": "https://api.github.com/users/nenb/orgs",
        "received_events_url": "https://api.github.com/users/nenb/received_events",
        "repos_url": "https://api.github.com/users/nenb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nenb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nenb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nenb",
        "user_view_type": "public"
    }
}