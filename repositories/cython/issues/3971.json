{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "\r\n**Is your feature request related to a problem? Please describe.**\r\nFeature Request\r\n\r\nWith the ever growing world of IOT it would be nice to see Cython get used on the devices that run MicroPython.\r\nMicroPython is a CPython port that runs on micro controllers/soc devices. It interfaces with the hardware available on these devices and has close to the full std libraries available as well as libraries that have been made for sensors that are able to be attached to the devices that MicroPython runs on. \r\n\r\nI don't see an immediate need to be able to bind to a C library, but what would be extremely useful is Cythons ability to convert Python code into C code and compile it as a C extension module. This would be really useful because of the hardware limitations of the devices. Python does carry with it a decent amount of overhead, this overhead is really seen when running Python on a resource handicapped device such as those used in IOT devices. Compiling python code into C extensions would give a pretty significant boost in performance to code running on one of these devices.\r\n\r\nI believe that coupling MicroPython and Cython would really show the power of both applications. It would give the IOT world something really awesome by unlocking the potential of these devices in a way that even a \"newbie\" developer would be able to do.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "This looks relevant\r\n\r\nhttps://github.com/micropython/micropython/issues/658\r\n\r\nto me it looks like MicroPython's C API is sufficiently different from CPython's that it probably isn't realistic but it's possible I'm wrong in that assessment.\r\n",
            "created_at": "2021-01-08T20:44:05Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-756989602",
            "id": 756989602,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1Njk4OTYwMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/756989602/reactions"
            },
            "updated_at": "2021-01-08T20:44:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/756989602",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "yeah, there was discussion about it 6 years ago, it didn't get anywhere on the MicroPython end of things. So I thought I would bring it up  over here on the Cython end of things. \r\n\r\nIt seems like it is possible, It would need to be a collaboration between the Cython devs and the MicroPython devs. Kind of like what was done to allow Cython to work properly with Stackless Python. I am also using a different point of view, I do not see a need to attach Python code to an existing C library, this is something that gets done on a full blown PC. There aren't any C libraries written so they would run on a micro controller in a manner that would be able to be used. I am looking at it from compiling python code into  a C extension only for the performance gains, which are going to be really substantial. Compiling python code into a C extension is really easy to do with Cython and it is something I have done a number of time in order to decrease code execution time.\r\n",
            "created_at": "2021-01-09T00:01:59Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-757054786",
            "id": 757054786,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzA1NDc4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/757054786/reactions"
            },
            "updated_at": "2021-01-09T00:01:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/757054786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10932297?v=4",
                "events_url": "https://api.github.com/users/kdschlosser/events{/privacy}",
                "followers_url": "https://api.github.com/users/kdschlosser/followers",
                "following_url": "https://api.github.com/users/kdschlosser/following{/other_user}",
                "gists_url": "https://api.github.com/users/kdschlosser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kdschlosser",
                "id": 10932297,
                "login": "kdschlosser",
                "node_id": "MDQ6VXNlcjEwOTMyMjk3",
                "organizations_url": "https://api.github.com/users/kdschlosser/orgs",
                "received_events_url": "https://api.github.com/users/kdschlosser/received_events",
                "repos_url": "https://api.github.com/users/kdschlosser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kdschlosser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kdschlosser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kdschlosser"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Hi> Kind of like what was done to allow Cython to work properly with Stackless Python.\r\n\r\nIf I search the Cython utility code for \"stackless\" (case insensitive) I find a total of 6 lines (it's possible there were some significant changes on their end that I don't know about of course). It's genuinely a fork from CPython and so the C API compatibility is fairly close. In contrast MicroPython looks to be a from-scratch implementation of Python with a completely different C API. Pretty much every single line of utility code that we generate would need to be different.\r\n\r\n> I do not see a need to attach Python code to an existing C library, this is something that gets done on a full blown PC. There aren't any C libraries written so they would run on a micro controller in a manner that would be able to be used. I am looking at it from compiling python code into a C extension only for the performance gains, which are going to be really substantial.\r\n\r\nI think that wrapping C libraries would actually be the easy bit - it probably wouldn't need any changes at all. Compiling Python code to a completely new C API would be where all the work is.\r\n\r\n--------------------------------------------\r\n\r\nIf someone was to do this I suspect the way forward would be:\r\n1. Write a wrapper for the MicroPython C API that maps to the CPython limited API (since the limited API is designed to hide the implementation details of CPython, this would probably be easier than mapping to the regular CPython API). This wrapper would probably go into MicroPython rather than Cython.\r\n2. Improve Cython's support for the limited API (which will probably happen anyway over time, but very basic code might work right now).\r\n\r\nI'll stop commenting here, because I don't think I have much more to add.\r\n\r\n-------------\r\n\r\nQuick edit: I definitely agree that it'd be nice. But I think it needs someone with a real interest it MicroPython to make a significant start on it.",
            "created_at": "2021-01-09T09:50:17Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-757124629",
            "id": 757124629,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzEyNDYyOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/757124629/reactions"
            },
            "updated_at": "2021-01-09T10:10:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/757124629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I don't know enough about the C end of CPython or MicroPython to be any help. IDK how much CPython there is left in MicroPython. It was mentioned in the issue posted earlier that mappings would need to be made so Cython would have an API to bind to.\r\n\r\nAll I am attempting to do is to get a dialog open between the 2 projects developers. I know that if a developer of an application comes to me and says hey. I have interest in making my program work with yours, I would spend some time to see if it is possible and what would need to be done. If a user comes along and says hey wouldn't it be nice if this program worked with yours I am going to be less inclined to make it happen if there is work that would need to be done on both ends.\r\n\r\nThis is kind of where I am stuck between a rock and a hard place because I am the user that sees a benefit to it. I am probably not explaining it in the best way on top of it. I know it had been discussed on the MicroPython end of things.\r\n\r\nI am the person that came across the problems between Cython and Stackless. I went to the current maintainer of Stackless and I got lucky and I wasn't told \"to bad it's not going to work\" The developer worked with me in order to narrow down where the problem was. some of it was on the Cython end and some of it was on the Stackless side. The developer at that point opened a dialog with the Cython developers and it got taken care of.\r\n\r\nAn attempt was made to get the devs over at MicroPython to open a dialog with the folks over here... It didn't get any traction. 6 years later I thought it would give it another shot. I decided to attempt to do it the other way around and see if there is interest on this end and have the devs open a dialog with the folks over at MicroPython. ",
            "created_at": "2021-01-09T15:43:14Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-757324815",
            "id": 757324815,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzMyNDgxNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/757324815/reactions"
            },
            "updated_at": "2021-01-09T15:43:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/757324815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10932297?v=4",
                "events_url": "https://api.github.com/users/kdschlosser/events{/privacy}",
                "followers_url": "https://api.github.com/users/kdschlosser/followers",
                "following_url": "https://api.github.com/users/kdschlosser/following{/other_user}",
                "gists_url": "https://api.github.com/users/kdschlosser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kdschlosser",
                "id": 10932297,
                "login": "kdschlosser",
                "node_id": "MDQ6VXNlcjEwOTMyMjk3",
                "organizations_url": "https://api.github.com/users/kdschlosser/orgs",
                "received_events_url": "https://api.github.com/users/kdschlosser/received_events",
                "repos_url": "https://api.github.com/users/kdschlosser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kdschlosser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kdschlosser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kdschlosser"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looking back at the conversation I participated in years ago and where things stand now, it looks like it might be possible to bridge a large portion of the gap between MicroPython and CPython's C API, but there would likely be significant differences when it comes to handling exceptions, and defining classes, etc. (including functionality that builds on that, such as closures and generators) that could probably only be bridged by special code and it's hard to get a handle on how significant of an effort that would be. \r\n\r\nI think that both the Cython and MicroPython developers would be happy to contribute ideas and brainstorm how to work around specific issues as they arise, but I imagine it would require finding someone else with sufficient time and motivation to step up and really drive this forward. @da-woods' comments on converging on the limited CPython API from both sides would probably be a good direction to start and increase the chances of overlapping with existing efforts. ",
            "created_at": "2021-01-13T07:03:28Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-759250728",
            "id": 759250728,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTI1MDcyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/759250728/reactions"
            },
            "updated_at": "2021-01-13T07:03:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/759250728",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "NONE",
            "body": "I wish I was proficient in C/CPP as this would be something I would be willing to do. Because of my current knowledge of C/CPP it would take a me horribly long time to do and I would also be a \"newbie\" pestering the seasoned developers in both Cython and MicroPython. Someone proficient in C/CPP is needed and ideally they would need to be familiar with the C code in MicroPython and in Cython.\r\n",
            "created_at": "2021-01-14T03:21:54Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-759899835",
            "id": 759899835,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTg5OTgzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/759899835/reactions"
            },
            "updated_at": "2021-01-14T03:21:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/759899835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10932297?v=4",
                "events_url": "https://api.github.com/users/kdschlosser/events{/privacy}",
                "followers_url": "https://api.github.com/users/kdschlosser/followers",
                "following_url": "https://api.github.com/users/kdschlosser/following{/other_user}",
                "gists_url": "https://api.github.com/users/kdschlosser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kdschlosser",
                "id": 10932297,
                "login": "kdschlosser",
                "node_id": "MDQ6VXNlcjEwOTMyMjk3",
                "organizations_url": "https://api.github.com/users/kdschlosser/orgs",
                "received_events_url": "https://api.github.com/users/kdschlosser/received_events",
                "repos_url": "https://api.github.com/users/kdschlosser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kdschlosser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kdschlosser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kdschlosser"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'd like to post my two cents and a few questions.\r\n\r\nI am another user who is interested in taking Cython code and converting it into C to be compiled into Micropython before flashing onto the microcontroller.\r\n\r\nDoes Cython output different code based on the underlying version of CPython it's compiling for?  From what I've seen, that seems to be the case.\r\n\r\nTo me, there seems to be two approaches to making MicroPython support possible in Cython.\r\n\r\n1. Create a bridge between the CPython API and the MicroPython API, while changing nothing on the Cython code generation (besides somehow restricting Cython to only using the API available in such a bridge).\r\n2. Add the ability for Cython to generate native MicroPython code.\r\n\r\nThe first one would be extremely nice to say the least.  But the second one is a viable option as well.  I'm thinking in terms of something like CMake, where they parse their files, convert into an internal representation, then output using one of various generators (e.g., GNU Make, Ninja, or Visual Studio).  This option would be possible by allowing for different generators from Cython.\r\n\r\nI have not yet familiarized myself with the Cython code base (at around 118,000 lines, that would take a while).\r\n\r\n- Is the parsing, generation of internal representation, and code generation sufficiently separated in the code to enable selectable code generators?\r\n- Would having selectable code generators have other use cases, such as support for other python implementations?\r\n- If I were to implement it myself, where would I start looking in the code?  Or where can I find documentation about the structure and organization of Cython's implementation?",
            "created_at": "2021-10-06T17:45:35Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-936776894",
            "id": 936776894,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "IC_kwDOABDGAc431hS-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/936776894/reactions"
            },
            "updated_at": "2021-10-06T17:45:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/936776894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8606516?v=4",
                "events_url": "https://api.github.com/users/mikebentley15/events{/privacy}",
                "followers_url": "https://api.github.com/users/mikebentley15/followers",
                "following_url": "https://api.github.com/users/mikebentley15/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikebentley15/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mikebentley15",
                "id": 8606516,
                "login": "mikebentley15",
                "node_id": "MDQ6VXNlcjg2MDY1MTY=",
                "organizations_url": "https://api.github.com/users/mikebentley15/orgs",
                "received_events_url": "https://api.github.com/users/mikebentley15/received_events",
                "repos_url": "https://api.github.com/users/mikebentley15/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mikebentley15/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikebentley15/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mikebentley15"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Does Cython output different code based on the underlying version of CPython it's compiling for?\r\n\r\nCython generates a single .c (or .cpp) file, regardless of the Python version that you ran it on. That generated source file then contains all the C preprocessor based adaptations needed to make it run (and run efficiently) on different CPython versions as well as PyPy etc.\r\n\r\nIf we add support for MicroPython, I'd like to see it stick to that scheme.",
            "created_at": "2021-10-06T18:07:41Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-936817225",
            "id": 936817225,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "IC_kwDOABDGAc431rJJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/936817225/reactions"
            },
            "updated_at": "2021-10-06T18:07:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/936817225",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Probably worth adding: all the code that Cython currently generates is targetting variations of the CPython API. We support PyPy because it's implemented that API (and thus Cython only needs minor variations).\r\n\r\nYou might want to look into HPy - it's aiming to be a \"better designed\" C API that's less tied to the CPython implementation. There  are (early) plans to have Cython generate HPy code. MicroPython would probably find it easier to work with HPy than to implement the CPython API. If MicroPython supported HPy and Cython supported HPy it'd be pretty close to working.\r\n\r\nVery little of that's implemented right now though.\r\n\r\n> If I were to implement it myself, where would I start looking in the code? Or where can I find documentation about the structure and organization of Cython's implementation?\r\n\r\nIf you want to start looking at the code generation side there's two places I'd start:\r\n1. the utility code in Cython/Utility/*.c - you'd need to reimplement most of it\r\n2. In Nodes.py and ExprNodes.py - the functions starting with \"generate_\". the classes ExprNode and Node have reasonable summaries of the process in their comments\r\n\r\nThat doesn't cover everything, but it's where I'd start trying to understand it.",
            "created_at": "2021-10-06T18:28:36Z",
            "html_url": "https://github.com/cython/cython/issues/3971#issuecomment-936854402",
            "id": 936854402,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3971",
            "node_id": "IC_kwDOABDGAc4310OC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/936854402/reactions"
            },
            "updated_at": "2021-10-06T18:28:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/936854402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3971/comments",
    "created_at": "2021-01-08T20:26:26Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-01-13T07:03:29Z",
            "event": "mentioned",
            "id": 4199685711,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE5OTY4NTcxMQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4199685711"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-01-13T07:03:29Z",
            "event": "subscribed",
            "id": 4199685716,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxOTk2ODU3MTY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4199685716"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3971/events",
    "html_url": "https://github.com/cython/cython/issues/3971",
    "id": 782376368,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3971/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3ODIzNzYzNjg=",
    "number": 3971,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/cython/cython/issues/3971/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/3971/timeline",
    "title": "[ENH] MicroPython support",
    "updated_at": "2021-10-06T18:28:36Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3971",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10932297?v=4",
        "events_url": "https://api.github.com/users/kdschlosser/events{/privacy}",
        "followers_url": "https://api.github.com/users/kdschlosser/followers",
        "following_url": "https://api.github.com/users/kdschlosser/following{/other_user}",
        "gists_url": "https://api.github.com/users/kdschlosser/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kdschlosser",
        "id": 10932297,
        "login": "kdschlosser",
        "node_id": "MDQ6VXNlcjEwOTMyMjk3",
        "organizations_url": "https://api.github.com/users/kdschlosser/orgs",
        "received_events_url": "https://api.github.com/users/kdschlosser/received_events",
        "repos_url": "https://api.github.com/users/kdschlosser/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kdschlosser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kdschlosser/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kdschlosser"
    }
}