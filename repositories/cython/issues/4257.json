{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "<!--\r\n**Note:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n# Prerequisites\r\n\r\nIn cpp we are [able](https://www.ibm.com/docs/en/i/7.2?topic=only-classes-structures-c) to declare visibility of members of a struct, and there are some [shenanigans](https://stackoverflow.com/q/5368028/12141949) for c to recreate this behavior.\r\n\r\n# Possible solutions\r\n\r\n### 1) Allow language specific structs, i.e. `cppstruct`, where in `cppstruct` we will be able to declare visibility: (Which in itself deserves an issue)\r\n```cython\r\ncdef cppstruct MyStruct:\r\n    int x  # public by default\r\n    private int y\r\n```\r\n\r\nAnd the [new](https://github.com/cython/cython/issues/4253#issuecomment-870017435), more pythonic syntax will help with this in pure python mode:\r\n```python\r\n@cython.cppstruct\r\nclass MyStruct:\r\n    x: cython.int  # public by default\r\n    y = cython.declare(cython.int, visibility='private')\r\n```\r\n\r\nOr change the `struct` to `cstruct`. Then `struct` will be set as deprecated and will mean `cstruct`\r\n\r\n### 2) Add the ability to add field visibility to a regular `struct`, then we will have to somehow try to recreate this functionality in c.\r\n```cython\r\ncdef struct MyStruct:\r\n    int x  # public by default\r\n    private int y\r\n```\r\n\r\nAgain with #4253\r\n```python\r\n@cython.struct\r\nclass MyStruct:\r\n    x: cython.int  # public by default\r\n    y = cython.declare(cython.int, visibility='private')\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "I don't think we'd want to support this with structs - they're treated as a pure-C feature with very little special-casing for C++.\r\n\r\nMaybe this would be useful on user-defined `cppclass`es (it might already be possible, I don't know). I don't think there's any reason to create a separate `cppstruct` though if it can be done in a `cppclass`.",
            "created_at": "2021-06-29T16:47:46Z",
            "html_url": "https://github.com/cython/cython/issues/4257#issuecomment-870756434",
            "id": 870756434,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4257",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDc1NjQzNA==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-29T16:47:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/870756434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I don't think there's any reason to create a separate `cppstruct` though if it can be done in a `cppclass`.\r\n\r\nSo that users can use such functionality, and not write in cpp, if it's necessary to use cpp struct. Something like that ..\r\nAnd .. well .. why not :)\r\n",
            "created_at": "2021-06-29T18:15:04Z",
            "html_url": "https://github.com/cython/cython/issues/4257#issuecomment-870811681",
            "id": 870811681,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4257",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDgxMTY4MQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-29T18:15:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/870811681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4257/comments",
    "created_at": "2021-06-29T10:46:20Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4257/events",
    "html_url": "https://github.com/cython/cython/issues/4257",
    "id": 932484576,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4257/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MzI0ODQ1NzY=",
    "number": 4257,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] Allow to declare field visibility in structures",
    "updated_at": "2021-06-29T18:15:04Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4257",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
        "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
        "followers_url": "https://api.github.com/users/0dminnimda/followers",
        "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
        "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/0dminnimda",
        "id": 52697657,
        "login": "0dminnimda",
        "node_id": "MDQ6VXNlcjUyNjk3NjU3",
        "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
        "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
        "repos_url": "https://api.github.com/users/0dminnimda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/0dminnimda"
    }
}