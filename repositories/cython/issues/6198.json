{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe your issue\n\nUsing multiple threads with `prange` and OpenMP leads to issues under the free-threading build. There's a few test failures, but the easier one to reproduce is this:\r\n\r\n```python\r\nimport cython\r\nfrom cython.parallel import prange\r\n\r\ndef prange_with_gil(n: cython.int, x):\r\n    i: cython.int\r\n    s: cython.int = 0\r\n\r\n    for i in prange(n, num_threads=3, nogil=True):\r\n        with cython.gil:\r\n            s += x * i\r\n\r\n    return s\r\n```\r\n\r\nRunning this with the gil enabled is okay:\r\n\r\n```python\r\n>>> import prange_with_gil\r\n<frozen importlib._bootstrap>:488: RuntimeWarning: The global interpreter lock (GIL) has been enabled to load module 'prange_with_gil', which has not declared that it can run safely without the GIL. To override this behavior and keep the GIL disabled (at your own risk), run with PYTHON_GIL=0 or -Xgil=0.\r\n>>> prange_with_gil.prange_with_gil(10, 3)\r\n135\r\n```\r\n\r\nBut, running it with the GIL disabled leads to issues:\r\n\r\n```python\r\n>>> import prange_with_gil\r\n>>> prange_with_gil.prange_with_gil(10, 3)\r\nprange_with_gil.c: prange_with_gil()\r\nREFNANNY: Too many decrefs on line 2281, reference acquired on lines []\r\n135\r\n```\r\n\r\nThere are multiple issues here that need discussion:\r\n1. If we remove the `with cython.gil` line, Cython starts complaining about operations not being allowed without holding the GIL. Those errors should probably be removed in the context of the free-threading build.\r\n2. Running with the GIL disabled and doing `with cython.gil` altogether does not make much sense. What do we do in those cases? We continue to support `with cython.gil` and let it be a no-op when the GIL is disabled? Do we warn against it? Is it an error?\r\n3. And then there's the question of the thread safety issues that could arise. We need to implement locking around such cases.\r\n4. The refnanny itself assumes that it's holding the GIL by just calling `PyThreadState_Get`, which needs changing. We should be locking around it as well.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I suggest we ignore 1 and (most of) 2 for now. They're future questions about adding new functionality rather than getting existing functionality to work. For now I'd let `with cython.gil` be a no-op.\r\n\r\n> And then there's the question of the thread safety issues that could arise. We need to implement locking around such cases.\r\n\r\nMy feeling is that there's basically 4 internal variables that Cython uses to keep trace of state inside a prange loop:\r\n\r\n```\r\nPyObject *__pyx_parallel_exc_type = NULL, *__pyx_parallel_exc_value = NULL, *__pyx_parallel_exc_tb = NULL;\r\nint __pyx_parallel_why;\r\n```\r\n\r\nThese are assumed to be guarded by the GIL and so we need to put some locking around those in free-threading mode. I think doing that would solve a large chunk of problems (not everything, but possibly everything specific to `prange`)\r\n\r\n> The refnanny itself assumes that it's holding the GIL by just calling PyThreadState_Get, which needs changing. We should be locking around it as well.\r\n\r\nrefnanny is only an internal testing tool and is disabled while running user code. That means we could do something crude like:\r\n* disable it for free-threading builds\r\n* put some fairly coarse locking into it on free-threading builds",
            "created_at": "2024-05-13T17:54:14Z",
            "html_url": "https://github.com/cython/cython/issues/6198#issuecomment-2108439252",
            "id": 2108439252,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6198",
            "node_id": "IC_kwDOABDGAc59rDrU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2108439252/reactions"
            },
            "updated_at": "2024-05-13T17:54:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2108439252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> put some fairly coarse locking into it on free-threading builds\r\n\r\nI'd go with this option. Having a functional and correct refnanny will be useful in testing the free threading build and avoid introducing reference counting errors. Performance isn't a big issue, as long as the refnanny remains usable and doesn't become a blocker for CI.",
            "created_at": "2024-05-14T12:41:45Z",
            "html_url": "https://github.com/cython/cython/issues/6198#issuecomment-2110125387",
            "id": 2110125387,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6198",
            "node_id": "IC_kwDOABDGAc59xfVL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2110125387/reactions"
            },
            "updated_at": "2024-05-14T12:41:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2110125387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20306270?v=4",
                "events_url": "https://api.github.com/users/lysnikolaou/events{/privacy}",
                "followers_url": "https://api.github.com/users/lysnikolaou/followers",
                "following_url": "https://api.github.com/users/lysnikolaou/following{/other_user}",
                "gists_url": "https://api.github.com/users/lysnikolaou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lysnikolaou",
                "id": 20306270,
                "login": "lysnikolaou",
                "node_id": "MDQ6VXNlcjIwMzA2Mjcw",
                "organizations_url": "https://api.github.com/users/lysnikolaou/orgs",
                "received_events_url": "https://api.github.com/users/lysnikolaou/received_events",
                "repos_url": "https://api.github.com/users/lysnikolaou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lysnikolaou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lysnikolaou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lysnikolaou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've had a quick go in https://github.com/cython/cython/pull/6199. With that said it's untested because I don't have a free-threading build installed anywhere, so I don't expect it to work.",
            "created_at": "2024-05-14T19:01:37Z",
            "html_url": "https://github.com/cython/cython/issues/6198#issuecomment-2110944333",
            "id": 2110944333,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6198",
            "node_id": "IC_kwDOABDGAc590nRN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2110944333/reactions"
            },
            "updated_at": "2024-05-14T19:01:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2110944333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think to make things generally thread safe is going to be quite hard. Consider:\r\n\r\n```\r\n    cdef object val\r\n    for i in prange(n, nogil=True):\r\n        with cython.gil:\r\n            val = i\r\n```\r\n\r\nWhat outcome you get is obviously arbitrary (and that isn't Cython's problem), but to make the reference counting of `val` thread-safe we're going to need to do all assignments to it atomically (even just to avoid problems where pointers are read in a half-written state). The same will apply to module globals, any closure variable, any class member. Function locals without a `prange/parallel` block are probably safe though.\r\n\r\nI don't know how far we want to go here? Does it only apply PyObject* or do we need to make anything dealing with integers atomic too? That's a pretty drastic change.\r\n\r\nFor now I'm tempted to add an import-time warning to any module with `with gil` when running in free-threading mode to discourage people from doing things we know are unsafe.",
            "created_at": "2024-05-16T06:56:00Z",
            "html_url": "https://github.com/cython/cython/issues/6198#issuecomment-2114203103",
            "id": 2114203103,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6198",
            "node_id": "IC_kwDOABDGAc5-BC3f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2114203103/reactions"
            },
            "updated_at": "2024-05-16T06:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2114203103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is correct. The reference counting itself can be considered thread-safe at the CPython level, but the fact that this stores pointers in temporaries and then calls DECREF on them means that the pointers might have changed by the time we update the reference count.\r\n\r\nAlso, locking *inside* the refnanny is probably not enough, right? If we have a shared variable that gets assigned the result of calling a C API that returns a strong reference and we call `__Pyx_GOTREF` on it, there's still the danger that it might have changed before we actually lock inside the `GOTREF` implementation.",
            "created_at": "2024-05-16T16:47:53Z",
            "html_url": "https://github.com/cython/cython/issues/6198#issuecomment-2115749849",
            "id": 2115749849,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6198",
            "node_id": "IC_kwDOABDGAc5-G8fZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2115749849/reactions"
            },
            "updated_at": "2024-05-16T16:48:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2115749849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20306270?v=4",
                "events_url": "https://api.github.com/users/lysnikolaou/events{/privacy}",
                "followers_url": "https://api.github.com/users/lysnikolaou/followers",
                "following_url": "https://api.github.com/users/lysnikolaou/following{/other_user}",
                "gists_url": "https://api.github.com/users/lysnikolaou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lysnikolaou",
                "id": 20306270,
                "login": "lysnikolaou",
                "node_id": "MDQ6VXNlcjIwMzA2Mjcw",
                "organizations_url": "https://api.github.com/users/lysnikolaou/orgs",
                "received_events_url": "https://api.github.com/users/lysnikolaou/received_events",
                "repos_url": "https://api.github.com/users/lysnikolaou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lysnikolaou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lysnikolaou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lysnikolaou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Also, locking inside the refnanny is probably not enough, right?\r\n\r\nLocking inside of refnanny is only really intended to make the refnanny internal state consistent.  I wasn't imagining that it made the references that it acts on thread-safe.\r\n\r\nLooking at something simple like `x = call()` we end up with:\r\n\r\n```\r\n__pyx_t_1 = __pyx_f_2gr_call(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L1_error)\r\n__Pyx_GOTREF(__pyx_t_1);\r\n__Pyx_DECREF_SET(__pyx_v_x, __pyx_t_1);\r\n__pyx_t_1 = 0;\r\n```\r\n\r\nI'm fairly sure the temps (e.g. `__pyx_t_1` are thread-local in prange) so the `__Pyx_GOTREF` should probably be safe.\r\n\r\nI think it's just `__Pyx_DECREF_SET(__pyx_v_x, __pyx_t_1);` that needs to be made atomic in this case. Although there are definitely lots of different variants of this scattered in the code.",
            "created_at": "2024-05-16T19:26:48Z",
            "html_url": "https://github.com/cython/cython/issues/6198#issuecomment-2116026340",
            "id": 2116026340,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6198",
            "node_id": "IC_kwDOABDGAc5-H__k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2116026340/reactions"
            },
            "updated_at": "2024-05-16T19:26:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2116026340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I had a go at testing this, and couldn't get it to give me any refnanny errors unfortunately (I did manage to convince myself that it was running multiple threads and it was running without the GIL). So I don't know if my proposed changes make it better or worse.",
            "created_at": "2024-05-18T13:15:23Z",
            "html_url": "https://github.com/cython/cython/issues/6198#issuecomment-2118822897",
            "id": 2118822897,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6198",
            "node_id": "IC_kwDOABDGAc5-Sqvx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2118822897/reactions"
            },
            "updated_at": "2024-05-18T13:15:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2118822897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6198/comments",
    "created_at": "2024-05-13T14:41:16Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-14T19:00:58Z",
            "event": "labeled",
            "id": 12806965604,
            "label": {
                "color": "A37CC3",
                "name": "nogil CPython"
            },
            "node_id": "LE_lADOABDGAc6IrPx5zwAAAAL7Wslk",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12806965604"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6198/events",
    "html_url": "https://github.com/cython/cython/issues/6198",
    "id": 2293038201,
    "labels": [
        {
            "color": "A37CC3",
            "default": false,
            "description": "",
            "id": 6871764375,
            "name": "nogil CPython",
            "node_id": "LA_kwDOABDGAc8AAAABmZbNlw",
            "url": "https://api.github.com/repos/cython/cython/labels/nogil%20CPython"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6198/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6IrPx5",
    "number": 6198,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6198/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6198/timeline",
    "title": "prange/OpenMP issues under the free-threading CPython build",
    "updated_at": "2024-05-18T13:15:24Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6198",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20306270?v=4",
        "events_url": "https://api.github.com/users/lysnikolaou/events{/privacy}",
        "followers_url": "https://api.github.com/users/lysnikolaou/followers",
        "following_url": "https://api.github.com/users/lysnikolaou/following{/other_user}",
        "gists_url": "https://api.github.com/users/lysnikolaou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lysnikolaou",
        "id": 20306270,
        "login": "lysnikolaou",
        "node_id": "MDQ6VXNlcjIwMzA2Mjcw",
        "organizations_url": "https://api.github.com/users/lysnikolaou/orgs",
        "received_events_url": "https://api.github.com/users/lysnikolaou/received_events",
        "repos_url": "https://api.github.com/users/lysnikolaou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lysnikolaou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lysnikolaou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lysnikolaou"
    }
}