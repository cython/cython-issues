{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "```python3\r\ndef bogusassignment():\r\n\ttestvar = testvar\r\n\treturn testvar\r\n```\r\n```python3\r\n@cython.locals(testvar=cython.int)\r\ncpdef int bogusassignment()\r\n```\r\n\r\nCode like this compiles and runs fine, but I'm not sure if there's any legitimate use cases where it would actually be intentional.\r\n\r\nI'm also not totally sure exactly where the values assigned to the uninitialized variable are coming from, and whether there might be adverse security implications in being able to easily accidentally read from an unknown portion of memory:\r\n\r\n```python3\r\ndef leakyread():\r\n\tcharp = charp\r\n\tl = []\r\n\tfor i in range(1000):\r\n\t\tb = charp[i]\r\n\t\tl.append(b)\r\n\treturn b''.join(l)\r\n```\r\n```python3\r\n@cython.locals(charp=cython.p_char, b=bytes, l=list)\r\ncpdef bytes leakyread()\r\n```\r\n\r\n(Like, hypothetically, if `charp` above were used as part of a public-facing portion of a web application, and the environment it was running in allowed it to access passwords, keys, internal program state, etc?)\r\n\r\nRamble: This behaviour seems weird to me based on Python semantics, but I assume there must be valid uses cases for it to be explicitly allowed with a warning. I'm not familiar enough with low-level programming to understand all of those use cases, or to have a good gauge on how difficult it is to meaningfully differentiate between valid code and presumably nonsensical assignments like above. So, apologies if this is invalid or redundant.",
    "closed_at": "2020-03-12T10:06:13Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't think Cython enforces whether C variables are initialized. However there is [an optional warning `warn.maybe_uninitialized`](https://cython.readthedocs.io/en/latest/src/userguide/source_files_and_compilation.html#warnings). A simpler example (try it with and without the line `# cython: warn.maybe_unitialized = True`):\r\n\r\n    def f():\r\n        cdef int a\r\n        return a\r\n\r\n`gcc` (and probably other compilers) gives you a warning though so it's not _entirely_ silent. Either way I don't think this is a bug.",
            "created_at": "2020-03-12T09:51:50Z",
            "html_url": "https://github.com/cython/cython/issues/3423#issuecomment-598098741",
            "id": 598098741,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3423",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA5ODc0MQ==",
            "updated_at": "2020-03-12T09:51:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598098741",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3423/comments",
    "created_at": "2020-03-12T08:59:20Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-12T10:06:13Z",
            "event": "closed",
            "id": 3122164984,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzEyMjE2NDk4NA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3122164984"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3423/events",
    "html_url": "https://github.com/cython/cython/issues/3423",
    "id": 579787344,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3423/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Nzk3ODczNDQ=",
    "number": 3423,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Successful compilation of clearly nonsensical references before assignment?",
    "updated_at": "2020-03-12T10:06:13Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3423",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
        "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
        "followers_url": "https://api.github.com/users/will-ca/followers",
        "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
        "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/will-ca",
        "id": 37680486,
        "login": "will-ca",
        "node_id": "MDQ6VXNlcjM3NjgwNDg2",
        "organizations_url": "https://api.github.com/users/will-ca/orgs",
        "received_events_url": "https://api.github.com/users/will-ca/received_events",
        "repos_url": "https://api.github.com/users/will-ca/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/will-ca"
    }
}