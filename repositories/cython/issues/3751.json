{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The code below \"evaluates\" without any error messages. By myadd is never defined, and the annotation output is never produced.\r\n\r\nRemoving the dependency on add.h makes everything work without a problem.\r\n\r\n## File system:\r\n```\r\nsrc/\r\n    - add.h\r\n    - Notebook.ipynb\r\n```\r\n## C Header File (standalone)\r\n```c\r\n// add.h\r\nint add(int x, int y) {\r\n    return x + y;\r\n}\r\n```\r\n## Jupyter Notebook:\r\n```py\r\n# Input cell [1]\r\n%load_ext cython\r\n```\r\n\r\n```py\r\n# Input cell [2]\r\n%%cython --annotate\r\n\r\ncdef extern from \"add.h\":\r\n    int add(int x, int y)\r\n\r\ncpdef myadd(int x, int y):\r\n    cdef int total = add(x, y)\r\n    return total\r\n```\r\n\r\n---\r\n\r\nTo reproduce/use the same environment, you can use docker:\r\n```sh\r\ndocker run --rm -it -p8888:8888 jupyter/scipy-notebook:ea01ec4d9f57\r\n```\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Changing to the following makes it work. (Notice that I added `-I.` at the top)\r\n```py\r\n# Input cell [2]\r\n%%cython --annotate -I.\r\n\r\ncdef extern from \"add.h\":\r\n    int add(int x, int y)\r\n\r\ncpdef myadd(int x, int y):\r\n    cdef int total = add(x, y)\r\n    return total\r\n```\r\n\r\nWould be nice if an error was thrown, saying the header file was not found. Failing silently makes it a lot harder to track down the problem.",
            "created_at": "2020-07-24T02:15:46Z",
            "html_url": "https://github.com/cython/cython/issues/3751#issuecomment-663318293",
            "id": 663318293,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3751",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzMxODI5Mw==",
            "performed_via_github_app": null,
            "updated_at": "2020-07-24T02:15:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/663318293",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/410028?v=4",
                "events_url": "https://api.github.com/users/bergkvist/events{/privacy}",
                "followers_url": "https://api.github.com/users/bergkvist/followers",
                "following_url": "https://api.github.com/users/bergkvist/following{/other_user}",
                "gists_url": "https://api.github.com/users/bergkvist/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bergkvist",
                "id": 410028,
                "login": "bergkvist",
                "node_id": "MDQ6VXNlcjQxMDAyOA==",
                "organizations_url": "https://api.github.com/users/bergkvist/orgs",
                "received_events_url": "https://api.github.com/users/bergkvist/received_events",
                "repos_url": "https://api.github.com/users/bergkvist/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bergkvist/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bergkvist/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bergkvist"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "The compile output from Jupyter output appears in the terminal that Jupyter is run in, not the notebook itself.\r\n\r\nIt would be nice if it could be redirected to the notebook (at least on failure) - it'd save a lot of confusion for people. I don't think capturing and redirecting it is particularly easy though.",
            "created_at": "2020-07-24T06:01:15Z",
            "html_url": "https://github.com/cython/cython/issues/3751#issuecomment-663360969",
            "id": 663360969,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3751",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzM2MDk2OQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-07-24T06:01:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/663360969",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Duplicate of https://github.com/cython/cython/issues/1569\r\n\r\n~~Try with the --verbose option and it should be more obvious~~",
            "created_at": "2020-07-24T06:07:04Z",
            "html_url": "https://github.com/cython/cython/issues/3751#issuecomment-663362604",
            "id": 663362604,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3751",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzM2MjYwNA==",
            "performed_via_github_app": null,
            "updated_at": "2020-07-24T06:09:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/663362604",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "On closer inspection the verbose option doesn't look to be that much more verbose. I think intercepting the compiler output is harder than it looks. I'll reopen and someone else can decide what to do with this.",
            "created_at": "2020-07-24T06:10:59Z",
            "html_url": "https://github.com/cython/cython/issues/3751#issuecomment-663363561",
            "id": 663363561,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3751",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzM2MzU2MQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-07-24T06:11:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/663363561",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the problem comes with  #3196: While in IPython one can see things printed to c-level stdout this is not the case for Jupiter-notebooks.\r\n\r\nThere is `wurlitzer` (https://github.com/minrk/wurlitzer) which has the IPython-magic `%load_ext wurlizer` to capture C-level stdout for Jupiter-notebooks, sadly it works only for Linux (and probably macOS), but this is probably not the way to go.\r\n\r\nAnother problem with #3196 is that while it catches `distutils.errors.CompileError` it doesn't catch the `distutils.errors.LinkError`, for which one still sees the old message.\r\n\r\nMaybe a better solution would be to catch both exceptions, but also to print to `sys.stderr` (which for Jupiter-notebook has nothing to do with C-level stderr) that an error has happened while compiling/linking and the user should see logs on C-level stderr/stdout?",
            "created_at": "2020-08-24T14:31:02Z",
            "html_url": "https://github.com/cython/cython/issues/3751#issuecomment-679162419",
            "id": 679162419,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3751",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTE2MjQxOQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-08-24T14:31:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/679162419",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Isn't it enough to divert `sys.stderr` before running the extension build?\r\nThat obviously introduces concurrency problems if we're not the only thread creating output at this time, but that case should be fairly rare, at least for most users.\r\n\r\nEverything beyond that, I'd say, should be improved on the side of [setuptools](https://github.com/pypa/setuptools/tree/master/setuptools/_distutils), which controls the C compiler run.",
            "created_at": "2020-10-02T11:04:33Z",
            "html_url": "https://github.com/cython/cython/issues/3751#issuecomment-702669872",
            "id": 702669872,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3751",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjY2OTg3Mg==",
            "performed_via_github_app": null,
            "updated_at": "2020-10-02T11:04:33Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/702669872",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@scoder \r\n> Isn't it enough to divert `sys.stderr` before running the extension build?\r\n\r\nNot sure I understand that, I think redirecting `sys.stderr` will not change where the C-level output will be written to?\r\n\r\nWhen compiler (or linker) is called by `distutils`, the output  of the compiler/linker isn't captured (see [here](https://github.com/python/cpython/blob/497126f7ea955ee005e78f2cdd61f175d4fcdbb2/Lib/distutils/spawn.py#L74-L77)):\r\n\r\n```\r\n    try:\r\n        proc = subprocess.Popen(cmd, env=env)\r\n        proc.wait()\r\n        exitcode = proc.returncode\r\n```\r\n\r\nand goes directly to the C-level stdout/stderr bypassing the whole python-IO-machinery.  In normal python/ipython session we still see linker/gcc-output, because it is the same terminal. However in a jupyter-notebook, only things printed to python's stdout/stderr are rendered in the browser, not the things printed directly to C-level stdout/stderr (which are seen in the terminal from which the jupyter was started).\r\n\r\nThis is the reason why right now, even if compile step failed, a Jupyter user assumes, that everything worked as expected and sees no feedback, that the building the extension failed, see #3840 \r\n\r\n1)  The best way is probably to catch stderr/stdout while calling compiler/linker in distutils and redirect this to python's stderr/stdout (not sure why this wasn't done in the first place). Not sure whether this solution makes sense or is feasible any time soon.\r\n\r\n2) First workaround: One could catch the C-level output while executing %%cython, and redirect it to sys.stderr. There is [wurlitzer](https://github.com/minrk/wurlitzer), which does that (based on this [article](https://eli.thegreenplace.net/2015/redirecting-all-kinds-of-stdout-in-python/)), but its approach with `ctypes` doesn't work on Windows (at least not out-of-the box, I also wasn't able to make it work, but maybe it is just me).  However, it is possible to write a C-extension, which would work for Linux and Windows. I have written a prototype with Cython some time ago (https://github.com/realead/coutcatcher), not sure it is waterproof tough.\r\n\r\n3) Minimal workaround (at core of PR  #3819):  notify the user, that the build didn't succeed, which gives a hint to look for the output in terminal.\r\n\r\nEven if I bug python-devs with 1) now, it will take time (if it will be considered a valid concern) to be fixed/improved. Until then 3) would be not ideal, but at least an improvement compared to the current situation.\r\n\r\nWhat would be a good solution from your point of view? I'll try my best to implement it and to provide a PR to solve this problem.\r\n\r\n",
            "created_at": "2020-10-02T12:48:04Z",
            "html_url": "https://github.com/cython/cython/issues/3751#issuecomment-702714678",
            "id": 702714678,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3751",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjcxNDY3OA==",
            "performed_via_github_app": null,
            "updated_at": "2020-10-02T12:48:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/702714678",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In our test runner, we do this: https://github.com/cython/cython/blob/af757997c7d13c00b579fd00393350d9367dd12a/Cython/Utils.py#L396-L433\r\nAdmittedly, that's a bit involved, but it gets the job done.\r\n\r\nNote that the people to approach for 1) are not the CPython devs but the setuptools devs. The distutils package in the standard library has been deprecated and development has moved to setuptools. See my link above.",
            "created_at": "2020-10-02T13:11:54Z",
            "html_url": "https://github.com/cython/cython/issues/3751#issuecomment-702725848",
            "id": 702725848,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3751",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjcyNTg0OA==",
            "performed_via_github_app": null,
            "updated_at": "2020-10-02T13:11:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/702725848",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3751/comments",
    "created_at": "2020-07-23T21:56:57Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-07-24T06:07:05Z",
            "event": "closed",
            "id": 3582669642,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzU4MjY2OTY0Mg==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3582669642"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-07-24T06:10:59Z",
            "event": "reopened",
            "id": 3582677383,
            "node_id": "MDEzOlJlb3BlbmVkRXZlbnQzNTgyNjc3Mzgz",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3582677383"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-10-02T12:48:05Z",
            "event": "mentioned",
            "id": 3833819489,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgzMzgxOTQ4OQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3833819489"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-10-02T12:48:05Z",
            "event": "subscribed",
            "id": 3833819493,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MzM4MTk0OTM=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3833819493"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3751/events",
    "html_url": "https://github.com/cython/cython/issues/3751",
    "id": 664789805,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3751/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2NjQ3ODk4MDU=",
    "number": 3751,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[Jupyter] Fails silently on importing C header file in same folder",
    "updated_at": "2020-10-02T13:11:54Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3751",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/410028?v=4",
        "events_url": "https://api.github.com/users/bergkvist/events{/privacy}",
        "followers_url": "https://api.github.com/users/bergkvist/followers",
        "following_url": "https://api.github.com/users/bergkvist/following{/other_user}",
        "gists_url": "https://api.github.com/users/bergkvist/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bergkvist",
        "id": 410028,
        "login": "bergkvist",
        "node_id": "MDQ6VXNlcjQxMDAyOA==",
        "organizations_url": "https://api.github.com/users/bergkvist/orgs",
        "received_events_url": "https://api.github.com/users/bergkvist/received_events",
        "repos_url": "https://api.github.com/users/bergkvist/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bergkvist/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bergkvist/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bergkvist"
    }
}