{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nWe're attempting to upgrade to Cython 3.0.x in https://github.com/pandas-dev/pandas/pull/55179, but seeing some performance regressions. We've tracked a number of these down to our use of `ndarray` without any dtype or dimension specified. Is this change in performance expected?\r\n\r\nWhere we can, we've added the dtype and seen good performance improvements, but there are number of places in our Cython code that need to be able to handle an arbitrary NumPy array.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nmain.pyx:\r\n\r\n```cython\r\ncimport numpy as cnp\r\nfrom numpy cimport ndarray\r\n\r\ncnp.import_array()\r\n\r\ndef foo(ndarray arr):\r\n    cdef int n, i\r\n    n = len(arr)\r\n    for i in range(n):\r\n        arr[i] += 1\r\n```\r\n\r\nrun.py:\r\n\r\n```\r\nimport numpy as np\r\nfrom main import foo\r\nimport time\r\n\r\narr = np.arange(10_000_000)\r\ntimer = time.time()\r\nfoo(arr)\r\nprint(time.time() - timer)\r\n```\r\n\r\nsetup.py:\r\n\r\n```\r\nfrom setuptools import setup\r\nfrom Cython.Build import cythonize\r\nimport numpy as np\r\n\r\nsetup(\r\n    ext_modules=cythonize(\"main.pyx\"),\r\n    include_dirs=[np.get_include()]\r\n)\r\n```\r\n\r\nBuild command:\r\n\r\n```\r\npython setup.py build_ext --inplace\r\n```\r\n\r\n### Expected behaviour\r\n\r\nWhen compiling with Cython 0.29.33, the above code takes ~0.63 seconds to run. On Cython 3.0.2, it's ~1.04.\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.10.12\r\n\r\n### Cython version\r\n\r\n3.0.2 vs 0.29.33\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I can confirm the numbers. Checked also against master.",
            "created_at": "2023-09-23T14:07:08Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732326226",
            "id": 1732326226,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQTNS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732326226/reactions"
            },
            "updated_at": "2023-09-23T14:07:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732326226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I had a look into the example and I have some comments. But note that I don't have much experience with numpy and it's C API please have a patience with me :-)\r\n\r\n1. why is needed this line: `cnp.import_array()`? The numpy documentation says[1] that it needs to be used when numpy CAPI is used. But when I had a look into the generated C code function `foo()` is not using any numpy array. Instead it uses standard python API to access array members (in both 0.29.X and 3.0.X):\r\n\r\n![image](https://github.com/cython/cython/assets/827060/7201aba4-6c11-4d36-9f47-6603824a7a5f)\r\n\r\n2. Generated C code seems to be the same in both versions, I checked also called `__Pyx_*` functions but they seems to have same performance in both 3.0 and 0.29.X Cython.\r\n\r\n\r\n[1] https://numpy.org/doc/1.13/reference/c-api.array.html#c.import_array",
            "created_at": "2023-09-23T19:25:01Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732392557",
            "id": 1732392557,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQjZt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732392557/reactions"
            },
            "updated_at": "2023-09-23T19:29:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732392557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> 1. why is needed this line: `cnp.import_array()`\r\n\r\nIt probably isn't needed. But we generally recommend it if there's any doubt. There's a few cases where it's needed in 3.0 and not in 0.29.x. Cython actually generates it automatically if you cimport numpy and omit it because enough people were getting mystery crashes",
            "created_at": "2023-09-23T19:39:53Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732395128",
            "id": 1732395128,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQkB4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732395128/reactions"
            },
            "updated_at": "2023-09-23T19:39:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732395128",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If I had to guess (and this is a complete guess) we've made some changes to Python object indexing to support things like `__class_getitem__()`. I suspect it's this.\r\n\r\nhttps://github.com/cython/cython/commit/c0ceabe1ee0904477ed0b0b9371ae43915d7bd2f\r\n\r\nI'd try reverting that and seeing if the performance changes (just for diagnosis... I don't think we should fix it by just reverting it)",
            "created_at": "2023-09-23T19:43:37Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732395774",
            "id": 1732395774,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQkL-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732395774/reactions"
            },
            "updated_at": "2023-09-23T19:46:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732395774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If I had to guess (and this is a complete guess) we've made some changes to Python object indexing to support things like __class_getitem__().\r\n\r\nIndeed, now I did experiment. I commented out in the loop of generated C file lines as follows:\r\n\r\n```c\r\n  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {\r\n    __pyx_v_i = __pyx_t_4;\r\n\r\n    /* \"main.pyx\":10\r\n *     n = len(arr)\r\n *     for i in range(n):\r\n *         arr[i] += 1             # <<<<<<<<<<<<<<\r\n */\r\n    __pyx_t_5 = __pyx_v_i;\r\n    __pyx_t_6 = __Pyx_GetItemInt(((PyObject *)__pyx_v_arr), __pyx_t_5, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 10, __pyx_L1_error)\r\n    // __Pyx_GOTREF(__pyx_t_6);\r\n    // __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 10, __pyx_L1_error)\r\n    // __Pyx_GOTREF(__pyx_t_7);\r\n    // __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\r\n    // if (unlikely((__Pyx_SetItemInt(((PyObject *)__pyx_v_arr), __pyx_t_5, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 10, __pyx_L1_error)\r\n    // __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;\r\n  }\r\n```\r\n\r\nAnd it seems that 0.29.X Cython is faster then 3.0.X Cython...",
            "created_at": "2023-09-23T19:54:05Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732397443",
            "id": 1732397443,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQkmD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732397443/reactions"
            },
            "updated_at": "2023-09-23T19:54:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732397443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> https://github.com/cython/cython/commit/c0ceabe1ee0904477ed0b0b9371ae43915d7bd2f\r\n>\r\n> I'd try reverting that and seeing if the performance changes (just for diagnosis... I don't think we should fix it by just reverting it)\r\n\r\nThis was introduced in cython 3.0a2 (if I am not wrong) and when I installed 3.0a1 the issue was still present... But please doublecheck me.",
            "created_at": "2023-09-23T20:05:21Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732399444",
            "id": 1732399444,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQlFU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732399444/reactions"
            },
            "updated_at": "2023-09-23T20:05:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732399444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > [c0ceabe](https://github.com/cython/cython/commit/c0ceabe1ee0904477ed0b0b9371ae43915d7bd2f)\r\n> > I'd try reverting that and seeing if the performance changes (just for diagnosis... I don't think we should fix it by just reverting it)\r\n> \r\n> This was introduced in cython 3.0a2 (if I am not wrong) and when I installed 3.0a1 the issue was still present... But please doublecheck me.\r\n\r\nYeah you're right. If the issue was still in 3.0a1 then it's probably something else.",
            "created_at": "2023-09-23T20:16:56Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732401482",
            "id": 1732401482,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQllK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732401482/reactions"
            },
            "updated_at": "2023-09-23T20:16:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732401482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If the issue was still in 3.0a1 then it's probably something else.\n\nI think we previously looked for the sequence protocol first and only then considered mappings. That might well make a difference in the case of NumPy. This was changed to match Python's own behaviour.\n",
            "created_at": "2023-09-24T06:31:42Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732500758",
            "id": 1732500758,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQ90W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732500758/reactions"
            },
            "updated_at": "2023-09-24T06:31:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732500758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If I comment out the entire mapping handler part in `__Pyx_GetItemInt_Fast()`, it becomes ~15% faster for me. That makes the code incorrect, but it does make a major difference in this case.\r\nhttps://github.com/cython/cython/blob/9827c6085e2141db71c55ae231a4a09a878dd524/Cython/Utility/ObjectHandling.c#L445-L451",
            "created_at": "2023-09-24T07:08:34Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732506219",
            "id": 1732506219,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQ_Jr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732506219/reactions"
            },
            "updated_at": "2023-09-24T07:08:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732506219",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So, the issue here is that NumPy implements both the CPython sequence protocol (for simple indexing, length, contains, etc.) and the mapping protocol (for slicing). Since Cython 3.0, we follow Python's behaviour of looking for the mapping protocol before the sequence protocol. Previously, we passed C integer indexes directly into the sequence protocol, ignoring the mapping protocol if both were implemented.\r\n\r\nIn the specific case of NumPy, this means that we hit a double slow path. First, we have to create a new Python `int` object from the `Py_ssize_t` C index to pass it into the mapping protocol, then NumPy receives a generic object and has to determine that we're up to simple indexing, before it can unpack the index into a C integer and look up the array value.\r\n\r\nI'm not sure how to deal with this. We're not using the buffer interface here, so the code really is slower than necessary. Should we special-case NumPy for code that could much better be accelerated differently?",
            "created_at": "2023-09-24T07:29:38Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732509625",
            "id": 1732509625,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nQ_-5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732509625/reactions"
            },
            "updated_at": "2023-09-24T07:29:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732509625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> but there are number of places in our Cython code that need to be able to handle an arbitrary NumPy array.\r\n\r\nWould fused types help here? That's what a couple of projects do, they just create a fused type of all possible NumPy dtypes and then let Cython generate function variants for each of them. Adds a bunch of code, and also the runtime overhead of checking the dtype and unpacking the array accordingly, but if the processing afterwards is non-trivial, or the array is somewhat large, it's probably worth it.",
            "created_at": "2023-09-24T07:33:17Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732510255",
            "id": 1732510255,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nRAIv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732510255/reactions"
            },
            "updated_at": "2023-09-24T07:33:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732510255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would fused types help here?\r\n\r\nI just tried it on the reported example, and the calculation of a 1,000,000 item array is ~300 times faster with fused types. For 1000 items, it's still about 200 times faster. Even for just 100 items, it's 40x faster compared to the getitem implementation in Cython 3.0.\r\n\r\nI think you'd benefit a lot from not using bare NumPy array objects.",
            "created_at": "2023-09-24T07:39:32Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732511199",
            "id": 1732511199,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nRAXf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732511199/reactions"
            },
            "updated_at": "2023-09-24T07:44:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732511199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm not sure how to deal with this. We're not using the buffer interface here, so the code really is slower than necessary. Should we special-case NumPy for code that could much better be accelerated differently?\r\n\r\nJust thinking aloud. Does it make sense to add support for abc.collections in cython?\r\n\r\n```cython\r\ndef foo(Sequence arr):\r\n    cdef int n, i\r\n    n = len(arr)\r\n    for i in range(n):\r\n        arr[i] += 1\r\n```\r\n\r\nThis would benefit also pure python where it will fit nicely:\r\n\r\n```python\r\nimport cython\r\nfrom collections.abc import Sequence\r\n\r\ndef foo(arr: Sequence):\r\n    n: cython.int\r\n    i: cython.int\r\n    n = len(arr)\r\n    for i in range(n):\r\n        arr[i] += 1\r\n```\r\n[1] https://docs.python.org/3/library/collections.abc.html",
            "created_at": "2023-09-24T11:38:43Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732551597",
            "id": 1732551597,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nRKOt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732551597/reactions"
            },
            "updated_at": "2023-09-24T11:45:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732551597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think the distinction between the Python interfaces `Sequence` and `Mapping` is always preserved at the C API level.  E.g. for Cython extension types itself I think we always define `__getitem__` under `tp_mapping`.\r\n\r\nI like the basic idea of being able to pick out the fast-path, but not sure how it quite works here.",
            "created_at": "2023-09-24T11:55:48Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732554320",
            "id": 1732554320,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nRK5Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732554320/reactions"
            },
            "updated_at": "2023-09-24T11:55:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732554320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ages ago pandas used to have a helper `util.get_value_at` (https://github.com/pandas-dev/pandas/blob/00416816fa5be34567185149fdfcbf2d0e068af0/pandas/_libs/util.pxd#L32, and under the hood https://github.com/pandas-dev/pandas/blob/00416816fa5be34567185149fdfcbf2d0e068af0/pandas/_libs/src/numpy_helper.h#L26) that we used for `arr[i]`  At some point I removed it in favor of calling `ndarray.__getitem__` directly, but we could re-implement it.",
            "created_at": "2023-09-24T14:17:00Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732583282",
            "id": 1732583282,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nRR9y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732583282/reactions"
            },
            "updated_at": "2023-09-24T14:17:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732583282",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> they just create a fused type of all possible NumPy dtypes\r\n\r\nIIRC you can't put e.g. np.datetime64 dtypes into a fused type (or declare them non-fused as `ndarray[datetime64]`).  I don't think that is relevant to the OP's issue, but prevents this from being a cure-all.",
            "created_at": "2023-09-24T14:19:25Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732583773",
            "id": 1732583773,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nRSFd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732583773/reactions"
            },
            "updated_at": "2023-09-24T14:19:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732583773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Ages ago pandas used to have a helper `util.get_value_at` (https://github.com/pandas-dev/pandas/blob/00416816fa5be34567185149fdfcbf2d0e068af0/pandas/_libs/util.pxd#L32, and under the hood https://github.com/pandas-dev/pandas/blob/00416816fa5be34567185149fdfcbf2d0e068af0/pandas/_libs/src/numpy_helper.h#L26) that we used for `arr[i]` At some point I removed it in favor of calling `ndarray.__getitem__` directly, but we could re-implement it.\r\n\r\nYou could also try using the C API function [`PySequence_GetItem`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_GetItem) which I think will skip directly to the fast path of the `__getitem__` lookup and be simpler than what you used to have.",
            "created_at": "2023-09-24T14:21:54Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732584250",
            "id": 1732584250,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nRSM6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732584250/reactions"
            },
            "updated_at": "2023-09-24T14:21:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732584250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Last thing that comes to mind: in order to handle unknown-dimension ndarrays pandas has been moving to using a pattern like\r\n\r\n```\r\n    it = <flatiter>PyArray_IterNew(arr)\r\n    for i in range(n):\r\n        val = PyArray_GETITEM(arr, PyArray_ITER_DATA(it))\r\n```\r\n\r\nit's not pretty, and the `__setitem__` analogue is _really_ not pretty.  Since the input arrays have unknown ndim, they can't have their types declared.  AFAIK that hasn't killed perf.  So moving to that pattern more is an option.",
            "created_at": "2023-09-24T14:23:59Z",
            "html_url": "https://github.com/cython/cython/issues/5719#issuecomment-1732584691",
            "id": 1732584691,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5719",
            "node_id": "IC_kwDOABDGAc5nRSTz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1732584691/reactions"
            },
            "updated_at": "2023-09-24T14:23:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1732584691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5719/comments",
    "created_at": "2023-09-23T12:41:57Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-09-23T13:05:08Z",
            "event": "labeled",
            "id": 10453218727,
            "label": {
                "color": "444444",
                "name": "Optimization"
            },
            "node_id": "LE_lADOABDGAc5x1iXrzwAAAAJvD3Wn",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10453218727"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-09-23T13:05:08Z",
            "event": "labeled",
            "id": 10453218730,
            "label": {
                "color": "444444",
                "name": "numpy"
            },
            "node_id": "LE_lADOABDGAc5x1iXrzwAAAAJvD3Wq",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10453218730"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-09-23T13:05:13Z",
            "event": "milestoned",
            "id": 10453218914,
            "milestone": {
                "title": "3.0.3"
            },
            "node_id": "MIE_lADOABDGAc5x1iXrzwAAAAJvD3Zi",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10453218914"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-09-23T13:32:19Z",
            "event": "labeled",
            "id": 10453258949,
            "label": {
                "color": "f9d0c4",
                "name": "performance"
            },
            "node_id": "LE_lADOABDGAc5x1iXrzwAAAAJvEBLF",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10453258949"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5719/events",
    "html_url": "https://github.com/cython/cython/issues/5719",
    "id": 1909859819,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805151,
            "name": "performance",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxNTE=",
            "url": "https://api.github.com/repos/cython/cython/labels/performance"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556272,
            "name": "Optimization",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNzI=",
            "url": "https://api.github.com/repos/cython/cython/labels/Optimization"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425563611,
            "name": "numpy",
            "node_id": "MDU6TGFiZWw0MjU1NjM2MTE=",
            "url": "https://api.github.com/repos/cython/cython/labels/numpy"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5719/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 26,
        "created_at": "2023-08-27T11:24:52Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/101",
        "id": 9846335,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/101/labels",
        "node_id": "MI_kwDOABDGAc4Alj4_",
        "number": 101,
        "open_issues": 8,
        "state": "open",
        "title": "3.0.3",
        "updated_at": "2023-09-23T13:05:13Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/101"
    },
    "node_id": "I_kwDOABDGAc5x1iXr",
    "number": 5719,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5719/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5719/timeline",
    "title": "[BUG] Cython performance regression with untyped NumPy array",
    "updated_at": "2023-09-24T14:23:59Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5719",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/45562402?v=4",
        "events_url": "https://api.github.com/users/rhshadrach/events{/privacy}",
        "followers_url": "https://api.github.com/users/rhshadrach/followers",
        "following_url": "https://api.github.com/users/rhshadrach/following{/other_user}",
        "gists_url": "https://api.github.com/users/rhshadrach/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rhshadrach",
        "id": 45562402,
        "login": "rhshadrach",
        "node_id": "MDQ6VXNlcjQ1NTYyNDAy",
        "organizations_url": "https://api.github.com/users/rhshadrach/orgs",
        "received_events_url": "https://api.github.com/users/rhshadrach/received_events",
        "repos_url": "https://api.github.com/users/rhshadrach/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rhshadrach/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rhshadrach/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rhshadrach"
    }
}