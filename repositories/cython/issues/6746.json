{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\n\nA limitation of Cython is that you cannot have cdef inside a block (if, for, etc).\n\nWhile this is often easy to work around it (use functions inside of blocks, declare all variables at the start of your function, etc), this is a minor annoyance that would make Cython nicer to use.\n\nIdeally you would be able to declare a cdef inside a block, and the associated variable be released at the end of the block.\n\nHere is a list of annoyances with the current behaviour:\n- Can cause cdef declarations to be far away from their actual uses, making code harder to read\n- For the above reason, it's not always easy to spot you missed to declare a variable with cdef.\n- Complicates reuse of the same variable name accross your function\n- Cannot use the same name with different types in the same code section but different blocks\n- AI tools seem to really have trouble with not being able to use cdef inside a block\n- Deallocation occurs at the end of the function, rather than at the end of the block using it (how does that play with the critical section feature ?)\n- To improve performance with the free-threaded build, Cython will likely at some point need to optimize the number reference counts INC anc DEC. In functions where you have local variables to blocks that happen to be of the same name, declaring them with cdef inside their own block would likely help generate better recounting code.\n- Right now you cannot have a with gil section inside a nogil function, because of temporary references. I believe this could fix this issue.\n\nNothing blocking, but it would be a nice improvement.\n\n### Describe the solution you'd like.\n\n```cython\nif condition:\n    cdef int some_var\n    [...]\nelse:\n    cdef int some_var\n    [...]\n```\n\n### Describe alternatives you've considered.\n\n_No response_\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'd be opposed to this. Cython's basic model is \"Python-like syntax and behaviour but using C typing\". This is moving away from the Python-like behaviour. I think if you want this to happen you need to persuade Python to make the change instead.\n\n> Cannot use the same name with different types in the same code section but different blocks\n\nMost of the Python static type checkers will complain about this as well.\n\n> AI tools seem to really have trouble with not being able to use cdef inside a block\n\nThat's a \"them\" problem.\n\n> Deallocation occurs at the end of the function, rather than at the end of the block using it (how does that play with the critical section feature ?)\n\nPython-like behaviour. Probably plays well with the critical section feature - most of the time you want the deallocation to happen outside the critical section to avoid running arbitrary code inside the critical section. You can always use `del` if you disagree.\n\n> To improve performance with the free-threaded build, Cython will likely at some point need to optimize the number reference counts INC anc DEC. In functions where you have local variables to blocks that happen to be of the same name, declaring them with cdef inside their own block would likely help generate better recounting code.\n\nDon't really buy this. And I definitely don't buy that it has any influence on free-threaded build specifically.\n\n> Right now you cannot have a with gil section inside a nogil function, because of temporary references. I believe this could fix this issue.\n\nThis works fine for me (although it does need to reacquire the GIL at the end to deallocate `a`)\n\n```\ndef g():\n    ...\n\ncdef void f() nogil:\n    with gil:\n        a = g()\n```",
            "created_at": "2025-03-20T19:08:30Z",
            "html_url": "https://github.com/cython/cython/issues/6746#issuecomment-2741423239",
            "id": 2741423239,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6746",
            "node_id": "IC_kwDOABDGAc6jZsyH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2741423239/reactions"
            },
            "updated_at": "2025-03-20T19:08:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2741423239",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I'd be opposed to this. Cython's basic model is \"Python-like syntax and behaviour but using C typing\". This is moving away from the Python-like behaviour. I think if you want this to happen you need to persuade Python to make the change instead.\n\nI totally agree the Python behaviour should be the default. I only meant specifically cdef variable, since declaring a cdef variable inside a block would be a clear intent of the programmer to declare it in the block, and not using the Python syntax (because cdef).\n\n> This works fine for me (although it does need to reacquire the GIL at the end to deallocate `a`)\n\nThe example works as well here. This came to my mind because today some friend had the issue (the error talked about temporary variables being disallowed in a nogil function), and I had the same issue a few times in the past and worked around by putting the content of the with gil section in a separate function.\n\nHere is an example that fails:\n\n```\ncdef class MyClass:\n    pass\n\ncdef void g(a):\n    return\n\ncdef void f(int i) nogil:\n    cdef MyClass a\n    if i == 0:\n        with gil:\n            a = MyClass()\n            g(a)\n```",
            "created_at": "2025-03-20T22:31:10Z",
            "html_url": "https://github.com/cython/cython/issues/6746#issuecomment-2741808592",
            "id": 2741808592,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6746",
            "node_id": "IC_kwDOABDGAc6jbK3Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2741808592/reactions"
            },
            "updated_at": "2025-03-20T22:31:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2741808592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2546609?v=4",
                "events_url": "https://api.github.com/users/axeldavy/events{/privacy}",
                "followers_url": "https://api.github.com/users/axeldavy/followers",
                "following_url": "https://api.github.com/users/axeldavy/following{/other_user}",
                "gists_url": "https://api.github.com/users/axeldavy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/axeldavy",
                "id": 2546609,
                "login": "axeldavy",
                "node_id": "MDQ6VXNlcjI1NDY2MDk=",
                "organizations_url": "https://api.github.com/users/axeldavy/orgs",
                "received_events_url": "https://api.github.com/users/axeldavy/received_events",
                "repos_url": "https://api.github.com/users/axeldavy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/axeldavy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/axeldavy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/axeldavy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Here is an example that fails:\n\nThat's probably worth fixing, because it's pretty much the exact same code that'd be generated without the `cdef MyClass`. So there's no good reason to ban the `cdef` there.",
            "created_at": "2025-03-20T22:39:57Z",
            "html_url": "https://github.com/cython/cython/issues/6746#issuecomment-2741820772",
            "id": 2741820772,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6746",
            "node_id": "IC_kwDOABDGAc6jbN1k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2741820772/reactions"
            },
            "updated_at": "2025-03-20T22:39:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2741820772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6746/comments",
    "created_at": "2025-03-20T15:46:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53637421?v=4",
                "events_url": "https://api.github.com/users/GalaxySnail/events{/privacy}",
                "followers_url": "https://api.github.com/users/GalaxySnail/followers",
                "following_url": "https://api.github.com/users/GalaxySnail/following{/other_user}",
                "gists_url": "https://api.github.com/users/GalaxySnail/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GalaxySnail",
                "id": 53637421,
                "login": "GalaxySnail",
                "node_id": "MDQ6VXNlcjUzNjM3NDIx",
                "organizations_url": "https://api.github.com/users/GalaxySnail/orgs",
                "received_events_url": "https://api.github.com/users/GalaxySnail/received_events",
                "repos_url": "https://api.github.com/users/GalaxySnail/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GalaxySnail/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GalaxySnail/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GalaxySnail",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-03-21T13:59:15Z",
            "event": "subscribed",
            "id": 16929109101,
            "node_id": "SE_lADOABDGAc6u_rYNzwAAAAPxDbRt",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16929109101"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6746/events",
    "html_url": "https://github.com/cython/cython/issues/6746",
    "id": 2935928333,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6746/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6u_rYN",
    "number": 6746,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6746/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6746/timeline",
    "title": "[ENH] scoped cdef",
    "type": null,
    "updated_at": "2025-03-20T22:39:57Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6746",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2546609?v=4",
        "events_url": "https://api.github.com/users/axeldavy/events{/privacy}",
        "followers_url": "https://api.github.com/users/axeldavy/followers",
        "following_url": "https://api.github.com/users/axeldavy/following{/other_user}",
        "gists_url": "https://api.github.com/users/axeldavy/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/axeldavy",
        "id": 2546609,
        "login": "axeldavy",
        "node_id": "MDQ6VXNlcjI1NDY2MDk=",
        "organizations_url": "https://api.github.com/users/axeldavy/orgs",
        "received_events_url": "https://api.github.com/users/axeldavy/received_events",
        "repos_url": "https://api.github.com/users/axeldavy/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/axeldavy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/axeldavy/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/axeldavy",
        "user_view_type": "public"
    }
}