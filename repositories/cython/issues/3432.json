{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I see this as a wishlist feature at most, but sometimes I will use syntax in Python like:\r\n\r\n```python3\r\nimport package.subpackage.module_a, package.subpackage.module_b\r\nsubpackage = package.subpackage\r\n\r\ndo_stuff_with(subpackage.module_a.some_cls())\r\n```\r\n\r\nThis makes it possible to explicitly import only the specified module(s) from a package, while still having a partial level of qualification on the modules' names in order to avoid cluttering/obfuscating the global namespace, without being too verbose either.\r\n\r\nWith `.pxd` files, the closest ways of doing this seem to be:\r\n\r\n```python3\r\ncimport package.subpackage.module_a, package.subpackage.module_b\r\n```\r\n```python3\r\ndo_stuff_with(package.subpackage.module_a.some_cls())\r\n```\r\n\r\n...which is more verbose, due to the fully qualified name, or:\r\n\r\n```python3\r\nfrom package.subpackage cimport module_a as subpackage_module_a, module_b as subpackage_module_b\r\n```\r\n```python3\r\ndo_stuff_with(subpackage_module_a.some_cls())\r\n```\r\n\r\n...Which is messier and less clear.\r\n\r\n---\r\n\r\nIn Python, the rename occurs through an actual dynamic name/variable assignment to the module object, which obviously can't work for static declarations. Maybe the `=` operator could create aliases that denote (possibly textual) equivalence in certain cases?",
    "closed_at": "2020-03-15T13:04:12Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Since `cimport … as …` and `from … cimport …` both exist already and do exactly what one would expect from Python, I'm very much against adding a special case feature that really just does the same thing and requires a lot of care in the implementation to restrict it to \"things that should work\" and exclude everything else. I would also like to avoid having to explain to users why these \"things that should work\" are the only things that work and everything else that looks and feels the same to them is being rejected.",
            "created_at": "2020-03-15T13:04:12Z",
            "html_url": "https://github.com/cython/cython/issues/3432#issuecomment-599207729",
            "id": 599207729,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3432",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTIwNzcyOQ==",
            "updated_at": "2020-03-15T13:04:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/599207729",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I also disagree that `cimport … as …` is \"messier and less clear\". It's exactly what I do when I need this, and I consider it a good thing that it makes it clear at the very top of the file what gets imported from where and under which name it is going to be used in the rest of the module.",
            "created_at": "2020-03-15T13:07:55Z",
            "html_url": "https://github.com/cython/cython/issues/3432#issuecomment-599208183",
            "id": 599208183,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3432",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTIwODE4Mw==",
            "updated_at": "2020-03-15T13:08:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/599208183",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ah, I meant that my specific example of of `from <packagename> cimport <modulename> as <packagename>_<modulename>` is less clear, in that it concatenated the package and module names using an underscore in lieu of a real dot/attribute.\r\n\r\nI like to keep at least a couple levels of \"dots\" in front of imported names, so it's clear whenever it pops up in the rest of the code that the name isn't defined within the current module. But Python only supports the `from ... import ... as ...` format, which directly brings the imported names right into the module namespace, or the `import ...` format, which often leaves more levels of qualification and verbosity (and presumably attribute access overhead) than necessary. Hence, I settled on using full imports followed by assignments.\r\n\r\nI appreciate the explicit explanation for keeping things as they are. Thank you.\r\n\r\nReally, I guess my gripe is with Python semantics not providing a way to import names with partial qualification.",
            "created_at": "2020-03-19T08:18:04Z",
            "html_url": "https://github.com/cython/cython/issues/3432#issuecomment-601046538",
            "id": 601046538,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3432",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTA0NjUzOA==",
            "updated_at": "2020-03-19T08:18:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/601046538",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "All of `from pkg cimport subpkg`, `import pkg.subpkg as subpkg` and `import pkg.subpkg` work for me and allow for different top-level names with or without \"dotted\" sub-package name usage. Not sure what you're missing there.",
            "created_at": "2020-03-20T13:22:27Z",
            "html_url": "https://github.com/cython/cython/issues/3432#issuecomment-601697772",
            "id": 601697772,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3432",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTY5Nzc3Mg==",
            "updated_at": "2020-03-20T13:22:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/601697772",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "It probably says more about my package structuring and coding style than anything, but I don't like `from pkg import subpkg` because it doesn't let me explicitly specify which modules to make available from `subpkg`, especially if they're not in `__init__.py`. (`from pkg.subpkg import module_a, module_b` *does* allow explicitly specifying needed modules, but not in tandem with keeping the names qualified. It can be used together with `from pkg import subpkg` because the imports modify the same module object(s), but that feels implicit and hacky. `import pkg.subpkg.module_a, pkg.subpkg.module_b` allows explicitly specifying the required modules and keeping their names qualified, but only fully and not partially. Hence, in order to explicitly specify which modules are needed while keeping only a partial level of \"dots\", I settled on doing explicit, fully qualified `import`s followed by reassignment of the intended top-level name name.)\r\n\r\nIn any case, I do agree that this isn't actually an issue with Cython (but I was also wondering whether aliasing might be a generally useful feature when I submitted this).",
            "created_at": "2020-03-20T21:52:56Z",
            "html_url": "https://github.com/cython/cython/issues/3432#issuecomment-601925956",
            "id": 601925956,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3432",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTkyNTk1Ng==",
            "updated_at": "2020-03-20T22:03:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/601925956",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3432/comments",
    "created_at": "2020-03-15T08:41:31Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-15T13:04:05Z",
            "event": "labeled",
            "id": 3130496648,
            "label": {
                "color": "444444",
                "name": "R: wontfix"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMzA0OTY2NDg=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3130496648"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-15T13:04:12Z",
            "event": "closed",
            "id": 3130496754,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzEzMDQ5Njc1NA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3130496754"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3432/events",
    "html_url": "https://github.com/cython/cython/issues/3432",
    "id": 581584180,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557400,
            "name": "R: wontfix",
            "node_id": "MDU6TGFiZWw0MjU1NTc0MDA=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3432/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1ODE1ODQxODA=",
    "number": 3432,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Renaming/aliasing imports (or other data) in .pxd files?",
    "updated_at": "2020-03-20T22:03:04Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3432",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
        "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
        "followers_url": "https://api.github.com/users/will-ca/followers",
        "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
        "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/will-ca",
        "id": 37680486,
        "login": "will-ca",
        "node_id": "MDQ6VXNlcjM3NjgwNDg2",
        "organizations_url": "https://api.github.com/users/will-ca/orgs",
        "received_events_url": "https://api.github.com/users/will-ca/received_events",
        "repos_url": "https://api.github.com/users/will-ca/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/will-ca"
    }
}