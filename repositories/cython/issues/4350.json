{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\nThe inheritance with/from extension types and python classes as well as pickling seems broken.\r\n\r\n### To Reproduce\r\nCode to reproduce the behaviour:\r\n```cython\r\nimport cython\r\n# next cell\r\n# %%cython -3\r\ncimport cython\r\n\r\ncdef class Base_A():\r\n    cdef double _a(self, double x):\r\n        print(\"Base_A_.a()\")\r\n        return -99\r\n\r\n    def a(self, x):\r\n        print(\"Base_A.a()\")\r\n        return self._a(x)\r\n\r\ncdef class A(Base_A):\r\n    cdef double _a(self, double x):\r\n        print(\"A._a()\")\r\n        return x / 2.\r\n    \r\n    def a(self, x):\r\n        print(\"A.a()\")\r\n        return self._a(x)\r\n    \r\nclass Base_C(Base_A):        \r\n    def c(self, x):\r\n        print(\"Base_C.c()\")\r\n        return self.a(x)\r\n\r\nclass C(Base_C, A):\r\n    pass\r\n```\r\nThen\r\n```python\r\nC().c(1)\r\n```\r\nproduces\r\n```\r\nBase_C.c()\r\nA.a()\r\nBase_A_.a()\r\n-99.0\r\n```\r\nAnd\r\n```python\r\nimport pickle\r\n\r\npickled_C = pickle.dumps(C())\r\npickle.loads(pickled_C)\r\n```\r\nproduces\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n/var/folders/1c/ynyjslg54654183kt57yfsdw0000gn/T/ipykernel_43218/2044510036.py in <module>\r\n      2 \r\n      3 pickled_C = pickle.dumps(C())\r\n----> 4 pickle.loads(pickled_C)\r\n\r\n~/.ipython/cython/_cython_magic_[...].cpython-37m-darwin.so in _cython_magic_[...].__pyx_unpickle_A()\r\n\r\nTypeError: _cython_magic_[...].A.__new__(C) is not safe, use C.__new__()\r\n```\r\n\r\n### Expected behavior\r\nA pure python implementation\r\n```python\r\n# Pure Python implementation\r\nclass Base_A():\r\n    def _a(self, x):\r\n        print(\"Base_A_.a()\")\r\n        return -99\r\n\r\n    def a(self, x):\r\n        print(\"Base_A.a()\")\r\n        return self._a(x)\r\n\r\nclass A(Base_A):\r\n    def _a(self, x):\r\n        print(\"A._a()\")\r\n        return x / 2.\r\n    \r\n    def a(self, x):\r\n        print(\"A.a()\")\r\n        return self._a(x)\r\n    \r\nclass Base_C(Base_A):        \r\n    def c(self, x):\r\n        print(\"Base_C.c()\")\r\n        return self.a(x)\r\n\r\nclass C(Base_C, A):\r\n    pass\r\n```\r\nwith\r\n```python\r\nC().c(1)\r\n```\r\nproduces\r\n```\r\nBase_C.c()\r\nA.a()\r\nA._a()\r\n\r\n0.5\r\n```\r\nand pickle does not throw an error.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - Python version: 3.7\r\n - Cython version: 0.29.21\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "```\r\nclass C(Base_C, A):\r\n    pass\r\n```\r\n\r\nPython allows this because it can be made to work from an inheritance point of view because `A` and `Base_A` have compatible layouts. If you change `Base_C` and `C` to `cdef class` then Cython disallows it with `Only one extension type base class allowed`. That suggests to me that we aren't expecting this inheritance to happen.\r\n\r\nUses a \"vtab\" of function pointers to call the correct `cdef` function in derived classes. My guess is that the second `Base_A` ends up overwriting the \"vtab\" that was set up by `A`. If I add a `__cinit__` in the Cython classes I can see that `A.__cinit__` is not being called.\r\n\r\nI'm not quite sure what's happening for pickle, but I'd guess it's also to do with Cython not expecting multiple inheritance of cdef classes.\r\n\r\n----------------------------------------------------------\r\n\r\nI'm not quite sure what the solution is at this stage, but I recommend not inheriting from multiple cdef classes!",
            "created_at": "2021-08-28T08:50:06Z",
            "html_url": "https://github.com/cython/cython/issues/4350#issuecomment-907595758",
            "id": 907595758,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4350",
            "node_id": "IC_kwDOABDGAc42GM_u",
            "performed_via_github_app": null,
            "updated_at": "2021-08-28T08:50:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/907595758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Similarly `A.__dealloc__` is never called either",
            "created_at": "2021-08-28T08:53:49Z",
            "html_url": "https://github.com/cython/cython/issues/4350#issuecomment-907596215",
            "id": 907596215,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4350",
            "node_id": "IC_kwDOABDGAc42GNG3",
            "performed_via_github_app": null,
            "updated_at": "2021-08-28T08:53:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/907596215",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I looks like `tp_new` is always inherited from whatever is picked as `tp_base` (https://github.com/python/cpython/blob/f9242d50b18572ef0d584a1c815ed08d1a38e4f4/Objects/typeobject.c#L6303):\r\n\r\n```\r\ntype->tp_new = base->tp_new;\r\n```\r\n\r\nand Python choses `tp_base`.\r\n\r\nThat doesn't leave much scope for Cython to override what's going on here. The best we can do is probably some validation to raise an error given this pattern of inheritance.",
            "created_at": "2021-08-28T09:35:48Z",
            "html_url": "https://github.com/cython/cython/issues/4350#issuecomment-907600964",
            "id": 907600964,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4350",
            "node_id": "IC_kwDOABDGAc42GORE",
            "performed_via_github_app": null,
            "updated_at": "2021-08-28T09:35:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/907600964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Final comment (for now):\r\n\r\n> The best we can do is probably some validation to raise an error given this pattern of inheritance.\r\n\r\nI think this could either be done by:\r\n1. giving all cdef classes a custom metaclass that does this validation in `__call__` - this should probably work on all supported Python versions, but is fairly intrusive and risks breaking user code that inherits from a cdef class and defines a metaclass (I thinK)\r\n2. Checking in `__init_subclass__` (which we define for each cdef class). This would only work in Python 3.6+ (but that's OK because it's a \"nice to have\" sanity check. It'd possibly prevent users from defining their own `__init_subclass__` on a cdef class.\r\n3. Check in `__new__`, which would be the wrong place to check because it'd happen each time an object is created rather than each time a class is created. But it'd work everywhere",
            "created_at": "2021-08-28T09:50:50Z",
            "html_url": "https://github.com/cython/cython/issues/4350#issuecomment-907602573",
            "id": 907602573,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4350",
            "node_id": "IC_kwDOABDGAc42GOqN",
            "performed_via_github_app": null,
            "updated_at": "2021-08-28T09:50:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/907602573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "https://github.com/scikit-learn/scikit-learn/pull/20567#issuecomment-907289384\r\n\r\n@lorentzenchr \r\n\r\n> Quote: \"I'm not quite sure what the solution is at this stage, but I recommend not inheriting from multiple cdef classes!\"\r\n> This means the class inheritance design has to be reworked!\r\n\r\nYour example works correctly (i.e. all the correct `__cinit__` and `__dealloc__` functions are called, the right cdef function is called, and pickle works) with\r\n\r\n```\r\nclass C(A, Base_C):\r\n   pass\r\n```\r\n\r\nAlthough obviously that changes your `__mro__` so it may have other consequences for real-world examples. The rule to follow is that the most derived Cython class should end up in `C.__base__`. I still don't \"recommend\" it, but I think it'll work reliably if you can follow that. Hopefully that helps the problem you're really trying to solve.\r\n\r\n(I'm not sure whether this comment is most useful here or on the scipy issue...)",
            "created_at": "2021-08-28T10:05:32Z",
            "html_url": "https://github.com/cython/cython/issues/4350#issuecomment-907604319",
            "id": 907604319,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4350",
            "node_id": "IC_kwDOABDGAc42GPFf",
            "performed_via_github_app": null,
            "updated_at": "2021-08-28T10:09:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/907604319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "@da-woods Thank you so much for investigating this so quickly and even recommending solutions for my original problem in scikit-learn!",
            "created_at": "2021-08-28T10:22:02Z",
            "html_url": "https://github.com/cython/cython/issues/4350#issuecomment-907606055",
            "id": 907606055,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4350",
            "node_id": "IC_kwDOABDGAc42GPgn",
            "performed_via_github_app": null,
            "updated_at": "2021-08-28T10:22:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/907606055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15324633?v=4",
                "events_url": "https://api.github.com/users/lorentzenchr/events{/privacy}",
                "followers_url": "https://api.github.com/users/lorentzenchr/followers",
                "following_url": "https://api.github.com/users/lorentzenchr/following{/other_user}",
                "gists_url": "https://api.github.com/users/lorentzenchr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lorentzenchr",
                "id": 15324633,
                "login": "lorentzenchr",
                "node_id": "MDQ6VXNlcjE1MzI0NjMz",
                "organizations_url": "https://api.github.com/users/lorentzenchr/orgs",
                "received_events_url": "https://api.github.com/users/lorentzenchr/received_events",
                "repos_url": "https://api.github.com/users/lorentzenchr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lorentzenchr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lorentzenchr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lorentzenchr"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4350/comments",
    "created_at": "2021-08-28T07:57:33Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15324633?v=4",
                "events_url": "https://api.github.com/users/lorentzenchr/events{/privacy}",
                "followers_url": "https://api.github.com/users/lorentzenchr/followers",
                "following_url": "https://api.github.com/users/lorentzenchr/following{/other_user}",
                "gists_url": "https://api.github.com/users/lorentzenchr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lorentzenchr",
                "id": 15324633,
                "login": "lorentzenchr",
                "node_id": "MDQ6VXNlcjE1MzI0NjMz",
                "organizations_url": "https://api.github.com/users/lorentzenchr/orgs",
                "received_events_url": "https://api.github.com/users/lorentzenchr/received_events",
                "repos_url": "https://api.github.com/users/lorentzenchr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lorentzenchr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lorentzenchr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lorentzenchr"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-08-28T10:05:32Z",
            "event": "mentioned",
            "id": 5221567518,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTIyMTU2NzUxOA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5221567518"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15324633?v=4",
                "events_url": "https://api.github.com/users/lorentzenchr/events{/privacy}",
                "followers_url": "https://api.github.com/users/lorentzenchr/followers",
                "following_url": "https://api.github.com/users/lorentzenchr/following{/other_user}",
                "gists_url": "https://api.github.com/users/lorentzenchr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lorentzenchr",
                "id": 15324633,
                "login": "lorentzenchr",
                "node_id": "MDQ6VXNlcjE1MzI0NjMz",
                "organizations_url": "https://api.github.com/users/lorentzenchr/orgs",
                "received_events_url": "https://api.github.com/users/lorentzenchr/received_events",
                "repos_url": "https://api.github.com/users/lorentzenchr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lorentzenchr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lorentzenchr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lorentzenchr"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-08-28T10:05:32Z",
            "event": "subscribed",
            "id": 5221567519,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUyMjE1Njc1MTk=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5221567519"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-08-28T10:22:02Z",
            "event": "mentioned",
            "id": 5221580362,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTIyMTU4MDM2Mg==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5221580362"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-08-28T10:22:02Z",
            "event": "subscribed",
            "id": 5221580365,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUyMjE1ODAzNjU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5221580365"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "97f81fc0deb174edb07776da1a3ad096be6e7cc8",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/97f81fc0deb174edb07776da1a3ad096be6e7cc8",
            "created_at": "2021-08-28T11:31:01Z",
            "event": "referenced",
            "id": 5221633606,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUyMjE2MzM2MDY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5221633606"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4350/events",
    "html_url": "https://github.com/cython/cython/issues/4350",
    "id": 981768164,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4350/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5ODE3NjgxNjQ=",
    "number": 4350,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] Extention type inheritance and pickle",
    "updated_at": "2021-08-28T10:22:02Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4350",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15324633?v=4",
        "events_url": "https://api.github.com/users/lorentzenchr/events{/privacy}",
        "followers_url": "https://api.github.com/users/lorentzenchr/followers",
        "following_url": "https://api.github.com/users/lorentzenchr/following{/other_user}",
        "gists_url": "https://api.github.com/users/lorentzenchr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lorentzenchr",
        "id": 15324633,
        "login": "lorentzenchr",
        "node_id": "MDQ6VXNlcjE1MzI0NjMz",
        "organizations_url": "https://api.github.com/users/lorentzenchr/orgs",
        "received_events_url": "https://api.github.com/users/lorentzenchr/received_events",
        "repos_url": "https://api.github.com/users/lorentzenchr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lorentzenchr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lorentzenchr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lorentzenchr"
    }
}