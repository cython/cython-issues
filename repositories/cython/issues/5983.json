{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\r\n\r\nWhen calling a function accepting a fused type as an argument, Cython recognizes the C type of the object and matches it to the appropriate parameter types for the fused type if that constructor is called as part of the function call. However, it does not do so if the object is constructed with `__new__`:\r\n\r\n```\r\n------------------------------------------------------------\r\n...\r\n    pass\r\n\r\n\r\ndef g():\r\n    # Fails, doesn't recognize __new__ output as the C type\r\n    f(Foo(), Foo.__new__(Foo))\r\n     ^\r\n------------------------------------------------------------\r\n```\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n```cython\r\n\r\ncdef class Foo:\r\n    pass\r\n\r\nctypedef fused fused1:\r\n    Foo\r\n    int\r\n\r\ncdef void f(Foo foo, fused1 baz):\r\n    pass\r\n\r\ndef g():\r\n    # Fails, doesn't recognize __new__ output as the C type\r\n    f(Foo(), Foo.__new__(Foo))\r\n\r\ndef h():\r\n    # Succeeds\r\n    cdef Foo b = Foo.__new__(Foo)\r\n    f(Foo(), b)\r\n\r\ndef j():\r\n    # Also succeeds\r\n    f(Foo(), Foo())\r\n```\r\n\r\n\r\n### Expected behaviour\r\n\r\nThe function `g` should also successfully compile.\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.11.4\r\n\r\n### Cython version\r\n\r\n3.0.8\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This should probably work - I don't think it's possible to do anything clever with `cdef class` and `__new__` to return unexpected types.\r\n\r\nAlthough we'd have to break it in future if we changed that",
            "created_at": "2024-02-08T06:08:10Z",
            "html_url": "https://github.com/cython/cython/issues/5983#issuecomment-1933419156",
            "id": 1933419156,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5983",
            "node_id": "IC_kwDOABDGAc5zPaKU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1933419156/reactions"
            },
            "updated_at": "2024-02-08T06:08:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1933419156",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Gotcha yeah I didn't consider that it might one day be supported to override `__new__` for extension types. AFAIK that's explicitly disallowed now.",
            "created_at": "2024-02-09T00:37:20Z",
            "html_url": "https://github.com/cython/cython/issues/5983#issuecomment-1935149186",
            "id": 1935149186,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5983",
            "node_id": "IC_kwDOABDGAc5zWAiC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1935149186/reactions"
            },
            "updated_at": "2024-02-09T00:37:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1935149186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5983/comments",
    "created_at": "2024-02-07T23:44:12Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5983/events",
    "html_url": "https://github.com/cython/cython/issues/5983",
    "id": 2124099807,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5983/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5-mzDf",
    "number": 5983,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5983/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5983/timeline",
    "title": "[BUG] Fused type inference does not understand objects created with __new__",
    "updated_at": "2024-02-09T00:37:21Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5983",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vyasr",
        "id": 1538165,
        "login": "vyasr",
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vyasr"
    }
}