{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "When working with C and C++ extensions, is common to have functions that must run without the GIL held (for instance, to make sure there are no deadlocks that involve other locks or native threads). This can be easily achieved doing:\r\n\r\n```\r\ncdef void my_func_wrapper(...):\r\n   with nogil:\r\n          my_func(...)\r\n```\r\n\r\nThe problem is that when exposing a large library or multiple methods and classes that fall in this situation, you end with tons of tons of wrappers like the one before, which feels very verbose and unnecessary\r\n\r\nCython already offers a solution for the opposite problem (taking the GIL always when the function is called) using the `with gil` declaration:\r\n\r\n```\r\ncdef void my_func_wrapper(...) with gil\r\n```\r\n\r\nbut there is no obvious way that I know to achieve the contrary (the original case I am discussing to drop always the GIL).\r\n\r\nFor this reason, I propose to add an analogous `with nogil` qualifier to function declarations:\r\n\r\n```\r\ncdef void my_func_wrapper(...) with nogil\r\n```\r\n\r\nthat basically generates the following code:\r\n\r\n```\r\nstatic double __pyx_f_3fib_my_func(void) {\r\n  #ifdef WITH_THREAD\r\n  PyThreadState *_save;\r\n  Py_UNBLOCK_THREADS\r\n  __Pyx_FastGIL_Remember();\r\n  #endif\r\n\r\n// FUNCTION CODE HERE //\r\n\r\n  /* function exit code */\r\n  #ifdef WITH_THREAD\r\n  __Pyx_FastGIL_Forget();\r\n  Py_BLOCK_THREADS\r\n  #endif\r\n}\r\n\r\n```\r\n\r\nI have a draft PR  if everyone agrees that this is a desired feature to add.\r\n\r\nAlso, if someone thinks the feature is good but the naming may confuse people as \"nogil\" already exists, we could explore other possibilities like:\r\n\r\n* Adding instead a decorator like `@cython.with_no_gil` or similar.\r\n* Some other keyword like `nevergil` instead.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "`nevergil` sounds great!",
            "created_at": "2020-03-17T16:20:11Z",
            "html_url": "https://github.com/cython/cython/issues/3443#issuecomment-600162620",
            "id": 600162620,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDE2MjYyMA==",
            "updated_at": "2020-03-17T16:20:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/600162620",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm ok with adding this, but compared to the with-gil function modifier, the latter saves both a modifier (nogil) and an indented block (with gil), whereas your proposal really only seems to save one indentation (with nogil).\n\nActually, the with-gil modifier was there before the context manager, simply because it was much easier to implement at the time. These days, we'd probably need a bit of a discussion to add it as a feature, if it wasn't there already.\n\nIIUC, however, your proposal also allows calling the function directly regardless of whether the GIL is held or not, right? That makes it sound appealing to me, and supports a real use case for it to be a modifier.\n",
            "created_at": "2020-03-18T09:01:02Z",
            "html_url": "https://github.com/cython/cython/issues/3443#issuecomment-600502197",
            "id": 600502197,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDUwMjE5Nw==",
            "updated_at": "2020-03-18T09:01:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/600502197",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "As I understand, the following symmetric qualifier system is proposed:\r\n* `gil`: OK to be called with GIL (default, but such keyword is not allowed)\r\n* `nogil`: OK to be called without GIL (already exist)\r\n* `with gil`: must be called with GIL (by acquiring it) (also already exist)\r\n* `with nogil`: must be called without GIL (by releasing it) (to be implemented)\r\n\r\nWith version 3.0 coming in a *can't seem to let you go, can't seem to hold you close* future, I suggest a discussion on those keywords, which does not very welly reflect the actual meaning of the modifier.",
            "created_at": "2020-03-18T09:45:33Z",
            "html_url": "https://github.com/cython/cython/issues/3443#issuecomment-600521996",
            "id": 600521996,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDUyMTk5Ng==",
            "updated_at": "2020-03-18T09:45:33Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/600521996",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3443/comments",
    "created_at": "2020-03-17T14:26:47Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3443/events",
    "html_url": "https://github.com/cython/cython/issues/3443",
    "id": 583052784,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3443/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1ODMwNTI3ODQ=",
    "number": 3443,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Add a way to define functions that always run without the GIL",
    "updated_at": "2020-03-18T09:45:33Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3443",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/11718525?v=4",
        "events_url": "https://api.github.com/users/pablogsal/events{/privacy}",
        "followers_url": "https://api.github.com/users/pablogsal/followers",
        "following_url": "https://api.github.com/users/pablogsal/following{/other_user}",
        "gists_url": "https://api.github.com/users/pablogsal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pablogsal",
        "id": 11718525,
        "login": "pablogsal",
        "node_id": "MDQ6VXNlcjExNzE4NTI1",
        "organizations_url": "https://api.github.com/users/pablogsal/orgs",
        "received_events_url": "https://api.github.com/users/pablogsal/received_events",
        "repos_url": "https://api.github.com/users/pablogsal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pablogsal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pablogsal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pablogsal"
    }
}