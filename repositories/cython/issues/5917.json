{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Is your feature request related to a problem? Please describe.\n\nI have a handful of cython functions that take an ndarray where I know the dtype but not the ndim.  ATM I cannot declare the dtype on these bc `ndarray[dtype_t]` assumes ndim=1.  The request here is for either a) `ndarray[dtype_t]` to _not_ assume ndim=1 or b) the ability to declare something like `ndarray[dtype_t, ndim=\"unrestricted\"]`\n\n### Describe the solution you'd like.\n\n_No response_\n\n### Describe alternatives you've considered.\n\n_No response_\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Do you need to declare the dtype at all? I.e. do you need the buffer feature here? What do you do with a buffer of unknown dimensions? Could you provide an actual example?\n",
            "created_at": "2023-12-19T06:00:45Z",
            "html_url": "https://github.com/cython/cython/issues/5917#issuecomment-1862172817",
            "id": 1862172817,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5917",
            "node_id": "IC_kwDOABDGAc5u_oCR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1862172817/reactions"
            },
            "updated_at": "2023-12-19T06:00:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1862172817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Do you need to declare the dtype at all? \r\n\r\nGood question!  In the affected cases we generally aren't doing `item = values[i]` but instead using the numpy iterator mechanics:\r\n\r\n```\r\ndef is_date_array_normalized(ndarray stamps, tzinfo tz, NPY_DATETIMEUNIT reso) -> bool:\r\n    cdef:\r\n        int64_t utc_val, local_val\r\n        Py_ssize_t i, n = stamps.size\r\n        cnp.flatiter it = cnp.PyArray_IterNew(stamps)\r\n    \r\n    for i in range(n):\r\n        # Analogous to: utc_val = stamps[i]\r\n        utc_val = cnp.PyArray_GETITEM(stamps, cnp.PyArray_ITER_DATA(it))\r\n        cnp.PyArray_ITER_NEXT(it)\r\n\r\n        [do stuff with utc_val]\r\n```\r\n\r\nI imagine that the assignment to `utc_val` entails a type check that might be avoided if stamps.dtype were declared.",
            "created_at": "2023-12-19T15:57:50Z",
            "html_url": "https://github.com/cython/cython/issues/5917#issuecomment-1863033550",
            "id": 1863033550,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5917",
            "node_id": "IC_kwDOABDGAc5vC6LO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1863033550/reactions"
            },
            "updated_at": "2023-12-19T15:57:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1863033550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A few points (not in any real order):\r\n\r\n* If we did something like this then we'd probably do it for the newer memoryview syntax.\r\n* `utc_val = cnp.PyArray_GETITEM(stamps, cnp.PyArray_ITER_DATA(it))` definitely involves a conversion too/from Python objects (so isn't great). I think `utc_val = (<int64_t*>(cnp.PyArray_ITER_DATA(it)))[0]` should give you direct access to the C data.\r\n* If the array isn't contiguous then I'd imagine the iterator interface might be the better way to express it - the full calculation of array index->data location probably isn't that simple for an arbitrary shaped array, but most of the time the iterator is just adding a single constant to the pointer. It's fairly likely this is easier for a compiler to see through correctly.\r\n* Some (but not all) use-cases for \"iterate over every element in the array once\" could probably be expressed using `@cython.ufunc`. Although that does force you to rely on the quality of Numpy's implementation for that.\r\n* Is there a good solution to express \"index as flat array\" vs \"index normally with one argument\"?\r\n* I've also used fused functions for this type of task in the past (where the fused type is `int64_t[:, :, :,], int64_t[:, :], int64_t[:]` etc) so every time you iterate a dimension you drop to the next layer of fused function. That can be fairly awkward though, so may not be the best option.",
            "created_at": "2023-12-21T08:40:12Z",
            "html_url": "https://github.com/cython/cython/issues/5917#issuecomment-1865869138",
            "id": 1865869138,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5917",
            "node_id": "IC_kwDOABDGAc5vNudS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1865869138/reactions"
            },
            "updated_at": "2023-12-21T08:40:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1865869138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5917/comments",
    "created_at": "2023-12-18T22:44:40Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5917/events",
    "html_url": "https://github.com/cython/cython/issues/5917",
    "id": 2047585694,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5917/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc56C62e",
    "number": 5917,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5917/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5917/timeline",
    "title": "[ENH]: ndarray[dtype_t, ndim=unrestricted]",
    "updated_at": "2023-12-21T08:40:13Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5917",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8078968?v=4",
        "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
        "followers_url": "https://api.github.com/users/jbrockmendel/followers",
        "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jbrockmendel",
        "id": 8078968,
        "login": "jbrockmendel",
        "node_id": "MDQ6VXNlcjgwNzg5Njg=",
        "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
        "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
        "repos_url": "https://api.github.com/users/jbrockmendel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jbrockmendel"
    }
}