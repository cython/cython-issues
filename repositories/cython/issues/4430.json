{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen cythonizing programs for pure and cdef mode that define `cdef` / `cpdef` (`cfunc` / `ccall`) functions with memoryview as an argument the c output differs.\r\n\r\n**To Reproduce**\r\n\r\npy:\r\n```python\r\nimport cython\r\nfrom cython.cimports.cpython import array\r\nimport array\r\n\r\n@cython.cfunc\r\ndef no_overhead(ca: cython.int[:]) -> cython.void:\r\n    ca[0]\r\n\r\nno_overhead(array.array('i', [1, 2, 3]))\r\n```\r\n\r\npyx:\r\n```cython\r\n\r\nfrom cpython cimport array\r\nimport array\r\n\r\n\r\ncdef void no_overhead(int[:] ca):\r\n    ca[0]\r\n\r\nno_overhead(array.array('i', [1, 2, 3]))\r\n```\r\n\r\nIn the case of py function definition contains `__Pyx_AddTraceback` and for pyx we have `__Pyx_WriteUnraisable`\r\n<!-- ![image](https://user-images.githubusercontent.com/52697657/139236548-54c47dee-6cae-42d1-b770-e222d6c58642.png) -->\r\n<!-- ![image](https://user-images.githubusercontent.com/52697657/139236775-c520d7e9-6771-4da0-84ce-bfa667556a44.png) -->\r\n\r\n```diff\r\ncdef void no_overhead(int[:] ca):\r\n\r\n    static void __pyx_f_4tttt_no_overhead(__Pyx_memviewslice __pyx_v_ca) {\r\n    __Pyx_RefNannyDeclarations\r\n    __Pyx_RefNannySetupContext(\"no_overhead\", 0);\r\n  /* â€¦ */\r\n    /* function exit code */\r\n    goto __pyx_L0;\r\n    __pyx_L1_error:;\r\n-   __Pyx_AddTraceback(\"tttt.no_overhead\", __pyx_clineno, __pyx_lineno, __pyx_filename);\r\n+   __Pyx_WriteUnraisable(\"tttt.no_overhead\", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);\r\n    __pyx_L0:;\r\n    __Pyx_RefNannyFinishContext();\r\n  }\r\n```\r\n\r\nas it seemed the direct consequence of this is difference in the function calls\r\n```diff\r\nno_overhead(array.array('i', [1, 2, 3]))\r\n\r\n    __pyx_t_1 = PyList_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)\r\n    __Pyx_GOTREF(__pyx_t_1);\r\n    __Pyx_INCREF(__pyx_int_1);\r\n    __Pyx_GIVEREF(__pyx_int_1);\r\n    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_int_1);\r\n    __Pyx_INCREF(__pyx_int_2);\r\n    __Pyx_GIVEREF(__pyx_int_2);\r\n    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_int_2);\r\n    __Pyx_INCREF(__pyx_int_3);\r\n    __Pyx_GIVEREF(__pyx_int_3);\r\n    PyList_SET_ITEM(__pyx_t_1, 2, __pyx_int_3);\r\n    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)\r\n    __Pyx_GOTREF(__pyx_t_2);\r\n    __Pyx_INCREF(__pyx_n_u_i);\r\n    __Pyx_GIVEREF(__pyx_n_u_i);\r\n    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_n_u_i);\r\n    __Pyx_GIVEREF(__pyx_t_1);\r\n    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);\r\n    __pyx_t_1 = 0;\r\n    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cpython_5array_array), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)\r\n    __Pyx_GOTREF(__pyx_t_1);\r\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_ds_int(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 9, __pyx_L1_error)\r\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\r\n-   __pyx_f_4tttt_no_overhead(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 9, __pyx_L1_error)\r\n+   __pyx_f_4tttt_no_overhead(__pyx_t_3);\r\n    __PYX_XCLEAR_MEMVIEW(&__pyx_t_3, 1);\r\n    __pyx_t_3.memview = NULL; __pyx_t_3.data = NULL;\r\n```\r\n\r\nbut actually if we will define functions like this:\r\n```python\r\n@cython.cfunc\r\ndef no_overhead(ca: cython.int[:]) -> cython.void:\r\n    pass\r\n```\r\n\r\n```cython\r\ncdef void no_overhead(int[:] ca):\r\n    pass\r\n```\r\n\r\nthen we will be able to see that cython picks it up and changes only function call\r\n\r\n```diff\r\nno_overhead(array.array('i', [1, 2, 3]))\r\n\r\n    __pyx_t_1 = PyList_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 9, __pyx_L1_error)\r\n    __Pyx_GOTREF(__pyx_t_1);\r\n    __Pyx_INCREF(__pyx_int_1);\r\n    __Pyx_GIVEREF(__pyx_int_1);\r\n    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_int_1);\r\n    __Pyx_INCREF(__pyx_int_2);\r\n    __Pyx_GIVEREF(__pyx_int_2);\r\n    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_int_2);\r\n    __Pyx_INCREF(__pyx_int_3);\r\n    __Pyx_GIVEREF(__pyx_int_3);\r\n    PyList_SET_ITEM(__pyx_t_1, 2, __pyx_int_3);\r\n    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 9, __pyx_L1_error)\r\n    __Pyx_GOTREF(__pyx_t_2);\r\n    __Pyx_INCREF(__pyx_n_u_i);\r\n    __Pyx_GIVEREF(__pyx_n_u_i);\r\n    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_n_u_i);\r\n    __Pyx_GIVEREF(__pyx_t_1);\r\n    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);\r\n    __pyx_t_1 = 0;\r\n    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cpython_5array_array), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 9, __pyx_L1_error)\r\n    __Pyx_GOTREF(__pyx_t_1);\r\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_ds_int(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(3, 9, __pyx_L1_error)\r\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\r\n-   __pyx_f_4tttt_no_overhead(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(3, 9, __pyx_L1_error)\r\n+   __pyx_f_4tttt_no_overhead(__pyx_t_3);\r\n    __PYX_XCLEAR_MEMVIEW(&__pyx_t_3, 1);\r\n    __pyx_t_3.memview = NULL; __pyx_t_3.data = NULL;\r\n```\r\n\r\n**Expected behavior**\r\nThat those pieces of code will be cythonized to one version of c code, it's not fine to have such different behavior \r\n\r\n**Environment**\r\n - OS: Windows\r\n - Python version 3.9.0\r\n - Cython version 3.0.0a8\r\n",
    "closed_at": "2021-10-28T13:26:03Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Note that these two are not equivalent:\r\n```cython\r\n@cython.cfunc\r\ndef no_overhead(ca: cython.int[:]) -> cython.void:\r\n    ca[0]\r\n\r\ncdef void no_overhead(int[:] ca):\r\n    ca[0]\r\n```\r\nThe corresponding Cython syntax version is\r\n```cython\r\ncdef void no_overhead(int[:] ca) except ?:\r\n    ca[0]\r\n```\r\nThis is a duplicate of #4280.",
            "created_at": "2021-10-28T13:26:03Z",
            "html_url": "https://github.com/cython/cython/issues/4430#issuecomment-953843549",
            "id": 953843549,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4430",
            "node_id": "IC_kwDOABDGAc442n9d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/953843549/reactions"
            },
            "updated_at": "2021-10-28T13:26:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/953843549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4430/comments",
    "created_at": "2021-10-28T10:45:31Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T10:46:55Z",
            "event": "renamed",
            "id": 5533226756,
            "node_id": "RTE_lADOABDGAc495DT4zwAAAAFJzlcE",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] ",
                "to": "[BUG] Inconsistent behavior when compiling functions with memoryview as argument"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/5533226756"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T10:47:28Z",
            "event": "renamed",
            "id": 5533229589,
            "node_id": "RTE_lADOABDGAc495DT4zwAAAAFJzmIV",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] Inconsistent behavior when compiling functions with memoryview as argument",
                "to": "[BUG] Inconsistent behavior when compiling cdef and pure functions with memoryview as argument"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/5533229589"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T10:47:40Z",
            "event": "renamed",
            "id": 5533230626,
            "node_id": "RTE_lADOABDGAc495DT4zwAAAAFJzmYi",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] Inconsistent behavior when compiling cdef and pure functions with memoryview as argument",
                "to": "[BUG] Inconsistent behavior when compiling cdef and pure functions with memoryview as an argument"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/5533230626"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T13:26:03Z",
            "event": "closed",
            "id": 5534132006,
            "node_id": "CE_lADOABDGAc495DT4zwAAAAFJ3Ccm",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5534132006"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T13:26:15Z",
            "event": "labeled",
            "id": 5534133426,
            "label": {
                "color": "444444",
                "name": "R: duplicate"
            },
            "node_id": "LE_lADOABDGAc495DT4zwAAAAFJ3Cyy",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5534133426"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4430/events",
    "html_url": "https://github.com/cython/cython/issues/4430",
    "id": 1038365944,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556894,
            "name": "R: duplicate",
            "node_id": "MDU6TGFiZWw0MjU1NTY4OTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4430/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc495DT4",
    "number": 4430,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4430/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4430/timeline",
    "title": "[BUG] Inconsistent behavior when compiling cdef and pure functions with memoryview as an argument",
    "updated_at": "2021-10-28T13:26:15Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4430",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
        "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
        "followers_url": "https://api.github.com/users/0dminnimda/followers",
        "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
        "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/0dminnimda",
        "id": 52697657,
        "login": "0dminnimda",
        "node_id": "MDQ6VXNlcjUyNjk3NjU3",
        "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
        "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
        "repos_url": "https://api.github.com/users/0dminnimda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/0dminnimda"
    }
}