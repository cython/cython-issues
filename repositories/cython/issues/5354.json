{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\n```\r\n$ git describe\r\n3.0.0b2-26-g2ee78381c\r\n```\r\n\r\nThe following lines:\r\n\r\nhttps://github.com/PyWavelets/pywt/blob/7abdc623e5ba705d6ae61b58c19b45bdcadf1c67/pywt/_extensions/_pywt.pyx#L400-L402\r\n\r\n```cython\r\n            if not (1 == dec_lo.ndim == dec_hi.ndim ==\r\n                         rec_lo.ndim == rec_hi.ndim):\r\n                raise ValueError(\"All filters in filter bank must be 1D.\")\r\n```\r\n\r\nfail with:\r\n\r\n```\r\n      <string>:366: UserWarning: Unrecognized setuptools command, proceeding with generating Cython sources and expanding templates\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.binomial\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.bytes\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.chisquare\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.choice\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.dirichlet\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.exponential\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.f\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.gamma\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.geometric\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.pareto\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.gumbel\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.poisson\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.negative_binomial\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.normal\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.laplace\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.logistic\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.lognormal\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.logseries\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.power\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.ranf\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.randint\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.random\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.random_integers\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.random_sample\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.rayleigh\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.sample\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.standard_exponential\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.standard_gamma\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.standard_normal\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.uniform\r\n      WARNING  Overriding pythran description with argspec information for: numpy.random.weibull\r\n      warning: pywt/_extensions/config.pxi:3:0: The 'DEF' statement is deprecated and will be removed in a future Cython version. Consider using global variables, constants, and in-place literals instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_pywt.pxd:15:0: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/config.pxi:3:0: The 'DEF' statement is deprecated and will be removed in a future Cython version. Consider using global variables, constants, and in-place literals instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/c_wt.pxd:89:4: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/config.pxi:3:0: The 'DEF' statement is deprecated and will be removed in a future Cython version. Consider using global variables, constants, and in-place literals instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_pywt.pxd:15:0: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/config.pxi:3:0: The 'DEF' statement is deprecated and will be removed in a future Cython version. Consider using global variables, constants, and in-place literals instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_dwt.pyx:60:4: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_dwt.pyx:144:4: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_dwt.pyx:223:4: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_dwt.pyx:314:4: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_dwt.pyx:389:8: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_dwt.pyx:479:8: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/config.pxi:3:0: The 'DEF' statement is deprecated and will be removed in a future Cython version. Consider using global variables, constants, and in-place literals instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/c_wt.pxd:89:4: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/config.pxi:3:0: The 'DEF' statement is deprecated and will be removed in a future Cython version. Consider using global variables, constants, and in-place literals instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/_pywt.pxd:15:0: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/config.pxi:3:0: The 'DEF' statement is deprecated and will be removed in a future Cython version. Consider using global variables, constants, and in-place literals instead. See https://github.com/cython/cython/issues/4310\r\n      warning: pywt/_extensions/c_wt.pxd:89:4: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\n\r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n                      rec_lo = np.asarray(filters[2], dtype=np.float64)\r\n                      rec_hi = np.asarray(filters[3], dtype=np.float64)\r\n                  except TypeError:\r\n                      raise ValueError(\"Filter bank with numeric values required.\")\r\n\r\n                  if not (1 == dec_lo.ndim == dec_hi.ndim ==\r\n                                           ^\r\n      ------------------------------------------------------------\r\n\r\n      pywt/_extensions/_pywt.pyx:400:37: Compiler crash in AnalyseExpressionsTransform\r\n\r\n      ModuleNode.body = StatListNode(_pywt.pyx:6:0)\r\n      StatListNode.stats[23] = StatListNode(_pywt.pyx:331:5)\r\n      StatListNode.stats[0] = CClassDefNode(_pywt.pyx:331:5,\r\n          as_name = 'Wavelet',\r\n          class_name = 'Wavelet',\r\n          doc = '\\n    Wavelet(name, filter_bank=None) object describe properties of\\n    a wavelet identified by name.\\n\\n    In order to use a built-in wavelet the parameter name must be\\n    a valid name from the wavelist() list.\\n    To create a custom wavelet object, filter_bank parameter must\\n    be specified. It can be either a list of four filters or an object\\n    that a `filter_bank` attribute which returns a list of four\\n    filters - just like the Wavelet instance itself.\\n\\n    ',\r\n          module_name = '',\r\n          objstruct_name = 'WaveletObject',\r\n          punycode_class_name = 'Wavelet',\r\n          typeobj_name = 'WaveletType',\r\n          visibility = 'public')\r\n      CClassDefNode.body = StatListNode(_pywt.pyx:332:4)\r\n      StatListNode.stats[0] = DefNode(_pywt.pyx:345:4,\r\n          modifiers = [...]/0,\r\n          name = '__cinit__',\r\n          np_args_idx = [...]/0,\r\n          num_required_args = 1,\r\n          outer_attrs = [...]/2,\r\n          py_wrapper_required = True,\r\n          reqd_kw_flags_cname = '0',\r\n          used = True)\r\n      File 'Nodes.py', line 397, in analyse_expressions: StatListNode(_pywt.pyx:346:8)\r\n      File 'Nodes.py', line 7027, in analyse_expressions: IfStatNode(_pywt.pyx:354:8)\r\n      File 'Nodes.py', line 397, in analyse_expressions: StatListNode(_pywt.pyx:369:12)\r\n      File 'Nodes.py', line 7025, in analyse_expressions: IfStatNode(_pywt.pyx:400:12)\r\n      File 'Nodes.py', line 7071, in analyse_expressions: IfClauseNode(_pywt.pyx:400:15,\r\n          is_terminator = True)\r\n      File 'ExprNodes.py', line 657, in analyse_temp_boolean_expression: NotNode(_pywt.pyx:400:15,\r\n          infix = True,\r\n          operator = '!',\r\n          result_is_used = True,\r\n          use_managed_ref = True)\r\n      File 'ExprNodes.py', line 10703, in analyse_types: NotNode(_pywt.pyx:400:15,\r\n          infix = True,\r\n          operator = '!',\r\n          result_is_used = True,\r\n          use_managed_ref = True)\r\n      File 'ExprNodes.py', line 13404, in coerce_to_boolean: PrimaryCmpNode(_pywt.pyx:400:22,\r\n          is_temp = 1,\r\n          operator = '==',\r\n          result_is_used = True,\r\n          special_bool_cmp_function = '__Pyx_PyInt_BoolEqCObj',\r\n          use_managed_ref = True)\r\n      File 'ExprNodes.py', line 13544, in optimise_comparison: CascadedCmpNode(_pywt.pyx:400:37,\r\n          operator = '==')\r\n      File 'ExprNodes.py', line 13096, in find_special_bool_compare_function: CascadedCmpNode(_pywt.pyx:400:37,\r\n          operator = '==')\r\n\r\n      Compiler crash traceback from this point on:\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/Cython/Compiler/ExprNodes.py\", line 13096, in find_special_bool_compare_function\r\n          self.operand1,\r\n          ^^^^^^^^^^^^^\r\n      AttributeError: 'CascadedCmpNode' object has no attribute 'operand1'\r\n      Compiling pywt/_extensions/_pywt.pyx because it changed.\r\n      Compiling pywt/_extensions/_dwt.pyx because it changed.\r\n      Compiling pywt/_extensions/_swt.pyx because it changed.\r\n      Compiling pywt/_extensions/_cwt.pyx because it changed.\r\n      [1/4] Cythonizing pywt/_extensions/_cwt.pyx\r\n      [2/4] Cythonizing pywt/_extensions/_dwt.pyx\r\n      [3/4] Cythonizing pywt/_extensions/_pywt.pyx\r\n      Traceback (most recent call last):\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 353, in <module>\r\n          main()\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 335, in main\r\n          json_out['return_val'] = hook(**hook_input['kwargs'])\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 149, in prepare_metadata_for_build_wheel\r\n          return hook(metadata_directory, config_settings)\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/setuptools/build_meta.py\", line 377, in prepare_metadata_for_build_wheel\r\n          self.run_setup()\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/setuptools/build_meta.py\", line 485, in run_setup\r\n          self).run_setup(setup_script=setup_script)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/setuptools/build_meta.py\", line 335, in run_setup\r\n          exec(code, locals())\r\n        File \"<string>\", line 478, in <module>\r\n        File \"<string>\", line 470, in setup_package\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/Cython/Build/Dependencies.py\", line 1134, in cythonize\r\n          cythonize_one(*args)\r\n        File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.12/site-packages/Cython/Build/Dependencies.py\", line 1301, in cythonize_one\r\n          raise CompileError(None, pyx_file)\r\n      Cython.Compiler.Errors.CompileError: pywt/_extensions/_pywt.pyx\r\n      [end of output]\r\n\r\n```\n\n### Code to reproduce the behaviour:\n\n```cython\r\n            if not (1 == dec_lo.ndim == dec_hi.ndim ==\r\n                         rec_lo.ndim == rec_hi.ndim):\r\n                raise ValueError(\"All filters in filter bank must be 1D.\")\r\n```\r\n\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nlinux\n\n### Python version\n\nmain branch\n\n### Cython version\n\n3.0.0b2-26-g2ee78381c\n\n### Additional context\n\n_No response_",
    "closed_at": "2023-04-13T07:41:35Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "```diff\r\ndiff --git a/pywt/_extensions/_pywt.pyx b/pywt/_extensions/_pywt.pyx\r\nindex 17e22cc..cb6fd14 100644\r\n--- a/pywt/_extensions/_pywt.pyx\r\n+++ b/pywt/_extensions/_pywt.pyx\r\n@@ -397,8 +397,12 @@ cdef public class Wavelet [type WaveletType, object WaveletObject]:\r\n             except TypeError:\r\n                 raise ValueError(\"Filter bank with numeric values required.\")\r\n\r\n-            if not (1 == dec_lo.ndim == dec_hi.ndim ==\r\n-                         rec_lo.ndim == rec_hi.ndim):\r\n+            if not (\r\n+                    1 == dec_lo.ndim and\r\n+                    1 == dec_hi.ndim and\r\n+                    1 == rec_lo.ndim and\r\n+                    1 == rec_hi.ndim\r\n+            ):\r\n                 raise ValueError(\"All filters in filter bank must be 1D.\")\r\n\r\n             filter_length = len(dec_lo)\r\n```\r\n\r\nThis patch fixes pywt.  I'm happy to push this downstream to them, but I think chained `==` should work in cython?",
            "created_at": "2023-04-03T21:50:20Z",
            "html_url": "https://github.com/cython/cython/issues/5354#issuecomment-1495030321",
            "id": 1495030321,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5354",
            "node_id": "IC_kwDOABDGAc5ZHFox",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1495030321/reactions"
            },
            "updated_at": "2023-04-03T21:50:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1495030321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "My suspicion is that this can be fixed in Cython by replacing `self.operand1` with `operand1` (and no `self`).\r\n\r\nThis would certainly be intended to work ",
            "created_at": "2023-04-03T22:03:29Z",
            "html_url": "https://github.com/cython/cython/issues/5354#issuecomment-1495045427",
            "id": 1495045427,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5354",
            "node_id": "IC_kwDOABDGAc5ZHJUz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1495045427/reactions"
            },
            "updated_at": "2023-04-03T22:03:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1495045427",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5354/comments",
    "created_at": "2023-04-03T21:06:46Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-13T07:41:35Z",
            "event": "closed",
            "id": 8993697255,
            "node_id": "CE_lADOABDGAc5ig0ZozwAAAAIYEO3n",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8993697255"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-13T07:44:36Z",
            "event": "renamed",
            "id": 8993723711,
            "node_id": "RTE_lADOABDGAc5ig0ZozwAAAAIYEVU_",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] : pywavelets fails with cython master branch ",
                "to": "[BUG] cascaded comparisons fail to compile in 3.0.0b2"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/8993723711"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-13T07:44:39Z",
            "event": "milestoned",
            "id": 8993724223,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MIE_lADOABDGAc5ig0ZozwAAAAIYEVc_",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8993724223"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-13T07:44:52Z",
            "event": "labeled",
            "id": 8993726188,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc5ig0ZozwAAAAIYEV7s",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8993726188"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-13T07:44:53Z",
            "event": "labeled",
            "id": 8993726217,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "LE_lADOABDGAc5ig0ZozwAAAAIYEV8J",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8993726217"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5354/events",
    "html_url": "https://github.com/cython/cython/issues/5354",
    "id": 1652770408,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5354/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 873,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 51,
        "state": "open",
        "title": "3.0",
        "updated_at": "2023-04-13T09:32:38Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "I_kwDOABDGAc5ig0Zo",
    "number": 5354,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5354/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5354/timeline",
    "title": "[BUG] cascaded comparisons fail to compile in 3.0.0b2",
    "updated_at": "2023-04-13T07:44:53Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5354",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
        "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
        "followers_url": "https://api.github.com/users/tacaswell/followers",
        "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
        "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tacaswell",
        "id": 199813,
        "login": "tacaswell",
        "node_id": "MDQ6VXNlcjE5OTgxMw==",
        "organizations_url": "https://api.github.com/users/tacaswell/orgs",
        "received_events_url": "https://api.github.com/users/tacaswell/received_events",
        "repos_url": "https://api.github.com/users/tacaswell/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tacaswell"
    }
}