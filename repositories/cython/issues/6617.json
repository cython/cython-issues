{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nIterating over arrays using pythonic \"for ... in ...\" in Cython classes terminates only if a NULL equivalent is encountered, causing for unintended and unpredictable behavior.\n\nSuch behavior includes:\n  - Terminating the loop early if a value of 0 is encountered in the array\n  - Running over the array bounds until a value of 0 is encountered\n\n\n\n### Code to reproduce the behaviour:\n\nA test program to illustrate this:\n\n`test.pxd`\n```cython\ncdef class Test():\n    cdef unsigned char[16] initial_zero\n    cdef unsigned char[16] terminating_zero\n    cdef unsigned char[16] zero_in_between\n    cdef unsigned char[16] zero_absent\n\n    cpdef void run_me(self)\n```\n\n\n`test.pyx`\n```cython\ncdef class Test():\n\n    def __init__(self):\n        self.initial_zero[:] = [\n            0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n            0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F\n        ]\n        self.zero_in_between[:] = [\n            0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x00,\n            0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F\n        ]\n        self.terminating_zero[:] = [\n            0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n            0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x00\n        ]\n        self.zero_absent[:] = [\n            0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n            0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10\n        ]\n\n    cpdef void run_me(self):\n        cdef unsigned int intSum = 0\n        for i in self.initial_zero:\n            intSum += i\n        print(intSum)\n\n        intSum = 0\n        for i in self.zero_in_between:\n            intSum += i\n        print(intSum)\n\n        intSum = 0\n        for i in self.terminating_zero:\n            intSum += i\n        print(intSum)\n\n        intSum = 0\n        for i in self.zero_absent:\n            intSum += i\n        print(intSum)\n```\n\nScript:\n```python\nfrom test import Test\nmytest = Test()\nmytest.run_me()\n```\n\n### Expected behaviour\n\nExpected to see the following output:\n```\n120    # For initial_zero\n120    # For terminating_zero\n120    # For zero_in_between\n136    # For zero_absent\n```\n\nBut instead the output shows:\n```\n0\n28\n120\n795    # Random value >= 136 --- Can be different on different runs\n```\n\n### OS\n\nmacOS 15.1.1 (Apple M1 Pro)\nXcode 16.2 (Build version 16C5032a)\nApple clang version 16.0.0 (clang-1600.0.26.6)\n\n### Python version\n\n3.12.8, 3.13.1\n\n### Cython version\n\n3.0.11, 3.1.0a1\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't think `for ... in ...` handles arrays at all. It works in this case because it does handle C strings, and an array of `unsigned char` is convertible to a `unsigned char*`.\n\nWe could potentially improve this but `char/unsigned char` is a difficult case because it'd be changing existing behaviour with respect to arrays that have `0` part way through. I could see an argument for \"C string with a capped length\" though",
            "created_at": "2025-01-17T21:37:53Z",
            "html_url": "https://github.com/cython/cython/issues/6617#issuecomment-2599257956",
            "id": 2599257956,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6617",
            "node_id": "IC_kwDOABDGAc6a7Ydk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2599257956/reactions"
            },
            "updated_at": "2025-01-17T21:37:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2599257956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Makes sense that it is not really supported. I was just surprised to encounter this during runtime when no compile-time warnings or errors were thrown.\n\nWould it be reasonable to consider implementing some compile-time checks/errors for this instead? That way the user is forced to rewrite their array loops to be compatible with C.",
            "created_at": "2025-01-18T07:02:58Z",
            "html_url": "https://github.com/cython/cython/issues/6617#issuecomment-2599585463",
            "id": 2599585463,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6617",
            "node_id": "IC_kwDOABDGAc6a8oa3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2599585463/reactions"
            },
            "updated_at": "2025-01-18T07:02:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2599585463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16112032?v=4",
                "events_url": "https://api.github.com/users/ricky-groenewald/events{/privacy}",
                "followers_url": "https://api.github.com/users/ricky-groenewald/followers",
                "following_url": "https://api.github.com/users/ricky-groenewald/following{/other_user}",
                "gists_url": "https://api.github.com/users/ricky-groenewald/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ricky-groenewald",
                "id": 16112032,
                "login": "ricky-groenewald",
                "node_id": "MDQ6VXNlcjE2MTEyMDMy",
                "organizations_url": "https://api.github.com/users/ricky-groenewald/orgs",
                "received_events_url": "https://api.github.com/users/ricky-groenewald/received_events",
                "repos_url": "https://api.github.com/users/ricky-groenewald/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ricky-groenewald/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ricky-groenewald/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ricky-groenewald",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think you can just slice the array to provide an explicit length when iterating over it.\n",
            "created_at": "2025-01-18T14:31:33Z",
            "html_url": "https://github.com/cython/cython/issues/6617#issuecomment-2599741027",
            "id": 2599741027,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6617",
            "node_id": "IC_kwDOABDGAc6a9OZj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2599741027/reactions"
            },
            "updated_at": "2025-01-18T14:31:33Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2599741027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6617/comments",
    "created_at": "2025-01-17T02:28:23Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6617/events",
    "html_url": "https://github.com/cython/cython/issues/6617",
    "id": 2794314418,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6617/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6mjdqy",
    "number": 6617,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6617/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6617/timeline",
    "title": "[BUG] Iterating over arrays using pythonic \"for ... in ...\" in Cython classes terminates only if a NULL equivalent is encountered",
    "updated_at": "2025-01-18T14:31:34Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6617",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16112032?v=4",
        "events_url": "https://api.github.com/users/ricky-groenewald/events{/privacy}",
        "followers_url": "https://api.github.com/users/ricky-groenewald/followers",
        "following_url": "https://api.github.com/users/ricky-groenewald/following{/other_user}",
        "gists_url": "https://api.github.com/users/ricky-groenewald/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ricky-groenewald",
        "id": 16112032,
        "login": "ricky-groenewald",
        "node_id": "MDQ6VXNlcjE2MTEyMDMy",
        "organizations_url": "https://api.github.com/users/ricky-groenewald/orgs",
        "received_events_url": "https://api.github.com/users/ricky-groenewald/received_events",
        "repos_url": "https://api.github.com/users/ricky-groenewald/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ricky-groenewald/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ricky-groenewald/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ricky-groenewald",
        "user_view_type": "public"
    }
}