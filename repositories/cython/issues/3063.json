{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Given an input:\r\n```\r\nfor entry in my_cpp_function():\r\n    entry.foo()\r\n```\r\nSeems to generate a C++ code like (assuming my_cpp_function return a `vector[Foo]`):\r\n```\r\nFoo entry;\r\nstd::vector<Foo>* vec;\r\n\r\nauto it = vec->begin();\r\nwhile(it != vec->end()) {\r\n     entry = *it;\r\n     it++;\r\n}\r\n```\r\nIn general, this works but makes a copy of entry and assumes that `Foo` is default constructable.\r\nIs there a way to get Cython to creating entry as reference to `Foo`?\r\n\r\nI have tried:\r\n```\r\nfor entry& in my_cpp_function():\r\n    entry.foo()\r\n```\r\nbut this is invalid syntax.\r\n\r\nHere is a complete minimal example:\r\n\r\ntest.h\r\n```\r\n#include <vector>\r\n#include <iostream>\r\n\r\nstruct Foo {\r\n        int a;\r\n\r\n        Foo(int a) : a(a) {}\r\n        void foo() { std::cout << \"Foo \" << a << std::endl; }\r\n};\r\n\r\nstd::vector<Foo> get_foo_vec() {\r\n        return { Foo(1), Foo(2) };\r\n}\r\n\r\nvoid dummy() {\r\n        for (Foo& bla : get_foo_vec()) {\r\n                bla.foo();\r\n        }\r\n}\r\n```\r\ntest.pxd\r\n```\r\nfrom libcpp.vector cimport vector\r\n\r\ncdef extern from \"test.h\":\r\n    cdef cppclass Foo:\r\n        void foo()\r\n    vector[Foo] get_foo_vec()\r\n```\r\ntest.pyx\r\n```\r\ncimport test\r\n\r\ndef iterate():\r\n    for entry in get_foo_vec():\r\n        entry.foo()\r\n```\r\nCompilation with:\r\n```\r\ncython test.pyx -o test_pyx.cpp -Wextra --cplus -3\r\ng++ -I/usr/include/python3.7m test_pyx.cpp\r\n```\r\nError:\r\n```\r\ntest_pyx.cpp: In function 'PyObject* __pyx_pf_4test_iterate(PyObject*)':\r\ntest_pyx.cpp:1069:7: error: no matching function for call to 'Foo::Foo()'\r\n   Foo __pyx_v_entry;\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "There is a little mistake in `test.pyx`. You need to either change import to `from test cimport get_foo_vec` or use `test.get_foo_vec`. Your point is valid regardless of that though.\r\n\r\nI had similar issues, yet I couldn't find a convenient way to use references from cython. Closest workaround I could come up with was replacing `for .. in` with `while`.\r\n\r\nWith pointer:\r\n\r\n```cy\r\n# distutils: language = c++                                                                                                                                                                                        \r\n                                                                                                                                                                                                                   \r\nfrom cython.operator cimport dereference as deref, preincrement as preinc                                                                                                                                          \r\ncimport test                                                                                                                                                                                                       \r\n                                                                                                                                                                                                                   \r\ncdef vector[test.Foo] vec = test.get_foo_vec()\r\ncdef vector[test.Foo].iterator it = vec.begin()\r\ncdef Foo* elm\r\nwhile it != vec.end():\r\n    elm = &deref(it)  # elm = &*it\r\n    elm.foo()         # elm->foo()\r\n    preinc(it)        # ++it\r\n```\r\n\r\nWith a helper function:\r\n```cy\r\ncdef inline void process_foo(Foo& obj):\r\n    obj.foo()\r\n\r\nwhile it != vec.end():\r\n    process_foo(deref(it))\r\n    preinc(it)\r\n```\r\n\r\nOf course, neither solves underlying issues, the hard requirement for default constructor and/or declaring variables at the top of the function. Both examples are just workarounds for these restrictions. I agree it would be wonderful if default constructor requirement were to be removed. Ideally, this could be achieved by declaring variables when they are first used. AFAICS, cython has been designed with C language conventions in mind, so it may not be trivial to remove these restrictions without serious refactorization specifically for producing C++.",
            "created_at": "2019-08-01T14:25:35Z",
            "html_url": "https://github.com/cython/cython/issues/3063#issuecomment-517310726",
            "id": 517310726,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3063",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzMxMDcyNg==",
            "updated_at": "2019-08-01T14:28:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/517310726",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/13993759?v=4",
                "events_url": "https://api.github.com/users/ozars/events{/privacy}",
                "followers_url": "https://api.github.com/users/ozars/followers",
                "following_url": "https://api.github.com/users/ozars/following{/other_user}",
                "gists_url": "https://api.github.com/users/ozars/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ozars",
                "id": 13993759,
                "login": "ozars",
                "node_id": "MDQ6VXNlcjEzOTkzNzU5",
                "organizations_url": "https://api.github.com/users/ozars/orgs",
                "received_events_url": "https://api.github.com/users/ozars/received_events",
                "repos_url": "https://api.github.com/users/ozars/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ozars/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ozars/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ozars"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One of the difficulties with references and non-default constructors is the scoping. For example\r\n\r\n```\r\nif condition:\r\n    x = some_value()\r\nelse:\r\n    x = other_value()\r\n\r\nuse(x)\r\n```\r\n\r\nis perfectly valid in Python, but becomes invalid if `x` is \"declared when it is first used.\" I agree, however, that we could try to do something better here. \r\n",
            "created_at": "2019-08-03T22:08:35Z",
            "html_url": "https://github.com/cython/cython/issues/3063#issuecomment-517957868",
            "id": 517957868,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3063",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzk1Nzg2OA==",
            "updated_at": "2019-08-03T22:08:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/517957868",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "NONE",
            "body": "What I actually meant by \"declared when first used\" was explicit `cdef` by user, not cython implicitly inferring where it should be defined. So what I had in my mind would be rather similar to this:\r\n```\r\nif condition:\r\n    cdef int& x = some_cpp_func()\r\n    ...\r\nelse:\r\n    cdef double& x = some_other_cpp_func()\r\n    ...\r\n# x is not declared in this scope.\r\n```\r\n\r\ncdef isn't allowed in such scopes in current implementation (perhaps to be compatible with ANSI C?).",
            "created_at": "2019-08-03T23:02:04Z",
            "html_url": "https://github.com/cython/cython/issues/3063#issuecomment-517960416",
            "id": 517960416,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3063",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzk2MDQxNg==",
            "updated_at": "2019-08-03T23:02:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/517960416",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/13993759?v=4",
                "events_url": "https://api.github.com/users/ozars/events{/privacy}",
                "followers_url": "https://api.github.com/users/ozars/followers",
                "following_url": "https://api.github.com/users/ozars/following{/other_user}",
                "gists_url": "https://api.github.com/users/ozars/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ozars",
                "id": 13993759,
                "login": "ozars",
                "node_id": "MDQ6VXNlcjEzOTkzNzU5",
                "organizations_url": "https://api.github.com/users/ozars/orgs",
                "received_events_url": "https://api.github.com/users/ozars/received_events",
                "repos_url": "https://api.github.com/users/ozars/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ozars/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ozars/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ozars"
            }
        },
        {
            "author_association": "NONE",
            "body": "I wonder how much work would be required to extend constructors in brace-initialization style, if it is possible of course. Example:\r\n\r\n```cy\r\ncppclass TestClass:\r\n    TestClass(int, double)\r\ncdef TestClass obj {1, 2.0}\r\n```\r\n\r\nUsing brace initialization style over parentheses may be easier to implement (since it gives clear distinction between a function declaration/call and constructor) and it wouldn't change existing semantics of cdef functions. Is this something realistic to implement?\r\n\r\nThis doesn't address  cdef'ing in if, while, for etc. scopes, but implementing custom constructors might be a good step for reaching for that later.",
            "created_at": "2019-08-04T02:57:10Z",
            "html_url": "https://github.com/cython/cython/issues/3063#issuecomment-517969541",
            "id": 517969541,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3063",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzk2OTU0MQ==",
            "updated_at": "2019-08-04T02:57:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/517969541",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/13993759?v=4",
                "events_url": "https://api.github.com/users/ozars/events{/privacy}",
                "followers_url": "https://api.github.com/users/ozars/followers",
                "following_url": "https://api.github.com/users/ozars/following{/other_user}",
                "gists_url": "https://api.github.com/users/ozars/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ozars",
                "id": 13993759,
                "login": "ozars",
                "node_id": "MDQ6VXNlcjEzOTkzNzU5",
                "organizations_url": "https://api.github.com/users/ozars/orgs",
                "received_events_url": "https://api.github.com/users/ozars/received_events",
                "repos_url": "https://api.github.com/users/ozars/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ozars/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ozars/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ozars"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Such a change would be a departure from the way scoping works in Python. (It would also require some non-trivial changes to how things are tracked in the compiler as well.)",
            "created_at": "2019-08-08T19:09:12Z",
            "html_url": "https://github.com/cython/cython/issues/3063#issuecomment-519649787",
            "id": 519649787,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3063",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTY0OTc4Nw==",
            "updated_at": "2019-08-08T19:09:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/519649787",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree that being able to use references in looks seems attractive. I also agree with @robertwb that whatever we do in Cython to achieve this should adhere to Python semantics.",
            "created_at": "2019-08-14T05:19:37Z",
            "html_url": "https://github.com/cython/cython/issues/3063#issuecomment-521105104",
            "id": 521105104,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3063",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTEwNTEwNA==",
            "updated_at": "2019-08-14T05:19:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/521105104",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3063/comments",
    "created_at": "2019-07-31T12:51:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-08-14T05:18:34Z",
            "event": "labeled",
            "id": 2555420233,
            "label": {
                "color": "f9d0c4",
                "name": "C++"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDI1NTU0MjAyMzM=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2555420233"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-08-14T05:18:34Z",
            "event": "labeled",
            "id": 2555420235,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDI1NTU0MjAyMzU=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2555420235"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-08-14T05:18:34Z",
            "event": "labeled",
            "id": 2555420237,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDI1NTU0MjAyMzc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2555420237"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-08-14T05:19:37Z",
            "event": "mentioned",
            "id": 2555421500,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjU1NTQyMTUwMA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2555421500"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-08-14T05:19:37Z",
            "event": "subscribed",
            "id": 2555421502,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1NTU0MjE1MDI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2555421502"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3063/events",
    "html_url": "https://github.com/cython/cython/issues/3063",
    "id": 475126227,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "444444",
            "default": false,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": true,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3063/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0NzUxMjYyMjc=",
    "number": 3063,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Support for references in for loop?",
    "updated_at": "2019-08-14T05:19:37Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3063",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/32870336?v=4",
        "events_url": "https://api.github.com/users/gerion0/events{/privacy}",
        "followers_url": "https://api.github.com/users/gerion0/followers",
        "following_url": "https://api.github.com/users/gerion0/following{/other_user}",
        "gists_url": "https://api.github.com/users/gerion0/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gerion0",
        "id": 32870336,
        "login": "gerion0",
        "node_id": "MDQ6VXNlcjMyODcwMzM2",
        "organizations_url": "https://api.github.com/users/gerion0/orgs",
        "received_events_url": "https://api.github.com/users/gerion0/received_events",
        "repos_url": "https://api.github.com/users/gerion0/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gerion0/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gerion0/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gerion0"
    }
}