{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "**Background:**\r\n\r\nI have a np.ndarray of uint64, `ids`, shaped (N, 2), which I pass from python to a function in a cython file.  The cython function compares the second element of each row of this array (i.e. `ids[:, 1]`) to all future rows to find repeat entries.  At times, this is returning an incorrect value.\r\n\r\nTrimmed down version:\r\n\r\n-----------\r\n\r\n**Problem:**\r\n\r\n```\r\nctypedef unsigned long long ULNG\r\n\r\ndef build_tree(np.ndarray[ULNG, ndim=2] ids, np.ndarray[long,   ndim=1] next):\r\n    cdef long num_mergers = ids.shape[0]\r\n\r\n    for ii in range(num_mergers):\r\n        outid = ids[last_ind, 1]\r\n        jj = ii + 1\r\n        while (jj < num_mergers):\r\n            for kk in [0, 1]:\r\n                if (ids[jj, kk] == outid):    # [*]\r\n                    next[ii] = jj\r\n```\r\n\r\nAt a particular row, the equality test (`[*]`) returns true despite the values being different.  I've added a print statement `print(ii, ids[jj, kk], outid, ids[jj, kk] == outid)`, at the offending entry, which gives,\r\n\r\n```\r\n193 9223372036551552872 9223372036551553059 True\r\n```\r\n\r\n---------------\r\n\r\n**Other info**\r\n\r\nI'm exploring this in a jupyter notebook (calls a method that calls the cython method, compiled used `pyximport`), and **after ~6 kernel restarts (and re-compiles), it finally worked properly**, I think without any changes to the operating code.\r\n\r\nI assumed it was some sort of type error, so inside the cython method, I also printed out the `type()` result for these values and they both return `int` (instead of anything about an `unsigned long long`), but I'm guessing that's because of a python-function vs. cython issue?",
    "closed_at": "2019-03-12T20:48:13Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I'm exploring this in a jupyter notebook\r\n\r\nNote that notebooks are particularly bad at guaranteeing that the code that runs and the data it processes really come from the code that the cells show. The fact that you are additionally using `pyximport` makes this even worse, IMHO.\r\n\r\n\r\nI'll close this as probably not reproducible.",
            "created_at": "2019-03-12T20:48:13Z",
            "html_url": "https://github.com/cython/cython/issues/2888#issuecomment-472174918",
            "id": 472174918,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE3NDkxOA==",
            "updated_at": "2019-03-12T20:48:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/472174918",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2888/comments",
    "created_at": "2019-03-07T22:20:00Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-03-12T20:48:13Z",
            "event": "closed",
            "id": 2198444009,
            "node_id": "MDExOkNsb3NlZEV2ZW50MjE5ODQ0NDAwOQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2198444009"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2888/events",
    "html_url": "https://github.com/cython/cython/issues/2888",
    "id": 418540531,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2888/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0MTg1NDA1MzE=",
    "number": 2888,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Equality comparison incorrectly returns true (sometimes)",
    "updated_at": "2019-03-12T20:48:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2888",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/3839265?v=4",
        "events_url": "https://api.github.com/users/lzkelley/events{/privacy}",
        "followers_url": "https://api.github.com/users/lzkelley/followers",
        "following_url": "https://api.github.com/users/lzkelley/following{/other_user}",
        "gists_url": "https://api.github.com/users/lzkelley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lzkelley",
        "id": 3839265,
        "login": "lzkelley",
        "node_id": "MDQ6VXNlcjM4MzkyNjU=",
        "organizations_url": "https://api.github.com/users/lzkelley/orgs",
        "received_events_url": "https://api.github.com/users/lzkelley/received_events",
        "repos_url": "https://api.github.com/users/lzkelley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lzkelley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lzkelley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lzkelley"
    }
}