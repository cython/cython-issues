{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nThis started as a [Stack Overflow question](https://stackoverflow.com/questions/78437116/cannot-cythonize-c-source-if-function-isnt-explicitly-used-in-a-new-python-fu) and was pointed to be a possible bug.\n\n### Code to reproduce the behaviour:\n\nhello.cpp\r\n```cpp\r\n#include <iostream>\r\n\r\nvoid hello_from_cpp() {\r\n    std::cout << \"Hello from C++!\" << std::endl;\r\n}\r\n```\r\n\r\ncpp_hello.pyx\r\n```cython\r\n# distutils: language = c++\r\n# cython: language_level = 3\r\ncpdef extern void hello_from_cpp()\r\n\r\ndef myfun():\r\n    hello_from_cpp()\r\n```\r\nsetup.py\r\n```python\r\nfrom setuptools import setup, Extension\r\nfrom Cython.Build import cythonize\r\n\r\nsetup(\r\n    ext_modules=cythonize([\r\n        Extension(\"cpp_hello\", [\"cpp_hello.pyx\", \"hello.cpp\"])\r\n        ]),\r\n)\r\n```\r\nmain.py\r\n```python\r\nimport cpp_hello\r\n\r\nif __name__ == \"__main__\":\r\n    cpp_hello.hello_from_cpp()\r\n```\r\n\r\nBuilt with `python setup.py build_ext --inplace` or `python setup.py build_ext -i`, tested with `python main.py`. The code compiles and presents the string in the terminal, **but** if the lines defining `myfun` in `cpp_hello.pyx` are removed, it fails to compile:\r\n```\r\n[1/1] Cythonizing cpp_hello.pyx\r\nrunning build_ext\r\nbuilding 'cpp_hello' extension\r\ncreating build\r\ncreating build/temp.linux-x86_64-cpython-310\r\nx86_64-linux-gnu-gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -fPIC -I/usr/include/python3.10 -c cpp_hello.cpp -o build/temp.linux-x86_64-cpython-310/cpp_hello.o\r\ncpp_hello.cpp: In function ‘int __pyx_pymod_exec_cpp_hello(PyObject*)’:\r\ncpp_hello.cpp:3027:84: error: ‘hello_from_cpp’ was not declared in this scope\r\n 3027 |     PyObject* wrapped = __Pyx_CFunc_9cpp_hello_void__lParen__rParennoexcept_to_py_(hello_from_cpp);\r\n      |                                                                                    ^~~~~~~~~~~~~~\r\ncpp_hello.cpp: At global scope:\r\ncpp_hello.cpp:2362:18: warning: ‘PyObject* __Pyx_CFunc_9cpp_hello_void__lParen__rParennoexcept_to_py_(void (*)())’ defined but not used [-Wunused-function]\r\n 2362 | static PyObject *__Pyx_CFunc_9cpp_hello_void__lParen__rParennoexcept_to_py_(void (*__pyx_v_f)(void)) {\r\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nerror: command '/usr/bin/x86_64-linux-gnu-gcc' failed with exit code 1\r\n```\n\n### Expected behaviour\n\nI should be able to expose the C++ function to Python using `cpdef extern void hello_from_cpp()` without requiring additional code.\n\n### OS\n\nLinux/WSL2\n\n### Python version\n\n3.10.12\n\n### Cython version\n\n3.0.10\n\n### Additional context\n\nI also tried the alternative declaration `cdef extern from \"hello.cpp\"`, but I can't create a homonimous function `hello_from_cpp()` as I wish.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6185/comments",
    "created_at": "2024-05-06T14:25:21Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-07T05:37:51Z",
            "event": "labeled",
            "id": 12723577821,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc6H9XiJzwAAAAL2YmPd",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12723577821"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-07T05:37:51Z",
            "event": "labeled",
            "id": 12723577825,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "LE_lADOABDGAc6H9XiJzwAAAAL2YmPh",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12723577825"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6185/events",
    "html_url": "https://github.com/cython/cython/issues/6185",
    "id": 2281011337,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6185/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6H9XiJ",
    "number": 6185,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6185/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6185/timeline",
    "title": "[BUG] Cannot cythonize C++ source if function isn't explicitly used in a new Python function in the same file",
    "updated_at": "2024-05-07T05:37:51Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6185",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7863971?v=4",
        "events_url": "https://api.github.com/users/danilo-bc/events{/privacy}",
        "followers_url": "https://api.github.com/users/danilo-bc/followers",
        "following_url": "https://api.github.com/users/danilo-bc/following{/other_user}",
        "gists_url": "https://api.github.com/users/danilo-bc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/danilo-bc",
        "id": 7863971,
        "login": "danilo-bc",
        "node_id": "MDQ6VXNlcjc4NjM5NzE=",
        "organizations_url": "https://api.github.com/users/danilo-bc/orgs",
        "received_events_url": "https://api.github.com/users/danilo-bc/received_events",
        "repos_url": "https://api.github.com/users/danilo-bc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/danilo-bc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/danilo-bc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/danilo-bc"
    }
}