{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Per https://github.com/yaml/pyyaml/pull/407, `setup.py build_ext` seems to have trouble finding `.pxd` files when a certain un-conventional repository structure is used.\r\n\r\n**Fully reproducible steps** (Python 3.8):\r\n\r\n```\r\npython -m venv venv\r\nsource ./venv/bin/activate\r\npython -m pip install -U pip setuptools Cython\r\ngit clone -q --branch wheels git@github.com:bsolomon1124/pyyaml.git\r\ncd pyyaml\r\n\r\n# Broken version - why?\r\ngit checkout --detach 75ccf4c\r\nUSE_CYTHON=1 python setup.py build_ext --inplace\r\n\r\n# Magically working version\r\ngit checkout --detach 3ad7bb0\r\nUSE_CYTHON=1 python setup.py build_ext --inplace\r\n```\r\n\r\n----\r\n\r\n\r\nAs of 75ccf4c63dd7b4463230f060cee652388ab88899, the repo looks like:\r\n\r\n```\r\n$ tree ext\r\next\r\n├── _yaml.h\r\n├── _yaml.pxd\r\n└── _yaml.pyx\r\n```\r\n\r\nWith the extension invocation looking like:\r\n\r\n```\r\nextension = Extension(\r\n    'yaml._yaml',\r\n    sources=['ext/_yaml.%s' % 'pyx' if with_cython else 'c'],\r\n    libraries=['yaml'],\r\n)\r\n```\r\n\r\nNote that the pure-Python implementation is Python-major-version specific, in lib (Python2) versus lib3 (Python3).\r\n\r\nBuilding with this structure fails:\r\n\r\n```\r\n$ USE_CYTHON=1 python setup.py build_ext --inplace\r\nCompiling ext/_yaml.pyx because it changed.\r\n[1/1] Cythonizing ext/_yaml.pyx\r\n/Users/brad/Scripts/python/projects/3rdpty/pyyaml/venv/lib/python3.8/site-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /Users/brad/Scripts/python/projects/3rdpty/pyyaml/ext/_yaml.pyx\r\n  tree = Parsing.p_module(s, pxd, full_module_name)\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n#        self.end_mark = end_mark\r\n#        self.style = style\r\n\r\ncdef class CParser:\r\n\r\n    cdef yaml_parser_t parser\r\n        ^\r\n------------------------------------------------------------\r\n\r\next/_yaml.pyx:249:9: 'yaml_parser_t' is not a type identifier\r\n\r\n...\r\n\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 78, in <module>\r\n    ext_modules=(cythonize(extension) if with_cython else [extension]),\r\n  File \"/Users/brad/Scripts/python/projects/3rdpty/pyyaml/venv/lib/python3.8/site-packages/Cython/Build/Dependencies.py\", line 1102, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/Users/brad/Scripts/python/projects/3rdpty/pyyaml/venv/lib/python3.8/site-packages/Cython/Build/Dependencies.py\", line 1225, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: ext/_yaml.pyx\r\n```\r\n\r\nThere are several hundred of those \"xxx is not a type identifier\" errors indicating `ext/_yaml.pxd` is not found.\r\n\r\n**If**, however, I make the simple changes of:\r\n\r\n- Moving `ext` to `yaml`\r\n- Adding `yaml/__init__.pxd`\r\n\r\nEverything magically works.  Those changes are shown in [3ad7bb06bf08432c97a49c0f2f2c964861508439](https://github.com/yaml/pyyaml/pull/407/commits/3ad7bb06bf08432c97a49c0f2f2c964861508439).",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3643/comments",
    "created_at": "2020-05-27T23:42:05Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3643/events",
    "html_url": "https://github.com/cython/cython/issues/3643",
    "id": 626109400,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3643/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2MjYxMDk0MDA=",
    "number": 3643,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "build_ext + cythonize cannot handle unconventional package structure",
    "updated_at": "2020-05-27T23:42:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3643",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/25164676?v=4",
        "events_url": "https://api.github.com/users/bsolomon1124/events{/privacy}",
        "followers_url": "https://api.github.com/users/bsolomon1124/followers",
        "following_url": "https://api.github.com/users/bsolomon1124/following{/other_user}",
        "gists_url": "https://api.github.com/users/bsolomon1124/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bsolomon1124",
        "id": 25164676,
        "login": "bsolomon1124",
        "node_id": "MDQ6VXNlcjI1MTY0Njc2",
        "organizations_url": "https://api.github.com/users/bsolomon1124/orgs",
        "received_events_url": "https://api.github.com/users/bsolomon1124/received_events",
        "repos_url": "https://api.github.com/users/bsolomon1124/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bsolomon1124/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bsolomon1124/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bsolomon1124"
    }
}