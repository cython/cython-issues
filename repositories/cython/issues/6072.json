{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe the bug\r\n\r\nSeveral tests fail with NumPy 2.0b1, many apparently due to a different `repr()` of NumPy types:\r\n```\r\n======================================================================\r\nFAIL: one_dim (memoryview_annotation_typing)\r\nDoctest: memoryview_annotation_typing.one_dim\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/tests/memoryview/memoryview_annotation_typing.py\", line 19, in memoryview_annotation_typing.one_dim\r\nFailed example:\r\n    one_dim(a)\r\nExpected:\r\n    (2.0, 1)\r\nGot:\r\n    (np.float64(2.0), 1)\r\n\r\n\r\n======================================================================\r\nFAIL: one_dim_ccontig (memoryview_annotation_typing)\r\nDoctest: memoryview_annotation_typing.one_dim_ccontig\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/tests/memoryview/memoryview_annotation_typing.py\", line 29, in memoryview_annotation_typing.one_dim_ccontig\r\nFailed example:\r\n    one_dim_ccontig(a)\r\nExpected:\r\n    (2.0, 1)\r\nGot:\r\n    (np.float64(2.0), 1)\r\n\r\n\r\n======================================================================\r\nFAIL: one_dim_nogil_cfunc (memoryview_annotation_typing)\r\nDoctest: memoryview_annotation_typing.one_dim_nogil_cfunc\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/tests/memoryview/memoryview_annotation_typing.py\", line 107, in memoryview_annotation_typing.one_dim_nogil_cfunc\r\nFailed example:\r\n    one_dim_nogil_cfunc(a)\r\nExpected:\r\n    2.0\r\nGot:\r\n    np.float64(2.0)\r\n\r\n\r\n======================================================================\r\nFAIL: two_dim (memoryview_annotation_typing)\r\nDoctest: memoryview_annotation_typing.two_dim\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/tests/memoryview/memoryview_annotation_typing.py\", line 39, in memoryview_annotation_typing.two_dim\r\nFailed example:\r\n    two_dim(a)\r\nExpected:\r\n    (3.0, 1.0, 2)\r\nGot:\r\n    (np.float64(3.0), np.float64(1.0), 2)\r\n\r\n\r\n======================================================================\r\nFAIL: variable_annotation (memoryview_annotation_typing)\r\nDoctest: memoryview_annotation_typing.variable_annotation\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/tests/memoryview/memoryview_annotation_typing.py\", line 49, in memoryview_annotation_typing.variable_annotation\r\nFailed example:\r\n    variable_annotation(a)\r\nExpected:\r\n    2.0\r\nGot:\r\n    np.float64(2.0)\r\n\r\n\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase.runTest)\r\n[1] compiling (c/cy2) and running numpy_memoryview\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1493, in run\r\n    ext_so_path = self.runCompileTest()\r\n                  ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1108, in runCompileTest\r\n    return self.compile(\r\n           ^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1412, in compile\r\n    self._match_output(expected_errors, errors, tostderr)\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1466, in _match_output\r\n    self.assertEqual(None, unexpected)\r\nAssertionError: None != \"678:9: 'int_t' is not a type identifier\"\r\n\r\n\r\n======================================================================\r\nFAIL: test_flow_control (ufunc)\r\nDoctest: ufunc.test_flow_control\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/1/run/c/ufunc/ufunc.cpython-312-x86_64-linux-gnu.so\", line ?, in ufunc.test_flow_control\r\nFailed example:\r\n    return_in_if(-1.)\r\nExpected:\r\n    1.0\r\nGot:\r\n    np.float64(1.0)\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/1/run/c/ufunc/ufunc.cpython-312-x86_64-linux-gnu.so\", line ?, in ufunc.test_flow_control\r\nFailed example:\r\n    return_in_if(2.0)\r\nExpected:\r\n    2.0\r\nGot:\r\n    np.float64(2.0)\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/1/run/c/ufunc/ufunc.cpython-312-x86_64-linux-gnu.so\", line ?, in ufunc.test_flow_control\r\nFailed example:\r\n    nested_loops(5.5)\r\nExpected:\r\n    6.0\r\nGot:\r\n    np.float64(6.0)\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/1/run/c/ufunc/ufunc.cpython-312-x86_64-linux-gnu.so\", line ?, in ufunc.test_flow_control\r\nFailed example:\r\n    nested_loops(105.)\r\nExpected:\r\n    -5.0\r\nGot:\r\n    np.float64(-5.0)\r\n\r\n\r\n======================================================================\r\nFAIL: test_nested_function (ufunc)\r\nDoctest: ufunc.test_nested_function\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/1/run/c/ufunc/ufunc.cpython-312-x86_64-linux-gnu.so\", line ?, in ufunc.test_nested_function\r\nFailed example:\r\n    nested_function(-1.)\r\nExpected:\r\n    -2.0\r\nGot:\r\n    np.float64(-2.0)\r\n\r\n\r\n======================================================================\r\nFAIL: test_plus_one (ufunc)\r\nDoctest: ufunc.test_plus_one\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/1/run/c/ufunc/ufunc.cpython-312-x86_64-linux-gnu.so\", line ?, in ufunc.test_plus_one\r\nFailed example:\r\n    plus_one(1.j)\r\nExpected:\r\n    (1+1j)\r\nGot:\r\n    np.complex128(1+1j)\r\n\r\n\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase.runTest)\r\n[0] compiling (c/cy2) and running numpy_test\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1493, in run\r\n    ext_so_path = self.runCompileTest()\r\n                  ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1108, in runCompileTest\r\n    return self.compile(\r\n           ^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1412, in compile\r\n    self._match_output(expected_errors, errors, tostderr)\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1466, in _match_output\r\n    self.assertEqual(None, unexpected)\r\nAssertionError: None != '257:29: Invalid type.'\r\n\r\n\r\n======================================================================\r\nFAIL: test_one_sized (relaxed_strides)\r\nDoctest: relaxed_strides.test_one_sized\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/5/memoryview/c/relaxed_strides/relaxed_strides.cpython-312-x86_64-linux-gnu.so\", line ?, in relaxed_strides.test_one_sized\r\nFailed example:\r\n    test_one_sized(contig)[0]\r\nExpected:\r\n    1.0\r\nGot:\r\n    np.float64(1.0)\r\n\r\n\r\n======================================================================\r\nFAIL: copy_fortran2 (contig_check)\r\nDoctest: contig_check.copy_fortran2\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/4/memoryview/c/contig_check/contig_check.cpython-312-x86_64-linux-gnu.so\", line ?, in contig_check.copy_fortran2\r\nFailed example:\r\n    (a == c).all()\r\nExpected:\r\n    True\r\nGot:\r\n    np.True_\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/4/memoryview/c/contig_check/contig_check.cpython-312-x86_64-linux-gnu.so\", line ?, in contig_check.copy_fortran2\r\nFailed example:\r\n    (a == c).all()\r\nExpected:\r\n    True\r\nGot:\r\n    np.True_\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/4/memoryview/c/contig_check/contig_check.cpython-312-x86_64-linux-gnu.so\", line ?, in contig_check.copy_fortran2\r\nFailed example:\r\n    (a == c).all()\r\nExpected:\r\n    True\r\nGot:\r\n    np.True_\r\n\r\n\r\n======================================================================\r\nFAIL: copy_fortran3 (contig_check)\r\nDoctest: contig_check.copy_fortran3\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/4/memoryview/c/contig_check/contig_check.cpython-312-x86_64-linux-gnu.so\", line ?, in contig_check.copy_fortran3\r\nFailed example:\r\n    (a == c).all()\r\nExpected:\r\n    True\r\nGot:\r\n    np.True_\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/4/memoryview/c/contig_check/contig_check.cpython-312-x86_64-linux-gnu.so\", line ?, in contig_check.copy_fortran3\r\nFailed example:\r\n    (a == c).all()\r\nExpected:\r\n    True\r\nGot:\r\n    np.True_\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/4/memoryview/c/contig_check/contig_check.cpython-312-x86_64-linux-gnu.so\", line ?, in contig_check.copy_fortran3\r\nFailed example:\r\n    (a == c).all()\r\nExpected:\r\n    True\r\nGot:\r\n    np.True_\r\n\r\n\r\n======================================================================\r\nFAIL: test_update_mmview_rw (numpy_memoryview_readonly)\r\nDoctest: numpy_memoryview_readonly.test_update_mmview_rw\r\n----------------------------------------------------------------------\r\nFile \"/home/runner/work/cython/cython/TEST_TMP/4/memoryview/c/numpy_memoryview_readonly/numpy_memoryview_readonly.cpython-312-x86_64-linux-gnu.so\", line ?, in numpy_memoryview_readonly.test_update_mmview_rw\r\nFailed example:\r\n    test_update_mmview_rw(new_array())\r\nExpected:\r\n    23.0\r\nGot:\r\n    np.float64(23.0)\r\n\r\n\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase.runTest)\r\n[6] compiling (c/cy2) and running numpy_parallel\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1493, in run\r\n    ext_so_path = self.runCompileTest()\r\n                  ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1108, in runCompileTest\r\n    return self.compile(\r\n           ^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1412, in compile\r\n    self._match_output(expected_errors, errors, tostderr)\r\n  File \"/home/runner/work/cython/cython/runtests.py\", line 1466, in _match_output\r\n    self.assertEqual(None, unexpected)\r\nAssertionError: None != '25:23: Invalid type.'\r\n```\r\nFor the `repr()` differences, we can probably cast to the normal Python types using `float()` or `bool()`.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n_No response_\r\n\r\n### Expected behaviour\r\n\r\n_No response_\r\n\r\n### OS\r\n\r\n_No response_\r\n\r\n### Python version\r\n\r\n3.12\r\n\r\n### Cython version\r\n\r\nmaster\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": "2024-03-18T18:15:15Z",
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6072/comments",
    "created_at": "2024-03-13T11:20:51Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-03-13T11:20:51Z",
            "event": "labeled",
            "id": 12101907719,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc6CKVzCzwAAAALRVHUH",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12101907719"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-03-13T11:20:51Z",
            "event": "labeled",
            "id": 12101907727,
            "label": {
                "color": "444444",
                "name": "Testing"
            },
            "node_id": "LE_lADOABDGAc6CKVzCzwAAAALRVHUP",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12101907727"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-03-18T18:15:15Z",
            "event": "closed",
            "id": 12157052597,
            "node_id": "CE_lADOABDGAc6CKVzCzwAAAALUnea1",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12157052597"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6072/events",
    "html_url": "https://github.com/cython/cython/issues/6072",
    "id": 2183748802,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558326,
            "name": "Testing",
            "node_id": "MDU6TGFiZWw0MjU1NTgzMjY=",
            "url": "https://api.github.com/repos/cython/cython/labels/Testing"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6072/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6CKVzC",
    "number": 6072,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6072/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6072/timeline",
    "title": "[BUG] Test failures with NumPy 2.0b1",
    "updated_at": "2024-03-18T18:15:15Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6072",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}