{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Forward declarations in Cython are currently real types, consider this example:\r\n\r\nmod1.pxd\r\n```\r\n# Forward declaration needed here coz `foo.pxd` and `bar.pxd` have circular types.\r\ncdef public struct bar # Type1\r\n\r\ncdef cppclass foo:\r\n    bar* prop\r\n    void method(bar* param)\r\n\r\ncdef void func(bar* param) # Type1 (conflict)\r\n```\r\n\r\nmod1.pyx\r\n```\r\n# Import bar cppclass\r\n# Need actual cimport here to have memory layout of bar\r\nfrom bar cimport bar # Type2\r\n\r\ncdef cppclass foo:\r\n    void method(bar* param): # Type1\r\n        cdef bar* b = new bar() # Type2\r\n        # Accessing properties of bar here\r\n        print(bar.someProp)\r\n\r\ncdef void func(bar* param): # Type2 (conflict)\r\n    pass\r\n```\r\n\r\nThe problem is `Type1` and `Type2` in the example above are not the same in the implementation file `.pyx`:\r\n* `bar` in param of `method` is the type from the .pxd file\r\n* `bar` in param of `func` is the type from cimport --> Signature mismatch problem\r\n* The rest in statements, `bar` is the type from cimport\r\n\r\nThe conflict:\r\n* `bar` must be in pxd file due to circular structures of foo and bar\r\n* `bar` must be cimported in pyx due to the need to have memory layout\r\n* They are of the same name but different types, hence the type mismatch at `func` (in pyx file)\r\n\r\nMore conflicts when there are forward declarations of the same name in, for example 5 files, then there are 5 different forward declared types.\r\n\r\nThis is confusing, should the type with the same name by forward declaration and by cimport be just one type? (it seems Cython makes 2 type identifiers for them). The feature is: an empty type declaration shouldn't be a type, it should wait to match the type of the same name in cimport dependency solving. This case is already appearing in a single module when compiled, not cross-modules.\r\n\r\nps. My current work-around is putting all forward declarations in a master file so the same type name don't get duplicated into multiple type identifiers; and do pointer casting when needed.",
    "closed_at": "2022-01-13T09:41:08Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Isn't this a duplicate of #4561? `cppclass` in a .pxd file is simply not currently supported for sharing types.\r\n(Maybe you just misnamed the files in your example?)\r\n\r\nThat said, doesn't `import … as …` help here?",
            "created_at": "2022-01-13T09:05:53Z",
            "html_url": "https://github.com/cython/cython/issues/4566#issuecomment-1011934417",
            "id": 1011934417,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4566",
            "node_id": "IC_kwDOABDGAc48UOTR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1011934417/reactions"
            },
            "updated_at": "2022-01-13T09:07:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1011934417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Isn't this a duplicate of #4561? `cppclass` in a .pxd file is simply not currently supported for sharing types.\r\n> \r\n> That said, doesn't `import … as …` help here?\r\n\r\nNot really a duplicate of #4561 , that 4561 is about accessing Python in struct members.\r\n\r\nThis issue is about forward declaration: The type created by empty `cdef struct` (in pxd) and the type created by `cimport` (in pyx) are written as the same name but are not of the same type identifier.\r\n\r\nThe fact is that `cppclass` is designed for grabbing C++ stuff (https://cython.readthedocs.io/en/latest/src/userguide/wrapping_CPlusPlus.html) but I wish it could be possible to write a full `cdef cppclass` in Cython. \r\n\r\nIt's possible just to use `cdef class` instead but that won't be good to implement everything with `nogil` for real threading (not concurrency).",
            "created_at": "2022-01-13T09:17:23Z",
            "html_url": "https://github.com/cython/cython/issues/4566#issuecomment-1011943906",
            "id": 1011943906,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4566",
            "node_id": "IC_kwDOABDGAc48UQni",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1011943906/reactions"
            },
            "updated_at": "2022-01-13T09:17:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1011943906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Which modules in your example are `foo` and `bar`?",
            "created_at": "2022-01-13T09:28:23Z",
            "html_url": "https://github.com/cython/cython/issues/4566#issuecomment-1011952492",
            "id": 1011952492,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4566",
            "node_id": "IC_kwDOABDGAc48USts",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1011952492/reactions"
            },
            "updated_at": "2022-01-13T09:28:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1011952492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Which modules in your example are `foo` and `bar`?\r\n\r\n`bar` can be just anything, something simple:\r\n```\r\n# bar.pxd\r\ncdef cppclass bar:\r\n    float someProp\r\n    # No need foo pointer here, about type mismatch, not circular\r\n```",
            "created_at": "2022-01-13T09:30:21Z",
            "html_url": "https://github.com/cython/cython/issues/4566#issuecomment-1011954105",
            "id": 1011954105,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4566",
            "node_id": "IC_kwDOABDGAc48UTG5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1011954105/reactions"
            },
            "updated_at": "2022-01-13T09:32:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1011954105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, again, you cannot currently share a `cppclass` via .pxd files. There's ticket #4561 for that issue.\r\n\r\nAnd declaring a new type, well, declares a new type. If you want to avoid that, then use `cimport` to share that same type across modules. And if that leads to naming conflicts, then use `cimport … as …`. That's what that Python feature is there for.\r\n\r\nBTW, if you can control the conflicting names yourself, then I would recommend avoiding them in the first place by making them unique. In the end, all of this might end up in the same C/C++ file of someone, which has a flat namespace.\r\n\r\nIf you want to keep the Python/Cython names the same but still use different names in C, then you can use cname strings for that to make Cython use specific C code for that name.\r\n\r\nI'm closing this ticket since I can't see anything wrong here.",
            "created_at": "2022-01-13T09:41:08Z",
            "html_url": "https://github.com/cython/cython/issues/4566#issuecomment-1011962719",
            "id": 1011962719,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4566",
            "node_id": "IC_kwDOABDGAc48UVNf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1011962719/reactions"
            },
            "updated_at": "2022-01-13T09:41:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1011962719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Ok, again, you cannot currently share a cppclass via .pxd files.\r\n\r\nTks, sounds like the issue for both tickets. No sharing `cppclass` via pxd files results in failure of informing Python in the cimport from second module #4561. And also without info of the `cppclass` in the other file, another type definition is created for the same name instead of reusing the name in forward declaration.",
            "created_at": "2022-01-13T13:34:34Z",
            "html_url": "https://github.com/cython/cython/issues/4566#issuecomment-1012141627",
            "id": 1012141627,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4566",
            "node_id": "IC_kwDOABDGAc48VA47",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1012141627/reactions"
            },
            "updated_at": "2022-01-13T13:35:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1012141627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4566/comments",
    "created_at": "2022-01-13T07:05:26Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-13T09:41:08Z",
            "event": "closed",
            "id": 5886153556,
            "node_id": "CE_lADOABDGAc5BpGVSzwAAAAFe15NU",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5886153556"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-13T09:41:17Z",
            "event": "labeled",
            "id": 5886154429,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "LE_lADOABDGAc5BpGVSzwAAAAFe15a9",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5886154429"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4566/events",
    "html_url": "https://github.com/cython/cython/issues/4566",
    "id": 1101292882,
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 414800623,
            "name": "support question",
            "node_id": "MDU6TGFiZWw0MTQ4MDA2MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/support%20question"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4566/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5BpGVS",
    "number": 4566,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4566/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4566/timeline",
    "title": "Option not to make a forward declaration a real type",
    "updated_at": "2022-01-13T13:35:09Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4566",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
        "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/datdinhquoc/followers",
        "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/datdinhquoc",
        "id": 40449395,
        "login": "datdinhquoc",
        "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
        "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
        "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
        "repos_url": "https://api.github.com/users/datdinhquoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/datdinhquoc"
    }
}