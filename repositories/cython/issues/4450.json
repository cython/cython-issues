{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWe use cython to wrap a C library. One of the things this wrapping layer does is turn error codes into exceptions. The traceback for that looks rather ugly:\r\n\r\n```\r\n  File \"C:\\dev\\test.py\", line 892, in run\r\n    network.this_fails()\r\n  File \"library_cython.pyx\", line 58209, in visum._visum.Network.this_fails\r\n    _check(c.Visum_Network_this_fails(\r\n  File \"library_cython.pyx\", line 26, in visum._visum._check\r\n    raise visum.MyExceptionType(message)\r\nvisum.MyExceptionType(Stuff went wrong).\r\n```\r\n\r\nWe would rather have:\r\n```\r\n  File \"C:\\dev\\test.py\", line 892, in run\r\n    network.this_fails()\r\nvisum.MyExceptionType(Stuff went wrong).\r\n```\r\n\r\n**Describe the solution you'd like**\r\nMy understanding is that cython actively does some work to get these stack traces. Per default, the stacktrace would end at the last pure python frame, i.e. our desired result.\r\nIt would be great if cython had an option to disable its fancy stacktrace handling. Having this at the file level would be enough.\r\n\r\n**Describe alternatives you've considered**\r\nThe only way I currently see to get our results is to not `raise` exceptions within cython, but to use the Python C Api Exception functions directly. But that would also only work if we did it in the outermost function of the API, because cython does the rewriting on function exit? That would complicate our code quite a bit and make it a lot harder to maintain.",
    "closed_at": "2021-11-05T13:04:47Z",
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "To me this seems like this is better done by using the existing Python exception control mechanisms rather than adding more Cython directives. E.g.\r\n\r\n```\r\n# in the outermost user-visible functions\r\ntry:\r\n    g()\r\nexcept BaseException as e:\r\n    raise e.with_traceback(None)\r\n```\r\n\r\nYou could write a decorator to generate this automatically.",
            "created_at": "2021-11-05T13:04:47Z",
            "html_url": "https://github.com/cython/cython/issues/4450#issuecomment-961879000",
            "id": 961879000,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4450",
            "node_id": "IC_kwDOABDGAc45VRvY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/961879000/reactions"
            },
            "updated_at": "2021-11-05T13:04:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/961879000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Unfortunately this workaround still leaves the `raise e.with_traceback` line in the traceback.\r\n\r\nAlso, this has unpleasant performance implications: Now we pay for the construction of traceback frames that are only going to be discarded. Using a decorator for this further adds overhead to every call, even if no exception is ever thrown. But using a decorator hand-written in C is the only possibility I see to actually get rid of the traceback.\r\n\r\nAddressing this in cython seems a lot easier than the workarounds, since only a little bit of code needs not to be ran.",
            "created_at": "2021-11-05T14:17:44Z",
            "html_url": "https://github.com/cython/cython/issues/4450#issuecomment-961932365",
            "id": 961932365,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4450",
            "node_id": "IC_kwDOABDGAc45VexN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/961932365/reactions"
            },
            "updated_at": "2021-11-05T14:17:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/961932365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1321505?v=4",
                "events_url": "https://api.github.com/users/Chronial/events{/privacy}",
                "followers_url": "https://api.github.com/users/Chronial/followers",
                "following_url": "https://api.github.com/users/Chronial/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chronial/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Chronial",
                "id": 1321505,
                "login": "Chronial",
                "node_id": "MDQ6VXNlcjEzMjE1MDU=",
                "organizations_url": "https://api.github.com/users/Chronial/orgs",
                "received_events_url": "https://api.github.com/users/Chronial/received_events",
                "repos_url": "https://api.github.com/users/Chronial/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Chronial/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chronial/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Chronial"
            }
        },
        {
            "author_association": "NONE",
            "body": "Would you accept a PR for this that makes this a compile-time flag via a define or are you completely against supporting this in cython?",
            "created_at": "2021-11-05T14:45:34Z",
            "html_url": "https://github.com/cython/cython/issues/4450#issuecomment-961953756",
            "id": 961953756,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4450",
            "node_id": "IC_kwDOABDGAc45Vj_c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/961953756/reactions"
            },
            "updated_at": "2021-11-05T14:45:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/961953756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1321505?v=4",
                "events_url": "https://api.github.com/users/Chronial/events{/privacy}",
                "followers_url": "https://api.github.com/users/Chronial/followers",
                "following_url": "https://api.github.com/users/Chronial/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chronial/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Chronial",
                "id": 1321505,
                "login": "Chronial",
                "node_id": "MDQ6VXNlcjEzMjE1MDU=",
                "organizations_url": "https://api.github.com/users/Chronial/orgs",
                "received_events_url": "https://api.github.com/users/Chronial/received_events",
                "repos_url": "https://api.github.com/users/Chronial/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Chronial/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chronial/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Chronial"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Would you accept a PR for this that makes this a compile-time flag via a define or are you completely against supporting this in cython?\r\n\r\nI don't have the final say on this - that's ultimately up to @scoder.\r\n\r\nThe main argument against new options (either directives or compile-time flags) is that they add new combinations of things that can go wrong and thus new combinations that really need testing. Therefore the option ideally needs to adds something that can't be achieved in another way.\r\n\r\nI slightly prefer a compile-time flag to a directive, but I'm not quite sure why.\r\n\r\nTwo other suggestions that might be worth knowing about:\r\n* if Cython can't find the .pyx source file at runtime then it omits the details from the source-code.\r\n* You might be able to get away with just `#define`ing `__Pyx_AddTraceback` to be empty? That wouldn't even require a PR (if it worked)",
            "created_at": "2021-11-05T15:21:25Z",
            "html_url": "https://github.com/cython/cython/issues/4450#issuecomment-961985858",
            "id": 961985858,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4450",
            "node_id": "IC_kwDOABDGAc45Vr1C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/961985858/reactions"
            },
            "updated_at": "2021-11-05T15:21:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/961985858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You might be able to get away with just #defineing __Pyx_AddTraceback to be empty? That wouldn't even require a PR (if it worked)\r\n\r\nNice idea, but unfortunately that doesn't work since it turns the function definition for `__Pyx_AddTraceback` into invalid syntax. I tried beeing clever with \r\n```\r\ncdef extern from *:\r\n    \"\"\"#define __Pyx_AddTraceback(A, B, C, D)\"\"\"\r\n```\r\nat the beginning and \r\n```\r\ncdef extern from *:\r\n    \"\"\"#undef __Pyx_AddTraceback\"\"\"\r\n```\r\nat the end of my cython file. But cython was even more clever and moved the blocks together to the top of the c output, making this a no-op.\r\n\r\nBut I managed to get results by doing a `re.sub(r'^\\s*__Pyx_AddTraceback\\(.*\\);$', '', contents, flags=re.MULTILINE)` on the `cythonize` output. Thanks for your tip 👍 \r\n\r\nBut that is clearly an ugly hack :/. My understanding is that wrapping C APIs is a major use-case for cython and wrapped C APIs usually won't have any useful internal stack traces, So this seems like generally useful feature for cython to have.",
            "created_at": "2021-11-08T21:36:22Z",
            "html_url": "https://github.com/cython/cython/issues/4450#issuecomment-963597101",
            "id": 963597101,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4450",
            "node_id": "IC_kwDOABDGAc45b1Mt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/963597101/reactions"
            },
            "updated_at": "2021-11-08T21:36:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/963597101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1321505?v=4",
                "events_url": "https://api.github.com/users/Chronial/events{/privacy}",
                "followers_url": "https://api.github.com/users/Chronial/followers",
                "following_url": "https://api.github.com/users/Chronial/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chronial/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Chronial",
                "id": 1321505,
                "login": "Chronial",
                "node_id": "MDQ6VXNlcjEzMjE1MDU=",
                "organizations_url": "https://api.github.com/users/Chronial/orgs",
                "received_events_url": "https://api.github.com/users/Chronial/received_events",
                "repos_url": "https://api.github.com/users/Chronial/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Chronial/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chronial/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Chronial"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4450/comments",
    "created_at": "2021-11-05T12:17:32Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-05T13:04:47Z",
            "event": "closed",
            "id": 5574287666,
            "node_id": "CE_lADOABDGAc4-VVEVzwAAAAFMQOEy",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5574287666"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-05T13:05:38Z",
            "event": "labeled",
            "id": 5574291537,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "LE_lADOABDGAc4-VVEVzwAAAAFMQPBR",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5574291537"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-05T13:05:38Z",
            "event": "labeled",
            "id": 5574291539,
            "label": {
                "color": "444444",
                "name": "R: wontfix"
            },
            "node_id": "LE_lADOABDGAc4-VVEVzwAAAAFMQPBT",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5574291539"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-05T15:21:25Z",
            "event": "mentioned",
            "id": 5575100483,
            "node_id": "MEE_lADOABDGAc4-VVEVzwAAAAFMTUhD",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5575100483"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-05T15:21:25Z",
            "event": "subscribed",
            "id": 5575100489,
            "node_id": "SE_lADOABDGAc4-VVEVzwAAAAFMTUhJ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5575100489"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4450/events",
    "html_url": "https://github.com/cython/cython/issues/4450",
    "id": 1045778709,
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557400,
            "name": "R: wontfix",
            "node_id": "MDU6TGFiZWw0MjU1NTc0MDA=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4450/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc4-VVEV",
    "number": 4450,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4450/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4450/timeline",
    "title": "[ENH] Add a way to disable internal stacktraces",
    "updated_at": "2021-11-08T21:36:22Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4450",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1321505?v=4",
        "events_url": "https://api.github.com/users/Chronial/events{/privacy}",
        "followers_url": "https://api.github.com/users/Chronial/followers",
        "following_url": "https://api.github.com/users/Chronial/following{/other_user}",
        "gists_url": "https://api.github.com/users/Chronial/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Chronial",
        "id": 1321505,
        "login": "Chronial",
        "node_id": "MDQ6VXNlcjEzMjE1MDU=",
        "organizations_url": "https://api.github.com/users/Chronial/orgs",
        "received_events_url": "https://api.github.com/users/Chronial/received_events",
        "repos_url": "https://api.github.com/users/Chronial/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Chronial/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Chronial/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Chronial"
    }
}