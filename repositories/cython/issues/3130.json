{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "first off thanks a lot for this amazing tool!\r\nif this is not the right place to ask a question, my apologies. i have looked for answers in the documentation / other issues but couldn't find a conclusive answer.\r\n\r\nCython compiled code sometimes raises `TypeError`s when builtin typehints are used and not respected by the caller of the function. This is something i really like, but i wander why certain builtins do not raise these errors?\r\n\r\nThe following table gives an (incomplete) overview of frequently used builtins:\r\n\r\n| typehint | input | TypeError? |\r\n|----------|-------|------------|\r\n| int      | str   | n          |\r\n| int      | list  | n          |\r\n| str      | int   | y          |\r\n| float    | str   | y          |\r\n| float    | bool  | n          |\r\n| dict     | str   | y          |\r\n| set      | str   | y          |\r\n| set      | dict  | y          |\r\n| list     | str   | y          |\r\n| bool     | str   | n          |\r\n\r\nIs there a complete list somewhere in which i can find which typehints are enforced?\r\n\r\nIs there maybe a way to make these checks more strict and throw a TypeError in all above cases?\r\n\r\nI would be even nicer is this could also be done with `Dict`, `Union`, `Optional` and Classes.\r\n\r\nSource for creating table:\r\n[typehints_cython.zip](https://github.com/cython/cython/files/3576115/typehints_cython.zip)\r\nexecute with command:\r\n`python3 setup.py build_ext --inplace && python3 -c \"from type_checking import check; check()\"`\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "A bit of context: i am using Cython for a distributed library and want the functions with type hints to fail fast, meaning that a `TypeError` is raised whenever the function is called with a wrong argument type.\r\n\r\nThere are some solutions  (https://github.com/Stewori/pytypes, https://github.com/agronholm/typeguard) which check these at runtime, but i need to change the source and cython does this out of the box, so i was wondering whether that functionality could be expanded.\r\n",
            "created_at": "2019-09-04T18:50:20Z",
            "html_url": "https://github.com/cython/cython/issues/3130#issuecomment-528035111",
            "id": 528035111,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3130",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyODAzNTExMQ==",
            "updated_at": "2019-09-04T19:13:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/528035111",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/16109193?v=4",
                "events_url": "https://api.github.com/users/GliderGeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/GliderGeek/followers",
                "following_url": "https://api.github.com/users/GliderGeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/GliderGeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GliderGeek",
                "id": 16109193,
                "login": "GliderGeek",
                "node_id": "MDQ6VXNlcjE2MTA5MTkz",
                "organizations_url": "https://api.github.com/users/GliderGeek/orgs",
                "received_events_url": "https://api.github.com/users/GliderGeek/received_events",
                "repos_url": "https://api.github.com/users/GliderGeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GliderGeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GliderGeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GliderGeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We currently ignore `int` in type hints, because a) it's not a C `int`, b) it's ambiguous in Python 2 because users normally mean \"`int` or `long`\" instead, and c) Python `int` has no real advantages for the compiler.\r\n\r\nHowever, your use case seems reasonable and I agree that at least issuing a type check would be right when the user already put a type annotation into the signature. When we drop Python 2 support in Cython 3.1, this should become a feature. With some tweaking, we might be able to generate a correct int/long type check already in Py2.\r\n\r\nWhat needs to be done:\r\n- add a new `int_type` to the bottom of `Builtin.py`\r\n- make sure that we correctly analyse the `int` type in annotations and map it to `Builtin.int_type`\r\n- make sure (and this might be the tricky part) that there is no confusion with the C `int` type, i.e. that the Python `int` type is really only read from annotations and not from `cdef int â€¦` etc.\r\n- make sure that the correct type check is generated\r\n\r\nThis requires a couple of new test modules, including Cython syntax, a pure Python module, and maybe also the different language levels.",
            "created_at": "2019-09-05T05:00:17Z",
            "html_url": "https://github.com/cython/cython/issues/3130#issuecomment-528197510",
            "id": 528197510,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3130",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyODE5NzUxMA==",
            "updated_at": "2019-09-05T05:00:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/528197510",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "thanks, would you say this might be expanded to a complete typecheck in the future? (not only `int`, but all builtins and `typing.Dict`, own types etc...)\r\n\r\ni am not really familiar with the source of Cython yet, but i will try",
            "created_at": "2019-09-05T06:25:55Z",
            "html_url": "https://github.com/cython/cython/issues/3130#issuecomment-528217787",
            "id": 528217787,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3130",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyODIxNzc4Nw==",
            "updated_at": "2019-09-05T06:25:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/528217787",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/16109193?v=4",
                "events_url": "https://api.github.com/users/GliderGeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/GliderGeek/followers",
                "following_url": "https://api.github.com/users/GliderGeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/GliderGeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GliderGeek",
                "id": 16109193,
                "login": "GliderGeek",
                "node_id": "MDQ6VXNlcjE2MTA5MTkz",
                "organizations_url": "https://api.github.com/users/GliderGeek/orgs",
                "received_events_url": "https://api.github.com/users/GliderGeek/received_events",
                "repos_url": "https://api.github.com/users/GliderGeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GliderGeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GliderGeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GliderGeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> would you say this might be expanded to a complete typecheck in the future?\n\nActually, \"int\" is the special case amongst the builtins here, because it was previously ignored.\n\nRegarding Dict etc., you can't really do a runtime type check for them, definitely not for their key-value types, but also because they allow subtypes with arbitrarily differing behaviour. So there is no use in these annotations for the compiler, no better assumptions that they would allow it to make. We could start showing things down a little by doing these type checks at runtime, but it feels like that counters the intention of using an optimising compiler.\n\nThis is not a strict no, I'm just saying that this is currently very low on our list.\n",
            "created_at": "2019-09-06T05:42:04Z",
            "html_url": "https://github.com/cython/cython/issues/3130#issuecomment-528717346",
            "id": 528717346,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3130",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyODcxNzM0Ng==",
            "updated_at": "2019-09-06T05:42:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/528717346",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3130/comments",
    "created_at": "2019-09-04T18:48:00Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/16109193?v=4",
                "events_url": "https://api.github.com/users/GliderGeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/GliderGeek/followers",
                "following_url": "https://api.github.com/users/GliderGeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/GliderGeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GliderGeek",
                "id": 16109193,
                "login": "GliderGeek",
                "node_id": "MDQ6VXNlcjE2MTA5MTkz",
                "organizations_url": "https://api.github.com/users/GliderGeek/orgs",
                "received_events_url": "https://api.github.com/users/GliderGeek/received_events",
                "repos_url": "https://api.github.com/users/GliderGeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GliderGeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GliderGeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GliderGeek"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-04T19:09:05Z",
            "event": "renamed",
            "id": 2608141913,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjYwODE0MTkxMw==",
            "rename": {
                "from": "question: possible to stricten typecheck?",
                "to": "question: possible to make typecheck more strict?"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/2608141913"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-05T04:45:58Z",
            "event": "labeled",
            "id": 2609233324,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDI2MDkyMzMzMjQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2609233324"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-05T04:45:58Z",
            "event": "labeled",
            "id": 2609233325,
            "label": {
                "color": "1d76db",
                "name": "good first issue"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDI2MDkyMzMzMjU=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2609233325"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-05T04:45:58Z",
            "event": "labeled",
            "id": 2609233326,
            "label": {
                "color": "0e8a16",
                "name": "help wanted"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDI2MDkyMzMzMjY=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2609233326"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-05T04:45:58Z",
            "event": "labeled",
            "id": 2609233327,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDI2MDkyMzMzMjc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2609233327"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-05T04:50:05Z",
            "event": "unlabeled",
            "id": 2609239094,
            "label": {
                "color": "1d76db",
                "name": "good first issue"
            },
            "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjYwOTIzOTA5NA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2609239094"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3130/events",
    "html_url": "https://github.com/cython/cython/issues/3130",
    "id": 489331603,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "444444",
            "default": true,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "0e8a16",
            "default": true,
            "id": 414800879,
            "name": "help wanted",
            "node_id": "MDU6TGFiZWw0MTQ4MDA4Nzk=",
            "url": "https://api.github.com/repos/cython/cython/labels/help%20wanted"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3130/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODkzMzE2MDM=",
    "number": 3130,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "question: possible to make typecheck more strict?",
    "updated_at": "2019-09-06T05:42:04Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3130",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/16109193?v=4",
        "events_url": "https://api.github.com/users/GliderGeek/events{/privacy}",
        "followers_url": "https://api.github.com/users/GliderGeek/followers",
        "following_url": "https://api.github.com/users/GliderGeek/following{/other_user}",
        "gists_url": "https://api.github.com/users/GliderGeek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/GliderGeek",
        "id": 16109193,
        "login": "GliderGeek",
        "node_id": "MDQ6VXNlcjE2MTA5MTkz",
        "organizations_url": "https://api.github.com/users/GliderGeek/orgs",
        "received_events_url": "https://api.github.com/users/GliderGeek/received_events",
        "repos_url": "https://api.github.com/users/GliderGeek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/GliderGeek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GliderGeek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/GliderGeek"
    }
}