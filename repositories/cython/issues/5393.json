{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\n\nIn my code, I would like to only create parallel/openmp regions for simple/loop constructs with a certain size.  \r\nFor instance the overhead of calling a loop construct with 10 elements (with very little work on each iteration) can be quite big.\r\nThis is already enabled by the openmp standard since 2\r\n```cython\r\nwith parallel(if=N>1000):\r\n    ... code as normal\r\n\r\n# add use case related code here\r\nfor i in prange(N, if=N>1000):\r\n    ... code as normal\r\n```\r\n\r\nThis has been in the OpenMP standard since 1.0 and is a simple:\r\n```c\r\n#pragma omp parallel if(<condition>)\r\n...\r\n```\r\nso shouldn't be too hard since everything will be handled by the compiler when setting up the parallel regions.\n\n### Describe the solution you'd like.\n\nThe only problem is that `if` is a reserved keyword, so it should be named differently:\r\n- `par_if`\r\n- `IF`\r\n- `when`\r\n- ...?\r\n\n\n### Describe alternatives you've considered.\n\n_No response_\n\n### Additional context\n\nI have tried to look into the Cython code to see if I could add the pragma declaration, but it was sadly a bit too hard for me... :(",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This sounds reasonable. It's probably medium difficulty to implement. I think we'd just call the argument `if_` - that sort of name is fairly common elsewhere in the Python world.",
            "created_at": "2023-04-18T19:30:44Z",
            "html_url": "https://github.com/cython/cython/issues/5393#issuecomment-1513690133",
            "id": 1513690133,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5393",
            "node_id": "IC_kwDOABDGAc5aORQV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1513690133/reactions"
            },
            "updated_at": "2023-04-18T19:30:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1513690133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sounds great!",
            "created_at": "2023-04-18T19:32:04Z",
            "html_url": "https://github.com/cython/cython/issues/5393#issuecomment-1513691584",
            "id": 1513691584,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5393",
            "node_id": "IC_kwDOABDGAc5aORnA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1513691584/reactions"
            },
            "updated_at": "2023-04-18T19:32:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1513691584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4789793?v=4",
                "events_url": "https://api.github.com/users/zerothi/events{/privacy}",
                "followers_url": "https://api.github.com/users/zerothi/followers",
                "following_url": "https://api.github.com/users/zerothi/following{/other_user}",
                "gists_url": "https://api.github.com/users/zerothi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zerothi",
                "id": 4789793,
                "login": "zerothi",
                "node_id": "MDQ6VXNlcjQ3ODk3OTM=",
                "organizations_url": "https://api.github.com/users/zerothi/orgs",
                "received_events_url": "https://api.github.com/users/zerothi/received_events",
                "repos_url": "https://api.github.com/users/zerothi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zerothi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zerothi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zerothi"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Don't read that as a promise to do it though! Just that it sounds like a nice feature if someone did do it!",
            "created_at": "2023-04-18T19:34:22Z",
            "html_url": "https://github.com/cython/cython/issues/5393#issuecomment-1513694020",
            "id": 1513694020,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5393",
            "node_id": "IC_kwDOABDGAc5aOSNE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1513694020/reactions"
            },
            "updated_at": "2023-04-18T19:34:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1513694020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I actually managed to do something, could somebody tell me if I am on the right track:\r\n```patch\r\ndiff --git a/Cython/Compiler/Nodes.py b/Cython/Compiler/Nodes.py\r\nindex 877e7b928..35547dc8b 100644\r\n--- a/Cython/Compiler/Nodes.py\r\n+++ b/Cython/Compiler/Nodes.py\r\n@@ -8981,7 +8981,7 @@ class ParallelStatNode(StatNode, ParallelNode):\r\n                                 construct (replaced by its compile time value)\r\n     \"\"\"\r\n \r\n-    child_attrs = ['body', 'num_threads']\r\n+    child_attrs = ['body', 'num_threads', 'if_']\r\n \r\n     body = None\r\n \r\n@@ -8992,6 +8992,7 @@ class ParallelStatNode(StatNode, ParallelNode):\r\n \r\n     num_threads = None\r\n     chunksize = None\r\n+    if_ = None\r\n \r\n     parallel_exc = (\r\n         Naming.parallel_exc_type,\r\n@@ -9034,9 +9035,10 @@ class ParallelStatNode(StatNode, ParallelNode):\r\n         self.body.analyse_declarations(env)\r\n \r\n         self.num_threads = None\r\n+        self.if_ = None\r\n \r\n         if self.kwargs:\r\n-            # Try to find num_threads and chunksize keyword arguments\r\n+            # Try to find num_threads, if_ and chunksize keyword arguments\r\n             pairs = []\r\n             seen = set()\r\n             for dictitem in self.kwargs.key_value_pairs:\r\n@@ -9046,6 +9048,9 @@ class ParallelStatNode(StatNode, ParallelNode):\r\n                 if dictitem.key.value == 'num_threads':\r\n                     if not dictitem.value.is_none:\r\n                         self.num_threads = dictitem.value\r\n+                elif dictitem.key.value == 'if_':\r\n+                    if not dictitem.value.is_none:\r\n+                        self.if_ = dictitem.value\r\n                 elif self.is_prange and dictitem.key.value == 'chunksize':\r\n                     if not dictitem.value.is_none:\r\n                         self.chunksize = dictitem.value\r\n@@ -9072,6 +9077,12 @@ class ParallelStatNode(StatNode, ParallelNode):\r\n         if self.num_threads:\r\n             self.num_threads = self.num_threads.analyse_expressions(env)\r\n \r\n+        if self.if_:\r\n+            if self.is_parallel:\r\n+                self.if_ = self.if_.analyse_expressions(env)\r\n+            else:\r\n+                error(self.pos, \"if_ must de declared in the parent parallel section\")\r\n+\r\n         if self.chunksize:\r\n             self.chunksize = self.chunksize.analyse_expressions(env)\r\n \r\n@@ -9091,6 +9102,7 @@ class ParallelStatNode(StatNode, ParallelNode):\r\n             if not self.num_threads.is_simple() or self.num_threads.type.is_pyobject:\r\n                 self.num_threads = self.num_threads.coerce_to(\r\n                     PyrexTypes.c_int_type, env).coerce_to_temp(env)\r\n+\r\n         return self\r\n \r\n     def analyse_sharing_attributes(self, env):\r\n@@ -9246,6 +9258,12 @@ class ParallelStatNode(StatNode, ParallelNode):\r\n         if self.num_threads is not None:\r\n             code.put(\" num_threads(%s)\" % self.evaluate_before_block(code, self.num_threads))\r\n \r\n+    def put_if_(self, code):\r\n+        \"\"\"\r\n+        Write self.if_ if set as the if OpenMP directive\r\n+        \"\"\"\r\n+        if self.if_ is not None:\r\n+            code.put(\" if(%s)\" % self.evaluate_before_block(code, self.if_))\r\n \r\n     def declare_closure_privates(self, code):\r\n         \"\"\"\r\n@@ -9681,9 +9699,10 @@ class ParallelWithBlockNode(ParallelStatNode):\r\n     This node represents a 'with cython.parallel.parallel():' block\r\n     \"\"\"\r\n \r\n-    valid_keyword_arguments = ['num_threads']\r\n+    valid_keyword_arguments = ['num_threads', 'if_']\r\n \r\n     num_threads = None\r\n+    if_ = None\r\n \r\n     def analyse_declarations(self, env):\r\n         super(ParallelWithBlockNode, self).analyse_declarations(env)\r\n@@ -9698,6 +9717,9 @@ class ParallelWithBlockNode(ParallelStatNode):\r\n         code.putln(\"#ifdef _OPENMP\")\r\n         code.put(\"#pragma omp parallel \")\r\n \r\n+        # Add if statement, if present\r\n+        self.put_if_(code)\r\n+\r\n         if self.privates:\r\n             privates = [e.cname for e in self.privates\r\n                         if not e.type.is_pyobject]\r\n@@ -9750,7 +9772,7 @@ class ParallelRangeNode(ParallelStatNode):\r\n     nogil = None\r\n     schedule = None\r\n \r\n-    valid_keyword_arguments = ['schedule', 'nogil', 'num_threads', 'chunksize']\r\n+    valid_keyword_arguments = ['schedule', 'nogil', 'num_threads', 'chunksize', 'if_']\r\n \r\n     def __init__(self, pos, **kwds):\r\n         super(ParallelRangeNode, self).__init__(pos, **kwds)\r\n@@ -10001,6 +10023,10 @@ class ParallelRangeNode(ParallelStatNode):\r\n             reduction_codepoint = self.parent.privatization_insertion_point\r\n         else:\r\n             code.put(\"#pragma omp parallel\")\r\n+\r\n+            # Add if-statements to code\r\n+            self.put_if_(code)\r\n+\r\n             self.privatization_insertion_point = code.insertion_point()\r\n             reduction_codepoint = self.privatization_insertion_point\r\n             code.putln(\"\")\r\n```",
            "created_at": "2023-04-19T07:24:10Z",
            "html_url": "https://github.com/cython/cython/issues/5393#issuecomment-1514255155",
            "id": 1514255155,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5393",
            "node_id": "IC_kwDOABDGAc5aQbMz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1514255155/reactions"
            },
            "updated_at": "2023-04-19T07:24:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1514255155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4789793?v=4",
                "events_url": "https://api.github.com/users/zerothi/events{/privacy}",
                "followers_url": "https://api.github.com/users/zerothi/followers",
                "following_url": "https://api.github.com/users/zerothi/following{/other_user}",
                "gists_url": "https://api.github.com/users/zerothi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zerothi",
                "id": 4789793,
                "login": "zerothi",
                "node_id": "MDQ6VXNlcjQ3ODk3OTM=",
                "organizations_url": "https://api.github.com/users/zerothi/orgs",
                "received_events_url": "https://api.github.com/users/zerothi/received_events",
                "repos_url": "https://api.github.com/users/zerothi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zerothi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zerothi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zerothi"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That definitely looks on the right track!",
            "created_at": "2023-04-19T07:41:42Z",
            "html_url": "https://github.com/cython/cython/issues/5393#issuecomment-1514279624",
            "id": 1514279624,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5393",
            "node_id": "IC_kwDOABDGAc5aQhLI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1514279624/reactions"
            },
            "updated_at": "2023-04-19T07:41:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1514279624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We'd want some test cases (which I guess you sort of have already). They'd ideally like with the other parallel tests in tests/run/parallel.pyx (or maybe one of the other similarly named file). Ideally also a short example for the documentation but that doesn't absolutely need to be in the initial PR",
            "created_at": "2023-04-19T07:47:03Z",
            "html_url": "https://github.com/cython/cython/issues/5393#issuecomment-1514287513",
            "id": 1514287513,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5393",
            "node_id": "IC_kwDOABDGAc5aQjGZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1514287513/reactions"
            },
            "updated_at": "2023-04-19T07:47:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1514287513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5393/comments",
    "created_at": "2023-04-18T19:24:33Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-18T19:31:02Z",
            "event": "labeled",
            "id": 9039486337,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "LE_lADOABDGAc5jwsF0zwAAAAIay52B",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9039486337"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5393/events",
    "html_url": "https://github.com/cython/cython/issues/5393",
    "id": 1673707892,
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5393/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5jwsF0",
    "number": 5393,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5393/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5393/timeline",
    "title": "[ENH] parallel/prange(..., if=N>100) and friends",
    "updated_at": "2023-04-19T07:47:03Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5393",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4789793?v=4",
        "events_url": "https://api.github.com/users/zerothi/events{/privacy}",
        "followers_url": "https://api.github.com/users/zerothi/followers",
        "following_url": "https://api.github.com/users/zerothi/following{/other_user}",
        "gists_url": "https://api.github.com/users/zerothi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zerothi",
        "id": 4789793,
        "login": "zerothi",
        "node_id": "MDQ6VXNlcjQ3ODk3OTM=",
        "organizations_url": "https://api.github.com/users/zerothi/orgs",
        "received_events_url": "https://api.github.com/users/zerothi/received_events",
        "repos_url": "https://api.github.com/users/zerothi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zerothi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zerothi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zerothi"
    }
}