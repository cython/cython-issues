{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nI try to build Cython 3.0.11 with Python 3.14.0a1 in Fedora Linux and get the following errors:\r\n\r\n```\r\n  Error compiling Cython file:\r\n  ------------------------------------------------------------\r\n  ...\r\n      return op, pos\r\n\r\n  def p_binop_expr(s, ops, p_sub_expr):\r\n      n1 = p_sub_expr(s)\r\n      while s.sy in ops:\r\n          op, pos = p_binop_operator(s)\r\n                                     ^\r\n  ------------------------------------------------------------\r\n\r\n  Cython/Compiler/Parsing.py:99:35: Compiler crash in AnalyseExpressionsTransform\r\n\r\n  ModuleNode.body = StatListNode(Parsing.py:6:0)\r\n  StatListNode.stats[25] = StatListNode(Parsing.py:96:0)\r\n  StatListNode.stats[0] = CFuncDefNode(Parsing.py:96:0,\r\n      args = [...]/3,\r\n      modifiers = [...]/0,\r\n      outer_attrs = [...]/2,\r\n      visibility = 'private')\r\n  File 'Nodes.py', line 397, in analyse_expressions: StatListNode(Parsing.py:97:4,\r\n      is_terminator = True)\r\n  File 'Nodes.py', line 7354, in analyse_expressions: WhileStatNode(Parsing.py:98:4)\r\n  File 'Nodes.py', line 397, in analyse_expressions: StatListNode(Parsing.py:99:8)\r\n  File 'Nodes.py', line 6056, in analyse_expressions: SingleAssignmentNode(Parsing.py:99:34)\r\n  File 'Nodes.py', line 6189, in analyse_types: SingleAssignmentNode(Parsing.py:99:34)\r\n  File 'ExprNodes.py', line 6139, in analyse_types: SimpleCallNode(Parsing.py:99:34,\r\n      analysed = True,\r\n      result_is_used = True,\r\n      use_managed_ref = True)\r\n  File 'ExprNodes.py', line 6257, in analyse_c_function_call: SimpleCallNode(Parsing.py:99:34,\r\n      analysed = True,\r\n      result_is_used = True,\r\n      use_managed_ref = True)\r\n  File 'ExprNodes.py', line 2076, in coerce_to: NameNode(Parsing.py:99:35,\r\n      cf_state = [...]/1,\r\n      is_name = True,\r\n      name = 's',\r\n      result_is_used = True,\r\n      use_managed_ref = True)\r\n  File 'ExprNodes.py', line 983, in coerce_to: NameNode(Parsing.py:99:35,\r\n      cf_state = [...]/1,\r\n      is_name = True,\r\n      name = 's',\r\n      result_is_used = True,\r\n      use_managed_ref = True)\r\n\r\n  Compiler crash traceback from this point on:\r\n    File \"/builddir/build/BUILD/Cython-3.0.11-build/cython-3.0.11/Cython/Compiler/ExprNodes.py\", line 983, in coerce_to\r\n      if src_type.is_cv_qualified:\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  AttributeError: 'NoneType' object has no attribute 'is_cv_qualified'\r\n  Compiling /builddir/build/BUILD/Cython-3.0.11-build/cython-3.0.11/Cython/Compiler/Parsing.py because it changed.\r\n  [1/1] Cythonizing /builddir/build/BUILD/Cython-3.0.11-build/cython-3.0.11/Cython/Compiler/Parsing.py\r\n  Traceback (most recent call last):\r\n    File \"/usr/lib/python3.14/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 353, in <module>\r\n      main()\r\n      ~~~~^^\r\n    File \"/usr/lib/python3.14/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 335, in main\r\n      json_out['return_val'] = hook(**hook_input['kwargs'])\r\n                               ~~~~^^^^^^^^^^^^^^^^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 251, in build_wheel\r\n      return _build_backend().build_wheel(wheel_directory, config_settings,\r\n             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                                          metadata_directory)\r\n                                          ^^^^^^^^^^^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/build_meta.py\", line 410, in build_wheel\r\n      return self._build_with_temp_dir(\r\n             ~~~~~~~~~~~~~~~~~~~~~~~~~^\r\n          ['bdist_wheel'],\r\n          ^^^^^^^^^^^^^^^^\r\n      ...<3 lines>...\r\n          self._arbitrary_args(config_settings),\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n      )\r\n      ^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/build_meta.py\", line 395, in _build_with_temp_dir\r\n      self.run_setup()\r\n      ~~~~~~~~~~~~~~^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/build_meta.py\", line 487, in run_setup\r\n      super().run_setup(setup_script=setup_script)\r\n      ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/build_meta.py\", line 311, in run_setup\r\n      exec(code, locals())\r\n      ~~~~^^^^^^^^^^^^^^^^\r\n    File \"<string>\", line 319, in <module>\r\n    File \"<string>\", line 245, in run_build\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/__init__.py\", line 104, in setup\r\n      return distutils.core.setup(**attrs)\r\n             ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/core.py\", line 185, in setup\r\n      return run_commands(dist)\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/core.py\", line 201, in run_commands\r\n      dist.run_commands()\r\n      ~~~~~~~~~~~~~~~~~^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/dist.py\", line 969, in run_commands\r\n      self.run_command(cmd)\r\n      ~~~~~~~~~~~~~~~~^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/dist.py\", line 967, in run_command\r\n      super().run_command(command)\r\n      ~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n      cmd_obj.run()\r\n      ~~~~~~~~~~~^^\r\n    File \"/usr/lib/python3.14/site-packages/wheel/bdist_wheel.py\", line 368, in run\r\n      self.run_command(\"build\")\r\n      ~~~~~~~~~~~~~~~~^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/cmd.py\", line 318, in run_command\r\n      self.distribution.run_command(command)\r\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/dist.py\", line 967, in run_command\r\n      super().run_command(command)\r\n      ~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n      cmd_obj.run()\r\n      ~~~~~~~~~~~^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/command/build.py\", line 131, in run\r\n      self.run_command(cmd_name)\r\n      ~~~~~~~~~~~~~~~~^^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/cmd.py\", line 318, in run_command\r\n      self.distribution.run_command(command)\r\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/dist.py\", line 967, in run_command\r\n      super().run_command(command)\r\n      ~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n      cmd_obj.run()\r\n      ~~~~~~~~~~~^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/command/build_ext.py\", line 345, in run\r\n      self.build_extensions()\r\n      ~~~~~~~~~~~~~~~~~~~~~^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/command/build_ext.py\", line 467, in build_extensions\r\n      self._build_extensions_serial()\r\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\r\n    File \"/usr/lib/python3.14/site-packages/setuptools/_distutils/command/build_ext.py\", line 493, in _build_extensions_serial\r\n      self.build_extension(ext)\r\n      ~~~~~~~~~~~~~~~~~~~~^^^^^\r\n    File \"/builddir/build/BUILD/Cython-3.0.11-build/cython-3.0.11/Cython/Distutils/build_ext.py\", line 130, in build_extension\r\n      new_ext = cythonize(\r\n                ~~~~~~~~~^\r\n          ext,force=self.force, quiet=self.verbose == 0, **options\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n      )[0]\r\n      ^\r\n    File \"/builddir/build/BUILD/Cython-3.0.11-build/cython-3.0.11/Cython/Build/Dependencies.py\", line 1154, in cythonize\r\n      cythonize_one(*args)\r\n      ~~~~~~~~~~~~~^^^^^^^\r\n    File \"/builddir/build/BUILD/Cython-3.0.11-build/cython-3.0.11/Cython/Build/Dependencies.py\", line 1321, in cythonize_one\r\n      raise CompileError(None, pyx_file)\r\n  Cython.Compiler.Errors.CompileError: /builddir/build/BUILD/Cython-3.0.11-build/cython-3.0.11/Cython/Compiler/Parsing.py\r\n  Building wheel for Cython (pyproject.toml): finished with status 'error'\r\n```\n\n### Code to reproduce the behaviour:\n\n_No response_\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nFedora Linux\n\n### Python version\n\nPython 3.14.0a1\n\n### Cython version\n\n3.0.11\n\n### Additional context\n\nBuild happened in our test [build system](https://copr.fedorainfracloud.org/coprs/g/python/python3.14/package/Cython). Happy to test fixes.",
    "closed_at": "2024-11-01T22:45:42Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I can reproduce this at cython master branch @ a2b9f55670b765d9b482fd7d8533f2df914e7387 (also with Python 3.14.0a1).",
            "created_at": "2024-10-18T09:27:14Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2421958097",
            "id": 2421958097,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6QXCXR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2421958097/reactions"
            },
            "updated_at": "2024-10-18T09:27:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2421958097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
                "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
                "followers_url": "https://api.github.com/users/hroncok/followers",
                "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
                "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hroncok",
                "id": 2401856,
                "login": "hroncok",
                "node_id": "MDQ6VXNlcjI0MDE4NTY=",
                "organizations_url": "https://api.github.com/users/hroncok/orgs",
                "received_events_url": "https://api.github.com/users/hroncok/received_events",
                "repos_url": "https://api.github.com/users/hroncok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hroncok",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Actually, my error is a bit different, but I build it a bit differently:\r\n\r\n```\r\n[1/1] Cythonizing .../cython/Cython/Compiler/Parsing.py\r\nwarning: Cython/Compiler/Parsing.py:100:0: noexcept clause is ignored for function returning Python object\r\nwarning: Cython/Compiler/Parsing.py:197:0: noexcept clause is ignored for function returning Python object\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\n@cython.ccall\r\ndef make_slice_node(pos, start, stop = None, step = None):\r\n    if not start:\r\n        start = ExprNodes.NoneNode(pos)\r\n                                  ^\r\n------------------------------------------------------------\r\n\r\nCython/Compiler/Parsing.py:750:34: Compiler crash in AnalyseExpressionsTransform\r\n\r\nModuleNode.body = StatListNode(Parsing.py:8:0)\r\nStatListNode.stats[65] = StatListNode(Parsing.py:747:0)\r\nStatListNode.stats[0] = CompilerDirectivesNode(Parsing.py:747:0)\r\nCompilerDirectivesNode.body = StatListNode(Parsing.py:747:0)\r\nStatListNode.stats[0] = CFuncDefNode(Parsing.py:747:0,\r\n    args = [...]/4,\r\n    modifiers = [...]/0,\r\n    outer_attrs = [...]/2,\r\n    overridable = True,\r\n    visibility = 'private')\r\nFile 'Nodes.py', line 400, in analyse_expressions: StatListNode(Parsing.py:749:4,\r\n    is_terminator = True)\r\nFile 'Nodes.py', line 344, in analyse_expressions: CompilerDirectivesNode(Parsing.py:749:4,\r\n    is_terminator = True)\r\nFile 'Nodes.py', line 400, in analyse_expressions: StatListNode(Parsing.py:749:4,\r\n    is_terminator = True)\r\nFile 'Nodes.py', line 7250, in analyse_expressions: IfStatNode(Parsing.py:749:4)\r\nFile 'Nodes.py', line 7297, in analyse_expressions: IfClauseNode(Parsing.py:749:7)\r\nFile 'Nodes.py', line 400, in analyse_expressions: StatListNode(Parsing.py:750:34)\r\nFile 'Nodes.py', line 6133, in analyse_expressions: SingleAssignmentNode(Parsing.py:750:34)\r\nFile 'Nodes.py', line 6266, in analyse_types: SingleAssignmentNode(Parsing.py:750:34)\r\nFile 'ExprNodes.py', line 6124, in analyse_types: SimpleCallNode(Parsing.py:750:34,\r\n    analysed = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 8643, in analyse_types: TupleNode(Parsing.py:750:34,\r\n    is_sequence_constructor = 1,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \".../cython/Cython/Compiler/ExprNodes.py\", line 8643, in analyse_types\r\n    if len(self.args) == 0:\r\n       ~~~^^^^^^^^^^^\r\nTypeError: object of type 'NoneType' has no len()\r\nTraceback (most recent call last):\r\n  File \".../cython/setup.py\", line 356, in <module>\r\n    run_build()\r\n    ~~~~~~~~~^^\r\n  File \".../cython/setup.py\", line 278, in run_build\r\n    setup(\r\n    ~~~~~^\r\n        name='Cython',\r\n        ^^^^^^^^^^^^^^\r\n    ...<71 lines>...\r\n        **setup_args\r\n        ^^^^^^^^^^^^\r\n    )\r\n    ^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/__init__.py\", line 117, in setup\r\n    return distutils.core.setup(**attrs)\r\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/core.py\", line 183, in setup\r\n    return run_commands(dist)\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/core.py\", line 199, in run_commands\r\n    dist.run_commands()\r\n    ~~~~~~~~~~~~~~~~~^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/dist.py\", line 954, in run_commands\r\n    self.run_command(cmd)\r\n    ~~~~~~~~~~~~~~~~^^^^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/dist.py\", line 991, in run_command\r\n    super().run_command(command)\r\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/dist.py\", line 973, in run_command\r\n    cmd_obj.run()\r\n    ~~~~~~~~~~~^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/command/build.py\", line 135, in run\r\n    self.run_command(cmd_name)\r\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/cmd.py\", line 316, in run_command\r\n    self.distribution.run_command(command)\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/dist.py\", line 991, in run_command\r\n    super().run_command(command)\r\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/dist.py\", line 973, in run_command\r\n    cmd_obj.run()\r\n    ~~~~~~~~~~~^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/command/build_ext.py\", line 98, in run\r\n    _build_ext.run(self)\r\n    ~~~~~~~~~~~~~~^^^^^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/command/build_ext.py\", line 359, in run\r\n    self.build_extensions()\r\n    ~~~~~~~~~~~~~~~~~~~~~^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/command/build_ext.py\", line 476, in build_extensions\r\n    self._build_extensions_serial()\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/_distutils/command/build_ext.py\", line 502, in _build_extensions_serial\r\n    self.build_extension(ext)\r\n    ~~~~~~~~~~~~~~~~~~~~^^^^^\r\n  File \".../cython/venv/lib64/python3.14/site-packages/setuptools/command/build_ext.py\", line 263, in build_extension\r\n    _build_ext.build_extension(self, ext)\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^\r\n  File \".../cython/Cython/Distutils/build_ext.py\", line 129, in build_extension\r\n    new_ext = cythonize(\r\n              ~~~~~~~~~^\r\n        ext,force=self.force, quiet=self.verbose == 0, **options\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    )[0]\r\n    ^\r\n  File \".../cython/Cython/Build/Dependencies.py\", line 1109, in cythonize\r\n    cythonize_one(*args)\r\n    ~~~~~~~~~~~~~^^^^^^^\r\n  File \".../cython/Cython/Build/Dependencies.py\", line 1256, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: .../cython/Cython/Compiler/Parsing.py\r\n```",
            "created_at": "2024-10-18T09:28:46Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2421961166",
            "id": 2421961166,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6QXDHO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2421961166/reactions"
            },
            "updated_at": "2024-10-18T09:31:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2421961166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
                "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
                "followers_url": "https://api.github.com/users/hroncok/followers",
                "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
                "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hroncok",
                "id": 2401856,
                "login": "hroncok",
                "node_id": "MDQ6VXNlcjI0MDE4NTY=",
                "organizations_url": "https://api.github.com/users/hroncok/orgs",
                "received_events_url": "https://api.github.com/users/hroncok/received_events",
                "repos_url": "https://api.github.com/users/hroncok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hroncok",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The crashes apparently happen while running Cython as pure Python code that translates a Python module in Cython itself. That suggests a bug in CPython rather than Cython. Recent work in CPython is strongly geared towards performance improvements, touching almost all parts of the implementation. While there is a certain chance that we're doing something special in Cython's Python code, I wouldn't be surprised to see further user code breakage in CPython, especially in an early alpha release. I still remember Victor's \"break the world\" move in Py3.13a1. This seems small in comparison.",
            "created_at": "2024-10-18T15:04:32Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2422685781",
            "id": 2422685781,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6QZ0BV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2422685781/reactions"
            },
            "updated_at": "2024-10-18T15:04:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2422685781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I still remember Victor's \"break the world\" move in Py3.13a1.\r\n\r\nSee https://discuss.python.org/t/remove-again-private-apis-which-now-have-new-public-replacement/68081/1 about that for 3.14 (he's asking what to do so it's a chance to influence the course of action).\r\n\r\n----\r\n\r\nThe \"crash\" seem to be this:\r\n\r\n```\r\n  Compiler crash traceback from this point on:\r\n    File \"/builddir/build/BUILD/Cython-3.0.11-build/cython-3.0.11/Cython/Compiler/ExprNodes.py\", line 983, in coerce_to\r\n      if src_type.is_cv_qualified:\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  AttributeError: 'NoneType' object has no attribute 'is_cv_qualified'\r\n```\r\n\r\n```\r\nCompiler crash traceback from this point on:\r\n  File \".../cython/Cython/Compiler/ExprNodes.py\", line 8643, in analyse_types\r\n    if len(self.args) == 0:\r\n       ~~~^^^^^^^^^^^\r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n\r\nThis does not sound like \"interpreter crush\" to me, but honestly this is a bit too magical for me :)",
            "created_at": "2024-10-18T15:09:06Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2422695580",
            "id": 2422695580,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6QZ2ac",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2422695580/reactions"
            },
            "updated_at": "2024-10-18T15:09:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2422695580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
                "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
                "followers_url": "https://api.github.com/users/hroncok/followers",
                "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
                "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hroncok",
                "id": 2401856,
                "login": "hroncok",
                "node_id": "MDQ6VXNlcjI0MDE4NTY=",
                "organizations_url": "https://api.github.com/users/hroncok/orgs",
                "received_events_url": "https://api.github.com/users/hroncok/received_events",
                "repos_url": "https://api.github.com/users/hroncok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hroncok",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I also see this with CPython main, I'm working on bisecting it.",
            "created_at": "2024-10-18T15:12:50Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2422702858",
            "id": 2422702858,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6QZ4MK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2422702858/reactions"
            },
            "updated_at": "2024-10-18T15:12:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2422702858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "```\r\n@ git bisect log\r\n# bad: [2e950e341930ea79549137d4d3771d5edb940e65] Add tests for time.strftime() with invalid format string (GH-125696)\r\n# good: [8204014280fcb07c9321305a729716326e625c6e] [3.13] Add tests for time.strftime() with invalid format string (GH-125696) (GH-125702)\r\ngit bisect start 'main' '3.13'\r\n# good: [2268289a47c6e3c9a220b53697f9480ec390466f] Python 3.13.0b1\r\ngit bisect good 2268289a47c6e3c9a220b53697f9480ec390466f\r\n# good: [d52726ccd456833ea9f09cabb4b8aef09755e472] Document ``mimetypes.MimeTypes.add_type()`` (#122301)\r\ngit bisect good d52726ccd456833ea9f09cabb4b8aef09755e472\r\n# good: [aba42c0b547e6395c9c268cf98a298d0494cb9df] gh-123969: refactor _PyErr_RaiseSyntaxError and _PyErr_EmitSyntaxWarning out of compiler (#123972)\r\ngit bisect good aba42c0b547e6395c9c268cf98a298d0494cb9df\r\n# bad: [1d4e3e0585c1051ec182666668137fbb0fc1a4d2] gh-111178: Fix locale_free() signature (#124896)\r\ngit bisect bad 1d4e3e0585c1051ec182666668137fbb0fc1a4d2\r\n# bad: [909c6f718913e713c990d69e6d8a74c05f81e2c2] gh-123884 Tee of tee was not producing n independent iterators (gh-124490)\r\ngit bisect bad 909c6f718913e713c990d69e6d8a74c05f81e2c2\r\n# good: [c87b0e4a462f98c418f750c6c95d4d8715c38332] GH-124284: Add stats for refcount operations on immortal objects (GH-124288)\r\ngit bisect good c87b0e4a462f98c418f750c6c95d4d8715c38332\r\n# bad: [4a5e4aade420c594c5b3fe0589e9e6b444bd6ee5] gh-59317: Improve parsing optional positional arguments in argparse (GH-124303)\r\ngit bisect bad 4a5e4aade420c594c5b3fe0589e9e6b444bd6ee5\r\n# good: [38a887dc3ec52c4a7222279bf4b3ca2431b86de9] gh-119004: fix a crash in equality testing between `OrderedDict` (#121329)\r\ngit bisect good 38a887dc3ec52c4a7222279bf4b3ca2431b86de9\r\n# bad: [9d344fafc4385cb2e17425b77b54660ca83c61ac] gh-124127: Make Py_REFCNT() opaque in limited C API 3.14 (#124128)\r\ngit bisect bad 9d344fafc4385cb2e17425b77b54660ca83c61ac\r\n# bad: [d87482bc4ee9458d6ba16140e7bc008637dbbb16] gh-119333: Add C api to have contextvar enter/exit callbacks (#119335)\r\ngit bisect bad d87482bc4ee9458d6ba16140e7bc008637dbbb16\r\n# bad: [be76e3f26e0b907f711497d006b8b83bff04c036] gh-100980: ctypes: Test, document, and fix finalizing _fields_ (GH-124292)\r\ngit bisect bad be76e3f26e0b907f711497d006b8b83bff04c036\r\n# good: [e256a7590a0149feadfef161ed000991376dc0e8] Lint and format Tools/build/check-warnings.py (#124382)\r\ngit bisect good e256a7590a0149feadfef161ed000991376dc0e8\r\n# first bad commit: [be76e3f26e0b907f711497d006b8b83bff04c036] gh-100980: ctypes: Test, document, and fix finalizing _fields_ (GH-124292)\r\n```\r\n\r\nvia https://github.com/python/cpython/pull/124292 \r\n\r\n\r\n(`git bisect run ...` is super usful!)",
            "created_at": "2024-10-18T16:11:41Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2422811484",
            "id": 2422811484,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6QaStc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2422811484/reactions"
            },
            "updated_at": "2024-10-18T17:18:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2422811484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> [python/cpython#124292](https://github.com/python/cpython/pull/124292)\r\n\r\nThat's a change in `ctypes`, though. We don't use that anywhere. I don't see how that change could be related.",
            "created_at": "2024-10-18T16:30:36Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2422842092",
            "id": 2422842092,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6QaaLs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2422842092/reactions"
            },
            "updated_at": "2024-10-18T16:30:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2422842092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "hmm, something went wrong with my bisect script as the log claims e256a7590a0149feadfef161ed000991376dc0e8 worked, but trying again does not...",
            "created_at": "2024-10-18T17:17:58Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2422914872",
            "id": 2422914872,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6Qar84",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2422914872/reactions"
            },
            "updated_at": "2024-10-18T17:17:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2422914872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "A second attempt (I think starting from 3.13 as the \"good\" version confused git with the branch)\r\n\r\n```\r\n@ git bisect log\r\ngit bisect start\r\n# status: waiting for both good and bad commits\r\n# good: [5a1205b641df133932ed4c65b9a4ff5724e89963] gh-111499: Fix PYTHONMALLOCSTATS at Python exit (#120021)\r\ngit bisect good 5a1205b641df133932ed4c65b9a4ff5724e89963\r\n# status: waiting for bad commit, 1 good commit known\r\n# bad: [2e950e341930ea79549137d4d3771d5edb940e65] Add tests for time.strftime() with invalid format string (GH-125696)\r\ngit bisect bad 2e950e341930ea79549137d4d3771d5edb940e65\r\n# bad: [7b8328b6b33939dfff4606d286b10069a09223dd] GH-121723: Skip test_config_queue_handler_multiprocessing_context in emulated JIT CI (#122969)\r\ngit bisect bad 7b8328b6b33939dfff4606d286b10069a09223dd\r\n# good: [59be79ae60073f7b6bdf6ce921560c279937e4ab] gh-108297: Update crashers README for test_crashers removal (#121475)\r\ngit bisect good 59be79ae60073f7b6bdf6ce921560c279937e4ab\r\n# good: [bb108580dec5d8655ccdfb6c8737b5f64e3366d0] gh-122087: Add tests for ismethoddescriptor() and isroutine() with partial objects (GH-122219)\r\ngit bisect good bb108580dec5d8655ccdfb6c8737b5f64e3366d0\r\n# good: [06eb9701a182b4720dfa8766cb41cc5a3728a8b9] Doc: Grammar fix in ``library/ssl.rst``, 'Verifying certificates' (#122646)\r\ngit bisect good 06eb9701a182b4720dfa8766cb41cc5a3728a8b9\r\n# bad: [57d7c3e78fb635a0c6ccce38ec3e2f4284d5fac7] gh-122247: Move instruction instrumentation sanity check after tracing check (#122251)\r\ngit bisect bad 57d7c3e78fb635a0c6ccce38ec3e2f4284d5fac7\r\n# bad: [4b66b6b7d6e65f9eb2d61435b9b37ffeb7bb00fb] gh-120104: IDLE: Fix padding in config and search dialogs (#120107)\r\ngit bisect bad 4b66b6b7d6e65f9eb2d61435b9b37ffeb7bb00fb\r\n# bad: [44659d392751f0161a0f958fec39ad013da45427] GH-118943: Handle races when moving jit_stencils.h (GH-120690)\r\ngit bisect bad 44659d392751f0161a0f958fec39ad013da45427\r\n# good: [f5c39b3e9cc88d1eaa9229d610b0221305a83ad9] gh-122661: Remove GNU make-specific directive from Doc/Makefile (#122662)\r\ngit bisect good f5c39b3e9cc88d1eaa9229d610b0221305a83ad9\r\n# good: [5207adf228547273b0e8d0253c23c69b95d7fe11] build(deps-dev): bump mypy from 1.10.1 to 1.11.1 in /Tools (#122550)\r\ngit bisect good 5207adf228547273b0e8d0253c23c69b95d7fe11\r\n# good: [1bb955a2fe0237721c141fdfe520fd3ba46db11e] gh-122459: Optimize pickling by name objects without __module__ (GH-122460)\r\ngit bisect good 1bb955a2fe0237721c141fdfe520fd3ba46db11e\r\n# bad: [5bd72912a1a85be96092de302608a4298741c6cd] GH-122616: Simplify LOAD_ATTR_WITH_HINT and STORE_ATTR_WITH_HINT (GH-122620)\r\ngit bisect bad 5bd72912a1a85be96092de302608a4298741c6cd\r\n# first bad commit: [5bd72912a1a85be96092de302608a4298741c6cd] GH-122616: Simplify LOAD_ATTR_WITH_HINT and STORE_ATTR_WITH_HINT (GH-122620)\r\n```\r\n\r\nHowever, this produces a slightly different error:\r\n\r\n```\r\n      [1/1] Cythonizing /home/tcaswell/source/p/cython/cython/Cython/Compiler/Parsing.py\r\n      warning: Cython/Compiler/Parsing.py:100:0: noexcept clause is ignored for function returning Python object\r\n      warning: Cython/Compiler/Parsing.py:197:0: noexcept clause is ignored for function returning Python object\r\n\r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n              if ctx.api:\r\n                  s.error(\"'api' not allowed with this statement\", fatal=False)\r\n              elif s.sy == 'def':\r\n                  # def statements aren't allowed in pxd files, except\r\n                  # as part of a cdef class\r\n                  if ('pxd' in ctx.level) and (ctx.level != 'c_class_pxd'):\r\n                            ^\r\n      ------------------------------------------------------------\r\n\r\n      Cython/Compiler/Parsing.py:2598:22: Compiler crash in AnalyseExpressionsTransform\r\n\r\n      ModuleNode.body = StatListNode(Parsing.py:8:0)\r\n      StatListNode.stats[138] = StatListNode(Parsing.py:2530:0)\r\n      StatListNode.stats[0] = CompilerDirectivesNode(Parsing.py:2530:0)\r\n      CompilerDirectivesNode.body = StatListNode(Parsing.py:2530:0)\r\n      StatListNode.stats[0] = CFuncDefNode(Parsing.py:2530:0,\r\n          args = [...]/3,\r\n          modifiers = [...]/0,\r\n          outer_attrs = [...]/2,\r\n          visibility = 'private')\r\n      File 'Nodes.py', line 400, in analyse_expressions: StatListNode(Parsing.py:2532:4)\r\n      File 'Nodes.py', line 344, in analyse_expressions: CompilerDirectivesNode(Parsing.py:2532:4)\r\n      File 'Nodes.py', line 400, in analyse_expressions: StatListNode(Parsing.py:2532:4)\r\n      File 'Nodes.py', line 7252, in analyse_expressions: IfStatNode(Parsing.py:2579:4)\r\n      File 'Nodes.py', line 400, in analyse_expressions: StatListNode(Parsing.py:2593:8)\r\n      File 'Nodes.py', line 7250, in analyse_expressions: IfStatNode(Parsing.py:2593:8)\r\n      File 'Nodes.py', line 7297, in analyse_expressions: IfClauseNode(Parsing.py:2595:13,\r\n          is_terminator = True)\r\n      File 'Nodes.py', line 400, in analyse_expressions: StatListNode(Parsing.py:2598:12,\r\n          is_terminator = True)\r\n      File 'Nodes.py', line 7250, in analyse_expressions: IfStatNode(Parsing.py:2598:12)\r\n      File 'Nodes.py', line 7296, in analyse_expressions: IfClauseNode(Parsing.py:2598:15)\r\n      File 'ExprNodes.py', line 644, in analyse_temp_boolean_expression: BoolBinopNode(Parsing.py:2598:36,\r\n          is_temp = True,\r\n          operator = 'and',\r\n          result_is_used = True,\r\n          use_managed_ref = True)\r\n      File 'ExprNodes.py', line 12937, in analyse_types: BoolBinopNode(Parsing.py:2598:36,\r\n          is_temp = True,\r\n          operator = 'and',\r\n          result_is_used = True,\r\n          use_managed_ref = True)\r\n      File 'ExprNodes.py', line 13718, in analyse_types: PrimaryCmpNode(Parsing.py:2598:22,\r\n          operator = 'in',\r\n          result_is_used = True,\r\n          use_managed_ref = True)\r\n      File 'ExprNodes.py', line 13476, in is_ptr_contains: PrimaryCmpNode(Parsing.py:2598:22,\r\n          operator = 'in',\r\n          result_is_used = True,\r\n          use_managed_ref = True)\r\n\r\n      Compiler crash traceback from this point on:\r\n        File \"/home/tcaswell/source/p/cython/cython/Cython/Compiler/ExprNodes.py\", line 13476, in is_ptr_contains\r\n          return (container_type.is_ptr or container_type.is_array) \\\r\n                  ^^^^^^^^^^^^^^^^^^^^^\r\n      AttributeError: 'NoneType' object has no attribute 'is_ptr'\r\n```\r\n\r\nso I also worry that it has been broken/fixed a couple of times which is also making the bisect hard.",
            "created_at": "2024-10-18T17:58:45Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2422973468",
            "id": 2422973468,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6Qa6Qc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2422973468/reactions"
            },
            "updated_at": "2024-10-18T17:58:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2422973468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If I had to take a wild guess I'd think it might be something going wrong with `__hash__` or `__eq__` for the contents of PyrexTypes.py. We were certainly caught be a change in the behaviour if you get an exception while evaluating `__eq__` in 3.13 (which I think was concluded to be \"our fault\") so it's possible that something similar might be happening again.\r\n\r\nThat it a complete guess though, just based on the idea that we've seen something similar before and it does look like types aren't been found correctly.",
            "created_at": "2024-10-18T18:07:02Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2422986330",
            "id": 2422986330,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6Qa9Za",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2422986330/reactions"
            },
            "updated_at": "2024-10-18T18:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2422986330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, the symptoms hint at something like `__hash__`. Also that the error appears unstable – the hash variation across Python runs may well induce that. I'll try if setting `PYTHONHASHSEED` makes the `bisect` more stable.\r\n\r\nEDIT: The concrete error varies in similar ways, so it's not simply that.",
            "created_at": "2024-10-18T20:11:06Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2423162819",
            "id": 2423162819,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6QbofD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2423162819/reactions"
            },
            "updated_at": "2024-10-18T20:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2423162819",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've reported the issue in the original CPython PR for now.",
            "created_at": "2024-10-18T20:56:32Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2423221475",
            "id": 2423221475,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6Qb2zj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2423221475/reactions"
            },
            "updated_at": "2024-10-18T20:56:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2423221475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've created the issue https://github.com/python/cpython/issues/125868. Definitely a Python bug not a Cython bug - I get some very weird output from pdb.",
            "created_at": "2024-10-23T06:47:12Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2431061437",
            "id": 2431061437,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6Q5w29",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2431061437/reactions"
            },
            "updated_at": "2024-10-23T06:47:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2431061437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is fixed on the current 3.13 branch.",
            "created_at": "2024-11-01T20:13:43Z",
            "html_url": "https://github.com/cython/cython/issues/6426#issuecomment-2452525108",
            "id": 2452525108,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6426",
            "node_id": "IC_kwDOABDGAc6SLpA0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2452525108/reactions"
            },
            "updated_at": "2024-11-01T20:13:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2452525108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6426/comments",
    "created_at": "2024-10-18T09:00:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-10-21T04:18:20Z",
            "event": "subscribed",
            "id": 14757477640,
            "node_id": "SE_lADOABDGAc6aybQNzwAAAANvnT0I",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14757477640"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-01T22:45:42Z",
            "event": "closed",
            "id": 15075435894,
            "node_id": "CE_lADOABDGAc6aybQNzwAAAAOCkOV2",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15075435894"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-01T22:45:56Z",
            "event": "labeled",
            "id": 15075437123,
            "label": {
                "color": "000000",
                "name": "R: third party"
            },
            "node_id": "LE_lADOABDGAc6aybQNzwAAAAOCkOpD",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15075437123"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6426/events",
    "html_url": "https://github.com/cython/cython/issues/6426",
    "id": 2596910093,
    "labels": [
        {
            "color": "000000",
            "default": false,
            "description": "",
            "id": 1840758668,
            "name": "R: third party",
            "node_id": "MDU6TGFiZWwxODQwNzU4NjY4",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20third%20party"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6426/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6aybQN",
    "number": 6426,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/cython/cython/issues/6426/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6426/timeline",
    "title": "[BUG] [HEADS UP] Cython build failure with Python 3.14.0a1",
    "updated_at": "2024-11-01T22:45:56Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6426",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33810531?v=4",
        "events_url": "https://api.github.com/users/befeleme/events{/privacy}",
        "followers_url": "https://api.github.com/users/befeleme/followers",
        "following_url": "https://api.github.com/users/befeleme/following{/other_user}",
        "gists_url": "https://api.github.com/users/befeleme/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/befeleme",
        "id": 33810531,
        "login": "befeleme",
        "node_id": "MDQ6VXNlcjMzODEwNTMx",
        "organizations_url": "https://api.github.com/users/befeleme/orgs",
        "received_events_url": "https://api.github.com/users/befeleme/received_events",
        "repos_url": "https://api.github.com/users/befeleme/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/befeleme/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/befeleme/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/befeleme",
        "user_view_type": "public"
    }
}