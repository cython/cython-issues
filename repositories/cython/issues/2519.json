{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Given the code below, all of the functions compile except for `mysum2`.\r\n\r\n<details>\r\n\r\n```cython\r\ncdef double mysum0(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>len(a)):\r\n        r += a[i]\r\n    return r\r\n\r\n\r\ncdef double mysum1(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a)):\r\n        r += a[i]\r\n    return r\r\n\r\n\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a), <size_t>1):\r\n        r += a[i]\r\n    return r\r\n```\r\n\r\n</details>\r\n\r\n<br>\r\n\r\nThe errors generated by Cython for `mysum2` are as follows. \r\n\r\n<details>\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a), <size_t>1):\r\n            ^\r\n------------------------------------------------------------\r\n\r\ntest_range.pyx:20:13: Coercion from Python not allowed without the GIL\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a), <size_t>1):\r\n            ^\r\n------------------------------------------------------------\r\n\r\ntest_range.pyx:20:13: Iterating over Python object not allowed without gil\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a), <size_t>1):\r\n                 ^\r\n------------------------------------------------------------\r\n\r\ntest_range.pyx:20:18: Calling gil-requiring function not allowed without gil\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a), <size_t>1):\r\n                 ^\r\n------------------------------------------------------------\r\n\r\ntest_range.pyx:20:18: Constructing Python tuple not allowed without gil\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a), <size_t>1):\r\n                  ^\r\n------------------------------------------------------------\r\n\r\ntest_range.pyx:20:19: Converting to Python object not allowed without gil\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a), <size_t>1):\r\n                             ^\r\n------------------------------------------------------------\r\n\r\ntest_range.pyx:20:30: Converting to Python object not allowed without gil\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i in range(<size_t>0, <size_t>len(a), <size_t>1):\r\n                                             ^\r\n------------------------------------------------------------\r\n\r\ntest_range.pyx:20:46: Converting to Python object not allowed without gil\r\n```\r\n\r\n</details>\r\n\r\n<br>\r\n\r\nDetails about the environment used below. This was run on my Mac, but expect the error to occur independently of the OS used.\r\n\r\n<details>\r\n\r\n```yaml\r\nname: cython\r\nchannels:\r\n  - conda-forge\r\n  - defaults\r\ndependencies:\r\n  - appdirs=1.4.3=py_1\r\n  - appnope=0.1.0=py36_0\r\n  - asn1crypto=0.24.0=py_1\r\n  - attrs=18.1.0=py_1\r\n  - automat=0.7.0=py36_0\r\n  - backcall=0.1.0=py_0\r\n  - blas=1.1=openblas\r\n  - bleach=2.1.3=py_0\r\n  - ca-certificates=2018.4.16=0\r\n  - certifi=2018.4.16=py36_0\r\n  - cffi=1.11.5=py36_0\r\n  - constantly=15.1.0=py_0\r\n  - cryptography=2.3=py36hdffb7b8_0\r\n  - cryptography-vectors=2.3=py36_0\r\n  - cython=0.28.4=py36hfc679d8_0\r\n  - decorator=4.3.0=py_0\r\n  - entrypoints=0.2.3=py36_1\r\n  - html5lib=1.0.1=py_0\r\n  - hyperlink=17.3.1=py_0\r\n  - idna=2.7=py36_2\r\n  - incremental=17.5.0=py_0\r\n  - ipykernel=4.8.2=py36_0\r\n  - ipython=6.4.0=py36_0\r\n  - ipython_genutils=0.2.0=py_1\r\n  - jedi=0.12.0=py36_0\r\n  - jinja2=2.10=py_1\r\n  - jsonschema=2.6.0=py36_1\r\n  - jupyter_client=5.2.3=py_1\r\n  - jupyter_core=4.4.0=py_0\r\n  - libffi=3.2.1=3\r\n  - libgfortran=3.0.0=0\r\n  - libsodium=1.0.16=0\r\n  - line_profiler=2.1.2=py36h470a237_1\r\n  - markupsafe=1.0=py36_0\r\n  - mistune=0.8.3=py36_1\r\n  - nbconvert=5.3.1=py_1\r\n  - nbformat=4.4.0=py_1\r\n  - ncurses=6.1=0\r\n  - notebook=5.6.0=py36_0\r\n  - numpy=1.14.5=py36_blas_openblashd3ea46f_201\r\n  - openblas=0.2.20=8\r\n  - openssl=1.0.2o=0\r\n  - pandoc=2.2.2=hde52d81_1\r\n  - pandocfilters=1.4.2=py_1\r\n  - parso=0.3.0=py_0\r\n  - pexpect=4.6.0=py36_0\r\n  - pickleshare=0.7.4=py36_0\r\n  - prometheus_client=0.3.0=py_0\r\n  - prompt_toolkit=1.0.15=py36_0\r\n  - ptyprocess=0.6.0=py36_0\r\n  - pyasn1=0.4.3=py_0\r\n  - pyasn1-modules=0.2.1=py_0\r\n  - pycparser=2.18=py_1\r\n  - pygments=2.2.0=py_1\r\n  - pyhamcrest=1.9.0=py_2\r\n  - pyopenssl=18.0.0=py36_0\r\n  - python=3.6.5=1\r\n  - python-dateutil=2.7.3=py_0\r\n  - pyzmq=17.1.0=py36hae99301_0\r\n  - readline=7.0=haf1bffa_1\r\n  - scipy=1.1.0=py36_blas_openblashd3ea46f_201\r\n  - send2trash=1.5.0=py_0\r\n  - service_identity=17.0.0=py_0\r\n  - setuptools=40.0.0=py36_0\r\n  - simplegeneric=0.8.1=py_1\r\n  - six=1.11.0=py36_1\r\n  - sqlite=3.20.1=0\r\n  - terminado=0.8.1=py36_0\r\n  - testpath=0.3.1=py36_0\r\n  - tk=8.6.8=0\r\n  - tornado=5.1=py36_0\r\n  - traitlets=4.3.2=py36_0\r\n  - wcwidth=0.1.7=py_1\r\n  - webencodings=0.5.1=py36_0\r\n  - xz=5.2.3=0\r\n  - zeromq=4.2.5=hfc679d8_4\r\n  - zlib=1.2.11=h470a237_3\r\n  - zope.interface=4.5.0=py36h470a237_0\r\n  - twisted=17.5.0=py36_0\r\n```\r\n\r\n</details>",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Should add that if `mysum2` is rewritten using the `for ... from ... by ...` (as shown below), this compiles fine.\r\n\r\n<details>\r\n\r\n```cython\r\ncdef double mysum2(double[:] a) nogil:\r\n    cdef size_t i\r\n    cdef double r = 0\r\n    for i from <size_t>0 <= i < <size_t>len(a) by <size_t>1:\r\n        r += a[i]\r\n    return r\r\n```\r\n\r\n</details>",
            "created_at": "2018-07-25T18:13:52Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-407847026",
            "id": 407847026,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg0NzAyNg==",
            "performed_via_github_app": null,
            "updated_at": "2018-07-25T18:13:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/407847026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is a known issue. When using `step`, Cython falls back to the python implementation of `range`. So the GIL must be acquired, which is against the `nogil` declaration. See #532 to track the progress of this issue.",
            "created_at": "2018-07-25T21:28:04Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-407901707",
            "id": 407901707,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzkwMTcwNw==",
            "performed_via_github_app": null,
            "updated_at": "2018-07-25T21:28:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/407901707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12891691?v=4",
                "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
                "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
                "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gabrieldemarmiesse",
                "id": 12891691,
                "login": "gabrieldemarmiesse",
                "node_id": "MDQ6VXNlcjEyODkxNjkx",
                "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
                "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
                "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gabrieldemarmiesse"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "To be a bit clearer, dropping the `<size_t>` from the `step` parameter let's it compile fine. So having a `step` in `range` is not a problem. Having the `step` be cast to `<size_t>` (and possibly other types) is problematic.",
            "created_at": "2018-07-31T15:25:31Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-409261619",
            "id": 409261619,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTI2MTYxOQ==",
            "performed_via_github_app": null,
            "updated_at": "2018-07-31T15:25:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/409261619",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The problem is that a) Cython has to know the step value at translation time in order to generate the loop comparisons in the right direction, and b) the exact details about `size_t` are only known at C compilation time, i.e. after Cython is done with all. This might become clearer if you used `<char>200` as step – impossible for Cython to guess the sign there.\r\n\r\nWe could probably special case a couple of more expressions here, but there are always limits to the assumptions that Cython can make.",
            "created_at": "2018-07-31T19:07:49Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-409333811",
            "id": 409333811,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTMzMzgxMQ==",
            "performed_via_github_app": null,
            "updated_at": "2018-07-31T19:07:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/409333811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Trying `unsigned int` ran into the same issues. Not sure based on the statement above whether this is expected or not.\r\n\r\nHandling `size_t` and other `unsigned` types would be nice. Except for pathological cases, expect this should follow using the existing logic fine.\r\n\r\nFor signed types, would it be reasonable for Cython to generate some code that looks roughly like the following? Or is there something I'm missing?\r\n\r\n```c\r\nif (step > 0) {\r\n    for (i = start; i < stop; i += step) {\r\n        ...\r\n    }\r\n} else {\r\n    for (i = start; i > stop; i += step) {\r\n        ...\r\n    }\r\n}",
            "created_at": "2018-07-31T19:30:47Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-409340430",
            "id": 409340430,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM0MDQzMA==",
            "performed_via_github_app": null,
            "updated_at": "2018-07-31T19:30:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/409340430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The problem with that example is the duplication of the `...`, which can be an arbitrarily large chunk of code. Also, there's the case of `step == 0`.\r\n\r\nAnd the problem with `unsigned` is that it's not always 100% clear at the Cython level what is unsigned and what isn't, where wrap-arounds happen, etc. Thus my example with `char` where the sign is platform dependent. If it's explicit, then we might be able to do something about it.",
            "created_at": "2018-07-31T19:41:58Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-409343584",
            "id": 409343584,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM0MzU4NA==",
            "performed_via_github_app": null,
            "updated_at": "2018-07-31T19:42:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/409343584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That's fair. Let's play with it a bit then. What about this?\r\n\r\n```c\r\nfor (i = start; (step > 0) ? (i < stop) : (i > stop); i += step) {\r\n    ...\r\n}\r\n```\r\n\r\n\r\nHmm...thought `char` was always signed. In any event, if it's ambiguous, agree assuming is problematic. Though things like `unsigned int` or `size_t` should be clear.",
            "created_at": "2018-07-31T20:15:21Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-409353103",
            "id": 409353103,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM1MzEwMw==",
            "performed_via_github_app": null,
            "updated_at": "2018-07-31T20:15:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/409353103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That would work--it would be an extra condition on each loop but likely faster than Python (and any decent C compiler should optimize away a `step >= 0` if `step` is actually unsigned (though it may be a warning in that case)). One issue is what we should do if we can't raise an exception if `step == 0`.",
            "created_at": "2018-08-01T03:40:51Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-409439304",
            "id": 409439304,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTQzOTMwNA==",
            "performed_via_github_app": null,
            "updated_at": "2018-08-01T03:40:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/409439304",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> ...it would be an extra condition on each loop but likely faster than Python (and any decent C compiler should optimize away a `step >= 0` if `step` is actually unsigned (though it may be a warning in that case)).\r\n\r\nWe could always turn this into an `inline`d `cdef` function using `fused` types to specialize the `unsigned` cases with a simpler check.\r\n\r\n> One issue is what we should do if we can't raise an exception if `step == 0`.\r\n\r\nDon't think we should do anything. The user can trivially generate the same problematic code with the old `for ... from ... by ...` syntax even if the step is a constant, `0`. Cython compiles this without issues.",
            "created_at": "2018-08-01T06:40:57Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-409466520",
            "id": 409466520,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTQ2NjUyMA==",
            "performed_via_github_app": null,
            "updated_at": "2018-08-01T06:40:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/409466520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Cython compiles this without issues.\n\nWhich doesn't mean that it should stay that way.\n",
            "created_at": "2018-08-01T11:35:31Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-409545182",
            "id": 409545182,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTU0NTE4Mg==",
            "performed_via_github_app": null,
            "updated_at": "2018-08-01T11:35:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/409545182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Agreed, but that is an orthogonal issue.",
            "created_at": "2018-08-17T13:50:04Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-413872131",
            "id": 413872131,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg3MjEzMQ==",
            "performed_via_github_app": null,
            "updated_at": "2018-08-17T13:50:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/413872131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is this [the right function]( https://github.com/cython/cython/blob/2f76bba58c8a30dbc889b40ed330335613c79a7a/Cython/Compiler/Optimize.py#L482 ) to be looking at? Should one be changing [this]( https://github.com/cython/cython/blob/2f76bba58c8a30dbc889b40ed330335613c79a7a/Cython/Compiler/Optimize.py#L633-L640 )? Or is there a better way to go about this?\r\n\r\nEdit: Should one be changing [this block]( https://github.com/cython/cython/blob/c2be000c859aaf744457afdf43c2c06bd047b598/Cython/Compiler/Nodes.py#L6912-L6925 ) as well?",
            "created_at": "2019-02-15T20:10:11Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-464183415",
            "id": 464183415,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE4MzQxNQ==",
            "performed_via_github_app": null,
            "updated_at": "2019-02-15T20:12:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/464183415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`_transform_carray_iteration()` is not the right place. It's for iteration over C-arrays.\r\n\r\nThe tree restructuring code for the `range()` loops is in [Optimize.py](https://github.com/cython/cython/blob/2f76bba58c8a30dbc889b40ed330335613c79a7a/Cython/Compiler/Optimize.py#L287), but that's not the only related code. Sadly, the `range()` optimisation is sprinkled across a couple of places, including flow control analysis and type inference (actually search for `range optimization`). Cleaning that up is a long-standing problem, together with #1159. But it shouldn't impact the issue here.\r\n\r\nAlso see PR #368.",
            "created_at": "2019-02-15T20:40:23Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-464191448",
            "id": 464191448,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE5MTQ0OA==",
            "performed_via_github_app": null,
            "updated_at": "2019-02-15T20:40:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/464191448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hello,\r\nI'm facing the same issue with unsigned steps using `range` \r\nisn't still any fix to this ?\r\n\r\nI find a bit sad to be obliged to convert from the natural python code to  `for ... from ... by ... `  just for a concern about a sign which is anyway absent  ...",
            "created_at": "2021-07-05T19:54:31Z",
            "html_url": "https://github.com/cython/cython/issues/2519#issuecomment-874302934",
            "id": 874302934,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2519",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDMwMjkzNA==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-05T19:54:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/874302934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7940753?v=4",
                "events_url": "https://api.github.com/users/jimy-byerley/events{/privacy}",
                "followers_url": "https://api.github.com/users/jimy-byerley/followers",
                "following_url": "https://api.github.com/users/jimy-byerley/following{/other_user}",
                "gists_url": "https://api.github.com/users/jimy-byerley/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jimy-byerley",
                "id": 7940753,
                "login": "jimy-byerley",
                "node_id": "MDQ6VXNlcjc5NDA3NTM=",
                "organizations_url": "https://api.github.com/users/jimy-byerley/orgs",
                "received_events_url": "https://api.github.com/users/jimy-byerley/received_events",
                "repos_url": "https://api.github.com/users/jimy-byerley/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jimy-byerley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jimy-byerley/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jimy-byerley"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2519/comments",
    "created_at": "2018-07-25T17:59:21Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-07-31T19:41:53Z",
            "event": "labeled",
            "id": 1763602048,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE3NjM2MDIwNDg=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1763602048"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-07-31T19:41:53Z",
            "event": "labeled",
            "id": 1763602050,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE3NjM2MDIwNTA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1763602050"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-07-31T19:41:54Z",
            "event": "labeled",
            "id": 1763602054,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE3NjM2MDIwNTQ=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1763602054"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2519/events",
    "html_url": "https://github.com/cython/cython/issues/2519",
    "id": 344546888,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2519/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNDQ1NDY4ODg=",
    "number": 2519,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Cython range dislikes size_t step",
    "updated_at": "2021-07-05T19:54:31Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2519",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jakirkham",
        "id": 3019665,
        "login": "jakirkham",
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jakirkham"
    }
}