{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**Note:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report.\r\n-->\r\n\r\n**Describe the bug**\r\nAn extension type definition with fused type in `__cinit__` leads to a C++ compilation error. I am not sure if this is because my code is not valid Cython or there is a bug.\r\n\r\n**To Reproduce**\r\nCode to reproduce the behaviour:\r\n```cython\r\n\r\nctypedef fused ndcomplexview_t:\r\n    complex[::1]\r\n    complex[:, ::1]\r\n    complex[:, :, ::1]\r\n\r\n\r\ncdef class Foo:\r\n    cdef complex *data\r\n    def __cinit__(self, ndcomplexview_t arr):\r\n        if ndcomplexview_t is complex[::1]:\r\n            self.data = &arr[0]\r\n        elif ndcomplexview_t is complex[:, ::1]:\r\n            self.data = &arr[0, 0]\r\n        elif ndcomplexview_t is complex[:, :, ::1]:\r\n            self.data = &arr[0, 0, 0]\r\n```\r\n\r\nthrows:\r\n\r\n```\r\ncc1plus: warning: command line option '-Wstrict-prototypes' is valid for C/ObjC but not for C++\r\n/home/fmheu/.cache/ipython/cython/_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d.cpp:2918:110: error: expected primary-expression before 'static'\r\n static PyMethodDef __pyx_fuse_0__pyx_mdef_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_3__cinit__ = static int __pyx_fuse_0__pyx_pw_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {\r\n                                                                                                              ^~~~~~\r\n/home/fmheu/.cache/ipython/cython/_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d.cpp:2969:1: error: expected ',' or ';' before 'static'\r\n static int __pyx_pf_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_2__cinit__(struct __pyx_obj_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_Foo *__pyx_v_self, __Pyx_memviewslice __pyx_v_arr) {\r\n ^~~~~~\r\n/home/fmheu/.cache/ipython/cython/_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d.cpp:3020:110: error: expected primary-expression before 'static'\r\n static PyMethodDef __pyx_fuse_1__pyx_mdef_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_5__cinit__ = static int __pyx_fuse_1__pyx_pw_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_5__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {\r\n                                                                                                              ^~~~~~\r\n/home/fmheu/.cache/ipython/cython/_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d.cpp:3071:1: error: expected ',' or ';' before 'static'\r\n static int __pyx_pf_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_4__cinit__(struct __pyx_obj_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_Foo *__pyx_v_self, __Pyx_memviewslice __pyx_v_arr) {\r\n ^~~~~~\r\n/home/fmheu/.cache/ipython/cython/_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d.cpp:3128:110: error: expected primary-expression before 'static'\r\n static PyMethodDef __pyx_fuse_2__pyx_mdef_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_7__cinit__ = static int __pyx_fuse_2__pyx_pw_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_7__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {\r\n                                                                                                              ^~~~~~\r\n/home/fmheu/.cache/ipython/cython/_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d.cpp:3179:1: error: expected ',' or ';' before 'static'\r\n static int __pyx_pf_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_3Foo_6__cinit__(struct __pyx_obj_46_cython_magic_fed3fa8885216b9d3fc7a5864874ea9d_Foo *__pyx_v_self, __Pyx_memviewslice __pyx_v_arr) {\r\n ^~~~~~\r\n```\r\n**Expected behavior**\r\nI would expect an error in Cython compilation step, if above is not allowed in Cython.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Linux\r\n - Version 0.29.21 and 3.0a5\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "I suspect this is a duplicate of https://github.com/cython/cython/issues/1359 (but that one's a little light on details).\r\n\r\nIt probably should work, or at least fail earlier and with a clearer message.\r\n\r\nIf you're looking for a workaround you could probably do something like:\r\n\r\n```\r\nctypedef fused ndcomplexview_t:\r\n    complex[::1]\r\n    complex[:, ::1]\r\n    complex[:, :, ::1]\r\n\r\ndef actual_cinit(Foo self, ndcomplexview_t arr):\r\n        if ndcomplexview_t is complex[::1]:\r\n            self.data = &arr[0]\r\n        elif ndcomplexview_t is complex[:, ::1]:\r\n            self.data = &arr[0, 0]\r\n        elif ndcomplexview_t is complex[:, :, ::1]:\r\n            self.data = &arr[0, 0, 0]     \r\n\r\ncdef class Foo:\r\n    cdef complex *data\r\n    def __cinit__(self, arr):\r\n        actual_cinit(self, arr)\r\n```",
            "created_at": "2020-07-26T20:07:56Z",
            "html_url": "https://github.com/cython/cython/issues/3758#issuecomment-664034090",
            "id": 664034090,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDAzNDA5MA==",
            "performed_via_github_app": null,
            "updated_at": "2020-07-27T09:46:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/664034090",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Indeed, moving the type declarations out of the `__cinit__` arguments avoids the problem. Thanks for the workaround!",
            "created_at": "2020-07-27T07:47:00Z",
            "html_url": "https://github.com/cython/cython/issues/3758#issuecomment-664179086",
            "id": 664179086,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDE3OTA4Ng==",
            "performed_via_github_app": null,
            "updated_at": "2020-07-27T07:47:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/664179086",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6132231?v=4",
                "events_url": "https://api.github.com/users/fhchl/events{/privacy}",
                "followers_url": "https://api.github.com/users/fhchl/followers",
                "following_url": "https://api.github.com/users/fhchl/following{/other_user}",
                "gists_url": "https://api.github.com/users/fhchl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fhchl",
                "id": 6132231,
                "login": "fhchl",
                "node_id": "MDQ6VXNlcjYxMzIyMzE=",
                "organizations_url": "https://api.github.com/users/fhchl/orgs",
                "received_events_url": "https://api.github.com/users/fhchl/received_events",
                "repos_url": "https://api.github.com/users/fhchl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fhchl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fhchl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fhchl"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3758/comments",
    "created_at": "2020-07-26T18:40:36Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3758/events",
    "html_url": "https://github.com/cython/cython/issues/3758",
    "id": 665837357,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3758/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2NjU4MzczNTc=",
    "number": 3758,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "C++ compilation error for fused type in `__cinit__`",
    "updated_at": "2020-07-27T09:46:15Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3758",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/6132231?v=4",
        "events_url": "https://api.github.com/users/fhchl/events{/privacy}",
        "followers_url": "https://api.github.com/users/fhchl/followers",
        "following_url": "https://api.github.com/users/fhchl/following{/other_user}",
        "gists_url": "https://api.github.com/users/fhchl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fhchl",
        "id": 6132231,
        "login": "fhchl",
        "node_id": "MDQ6VXNlcjYxMzIyMzE=",
        "organizations_url": "https://api.github.com/users/fhchl/orgs",
        "received_events_url": "https://api.github.com/users/fhchl/received_events",
        "repos_url": "https://api.github.com/users/fhchl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fhchl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fhchl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fhchl"
    }
}