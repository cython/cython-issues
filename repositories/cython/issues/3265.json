{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Mac OS version 10.14\r\nPython 3.7.3\r\nusing cython V0.29.1\r\n\r\nThe following code compile correctly. but crush in run time:\r\n\r\ncython code:\r\n\r\n```\r\n    class GlobalFunctions:\r\n        ITER_FUNC = None\r\n\r\n    cdef class INSTANCE:\r\n    \r\n        def do_iter(self, *args, **kwargs):\r\n            yield from GlobalFunctions.ITER_FUNC(*args, **kwargs)\r\n```\r\n    \r\n\r\npython code:\r\n\r\n```\r\ndef user_iter(x=1,b=None):\r\n    for i in range(10):\r\n        yield i\r\n\r\nGlobalFunctions.ITER_FUNC = user_iter\r\n\r\nt = INSTANCE()\r\nfor x in t.do_iter():\r\n    print(x)\r\n```\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is to do with generator functions that can receive keyword arguments but aren't passed them. Here's a much simpler example:\r\n```\r\ndef f(**kwargs):\r\n    yield 0\r\n    \r\nf()\r\n```\r\n\r\nIt generates a segmentation fault when you import the module.\r\n\r\nIt crashes in the function `__pyx_pf_13iterkwd_crash_f` (`iterkwd_crash` is the module name):\r\n\r\n    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_kwargs);\r\n\r\n`__kyx_v_kwargs` is NULL. The function is called from `__pyx_pw_13iterkwd_crash_1f` where `__pyx_v_kwargs` is recognised as unused and set to 0.",
            "created_at": "2019-12-10T10:17:43Z",
            "html_url": "https://github.com/cython/cython/issues/3265#issuecomment-563965055",
            "id": 563965055,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3265",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mzk2NTA1NQ==",
            "updated_at": "2019-12-10T10:17:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/563965055",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I can get a few different variants of generated code depending on what I do with `kwargs`:\r\n\r\n```\r\ndef g():\r\n    return 0\r\n\r\ndef f(**kwargs):\r\n    yield g(**kwargs)\r\n    \r\nf()\r\n```\r\n\r\ngives\r\n\r\n```\r\nif (__pyx_kwds) {\r\n    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return NULL;\r\n    __Pyx_GOTREF(__pyx_v_kwargs);\r\n  } else {\r\n    __pyx_v_kwargs = NULL;\r\n  }\r\n```\r\n\r\n(i.e. `kwargs` is deliberately set to `NULL` if not passed, thus segfault).\r\n\r\nIn contrast\r\n\r\n```\r\ndef f(**kwargs):\r\n    yield from kwargs.keys()\r\n    \r\nf()\r\n```\r\n\r\nDoesn't crash, since `kwargs` is initialized to an empty dictionary if not passed\r\n\r\n    __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;",
            "created_at": "2019-12-10T10:25:49Z",
            "html_url": "https://github.com/cython/cython/issues/3265#issuecomment-563968186",
            "id": 563968186,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3265",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mzk2ODE4Ng==",
            "updated_at": "2019-12-10T10:25:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/563968186",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3265/comments",
    "created_at": "2019-12-09T12:48:57Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3265/events",
    "html_url": "https://github.com/cython/cython/issues/3265",
    "id": 534908621,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3265/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MzQ5MDg2MjE=",
    "number": 3265,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "cython crush in runtime using yield",
    "updated_at": "2019-12-10T10:25:50Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3265",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/45462824?v=4",
        "events_url": "https://api.github.com/users/idokoren1/events{/privacy}",
        "followers_url": "https://api.github.com/users/idokoren1/followers",
        "following_url": "https://api.github.com/users/idokoren1/following{/other_user}",
        "gists_url": "https://api.github.com/users/idokoren1/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/idokoren1",
        "id": 45462824,
        "login": "idokoren1",
        "node_id": "MDQ6VXNlcjQ1NDYyODI0",
        "organizations_url": "https://api.github.com/users/idokoren1/orgs",
        "received_events_url": "https://api.github.com/users/idokoren1/received_events",
        "repos_url": "https://api.github.com/users/idokoren1/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/idokoren1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/idokoren1/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/idokoren1"
    }
}