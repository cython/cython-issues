{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "There is no way to declare C enums in Python syntax.\r\nNot sure what a good syntax for this would be. Maybe:\r\n\r\n- a decorator `@cython.cenum` on a Python enum class\r\n- a function `cython.cenum(…)` that accepts string names and/or keyword arguments for enum values\r\n- something else?\r\n\r\nThere should probably also be a way to declare a C++ enum in a similar way (e.g. as `cppenum`).\r\n\r\nIt would certainly be nice if the Python implementation in `Shadow.py` used Python enums.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "> C++ enum in a similar way (e.g. as `cppenum`)\r\n\r\nShouldn't this be specified by the `language` option? Although there is `cclass` and `cppclass` ...",
            "created_at": "2021-06-28T20:53:15Z",
            "html_url": "https://github.com/cython/cython/issues/4252#issuecomment-870033642",
            "id": 870033642,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4252",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDAzMzY0Mg==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-28T21:18:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/870033642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > C++ enum in a similar way (e.g. as `cppenum`)\r\n> \r\n> Shouldn't this be specified by the `language` option? Although there is `cclass` and` cppclass` ...\r\n\r\nI don't see why we should force users to define only C++ enums in C++ mode. It's better to keep the choice in their hands.",
            "created_at": "2021-06-28T21:13:45Z",
            "html_url": "https://github.com/cython/cython/issues/4252#issuecomment-870046644",
            "id": 870046644,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4252",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDA0NjY0NA==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-28T21:13:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/870046644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> * a function `cython.cenum(…)` that accepts string names and/or keyword arguments for enum value\r\n\r\nIf сython can support something like this at a sufficient level, both options are worth doing. (I take the option with a decorator and python enums as a prerequisite)\r\n```python\r\ndef create_enum(**kwargs):\r\n    ...\r\n    return cython.cenum(**kwargs)\r\n```\r\nrather\r\n```python\r\nMyEnum = cython.cenum(**some_kws)\r\n```",
            "created_at": "2021-06-29T11:34:12Z",
            "html_url": "https://github.com/cython/cython/issues/4252#issuecomment-870516722",
            "id": 870516722,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4252",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDUxNjcyMg==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-29T11:34:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/870516722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4252/comments",
    "created_at": "2021-06-28T18:33:13Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-06-28T18:33:13Z",
            "event": "labeled",
            "id": 4949130705,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ5NDkxMzA3MDU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4949130705"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-06-28T18:33:13Z",
            "event": "labeled",
            "id": 4949130706,
            "label": {
                "color": "444444",
                "name": "Pure Python Mode"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ5NDkxMzA3MDY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4949130706"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4252/events",
    "html_url": "https://github.com/cython/cython/issues/4252",
    "id": 931850641,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558499,
            "name": "Pure Python Mode",
            "node_id": "MDU6TGFiZWw0MjU1NTg0OTk=",
            "url": "https://api.github.com/repos/cython/cython/labels/Pure%20Python%20Mode"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4252/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MzE4NTA2NDE=",
    "number": 4252,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] Support enum declarations in pure Python mode",
    "updated_at": "2021-06-29T11:34:12Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4252",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}