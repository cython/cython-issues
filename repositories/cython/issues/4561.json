{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I have these files to reproduce the problem, mod2.pxd:\r\n```\r\ncdef void myapi()\r\n\r\ncdef cppclass myclass:\r\n    void mymethod()\r\n```\r\n\r\nmod2.pyx\r\n```\r\ncdef void myapi():\r\n    print(\"I am OK (from myapi)\")\r\n\r\ncdef cppclass myclass:\r\n    void mymethod():\r\n        # Using anything C is OK\r\n        cdef int i = 0\r\n        i += 1\r\n\r\n        # Crash with Python var\r\n        # Segmentation fault\r\n        j = 0\r\n        j += 1\r\n\r\n        # Crash with Python function\r\n        # Segmentation fault\r\n        print(\"I am crashing!\")\r\n```\r\n\r\nmod1.pxd\r\n```\r\ncdef void myfunc()\r\n```\r\n\r\nmod1.pyx\r\n```\r\nfrom mod2 cimport myapi, myclass\r\n\r\ncdef cppclass foo:\r\n    void bar():\r\n        print(\"I am OK (from foo.bar)\")\r\n\r\ncdef void myfunc():\r\n    print(\"I am OK\")\r\n    myapi()\r\n    cdef foo f\r\n    f.bar()\r\n\r\n    # Stack var: Segmentation fault\r\n    print(\"Calling myclass.mymethod...\")\r\n    cdef myclass t\r\n    t.mymethod()\r\n\r\n    # # Pointer: Segmentation fault\r\n    # print(\"Calling myclass.mymethod...\")\r\n    # cdef myclass* t2 = new myclass()\r\n    # t2.mymethod()\r\n\r\ncpdef test():\r\n    myfunc()\r\n```\r\n\r\nMain Python programme app.py\r\n```\r\nimport mod1\r\nmod1.test()\r\n```\r\n\r\nIt's a segmentation fault which happens in a Cython struct `myclass` when using anything Python. Also in mod2, but the global function `myapi` is OK. From a struct method `foo.bar` but in the same file is also OK.\r\n\r\nI'm using Python 3.8.2, and Cython 0.29.26\r\n\r\nmod1 and mod2 are translated into C++ with `cython -3 --cplus` command, and compiled with `gcc` to .so files. It happened the same if using Python build tool. As suggested from https://stackoverflow.com/a/55669343/5581893 I tried to add -DCYTHON_PEP489_MULTI_PHASE_INIT=0 to all gcc commands but no help.\r\n\r\nThis situation seems strange, why are Python stuff not touch-able from mod2 (fails in struct only)?",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Probably not a Cython issue. Make sure you initialise the Python runtime for C++ threads before you use it, and make sure you initialise the cimported API before you use anything from it.\n",
            "created_at": "2022-01-07T13:55:31Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007425298",
            "id": 1007425298,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48DBcS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007425298/reactions"
            },
            "updated_at": "2022-01-07T13:55:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007425298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Probably not a Cython issue. Make sure you initialise the Python runtime for C++ threads before you use it, and make sure you initialise the cimported API before you use anything from it.\r\n\r\nMight be interesting, but those files above are not using threads. Should it be related?\r\n\r\nI've added Python.h header to both mod1.pyx and mod2.pyx and call Py_Initialize() and Py_InitializeEx(0) in both of them. Also Py_IsInitialized() returns 1 but it still fails.",
            "created_at": "2022-01-07T14:23:39Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007444337",
            "id": 1007444337,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48DGFx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007444337/reactions"
            },
            "updated_at": "2022-01-07T15:06:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007444337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Could you remove the public and api modifiers from the functions (or everywhere), to see if that makes it work? You don't need them in your example. Even if you want to use the (public) Cython functions in your C++ code, you don't need the api modifiers.\n",
            "created_at": "2022-01-07T16:14:00Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007535378",
            "id": 1007535378,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48DcUS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007535378/reactions"
            },
            "updated_at": "2022-01-07T16:14:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007535378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Could you remove the public and api modifiers from the functions (or everywhere), to see if that makes it work? You don't need them in your example. Even if you want to use the (public) Cython functions in your C++ code, you don't need the api modifiers.\r\n\r\nI tried to removed all those modifiers just now but the result is not different. All the `__Pyx_*` calls in `mymethod` fails, but work in `myapi` function although they are in the same file. It happens in a Cython module cimported from another Cython module only, the one imported from Python source code works perfectly fine.",
            "created_at": "2022-01-07T16:26:14Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007544279",
            "id": 1007544279,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48DefX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007544279/reactions"
            },
            "updated_at": "2022-01-07T16:28:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007544279",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As suggested from https://stackoverflow.com/a/55669343/5581893 I tried to add -DCYTHON_PEP489_MULTI_PHASE_INIT=0 to all gcc commands\r\n\r\nThat's unrelated. IIUC, you're not embedding Python in a C++ application here (and even then, that would be the wrong thing to do).",
            "created_at": "2022-01-07T18:41:19Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007645334",
            "id": 1007645334,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48D3KW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007645334/reactions"
            },
            "updated_at": "2022-01-07T18:41:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007645334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I just get link errors when I try to import it:\r\n\r\n```\r\nundefined symbol: _ZTV21__pyx_t_4mod2_myclass\r\n```\r\n\r\nI'd be a little worried that you've done something odd to make it link and your errors are due to that.",
            "created_at": "2022-01-07T18:59:17Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007657433",
            "id": 1007657433,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48D6HZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007657433/reactions"
            },
            "updated_at": "2022-01-07T18:59:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007657433",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Could you remove the public and api modifiers from the functions (or everywhere)\r\n> >\r\n> I tried to removed all those modifiers just now but the result is not different.\r\n\r\nThanks for verifying that. Seems like it's a Cython issue after all. Sharing the C++ class across modules seems to generate incorrect code that duplicates the C++ class definition on both sides, but only one side knows about the implementation. Meaning, the C++ class is not actually shared.",
            "created_at": "2022-01-07T19:00:47Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007658472",
            "id": 1007658472,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48D6Xo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007658472/reactions"
            },
            "updated_at": "2022-01-07T19:00:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007658472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Yes - almost certainly that. The line that'll be segfaulting will be:\r\n\r\n```\r\n__Pyx_INCREF(__pyx_int_0);\r\n```\r\n\r\n(i.e. Cython has created a global constant for the Python int 0). Because you've linked it in an odd way, but never actually imported `mod2` that variable isn't initialized.",
            "created_at": "2022-01-07T19:01:15Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007658824",
            "id": 1007658824,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48D6dI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007658824/reactions"
            },
            "updated_at": "2022-01-07T19:01:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007658824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> you've linked it in an odd way\r\n\r\nMaybe as well, but I think the issue really is that Cython doesn't know a way to share C++ classes via .pxd files that are only implemented in a .pyx file. The module that cimports that `cppclass` ends up with a C++ class in which all methods are virtual. That's unhelpful.\r\n\r\nThat duplication is not a problem for C structs, but C++ classes have methods that the other side needs to know about.",
            "created_at": "2022-01-07T19:12:37Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007667310",
            "id": 1007667310,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48D8hu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007667310/reactions"
            },
            "updated_at": "2022-01-07T19:12:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007667310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "It isn't particularly obvious how to do it. For the `myapi` function it's handled via: \r\n\r\n```\r\n__Pyx_ImportFunction(__pyx_t_1, \"myapi\", (void (**)(void))&__pyx_f_4mod2_myapi, \"void (void)\") < 0)\r\n```\r\n\r\nbut I don't think it's possible to do a similar thing for a C++ class (especially for things like destructors, which are invoked automatically so we can't just write a wrapper function to call them)",
            "created_at": "2022-01-07T19:32:23Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007681448",
            "id": 1007681448,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48D_-o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007681448/reactions"
            },
            "updated_at": "2022-01-07T19:32:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007681448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I just get link errors when I try to import it:\r\n> \r\n> ```\r\n> undefined symbol: _ZTV21__pyx_t_4mod2_myclass\r\n> ```\r\n> \r\n> I'd be a little worried that you've done something odd to make it link and your errors are due to that.\r\n\r\nUhm, after having 2 files .o, link them both to mod1.so, and also to mod2.so to avoid undefined symbol, I did so.",
            "created_at": "2022-01-07T20:45:45Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007729307",
            "id": 1007729307,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48ELqb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007729307/reactions"
            },
            "updated_at": "2022-01-07T20:45:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007729307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Sharing the C++ class across modules seems to generate incorrect code that duplicates the C++ class definition on both sides, but only one side knows about the implementation. Meaning, the C++ class is not actually shared.\r\n\r\nThis cross-module call may be necessary I guess. I'm migrating a Python project to Cython and there are multiple classes with cross-module calls everywhere (plus, some lines are still Python).",
            "created_at": "2022-01-07T21:01:22Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007737758",
            "id": 1007737758,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48ENue",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007737758/reactions"
            },
            "updated_at": "2022-01-07T21:21:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007737758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Uhm, after having 2 files .o, link them both to mod1.so, and also to mod2.so to avoid undefined symbol, I did so.\r\n\r\nThat's not how Python extension modules work. The normal way to use them is one .so file per module. You can link them together, but then you have to tell Python that there is more than one module in it so that it can properly import them all. That's done with the [inittab](https://docs.python.org/3/c-api/import.html#c.PyImport_AppendInittab) mechanism.",
            "created_at": "2022-01-07T21:20:00Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007748840",
            "id": 1007748840,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48EQbo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007748840/reactions"
            },
            "updated_at": "2022-01-07T21:20:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007748840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Oh yeah, that inittab. What I guess now is that Cython's cimport does list global functions in inittab but not struct members. That's why `myapi` works smoothly with Python vars+funcs but not `mymethod`.",
            "created_at": "2022-01-08T07:52:01Z",
            "html_url": "https://github.com/cython/cython/issues/4561#issuecomment-1007904205",
            "id": 1007904205,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4561",
            "node_id": "IC_kwDOABDGAc48E2XN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1007904205/reactions"
            },
            "updated_at": "2022-01-08T07:52:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1007904205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4561/comments",
    "created_at": "2022-01-07T13:30:45Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
                "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/datdinhquoc/followers",
                "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datdinhquoc",
                "id": 40449395,
                "login": "datdinhquoc",
                "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
                "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
                "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
                "repos_url": "https://api.github.com/users/datdinhquoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datdinhquoc"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-07T13:31:31Z",
            "event": "renamed",
            "id": 5857868241,
            "node_id": "RTE_lADOABDGAc5BWILAzwAAAAFdJ_nR",
            "performed_via_github_app": null,
            "rename": {
                "from": "Segmentation fault with Python stuff, in a method of a struct called from struct",
                "to": "Segmentation fault with Python stuff, in a method of a struct in second module"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/5857868241"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-07T18:43:15Z",
            "event": "labeled",
            "id": 5859395058,
            "label": {
                "color": "f9d0c4",
                "name": "C++"
            },
            "node_id": "LE_lADOABDGAc5BWILAzwAAAAFdP0Xy",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5859395058"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-07T18:43:15Z",
            "event": "labeled",
            "id": 5859395062,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc5BWILAzwAAAAFdP0X2",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5859395062"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-07T18:57:23Z",
            "event": "labeled",
            "id": 5859455056,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "LE_lADOABDGAc5BWILAzwAAAAFdQDBQ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5859455056"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-07T18:57:23Z",
            "event": "labeled",
            "id": 5859455058,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "LE_lADOABDGAc5BWILAzwAAAAFdQDBS",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5859455058"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-07T21:15:16Z",
            "event": "unlabeled",
            "id": 5860013249,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "UNLE_lADOABDGAc5BWILAzwAAAAFdSLTB",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5860013249"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-07T21:15:16Z",
            "event": "labeled",
            "id": 5860013255,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "LE_lADOABDGAc5BWILAzwAAAAFdSLTH",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5860013255"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-07T21:15:19Z",
            "event": "renamed",
            "id": 5860013438,
            "node_id": "RTE_lADOABDGAc5BWILAzwAAAAFdSLV-",
            "performed_via_github_app": null,
            "rename": {
                "from": "Segmentation fault with Python stuff, in a method of a struct in second module",
                "to": "Allow sharing C++ classes across modules"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/5860013438"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4561/events",
    "html_url": "https://github.com/cython/cython/issues/4561",
    "id": 1096319680,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4561/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5BWILA",
    "number": 4561,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4561/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4561/timeline",
    "title": "Allow sharing C++ classes across modules",
    "updated_at": "2022-01-08T07:52:01Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4561",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/40449395?v=4",
        "events_url": "https://api.github.com/users/datdinhquoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/datdinhquoc/followers",
        "following_url": "https://api.github.com/users/datdinhquoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/datdinhquoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/datdinhquoc",
        "id": 40449395,
        "login": "datdinhquoc",
        "node_id": "MDQ6VXNlcjQwNDQ5Mzk1",
        "organizations_url": "https://api.github.com/users/datdinhquoc/orgs",
        "received_events_url": "https://api.github.com/users/datdinhquoc/received_events",
        "repos_url": "https://api.github.com/users/datdinhquoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/datdinhquoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/datdinhquoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/datdinhquoc"
    }
}