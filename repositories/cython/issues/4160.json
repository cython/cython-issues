{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently stack allocated C++ classes and temps require default constructors since they're initialized at the start of the function.\r\n\r\n```\r\ncdef extern from *:\r\n    cdef cppclass Someclass:\r\n        pass\r\n    SomeClass func() except +\r\n\r\ndef f(make_someclass: bool):\r\n   if make_someclass:\r\n      a = func()\r\n```\r\n\r\nthis generates code along the lines of:\r\n\r\n```\r\nPyObject* f(...) {\r\n   Someclass a\r\n   Someclass __pyx_t_1;\r\n   if (make_someclass) {\r\n      try {\r\n          __pyx_t_1 = make_someclass();\r\n      } catch (...) {\r\n           // exception handling here\r\n      }\r\n      a = __PYX_MOVE_IF_POSSIBLE(__pyx_t_1);\r\n   }\r\n}\r\n```\r\n\r\nThis puts restrictions on what c++ types can be used on the stack (or even as return types of functions, because of the temps creates)\r\n\r\n**Describe the solution you'd like**\r\n\r\n`std::optional` provides a way around this. It'd be possible to create the stack variables as:\r\n\r\n```\r\nstd::optional<Someclass> a;\r\nstd::optional<Someclass> __pyx_t_1;\r\n```\r\n\r\nThese keep keep track of whether it's been assigned, and handle destruction etc. as needed.\r\n\r\nMy proposal is that this should be an opt-in feature, controlled by a directive. There's a number of good reasons not to do it by default:\r\n\r\n* C++17 only (which is a fairly hefty requirement)\r\n* Potential performance changes (due to extra space usage, and \"initialized tests\"\r\n* Changes in Cython behaviour - accessing an uninitialized C++ variable becomes a potential crash rather than an access to a valid default-initialized object.\r\n\r\nI think the Cython type system would have to know about the `std::optional` and treat them as a slightly different type to the raw classes - `*optional` gets to the underlying class, which is a trivial coercion, but one that can't happen automatically.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThe status quo.\r\n\r\nReimplement `std::optional` (i.e. it's a library feature, I don't think it requires a significant compiler support). That would reduce the compiler requirement, but require more effort. It could also be implemented in terms of `std::optional` first then revisited if need.\r\n\r\n**Additional context**\r\n\r\nExceptions from constructors/operators are a potential problem. But equally exceptions from default/copy/move constructors/operators are an issue in Cython currently.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "> C++17 only (which is a fairly hefty requirement)\r\n\r\nThere are backports even for C++98\r\n\r\n> Potential performance changes (due to extra space usage, and \"initialized tests\"\r\n\r\nAs an alternative we could use `std::aligned_storage` and placement new as of C++11: https://en.cppreference.com/w/cpp/types/aligned_storage",
            "created_at": "2021-05-14T19:48:19Z",
            "html_url": "https://github.com/cython/cython/issues/4160#issuecomment-841465802",
            "id": 841465802,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4160",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ2NTgwMg==",
            "performed_via_github_app": null,
            "updated_at": "2021-05-14T19:48:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/841465802",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> > C++17 only (which is a fairly hefty requirement)\r\n> \r\n> There are backports even for C++98\r\n\r\nTrue. Notably the Boost version which I suspect is more of a forward port.\r\n\r\nI was mainly trying not to write it myself (I expect there's a lot of details to get right to do it well...) and partly thinking that some standard library dependency is probably acceptable for the initial implementation of an optional feature. It can always been made to work more widely later.\r\n\r\n> \r\n> > Potential performance changes (due to extra space usage, and \"initialized tests\"\r\n>\r\n> As an alternative we could use `std::aligned_storage` and placement new as of C++11: https://en.cppreference.com/w/cpp/types/aligned_storage\r\n\r\nI don't think aligned_storage plus placement new would help too much on it's own - you'd still need to track which objects are initialized so that they can be destructed and once you've done that you've largely just reimplemented optional.\r\n\r\n",
            "created_at": "2021-05-14T20:34:34Z",
            "html_url": "https://github.com/cython/cython/issues/4160#issuecomment-841486819",
            "id": 841486819,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4160",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ4NjgxOQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-05-14T20:35:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/841486819",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4160/comments",
    "created_at": "2021-05-14T17:23:33Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-14T17:23:33Z",
            "event": "labeled",
            "id": 4748119990,
            "label": {
                "color": "f9d0c4",
                "name": "C++"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3NDgxMTk5OTA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4748119990"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-14T17:23:33Z",
            "event": "labeled",
            "id": 4748119992,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3NDgxMTk5OTI=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4748119992"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-14T17:23:33Z",
            "event": "milestoned",
            "id": 4748119997,
            "milestone": {
                "title": "wishlist"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDQ3NDgxMTk5OTc=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4748119997"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4160/events",
    "html_url": "https://github.com/cython/cython/issues/4160",
    "id": 892105659,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4160/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 39,
        "created_at": "2016-08-16T08:38:52Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
            "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
            "followers_url": "https://api.github.com/users/robertwb/followers",
            "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
            "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/robertwb",
            "id": 486017,
            "login": "robertwb",
            "node_id": "MDQ6VXNlcjQ4NjAxNw==",
            "organizations_url": "https://api.github.com/users/robertwb/orgs",
            "received_events_url": "https://api.github.com/users/robertwb/received_events",
            "repos_url": "https://api.github.com/users/robertwb/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/robertwb"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/6",
        "id": 1944442,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lMTk0NDQ0Mg==",
        "number": 6,
        "open_issues": 157,
        "state": "open",
        "title": "wishlist",
        "updated_at": "2021-05-14T17:23:33Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/6"
    },
    "node_id": "MDU6SXNzdWU4OTIxMDU2NTk=",
    "number": 4160,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] Avoid need for C++ default constructors",
    "updated_at": "2021-05-14T20:35:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4160",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}