{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Trying to debug the issue described in [this comment](https://github.com/samuelcolvin/pydantic/pull/799#issuecomment-560144353), I found that when a return type is annotated as `str`, Cython is preventing me from returning a *subclass* of `str`.\r\n\r\nIn particular, consider the following function: https://github.com/samuelcolvin/pydantic/blob/151143deb4eaf6a5e2dce4532659e5ee9e2e4713/pydantic/validators.py#L58-L61\r\n\r\n```python\r\ndef strict_str_validator(v: Any) -> str:\r\n    if isinstance(v, str):\r\n        return v\r\n    raise errors.StrError()\r\n```\r\n\r\nThe generated C code for the return statement adds a `PyString_CheckExact`, which [doesn't allow returning a subclass of `str`](https://py3c.readthedocs.io/en/latest/reference.html#c.PyStr_CheckExact):\r\n```\r\n+058: def strict_str_validator(v: Any) -> str:\r\n+059:     if isinstance(v, str):\r\n+060:         return v\r\n    __Pyx_XDECREF(__pyx_r);\r\n    if (!(likely(PyString_CheckExact(__pyx_v_v))||((__pyx_v_v) == Py_None)||(PyErr_Format(PyExc_TypeError, \"Expected %.16s, got %.200s\", \"str\", Py_TYPE(__pyx_v_v)->tp_name), 0))) __PYX_ERR(0, 60, __pyx_L1_error)\r\n    __Pyx_INCREF(__pyx_v_v);\r\n    __pyx_r = ((PyObject*)__pyx_v_v);\r\n    goto __pyx_L0;\r\n+061:     raise errors.StrError()\r\n```\r\n\r\nIs there a reason `PyStr_CheckExact` is used instead of `PyStr_Check`?\r\n\r\nIs there a workaround for this that would allow us to return subclasses of `str` without raising a `TypeError`? Our current workaround is to change the return type annotation to `typing.Union[str]` instead of `str`, but it would be great if we didn't have to do this.",
    "closed_at": "2019-12-02T23:32:54Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Cython generally uses exact checks when doing type checks for builtins. It’s because if it’s known to be the exact subclass, Cython can use all the internal details of the string to optimise code - access the character array directly for example. If you set the [compile directive](http://docs.cython.org/en/latest/src/userguide/source_files_and_compilation.html#compiler-directives) `annotation_typing` to `False` Cython won’t use annotations for type checking.",
            "created_at": "2019-12-02T07:38:54Z",
            "html_url": "https://github.com/cython/cython/issues/3256#issuecomment-560271950",
            "id": 560271950,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3256",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDI3MTk1MA==",
            "updated_at": "2019-12-02T07:38:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/560271950",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the info. In general, I would like to keep annotation typing on to preserve any resulting performance improvements; it's just this specific case is causing issues since this function sometimes needs to handle subclasses of `str`.\r\n\r\nBased on this, I'm assuming that `Union[str]` is a reasonable (mypy-compatible) annotation to use for this purpose, but please let me know if there is a suggested alternative.",
            "created_at": "2019-12-02T09:22:18Z",
            "html_url": "https://github.com/cython/cython/issues/3256#issuecomment-560307795",
            "id": 560307795,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3256",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDMwNzc5NQ==",
            "updated_at": "2019-12-02T09:22:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/560307795",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/35119617?v=4",
                "events_url": "https://api.github.com/users/dmontagu/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmontagu/followers",
                "following_url": "https://api.github.com/users/dmontagu/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmontagu",
                "id": 35119617,
                "login": "dmontagu",
                "node_id": "MDQ6VXNlcjM1MTE5NjE3",
                "organizations_url": "https://api.github.com/users/dmontagu/orgs",
                "received_events_url": "https://api.github.com/users/dmontagu/received_events",
                "repos_url": "https://api.github.com/users/dmontagu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmontagu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "One thing you could do is move the annotations for these specific functions into a stub file. ",
            "created_at": "2019-12-02T18:27:44Z",
            "html_url": "https://github.com/cython/cython/issues/3256#issuecomment-560520385",
            "id": 560520385,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3256",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDUyMDM4NQ==",
            "updated_at": "2019-12-02T18:27:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/560520385",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3256/comments",
    "created_at": "2019-12-01T22:52:06Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/35119617?v=4",
                "events_url": "https://api.github.com/users/dmontagu/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmontagu/followers",
                "following_url": "https://api.github.com/users/dmontagu/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmontagu",
                "id": 35119617,
                "login": "dmontagu",
                "node_id": "MDQ6VXNlcjM1MTE5NjE3",
                "organizations_url": "https://api.github.com/users/dmontagu/orgs",
                "received_events_url": "https://api.github.com/users/dmontagu/received_events",
                "repos_url": "https://api.github.com/users/dmontagu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmontagu"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-12-02T23:32:54Z",
            "event": "closed",
            "id": 2847656046,
            "node_id": "MDExOkNsb3NlZEV2ZW50Mjg0NzY1NjA0Ng==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2847656046"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3256/events",
    "html_url": "https://github.com/cython/cython/issues/3256",
    "id": 530810490,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3256/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MzA4MTA0OTA=",
    "number": 3256,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Question: Why is PyString_CheckExact used (preventing str subclass returns)?",
    "updated_at": "2019-12-02T23:32:54Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3256",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/35119617?v=4",
        "events_url": "https://api.github.com/users/dmontagu/events{/privacy}",
        "followers_url": "https://api.github.com/users/dmontagu/followers",
        "following_url": "https://api.github.com/users/dmontagu/following{/other_user}",
        "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dmontagu",
        "id": 35119617,
        "login": "dmontagu",
        "node_id": "MDQ6VXNlcjM1MTE5NjE3",
        "organizations_url": "https://api.github.com/users/dmontagu/orgs",
        "received_events_url": "https://api.github.com/users/dmontagu/received_events",
        "repos_url": "https://api.github.com/users/dmontagu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dmontagu"
    }
}