{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nGenerator expressions inside cpdef who close over a variable crash the compiler.\nI'm assuming it's because it \"hides\" the closure.\n\n<details>\n<summary>cli output</summary>\n\n```python\nE:\\3party\\cython\\.venv\\Scripts\\python.exe -m Cython.Build.Cythonize -i dbg.py \nCompiling dbg.py because it changed.\n[1/1] Cythonizing dbg.py\n\nError compiling Cython file:\n------------------------------------------------------------\n...\nimport cython\n\n@cython.cclass\nclass ExClass:\n    @cython.ccall\n    ^\n------------------------------------------------------------\ndbg.py:5:4: closures inside cpdef functions not yet supported\n\nError compiling Cython file:\n------------------------------------------------------------\n...\nclass ExClass:\n    @cython.ccall\n    def envelop(self):\n        (1 for i in (1,2,3))\n        closed_over = 1\n        (closed_over for i in (1,2,3))\n         ^\n------------------------------------------------------------\ndbg.py:9:9: Compiler crash in CreateClosureClasses\n\nModuleNode.body = StatListNode(intervaltree_dbg.py:1:0)\nStatListNode.stats[1] = StatListNode(intervaltree_dbg.py:4:0)\nStatListNode.stats[0] = CompilerDirectivesNode(intervaltree_dbg.py:4:0)\nCompilerDirectivesNode.body = StatListNode(intervaltree_dbg.py:4:0)\nStatListNode.stats[0] = CClassDefNode(intervaltree_dbg.py:4:0,\n    class_name = 'ExClass',\n    decorators = [...]/0,\n    punycode_class_name = 'ExClass',\n    visibility = 'private')\nCClassDefNode.body = StatListNode(intervaltree_dbg.py:5:4)\nStatListNode.stats[0] = CompilerDirectivesNode(intervaltree_dbg.py:5:4)\nCompilerDirectivesNode.body = StatListNode(intervaltree_dbg.py:5:4)\nStatListNode.stats[0] = CompilerDirectivesNode(intervaltree_dbg.py:5:4)\nCompilerDirectivesNode.body = StatListNode(intervaltree_dbg.py:5:4)\nStatListNode.stats[0] = CFuncDefNode(intervaltree_dbg.py:5:4,\n    args = [...]/1,\n    c_compile_guard = '',\n    is_c_class_method = 1,\n    modifiers = [...]/0,\n    needs_closure = True,\n    node_positions = [...]/5,\n    outer_attrs = [...]/2,\n    overridable = True,\n    visibility = 'private')\nCFuncDefNode.body = StatListNode(intervaltree_dbg.py:5:4)\nStatListNode.stats[1] = StatListNode(intervaltree_dbg.py:7:8)\nStatListNode.stats[0] = CompilerDirectivesNode(intervaltree_dbg.py:7:8)\nCompilerDirectivesNode.body = StatListNode(intervaltree_dbg.py:7:8)\nStatListNode.stats[2] = ExprStatNode(intervaltree_dbg.py:9:9)\nExprStatNode.expr = GeneratorExpressionNode(intervaltree_dbg.py:9:9,\n    genexpr_name = 'genexpr1',\n    is_temp = 1,\n    lambda_name = 'lambda1',\n    name = 'genexpr',\n    needs_closure = True,\n    needs_closure_code = True,\n    pymethdef_cname = '__pyx_mdef_12intervaltree_16intervaltree_dbg_7ExClass_7envelop_4genexpr',\n    use_managed_ref = True)\n\nCompiler crash traceback from this point on:\n  File \"E:\\3party\\cython\\Cython\\Compiler\\Visitor.py\", line 174, in _visit\n    return handler_method(obj)\n  File \"E:\\3party\\cython\\Cython\\Compiler\\ParseTreeTransforms.py\", line 3631, in visit_GeneratorExpressionNode\n    return self.visit_LambdaNode(node)\n           ~~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"E:\\3party\\cython\\Cython\\Compiler\\ParseTreeTransforms.py\", line 3602, in visit_LambdaNode\n    self.create_class_from_scope(node.def_node, self.module_scope, node)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\3party\\cython\\Cython\\Compiler\\ParseTreeTransforms.py\", line 3579, in create_class_from_scope\n    type=cscope.scope_class.type,\n         ^^^^^^^^^^^^^^^^^^\nAttributeError: 'ClosureScope' object has no attribute 'scope_class'\nTraceback (most recent call last):\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"E:\\3party\\cython\\Cython\\Build\\Cythonize.py\", line 323, in <module>\n    main()\n    ~~~~^^\n  File \"E:\\3party\\cython\\Cython\\Build\\Cythonize.py\", line 297, in main\n    ext_modules_by_basedir = _cython_compile_files(all_paths, options)\n  File \"E:\\3party\\cython\\Cython\\Build\\Cythonize.py\", line 65, in _cython_compile_files\n    ext_modules = cythonize(\n        paths,\n    ...<8 lines>...\n        language=options.language,\n        **options.options)\n  File \"E:\\3party\\cython\\Cython\\Build\\Dependencies.py\", line 1159, in cythonize\n    cythonize_one(*args)\n    ~~~~~~~~~~~~~^^^^^^^\n  File \"E:\\3party\\cython\\Cython\\Build\\Dependencies.py\", line 1303, in cythonize_one\n    raise CompileError(None, pyx_file)\nCython.Compiler.Errors.CompileError: dbg.py\n\nProcess finished with exit code 1\n```\n\n</details>\n\n### Code to reproduce the behaviour:\n\n```cython\nimport cython\n\n@cython.cclass\nclass ExClass:\n    @cython.ccall\n    def envelop(self):\n        (1 for i in (1,2,3))\n        closed_over = 1\n        (closed_over for i in (1,2,3))\n```\n\n\n### Expected behaviour\n\nWell...I would expect it to compile ðŸ˜Š, but I get it not-implemented-yet.\n\nSo, expecting the `closures inside cpdef functions not yet supported` compilation error\n\n```python\nE:\\3party\\cython\\.venv\\Scripts\\python.exe -m Cython.Build.Cythonize -i dbg.py \nCompiling dbg.py because it changed.\n[1/1] Cythonizing dbg.py\n\nError compiling Cython file:\n------------------------------------------------------------\n...\nimport cython\n\n@cython.cclass\nclass ExClass:\n    @cython.ccall\n    ^\n------------------------------------------------------------\ndbg.py:5:4: closures inside cpdef functions not yet supported\nTraceback (most recent call last):\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"E:\\3party\\cython\\Cython\\Build\\Cythonize.py\", line 323, in <module>\n    main()\n    ~~~~^^\n  File \"E:\\3party\\cython\\Cython\\Build\\Cythonize.py\", line 297, in main\n    ext_modules_by_basedir = _cython_compile_files(all_paths, options)\n  File \"E:\\3party\\cython\\Cython\\Build\\Cythonize.py\", line 65, in _cython_compile_files\n    ext_modules = cythonize(\n        paths,\n    ...<8 lines>...\n        language=options.language,\n        **options.options)\n  File \"E:\\3party\\cython\\Cython\\Build\\Dependencies.py\", line 1159, in cythonize\n    cythonize_one(*args)\n    ~~~~~~~~~~~~~^^^^^^^\n  File \"E:\\3party\\cython\\Cython\\Build\\Dependencies.py\", line 1303, in cythonize_one\n    raise CompileError(None, pyx_file)\nCython.Compiler.Errors.CompileError: dbg.py\n\nProcess finished with exit code 1\n```\n\n### OS\n\nWindows 11 [26100}\n\n### Python version\n\nPython 3.13.7\n\n### Cython version\n\n3.2.0a0 - 0e0f2d677b8eac09a8f926dfaf9d6bbace08c730\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. It's always a tradeoff how much error information we can present in one run and where to stop. Here, it continues after reporting the error that it found, but then runs into an incorrect assumption later because the error prevented a required setup. It's not immediately clear to me where to draw the line in this case.",
            "created_at": "2025-10-10T08:32:19Z",
            "html_url": "https://github.com/cython/cython/issues/7196#issuecomment-3388869859",
            "id": 3388869859,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7196",
            "node_id": "IC_kwDOABDGAc7J_gzj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3388869859/reactions"
            },
            "updated_at": "2025-10-10T08:32:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3388869859",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Thanks for the report.\n\nIs there a thread about the work on closures in `cpdef`... I would like to help (I almost have a M.Sc. in CompSci specializing in Compilers)",
            "created_at": "2025-10-10T22:25:05Z",
            "html_url": "https://github.com/cython/cython/issues/7196#issuecomment-3392481538",
            "id": 3392481538,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7196",
            "node_id": "IC_kwDOABDGAc7KNSkC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3392481538/reactions"
            },
            "updated_at": "2025-10-10T22:25:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3392481538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/96947?v=4",
                "events_url": "https://api.github.com/users/refack/events{/privacy}",
                "followers_url": "https://api.github.com/users/refack/followers",
                "following_url": "https://api.github.com/users/refack/following{/other_user}",
                "gists_url": "https://api.github.com/users/refack/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/refack",
                "id": 96947,
                "login": "refack",
                "node_id": "MDQ6VXNlcjk2OTQ3",
                "organizations_url": "https://api.github.com/users/refack/orgs",
                "received_events_url": "https://api.github.com/users/refack/received_events",
                "repos_url": "https://api.github.com/users/refack/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/refack/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/refack/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/refack",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a thread about the work on closures in cpdef\n\nI can't see one (so feel free to create one).\n\nI don't think there's a good reason why it shouldn't work - we support closures in both `def` and `cdef` functions so all the infrastructure is there. `cpdef` functions are sometimes a bit weird and not quite like `cdef`+`def` though. \n\nBut it'd definitely be a welcome improvement. I just don't know why it's hasn't been done yet.",
            "created_at": "2025-10-11T07:22:41Z",
            "html_url": "https://github.com/cython/cython/issues/7196#issuecomment-3393016097",
            "id": 3393016097,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7196",
            "node_id": "IC_kwDOABDGAc7KPVEh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3393016097/reactions"
            },
            "updated_at": "2025-10-11T07:22:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3393016097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7196/comments",
    "created_at": "2025-10-08T16:02:34Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-10-10T08:32:29Z",
            "event": "labeled",
            "id": 20201613134,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc7QYWD8zwAAAAS0HCdO",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20201613134"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-10-10T08:32:29Z",
            "event": "labeled",
            "id": 20201613144,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "LE_lADOABDGAc7QYWD8zwAAAAS0HCdY",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20201613144"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7196/events",
    "html_url": "https://github.com/cython/cython/issues/7196",
    "id": 3496042748,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7196/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7QYWD8",
    "number": 7196,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7196/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7196/timeline",
    "title": "[BUG] Compiler crash on generator closure",
    "type": null,
    "updated_at": "2025-10-11T07:22:41Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7196",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/96947?v=4",
        "events_url": "https://api.github.com/users/refack/events{/privacy}",
        "followers_url": "https://api.github.com/users/refack/followers",
        "following_url": "https://api.github.com/users/refack/following{/other_user}",
        "gists_url": "https://api.github.com/users/refack/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/refack",
        "id": 96947,
        "login": "refack",
        "node_id": "MDQ6VXNlcjk2OTQ3",
        "organizations_url": "https://api.github.com/users/refack/orgs",
        "received_events_url": "https://api.github.com/users/refack/received_events",
        "repos_url": "https://api.github.com/users/refack/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/refack/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/refack/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/refack",
        "user_view_type": "public"
    }
}