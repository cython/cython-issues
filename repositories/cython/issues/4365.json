{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "See https://bugs.python.org/issue45122\r\n\r\nThe appropriate *internal* C API is _PyCode_New, which takes a struct containing various (sometimes optional) arguments. We will try not remove fields from the struct (but it *is* an internal API).\r\n\r\nYou might also want to see if PyCode_NewEmpty does what you want.\r\n\r\nStefan Behnel is aware of this.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Update: It's probably better to use PyCode_NewEmpty followed by code.replace(): https://docs.python.org/dev/library/types.html#types.CodeType.replace",
            "created_at": "2021-09-06T23:25:37Z",
            "html_url": "https://github.com/cython/cython/issues/4365#issuecomment-913896694",
            "id": 913896694,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4365",
            "node_id": "IC_kwDOABDGAc42ePT2",
            "performed_via_github_app": null,
            "updated_at": "2021-09-06T23:25:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/913896694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=4",
                "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}",
                "followers_url": "https://api.github.com/users/gvanrossum/followers",
                "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}",
                "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gvanrossum",
                "id": 2894642,
                "login": "gvanrossum",
                "node_id": "MDQ6VXNlcjI4OTQ2NDI=",
                "organizations_url": "https://api.github.com/users/gvanrossum/orgs",
                "received_events_url": "https://api.github.com/users/gvanrossum/received_events",
                "repos_url": "https://api.github.com/users/gvanrossum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gvanrossum"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Turns out, the problem with `PyCode_NewEmpty()` is that it takes `char*` arguments, not Python stringsâ€¦",
            "created_at": "2021-09-07T12:12:10Z",
            "html_url": "https://github.com/cython/cython/issues/4365#issuecomment-914251449",
            "id": 914251449,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4365",
            "node_id": "IC_kwDOABDGAc42fl65",
            "performed_via_github_app": null,
            "updated_at": "2021-09-07T12:12:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/914251449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Do you need help finding a better way?",
            "created_at": "2021-09-07T15:12:36Z",
            "html_url": "https://github.com/cython/cython/issues/4365#issuecomment-914394364",
            "id": 914394364,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4365",
            "node_id": "IC_kwDOABDGAc42gIz8",
            "performed_via_github_app": null,
            "updated_at": "2021-09-07T15:12:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/914394364",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=4",
                "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}",
                "followers_url": "https://api.github.com/users/gvanrossum/followers",
                "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}",
                "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gvanrossum",
                "id": 2894642,
                "login": "gvanrossum",
                "node_id": "MDQ6VXNlcjI4OTQ2NDI=",
                "organizations_url": "https://api.github.com/users/gvanrossum/orgs",
                "received_events_url": "https://api.github.com/users/gvanrossum/received_events",
                "repos_url": "https://api.github.com/users/gvanrossum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gvanrossum"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "If we were going down the `.replace` route (which is a Python call) then we could equally do a direct call to the `types.CodeType` constructor? They should have similar overhead, right?\r\n\r\nI guess it is a de-optimization from what we have now, but it avoids the need to have a global code object that's then replaced repeatedly.",
            "created_at": "2021-09-08T06:56:51Z",
            "html_url": "https://github.com/cython/cython/issues/4365#issuecomment-914971457",
            "id": 914971457,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4365",
            "node_id": "IC_kwDOABDGAc42iVtB",
            "performed_via_github_app": null,
            "updated_at": "2021-09-08T06:56:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/914971457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If we were going down the `.replace` route (which is a Python call) then we could equally do a direct call to the `types.CodeType` constructor? They should have similar overhead, right?\r\n\r\nYeah, we could call `PyCode_Type` (or its `tp_new()`), but that would require passing almost all arguments into it, so we'd still depend on the exact signature (or at least the list of required arguments, if we pass keyword arguments as a dict).\r\n\r\n`.replace()` is a somewhat simple vectorcall with only the keyword arguments that we really need. But it requires keyword arguments (although we can prepare the constant keyword name tuple) and Python object arguments, which slows things down. Probably not as much as calling the type with a full dict, though.\r\n\r\nSince we're caching code objects, I think we can afford adding a bit of overhead to their creation. It slows down the module import a little bit, as well as first-time creations at need. Profiling [already uses](https://github.com/cython/cython/blob/aea4e6b84b38223c540266f8c57093ee2039f284/Cython/Utility/Profile.c#L310) `PyCode_NewEmpty()` and we might be able to tweak [traceback creation](https://github.com/cython/cython/blob/aea4e6b84b38223c540266f8c57093ee2039f284/Cython/Utility/Exceptions.c#L721) into using that, too, with a bit of code duplication for newer Python versions.\r\n\r\nAlthough the fact that we currently pass the function name and file name as  a `char*` into both of these internally seems like completely unnecessary overhead here â€“ we have the Unicode string lying around anyway. The only issue is injecting the C code line into the \"function name\", to show it in tracebacks. If that's disabled, then `PyCode_NewEmpty()` would work there, as it currently stands, but would no longer work for us the next time we optimise the traceback creation overhead. (There's code out there that uses exceptions extensively and not just for exceptional cases.) Function object creation uses the constant Unicode string objects.\r\n\r\nSo, it's either slow, Python-level keyword arguments (calling `PyCode_Type` or `.replace()`), or fast, version specific C code (calling `_PyCode_New()`). Sounds like a familiar tradeoff. :)\r\n\r\nThe usual way to deal with this in Cython is to implement both and add a feature switch that different Python implementations and users can enable or disable. I'll see what I can come up with.",
            "created_at": "2021-09-08T08:05:01Z",
            "html_url": "https://github.com/cython/cython/issues/4365#issuecomment-915013204",
            "id": 915013204,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4365",
            "node_id": "IC_kwDOABDGAc42if5U",
            "performed_via_github_app": null,
            "updated_at": "2021-09-08T08:05:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/915013204",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "From the python-dev [ML](https://mail.python.org/archives/list/python-dev@python.org/thread/ZWTBR5ESYR26BUIVMXOKPFRLGGYDJSFC/?sort=date):\r\n\r\n> > @scoder: I could also switch to _PyCode_New(), though it's not exactly what I would\r\ncall an attractive option, both for usability reasons and its future API\r\nstability. (Cython also still generates C89 code, i.e. no partial struct\r\ninitialisations.)\r\n> \r\n> @gvanrossum: That's too bad. With the new struct initializations it's actually more\r\nusable and more stable going forward.\r\n\r\nWhy not move Cython to generate C99 code? It's been over 20 years.... Also, 3.0.0 would be a great time for such a change, I'd say.",
            "created_at": "2021-09-08T14:35:16Z",
            "html_url": "https://github.com/cython/cython/issues/4365#issuecomment-915294776",
            "id": 915294776,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4365",
            "node_id": "IC_kwDOABDGAc42jko4",
            "performed_via_github_app": null,
            "updated_at": "2021-09-08T14:35:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/915294776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33685575?v=4",
                "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
                "followers_url": "https://api.github.com/users/h-vetinari/followers",
                "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
                "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/h-vetinari",
                "id": 33685575,
                "login": "h-vetinari",
                "node_id": "MDQ6VXNlcjMzNjg1NTc1",
                "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
                "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
                "repos_url": "https://api.github.com/users/h-vetinari/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/h-vetinari"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4365/comments",
    "created_at": "2021-09-06T23:23:56Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-09-08T14:35:16Z",
            "event": "mentioned",
            "id": 5272770886,
            "node_id": "MEE_lADOABDGAc46-kOmzwAAAAE6SBlG",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5272770886"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-09-08T14:35:16Z",
            "event": "subscribed",
            "id": 5272770892,
            "node_id": "SE_lADOABDGAc46-kOmzwAAAAE6SBlM",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5272770892"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=4",
                "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}",
                "followers_url": "https://api.github.com/users/gvanrossum/followers",
                "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}",
                "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gvanrossum",
                "id": 2894642,
                "login": "gvanrossum",
                "node_id": "MDQ6VXNlcjI4OTQ2NDI=",
                "organizations_url": "https://api.github.com/users/gvanrossum/orgs",
                "received_events_url": "https://api.github.com/users/gvanrossum/received_events",
                "repos_url": "https://api.github.com/users/gvanrossum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gvanrossum"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-09-08T14:35:16Z",
            "event": "mentioned",
            "id": 5272770898,
            "node_id": "MEE_lADOABDGAc46-kOmzwAAAAE6SBlS",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5272770898"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=4",
                "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}",
                "followers_url": "https://api.github.com/users/gvanrossum/followers",
                "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}",
                "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gvanrossum",
                "id": 2894642,
                "login": "gvanrossum",
                "node_id": "MDQ6VXNlcjI4OTQ2NDI=",
                "organizations_url": "https://api.github.com/users/gvanrossum/orgs",
                "received_events_url": "https://api.github.com/users/gvanrossum/received_events",
                "repos_url": "https://api.github.com/users/gvanrossum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gvanrossum"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-09-08T14:35:16Z",
            "event": "subscribed",
            "id": 5272770903,
            "node_id": "SE_lADOABDGAc46-kOmzwAAAAE6SBlX",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5272770903"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4365/events",
    "html_url": "https://github.com/cython/cython/issues/4365",
    "id": 989479846,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4365/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5ODk0Nzk4NDY=",
    "number": 4365,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] PyCode_New and PyCode_NewWithPosOnlyArgs are going away in 3.11",
    "updated_at": "2021-09-08T14:35:16Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4365",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=4",
        "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}",
        "followers_url": "https://api.github.com/users/gvanrossum/followers",
        "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}",
        "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gvanrossum",
        "id": 2894642,
        "login": "gvanrossum",
        "node_id": "MDQ6VXNlcjI4OTQ2NDI=",
        "organizations_url": "https://api.github.com/users/gvanrossum/orgs",
        "received_events_url": "https://api.github.com/users/gvanrossum/received_events",
        "repos_url": "https://api.github.com/users/gvanrossum/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gvanrossum"
    }
}