{
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "As reported on the mailing list:\n\nThere seem to be some bugs regarding memoryviews of structured arrays \nin Cython when the struct itself contains arrays. I have a Cython fix for \none of them (the most relevant to me), but first I would like to make sure \nthat these are really bugs and I am not doing anything stupid. This \nquestion is related to \nhttp://stackoverflow.com/questions/17239091/cython-memoryviews-from-array-of-structs, \nbut the answer there works only for char arrays. An array of doubles breaks \nit again.\n\nIt seems to me that Cython implementation solves some special cases, but \nnot the general one. My proposed fix would be to insert\n\n```\nndim = ctx->head->field->type->ndim;\n```\n\nafter\n\n```\n/* Process the previous element */\n\nif (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;\n```\n\nin Cython\\Utility\\Buffer.c\n\nThis fixes tests 2, 4 and 7, but not 8 and 9 (see below). I am not sure \nabout the details of what the code in Buffer.c is supposed to do and \nwhether my modification would break some other functionality, but my code \n(not only the tests) works with this fix.\n\nOr am I possibly simply missing \"the right way\" to handle arrays of structs \ncontaining arrays in Cython? But in either case the compiler shouldn't \ncrash like in test 9...\n\nHere is the code of my tests with and without numpy with results ranging \nfrom \"ok\" to \"compiler crash\".\nThe numpy tests require these imports:\n\n```\nimport numpy as np\ncimport numpy as np\n```\n\n```\n*Test 1 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n\n*Test 2 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value*[test():\n    cdef My_Struct my_struct\n    cdef My_Struct[:](1]*\ncpdef) my_view = <My_Struct[Expected 1 dimension(s), got 1*\n*\n*\n*Test 3 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value[*1*](:1]>&my_struct\n\n*ValueError:)\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n1*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 4 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value[*2*](:])\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n2*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*ValueError: Expected 1 dimension(s), got 1*\n*\n*\n*Test 5 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    *char* my_second_value[2](:])\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','*a*',2)](('my_first_value','float64'),), \nalign=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 6 (OK)*\ncdef packed struct My_Array_Struct:\n    double values[*1*](:])\ncdef packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n1*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 7 (FAILS)*\ncdef packed struct My_Array_Struct:\n    double values[*2*](:])\ncdef packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n2*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*ValueError: Expected 1 dimension(s), got 1*\n\n*Test 8 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value*[1](:])*\n    double my_second_value\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n\n*ValueError: Buffer dtype mismatch, expected 'double' but got end in \n'My_Struct.my_second_value'*\n\n*Test 9 (COMPILER CRASH)*\ncdef packed struct My_Array_Struct:\n    double values[packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value*[1](2]\ncdef)*\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n```\n\nMigrated from http://trac.cython.org/ticket/853\n",
    "closed_at": "2020-05-01T07:01:41Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "**scoder** changed **description** from\n\nAs reported on the mailing list:\n\nThere seem to be some bugs regarding memoryviews of structured arrays \nin Cython when the struct itself contains arrays. I have a Cython fix for \none of them (the most relevant to me), but first I would like to make sure \nthat these are really bugs and I am not doing anything stupid. This \nquestion is related to \nhttp://stackoverflow.com/questions/17239091/cython-memoryviews-from-array-of-structs, \nbut the answer there works only for char arrays. An array of doubles breaks \nit again.\n\nIt seems to me that Cython implementation solves some special cases, but \nnot the general one. My proposed fix would be to insert\n\n```\nndim = ctx->head->field->type->ndim;\n```\n\nafter\n\n```\n/* Process the previous element */\n\nif (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;\n```\n\nin Cython\\Utility\\Buffer.c\n\nThis fixes tests 2, 4 and 7, but not 8 and 9 (see below). I am not sure \nabout the details of what the code in Buffer.c is supposed to do and \nwhether my modification would break some other functionality, but my code \n(not only the tests) works with this fix.\n\nOr am I possibly simply missing \"the right way\" to handle arrays of structs \ncontaining arrays in Cython? But in either case the compiler shouldn't \ncrash like in test 9...\n\nHere is the code of my tests with and without numpy with results ranging \nfrom \"ok\" to \"compiler crash\".\nThe numpy tests require these imports:\n\n```\nimport numpy as np\ncimport numpy as np\n\n*Test 1 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n\n*Test 2 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value*[test():\n    cdef My_Struct my_struct\n    cdef My_Struct[:](1]*\ncpdef) my_view = <My_Struct[Expected 1 dimension(s), got 1*\n*\n*\n*Test 3 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value[*1*](:1]>&my_struct\n\n*ValueError:)\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n1*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 4 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value[*2*](:])\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n2*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*ValueError: Expected 1 dimension(s), got 1*\n*\n*\n*Test 5 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    *char* my_second_value[2](:])\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','*a*',2)](('my_first_value','float64'),), \nalign=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 6 (OK)*\ncdef packed struct My_Array_Struct:\n    double values[*1*](:])\ncdef packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n1*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 7 (FAILS)*\ncdef packed struct My_Array_Struct:\n    double values[*2*](:])\ncdef packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n2*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*ValueError: Expected 1 dimension(s), got 1*\n\n*Test 8 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value*[1](:])*\n    double my_second_value\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n\n*ValueError: Buffer dtype mismatch, expected 'double' but got end in \n'My_Struct.my_second_value'*\n\n*Test 9 (COMPILER CRASH)*\ncdef packed struct My_Array_Struct:\n    double values[packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value*[1](2]\ncdef)*\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n```\n\nto\n\nAs reported on the mailing list:\n\nThere seem to be some bugs regarding memoryviews of structured arrays \nin Cython when the struct itself contains arrays. I have a Cython fix for \none of them (the most relevant to me), but first I would like to make sure \nthat these are really bugs and I am not doing anything stupid. This \nquestion is related to \nhttp://stackoverflow.com/questions/17239091/cython-memoryviews-from-array-of-structs, \nbut the answer there works only for char arrays. An array of doubles breaks \nit again.\n\nIt seems to me that Cython implementation solves some special cases, but \nnot the general one. My proposed fix would be to insert\n\n```\nndim = ctx->head->field->type->ndim;\n```\n\nafter\n\n```\n/* Process the previous element */\n\nif (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;\n```\n\nin Cython\\Utility\\Buffer.c\n\nThis fixes tests 2, 4 and 7, but not 8 and 9 (see below). I am not sure \nabout the details of what the code in Buffer.c is supposed to do and \nwhether my modification would break some other functionality, but my code \n(not only the tests) works with this fix.\n\nOr am I possibly simply missing \"the right way\" to handle arrays of structs \ncontaining arrays in Cython? But in either case the compiler shouldn't \ncrash like in test 9...\n\nHere is the code of my tests with and without numpy with results ranging \nfrom \"ok\" to \"compiler crash\".\nThe numpy tests require these imports:\n\n```\nimport numpy as np\ncimport numpy as np\n```\n\n```\n*Test 1 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n\n*Test 2 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value*[test():\n    cdef My_Struct my_struct\n    cdef My_Struct[:](1]*\ncpdef) my_view = <My_Struct[Expected 1 dimension(s), got 1*\n*\n*\n*Test 3 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value[*1*](:1]>&my_struct\n\n*ValueError:)\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n1*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 4 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value\n    double my_second_value[*2*](:])\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n2*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*ValueError: Expected 1 dimension(s), got 1*\n*\n*\n*Test 5 (OK)*\ncdef packed struct My_Struct:\n    double my_first_value\n    *char* my_second_value[2](:])\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','*a*',2)](('my_first_value','float64'),), \nalign=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 6 (OK)*\ncdef packed struct My_Array_Struct:\n    double values[*1*](:])\ncdef packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n1*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*Test 7 (FAILS)*\ncdef packed struct My_Array_Struct:\n    double values[*2*](:])\ncdef packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value\ncpdef test():\n    cdef np.ndarray my_array = np.ndarray(1, \ndtype=np.dtype([('my_second_value','float64',*\n2*)](('my_first_value','float64'),), align=False)\n    cdef My_Struct[my_view = my_array\n\n*ValueError: Expected 1 dimension(s), got 1*\n\n*Test 8 (FAILS)*\ncdef packed struct My_Struct:\n    double my_first_value*[1](:])*\n    double my_second_value\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n\n*ValueError: Buffer dtype mismatch, expected 'double' but got end in \n'My_Struct.my_second_value'*\n\n*Test 9 (COMPILER CRASH)*\ncdef packed struct My_Array_Struct:\n    double values[packed struct My_Struct:\n    double my_first_value\n    My_Array_Struct my_second_value*[1](2]\ncdef)*\ncpdef test():\n    cdef My_Struct my_struct\n    cdef My_Struct[my_view = <My_Struct[:1](:])>&my_struct\n```\n\ncommented\n",
            "created_at": "2015-06-29T13:43:49Z",
            "html_url": "https://github.com/cython/cython/issues/1407#issuecomment-240052999",
            "id": 240052999,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1407",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDA1Mjk5OQ==",
            "updated_at": "2016-08-16T09:32:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240052999",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "NONE",
            "body": "```cython\r\nimport numpy as np\r\n\r\nctypedef struct test_pass_t:\r\n        double nodes[2]\r\n        int tag\r\n\r\ncdef container_pass = np.ndarray(1,dtype=np.dtype([('nodes', ('f8', 2)), ('tag', ('i4',1))],align=True))\r\n\r\ncdef test_pass_t [:] res_pass = container_pass\r\nprint (res_pass[0])\r\n\r\nctypedef struct test_fail_t:\r\n        int nodes[2]\r\n        int tag\r\n\r\ncdef container_fail = np.ndarray(1,dtype=np.dtype([('nodes', ('i4', 2)), ('tag', ('i4',1))],align=True))\r\n\r\ncdef test_fail_t [:] res_fail = container_fail\r\nprint (res_fail[0])```",
            "created_at": "2019-06-02T16:19:12Z",
            "html_url": "https://github.com/cython/cython/issues/1407#issuecomment-498045011",
            "id": 498045011,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1407",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODA0NTAxMQ==",
            "updated_at": "2019-06-02T16:19:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/498045011",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/1052649?v=4",
                "events_url": "https://api.github.com/users/FxIII/events{/privacy}",
                "followers_url": "https://api.github.com/users/FxIII/followers",
                "following_url": "https://api.github.com/users/FxIII/following{/other_user}",
                "gists_url": "https://api.github.com/users/FxIII/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FxIII",
                "id": 1052649,
                "login": "FxIII",
                "node_id": "MDQ6VXNlcjEwNTI2NDk=",
                "organizations_url": "https://api.github.com/users/FxIII/orgs",
                "received_events_url": "https://api.github.com/users/FxIII/received_events",
                "repos_url": "https://api.github.com/users/FxIII/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/FxIII/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FxIII/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FxIII"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Closing this since it seems to be covered by #3562.",
            "created_at": "2020-05-01T07:01:40Z",
            "html_url": "https://github.com/cython/cython/issues/1407#issuecomment-622276773",
            "id": 622276773,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1407",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjI3Njc3Mw==",
            "updated_at": "2020-05-01T07:01:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/622276773",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1407/comments",
    "created_at": "2015-06-29T13:40:13Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:32:05Z",
            "event": "labeled",
            "id": 756788214,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDc1Njc4ODIxNA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/756788214"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:32:05Z",
            "event": "labeled",
            "id": 756788216,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDc1Njc4ODIxNg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/756788216"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:32:05Z",
            "event": "milestoned",
            "id": 756788218,
            "milestone": {
                "title": "wishlist"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDc1Njc4ODIxOA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/756788218"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "7dacee6093f59bf3f0977ded04e99f044669aaaa",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/7dacee6093f59bf3f0977ded04e99f044669aaaa",
            "created_at": "2020-05-01T06:34:38Z",
            "event": "referenced",
            "id": 3292377837,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyOTIzNzc4Mzc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3292377837"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "62d061fc0ecbfebe9480c430015d0c9d5644f626",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/62d061fc0ecbfebe9480c430015d0c9d5644f626",
            "created_at": "2020-05-01T06:58:26Z",
            "event": "referenced",
            "id": 3292413260,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyOTI0MTMyNjA=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3292413260"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-01T07:01:01Z",
            "event": "demilestoned",
            "id": 3292417305,
            "milestone": {
                "title": "wishlist"
            },
            "node_id": "MDE3OkRlbWlsZXN0b25lZEV2ZW50MzI5MjQxNzMwNQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3292417305"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-01T07:01:01Z",
            "event": "milestoned",
            "id": 3292417307,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMyOTI0MTczMDc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3292417307"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-01T07:01:41Z",
            "event": "closed",
            "id": 3292418581,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzI5MjQxODU4MQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3292418581"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1407/events",
    "html_url": "https://github.com/cython/cython/issues/1407",
    "id": 171365109,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1407/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 213,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 19,
        "state": "open",
        "title": "3.0",
        "updated_at": "2020-05-01T07:01:41Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWUxNzEzNjUxMDk=",
    "number": 1407,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "memoryviews of arrays of structs fail to work in some cases",
    "updated_at": "2020-05-01T07:01:41Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1407",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
        "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
        "followers_url": "https://api.github.com/users/robertwb/followers",
        "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
        "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/robertwb",
        "id": 486017,
        "login": "robertwb",
        "node_id": "MDQ6VXNlcjQ4NjAxNw==",
        "organizations_url": "https://api.github.com/users/robertwb/orgs",
        "received_events_url": "https://api.github.com/users/robertwb/received_events",
        "repos_url": "https://api.github.com/users/robertwb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/robertwb"
    }
}