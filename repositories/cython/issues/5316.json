{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nMaking progress on porting yt to Cython 3.0, but I'm still encountering one compilation error where what _seems_ to be happening is that Cython produces C++11-only code despite an explicit directive\r\n`# distutils: extra_compile_args = ['-std=c++03']`\r\n\r\nThe following errors are outputted\r\n```\r\nyt/utilities/lib/cykdtree/kdtree.cpp:573:81: error: default template arguments may not be used in function templates without ‘-std=c++11’ or ‘-std=gnu++11’\r\n  573 |     template<typename U=T> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }\r\n      |                                                                                 ^~~~~\r\nyt/utilities/lib/cykdtree/kdtree.cpp:574:81: error: default template arguments may not be used in function templates without ‘-std=c++11’ or ‘-std=gnu++11’\r\n  574 |     template<typename U=T> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }\r\n```\r\n\r\nI have not been able to reproduce this locally, so all I have to show is a failed build on GHA, see\r\n- [context](https://github.com/yt-project/yt/pull/4374#issuecomment-1468208388)\r\n- [failed build](https://github.com/yt-project/yt/actions/runs/4416612698/jobs/7741148482)\r\n\r\n\r\nThis could result from an intentional change (support for C++ older than 11 dropped ...), however I haven't been able to find any mention of it in the migration guide or elsewhere. If the failure is intended, maybe the error message could make it clearer too.\r\n\n\n### Code to reproduce the behaviour:\n\n_No response_\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nLinux\n\n### Python version\n\n3.11.2\n\n### Cython version\n\n3.0.0b1\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Cython produces C++11-only code despite an explicit directive\r\n> `# distutils: extra_compile_args = ['-std=c++03']`\r\n\r\nNote that Cython will generate code for the C++ functionality that you use. The directive above only instructs distutils/setuptools to pass the `-std=c++03` option to the C compiler afterwards. If your code uses C++11 functionality, then the C++ code that you get from Cython will require C++11 and the C++ compiler option will make the C++ compilation fail. That's what seems to be happening here and you can probably work around it by passing the option `-std=c++11` instead.\r\n\r\nThat said, this looks like something that Cython generates internally. Requiring C++11 unconditionally is definitely unintended and would be a bug on our side.",
            "created_at": "2023-03-14T16:36:28Z",
            "html_url": "https://github.com/cython/cython/issues/5316#issuecomment-1468441837",
            "id": 1468441837,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5316",
            "node_id": "IC_kwDOABDGAc5XhqTt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1468441837/reactions"
            },
            "updated_at": "2023-03-14T16:52:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1468441837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> That said, this looks like something that Cython generates internally. Requiring C++11 unconditionally is definitely unintended and would be a bug on our side.\r\n\r\nThis was my hunch. The code has been mostly unchanged and compiling fine for 6 years with the `-std=c++03` directive on Cython 0.29.x\r\n\r\nWe require C++14 for other modules so I can probably get away with requiring C++11 for now.",
            "created_at": "2023-03-14T16:59:11Z",
            "html_url": "https://github.com/cython/cython/issues/5316#issuecomment-1468480335",
            "id": 1468480335,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5316",
            "node_id": "IC_kwDOABDGAc5XhztP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1468480335/reactions"
            },
            "updated_at": "2023-03-14T16:59:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1468480335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14075922?v=4",
                "events_url": "https://api.github.com/users/neutrinoceros/events{/privacy}",
                "followers_url": "https://api.github.com/users/neutrinoceros/followers",
                "following_url": "https://api.github.com/users/neutrinoceros/following{/other_user}",
                "gists_url": "https://api.github.com/users/neutrinoceros/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neutrinoceros",
                "id": 14075922,
                "login": "neutrinoceros",
                "node_id": "MDQ6VXNlcjE0MDc1OTIy",
                "organizations_url": "https://api.github.com/users/neutrinoceros/orgs",
                "received_events_url": "https://api.github.com/users/neutrinoceros/received_events",
                "repos_url": "https://api.github.com/users/neutrinoceros/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neutrinoceros/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neutrinoceros/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neutrinoceros"
            }
        },
        {
            "author_association": "NONE",
            "body": "(FWIW I confirm that the same code builds fine if I use `-std=c++11`)",
            "created_at": "2023-03-14T17:21:04Z",
            "html_url": "https://github.com/cython/cython/issues/5316#issuecomment-1468516262",
            "id": 1468516262,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5316",
            "node_id": "IC_kwDOABDGAc5Xh8em",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1468516262/reactions"
            },
            "updated_at": "2023-03-14T17:21:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1468516262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14075922?v=4",
                "events_url": "https://api.github.com/users/neutrinoceros/events{/privacy}",
                "followers_url": "https://api.github.com/users/neutrinoceros/followers",
                "following_url": "https://api.github.com/users/neutrinoceros/following{/other_user}",
                "gists_url": "https://api.github.com/users/neutrinoceros/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neutrinoceros",
                "id": 14075922,
                "login": "neutrinoceros",
                "node_id": "MDQ6VXNlcjE0MDc1OTIy",
                "organizations_url": "https://api.github.com/users/neutrinoceros/orgs",
                "received_events_url": "https://api.github.com/users/neutrinoceros/received_events",
                "repos_url": "https://api.github.com/users/neutrinoceros/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neutrinoceros/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neutrinoceros/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neutrinoceros"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5316/comments",
    "created_at": "2023-03-14T14:48:23Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5316/events",
    "html_url": "https://github.com/cython/cython/issues/5316",
    "id": 1623639589,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5316/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5gxsYl",
    "number": 5316,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5316/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5316/timeline",
    "title": "[BUG] Cython 3.0.0b1 not handling -std=c++03",
    "updated_at": "2023-03-14T17:21:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5316",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/14075922?v=4",
        "events_url": "https://api.github.com/users/neutrinoceros/events{/privacy}",
        "followers_url": "https://api.github.com/users/neutrinoceros/followers",
        "following_url": "https://api.github.com/users/neutrinoceros/following{/other_user}",
        "gists_url": "https://api.github.com/users/neutrinoceros/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/neutrinoceros",
        "id": 14075922,
        "login": "neutrinoceros",
        "node_id": "MDQ6VXNlcjE0MDc1OTIy",
        "organizations_url": "https://api.github.com/users/neutrinoceros/orgs",
        "received_events_url": "https://api.github.com/users/neutrinoceros/received_events",
        "repos_url": "https://api.github.com/users/neutrinoceros/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/neutrinoceros/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/neutrinoceros/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/neutrinoceros"
    }
}