{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Module-level code (e.g. attribute initialization) is not re-executed when re-importing a module through importlib.reload().\r\n\r\nGiven these classes:\r\ntest1.py:\r\n```\r\nprint(\"Module test1 loading...\")\r\n\r\nmy_attribute = \"<Default value>\"\r\n```\r\ntest2.py:\r\n```\r\nimport sys\r\nsys.path.append('.')\r\n\r\nimport test1\r\nimport importlib\r\n\r\nprint(test1.my_attribute)\r\n\r\ntest1.my_attribute = \"<Modified value>\"\r\nprint(test1.my_attribute)\r\n\r\nimportlib.reload(test1)\r\nprint(test1.my_attribute)\r\n```\r\n\r\nOutput before cythonizing is:\r\n```\r\nPython 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)] on win32\r\n>>> import test2\r\nModule test1 loading...\r\n<Default value>\r\n<Modified value>\r\nModule test1 loading...\r\n<Default value>\r\n```\r\n\r\nOutput after cythonizing is:\r\n```\r\nPython 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)] on win32\r\n>>> import test2\r\nModule test1 loading...\r\n<Default value>\r\n<Modified value>\r\n<Modified value>\r\n```\r\nThe importlib documentation at https://docs.python.org/3/library/importlib.html specifies:\r\n> When reload() is executed:\r\n> Python module’s code is recompiled and the module-level code re-executed, defining a new set of objects which are bound to names in the module’s dictionary by reusing the loader which originally loaded the module.\r\n\r\nIn the case of a cythonized module, recompiling the code is obviously not necessary; however, the module-level code should be re-executed to retain the runtime semantics.\r\n\r\nIn my case, there is a unit test; each test method reads and modifies a module-level attribute. In the setUp() method, I reload the module so that the test methods don't influence each other. This unit test fails after cythonizing the module.\r\n\r\nUsed compiler directive: \"always_allow_keywords\": True\r\nUsed Cython version 0.28.5 on Windows 7\r\n\r\nWorkaround: Create a \"reinit()\" method which does the same as the module-level code; call that method instead of reloading the module. This workaround is not very elegant, as it forces me to change my module code just to make it unit-testable.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "See #1919.",
            "created_at": "2018-10-15T16:59:44Z",
            "html_url": "https://github.com/cython/cython/issues/2659#issuecomment-429932820",
            "id": 429932820,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2659",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkzMjgyMA==",
            "updated_at": "2018-10-15T16:59:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/429932820",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2659/comments",
    "created_at": "2018-10-15T13:48:29Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-10-15T16:59:03Z",
            "event": "labeled",
            "id": 1904669633,
            "label": {
                "color": "444444",
                "name": "R: duplicate"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE5MDQ2Njk2MzM=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1904669633"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-10-15T16:59:37Z",
            "event": "unlabeled",
            "id": 1904670893,
            "label": {
                "color": "444444",
                "name": "R: duplicate"
            },
            "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTkwNDY3MDg5Mw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1904670893"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-26T07:47:11Z",
            "event": "labeled",
            "id": 3272659932,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNzI2NTk5MzI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3272659932"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2659/events",
    "html_url": "https://github.com/cython/cython/issues/2659",
    "id": 370172092,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2659/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNzAxNzIwOTI=",
    "number": 2659,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "importlib.reload() does not re-execute module-level code",
    "updated_at": "2020-04-26T07:47:11Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2659",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/19953840?v=4",
        "events_url": "https://api.github.com/users/DanielHerding/events{/privacy}",
        "followers_url": "https://api.github.com/users/DanielHerding/followers",
        "following_url": "https://api.github.com/users/DanielHerding/following{/other_user}",
        "gists_url": "https://api.github.com/users/DanielHerding/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/DanielHerding",
        "id": 19953840,
        "login": "DanielHerding",
        "node_id": "MDQ6VXNlcjE5OTUzODQw",
        "organizations_url": "https://api.github.com/users/DanielHerding/orgs",
        "received_events_url": "https://api.github.com/users/DanielHerding/received_events",
        "repos_url": "https://api.github.com/users/DanielHerding/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/DanielHerding/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DanielHerding/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/DanielHerding"
    }
}