{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe the bug\n\nIn Cython 0.29.x initializing a fused memoryview with `None` picked a type (probably just the first on the list).\r\n\r\nIn Cython 3.0.0b1. initializing a fused memoryview with `None` fails.\n\n### Code to reproduce the behaviour:\n\n```cython\r\nfrom cython cimport floating, typeof\r\n\r\ndef f(floating[::1] d=None):\r\n    if d is not None:\r\n        return d[0]\r\n    else:\r\n        return typeof(d)\r\n\r\nprint(f())\r\n```\n\n### Expected behaviour\n\nIn Cython 0.29.x this prints 'float' while in Cython 3.0 raises `TypeError: No matching signature found`.\r\n\r\nPersonally I'm not sure what's \"right\". But for the moment it's a regression. Cython 0.29.x is kind of buggy in its own way:\r\n\r\n```\r\nfrom cython cimport floating, typeof\r\n\r\ndef f(floating[::1] d, floating[::1] e):\r\n    if d is not None:\r\n        return d[0]\r\n    else:\r\n        return typeof(d)\r\n\r\nimport numpy as np\r\narr = np.zeros((1,), dtype=np.float64)\r\nprint(f(None, arr))\r\n```\r\n\r\nIt selects `float32` on the basis that this matches argument `d`, and then errors with `Buffer dtype mismatch, expected 'float' but got 'double'` on argument `e`.\n\n### Environment\n\nCython 3.0.0b1\n\n### Additional context\n\nBisected to 805d7f3d778cf29f1e2acaaac84cd2bcadb25e14 - I don't think it'd be too hard to restore the previous behaviour, but I'm not sure the previous behaviour is good.\r\n\r\nReported https://groups.google.com/g/cython-users/c/dVomEXqJgX8",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Yes, both kinds of behaviour seem somewhat wrong, intransparent or unhelpful.\r\n\r\nI considered an explicit type cast for the `None` default argument, but that wouldn't work with multiple arguments (including unconstrained non-default ones) since you may still end up with inconsistent types then. Let's look at the different cases.\r\n\r\n1. `func(floating[:] x = None)` – a type cast for `None` to a specific memory view type (e.g. `<float[:]>None`) would help to select the right default case.\r\n2. `func(floating[:] a, floating[:] b = None)` – excluding `b` from the list of arguments for the default case would allow to select a good variant. An explicit cast for `None` (e.g. `<float[:]>None`) would lead to call time conflicts with the other type case(s).\r\n3. `func(floating[:] a, integrals[:] b = None)` – an explicit type cast would help.\r\n4. `func(floating[:] a, integrals[:] b = None, integrals[:] c = None)` – an explicit type cast would help but is only required for `b` or `c`, not both. In any case, the type casts much not conflict.\r\n5. `func(floating[:] a, floating[:] b = None, integrals[:] c = None)` – an explicit type cast is needed only for `c`.\r\n\r\nBasically, whenever the default case is required to select the right variant, we need a user cast and should at least warn about the ambiguity.\r\n\r\nWhen other non-default arguments of the same fused type are provided, the default argument should best be excluded from the type selection vector.\r\n\r\nSince type casts in Python syntax are verbose, this gets somewhat ugly in Python code:\r\n`func(a: floating[:], b: floating[:] = cython.cast(cython.float[:], None))`",
            "created_at": "2023-03-06T09:09:10Z",
            "html_url": "https://github.com/cython/cython/issues/5297#issuecomment-1455749898",
            "id": 1455749898,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5297",
            "node_id": "IC_kwDOABDGAc5WxPsK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1455749898/reactions"
            },
            "updated_at": "2023-03-06T09:09:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1455749898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think type-casts can be the answer. These are `def` functions that are called as normal Python objects (and likely from Python) so I don't think the type-cast can be transmitted to the call.\r\n\r\nThe example I picked might be a little misleading: this isn't *just* about default arguments. You could have a signature of `f(floating[:] a, floating[:] b)` and call it as `f(None, some_array)`. Which adds more options than you've shown above.\r\n\r\nThe current behaviour is \"deduce the each fused type from the left-most argument it appears in\"\r\n\r\nLooking at your individual examples:\r\n\r\n1. `func(floating[:] x = None)` can't really unambiguously deduce `x`. The choice is fail, or pick something arbitrary maybe with a warning. Picking something arbitrary preserves compatibility.\r\n2. `func(floating[:] a, floating[:] b = None)` - current behaviour just uses the type of `a` to deduce. That's remains fine.\r\n3. `func(floating[:] a, integrals[:] b = None)` - same as \"1\"\r\n4. `func(floating[:] a, integrals[:] b = None, integrals[:] c = None)` same as \"1\"\r\n5. `func(floating[:] a, floating[:] b = None, integrals[:] c = None)` same as \"1\"\r\n\r\nThen the additional `func(None, some_array)` case - current behaviour is pick something arbitrary. I'd propose it should work it out from `b` if possible.\r\n\r\nWhat I'd suggest is:\r\n* For each fused type, keep going right until it can work something out unambiguously. That complicates things a little but not too much since it still only considers one argument at a time.\r\n* If a type can't be worked out unambiguously then pick the first fused type and emit a runtime warning. My reasoning is:\r\n  * Backwards compatibility\r\n  * Mostly it doesn't matter - all of the overloads will work the same so picking the first one is reasonable.\r\n\r\nIt's a medium-sized change to the fused type dispatch code. #5298 may still be worthwhile as an interim measure to bring things back to where they were. But I don't think it's the long-term solution.",
            "created_at": "2023-03-06T18:35:25Z",
            "html_url": "https://github.com/cython/cython/issues/5297#issuecomment-1456735292",
            "id": 1456735292,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5297",
            "node_id": "IC_kwDOABDGAc5W1AQ8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1456735292/reactions"
            },
            "updated_at": "2023-03-06T18:35:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1456735292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> These are `def` functions that are called as normal Python objects (and likely from Python) so I don't think the type-cast can be transmitted to the call.\r\n\r\nI meant a type cast for the default argument, as part of the signature definition. That would help in some cases, as I described. Casting a `None` call argument would not help with calling def functions, right, but it would still help with fused cdef/cpdef functions.",
            "created_at": "2023-03-07T06:48:10Z",
            "html_url": "https://github.com/cython/cython/issues/5297#issuecomment-1457633013",
            "id": 1457633013,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5297",
            "node_id": "IC_kwDOABDGAc5W4bb1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1457633013/reactions"
            },
            "updated_at": "2023-03-07T06:48:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1457633013",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > These are `def` functions that are called as normal Python objects (and likely from Python) so I don't think the type-cast can be transmitted to the call.\r\n> \r\n> I meant a type cast for the default argument, as part of the signature definition. That would help in some cases, as I described. Casting a `None` call argument would not help with calling def functions, right, but it would still help with fused cdef/cpdef functions.\r\n\r\nThanks for the clarification. I misunderstood. That could help to set a default type where no type is given",
            "created_at": "2023-03-07T07:08:29Z",
            "html_url": "https://github.com/cython/cython/issues/5297#issuecomment-1457661834",
            "id": 1457661834,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5297",
            "node_id": "IC_kwDOABDGAc5W4ieK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1457661834/reactions"
            },
            "updated_at": "2023-03-07T07:08:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1457661834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5297/comments",
    "created_at": "2023-03-05T13:54:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "ae433a573cd41194ccb5788615bf7e36570c0491",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/ae433a573cd41194ccb5788615bf7e36570c0491",
            "created_at": "2023-03-05T15:22:11Z",
            "event": "referenced",
            "id": 8668155121,
            "node_id": "REFE_lADOABDGAc5f-dobzwAAAAIEqYzx",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8668155121"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-03-06T08:56:15Z",
            "event": "labeled",
            "id": 8671588865,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc5f-dobzwAAAAIE3fIB",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8671588865"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-03-06T08:56:15Z",
            "event": "labeled",
            "id": 8671588873,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "LE_lADOABDGAc5f-dobzwAAAAIE3fIJ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8671588873"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-03-06T08:56:18Z",
            "event": "milestoned",
            "id": 8671589343,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MIE_lADOABDGAc5f-dobzwAAAAIE3fPf",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8671589343"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5297/events",
    "html_url": "https://github.com/cython/cython/issues/5297",
    "id": 1610209819,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5297/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 838,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 49,
        "state": "open",
        "title": "3.0",
        "updated_at": "2023-03-07T07:21:05Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "I_kwDOABDGAc5f-dob",
    "number": 5297,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5297/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5297/timeline",
    "title": "[BUG] Change in behaviour when initializing a fused memoryview with `None`",
    "updated_at": "2023-03-07T07:08:29Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5297",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}