{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\nWhen using `cimport numpy` and `numpy` is not available at runtime, a segmentation fault is thrown.\r\n\r\n**To Reproduce**\r\nI used the following code\r\n```cython\r\n# distutils: language=c++\r\n# cython: language_level=3, binding=True\r\n\r\ncimport numpy as np\r\n\r\ndef test():\r\n    pass\r\n```\r\nand uninstalled numpy before importing the module. For Cython 3.0a1 and Cython 0.29.24 this leads to an import error, while for any version newer than Cython 3.0a1 this causes a segmentation fault.\r\n\r\n**Expected behavior**\r\nNo segmentation fault should be thrown.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: tested on Windows and Fedora\r\n - Python version: tested on 3.7 and 3.9\r\n - Cython version >3.0a1\r\n\r\n**Additional context**\r\nrunning the import in gdb leads to the following backtrace:\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n__Pyx_CLineForTraceback (c_line=3988, tstate=0x55555555afa0) at src/test.cpp:5923\r\n5923\t        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(\r\n(gdb) bt\r\n#0  __Pyx_CLineForTraceback (c_line=3988, tstate=0x55555555afa0) at src/test.cpp:5923\r\n#1  __Pyx_AddTraceback (filename=0x7ffff7fba89b \"test.pyx\", py_line=2, c_line=3988, \r\n    funcname=0x7ffff7fba886 \"init test\") at src/test.cpp:6105\r\n#2  __pyx_pymod_exec_test (__pyx_pyinit_module=<optimized out>) at src/test.cpp:4057\r\n#3  0x00007ffff7ddcdc3 in PyModule_ExecDef (module=<module at remote 0x7fffea250090>, def=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/moduleobject.c:399\r\n#4  0x00007ffff7ddcd34 in exec_builtin_or_dynamic (mod=<module at remote 0x7fffea250090>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/import.c:2248\r\n#5  _imp_exec_builtin_impl (mod=<module at remote 0x7fffea250090>, module=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/import.c:2341\r\n#6  _imp_exec_builtin (module=<optimized out>, mod=<module at remote 0x7fffea250090>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/clinic/import.c.h:388\r\n#7  0x00007ffff7d6a36b in cfunction_vectorcall_O (\r\n    func=<built-in method exec_dynamic of module object at remote 0x7fffea3746d0>, args=0x7fffea2de8f8, \r\n    nargsf=<optimized out>, kwnames=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/methodobject.c:516\r\n#8  0x00007ffff7d63fc7 in do_call_core (kwdict={}, callargs=(<module at remote 0x7fffea250090>,), \r\n    func=<built-in method exec_dynamic of module object at remote 0x7fffea3746d0>, tstate=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:5095\r\n#9  _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:3580\r\n#10 0x00007ffff7d5d00d in _PyEval_EvalFrame (throwflag=0, \r\n    f=Frame 0x7fffea2d7ac0, for file <frozen importlib._bootstrap>, line 228, in _call_with_frames_removed (f=<built-in method exec_dynamic of module object at remote 0x7fffea3746d0>, args=(<module at remote 0x7fffea250090>,), kwds={}), tstate=0x55555555afa0) at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/internal/pycore_ceval.h:40\r\n#11 _PyEval_EvalCode (tstate=<optimized out>, _co=<optimized out>, globals=<optimized out>, locals=<optimized out>, \r\n    args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x7fffea2d7e18, kwcount=0, kwstep=1, \r\n    defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name='_call_with_frames_removed', \r\n    qualname='_call_with_frames_removed') at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:4327\r\n#12 0x00007ffff7d6acee in _PyFunction_Vectorcall (func=<optimized out>, stack=<optimized out>, \r\n    nargsf=<optimized out>, kwnames=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/call.c:396\r\n#13 0x00007ffff7d6305e in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fffea2d7e08, \r\n    callable=<function at remote 0x7fffea38b430>, tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/cpython/abstract.h:118\r\n#14 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fffea2d7e08, \r\n    callable=<function at remote 0x7fffea38b430>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/cpython/abstract.h:127\r\n#15 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:5075\r\n#16 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:3487\r\n#17 0x00007ffff7d6afe3 in _PyEval_EvalFrame (throwflag=0, \r\n    f=Frame 0x7fffea2d7c80, for file <frozen importlib._bootstrap_external>, line 1181, in exec_module (self=<ExtensionFileLoader(name='rapidfuzz.test', path='/home/max/RapidFuzz/.venv/lib64/python3.9/site-packages/rapidfuzz/test.cpython-39-x86_64-linux-gnu.so') at remote 0x7fffea2498b0>, module=<module at remote 0x7fffea250090>), \r\n    tstate=0x55555555afa0) at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/internal/pycore_ceval.h:40\r\n#18 function_code_fastcall (tstate=0x55555555afa0, co=<optimized out>, args=<optimized out>, nargs=2, \r\n    globals=<optimized out>) at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/call.c:330\r\n#19 0x00007ffff7d5e5eb in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fffea310f50, \r\n    callable=<function at remote 0x7fffea34f790>, tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/cpython/abstract.h:118\r\n#20 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fffea310f50, \r\n    callable=<function at remote 0x7fffea34f790>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/cpython/abstract.h:127\r\n#21 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:5075\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n#22 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:3504\r\n#23 0x00007ffff7d6afe3 in _PyEval_EvalFrame (throwflag=0, \r\n    f=Frame 0x7fffea310dd0, for file <frozen importlib._bootstrap>, line 680, in _load_unlocked (spec=<ModuleSpec(name='rapidfuzz.test', loader=<ExtensionFileLoader(name='rapidfuzz.test', path='/home/max/RapidFuzz/.venv/lib64/python3.9/site-packages/rapidfuzz/test.cpython-39-x86_64-linux-gnu.so') at remote 0x7fffea2498b0>, origin='/home/max/RapidFuzz/.venv/lib64/python3.9/site-packages/rapidfuzz/test.cpython-39-x86_64-linux-gnu.so', loader_state=None, submodule_search_locations=None, _set_fileattr=True, _cached=None, _initializing=True) at remote 0x7fffea2492b0>, module=<module at remote 0x7fffea250090>), tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/internal/pycore_ceval.h:40\r\n#24 function_code_fastcall (tstate=0x55555555afa0, co=<optimized out>, args=<optimized out>, nargs=1, \r\n    globals=<optimized out>) at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/call.c:330\r\n```\r\nFor the full backtrace check the following file:\r\n[backtrace.txt](https://github.com/cython/cython/files/7169134/backtrace.txt)\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4377/comments",
    "created_at": "2021-09-15T10:12:38Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4377/events",
    "html_url": "https://github.com/cython/cython/issues/4377",
    "id": 996903109,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4377/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc47a4jF",
    "number": 4377,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] segmentation fault when numpy is not available",
    "updated_at": "2021-09-15T10:13:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4377",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
        "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
        "followers_url": "https://api.github.com/users/maxbachmann/followers",
        "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
        "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/maxbachmann",
        "id": 44199644,
        "login": "maxbachmann",
        "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
        "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
        "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
        "repos_url": "https://api.github.com/users/maxbachmann/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/maxbachmann"
    }
}