{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\nWhen using `cimport numpy` and `numpy` is not available at runtime, a segmentation fault is thrown.\r\n\r\n**To Reproduce**\r\nI used the following code\r\n```cython\r\n# distutils: language=c++\r\n# cython: language_level=3, binding=True\r\n\r\ncimport numpy as np\r\n\r\ndef test():\r\n    pass\r\n```\r\nand uninstalled numpy before importing the module. For Cython 3.0a1 and Cython 0.29.24 this leads to an import error, while for any version newer than Cython 3.0a1 this causes a segmentation fault.\r\n\r\n**Expected behavior**\r\nNo segmentation fault should be thrown.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: tested on Windows and Fedora\r\n - Python version: tested on 3.7 and 3.9\r\n - Cython version >3.0a1\r\n\r\n**Additional context**\r\nrunning the import in gdb leads to the following backtrace:\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n__Pyx_CLineForTraceback (c_line=3988, tstate=0x55555555afa0) at src/test.cpp:5923\r\n5923\t        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(\r\n(gdb) bt\r\n#0  __Pyx_CLineForTraceback (c_line=3988, tstate=0x55555555afa0) at src/test.cpp:5923\r\n#1  __Pyx_AddTraceback (filename=0x7ffff7fba89b \"test.pyx\", py_line=2, c_line=3988, \r\n    funcname=0x7ffff7fba886 \"init test\") at src/test.cpp:6105\r\n#2  __pyx_pymod_exec_test (__pyx_pyinit_module=<optimized out>) at src/test.cpp:4057\r\n#3  0x00007ffff7ddcdc3 in PyModule_ExecDef (module=<module at remote 0x7fffea250090>, def=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/moduleobject.c:399\r\n#4  0x00007ffff7ddcd34 in exec_builtin_or_dynamic (mod=<module at remote 0x7fffea250090>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/import.c:2248\r\n#5  _imp_exec_builtin_impl (mod=<module at remote 0x7fffea250090>, module=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/import.c:2341\r\n#6  _imp_exec_builtin (module=<optimized out>, mod=<module at remote 0x7fffea250090>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/clinic/import.c.h:388\r\n#7  0x00007ffff7d6a36b in cfunction_vectorcall_O (\r\n    func=<built-in method exec_dynamic of module object at remote 0x7fffea3746d0>, args=0x7fffea2de8f8, \r\n    nargsf=<optimized out>, kwnames=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/methodobject.c:516\r\n#8  0x00007ffff7d63fc7 in do_call_core (kwdict={}, callargs=(<module at remote 0x7fffea250090>,), \r\n    func=<built-in method exec_dynamic of module object at remote 0x7fffea3746d0>, tstate=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:5095\r\n#9  _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:3580\r\n#10 0x00007ffff7d5d00d in _PyEval_EvalFrame (throwflag=0, \r\n    f=Frame 0x7fffea2d7ac0, for file <frozen importlib._bootstrap>, line 228, in _call_with_frames_removed (f=<built-in method exec_dynamic of module object at remote 0x7fffea3746d0>, args=(<module at remote 0x7fffea250090>,), kwds={}), tstate=0x55555555afa0) at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/internal/pycore_ceval.h:40\r\n#11 _PyEval_EvalCode (tstate=<optimized out>, _co=<optimized out>, globals=<optimized out>, locals=<optimized out>, \r\n    args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x7fffea2d7e18, kwcount=0, kwstep=1, \r\n    defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name='_call_with_frames_removed', \r\n    qualname='_call_with_frames_removed') at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:4327\r\n#12 0x00007ffff7d6acee in _PyFunction_Vectorcall (func=<optimized out>, stack=<optimized out>, \r\n    nargsf=<optimized out>, kwnames=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/call.c:396\r\n#13 0x00007ffff7d6305e in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fffea2d7e08, \r\n    callable=<function at remote 0x7fffea38b430>, tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/cpython/abstract.h:118\r\n#14 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fffea2d7e08, \r\n    callable=<function at remote 0x7fffea38b430>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/cpython/abstract.h:127\r\n#15 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:5075\r\n#16 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:3487\r\n#17 0x00007ffff7d6afe3 in _PyEval_EvalFrame (throwflag=0, \r\n    f=Frame 0x7fffea2d7c80, for file <frozen importlib._bootstrap_external>, line 1181, in exec_module (self=<ExtensionFileLoader(name='rapidfuzz.test', path='/home/max/RapidFuzz/.venv/lib64/python3.9/site-packages/rapidfuzz/test.cpython-39-x86_64-linux-gnu.so') at remote 0x7fffea2498b0>, module=<module at remote 0x7fffea250090>), \r\n    tstate=0x55555555afa0) at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/internal/pycore_ceval.h:40\r\n#18 function_code_fastcall (tstate=0x55555555afa0, co=<optimized out>, args=<optimized out>, nargs=2, \r\n    globals=<optimized out>) at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/call.c:330\r\n#19 0x00007ffff7d5e5eb in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fffea310f50, \r\n    callable=<function at remote 0x7fffea34f790>, tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/cpython/abstract.h:118\r\n#20 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7fffea310f50, \r\n    callable=<function at remote 0x7fffea34f790>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/cpython/abstract.h:127\r\n#21 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:5075\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n#22 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Python/ceval.c:3504\r\n#23 0x00007ffff7d6afe3 in _PyEval_EvalFrame (throwflag=0, \r\n    f=Frame 0x7fffea310dd0, for file <frozen importlib._bootstrap>, line 680, in _load_unlocked (spec=<ModuleSpec(name='rapidfuzz.test', loader=<ExtensionFileLoader(name='rapidfuzz.test', path='/home/max/RapidFuzz/.venv/lib64/python3.9/site-packages/rapidfuzz/test.cpython-39-x86_64-linux-gnu.so') at remote 0x7fffea2498b0>, origin='/home/max/RapidFuzz/.venv/lib64/python3.9/site-packages/rapidfuzz/test.cpython-39-x86_64-linux-gnu.so', loader_state=None, submodule_search_locations=None, _set_fileattr=True, _cached=None, _initializing=True) at remote 0x7fffea2492b0>, module=<module at remote 0x7fffea250090>), tstate=0x55555555afa0)\r\n    at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Include/internal/pycore_ceval.h:40\r\n#24 function_code_fastcall (tstate=0x55555555afa0, co=<optimized out>, args=<optimized out>, nargs=1, \r\n    globals=<optimized out>) at /usr/src/debug/python3.9-3.9.7-1.fc34.x86_64/Objects/call.c:330\r\n```\r\nFor the full backtrace check the following file:\r\n[backtrace.txt](https://github.com/cython/cython/files/7169134/backtrace.txt)\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "It looks to be f18e3c9f9ce35ebf2cf2713775f35c47351e9c15 (i.e. my fault).",
            "created_at": "2021-09-15T16:20:27Z",
            "html_url": "https://github.com/cython/cython/issues/4377#issuecomment-920166724",
            "id": 920166724,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4377",
            "node_id": "IC_kwDOABDGAc422KFE",
            "performed_via_github_app": null,
            "updated_at": "2021-09-15T16:20:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/920166724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I think this is kind of intentional (partly).\r\n\r\nIf you're doing `cimport numpy` then you *should* be calling the Numpy C function `import_array` too. A lot of people were forgetting to do it (and getting odd crashes later because of it), so we started adding it in automatically.\r\n\r\nTo disable this autogeneration you can do:\r\n\r\n```\r\n# at global scope\r\n<void>np.import_array\r\n```\r\n\r\n(i.e. just \"use\" the symbol from Cython's point of view).\r\n\r\nIt looks like `np.import_array` crashes when the Numpy module isn't present, so possibly we should guard against that. But I'm not sure how right now.",
            "created_at": "2021-09-15T16:32:23Z",
            "html_url": "https://github.com/cython/cython/issues/4377#issuecomment-920175542",
            "id": 920175542,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4377",
            "node_id": "IC_kwDOABDGAc422MO2",
            "performed_via_github_app": null,
            "updated_at": "2021-09-15T16:32:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/920175542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "What I'm a little puzzled by is that the first thing `import_array` does is to try to import the Python module and raise an exception if that fails. So it should be pretty safe:\r\n\r\nhttps://github.com/numpy/numpy/blob/1f95d7914ff23ffeb95767de79c55b4f702e6f2f/numpy/core/code_generators/generate_numpy_api.py#L44-L52\r\n\r\n-------------------\r\n\r\nEdit: OK - the problem isn't in `import_array` - it actually happens if you raise any exception in `__Pyx_InitGlobals`",
            "created_at": "2021-09-15T16:43:56Z",
            "html_url": "https://github.com/cython/cython/issues/4377#issuecomment-920186943",
            "id": 920186943,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4377",
            "node_id": "IC_kwDOABDGAc422PA_",
            "performed_via_github_app": null,
            "updated_at": "2021-09-15T16:46:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/920186943",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> If you're doing cimport numpy then you should be calling the Numpy C function import_array too. A lot of people were forgetting to do it (and getting odd crashes later because of it), so we started adding it in automatically.\r\n\r\nYes I received a bug report yesterday, about my library crashing on arm since I started to use numpy: https://github.com/maxbachmann/Levenshtein/issues/12\r\nMy first thought was that I forgot to call import_array (which I did forget :smile:) and was very surprised to find, that this is automatically done by Cython.",
            "created_at": "2021-09-15T17:13:02Z",
            "html_url": "https://github.com/cython/cython/issues/4377#issuecomment-920210905",
            "id": 920210905,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4377",
            "node_id": "IC_kwDOABDGAc422U3Z",
            "performed_via_github_app": null,
            "updated_at": "2021-09-15T17:13:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/920210905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "```\r\n__Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback)\r\n```\r\n\r\nbut we import Numpy before initializing the string-tab... Should be fairly easily fixed I think",
            "created_at": "2021-09-15T17:24:36Z",
            "html_url": "https://github.com/cython/cython/issues/4377#issuecomment-920218750",
            "id": 920218750,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4377",
            "node_id": "IC_kwDOABDGAc422Wx-",
            "performed_via_github_app": null,
            "updated_at": "2021-09-15T17:24:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/920218750",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I received a bug report yesterday, about my library crashing on arm since I started to use numpy: maxbachmann/Levenshtein#12\r\n> My first thought was that I forgot to call import_array (which I did forget smile) and was very surprised to find, that this is automatically done by Cython.\r\n\r\nI attempted to fix this by manually running `np.import_array` https://github.com/maxbachmann/RapidFuzz/blob/7cc1e5a053c6f2e7d84dd7348b766a2044a48c71/src/cpp_process_cdist.pyx#L44. This did indeed fix the segmentation fault. Now I am down to being binary incompatible, since pibuildwheels does not correctly use `oldest-supported-numpy` https://github.com/piwheels/packages/issues/212 ...\r\n",
            "created_at": "2021-09-15T17:36:40Z",
            "html_url": "https://github.com/cython/cython/issues/4377#issuecomment-920226915",
            "id": 920226915,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4377",
            "node_id": "IC_kwDOABDGAc422Yxj",
            "performed_via_github_app": null,
            "updated_at": "2021-09-15T17:36:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/920226915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4377/comments",
    "created_at": "2021-09-15T10:12:38Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "da4f87a3cb3c09cef1a024f231c0b0c1f0f34c3a",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/da4f87a3cb3c09cef1a024f231c0b0c1f0f34c3a",
            "created_at": "2021-09-15T17:59:21Z",
            "event": "referenced",
            "id": 5307648049,
            "node_id": "REFE_lADOABDGAc47a4jFzwAAAAE8XEgx",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5307648049"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4377/events",
    "html_url": "https://github.com/cython/cython/issues/4377",
    "id": 996903109,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4377/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc47a4jF",
    "number": 4377,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] segmentation fault when numpy is not available",
    "updated_at": "2021-09-15T17:36:40Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4377",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
        "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
        "followers_url": "https://api.github.com/users/maxbachmann/followers",
        "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
        "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/maxbachmann",
        "id": 44199644,
        "login": "maxbachmann",
        "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
        "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
        "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
        "repos_url": "https://api.github.com/users/maxbachmann/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/maxbachmann"
    }
}