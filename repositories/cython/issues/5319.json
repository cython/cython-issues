{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nIt's a fairly common [and documented](https://cython.readthedocs.io/en/latest/src/userguide/extension_types.html?highlight=staticmethod#instantiation-from-existing-c-c-pointers) pattern to use cdef `@staticmethod`s and `@classmethod`s to construct a class from C types that cannot be converted to/from Python.\r\n\r\nHowever, this doesn't stop users from constructing the type normally from within Python (which may put it in an invalid state). The example in the documentation kind of does this by raising a `TypeError` from `__init__`, but it's possible to get around it by calling `__new__` from Python. It also makes instantiating it from the `staticmethod` somewhat fiddly.\r\n\r\n### Describe the solution you'd like.\r\n\r\nIt'd be nice to have a decorator to say \"this type can only be constructed from Cython\". `@internal` kind of does that, but isn't quite the same and isn't really documented (`@internal` hides the class, but once you have access to an instance of it I think you can still construct it).\r\n\r\n### Describe alternatives you've considered.\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\nThere's some fiddly decisions about inheritance, and what we allow/disallow in terms of `__cinit__`.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "So the bottom line is: using `__init__` raises an error, but can you use `__new__` to bypass it and create a class anyway?\r\nCan this be prevented by raising an error in `__new__`?\r\nAnd if not, I think \"*We're all consenting adults here*\" and the idea is, Feel free to shoot yourself in the foot if you have to.\r\nHas it already happened and can it really exhibit bad behavior unintentionally?",
            "created_at": "2023-03-15T12:42:25Z",
            "html_url": "https://github.com/cython/cython/issues/5319#issuecomment-1469935249",
            "id": 1469935249,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5319",
            "node_id": "IC_kwDOABDGAc5XnW6R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1469935249/reactions"
            },
            "updated_at": "2023-03-15T12:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1469935249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  Can this be prevented by raising an error in `__new__`?\r\n\r\nno, because the static method has to use `__new__` to construct the class (which doesn't necessarily have to be the case - it's possible to skip `__new__` in the C API, but Cython doesn't support it.\r\n\r\nIt clearly isn't an essential feature because the status quo does work - it'd just be a case of letting people control construction a little more.",
            "created_at": "2023-03-15T19:40:22Z",
            "html_url": "https://github.com/cython/cython/issues/5319#issuecomment-1470727920",
            "id": 1470727920,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5319",
            "node_id": "IC_kwDOABDGAc5XqYbw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1470727920/reactions"
            },
            "updated_at": "2023-03-15T19:40:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1470727920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree with \"we're all adults\". Being able to crash the Python interpreter when you're already able to execute arbitrary code is rarely a real threat. Being able to hide internal types from the module API seems helpful, but adding safe-guards against malicious instantiation seems overkill. If it's not easy to do, it's probably not worth it.",
            "created_at": "2023-03-20T10:11:54Z",
            "html_url": "https://github.com/cython/cython/issues/5319#issuecomment-1475953167",
            "id": 1475953167,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5319",
            "node_id": "IC_kwDOABDGAc5X-UIP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1475953167/reactions"
            },
            "updated_at": "2023-03-20T10:11:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1475953167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5319/comments",
    "created_at": "2023-03-15T10:32:27Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5319/events",
    "html_url": "https://github.com/cython/cython/issues/5319",
    "id": 1625239527,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5319/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5g3y_n",
    "number": 5319,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5319/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5319/timeline",
    "title": "[ENH] Have a way to disable construction from Python",
    "updated_at": "2023-03-20T10:11:54Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5319",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}