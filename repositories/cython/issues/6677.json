{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nCoroutines aren't an instance of `types.CoroutineType`. See the tests: https://github.com/cython/cython/blob/5084ea9a3be311b771baf3cdafe464914f86ec35/tests/run/test_coroutines_pep492.pyx#L879\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nI mean look at the test case.\r\n\r\n### Expected behaviour\r\n\r\nCompare against the upstream CPython test: https://github.com/python/cpython/blob/aa845af9bb39b3e2ed08bbb00a8e932a97be8fc0/Lib/test/test_coroutines.py#L537\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.13\r\n\r\n### Cython version\r\n\r\n3.0.11\r\n\r\n### Additional context\r\n\r\nYou can see this effecting https://github.com/python-trio/trio/actions/runs/13209523982/job/36880266237\r\n\r\nThis is mainly important for type checking, because it would be really nice to have the guarantee that async functions return `types.CoroutineType`!",
    "closed_at": "2025-02-17T11:37:55Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`types.CoroutineType` is a specific CPython type that allows suspending its byte code execution etc. It is not the same as Cython's coroutine implementation (which has no byte code) and thus should fail the `isinstance()` check, as it does. Thus, the behaviour is correct.\n\nI think the problem is that Trio does a direct type check (thus explicitly excluding anything but plain Python coroutines) rather than using the appropriate ABCs. See\nhttps://docs.python.org/3/library/collections.abc.html#collections.abc.Awaitable\nand the ones following.\n",
            "created_at": "2025-02-17T11:37:55Z",
            "html_url": "https://github.com/cython/cython/issues/6677#issuecomment-2662860203",
            "id": 2662860203,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6677",
            "node_id": "IC_kwDOABDGAc6euAWr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2662860203/reactions"
            },
            "updated_at": "2025-02-17T11:37:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2662860203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the response.\n\nI think it's probably worth it to point out `CoroutineType` is also mentioned in the Python documentation: if docs are part of what it means to be Python, then `CoroutineType` certainly applies! Notably this is a thing for PyPy too.\n\nAlso Cython already supports the relevant attributes on its version of coroutines (even if it's faked). Gone are the days where `.cr_frame` would return `None`.\n\n---\n\n> I think the problem is that Trio does a direct type check (thus explicitly excluding anything but plain Python coroutines) rather than using the appropriate ABCs.\n\nThe context for this CI run is upgrading mypy; typeshed has recently moved the e.g. `.cr_frame` attributes from `collections.abc.Coroutine` to `types.CoroutineType`. This is because asyncio coroutines should be called coroutines but don't have these special attributes. We *want* to exclude coroutines that don't have them.\n\n(Is this issue completely self-inflicted/due to optional type hints not matching reality? Yes. Is it already solved on our side with a type ignore? Yes. But I think still important to fix even if trio wouldn't benefit.)",
            "created_at": "2025-02-17T14:13:45Z",
            "html_url": "https://github.com/cython/cython/issues/6677#issuecomment-2663253760",
            "id": 2663253760,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6677",
            "node_id": "IC_kwDOABDGAc6evgcA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2663253760/reactions"
            },
            "updated_at": "2025-02-17T14:13:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2663253760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40616000?v=4",
                "events_url": "https://api.github.com/users/A5rocks/events{/privacy}",
                "followers_url": "https://api.github.com/users/A5rocks/followers",
                "following_url": "https://api.github.com/users/A5rocks/following{/other_user}",
                "gists_url": "https://api.github.com/users/A5rocks/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/A5rocks",
                "id": 40616000,
                "login": "A5rocks",
                "node_id": "MDQ6VXNlcjQwNjE2MDAw",
                "organizations_url": "https://api.github.com/users/A5rocks/orgs",
                "received_events_url": "https://api.github.com/users/A5rocks/received_events",
                "repos_url": "https://api.github.com/users/A5rocks/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/A5rocks/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/A5rocks/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/A5rocks",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But I think still important to fix even if trio wouldn't benefit\n\nBut it can't be fixed. `CoroutineType` doesn't specify a set of behaviour - it specifies an exact implementation. The whole point of using Cython is to use _our_  implementation (which lets you do extra things that you can't do in plain Python).",
            "created_at": "2025-02-17T18:32:04Z",
            "html_url": "https://github.com/cython/cython/issues/6677#issuecomment-2663856518",
            "id": 2663856518,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6677",
            "node_id": "IC_kwDOABDGAc6exzmG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2663856518/reactions"
            },
            "updated_at": "2025-02-17T18:32:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2663856518",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6677/comments",
    "created_at": "2025-02-17T11:19:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-17T11:37:55Z",
            "event": "closed",
            "id": 16332213335,
            "node_id": "CE_lADOABDGAc6qUrfrzwAAAAPNecxX",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "url": "https://api.github.com/repos/cython/cython/issues/events/16332213335"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-17T11:38:04Z",
            "event": "labeled",
            "id": 16332215209,
            "label": {
                "color": "000000",
                "name": "R: third party"
            },
            "node_id": "LE_lADOABDGAc6qUrfrzwAAAAPNedOp",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16332215209"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6677/events",
    "html_url": "https://github.com/cython/cython/issues/6677",
    "id": 2857547755,
    "labels": [
        {
            "color": "000000",
            "default": false,
            "description": "",
            "id": 1840758668,
            "name": "R: third party",
            "node_id": "MDU6TGFiZWwxODQwNzU4NjY4",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20third%20party"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6677/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6qUrfr",
    "number": 6677,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6677/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6677/timeline",
    "title": "[BUG] ensure coroutines are `types.CoroutineType`",
    "updated_at": "2025-02-17T18:32:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6677",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/40616000?v=4",
        "events_url": "https://api.github.com/users/A5rocks/events{/privacy}",
        "followers_url": "https://api.github.com/users/A5rocks/followers",
        "following_url": "https://api.github.com/users/A5rocks/following{/other_user}",
        "gists_url": "https://api.github.com/users/A5rocks/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/A5rocks",
        "id": 40616000,
        "login": "A5rocks",
        "node_id": "MDQ6VXNlcjQwNjE2MDAw",
        "organizations_url": "https://api.github.com/users/A5rocks/orgs",
        "received_events_url": "https://api.github.com/users/A5rocks/received_events",
        "repos_url": "https://api.github.com/users/A5rocks/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/A5rocks/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/A5rocks/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/A5rocks",
        "user_view_type": "public"
    }
}