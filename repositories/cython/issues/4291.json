{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I am actually not sure if this counts as a feature request or a bug report...\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWe've had to write ugly codes to handle version-dependent struct changes from external libraries like this (a mini example showing a new struct member) \r\n```cython\r\ncdef extern from '...' nogil:\r\n    IF CUDA_VERSION > 0:\r\n        ctypedef struct _PointerAttributes 'cudaPointerAttributes':\r\n            int type\r\n            int device\r\n            void* devicePointer\r\n            void* hostPointer\r\n    ELSE:\r\n        ctypedef struct _PointerAttributes 'cudaPointerAttributes':\r\n            int device\r\n            void* devicePointer\r\n            void* hostPointer\r\n```\r\nwhereas a far cleaner solution that mimics C `#if ... #endif` macros would simply be\r\n```cython\r\ncdef extern from '...' nogil:\r\n    ctypedef struct _PointerAttributes 'cudaPointerAttributes':\r\n        IF CUDA_VERSION > 0:\r\n            int type\r\n        int device\r\n        void* devicePointer\r\n        void* hostPointer\r\n```\r\nwhich currently would raise an error (`Expected an identifier, found 'IF'`), so in reality every time the struct layout changes, we have to duplicate the entire `ctypedef` block...\r\n\r\n**Describe the solution you'd like**\r\nSee above.\r\n\r\n**Describe alternatives you've considered**\r\nI can't think of other alternatives that can be as intuitive as the proposed one...\r\n\r\n**Additional context**\r\n",
    "closed_at": "2021-07-16T21:23:59Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Note that you don't have to do this at all. Just define the field. As long as you don't use it, Cython won't generate any code for it, and the C compiler will see the actual header file definition in the end.\r\n\r\n(Automatic struct-to-dict conversion counts as usage, though, in case you need that.)",
            "created_at": "2021-07-16T20:25:37Z",
            "html_url": "https://github.com/cython/cython/issues/4291#issuecomment-881698917",
            "id": 881698917,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4291",
            "node_id": "IC_kwDOABDGAc40jahl",
            "performed_via_github_app": null,
            "updated_at": "2021-07-16T20:25:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/881698917",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks, @scoder. What if it's a name change (say `type`with ver < X.Y.Z -> `memType` with ver >= X.Y.Z in my example)? Do I list them both, and access the members in a version-dependent fashion?\r\n\r\nThe struct-to-dict conversion is interesting, thanks for the tip. Can struct members like `char name[8]` or `int shape[3]` be converted automatically? (I can try it myself later.)\r\n\r\nGenerally, though, some of these annoying structs are needed to be exposed to the Python land, so I'd say they are used...But if the auto-conversion is powerful enough, maybe we could just dump them through Cython's converter without worrying about the exact members in the struct at all?",
            "created_at": "2021-07-16T20:42:24Z",
            "html_url": "https://github.com/cython/cython/issues/4291#issuecomment-881706730",
            "id": 881706730,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4291",
            "node_id": "IC_kwDOABDGAc40jcbq",
            "performed_via_github_app": null,
            "updated_at": "2021-07-16T20:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/881706730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Thanks, @scoder. What if it's a name change (say `type`with ver < X.Y.Z -> `memType` with ver >= X.Y.Z in my example)? Do I list them both, and access the members in a version-dependent fashion?\r\n\r\nYou can do that. In the worst case, you'd have to define a C macro for the access to make sure that the C compiler only gets to see them if they truly exist. But that's trivial given that you can insert verbatim C code in the `cdef extern` block.\r\n\r\nAlso look at explicit cname overrides (`cdef int type \"real_type_c_name\"`). They might help in some cases (though probably not in the case above).\r\n\r\n\r\n> The struct-to-dict conversion is interesting, thanks for the tip. Can struct members like `char name[8]` or `int shape[3]` be converted automatically? (I can try it myself later.)\r\n\r\nI think so. If not, that's a bug.\r\n\r\n\r\n> Generally, though, some of these annoying structs are needed to be exposed to the Python land, so I'd say they are used...But if the auto-conversion is powerful enough, maybe we could just dump them through Cython's converter without worrying about the exact members in the struct at all?\r\n\r\nstruct-to-dict-to-struct conversion copies all members, necessarily. If a Cython declared member doesn't exist in C, you'll get invalid C code. So that won't help you. If you don't need the conflicting members, or can live with copying them yourself, then you might still get away with declaring a struct without these names (or declaring the struct twice, once with, once without, under different Cython names), and then using the automatic conversion only with the reduced struct.\r\n\r\nLooks like this is neither a bug nor a ticket request. If you need more help, please contact the cython-users mailing list.",
            "created_at": "2021-07-16T21:23:59Z",
            "html_url": "https://github.com/cython/cython/issues/4291#issuecomment-881726232",
            "id": 881726232,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4291",
            "node_id": "IC_kwDOABDGAc40jhMY",
            "performed_via_github_app": null,
            "updated_at": "2021-07-16T21:23:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/881726232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks, @scoder! I've been exploring along the lines of your reply and so far I feel our old way (duplicating `ctypedef` blocks) is still the best workaround. For example,\r\n> If you don't need the conflicting members, or can live with copying them yourself, \r\n\r\nWe already copy them in a version-dependent fashion\r\n```cython\r\ncpdef getPtrAttrs(intptr ptr):\r\n    cdef _PointerAttributes attrs\r\n    cdef dict out = {}\r\n    status = cudaPointerGetAttributes(&attrs, <void*>ptr)\r\n    IF VERSION > 123:\r\n        out['type'] = attrs.type\r\n    ELSE:\r\n        out['memType'] = attrs.memType\r\n    # copy all the rest common fields to out, ex:\r\n    # out['device'] = attrs.device\r\n    return out\r\n```\r\ngiven this usage pattern, I still wonder if it's possible to support my proposed solution to enable a uniform style in both importing and accessing:\r\n```cython\r\ncdef extern from '...' nogil:\r\n    ctypedef struct _PointerAttributes 'cudaPointerAttributes':\r\n        IF VERSION > 123:\r\n            int type\r\n        ELSE:\r\n            int memType\r\n        int device\r\n        void* devicePointer\r\n        void* hostPointer\r\n```\r\nIs there a particular challenge so that this is currently unsupported?\r\n\r\n> or declaring the struct twice, once with, once without, under different Cython names\r\n\r\nThis is functionally no different from the above pattern, though together with auto-conversion it does reduce the code duplication in accessing I think:\r\n```cython\r\ncpdef getPtrAttrs(intptr ptr):\r\n    IF VERSION > 123:\r\n        cdef _PointerAttributes_123 attrs\r\n    ELSE:\r\n        cdef _PointerAttributes_old attrs\r\n    status = cudaPointerGetAttributes(&attrs, <void*>ptr)\r\n    return attrs  # <-- auto-convert!\r\n```\r\nBut with my proposal it can be as clean as\r\n```cython\r\ncpdef getPtrAttrs(intptr ptr):\r\n    cdef _PointerAttributes attrs\r\n    status = cudaPointerGetAttributes(&attrs, <void*>ptr)\r\n    return attrs  # <-- auto-convert!\r\n```\r\nwhich would be something very nice!",
            "created_at": "2021-07-19T04:40:19Z",
            "html_url": "https://github.com/cython/cython/issues/4291#issuecomment-882231264",
            "id": 882231264,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4291",
            "node_id": "IC_kwDOABDGAc40lcfg",
            "performed_via_github_app": null,
            "updated_at": "2021-07-19T04:40:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/882231264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Could we move this discussion to the cython-users mailing list? There may be others listening who have solved similar issues. A ticket system tends to have a very limited audience.",
            "created_at": "2021-07-19T06:22:27Z",
            "html_url": "https://github.com/cython/cython/issues/4291#issuecomment-882273924",
            "id": 882273924,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4291",
            "node_id": "IC_kwDOABDGAc40lm6E",
            "performed_via_github_app": null,
            "updated_at": "2021-07-19T06:22:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/882273924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4291/comments",
    "created_at": "2021-07-16T18:29:58Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-16T20:42:24Z",
            "event": "mentioned",
            "id": 5032778897,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzMjc3ODg5Nw==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5032778897"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-16T20:42:24Z",
            "event": "subscribed",
            "id": 5032778900,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzI3Nzg5MDA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5032778900"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-16T21:23:59Z",
            "event": "closed",
            "id": 5032903554,
            "node_id": "MDExOkNsb3NlZEV2ZW50NTAzMjkwMzU1NA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5032903554"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-16T21:23:59Z",
            "event": "mentioned",
            "id": 5032903567,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzMjkwMzU2Nw==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5032903567"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-16T21:23:59Z",
            "event": "subscribed",
            "id": 5032903570,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzI5MDM1NzA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5032903570"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-16T21:24:16Z",
            "event": "labeled",
            "id": 5032904408,
            "label": {
                "color": "444444",
                "name": "R: worksforme"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDUwMzI5MDQ0MDg=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5032904408"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-19T04:40:19Z",
            "event": "mentioned",
            "id": 5036114615,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTAzNjExNDYxNQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5036114615"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-19T04:40:19Z",
            "event": "subscribed",
            "id": 5036114616,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMzYxMTQ2MTY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5036114616"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4291/events",
    "html_url": "https://github.com/cython/cython/issues/4291",
    "id": 946510240,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556354,
            "name": "R: worksforme",
            "node_id": "MDU6TGFiZWw0MjU1NTYzNTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20worksforme"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4291/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5NDY1MTAyNDA=",
    "number": 4291,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "[ENH][BUG] Allow compile-time conditionals inside `ctypedef` blocks",
    "updated_at": "2021-07-19T06:22:27Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4291",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
        "events_url": "https://api.github.com/users/leofang/events{/privacy}",
        "followers_url": "https://api.github.com/users/leofang/followers",
        "following_url": "https://api.github.com/users/leofang/following{/other_user}",
        "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/leofang",
        "id": 5534781,
        "login": "leofang",
        "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
        "organizations_url": "https://api.github.com/users/leofang/orgs",
        "received_events_url": "https://api.github.com/users/leofang/received_events",
        "repos_url": "https://api.github.com/users/leofang/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/leofang"
    }
}