{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Cython doesn't seem to want to play nice when being imported. I get this traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 668, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 638, in _load_backward_compatible\r\n  File \"/home/mental/.local/lib/python3.7/site-packages/foob-0.0.1-py3.7-linux-x86_64.egg/t/__init__.py\", line 1, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 668, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 638, in _load_backward_compatible\r\nSystemError: <method 'load_module' of 'zipimport.zipimporter' objects> returned NULL without setting an error\r\n```\r\n\r\nI've got a very simple package structure that looks like this:\r\n```\r\n.\r\n├── r\r\n├── setup.py\r\n└── t\r\n    ├── e\r\n    │   ├── f.pyx\r\n    │   └── __init__.pyx\r\n    └── __init__.py\r\n\r\n3 directories, 4 files\r\n```\r\nHere are the contents of the source files:\r\n\r\n```py\r\n# setup.py\r\nimport glob\r\nfrom setuptools import setup\r\nfrom Cython.Build import cythonize\r\n\r\next_sources = [fp for fp in glob.glob('t/**/*.pyx', recursive=True)]\r\n\r\nsetup(\r\n    name='foob',\r\n    version='0.0.1',\r\n    packages=['t', 't.e'],\r\n    ext_modules=cythonize(ext_sources, compiler_directives={'language_level': '3'})\r\n)\r\n\r\n# t/__init__.py\r\nfrom .e import g\r\n\r\nprint(g()) \r\n\r\n# t/e/__init__.pyx\r\nfrom .f import g\r\n\r\n# t/e/f.pyx\r\ndef g() -> int:\r\n    return 3\r\n```\r\n\r\nRunning `python setup.py install --user` completes succesfully with this output: https://gist.github.com/mental32/fe1ecdf5ba6f412e2c868f39582fe27b\r\n\r\nI use the `r/` directory so I can force Python to import the installed package instead of the local one.\r\n\r\n```\r\n$ cd r\r\n$ python\r\nPython 3.7.4 (default, Jul 16 2019, 07:12:58) \r\n[GCC 9.1.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import t\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 668, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 638, in _load_backward_compatible\r\n  File \"/home/mental/.local/lib/python3.7/site-packages/foob-0.0.1-py3.7-linux-x86_64.egg/t/__init__.py\", line 1, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 668, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 638, in _load_backward_compatible\r\nSystemError: <method 'load_module' of 'zipimport.zipimporter' objects> returned NULL without setting an error\r\n>>>\r\n```\r\n\r\nMy apologies if this is a simple issue but I've been searching through google and the cython docs to try and figure out why this issue is occuring, the closes I could get is [this SO post](https://stackoverflow.com/questions/53972542/how-to-fix-systemerror-built-in-function-name-returned-null-without-settin) and if I'm understanding the accepted answer correctly ~~this seems to be a codegen issue, so I assume Cython is responsible.~~\r\n\r\nI'm using Python `3.7.4` with Cython `0.29.13` installed from pypi and uname displays:\r\n`Linux hydrogen 5.3.1-arch1-1-ARCH #1 SMP PREEMPT Sat Sep 21 11:33:49 UTC 2019 x86_64 GNU/Linux`\r\n\r\nI've asked a friend if they could reproduce this and it worked successfully on their machine Cython `0.29.13` Python `3.7.3` and with uname: `Linux toshiba-inu 5.0.0-29-generic #31-Ubuntu SMP Thu Sep 12 13:05:32 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\nSo now I'm wondering what's wrong with my environment that causes this issues to flair up?",
    "closed_at": "2020-01-05T09:26:19Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I wonder why `zipimport` gets involved here. From the path, it doesn't look like the package gets installed as zip/egg archive, it seems to get unpacked. Could you verify that?\r\n\r\nIn any case, installing a package as zip/egg archive that contains binary modules is mostly useless because in order to import the extensions, Python has to unpack them into a temp directory and load them from there, which eats local storage space, messes up paths, etc. You should always declare such packages as `zip_safe=False`.",
            "created_at": "2019-09-29T06:03:24Z",
            "html_url": "https://github.com/cython/cython/issues/3157#issuecomment-536253800",
            "id": 536253800,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3157",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjI1MzgwMA==",
            "updated_at": "2019-09-29T06:03:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/536253800",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "@scoder The package does get installed as a egg, I re ran the install script and the output is virtually identical to what I uploaded earlier in a gist, note [this line](https://gist.github.com/mental32/fe1ecdf5ba6f412e2c868f39582fe27b#file-foobar-L64).\r\n\r\nOut of paranoia I ran file over the egg and it came back identified as an archive:\r\n`/home/mental/.local/lib/python3.7/site-packages/foob-0.0.1-py3.7-linux-x86_64.egg: Zip archive data, at least v2.0 to extract`\r\n\r\nThe [setuptools docs](https://setuptools.readthedocs.io/en/latest/setuptools.html#setting-the-zip-safe-flag) dictate that a package will be assumed zip unsafe if there are any C extensions or datafiles found. I wanted to test this so I explicitly passed `zip_safe=False` into the setup calls kwargs and an egg was still produced.\r\n\r\nThis now seems like this is an issue with setuptools. I'm using `41.2.0`.\r\n\r\nCan anyone else reproduce this?",
            "created_at": "2019-09-29T12:51:30Z",
            "html_url": "https://github.com/cython/cython/issues/3157#issuecomment-536297352",
            "id": 536297352,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3157",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjI5NzM1Mg==",
            "updated_at": "2019-09-29T12:51:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/536297352",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/27660514?v=4",
                "events_url": "https://api.github.com/users/mental32/events{/privacy}",
                "followers_url": "https://api.github.com/users/mental32/followers",
                "following_url": "https://api.github.com/users/mental32/following{/other_user}",
                "gists_url": "https://api.github.com/users/mental32/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mental32",
                "id": 27660514,
                "login": "mental32",
                "node_id": "MDQ6VXNlcjI3NjYwNTE0",
                "organizations_url": "https://api.github.com/users/mental32/orgs",
                "received_events_url": "https://api.github.com/users/mental32/received_events",
                "repos_url": "https://api.github.com/users/mental32/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mental32/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mental32/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mental32"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3157/comments",
    "created_at": "2019-09-28T20:26:01Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-29T12:51:31Z",
            "event": "mentioned",
            "id": 2671194769,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjY3MTE5NDc2OQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2671194769"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-09-29T12:51:31Z",
            "event": "subscribed",
            "id": 2671194770,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2NzExOTQ3NzA=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2671194770"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/27660514?v=4",
                "events_url": "https://api.github.com/users/mental32/events{/privacy}",
                "followers_url": "https://api.github.com/users/mental32/followers",
                "following_url": "https://api.github.com/users/mental32/following{/other_user}",
                "gists_url": "https://api.github.com/users/mental32/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mental32",
                "id": 27660514,
                "login": "mental32",
                "node_id": "MDQ6VXNlcjI3NjYwNTE0",
                "organizations_url": "https://api.github.com/users/mental32/orgs",
                "received_events_url": "https://api.github.com/users/mental32/received_events",
                "repos_url": "https://api.github.com/users/mental32/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mental32/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mental32/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mental32"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-01-05T09:26:19Z",
            "event": "closed",
            "id": 2922354597,
            "node_id": "MDExOkNsb3NlZEV2ZW50MjkyMjM1NDU5Nw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2922354597"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3157/events",
    "html_url": "https://github.com/cython/cython/issues/3157",
    "id": 499817496,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3157/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTk4MTc0OTY=",
    "number": 3157,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "SystemError raised from zipimporter when importing a simple package",
    "updated_at": "2020-01-05T09:26:19Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3157",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/27660514?v=4",
        "events_url": "https://api.github.com/users/mental32/events{/privacy}",
        "followers_url": "https://api.github.com/users/mental32/followers",
        "following_url": "https://api.github.com/users/mental32/following{/other_user}",
        "gists_url": "https://api.github.com/users/mental32/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mental32",
        "id": 27660514,
        "login": "mental32",
        "node_id": "MDQ6VXNlcjI3NjYwNTE0",
        "organizations_url": "https://api.github.com/users/mental32/orgs",
        "received_events_url": "https://api.github.com/users/mental32/received_events",
        "repos_url": "https://api.github.com/users/mental32/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mental32/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mental32/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mental32"
    }
}