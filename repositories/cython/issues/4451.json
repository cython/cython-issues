{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "In modern C++, it's quite normal to use `std::move` on strings to avoid unnecessary copies.\r\nIt's possible that a developer accidentally calls `move` on a Python string object *before* conversion to a C++ string:\r\n\r\n```cython\r\n\r\nfrom libcpp.string cimport string\r\nfrom libcpp.utility cimport move\r\nfrom libcpp.vector cimport vector\r\n\r\ndef test(s):\r\n    cdef vector[string] v\r\n    v.push_back(move(s))\r\n```\r\n\r\nIn C++, redundant moves (e.g. when moving a `char*`) are harmless.\r\nBut in Cython, the snippet above causes a reference counting error: Cython assumes that `move` returns an owned reference and calls `Py_DECREF` on it after the conversion to a C++ string. This ends up causing subtle corruption of the Python heap -- in our case, we ended up observing non-deterministic crashes during garbage collection.\r\n\r\n**Describe the solution you'd like**\r\nI'm hoping it's possible to add a compiler error for `libcpp.utility.move[PyObject*]` -- calling this function is always undefined behavior as it doesn't perform the `Py_INCREF` expected for functions of its signature.\r\n\r\n**Additional context**\r\nI realize that Cython works \"as designed\" here. But it's too easy to mess this up when C++ strings should use `move` and Python strings must not use `move`. Given how common `std::move` is in modern C++ and how difficult it is to debug the crashes resulting from this mistake, I think it's worth adding a special case to the compiler.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "It's probably a reasonable thing to add (especially since we already define a small wrapper function around `std::move`). Maybe just `= delete` the `PyObject*` overload?",
            "created_at": "2021-11-08T22:48:39Z",
            "html_url": "https://github.com/cython/cython/issues/4451#issuecomment-963644467",
            "id": 963644467,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4451",
            "node_id": "IC_kwDOABDGAc45cAwz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/963644467/reactions"
            },
            "updated_at": "2021-11-08T22:48:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/963644467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is the C++ code that I get on my side:\r\n```c++\r\n  /* \"cpp_move.pyx\":7\r\n * def test(s):\r\n *     cdef vector[string] v\r\n *     v.push_back(move(s))             # <<<<<<<<<<<<<<\r\n */\r\n  __pyx_t_1 = cython_std::move<PyObject *>(__pyx_v_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_1);\r\n  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 7, __pyx_L1_error)\r\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\r\n  try {\r\n    __pyx_v_v.push_back(__pyx_t_2);\r\n  } catch(...) {\r\n    __Pyx_CppExn2PyErr();\r\n    __PYX_ERR(0, 7, __pyx_L1_error)\r\n  }\r\n```\r\nApparently, Cython assumes that the return type of `move(object)` is a Python object. That is correct, given the templated signature of the function. As you noted, however, it is in fact incorrect to call `move()` on a Python object in the first place. It's ok to do that with a `PyObject*`, or any C/C++ type, really. It is not ok to pass an owned object reference through `move()`.\r\n\r\n`move()` is probably amongst the most special in that regard, but are there really use cases for passing owned references into C++ (standard) functions? As opposed to plain `PyObject*` ? I'm wondering if we should just always cast to `PyObject*` automatically, at least for undefined template typed arguments. Is it really reasonable to define a C++ function that can work with an arbitrary template type (and returns it), that works equally well with regular C++ types and owned Python references? Would you not define an overloaded function in that case, with a dedicated object->object signature?",
            "created_at": "2021-11-09T08:44:35Z",
            "html_url": "https://github.com/cython/cython/issues/4451#issuecomment-963931420",
            "id": 963931420,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4451",
            "node_id": "IC_kwDOABDGAc45dG0c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/963931420/reactions"
            },
            "updated_at": "2021-11-09T08:44:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/963931420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> but are there really use cases for passing owned references into C++ (standard) functions? As opposed to plain `PyObject*` ? I'm wondering if we should just always cast to `PyObject*` automatically, at least for undefined template typed arguments\r\n\r\nWe use `object` arguments all over the place in our wrapping of the Python C API so we don't want to break owned references entirely. However, I agree that it's dodgy for the compiler to deduce an \"owned reference\" template argument since it's pretty unlikely to automatically be right. I'd be fine with allowing `move[object](o)` (i.e. the letting the user manually specify the template argument but not deducing it automatically).\r\n\r\nRelatedly I was proposing to ban `object` (and other reference counted types) as a container template argument (https://github.com/cython/cython/pull/4337) because there were too many people saying \"I created a vector of memorviews and now everything is segfaulting\".\r\n\r\nSo yes - something similar to that seems reasonable to me.",
            "created_at": "2021-11-09T18:37:18Z",
            "html_url": "https://github.com/cython/cython/issues/4451#issuecomment-964426441",
            "id": 964426441,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4451",
            "node_id": "IC_kwDOABDGAc45e_rJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/964426441/reactions"
            },
            "updated_at": "2021-11-09T18:37:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/964426441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "C++ template argument deduction involves decay (array-to-pointer / function-to-pointer / dropping cv-qualifiers); I think it makes sense if Cython template argument deduction adds object-to-PyObject* to that list.",
            "created_at": "2021-11-09T18:46:34Z",
            "html_url": "https://github.com/cython/cython/issues/4451#issuecomment-964433711",
            "id": 964433711,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4451",
            "node_id": "IC_kwDOABDGAc45fBcv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/964433711/reactions"
            },
            "updated_at": "2021-11-09T18:46:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/964433711",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243140?v=4",
                "events_url": "https://api.github.com/users/dgrunwald/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald/followers",
                "following_url": "https://api.github.com/users/dgrunwald/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald",
                "id": 243140,
                "login": "dgrunwald",
                "node_id": "MDQ6VXNlcjI0MzE0MA==",
                "organizations_url": "https://api.github.com/users/dgrunwald/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4451/comments",
    "created_at": "2021-11-05T13:55:03Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-06T17:34:46Z",
            "event": "subscribed",
            "id": 5578243800,
            "node_id": "SE_lADOABDGAc4-VtbAzwAAAAFMfT7Y",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5578243800"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-09T08:32:32Z",
            "event": "labeled",
            "id": 5588019852,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "LE_lADOABDGAc4-VtbAzwAAAAFNEmqM",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5588019852"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-09T08:32:32Z",
            "event": "labeled",
            "id": 5588019855,
            "label": {
                "color": "444444",
                "name": "Error Reporting"
            },
            "node_id": "LE_lADOABDGAc4-VtbAzwAAAAFNEmqP",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5588019855"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4451/events",
    "html_url": "https://github.com/cython/cython/issues/4451",
    "id": 1045878464,
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557478,
            "name": "Error Reporting",
            "node_id": "MDU6TGFiZWw0MjU1NTc0Nzg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Error%20Reporting"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4451/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc4-VtbA",
    "number": 4451,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/cython/cython/issues/4451/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4451/timeline",
    "title": "[ENH] Add warning/error for using std::move on Python object",
    "updated_at": "2021-11-09T18:46:34Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4451",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/243140?v=4",
        "events_url": "https://api.github.com/users/dgrunwald/events{/privacy}",
        "followers_url": "https://api.github.com/users/dgrunwald/followers",
        "following_url": "https://api.github.com/users/dgrunwald/following{/other_user}",
        "gists_url": "https://api.github.com/users/dgrunwald/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dgrunwald",
        "id": 243140,
        "login": "dgrunwald",
        "node_id": "MDQ6VXNlcjI0MzE0MA==",
        "organizations_url": "https://api.github.com/users/dgrunwald/orgs",
        "received_events_url": "https://api.github.com/users/dgrunwald/received_events",
        "repos_url": "https://api.github.com/users/dgrunwald/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dgrunwald/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dgrunwald/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dgrunwald"
    }
}