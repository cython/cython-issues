{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen using `cython.declare` in Pure Python Mode (in my case to change visibility) you cannot use `__slots__`.\r\n\r\nPure Python Mode's big advantage is being able to provide code that works even when it is not cythonized, that's why when my code is not cythonized I want to use `__slots__` to still have some improvements in memory usage.\r\n\r\nThe issue comes from `cython.declare` initializing the variable, when used with classes this becomes a class-attribute so you cannot use it in `__slots__`.\r\n\r\nSee the following REPL:\r\n```cython\r\n>>> @cython.cclass\r\n... class Test:\r\n...     value = cython.declare(cython.int)\r\n...     __slots__ = ('value',)\r\n...     def __init__(self, value):\r\n...             self.value = value\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\nValueError: 'value' in __slots__ conflicts with class variable\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nTechnically you could skip using `__slots__`, but I wouldn't consider this an acceptable work-around.\r\n\r\n**Potential fixes**\r\n*edited: my proposal is not a valid typehint*",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "I assume you're using `declare` because you want to set the visibility? So just using annotations wouldn't work:\r\n\r\n```\r\nvalue: cython.int\r\n```\r\n\r\nOne alternative that might work now would be to use `if cython.compiled` to exclude the `declare` assignments from running in pure Python code. It's possible that Cython may not like that, but I'd prefer it to adding more syntax.\r\n\r\nSecond, we could look at having the shadow `cclass` decorator clean up empty `declare` assignments out of the class namespace. Although I'm not completely sure if that'd happen early enough to be useful, and it possibly needs a little thought first",
            "created_at": "2021-08-03T21:08:29Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-892167687",
            "id": 892167687,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41LWYH",
            "performed_via_github_app": null,
            "updated_at": "2021-08-03T21:08:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/892167687",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, yeah you can do that having something like..\r\n```python\r\nif cython.compiled:\r\n    value = cython.declare(cython.int, visibility='readonly')\r\nelse:\r\n    value: cython.int\r\n    __slots__ = ('value',)\r\n```\r\nIn my case I'll have a lot of these typehints so this will double my code. I guess it's better than using properties for exposing visibility (which will be even more code):\r\n```python\r\n_value: cython.int\r\n\r\n@property\r\ndef value(self) -> cython.int:\r\n    return self._value\r\n```\r\n---\r\nI am not really sure what other option we have, without introducing a lot of syntax that is.\r\n\r\nThat said, one option (for visibility at least) is to create typehints like:\r\n- `value: cython.Readonly[cython.int]`\r\n- `value: cython.Public[cython.int]`\r\n\r\nFor visibility this will be two new classes, what else would this syntax need to support? I don't know all the options you can pass as kwargs.",
            "created_at": "2021-08-03T21:24:31Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-892176330",
            "id": 892176330,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41LYfK",
            "performed_via_github_app": null,
            "updated_at": "2021-08-05T17:51:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/892176330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Using `typing.Annotated` would work better, it's intended for this purpose. Type checkers only look at the first argument, Cython can have its definition in any following argument:\r\n```py\r\nvalue: Annotated[float, cython.declare(cython.double, visibility='public')]\r\n```",
            "created_at": "2021-08-03T22:21:26Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-892204827",
            "id": 892204827,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41Lfcb",
            "performed_via_github_app": null,
            "updated_at": "2021-08-03T22:21:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/892204827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Using `typing.Annotated` would work better, it's intended for this purpose. Type checkers only look at the first argument, Cython can have its definition in any following argument:\r\n> \r\n> ```python\r\n> value: Annotated[float, cython.declare(cython.double, visibility='public')]\r\n> ```\r\n\r\nThat's great!\r\n",
            "created_at": "2021-08-03T22:32:08Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-892209289",
            "id": 892209289,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41LgiJ",
            "performed_via_github_app": null,
            "updated_at": "2021-08-03T22:32:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/892209289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've played around with this, and although `value: Annotated[float, cython.declare(cython.double, visibility='public')]` seems nice, with a lot of attributes this becomes very unreadable:\r\n```python\r\n@cython.cclass\r\nclass MyClass:\r\n    \"\"\"My class with a doc-string.\"\"\"\r\n\r\n    value: Annotated[float, cython.declare(cython.double, visibility='public')]\r\n    enabled: Annotated[bool, cython.declare(cython.bint, visibility='readonly')]\r\n    status: Annotated[int, cython.declare(cython.int, visibility='readonly')]\r\n\r\n    unique: Annotated[int, cython.declare(cython.ulonglong, visibility='readonly')]\r\n    hashed: cython.bint\r\n\r\n    size: cython.size_t\r\n```\r\n\r\nI am not sure how that would fixed, that said I'll repeat my previous question. *Exactly how many options in `cython.declare` are there?*",
            "created_at": "2021-08-05T15:50:13Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-893567645",
            "id": 893567645,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41QsKd",
            "performed_via_github_app": null,
            "updated_at": "2021-08-05T15:50:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/893567645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Exactly how many options in cython.declare are there?\r\n\r\nI can't see code to handle anything except \"visibility\".\r\n\r\nhttps://github.com/cython/cython/blob/c7dc24bc0a39af708976fb0a4bf63d2ee407badb/Cython/Compiler/Nodes.py#L5749-L5758\r\n\r\n--------------------\r\n\r\n`typing.Annotated` looks like something we should try to see through correctly (because it is the \"right\" way to express these things). I've made a start on trying to understand imports from `Typing` in the dataclasses PR, so I don't think we can do too much about understanding `Annotated` until that's merged.\r\n\r\nI'm not completely convinced by the `Annotated[type, cython.declare(type_again, visibility=...]` syntax. At very least I think Cython should use the first argument of `Annotated` and not have to specify it twice. But I don't have any other suggestions right now.",
            "created_at": "2021-08-05T16:48:22Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-893608514",
            "id": 893608514,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41Q2JC",
            "performed_via_github_app": null,
            "updated_at": "2021-08-05T16:48:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/893608514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "* `value: cython.Readonly[cython.int]`\r\n* `value: cython.Public[cython.int]`\r\n\r\nLike I mentioned a bit above, this would look the best and probably be best in terms of usability if it is only visibility we need to support:\r\n```py\r\n@cython.cclass\r\nclass MyClass:\r\n    \"\"\"My class with a doc-string.\"\"\"\r\n\r\n    value: cython.Public[cython.double]\r\n    enabled: cython.Readonly[cython.bint]\r\n    status: cython.Readonly[cython.int]\r\n\r\n    unique: cython.Readonly[cython.ulonglong]\r\n    hashed: cython.bint\r\n\r\n    size: cython.size_t\r\n```\r\n*alternatively*\r\n```py\r\nfrom cython import Public, Readonly\r\n\r\n@cython.cclass\r\nclass MyClass:\r\n    \"\"\"My class with a doc-string.\"\"\"\r\n\r\n    value: Public[cython.double]\r\n    enabled: Readonly[cython.bint]\r\n    status: Readonly[cython.int]\r\n\r\n    unique: Readonly[cython.ulonglong]\r\n    hashed: cython.bint\r\n\r\n    size: cython.size_t\r\n```",
            "created_at": "2021-08-05T17:39:17Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-893655934",
            "id": 893655934,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41RBt-",
            "performed_via_github_app": null,
            "updated_at": "2021-08-05T17:39:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/893655934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The reason I suggested repeating the type is that you may want to have a different type for a type checker to handle, as opposed to the Cython version. A `list[float]` as opposed to a `cython.p_float` array for instance. But if they're the same, you could do something like `value: Annotated[cython.double, cython.Readonly, cython.Public]`. Maybe adjust `declare()` to make the positional arg optional in this situation, since it would be nice to have more consistent syntax.\r\n\r\n`cython.Readonly[X]` could be accepted also by typecheckers fine, if you define this in `Shadow.pyi`:\r\n```py\r\nclass Visibility(Enum):\r\n    READONLY = 'readonly'\r\n    PUBLIC = 'public'\r\n\r\nT = TypeVar('T')\r\nReadonly = Annotated[T, Visibility.READONLY]\r\nPublic = Annotated[T, Visibility.PUBLIC]\r\n```\r\nCython itself would handle it specially of course. ",
            "created_at": "2021-08-05T22:28:51Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-893862280",
            "id": 893862280,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41R0GI",
            "performed_via_github_app": null,
            "updated_at": "2021-08-05T22:28:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/893862280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There's another use for `cython.declare()` for attributes, and that's when using memory views.\r\n\r\n```py\r\n    value: cython.ulonglong[:]\r\n```\r\nGives the following error from MyPy (rightfully so):\r\n```\r\nerror: syntax error in type comment\r\n```\r\n\r\nSo we will need to come up with some way of typing memory views as well.",
            "created_at": "2021-08-07T16:31:09Z",
            "html_url": "https://github.com/cython/cython/issues/4325#issuecomment-894675980",
            "id": 894675980,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4325",
            "node_id": "IC_kwDOABDGAc41U6wM",
            "performed_via_github_app": null,
            "updated_at": "2021-08-07T16:31:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/894675980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4325/comments",
    "created_at": "2021-08-03T20:43:09Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-08-07T16:31:36Z",
            "event": "renamed",
            "id": 5125889901,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NTEyNTg4OTkwMQ==",
            "performed_via_github_app": null,
            "rename": {
                "from": "[ENH] Add shadow to allow using `__slots__` when code isn't cythonized",
                "to": "[ENH] Cannot use `__slots__` because `cython.declare` creates class attribute"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/5125889901"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4325/events",
    "html_url": "https://github.com/cython/cython/issues/4325",
    "id": 959489133,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4325/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5NTk0ODkxMzM=",
    "number": 4325,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] Cannot use `__slots__` because `cython.declare` creates class attribute",
    "updated_at": "2021-08-09T09:12:22Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4325",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
        "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
        "followers_url": "https://api.github.com/users/Bluenix2/followers",
        "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
        "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Bluenix2",
        "id": 38372706,
        "login": "Bluenix2",
        "node_id": "MDQ6VXNlcjM4MzcyNzA2",
        "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
        "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
        "repos_url": "https://api.github.com/users/Bluenix2/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Bluenix2"
    }
}