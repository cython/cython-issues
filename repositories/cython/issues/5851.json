{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nCython warns `warning: ‘__Pyx_PyAsyncGen_Fini’ defined but not used [-Wunused-function]` in compilation of test.py and raise `TypeError: 'async_generator' object is not iterable`  when running the test_run.py script. The script can be runned without any exception before I compile test.py by _Cython_\r\n\r\nsteps of the failed test:\r\n```bash\r\ncythonize test.py --inplace\r\npython test_run.py\r\n```\r\nsteps of the successful test without compiling by Cython:\r\n```bash\r\nrm test.cpython-311-x86_64-linux-gnu.so\r\npython test_run.py\r\n```\r\n\r\n### Code to reproduce the behaviour:\r\n\r\ntest.py\r\n```cython\r\nimport asyncio\r\n\r\n\r\nasync def f():\r\n    return set(x*2 for x in await h(2))\r\n\r\n\r\nasync def h(arg):\r\n    await asyncio.sleep(1)\r\n    return [arg, arg+1]\r\n\r\n\r\ndef test():\r\n    asyncio.run(f())                        \r\n```\r\ntest_run.py\r\n```python\r\nfrom test import test\r\nif __name__==\"__main__\":\r\n    test()\r\n```\r\n\r\n### Expected behaviour\r\n\r\nMoving the await clause out of the set comprehension can be a workaround:\r\n```python\r\nimport asyncio\r\n\r\n\r\nasync def f():\r\n    s= await h(2)\r\n    return set(x*2 for x in s)\r\n\r\n\r\nasync def h(arg):\r\n    await asyncio.sleep(1)\r\n    return [arg, arg+1]\r\n\r\n\r\ndef test():\r\n    asyncio.run(f())             \r\n```\r\nBut I think there's something wrong in Cython's compilation.\r\n\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.11.2\r\n\r\n### Cython version\r\n\r\n3.0.5\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5851/comments",
    "created_at": "2023-11-20T03:30:45Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5851/events",
    "html_url": "https://github.com/cython/cython/issues/5851",
    "id": 2001294512,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5851/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc53SVSw",
    "number": 5851,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5851/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5851/timeline",
    "title": "[BUG] cython does not translate `await` in set comprehension properly ",
    "updated_at": "2023-11-20T03:32:18Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5851",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/42210451?v=4",
        "events_url": "https://api.github.com/users/IterableTrucks/events{/privacy}",
        "followers_url": "https://api.github.com/users/IterableTrucks/followers",
        "following_url": "https://api.github.com/users/IterableTrucks/following{/other_user}",
        "gists_url": "https://api.github.com/users/IterableTrucks/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/IterableTrucks",
        "id": 42210451,
        "login": "IterableTrucks",
        "node_id": "MDQ6VXNlcjQyMjEwNDUx",
        "organizations_url": "https://api.github.com/users/IterableTrucks/orgs",
        "received_events_url": "https://api.github.com/users/IterableTrucks/received_events",
        "repos_url": "https://api.github.com/users/IterableTrucks/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/IterableTrucks/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/IterableTrucks/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/IterableTrucks"
    }
}