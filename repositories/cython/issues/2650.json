{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "We use a (admittedly hacky) behavior to change default kwargs in some of our tests:\r\n\r\n```\r\ndef set_default_beta_flag_true():\r\n    defaults = list(Cluster.__init__.__defaults__)\r\n    defaults = (defaults[:28] + [True] + defaults[29:])\r\n    try:\r\n        Cluster.__init__.__defaults__ = tuple(defaults)\r\n    except:\r\n        Cluster.__init__.__func__.__defaults__ = tuple(defaults)\r\n```\r\n\r\n(see [our `tests/integration/__init__.py`](https://github.com/datastax/python-driver/blob/5c8fac636af99cd6e5a93f04eac4a68aeb304bca/tests/integration/__init__.py#L165-L171) for context)\r\n\r\nSubsequent calls to `Cluster.__init__` respect the new defaults when running under cpython 2.7.12, but not when running after cython compilation under `Cython==0.28.5`.\r\n\r\nI've written a [minimal test case](https://gist.github.com/mambocab/273a5916c2481e82e07acb77535fa263#file-defaults_demo-py) and a [script that demonstrates the behavior in this case](https://gist.github.com/mambocab/273a5916c2481e82e07acb77535fa263#file-script-sh). I've captured [my local output](https://gist.github.com/mambocab/273a5916c2481e82e07acb77535fa263#file-script-out) in that gist at well. Note the difference in the second `ClassWithDefaults` instance.\r\n\r\nHappy to give any further information if requested.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "It's not really hacky, `__defaults__` is a writable attribute documented to appear on functions, it's entirely reasonable to set it like that. However it's probably a bit difficult for Cython to implement the ability to change that.",
            "created_at": "2018-10-09T20:48:55Z",
            "html_url": "https://github.com/cython/cython/issues/2650#issuecomment-428346223",
            "id": 428346223,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2650",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM0NjIyMw==",
            "performed_via_github_app": null,
            "updated_at": "2018-10-09T20:48:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/428346223",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "author_association": "NONE",
            "body": "> it's entirely reasonable to set it like that.\r\n\r\nFair.\r\n\r\n>However it's probably a bit difficult for Cython to implement the ability to change that.\r\n\r\nWhy is that the case?",
            "created_at": "2018-10-10T16:24:11Z",
            "html_url": "https://github.com/cython/cython/issues/2650#issuecomment-428638267",
            "id": 428638267,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2650",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODYzODI2Nw==",
            "performed_via_github_app": null,
            "updated_at": "2018-10-10T16:24:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/428638267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3753769?v=4",
                "events_url": "https://api.github.com/users/mambocab/events{/privacy}",
                "followers_url": "https://api.github.com/users/mambocab/followers",
                "following_url": "https://api.github.com/users/mambocab/following{/other_user}",
                "gists_url": "https://api.github.com/users/mambocab/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mambocab",
                "id": 3753769,
                "login": "mambocab",
                "node_id": "MDQ6VXNlcjM3NTM3Njk=",
                "organizations_url": "https://api.github.com/users/mambocab/orgs",
                "received_events_url": "https://api.github.com/users/mambocab/received_events",
                "repos_url": "https://api.github.com/users/mambocab/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mambocab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mambocab/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mambocab"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Did you try it with the `binding=True` directive?",
            "created_at": "2018-10-14T08:05:41Z",
            "html_url": "https://github.com/cython/cython/issues/2650#issuecomment-429605277",
            "id": 429605277,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2650",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTYwNTI3Nw==",
            "performed_via_github_app": null,
            "updated_at": "2018-10-14T08:05:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/429605277",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "You're talking about the `binding` directive [documented here](https://cython.readthedocs.io/en/latest/src/userguide/source_files_and_compilation.html#compiler-directives)? I have not.\r\n\r\nShould I expect it to make a difference for a method (i.e., my `Cluster.__init__`)? The documentation specifically says it affects the behavior of \"free methods\".",
            "created_at": "2018-10-15T13:53:46Z",
            "html_url": "https://github.com/cython/cython/issues/2650#issuecomment-429861280",
            "id": 429861280,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2650",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTg2MTI4MA==",
            "performed_via_github_app": null,
            "updated_at": "2018-10-15T13:53:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/429861280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3753769?v=4",
                "events_url": "https://api.github.com/users/mambocab/events{/privacy}",
                "followers_url": "https://api.github.com/users/mambocab/followers",
                "following_url": "https://api.github.com/users/mambocab/following{/other_user}",
                "gists_url": "https://api.github.com/users/mambocab/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mambocab",
                "id": 3753769,
                "login": "mambocab",
                "node_id": "MDQ6VXNlcjM3NTM3Njk=",
                "organizations_url": "https://api.github.com/users/mambocab/orgs",
                "received_events_url": "https://api.github.com/users/mambocab/received_events",
                "repos_url": "https://api.github.com/users/mambocab/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mambocab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mambocab/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mambocab"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Binding makes Cython functions use a custom type, instead of the normal Python type for builtin methods/functions. That makes them behave identically to normal functions for bound/unbound method behavior, and also adds a `__defaults__` attribute. However checking the generated C code shows it's not actually used when actually calling the method. The reason is that Cython adds the values that are set directly into the argument unpacking code it generates. It shouldn't be difficult to make object arguments do a fast lookup on the tuple, but for C-converted arguments it'll need to store those elsewhere. Perhaps add a setter which converts the C args whenever `__defaults__` is set?",
            "created_at": "2018-10-15T21:19:52Z",
            "html_url": "https://github.com/cython/cython/issues/2650#issuecomment-430017398",
            "id": 430017398,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2650",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDAxNzM5OA==",
            "performed_via_github_app": null,
            "updated_at": "2018-10-15T21:19:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/430017398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Looking at this: (with `binding=True`) Cython has `__defaults__` and `__kwdefaults__` arguments for introspection only, but doesn't actually use any changes to them. Realistically that's unlikely to change since it's likely to be quite hard to convert them back into the C-converted arguments that it actually uses.\r\n\r\nThat suggests to me that they should be read-only attributes of `CyFunction`, rather than the current version where they're read-write but ignored.",
            "created_at": "2021-04-13T19:23:04Z",
            "html_url": "https://github.com/cython/cython/issues/2650#issuecomment-818993937",
            "id": 818993937,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2650",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODk5MzkzNw==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-13T19:23:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/818993937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That suggests to me that they should be read-only attributes of `CyFunction`, rather than the current version where they're read-write but ignored.\r\n\r\nIt doesn't really make a difference since both values are mutable even if you prevent assignments to the attributes. I'd say the line of reasoning is that more code \"doesn't fail\" when they can be assigned without effect to than if we block off assignments.",
            "created_at": "2021-04-14T05:55:34Z",
            "html_url": "https://github.com/cython/cython/issues/2650#issuecomment-819249487",
            "id": 819249487,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2650",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTI0OTQ4Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-14T05:55:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/819249487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> > That suggests to me that they should be read-only attributes of `CyFunction`, rather than the current version where they're read-write but ignored.\r\n> \r\n> It doesn't really make a difference since both values are mutable even if you prevent assignments to the attributes. I'd say the line of reasoning is that more code \"doesn't fail\" when they can be assigned without effect to than if we block off assignments.\r\n\r\nFair point. I might try to add a warning at runtime when they're re-assigned - it obviously doesn't cover all changes but it might save some confusion (while not breaking anything)",
            "created_at": "2021-04-14T06:12:30Z",
            "html_url": "https://github.com/cython/cython/issues/2650#issuecomment-819256916",
            "id": 819256916,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2650",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTI1NjkxNg==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-14T06:12:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/819256916",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2650/comments",
    "created_at": "2018-10-09T19:33:20Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2650/events",
    "html_url": "https://github.com/cython/cython/issues/2650",
    "id": 368363082,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2650/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNjgzNjMwODI=",
    "number": 2650,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "`__defaults__` behavior different under cpython/cython",
    "updated_at": "2021-04-14T06:12:30Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2650",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3753769?v=4",
        "events_url": "https://api.github.com/users/mambocab/events{/privacy}",
        "followers_url": "https://api.github.com/users/mambocab/followers",
        "following_url": "https://api.github.com/users/mambocab/following{/other_user}",
        "gists_url": "https://api.github.com/users/mambocab/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mambocab",
        "id": 3753769,
        "login": "mambocab",
        "node_id": "MDQ6VXNlcjM3NTM3Njk=",
        "organizations_url": "https://api.github.com/users/mambocab/orgs",
        "received_events_url": "https://api.github.com/users/mambocab/received_events",
        "repos_url": "https://api.github.com/users/mambocab/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mambocab/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mambocab/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mambocab"
    }
}