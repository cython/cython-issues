{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The following small Cython application fails to compile when a Cython extension type maps to a C++ method that has a default argument.  \r\n\r\nIt looks like Cython tries to generate a C++ struct to hold the default value, while the struct is declared in the C++ method in the generated class, the definition of the struct is not generated in the code.\r\n\r\n\r\n```C++\r\n// File: Record.hpp\r\n#include <string>\r\n#include <vector>\r\n\r\nclass Record {\r\n\r\n  public:\r\n    Record() : m_num_recs(0), m_name(\"\") {}\r\n    Record(int num = 0) : m_num_recs(num), m_name(\"\") {}\r\n\r\n    std::string get_name() { return m_name; }\r\n    int get_num_recs() { return m_num_recs; }\r\n    void delete_record() {}\r\n\r\n  private:\r\n    int m_num_recs;\r\n    std::string m_name;\r\n    Record *m_next_rec;\r\n\r\n};\r\n\r\n```\r\n\r\n```Cython\r\n# File: record.pxd\r\ncdef extern from \"Record.hpp\":\r\n    cdef cppclass Record:\r\n        Record()\r\n        Record(int num = 0)\r\n        int get_num_recs()\r\n```\r\n\r\n```Cython\r\n# File: record.pyx\r\n# distutils: language = c++\r\n\r\ncdef class PyRecord(object):\r\n    cdef Record *_rec\r\n\r\n    @staticmethod\r\n    def create(self, num):\r\n        cdef Record *r = new Record(num)\r\n        recObj = PyRecord()\r\n        recObj._rec = r\r\n        return recObj\r\n\r\n    def getNumRecs(self):\r\n        return self._rec.get_num_recs()\r\n```\r\n\r\n```Python\r\n# File: setup.py\r\nfrom setuptools import setup\r\nfrom Cython.Build import cythonize\r\nsetup(ext_modules=cythonize(\"record.pyx\", compiler_directives={'language_level':3}))\r\n```\r\n\r\nThis fails to compile: \r\n```shell\r\n$ python3 ./setup.py build\r\nCompiling record.pyx because it changed.\r\n[1/1] Cythonizing record.pyx\r\nrunning build\r\nrunning build_ext\r\nbuilding 'record' extension\r\ngcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/usr/local/include/python3.10 -c record.cpp -o build/temp.linux-x86_64-3.10/record.o\r\nrecord.cpp: In function ‘PyObject* __pyx_pf_6record_8PyRecord_create(PyObject*, PyObject*)’:\r\nrecord.cpp:1408:40: error: aggregate ‘__pyx_pf_6record_8PyRecord_create(PyObject*, PyObject*)::__pyx_opt_args_6Record_Record __pyx_t_3’ has incomplete type and cannot be defined\r\n   struct __pyx_opt_args_6Record_Record __pyx_t_3;\r\n                                        ^~~~~~~~~\r\nerror: command '/usr/bin/gcc' failed with exit code 1\r\n\r\n**Environment:**\r\n* OS: CentOS Linux 8\r\n* Python: 3.10.4\r\n* Cython: 0.29.28 - also tried master build\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm not sure if these are your issue but a couple of small points:\r\n* the default argument and a default constructor seems pointless from both a C++ and a Cython point of view\r\n* you don't need `cimport record` in \"record.pyx\". That happens automatically.",
            "created_at": "2022-06-14T16:56:16Z",
            "html_url": "https://github.com/cython/cython/issues/4838#issuecomment-1155456740",
            "id": 1155456740,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4838",
            "node_id": "IC_kwDOABDGAc5E3t7k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1155456740/reactions"
            },
            "updated_at": "2022-06-14T16:56:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1155456740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "@da-woods I've edited the example to provide a little bit more content to the C++ Record class, which was overly simplified, either way the root issue still presents itself.  It appears like a code generation bug where the ___pyx_opt_args_6Record_Record_ struct declaration is never emitted, only the struct definition from the scope of the callers method.\r\n\r\n```C++\r\nstatic PyObject *__pyx_pf_6record_8PyRecord_create(CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_num) {\r\n  Record *__pyx_v_r;\r\n  struct __pyx_obj_6record_PyRecord *__pyx_v_recObj = NULL;\r\n  // [SNIP...]\r\n  struct __pyx_opt_args_6Record_Record __pyx_t_3;\r\n  // [SNIP...]\r\n\r\n  /* \"record.pyx\":9\r\n *     @staticmethod\r\n *     def create(self, num):\r\n *         cdef Record *r = new Record(num)             # <<<<<<<<<<<<<<\r\n *         recObj = PyRecord()\r\n *         recObj._rec = r\r\n */\r\n  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_num); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 9, __pyx_L1_error)\r\n  __pyx_t_3.__pyx_n = 1;\r\n  __pyx_t_3.num = __pyx_t_1;\r\n  __pyx_t_2 = new Record(&__pyx_t_3);\r\n  __pyx_v_r = __pyx_t_2;\r\n```",
            "created_at": "2022-06-15T14:32:18Z",
            "html_url": "https://github.com/cython/cython/issues/4838#issuecomment-1156551727",
            "id": 1156551727,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4838",
            "node_id": "IC_kwDOABDGAc5E75Qv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1156551727/reactions"
            },
            "updated_at": "2022-06-15T14:32:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1156551727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7260602?v=4",
                "events_url": "https://api.github.com/users/khallig/events{/privacy}",
                "followers_url": "https://api.github.com/users/khallig/followers",
                "following_url": "https://api.github.com/users/khallig/following{/other_user}",
                "gists_url": "https://api.github.com/users/khallig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/khallig",
                "id": 7260602,
                "login": "khallig",
                "node_id": "MDQ6VXNlcjcyNjA2MDI=",
                "organizations_url": "https://api.github.com/users/khallig/orgs",
                "received_events_url": "https://api.github.com/users/khallig/received_events",
                "repos_url": "https://api.github.com/users/khallig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/khallig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/khallig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/khallig"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4838/comments",
    "created_at": "2022-06-14T15:55:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-06-15T14:32:18Z",
            "event": "mentioned",
            "id": 6813584317,
            "node_id": "MEE_lADOABDGAc5LwjgdzwAAAAGWHwu9",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6813584317"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-06-15T14:32:18Z",
            "event": "subscribed",
            "id": 6813584330,
            "node_id": "SE_lADOABDGAc5LwjgdzwAAAAGWHwvK",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6813584330"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4838/events",
    "html_url": "https://github.com/cython/cython/issues/4838",
    "id": 1271019549,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4838/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5Lwjgd",
    "number": 4838,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4838/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4838/timeline",
    "title": "[BUG] Default argument struct definition not being output",
    "updated_at": "2022-06-15T14:32:18Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4838",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7260602?v=4",
        "events_url": "https://api.github.com/users/khallig/events{/privacy}",
        "followers_url": "https://api.github.com/users/khallig/followers",
        "following_url": "https://api.github.com/users/khallig/following{/other_user}",
        "gists_url": "https://api.github.com/users/khallig/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/khallig",
        "id": 7260602,
        "login": "khallig",
        "node_id": "MDQ6VXNlcjcyNjA2MDI=",
        "organizations_url": "https://api.github.com/users/khallig/orgs",
        "received_events_url": "https://api.github.com/users/khallig/received_events",
        "repos_url": "https://api.github.com/users/khallig/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/khallig/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/khallig/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/khallig"
    }
}