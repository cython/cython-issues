{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "## Foreword\r\nThis issue is a logical continuation of #4220, but its correction will probably be more difficult, and maybe even different (for me it is a little ambiguous), so I decided to make it a separate issue.\r\n\r\n## Context\r\n__File tree:__\r\n```\r\n│   setup.py\r\n│\r\n└───translation\r\n        test_anot.c\r\n        test_anot.pyx\r\n```\r\n\r\n## Bug\r\nCython incorrectly translates code without seeing the wrong definition syntax. As a result, the translated code is invalid and does not compile.\r\n### Output:\r\n```\r\nCompiling translation/test_anot.pyx because it changed.\r\n[1/1] Cythonizing translation/test_anot.pyx\r\nrunning build_ext\r\nbuilding 'test_anot' extension\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.28.29333\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -IC:\\Program Files\\Python3.9.0\\include -IC:\\Program Files\\Python3.9.0\\include -IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.28.29333\\ATLMFC\\include -IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.28.29333\\include -IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\include\\um -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt /Tctranslation/test_anot.c /Fobuild\\temp.win-amd64-3.9\\Release\\translation/test_anot.obj\r\ntest_anot.c\r\ntranslation/test_anot.c(4574): error C2065: a: undeclared identifier\r\ntranslation/test_anot.c(4606): error C2065: b: undeclared identifier\r\ntranslation/test_anot.c(4615): error C2065: c: undeclared identifier\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\Enterprise\\\\VC\\\\Tools\\\\MSVC\\\\14.28.29333\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\r\n```\r\n### translation/test_anot.c:\r\nLines 1038 - 1066:\r\n```c\r\n/*--- Type declarations ---*/\r\nstruct __pyx_obj_9test_anot_Foo;\r\nstruct __pyx_obj_9test_anot_Bar;\r\n\r\n/* \"test_anot.pyx\":3\r\n * import cython\r\n * \r\n * cdef class Foo:             # <<<<<<<<<<<<<<\r\n *     cdef int a\r\n *     a = 6\r\n */\r\nstruct __pyx_obj_9test_anot_Foo {\r\n  PyObject_HEAD\r\n  int a;\r\n};\r\n\r\n\r\n/* \"test_anot.pyx\":8\r\n * \r\n * @cython.cclass\r\n * class Bar:             # <<<<<<<<<<<<<<\r\n *     cython.declare(b=cython.int)\r\n *     b = 6\r\n */\r\nstruct __pyx_obj_9test_anot_Bar {\r\n  PyObject_HEAD\r\n  int b;\r\n  int c;\r\n};\r\n```\r\nLines 4567 - 4574:\r\n```c\r\n  /* \"test_anot.pyx\":5\r\n * cdef class Foo:\r\n *     cdef int a\r\n *     a = 6             # <<<<<<<<<<<<<<\r\n * \r\n * @cython.cclass\r\n */\r\n  a = 6;\r\n```\r\nLines 4599 - 4615:\r\n```c\r\n  /* \"test_anot.pyx\":10\r\n * class Bar:\r\n *     cython.declare(b=cython.int)\r\n *     b = 6             # <<<<<<<<<<<<<<\r\n * \r\n *     c = cython.declare(cython.int)\r\n */\r\n  b = 6;\r\n\r\n  /* \"test_anot.pyx\":13\r\n * \r\n *     c = cython.declare(cython.int)\r\n *     c = 6             # <<<<<<<<<<<<<<\r\n * \r\n * \r\n */\r\n  c = 6;\r\n```\r\nThe rest of the `a`, `b` and `c` in the code are local variables, not related to this one.\r\n\r\n## To Reproduce\r\n- Short:\r\n  ### translation/test_anot.pyx:\r\n  ```cython\r\n  import cython\r\n  \r\n  cdef class Foo:\r\n      cdef int a\r\n      a = 6\r\n  \r\n  @cython.cclass\r\n  class Bar:\r\n      cython.declare(b=cython.int)\r\n      b = 6\r\n  \r\n      c = cython.declare(cython.int)\r\n      c = 6\r\n  ```\r\n- More details:\r\n\r\n  run command `py -3.9 setup.py build_ext --inplace`\r\n  ### setup.py:\r\n  ```python\r\n  from setuptools import setup\r\n  from Cython.Build import cythonize\r\n  \r\n  setup(\r\n      ext_modules=cythonize(\r\n          \"translation/test_anot.pyx\",\r\n          language_level=3,\r\n      ),\r\n      zip_safe=False,\r\n  )\r\n  ```\r\n\r\n## Expected behavior\r\n### Option one\r\nIdentify this as the same invalid syntax as\r\n```cython\r\ncdef class Baz:\r\n    cdef int a = 6\r\n```\r\n### Option two (more like a feature request)\r\nAdd these definitions to the hidden initializer that goes before `__cinit__` and `__init__` (maybe some others, for example `__init_subclass__`, this requires discussion), thus filling the class namespace with the default values that we specified in advance. Only in this case it will be necessary and allow the example above.\r\nSome idea for conversation: in python, the default class value is available without initializing the class.\r\n\r\n## Environment:\r\n - OS: Microsoft Windows 10\r\n - Python version Python: 3.9.0\r\n - Checked Cython versions: 3.0a7, 0.29.23",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "One thing to add to this: for my cdef dataclass change I've made cdef dataclasses behave more like you're proposing (so variables can have a default initializer) largely because that matches the behaviour of Python dataclasses. It's worth pointing out that:\r\n* for regular classes `class C: a=5` creates a variable on the class object (which only gets looked up if an instance variable doesn't exist)\r\n* for (Python) dataclasses decorator-based trickery is involved in setting up the default values",
            "created_at": "2021-06-10T20:11:40Z",
            "html_url": "https://github.com/cython/cython/issues/4221#issuecomment-859010926",
            "id": 859010926,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTAxMDkyNg==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-10T20:15:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/859010926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4221/comments",
    "created_at": "2021-06-10T19:50:57Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4221/events",
    "html_url": "https://github.com/cython/cython/issues/4221",
    "id": 917819881,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4221/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MTc4MTk4ODE=",
    "number": 4221,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Default value for class member",
    "updated_at": "2021-06-10T20:15:18Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4221",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
        "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
        "followers_url": "https://api.github.com/users/0dminnimda/followers",
        "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
        "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/0dminnimda",
        "id": 52697657,
        "login": "0dminnimda",
        "node_id": "MDQ6VXNlcjUyNjk3NjU3",
        "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
        "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
        "repos_url": "https://api.github.com/users/0dminnimda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/0dminnimda"
    }
}