{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nExponentiation is common in scientific code. Currently, the way that Cython processes exponentiation is to have the result type match the operand type. This issue has been brought up many times before (see  #2133 for example). This can be surprise to those who choose to compile their code to gain a speed boost, even in Pure Python mode. For example:\r\n```python\r\ndef sqrt(x: double):\r\n  return x ** 0.5\r\nprint(sqrt(-1)) # -> Prints (6.123233995736766e-17+1j) with Python (3.10.5), and nan with Cython (3.0.0a10 on Windows)\r\n```\r\n\r\nAs previously mentioned, this issue have been closed before, but the recommended remedy (which is to add documentation to the Caveats page) has not been done\r\n\r\n**Describe the solution you'd like**\r\nPersonally, I would like Cython to compile Pure Python code to match Python semantics as much as reasonable, and I think, since Cython 3 is open to breaking changes, that following Python semantics for exponentiation should be the default action moving forward.\r\n\r\n**Describe alternatives you've considered**\r\nAn alternative that I am also happy is to keep the current semantics, but to provide a note in the \"Caveats\" section of the documentation, in addition to providing a clear compile-time warning whenever the Cython compiler can not guarantee adherence to Python exponentiation semantics.\r\n\r\n**Additional context**\r\nI am willing to make a PR to the Caveats documentation if that is the route the core Cython devs want to go. But, as an aside, my current PR for documentation on `__cinit__` has yet to be approved.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Phew, this seems difficult to argue with these days. The intention of Cython language semantics is \"Python by default, unless you opt out into C\". In your example, you kind of opt out into C via typing as `double`, but we also require `@cython.cdivision`, so why not require an `@cython.cpow` as well?\r\n\r\nWe infer Python `float` as C `double` when possible, so having such a semantic difference between the two would render that hard to understand for users. However, `**` could be considered an unsafe operation for C `double`, which would change the inference to apply Python semantics and return a Python `float`, unless `@cpow` is enabled. (IIRC, we only do that for integers currently and not for floats.)\r\n\r\nI agree that Cython 3.0 is the right time to change this.",
            "created_at": "2022-07-30T06:19:08Z",
            "html_url": "https://github.com/cython/cython/issues/4936#issuecomment-1200100436",
            "id": 1200100436,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4936",
            "node_id": "IC_kwDOABDGAc5HiBRU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1200100436/reactions"
            },
            "updated_at": "2022-07-30T06:19:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1200100436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Marking as blocker since this is a behavioural change. It should at least be looked at again before 3.0 final is released.",
            "created_at": "2022-07-31T15:10:17Z",
            "html_url": "https://github.com/cython/cython/issues/4936#issuecomment-1200443585",
            "id": 1200443585,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4936",
            "node_id": "IC_kwDOABDGAc5HjVDB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1200443585/reactions"
            },
            "updated_at": "2022-07-31T15:10:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1200443585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It seems reasonable to me.\r\n\r\nThe one thing we might do to keep compatibility is use the existing behaviour if the output is typed (but not inferred) as a C double (which I think would be a bit unusual because normally the output of a function wouldn't depend on its return type. Possibly with a warning to use `cpow` if it seems like too much of an odd rule.",
            "created_at": "2022-07-31T18:06:47Z",
            "html_url": "https://github.com/cython/cython/issues/4936#issuecomment-1200472351",
            "id": 1200472351,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4936",
            "node_id": "IC_kwDOABDGAc5HjcEf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1200472351/reactions"
            },
            "updated_at": "2022-07-31T18:06:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1200472351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thinking about this more,\r\n\r\n> The one thing we might do to keep compatibility is use the existing behaviour if the output is typed (but not inferred) as a C double (which I think would be a bit unusual because normally the output of a function wouldn't depend on its return type\r\n\r\nNot actually sure this'd work too well, since most of the time power probably appears in more complex expressions\r\n\r\nAlso, could we make a C \"complex or float\" type as its return type, that's represented by a C complex, but coerces freely to double if it has 0 imaginary part.",
            "created_at": "2022-07-31T18:32:58Z",
            "html_url": "https://github.com/cython/cython/issues/4936#issuecomment-1200476531",
            "id": 1200476531,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4936",
            "node_id": "IC_kwDOABDGAc5HjdFz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1200476531/reactions"
            },
            "updated_at": "2022-07-31T18:32:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1200476531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Especially within non-trivial expressions, coercion to Python probably isn't intended and thus not the main issue.\r\n\r\nIt also feels like a complex result, while mathematically correct, is rather unlikely to be intended (or even expected) when calculating the power of a C double. Although I can imagine that being highly domain dependent.\r\n\r\nI agree that changing the output type of an operator based on the values (and not their type) seems unusual. We are lucky that division _always_ goes to floats in Python, so that's different. The power operator is definitely more complex to deal with (we'll keep running into that pun, I guess).\r\n\r\nAnother issue is the difference between these:\r\n```python\r\n# values from somewhere\r\nbase: cython.double = 1234.5\r\nexp: cython.double = 2.0\r\n\r\nv1 = 1234.5 ** 2.0\r\nv2 = base ** 2.0\r\n\r\nv3 = 1234.5 ** exp\r\nv4 = base ** exp\r\n```\r\nIn the first two cases, it's clear that the result is always a C double, whereas in the expressions with variable exponents, we'd have to handle the complex result case, although the values are exactly the same. That's something that I really dislike about this change. Imagine users moving an exponent into a global C constant for clarity, and getting totally different C code from it.\r\n\r\nI'm still not entirely convinced that this is something we _should_ change in Cython. We had cases in the past where we decided for Python correctness even (somewhat) against practicality. But deciding that would need more user input. Maybe something to ask on cython-users.",
            "created_at": "2022-08-01T04:34:39Z",
            "html_url": "https://github.com/cython/cython/issues/4936#issuecomment-1200691574",
            "id": 1200691574,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4936",
            "node_id": "IC_kwDOABDGAc5HkRl2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1200691574/reactions"
            },
            "updated_at": "2022-08-01T04:34:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1200691574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Imagine users moving an exponent into a global C constant for clarity, and getting totally different C code from it.\r\n\r\nPersonally, I think this would be completely fine, especially if there'd be some sort of:\r\n```\r\nWarning: Cython cannot determine if the variable abc used as an exponent in line #xyz can be negative;\r\nthe resulting code will be less efficient.\r\n- If the exponent will never be negative, do <this>\r\n- If negative exponents need to be handled, silence this warning by doing <that>\r\n```\r\n\r\nPossible candidates for:\r\n* `<this>`: add `assert exp >= 0` before\r\n* `<that>`: \"use `cpow`\"\r\n\r\nNot sure how hard it would be to do it, but I think it would be a nice usability improvement. Exponentiation is definitely not a rare task IMO, quite the opposite (e.g. calculating distances/approximations for almost anything + moments, integration, power series, etc. etc. etc.).",
            "created_at": "2022-08-03T08:21:05Z",
            "html_url": "https://github.com/cython/cython/issues/4936#issuecomment-1203638005",
            "id": 1203638005,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4936",
            "node_id": "IC_kwDOABDGAc5Hvg71",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1203638005/reactions"
            },
            "updated_at": "2022-08-03T08:21:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1203638005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33685575?v=4",
                "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
                "followers_url": "https://api.github.com/users/h-vetinari/followers",
                "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
                "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/h-vetinari",
                "id": 33685575,
                "login": "h-vetinari",
                "node_id": "MDQ6VXNlcjMzNjg1NTc1",
                "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
                "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
                "repos_url": "https://api.github.com/users/h-vetinari/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/h-vetinari"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> add `assert exp >= 0` before\r\n\r\nCython doesn't currently use assert statements to infer which optimizations can happen, so this'd be a new (and potentially tricky) feature (if this is what you're implying should happen)",
            "created_at": "2022-08-03T08:26:38Z",
            "html_url": "https://github.com/cython/cython/issues/4936#issuecomment-1203643574",
            "id": 1203643574,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4936",
            "node_id": "IC_kwDOABDGAc5HviS2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1203643574/reactions"
            },
            "updated_at": "2022-08-03T08:26:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1203643574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Cython doesn't currently use assert statements to infer which optimizations can happen, so this'd be a new (and potentially tricky) feature (if this is what you're implying should happen)\r\n\r\nYeah, I expected as much, because that gets tricky. If it's not something that can be done easily (either `assert` or something else to opt into the non-negative case), it might be worth just documenting things as is.",
            "created_at": "2022-08-03T10:22:03Z",
            "html_url": "https://github.com/cython/cython/issues/4936#issuecomment-1203761809",
            "id": 1203761809,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4936",
            "node_id": "IC_kwDOABDGAc5Hv_KR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1203761809/reactions"
            },
            "updated_at": "2022-08-03T10:22:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1203761809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33685575?v=4",
                "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
                "followers_url": "https://api.github.com/users/h-vetinari/followers",
                "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
                "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/h-vetinari",
                "id": 33685575,
                "login": "h-vetinari",
                "node_id": "MDQ6VXNlcjMzNjg1NTc1",
                "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
                "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
                "repos_url": "https://api.github.com/users/h-vetinari/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/h-vetinari"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4936/comments",
    "created_at": "2022-07-30T02:09:09Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-30T06:18:41Z",
            "event": "labeled",
            "id": 7093292826,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc5O2Oc5zwAAAAGmyw8a",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7093292826"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-30T06:18:41Z",
            "event": "labeled",
            "id": 7093292827,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "node_id": "LE_lADOABDGAc5O2Oc5zwAAAAGmyw8b",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7093292827"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-30T06:18:45Z",
            "event": "milestoned",
            "id": 7093292965,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MIE_lADOABDGAc5O2Oc5zwAAAAGmyw-l",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7093292965"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-31T15:09:27Z",
            "event": "labeled",
            "id": 7096445946,
            "label": {
                "color": "444444",
                "name": "P: blocker"
            },
            "node_id": "LE_lADOABDGAc5O2Oc5zwAAAAGm-yv6",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7096445946"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-08-01T00:26:03Z",
            "event": "subscribed",
            "id": 7097078005,
            "node_id": "SE_lADOABDGAc5O2Oc5zwAAAAGnBND1",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7097078005"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4936/events",
    "html_url": "https://github.com/cython/cython/issues/4936",
    "id": 1322837817,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557145,
            "name": "P: blocker",
            "node_id": "MDU6TGFiZWw0MjU1NTcxNDU=",
            "url": "https://api.github.com/repos/cython/cython/labels/P:%20blocker"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4936/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 677,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 40,
        "state": "open",
        "title": "3.0",
        "updated_at": "2022-08-11T20:18:31Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "I_kwDOABDGAc5O2Oc5",
    "number": 4936,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4936/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4936/timeline",
    "title": "[ENH] Exponentiation should follow Python semantics (or the current semantic difference should be documented)",
    "updated_at": "2022-08-03T10:22:03Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4936",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11340332?v=4",
        "events_url": "https://api.github.com/users/goldenrockefeller/events{/privacy}",
        "followers_url": "https://api.github.com/users/goldenrockefeller/followers",
        "following_url": "https://api.github.com/users/goldenrockefeller/following{/other_user}",
        "gists_url": "https://api.github.com/users/goldenrockefeller/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/goldenrockefeller",
        "id": 11340332,
        "login": "goldenrockefeller",
        "node_id": "MDQ6VXNlcjExMzQwMzMy",
        "organizations_url": "https://api.github.com/users/goldenrockefeller/orgs",
        "received_events_url": "https://api.github.com/users/goldenrockefeller/received_events",
        "repos_url": "https://api.github.com/users/goldenrockefeller/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/goldenrockefeller/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/goldenrockefeller/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/goldenrockefeller"
    }
}