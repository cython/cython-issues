{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "It seems that making an `__init__.pxd` file in a Python/Cython package can allow c-importing the entire sub-namespace of the package in one statement.\r\n\r\nIf correct, this could probably bear [a mention](https://www.google.com/search?hl=en&q=%22__init__.pxd%22%20site%3Acython.readthedocs.io%2F) in the documentation.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmm.\r\n1) Isn't this possible with a simple `__init__.py` as well?\r\n2) If not, shouldn't we fix that, instead of requiring `__init__.pxd` files?",
            "created_at": "2020-03-21T15:03:32Z",
            "html_url": "https://github.com/cython/cython/issues/3424#issuecomment-602057419",
            "id": 602057419,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjA1NzQxOQ==",
            "updated_at": "2020-03-21T15:03:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/602057419",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "NumPy needed an `__init__.pxd` to allow [`from numpy.random cimport BitGenerator`](https://github.com/numpy/numpy/blob/master/numpy/random/_philox.pyx#L13) in cython code, where BitGenerator is a c-extension class from cython. In python we do `from numpy.random import BitGenerator`, but could not `cimport` it without the `__init__.pxd`. [This](https://github.com/numpy/numpy/blob/master/numpy/random/__init__.pxd) is the `__init__.pxd`. I tend to think of a  `__init__.pxd` as a cython header file.",
            "created_at": "2020-03-21T18:00:38Z",
            "html_url": "https://github.com/cython/cython/issues/3424#issuecomment-602080200",
            "id": 602080200,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjA4MDIwMA==",
            "updated_at": "2020-03-21T18:00:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/602080200",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think this is the behaviour that prompted me to make an `__init__.pxd` as well. I can't really check right now, but IIRC just doing `import` generated unoptimized code, while `cimport` on the package required an `__init__.pxd` file.\r\n\r\nI think requiring an `__init__.pxd` file makes sense for `cimport`s of packages. A `.py` (and maybe `.pyx`? IDK.) module file can't be `cimport`ed without a `.pxd` file. It'd be congruent for a package, usually defined by a `__init__.py` file, to also require an `__init__.pxd` (which would have all the typing and other C-level information necessary for static compilation).\r\n\r\nNote that it is possible to do regular `import`s; they just have to go through CPython and don't get optimized AFAICT. It also works fine to `cimport` the modules inside of a package without an `__init__.pxd` file in the package (e.g. `from cypkg.cysubpkg cimport cymodule`), but doing a `cimport` on the package itself requires `__init__.pxd` IIRC.",
            "created_at": "2020-03-21T18:21:57Z",
            "html_url": "https://github.com/cython/cython/issues/3424#issuecomment-602083002",
            "id": 602083002,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjA4MzAwMg==",
            "updated_at": "2020-03-21T18:21:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/602083002",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think we should change that. It's ok to require an `__init__.pxd` file to import something from a non-empty package namespace (i.e. having actual declarations in the `__init__.pxd` file), but it shouldn't be necessary to have both a `.py` and a `.pxd` file just to make a directory a package that can be (c)imported from. That's just unnecessarily redundant. We should allow cimports from `.pxd` modules that live in ordinary Python packages.",
            "created_at": "2020-03-21T18:59:27Z",
            "html_url": "https://github.com/cython/cython/issues/3424#issuecomment-602087704",
            "id": 602087704,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjA4NzcwNA==",
            "updated_at": "2020-03-21T18:59:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/602087704",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "We *can* do `cimport`s from `.pxd` modules that live in ordinary Python packages, I'm pretty sure, so long as we explicitly specify the module.\r\n\r\nSo, with this structure:\r\n\r\n```\r\npypkg\r\n|â€”__init__.py\r\n|â€”pymodule.py\r\n|â€”pymodule.pxd\r\n```\r\n\r\n...We can already do any of:\r\n\r\n`from pypkg cimport pymodule`\r\n`cimport pypkg.pymodule`\r\n`cimport pypk.pymodule as whatever`\r\n\r\nBut we can't do:\r\n\r\n`cimport pypkg`\r\n`cimport pypkg as whatever`\r\n\r\n...Or anything else that imports the package namespace itself, I believe, unless we have an `__init__.pxd`.\r\n\r\nI'm also not sure how the following form would (or should) resolve when we do have an `__init__.pxd`:\r\n\r\n`from pypkg cimport somename`\r\n\r\n...Since it's not immediately super clear whether Cython should be looking in the package directory for `somename.pxd`, or in `__init__.pxd` under the package directory for a definition/declaration/cimport for `somename`.",
            "created_at": "2020-03-21T19:20:26Z",
            "html_url": "https://github.com/cython/cython/issues/3424#issuecomment-602090480",
            "id": 602090480,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjA5MDQ4MA==",
            "updated_at": "2020-03-21T19:20:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/602090480",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> not immediately super clear whether Cython should be looking in the package directory for `somename.pxd`, or in `__init__.pxd` under the package directory for a definition/declaration/cimport for `somename`.\r\n\r\nFor cimports, if there's an `__init__.pxd`, then that's the package namespace, plus submodules and subpackages. If there's no `__init__.pxd` but only an `__init__.py`, then the (cimport) package namespace is empty and we only look for submodules and subpackages. That behaviour seems obvious to me.\r\n\r\nIt's as ambiguous as `from pkg import somename` in Python, that's all.",
            "created_at": "2020-03-22T09:08:49Z",
            "html_url": "https://github.com/cython/cython/issues/3424#issuecomment-602168741",
            "id": 602168741,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjE2ODc0MQ==",
            "updated_at": "2020-03-22T09:09:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/602168741",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3424/comments",
    "created_at": "2020-03-12T09:32:56Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3424/events",
    "html_url": "https://github.com/cython/cython/issues/3424",
    "id": 579805959,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3424/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Nzk4MDU5NTk=",
    "number": 3424,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "(Docs) __init__.pxd?",
    "updated_at": "2020-03-22T09:09:27Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3424",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
        "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
        "followers_url": "https://api.github.com/users/will-ca/followers",
        "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
        "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/will-ca",
        "id": 37680486,
        "login": "will-ca",
        "node_id": "MDQ6VXNlcjM3NjgwNDg2",
        "organizations_url": "https://api.github.com/users/will-ca/orgs",
        "received_events_url": "https://api.github.com/users/will-ca/received_events",
        "repos_url": "https://api.github.com/users/will-ca/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/will-ca"
    }
}