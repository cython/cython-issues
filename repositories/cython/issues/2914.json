{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I have the following simplified scenario for my game engine I am writing in cython. I have an \"App\" cdef class that is responsible for processing a list of \"System\" cdef class objects. I would like each \"System\" object to have a reference back to its parent \"App\" object that it belongs to. The \"System\" cdef class has some basic functions, and I want to extend this class in sub-cdef-classes (e.g. \"GraphicsSystem\", \"AudioSystem\", \"PhysicsSystem\", etc.). This boils down to the following code:\r\n\r\n```\r\n#system.pxd\r\nfrom pyorama.app cimport *\r\n\r\ncdef class System:\r\n    cdef App app\r\n    \r\n    cpdef void init(self)\r\n    cpdef void quit(self)\r\n    cpdef void update(self)\r\n\r\n#system.pyx\r\ncdef class System:\r\n    \r\n    def __init__(self):\r\n        self.app = None\r\n    \r\n    cpdef void init(self): print(\"system init\")\r\n    cpdef void quit(self): print(\"system quit\")\r\n    cpdef void update(self): print(\"system update\")\r\n```\r\n\r\n```\r\n#graphics_system.pxd\r\nfrom pyorama.system cimport *\r\n\r\ncdef class GraphicsSystem(System):\r\n    pass\r\n\r\n#graphics_system.pyx\r\ncdef class GraphicsSystem(System):\r\n    pass\r\n```\r\n```\r\n#app.pxd\r\nfrom pyorama.graphics_system cimport *\r\ncdef class App:\r\n    pass\r\n\r\n#app.pyx\r\ncdef class App:\r\n    pass\r\n```\r\n\r\nAttempting to compile this yields the following error message during the cythonization phase:\r\n```\r\nanish@laptop:~/Documents/Programming/cython/inheritance$ python3 setup.py build_ext -i\r\nCompiling ./pyorama/graphics_system.pyx because it depends on ./pyorama/system.pxd.\r\nCompiling ./pyorama/app.pyx because it depends on ./pyorama/system.pxd.\r\nCompiling ./pyorama/system.pyx because it changed.\r\n[1/3] Cythonizing ./pyorama/system.pyx\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\nfrom pyorama.system cimport *\r\n\r\ncdef class GraphicsSystem(System):\r\n    ^\r\n------------------------------------------------------------\r\n\r\npyorama/graphics_system.pxd:3:5: Compiler crash in AnalyseDeclarationsTransform\r\n\r\nModuleNode.body = StatListNode(graphics_system.pxd:1:0)\r\nStatListNode.stats[1] = CClassDefNode(graphics_system.pxd:3:5,\r\n    as_name = 'GraphicsSystem',\r\n    class_name = 'GraphicsSystem',\r\n    in_pxd = True,\r\n    module_name = '',\r\n    visibility = 'private')\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"Cython/Compiler/Visitor.py\", line 180, in Cython.Compiler.Visitor.TreeVisitor._visit\r\n  File \"/home/anish/.local/lib/python3.6/site-packages/Cython/Compiler/ParseTreeTransforms.py\", line 1621, in visit_CClassDefNode\r\n    node = self.visit_ClassDefNode(node)\r\n  File \"Cython/Compiler/Visitor.py\", line 383, in Cython.Compiler.Visitor.EnvTransform.visit_ClassDefNode\r\nAttributeError: 'CClassDefNode' object has no attribute 'scope'\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\nfrom pyorama.system cimport *\r\n\r\ncdef class GraphicsSystem(System):\r\n    ^\r\n------------------------------------------------------------\r\n\r\npyorama/graphics_system.pxd:3:5: C class 'GraphicsSystem' already defined\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 66, in <module>\r\n    compiler_directives=directives,\r\n  File \"/home/anish/.local/lib/python3.6/site-packages/Cython/Build/Dependencies.py\", line 1097, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/anish/.local/lib/python3.6/site-packages/Cython/Build/Dependencies.py\", line 1220, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: ./pyorama/system.pyx\r\n```\r\n\r\nCommenting out the cimport in the \"App\" allows the code to compile, and using the \"GraphicsSystem\" cdef class in other cython modules works without issue. Similarly, cimporting \"System\" into the app.pxd file works without issues; it appears that just the subclass causes issues during compilation. Any help would be appreciated!",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Does it make a difference if you don't `cimport *` but instead `cimport` only precisely what you need?",
            "created_at": "2019-04-18T08:46:18Z",
            "html_url": "https://github.com/cython/cython/issues/2914#issuecomment-484411467",
            "id": 484411467,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2914",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDQxMTQ2Nw==",
            "performed_via_github_app": null,
            "updated_at": "2019-04-18T08:46:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/484411467",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "Unfortunately, it does not seem to make a difference modifying the following three cimports as so:\r\n```\r\nfrom pyorama.app cimport App\r\nfrom pyorama.system cimport System\r\nfrom pyorama.graphics_system cimport GraphicsSystem\r\n```\r\nThe end result is still the same error as described before.",
            "created_at": "2019-04-21T23:41:34Z",
            "html_url": "https://github.com/cython/cython/issues/2914#issuecomment-485290858",
            "id": 485290858,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2914",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTI5MDg1OA==",
            "performed_via_github_app": null,
            "updated_at": "2019-04-21T23:41:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/485290858",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4753028?v=4",
                "events_url": "https://api.github.com/users/AnishN/events{/privacy}",
                "followers_url": "https://api.github.com/users/AnishN/followers",
                "following_url": "https://api.github.com/users/AnishN/following{/other_user}",
                "gists_url": "https://api.github.com/users/AnishN/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AnishN",
                "id": 4753028,
                "login": "AnishN",
                "node_id": "MDQ6VXNlcjQ3NTMwMjg=",
                "organizations_url": "https://api.github.com/users/AnishN/orgs",
                "received_events_url": "https://api.github.com/users/AnishN/received_events",
                "repos_url": "https://api.github.com/users/AnishN/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AnishN/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AnishN/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AnishN"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi I am running into the same problem. Did you ever find a solution?\r\nAs far as I am aware, I am not using any circular imports so I am unsure why this is happening.",
            "created_at": "2020-09-14T22:13:22Z",
            "html_url": "https://github.com/cython/cython/issues/2914#issuecomment-692341643",
            "id": 692341643,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2914",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjM0MTY0Mw==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-14T22:29:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692341643",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/55812956?v=4",
                "events_url": "https://api.github.com/users/DeathDragon7050/events{/privacy}",
                "followers_url": "https://api.github.com/users/DeathDragon7050/followers",
                "following_url": "https://api.github.com/users/DeathDragon7050/following{/other_user}",
                "gists_url": "https://api.github.com/users/DeathDragon7050/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DeathDragon7050",
                "id": 55812956,
                "login": "DeathDragon7050",
                "node_id": "MDQ6VXNlcjU1ODEyOTU2",
                "organizations_url": "https://api.github.com/users/DeathDragon7050/orgs",
                "received_events_url": "https://api.github.com/users/DeathDragon7050/received_events",
                "repos_url": "https://api.github.com/users/DeathDragon7050/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DeathDragon7050/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DeathDragon7050/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DeathDragon7050"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does it work to only `cimport pyorama.app` and then use qualified class names?\r\n\r\nSince this shows a compiler crash, rather than a legitimate compile error, I consider it a bug.",
            "created_at": "2020-09-15T05:29:29Z",
            "html_url": "https://github.com/cython/cython/issues/2914#issuecomment-692473779",
            "id": 692473779,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2914",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjQ3Mzc3OQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T05:29:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692473779",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry I am now running into another problem where the imported extension type is used as a base class for another extension type but I get a compiler error that says something along the lines of 'Base class of extension types must be extension types'. It appears to happen whether it is`cimport my_module; my_module.Something()` or `from my_module cimport Something; Something()`. My 'Something' class is actually an extension type that my current module is using as a base class for another extension type. The base class and sub class are both defined correctly in their .pxd files. This is kind of preventing me from getting to the circular import crash because this happens before the supposed circular import is detected and it stops compilation. Sorry about this but can you help me solve this possibly?",
            "created_at": "2020-09-15T12:24:38Z",
            "html_url": "https://github.com/cython/cython/issues/2914#issuecomment-692680115",
            "id": 692680115,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2914",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjY4MDExNQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T12:24:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692680115",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/55812956?v=4",
                "events_url": "https://api.github.com/users/DeathDragon7050/events{/privacy}",
                "followers_url": "https://api.github.com/users/DeathDragon7050/followers",
                "following_url": "https://api.github.com/users/DeathDragon7050/following{/other_user}",
                "gists_url": "https://api.github.com/users/DeathDragon7050/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DeathDragon7050",
                "id": 55812956,
                "login": "DeathDragon7050",
                "node_id": "MDQ6VXNlcjU1ODEyOTU2",
                "organizations_url": "https://api.github.com/users/DeathDragon7050/orgs",
                "received_events_url": "https://api.github.com/users/DeathDragon7050/received_events",
                "repos_url": "https://api.github.com/users/DeathDragon7050/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DeathDragon7050/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DeathDragon7050/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DeathDragon7050"
            }
        },
        {
            "author_association": "NONE",
            "body": "Unfortunately I never solved the problem. I ended up just working around it by making my App class the owner and not having a child class own a reference to its parents. My updated code is now here [https://github.com/AnishN/pyorama](url). DeathDragon7050, if you post a minimal example of that code, I would not mind taking a look.",
            "created_at": "2020-09-15T15:01:18Z",
            "html_url": "https://github.com/cython/cython/issues/2914#issuecomment-692774577",
            "id": 692774577,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2914",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mjc3NDU3Nw==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T15:02:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692774577",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4753028?v=4",
                "events_url": "https://api.github.com/users/AnishN/events{/privacy}",
                "followers_url": "https://api.github.com/users/AnishN/followers",
                "following_url": "https://api.github.com/users/AnishN/following{/other_user}",
                "gists_url": "https://api.github.com/users/AnishN/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AnishN",
                "id": 4753028,
                "login": "AnishN",
                "node_id": "MDQ6VXNlcjQ3NTMwMjg=",
                "organizations_url": "https://api.github.com/users/AnishN/orgs",
                "received_events_url": "https://api.github.com/users/AnishN/received_events",
                "repos_url": "https://api.github.com/users/AnishN/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AnishN/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AnishN/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AnishN"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just tested out that old code and it still gives me the same issues as before. I have attached it as a [zip file](https://github.com/cython/cython/files/5225975/circular.zip) if anyone wants to try and compile it. Interestingly, adding an `__init__.py` file changes the error message from `pyorama/graphics_system.pyx:2:26: First base of 'GraphicsSystem' is not an extension type` to `pyorama/graphics_system.pxd:4:5: C class 'GraphicsSystem' already defined`.",
            "created_at": "2020-09-15T15:15:29Z",
            "html_url": "https://github.com/cython/cython/issues/2914#issuecomment-692784790",
            "id": 692784790,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2914",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mjc4NDc5MA==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T15:16:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692784790",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4753028?v=4",
                "events_url": "https://api.github.com/users/AnishN/events{/privacy}",
                "followers_url": "https://api.github.com/users/AnishN/followers",
                "following_url": "https://api.github.com/users/AnishN/following{/other_user}",
                "gists_url": "https://api.github.com/users/AnishN/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AnishN",
                "id": 4753028,
                "login": "AnishN",
                "node_id": "MDQ6VXNlcjQ3NTMwMjg=",
                "organizations_url": "https://api.github.com/users/AnishN/orgs",
                "received_events_url": "https://api.github.com/users/AnishN/received_events",
                "repos_url": "https://api.github.com/users/AnishN/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AnishN/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AnishN/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AnishN"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi thanks for responding. I've tried to cut down the code to as basic as possible and it fits your example basically exactly. I guess all we can hope for is it to be patched. I am not sure if it is the same issue but basically my code is useless because this appears to affect all of the files in my project. It seems I am unable to properly `cimport` any extension types and subclass them. Only solution I can really see is to put all the contents of every file into one file which obviously really is not something that is ideal. By the way, your game engine looks really cool, well done.",
            "created_at": "2020-09-15T19:10:10Z",
            "html_url": "https://github.com/cython/cython/issues/2914#issuecomment-692920331",
            "id": 692920331,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2914",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjkyMDMzMQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-15T19:10:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/692920331",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/55812956?v=4",
                "events_url": "https://api.github.com/users/DeathDragon7050/events{/privacy}",
                "followers_url": "https://api.github.com/users/DeathDragon7050/followers",
                "following_url": "https://api.github.com/users/DeathDragon7050/following{/other_user}",
                "gists_url": "https://api.github.com/users/DeathDragon7050/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DeathDragon7050",
                "id": 55812956,
                "login": "DeathDragon7050",
                "node_id": "MDQ6VXNlcjU1ODEyOTU2",
                "organizations_url": "https://api.github.com/users/DeathDragon7050/orgs",
                "received_events_url": "https://api.github.com/users/DeathDragon7050/received_events",
                "repos_url": "https://api.github.com/users/DeathDragon7050/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DeathDragon7050/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DeathDragon7050/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DeathDragon7050"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2914/comments",
    "created_at": "2019-04-06T02:44:27Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-09-15T05:29:48Z",
            "event": "labeled",
            "id": 3766459595,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDM3NjY0NTk1OTU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3766459595"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-09-15T05:29:48Z",
            "event": "labeled",
            "id": 3766459596,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDM3NjY0NTk1OTY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3766459596"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2914/events",
    "html_url": "https://github.com/cython/cython/issues/2914",
    "id": 429988986,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2914/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0Mjk5ODg5ODY=",
    "number": 2914,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Handling cdef class inheritance and circular cimports",
    "updated_at": "2020-09-15T19:10:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2914",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/4753028?v=4",
        "events_url": "https://api.github.com/users/AnishN/events{/privacy}",
        "followers_url": "https://api.github.com/users/AnishN/followers",
        "following_url": "https://api.github.com/users/AnishN/following{/other_user}",
        "gists_url": "https://api.github.com/users/AnishN/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/AnishN",
        "id": 4753028,
        "login": "AnishN",
        "node_id": "MDQ6VXNlcjQ3NTMwMjg=",
        "organizations_url": "https://api.github.com/users/AnishN/orgs",
        "received_events_url": "https://api.github.com/users/AnishN/received_events",
        "repos_url": "https://api.github.com/users/AnishN/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/AnishN/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AnishN/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/AnishN"
    }
}