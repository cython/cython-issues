{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I wrote a some.pyx file with the following content\r\n```cython\r\ndef hello():\r\n    print(\"hello\")\r\ncdef public _test():\r\n    hello()\r\n    print(\"world\")\r\n```\r\nthe _test() funtction public to a C function\r\nand define a dllmain.c file:\r\n```c\r\n#include <Python.h>\r\n#include <Windows.h>\r\n#include \"some.h\"\r\n\r\nextern __declspec(dllexport) void  __stdcall test() {\r\n    _test();\r\n}\r\n\r\nBOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpReserved) {\r\n    switch( fdwReason ) {\r\n        case DLL_PROCESS_ATTACH:\r\n            Py_Initialize();\r\n            PyInit_some();  \r\n            break;\r\n        case DLL_PROCESS_DETACH:\r\n            Py_Finalize();\r\n            break;\r\n    }\r\n    return TRUE;\r\n}\r\n```\r\nand build to a dll\r\n```\r\ncython some.pyx -3\r\ngcc  dllmain.c some.c -shared  -I \"C:\\Program Files\\Python38\\include\" -DMS_WIN64 -lpython38 -L \"C:\\Program Files\\Python38\\libs\" -o some.dll\r\n```\r\nin old version(0.28.5) the code work well,but the new version,is dosn't work\r\nIn fact, as long as the contents of the heap are defined, there will be problems\r\ne.g:\r\n```cython\r\ncdef public _test():\r\n    print(\"world\")\r\n```\r\nwork well\r\n```\r\ncdef public _test():\r\n    s=\"hello\"\r\n    print(\"world\")\r\n```\r\nnot work!\r\n\r\nNow the problem is not knowing what has changed in the new version that caused this problem",
    "closed_at": "2020-04-14T05:05:25Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You didn't say what kind of error you got, but I guess it's some kind of \"something isn't initialised or available\" error. The reason for that would be that you are calling `PyInit_some()` directly, which is not the right way to initialise an embedded module.\r\n\r\nInstead, call `PyImport_AppendInittab(\"some\", &PyInit_some)` before calling `Py_initialize()`.\r\n\r\nWe should make that clear in the documentation. Currently, only the [CPython docs](https://docs.python.org/3/extending/embedding.html) mention it.",
            "created_at": "2020-04-14T04:53:29Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613225103",
            "id": 613225103,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzIyNTEwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613225103/reactions"
            },
            "updated_at": "2020-04-14T04:53:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613225103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I created a new ticket for improving the documentation: #3510\r\n",
            "created_at": "2020-04-14T05:05:24Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613228027",
            "id": 613228027,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzIyODAyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613228027/reactions"
            },
            "updated_at": "2020-04-14T05:05:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613228027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You didn't say what kind of error you got, but I guess it's some kind of \"something isn't initialised or available\" error. The reason for that would be that you are calling `PyInit_some()` directly, which is not the right way to initialise an embedded module.\r\n> \r\n> Instead, call `PyImport_AppendInittab(\"some\", &PyInit_some)` before calling `Py_initialize()`.\r\n> \r\n> We should make that clear in the documentation. Currently, only the [CPython docs](https://docs.python.org/3/extending/embedding.html) mention it.\r\n\r\nNot any error messages\r\nI found some problems that I may describe\r\nIn fact, no function can run, such as print\r\ni modify the code:\r\ndllmain.c\r\n```C\r\n#include <Python.h>\r\n#include <Windows.h>\r\n#include \"some.h\"\r\n\r\nextern __declspec(dllexport) char*  __stdcall test() {\r\n    return _test();\r\n}\r\n\r\nBOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpReserved) {\r\n    switch( fdwReason ) {\r\n        case DLL_PROCESS_ATTACH:\r\n            PyImport_AppendInittab(\"some\", &PyInit_some) ;\r\n            Py_Initialize();\r\n            break;\r\n        case DLL_PROCESS_DETACH:\r\n            Py_Finalize();\r\n            break;\r\n    }\r\n    return TRUE;\r\n}\r\n```\r\nsome.pyx\r\n```python\r\ncdef public char* _test():\r\n    return \"ok return well\"\r\n```\r\nand write a c program to call it:\r\n```C\r\n#include \"stdio.h\"\r\n\r\nextern char* __stdcall test(void);\r\nint main(void){\r\n    printf(\"%s\",test());\r\n}\r\n```\r\nthe result is:\r\nD:\\msys64\\home\\songwz\\cytest\\diff_no>loaddll\r\nok return well\r\n\r\nbut i change the code:\r\n\r\nsome.pyx\r\n```python\r\ncdef public char* _test():\r\n    print(\"hello\")\r\n    return \"ok return well\"\r\n```\r\nHe will not return anything\r\nThe code below is the same\r\n```python\r\ndef hello():\r\n    pass\r\ncdef public char* _test():\r\n    hello()\r\n    return \"ok return well\"\r\n```\r\nBut the code below worksï¼š\r\n```python\r\ncdef hello():   #<-----cdef works\r\n    pass\r\ncdef public char* _test():\r\n    hello()\r\n    return \"ok return well\"\r\n```\r\n",
            "created_at": "2020-04-14T05:44:37Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613237803",
            "id": 613237803,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzIzNzgwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613237803/reactions"
            },
            "updated_at": "2020-04-14T05:44:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613237803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292905?v=4",
                "events_url": "https://api.github.com/users/yafengabc/events{/privacy}",
                "followers_url": "https://api.github.com/users/yafengabc/followers",
                "following_url": "https://api.github.com/users/yafengabc/following{/other_user}",
                "gists_url": "https://api.github.com/users/yafengabc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yafengabc",
                "id": 292905,
                "login": "yafengabc",
                "node_id": "MDQ6VXNlcjI5MjkwNQ==",
                "organizations_url": "https://api.github.com/users/yafengabc/orgs",
                "received_events_url": "https://api.github.com/users/yafengabc/received_events",
                "repos_url": "https://api.github.com/users/yafengabc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yafengabc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yafengabc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yafengabc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So, you're saying that appending the module init function to the inittab does not correctly initialise the module for you either? Could you check if the error return code of `PyImport_AppendInittab()` is ok?",
            "created_at": "2020-04-14T05:59:58Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613242010",
            "id": 613242010,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzI0MjAxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613242010/reactions"
            },
            "updated_at": "2020-04-14T05:59:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613242010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> So, you're saying that appending the module init function to the inittab does not correctly initialise the module for you either? Could you check if the error return code of `PyImport_AppendInittab()` is ok?\r\n\r\nThe return value is 0",
            "created_at": "2020-04-14T06:07:30Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613244229",
            "id": 613244229,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzI0NDIyOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613244229/reactions"
            },
            "updated_at": "2020-04-14T06:07:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613244229",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292905?v=4",
                "events_url": "https://api.github.com/users/yafengabc/events{/privacy}",
                "followers_url": "https://api.github.com/users/yafengabc/followers",
                "following_url": "https://api.github.com/users/yafengabc/following{/other_user}",
                "gists_url": "https://api.github.com/users/yafengabc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yafengabc",
                "id": 292905,
                "login": "yafengabc",
                "node_id": "MDQ6VXNlcjI5MjkwNQ==",
                "organizations_url": "https://api.github.com/users/yafengabc/orgs",
                "received_events_url": "https://api.github.com/users/yafengabc/received_events",
                "repos_url": "https://api.github.com/users/yafengabc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yafengabc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yafengabc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yafengabc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I checked the CPython docs and here's a more complete example:\r\nhttps://docs.python.org/3.9/extending/extending.html#the-module-s-method-table-and-initialization-function\r\nYou additionally have to import your module before using it (what a surpriseâ€¦).\r\nNote that the example lacks error handling and correct reference counting/cleanup (I created a [CPython ticket](https://bugs.python.org/issue40279) for that).",
            "created_at": "2020-04-14T06:24:42Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613249909",
            "id": 613249909,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzI0OTkwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613249909/reactions"
            },
            "updated_at": "2020-04-14T06:25:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613249909",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "I use gdb to track the program in question\r\nif call the python function like the codeï¼š\r\n```python\r\ndef hello():\r\n    pass\r\ncdef public char* _test():\r\n    hello()\r\n    return \"ok return well\"\r\n```\r\nthe error is:\r\n```bash\r\nThread 1 received signal SIGSEGV, Segmentation fault.\r\n0x000000006f7015a5 in _test () at some.c:1160\r\n1160      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_hello); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)\r\n```",
            "created_at": "2020-04-14T06:25:28Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613250128",
            "id": 613250128,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzI1MDEyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613250128/reactions"
            },
            "updated_at": "2020-04-14T06:25:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613250128",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292905?v=4",
                "events_url": "https://api.github.com/users/yafengabc/events{/privacy}",
                "followers_url": "https://api.github.com/users/yafengabc/followers",
                "following_url": "https://api.github.com/users/yafengabc/following{/other_user}",
                "gists_url": "https://api.github.com/users/yafengabc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yafengabc",
                "id": 292905,
                "login": "yafengabc",
                "node_id": "MDQ6VXNlcjI5MjkwNQ==",
                "organizations_url": "https://api.github.com/users/yafengabc/orgs",
                "received_events_url": "https://api.github.com/users/yafengabc/received_events",
                "repos_url": "https://api.github.com/users/yafengabc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yafengabc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yafengabc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yafengabc"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I checked the CPython docs and here's a more complete example:\r\n> https://docs.python.org/3.9/extending/extending.html#the-module-s-method-table-and-initialization-function\r\n> You additionally have to import your module before using it (what a surpriseâ€¦).\r\n> Note that the example lacks error handling and correct reference counting/cleanup (I created a [CPython ticket](https://bugs.python.org/issue40279) for that).\r\n\r\nBut cython 0.28.x works well, I donâ€™t know where the problem is",
            "created_at": "2020-04-14T06:33:55Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613252917",
            "id": 613252917,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzI1MjkxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613252917/reactions"
            },
            "updated_at": "2020-04-14T06:33:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613252917",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292905?v=4",
                "events_url": "https://api.github.com/users/yafengabc/events{/privacy}",
                "followers_url": "https://api.github.com/users/yafengabc/followers",
                "following_url": "https://api.github.com/users/yafengabc/following{/other_user}",
                "gists_url": "https://api.github.com/users/yafengabc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yafengabc",
                "id": 292905,
                "login": "yafengabc",
                "node_id": "MDQ6VXNlcjI5MjkwNQ==",
                "organizations_url": "https://api.github.com/users/yafengabc/orgs",
                "received_events_url": "https://api.github.com/users/yafengabc/received_events",
                "repos_url": "https://api.github.com/users/yafengabc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yafengabc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yafengabc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yafengabc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But cython 0.28.x works well, I donâ€™t know where the problem is\r\n\r\nThe module initialisation in CPython changed with [PEP 489](https://www.python.org/dev/peps/pep-0489/). Cython now adapts to this (for various reasons â€“ in fact, Cython's needs were one of the reasons for PEP-489 in the first place). Previously, calling `PyInit_mymodule()` was wrong but worked. Now, it is wrong and does not work any more.",
            "created_at": "2020-04-14T06:42:39Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-613255700",
            "id": 613255700,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzI1NTcwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/613255700/reactions"
            },
            "updated_at": "2020-04-14T06:43:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/613255700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Had a similar problem, but `Py_initialize()` can be called for other purposes already before a delayed DLL load.\r\nThe `PyImport_AppendInittab()` works consistently only before the first `Py_initialize()` ever. \r\nOtherwise it seems I need to insert a hack like \r\n\r\n```C\r\nPyRun_SimpleString(\"import sys\\nif 'some' not in sys.builtin_module_names: sys.builtin_module_names += 'some',\");\r\n```\r\nbefore the `PyObject *pmodule = PyImport_ImportModule(\"some\");`\r\n(or `import some` in the simple run string), to get it work.\r\n\r\nWonder if there is a less hackish method to get embedded Cython integrated in a delayed / DLL context?\r\n\r\n---\r\nAlso the example in this issue shows the acrobatics needed to get a function C-exposed from the DLL by `__declspec(dllexport)`\r\nor `( __attribute__((visibility(\"default\")))`  on posix (when `-fvisibility=hidden`).  Or one would have to maintain an extra .def file.\r\n\r\nWonder if there is already a undocumented keyword or so in Cython to trigger `__declspec(dllexport)` - or it should be added? `dllexport` ?\r\nThere are strange macros in the generated .c :\r\n```\r\n#ifndef DL_IMPORT\r\n  #define DL_IMPORT(t) t\r\n#endif\r\n#ifndef DL_EXPORT\r\n  #define DL_EXPORT(t) t\r\n#endif\r\n\r\n```\r\nBut they seem to be unused - by `public` or `api` at least.\r\n\r\n\r\nA comment in #2908 mentions:\r\n\r\n> Because you marked it public, \"hello\" will be automatically marked using \"__declspec(dllexport)\" with Python 2, so no def file should be needed. I don't think the \"public\" symbol exporting machinery works on Python 3 right now\r\n\r\nDid that already work and was later removed?\r\n\r\nOnly  `__Pyx_PyMODINIT_FUNC` produces `__declspec(dllexport)` for the module init func.\r\n\r\npython.h / pyport.h provides HAVE_DECLSPEC_DLL :\r\n\r\n>   As a number of platforms support/require \"__declspec(dllimport/dllexport)\",\r\n>   we support a HAVE_DECLSPEC_DLL macro to save duplication.\r\n> \r\n\r\n\r\n",
            "created_at": "2022-11-21T17:56:42Z",
            "html_url": "https://github.com/cython/cython/issues/3509#issuecomment-1322444860",
            "id": 1322444860,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3509",
            "node_id": "IC_kwDOABDGAc5O0ug8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1322444860/reactions"
            },
            "updated_at": "2022-11-22T11:39:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1322444860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17337899?v=4",
                "events_url": "https://api.github.com/users/kxrob/events{/privacy}",
                "followers_url": "https://api.github.com/users/kxrob/followers",
                "following_url": "https://api.github.com/users/kxrob/following{/other_user}",
                "gists_url": "https://api.github.com/users/kxrob/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kxrob",
                "id": 17337899,
                "login": "kxrob",
                "node_id": "MDQ6VXNlcjE3MzM3ODk5",
                "organizations_url": "https://api.github.com/users/kxrob/orgs",
                "received_events_url": "https://api.github.com/users/kxrob/received_events",
                "repos_url": "https://api.github.com/users/kxrob/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kxrob/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kxrob/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kxrob"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3509/comments",
    "created_at": "2020-04-14T04:37:58Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-14T04:50:44Z",
            "event": "labeled",
            "id": 3229460132,
            "label": {
                "color": "444444",
                "name": "Documentation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyMjk0NjAxMzI=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3229460132"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-14T05:04:48Z",
            "event": "labeled",
            "id": 3229483755,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyMjk0ODM3NTU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3229483755"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-14T05:04:54Z",
            "event": "unlabeled",
            "id": 3229483966,
            "label": {
                "color": "444444",
                "name": "Documentation"
            },
            "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzIyOTQ4Mzk2Ng==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3229483966"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-14T05:05:25Z",
            "event": "closed",
            "id": 3229484796,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzIyOTQ4NDc5Ng==",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3229484796"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-14T06:55:43Z",
            "event": "renamed",
            "id": 3229729486,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzIyOTcyOTQ4Ng==",
            "performed_via_github_app": null,
            "rename": {
                "from": "Compiling cython code to dll encountered problems with mingw32",
                "to": "Calling PyInit_mymodule() in embedded Python does not initialise the module"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/3229729486"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3509/events",
    "html_url": "https://github.com/cython/cython/issues/3509",
    "id": 599291355,
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 414800623,
            "name": "support question",
            "node_id": "MDU6TGFiZWw0MTQ4MDA2MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/support%20question"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3509/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1OTkyOTEzNTU=",
    "number": 3509,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/3509/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/3509/timeline",
    "title": "Calling PyInit_mymodule() in embedded Python does not initialise the module",
    "updated_at": "2022-11-22T11:39:09Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3509",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/292905?v=4",
        "events_url": "https://api.github.com/users/yafengabc/events{/privacy}",
        "followers_url": "https://api.github.com/users/yafengabc/followers",
        "following_url": "https://api.github.com/users/yafengabc/following{/other_user}",
        "gists_url": "https://api.github.com/users/yafengabc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yafengabc",
        "id": 292905,
        "login": "yafengabc",
        "node_id": "MDQ6VXNlcjI5MjkwNQ==",
        "organizations_url": "https://api.github.com/users/yafengabc/orgs",
        "received_events_url": "https://api.github.com/users/yafengabc/received_events",
        "repos_url": "https://api.github.com/users/yafengabc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yafengabc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yafengabc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yafengabc"
    }
}