{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Windows 10, Python 3.8.3, Cython 3.0a6, Visual Studio 2017 version 15.9.20.\r\n\r\nCode example:\r\n\r\n```python\r\ndef f(n):\r\n    if n:\r\n        b = 0\r\n    print(b)\r\n\r\ndef g():\r\n    f(0)\r\n```\r\n\r\nWhen imported as a pure Python module, `g()` raises an exception:\r\n\r\n`UnboundLocalError: local variable 'b' referenced before assignment`\r\n\r\n**Expected behavior**\r\n\r\nWhen this code is compiled as a Cython extension and imported, `g()` behaves like in Python.\r\n\r\n**Observed behavior**\r\n\r\nWhen this code is compiled as a Cython extension and imported, `g()` prints some random int, like -874173976 or 24.\r\n\r\n**Likely reason**\r\n\r\nIn the generated C file, `long __pyx_v_b` is declared right at the top of the function that corresponds to `f`. Actually, this looks intentional and I'm not sure whether it's really a bug. But I couldn't find anywhere it in the documentation.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "If you need to avoid this you can set `#cython: infer_types=False` as a [compiler directive](http://docs.cython.org/en/latest/src/userguide/source_files_and_compilation.html#compiler-directives).\r\n\r\nNot 100% sure if this is a bug or not - it's decided that the type of `b` is a C integer because there's only one assignment to it and it's clear that it can't overflow. However clearly in this case it does behave differently which the documentation for the default type inference suggests that it shouldn't do.",
            "created_at": "2020-11-04T18:10:30Z",
            "html_url": "https://github.com/cython/cython/issues/3895#issuecomment-721890438",
            "id": 721890438,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3895",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTg5MDQzOA==",
            "performed_via_github_app": null,
            "updated_at": "2020-11-04T18:10:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/721890438",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, yeah, difficult choice. If there is a chance that a variable is unassigned during type inference, it'd better not be inferred as a C type. OTOH, there will always be cases where we cannot determine safely whether a variable has been assigned in all valid(!) code paths, so this would probably reduce the usefulness of type inference.\r\n\r\nThat said, it's obviously a bug in the code as well to use a variable that has not been initialised. Cython warns about it at compile time, and users should better look at those warnings. So, I'm slightly leaning towards a \"won't fix, at least for now\", unless there is an actual realistic case in which this occurs.\r\n\r\n@Zabolekar, could you provide some more details, or a longer snippet of your actual code in which this occurs? Is it a problem in valid code, or did you just stumble over it when fixing a bug in your code?",
            "created_at": "2020-11-05T07:14:18Z",
            "html_url": "https://github.com/cython/cython/issues/3895#issuecomment-722190493",
            "id": 722190493,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3895",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjE5MDQ5Mw==",
            "performed_via_github_app": null,
            "updated_at": "2020-11-05T07:14:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/722190493",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "@scoder You are right, I didn't actually want my code to raise `UnboundLocalError`, I've found it while fixing a bug. Cython compile-time warnings have been very helpful to me before, and it would be the best scenario here as well. However, this particular example produced no warning.\r\n\r\nAfter some searching I've found the `warn.maybe_uninitialized` compiler directive. When it's set to True, I see the warning. Default is False. I'm slightly confused why default is not True (if I understand you correctly, you would expect a warning as well), but it's documented.",
            "created_at": "2020-11-05T09:09:01Z",
            "html_url": "https://github.com/cython/cython/issues/3895#issuecomment-722245560",
            "id": 722245560,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3895",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjI0NTU2MA==",
            "performed_via_github_app": null,
            "updated_at": "2020-11-05T09:12:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/722245560",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/2109478?v=4",
                "events_url": "https://api.github.com/users/Zabolekar/events{/privacy}",
                "followers_url": "https://api.github.com/users/Zabolekar/followers",
                "following_url": "https://api.github.com/users/Zabolekar/following{/other_user}",
                "gists_url": "https://api.github.com/users/Zabolekar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Zabolekar",
                "id": 2109478,
                "login": "Zabolekar",
                "node_id": "MDQ6VXNlcjIxMDk0Nzg=",
                "organizations_url": "https://api.github.com/users/Zabolekar/orgs",
                "received_events_url": "https://api.github.com/users/Zabolekar/received_events",
                "repos_url": "https://api.github.com/users/Zabolekar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Zabolekar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Zabolekar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Zabolekar"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3895/comments",
    "created_at": "2020-11-04T17:59:17Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/2109478?v=4",
                "events_url": "https://api.github.com/users/Zabolekar/events{/privacy}",
                "followers_url": "https://api.github.com/users/Zabolekar/followers",
                "following_url": "https://api.github.com/users/Zabolekar/following{/other_user}",
                "gists_url": "https://api.github.com/users/Zabolekar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Zabolekar",
                "id": 2109478,
                "login": "Zabolekar",
                "node_id": "MDQ6VXNlcjIxMDk0Nzg=",
                "organizations_url": "https://api.github.com/users/Zabolekar/orgs",
                "received_events_url": "https://api.github.com/users/Zabolekar/received_events",
                "repos_url": "https://api.github.com/users/Zabolekar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Zabolekar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Zabolekar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Zabolekar"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-11-05T07:14:18Z",
            "event": "mentioned",
            "id": 3960889700,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzk2MDg4OTcwMA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3960889700"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/2109478?v=4",
                "events_url": "https://api.github.com/users/Zabolekar/events{/privacy}",
                "followers_url": "https://api.github.com/users/Zabolekar/followers",
                "following_url": "https://api.github.com/users/Zabolekar/following{/other_user}",
                "gists_url": "https://api.github.com/users/Zabolekar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Zabolekar",
                "id": 2109478,
                "login": "Zabolekar",
                "node_id": "MDQ6VXNlcjIxMDk0Nzg=",
                "organizations_url": "https://api.github.com/users/Zabolekar/orgs",
                "received_events_url": "https://api.github.com/users/Zabolekar/received_events",
                "repos_url": "https://api.github.com/users/Zabolekar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Zabolekar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Zabolekar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Zabolekar"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-11-05T07:14:19Z",
            "event": "subscribed",
            "id": 3960889703,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5NjA4ODk3MDM=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3960889703"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-11-05T09:09:01Z",
            "event": "mentioned",
            "id": 3961315483,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzk2MTMxNTQ4Mw==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3961315483"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-11-05T09:09:02Z",
            "event": "subscribed",
            "id": 3961315488,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5NjEzMTU0ODg=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3961315488"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3895/events",
    "html_url": "https://github.com/cython/cython/issues/3895",
    "id": 736315251,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3895/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3MzYzMTUyNTE=",
    "number": 3895,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] UnboundLocalError in Python but not in Cython",
    "updated_at": "2020-11-05T09:12:56Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3895",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/2109478?v=4",
        "events_url": "https://api.github.com/users/Zabolekar/events{/privacy}",
        "followers_url": "https://api.github.com/users/Zabolekar/followers",
        "following_url": "https://api.github.com/users/Zabolekar/following{/other_user}",
        "gists_url": "https://api.github.com/users/Zabolekar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Zabolekar",
        "id": 2109478,
        "login": "Zabolekar",
        "node_id": "MDQ6VXNlcjIxMDk0Nzg=",
        "organizations_url": "https://api.github.com/users/Zabolekar/orgs",
        "received_events_url": "https://api.github.com/users/Zabolekar/received_events",
        "repos_url": "https://api.github.com/users/Zabolekar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Zabolekar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Zabolekar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Zabolekar"
    }
}