{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\n\r\nCompiling a C extension and I am using the Extension class from setuptools. I set the language to C++ and an extra compiler arg and an extra link arg of -std=c++11. I set an environment variable of DISTUTILS_DEBUG to 1 so distutils dumps the maximum  amount of debugging information then I run the script.\r\n\r\nThis is the output specific to the cython portion of things. \r\n\r\n```\r\nbuilding '_libopenzwave' extension\r\ncreating build/temp.linux-x86_64-cpython-310/_libopenzwave\r\n\r\ngcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -fPIC -DPY_LIB_VERSION=0.5.0 -D_MT=1 -D_DLL=1 -DPY_LIB_FLAVOR=release -DPY_LIB_BACKEND=cython -DCYTHON_FAST_PYCCALL=1 -DPY_SSIZE_T_CLEAN=1 -I_libopenzwave -I/mnt/c/Users/drsch/PycharmProjects/libopenzwave/openzwave/cpp/src -I/mnt/c/Users/drsch/PycharmProjects/libopenzwave/openzwave/cpp/src/value_classes -I/mnt/c/Users/drsch/PycharmProjects/libopenzwave/openzwave/cpp/src/platform -I/mnt/c/Users/drsch/PycharmProjects/libopenzwave/openzwave/cpp/src/command_classes -I/mnt/c/Users/drsch/PycharmProjects/libopenzwave/openzwave/cpp/src/aes -I/mnt/c/Users/drsch/PycharmProjects/libopenzwave/openzwave/cpp/src/tinyxml -I/mnt/c/Users/drsch/PycharmProjects/libopenzwave/openzwave/cpp/build/linux -I/usr/include/python3.10 -c _libopenzwave/_libopenzwave.cpp -o build/temp.linux-x86_64-cpython-310/_libopenzwave/_libopenzwave.o -Wno-builtin-macro-redefined -Wno-deprecated-declarations -Wno-deprecated -Wno-unreachable-code-fallthrough -std=c++11\r\n\r\ng++ -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -g -fwrapv -O2 -std=c++11 build/temp.linux-x86_64-cpython-310/_libopenzwave/_libopenzwave.o build/temp.linux-x86_64-cpython-310/lib_build/libopenzwave.a -L/usr/lib/x86_64-linux-gnu -lresolv -o build/lib.linux-x86_64-cpython-310/_libopenzwave.so\r\n\r\n```\r\n\r\nThe first thing is duplicate arguments being passed to the compilers. Not sure why that is happening. You can see my extra arguments on the first compiler call at the end.\r\n\r\nThat is not the problem. The problem is the gcc compiler being called when I specified the C++ language. If I delete the   .o and .so files that are made and change the gcc to g++ and paste it into the console and paste the second command into console the shared library gets created properly and I am able to use it. Using the gcc compiler causes none of the objects I created in the pyx file to get exported.\r\n\r\nI am not sure if this is going to be a setuptools blunder (wouldn't be shocked if it is) or does Cython take care of making the calls to the compiler and linker... This is going to sound bad but I really do hope the problem is in Cython because I have been trying to get the folks that work on setuptools to fix the Windows compiler detection now for 4-5 years and they simply do not want to do anything about it. I have written a script that properly sets up a windows build environment without using the VCVARS* batch files (which don't work properly 100% of the time) and what I wrote works for VS2008 to current with all NET SDK's, Tools, Windows SDK's and all of the other things that go along with the different VS versions. It also works with Visual C and Microsoft Build Tools. Still they would not fix what they have even when I gave them the code.\r\n\r\nI know you guys are on the ball and get things fixed right quick as you have fixed an issue with Stackless Python for me in the past. So I hope the problem is a Cython one. Otherwise I am going to have to monkey patch setuptools for linux compilations on top of already have had to do it for Windows.\r\n\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n```cython\r\n# example code\r\n```\r\n\r\n\r\n### Expected behaviour\r\n\r\nhaving the functions, classes and attributes exported properly in the extension module.\r\n\r\n### Environment\r\n\r\nUbuntu 20.04.5\r\nCPython 3.10.8\r\nCython 0.29.32\r\n\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": "2022-11-06T21:55:06Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I found the problem and it doesn't have top do with Cython or setup tools. I am not sure why but I am not able to import the so file right after i has been built.  What I am doing is generating a stub file for the extension then the build program runs. In order for me to be able to import the file I have to create a subprocess and run the build script using that and then the file gets imported correctly.  I don't know why it is like that. Same code being used to create the stub file just have to run python again after the extension module is made in order for it to properly populate the exports in the file. No errors when importing it at all it just shows as an empty extension module.\r\n\r\n\r\n",
            "created_at": "2022-11-06T21:55:06Z",
            "html_url": "https://github.com/cython/cython/issues/5117#issuecomment-1304903492",
            "id": 1304903492,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5117",
            "node_id": "IC_kwDOABDGAc5Nxz9E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1304903492/reactions"
            },
            "updated_at": "2022-11-06T21:55:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1304903492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10932297?v=4",
                "events_url": "https://api.github.com/users/kdschlosser/events{/privacy}",
                "followers_url": "https://api.github.com/users/kdschlosser/followers",
                "following_url": "https://api.github.com/users/kdschlosser/following{/other_user}",
                "gists_url": "https://api.github.com/users/kdschlosser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kdschlosser",
                "id": 10932297,
                "login": "kdschlosser",
                "node_id": "MDQ6VXNlcjEwOTMyMjk3",
                "organizations_url": "https://api.github.com/users/kdschlosser/orgs",
                "received_events_url": "https://api.github.com/users/kdschlosser/received_events",
                "repos_url": "https://api.github.com/users/kdschlosser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kdschlosser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kdschlosser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kdschlosser"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5117/comments",
    "created_at": "2022-11-06T11:27:23Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10932297?v=4",
                "events_url": "https://api.github.com/users/kdschlosser/events{/privacy}",
                "followers_url": "https://api.github.com/users/kdschlosser/followers",
                "following_url": "https://api.github.com/users/kdschlosser/following{/other_user}",
                "gists_url": "https://api.github.com/users/kdschlosser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kdschlosser",
                "id": 10932297,
                "login": "kdschlosser",
                "node_id": "MDQ6VXNlcjEwOTMyMjk3",
                "organizations_url": "https://api.github.com/users/kdschlosser/orgs",
                "received_events_url": "https://api.github.com/users/kdschlosser/received_events",
                "repos_url": "https://api.github.com/users/kdschlosser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kdschlosser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kdschlosser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kdschlosser"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-11-06T21:55:06Z",
            "event": "closed",
            "id": 7747978603,
            "node_id": "CE_lADOABDGAc5VrI9AzwAAAAHN0MVr",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7747978603"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5117/events",
    "html_url": "https://github.com/cython/cython/issues/5117",
    "id": 1437372224,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5117/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5VrI9A",
    "number": 5117,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5117/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5117/timeline",
    "title": "[BUG] Wrong compiler is being used",
    "updated_at": "2022-11-06T21:55:06Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5117",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10932297?v=4",
        "events_url": "https://api.github.com/users/kdschlosser/events{/privacy}",
        "followers_url": "https://api.github.com/users/kdschlosser/followers",
        "following_url": "https://api.github.com/users/kdschlosser/following{/other_user}",
        "gists_url": "https://api.github.com/users/kdschlosser/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kdschlosser",
        "id": 10932297,
        "login": "kdschlosser",
        "node_id": "MDQ6VXNlcjEwOTMyMjk3",
        "organizations_url": "https://api.github.com/users/kdschlosser/orgs",
        "received_events_url": "https://api.github.com/users/kdschlosser/received_events",
        "repos_url": "https://api.github.com/users/kdschlosser/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kdschlosser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kdschlosser/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kdschlosser"
    }
}