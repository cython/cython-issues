{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "For example, taking the address of recarray element fails in uncompiled pure-python cython.  `cython.address(feats[k])`, where `feats` is a recarray, fails with:\r\n\r\n```\r\nValueError: Can't cast from structure to non-structure, except if the structure only has a single field.\r\n```\r\nThe problem is in `Shadow.cast`, which is ultimately called by `address`:\r\n\r\n```\r\n...\r\n    if hasattr(type, '__call__'):\r\n        return type(*args)\r\n    else:\r\n        return args[0]\r\n...\r\n```\r\n\r\nNot bullet-proof, but I believe you would be supporting more scenarios if you simply did't try to cast an argument which is already of the target type. And, in any case, I'm failing to see the point of that cast when you already have the right object, it's not that usual that a type can construct a new instance from an old one, nor it's a necessarily cheap operation.\r\n\r\nSo what about:\r\n\r\n```\r\nif isinstance(args[0], type) or not hasattr(type, '__call__'):\r\n    return args[0]\r\nelse:\r\n    return type(*args)\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Also note that, when compiled, I'm accessing the recarray as a struct-typed memoryview, so the code is valid pure-python cython code, it just won't work if run with cpython.",
            "created_at": "2020-03-02T02:52:39Z",
            "html_url": "https://github.com/cython/cython/issues/3390#issuecomment-593195358",
            "id": 593195358,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3390",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzE5NTM1OA==",
            "updated_at": "2020-03-02T02:52:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/593195358",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
                "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
                "followers_url": "https://api.github.com/users/memeplex/followers",
                "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
                "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/memeplex",
                "id": 2845433,
                "login": "memeplex",
                "node_id": "MDQ6VXNlcjI4NDU0MzM=",
                "organizations_url": "https://api.github.com/users/memeplex/orgs",
                "received_events_url": "https://api.github.com/users/memeplex/received_events",
                "repos_url": "https://api.github.com/users/memeplex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/memeplex"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3390/comments",
    "created_at": "2020-03-02T02:47:21Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
                "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
                "followers_url": "https://api.github.com/users/memeplex/followers",
                "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
                "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/memeplex",
                "id": 2845433,
                "login": "memeplex",
                "node_id": "MDQ6VXNlcjI4NDU0MzM=",
                "organizations_url": "https://api.github.com/users/memeplex/orgs",
                "received_events_url": "https://api.github.com/users/memeplex/received_events",
                "repos_url": "https://api.github.com/users/memeplex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/memeplex"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-02T05:10:02Z",
            "event": "renamed",
            "id": 3086431240,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzA4NjQzMTI0MA==",
            "rename": {
                "from": "Taking address of recarray element fails in pure python shadow",
                "to": "address/pointer in Shadow shouldn't cast (which often fails) when type is already OK"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/3086431240"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3390/events",
    "html_url": "https://github.com/cython/cython/issues/3390",
    "id": 573682089,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3390/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NzM2ODIwODk=",
    "number": 3390,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "address/pointer in Shadow shouldn't cast (which often fails) when type is already OK",
    "updated_at": "2020-03-02T05:25:35Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3390",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/2845433?v=4",
        "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
        "followers_url": "https://api.github.com/users/memeplex/followers",
        "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
        "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/memeplex",
        "id": 2845433,
        "login": "memeplex",
        "node_id": "MDQ6VXNlcjI4NDU0MzM=",
        "organizations_url": "https://api.github.com/users/memeplex/orgs",
        "received_events_url": "https://api.github.com/users/memeplex/received_events",
        "repos_url": "https://api.github.com/users/memeplex/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/memeplex"
    }
}