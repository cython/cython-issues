{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\n\nHey,\r\nI used fused types in my code to generate me return functions for arrays from cpp.\r\nThe problem I sorta had with this is, that the function names are numbered instead of using the specific type as a name.\r\nSince I at this point couldn't really find a good solution to get cpp to call the correct function based on the type, I hardcoded the whole thing, but this comes with the issue of, if the list is changed, the numbers need to be changed by hand too.\r\nThis is totally doable and that's what tests are for, but at the same time, this seems like a shortcoming.\r\n\r\nJust quickly as an example:\r\n```cython\r\nctypedef fused array_types_t:\r\n    double\r\n    long double\r\n    double complex\r\n    long double complex\r\n    float\r\n    float complex\r\n    long\r\n    unsigned long\r\n    long long\r\n    unsigned long long\r\n    int\r\n    unsigned int\r\n    short\r\n    unsigned short\r\n    signed char\r\n    unsigned char\r\n\r\n\r\n# Array with limit 2D\r\ncdef api np.ndarray[array_types_t, ndim=2] ddarray(const array_types_t *data)\r\n```\r\ngenerates:\r\n```cython\r\n if (__Pyx_ImportFunction_0_29_36(module, \"__pyx_fuse_0ddarray\", (void (**)(void))&__pyx_api_f_7eigency_11conversions___pyx_fuse_0ddarray, \"PyArrayObject *(double const *)\") < 0) goto bad;\r\n  if (__Pyx_ImportFunction_0_29_36(module, \"__pyx_fuse_1ddarray\", (void (**)(void))&__pyx_api_f_7eigency_11conversions___pyx_fuse_1ddarray, \"PyArrayObject *(long double const *)\") < 0) goto bad;\r\n  if (__Pyx_ImportFunction_0_29_36(module, \"__pyx_fuse_2ddarray\", (void (**)(void))&__pyx_api_f_7eigency_11conversions___pyx_fuse_2ddarray, \"PyArrayObject *(__pyx_t_double_complex const *)\") < 0) goto bad;\r\n  if (__Pyx_ImportFunction_0_29_36(module, \"__pyx_fuse_3ddarray\", (void (**)(void))&__pyx_api_f_7eigency_11conversions___pyx_fuse_3ddarray, \"PyArrayObject *(__pyx_t_long_double_complex const *)\") < 0) goto bad;\r\n  if (__Pyx_ImportFunction_0_29_36(module, \"__pyx_fuse_4ddarray\", (void (**)(void))&__pyx_api_f_7eigency_11conversions___pyx_fuse_4ddarray, \"PyArrayObject *(float const *)\") < 0) goto bad;\r\n  .\r\n  .\r\n  .\r\n```\n\n### Describe the solution you'd like.\n\nThat instead of `__pyx_fuse_4ddarray` it generates `__pyx_fuse_floatddarray` or something similar.\n\n### Describe alternatives you've considered.\n\n_No response_\n\n### Additional context\n\n_No response_",
    "closed_at": "2024-11-29T08:32:40Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "What might work is to assign them (in Cython) to a C function pointer with a well-defined name. Cython should match up the correct version to the function pointer. It's a bit verbose though.\r\n\r\n",
            "created_at": "2024-11-28T21:39:00Z",
            "html_url": "https://github.com/cython/cython/issues/6525#issuecomment-2506777891",
            "id": 2506777891,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6525",
            "node_id": "IC_kwDOABDGAc6VamUj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2506777891/reactions"
            },
            "updated_at": "2024-11-28T21:39:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2506777891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree that explicit function pointers (or an array of functions or whatever) seems a good way to do this. Cython avoids generating fused function variants that are unused. I'm not sure how it handles this with respect to `api` functions, but listing the complete set of exported (generated) function variants somewhere seems best in terms of API design. It also allows you to later change the implementation, the collection of type variants, etc., without relying on specific Cython behaviour regarding internal naming or other implementation details.",
            "created_at": "2024-11-29T08:31:05Z",
            "html_url": "https://github.com/cython/cython/issues/6525#issuecomment-2507316743",
            "id": 2507316743,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6525",
            "node_id": "IC_kwDOABDGAc6Vcp4H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2507316743/reactions"
            },
            "updated_at": "2024-11-29T08:31:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2507316743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm closing this as \"won't fix\", but feel free to comment if you think that the proposed solutions do not fit your use case.",
            "created_at": "2024-11-29T08:34:00Z",
            "html_url": "https://github.com/cython/cython/issues/6525#issuecomment-2507320888",
            "id": 2507320888,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6525",
            "node_id": "IC_kwDOABDGAc6Vcq44",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2507320888/reactions"
            },
            "updated_at": "2024-11-29T08:34:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2507320888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6525/comments",
    "created_at": "2024-11-28T19:26:05Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-29T08:32:27Z",
            "event": "labeled",
            "id": 15472653269,
            "label": {
                "color": "444444",
                "name": "R: wontfix"
            },
            "node_id": "LE_lADOABDGAc6hHeFWzwAAAAOaPfPV",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15472653269"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-29T08:32:40Z",
            "event": "closed",
            "id": 15472655184,
            "node_id": "CE_lADOABDGAc6hHeFWzwAAAAOaPftQ",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "url": "https://api.github.com/repos/cython/cython/issues/events/15472655184"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6525/events",
    "html_url": "https://github.com/cython/cython/issues/6525",
    "id": 2703090006,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557400,
            "name": "R: wontfix",
            "node_id": "MDU6TGFiZWw0MjU1NTc0MDA=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6525/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6hHeFW",
    "number": 6525,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6525/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6525/timeline",
    "title": "[ENH] typed names for functions using fused types",
    "updated_at": "2024-11-29T08:34:01Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6525",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/68695780?v=4",
        "events_url": "https://api.github.com/users/Maki4748/events{/privacy}",
        "followers_url": "https://api.github.com/users/Maki4748/followers",
        "following_url": "https://api.github.com/users/Maki4748/following{/other_user}",
        "gists_url": "https://api.github.com/users/Maki4748/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Maki4748",
        "id": 68695780,
        "login": "Maki4748",
        "node_id": "MDQ6VXNlcjY4Njk1Nzgw",
        "organizations_url": "https://api.github.com/users/Maki4748/orgs",
        "received_events_url": "https://api.github.com/users/Maki4748/received_events",
        "repos_url": "https://api.github.com/users/Maki4748/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Maki4748/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Maki4748/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Maki4748",
        "user_view_type": "public"
    }
}