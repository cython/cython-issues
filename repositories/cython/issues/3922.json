{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "It would be useful to have an efficient way to construct a fixed sized `list` using Python-like code in Cython.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nFor example, one might have the following code in Python...\r\n\r\n```cython\r\ndef new_list(n: \"Py_ssize_t\") -> list:\r\n    l: list = n * [None]\r\n    return l\r\n```\r\n\r\nThough once this is compiled, it appears to coerce `n` to a Python `int`, create a singleton `list` with `None`, and use `Number` based multiplication between `n` and the singleton `list`. Preferably this would allocate a `list` of size `n` and then fill it with `None` in a C `for`-loop.\r\n\r\n**Describe the solution you'd like**\r\n\r\nInstead of generating code that relies on `append` or handling things at the Python level, it would be helpful to have some code roughly like this (error handling and refcounting skipped for simplicity).\r\n\r\n```c\r\n{\r\n    PyObject* l = PyList_New(n);\r\n    Py_ssize_t i;\r\n    for (i = 0; i < n; i++) {\r\n        PyList_SET_ITEM(l, i, Py_None);\r\n    }\r\n    // ...\r\n]\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nOne could try to use generators, though they don't look at the size hint as noted in issue ( https://github.com/cython/cython/issues/1311 ) and issue ( https://github.com/cython/cython/issues/2844 ). Plus these wind up being less performant than this implementation is in pure Python. Though Cython performance is likely fine with the other approach. Perhaps if Cython reinterpreted `n * [None]` as `[None for i in n]`, this could benefit from whatever solution is determined for the generator issues noted before. \r\n\r\n**Additional context**\r\n\r\nThis comes up periodically when one wants to quickly preallocate a fixed sized Python `list` and some other alternative like an array wouldn't otherwise work (for example needing to hold arbitrary Python `object`s and/or user expecting a `list` to be `return`ed).",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3922/comments",
    "created_at": "2020-12-01T02:13:55Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3922/events",
    "html_url": "https://github.com/cython/cython/issues/3922",
    "id": 753944642,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3922/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3NTM5NDQ2NDI=",
    "number": 3922,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] Optimize creating fixed size `list` from single element",
    "updated_at": "2020-12-01T02:17:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3922",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jakirkham",
        "id": 3019665,
        "login": "jakirkham",
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jakirkham"
    }
}