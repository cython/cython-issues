{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\n\r\nCode generated using `sizeof(uint32_t)` behaves like the value could change at runtime\r\n\r\n**To Reproduce**\r\nCode to reproduce the behaviour:\r\n```cython\r\nfrom libc.stdint cimport uint32_t\r\n\r\ncdef extern from *:\r\n    \"\"\"\r\n/* padding to align pointers to 4-bounds */\r\nstatic const int int32_pad[] = {0, 3, 2, 1};\r\n    \"\"\"\r\n    const int[4] int32_pad\r\n\r\ncdef object test(Py_ssize_t pos):\r\n    pos += int32_pad[pos % sizeof(uint32_t)]  # would you like some padding?\r\n    return pos\r\n```\r\n\r\n**Result**\r\nThe above generated the following code for the calculation:\r\n```c\r\n  __pyx_t_1 = (sizeof(uint32_t));\r\n  if (unlikely(__pyx_t_1 == 0)) {\r\n    PyErr_SetString(PyExc_ZeroDivisionError, \"integer division or modulo by zero\");\r\n    __PYX_ERR(0, 314, __pyx_L1_error)\r\n  }\r\n  __pyx_v_pos = (__pyx_v_pos + (int32_pad[(__pyx_v_pos % __pyx_t_1)]));\r\n```\r\nIt is... more than unlikely that t_1 will be 0 :smile: \r\n\r\n\r\n**Expected behavior**\r\nI would expect the same code generated for `[pos % 4]`, i.e.\r\n```c\r\n__pyx_v_pos = (__pyx_v_pos + (int32_pad[__Pyx_mod_Py_ssize_t(__pyx_v_pos, 4)]));\r\n```\r\n(well, actually I would have expected `pos % sizeof()`... but I guess you have reasons to use that macro instead of the `%` operator).\r\n\r\n**Environment:**\r\n - OS: Linux\r\n - Python version 3.8.5\r\n - Cython version 3.0a6\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "If it's causing you problems then it can be turned off by putting it in a `with cython.division(True):` block (similarly for the macro too). https://cython.readthedocs.io/en/latest/src/userguide/source_files_and_compilation.html#compiler-directives\r\n\r\nI don't think there's a good mechanism within Cython for marking an integer as \"Cython doesn't know what value this has but it's definitely not 0\". Which practically makes it quite hard to fix. Hopefully the C compiler is smart enough not to bother with this branch.\r\n\r\n(Edited: you want to turn cdivision on instead of off!)",
            "created_at": "2021-02-03T07:58:07Z",
            "html_url": "https://github.com/cython/cython/issues/3997#issuecomment-772312657",
            "id": 772312657,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3997",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjMxMjY1Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-03T08:03:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/772312657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree that we could optimize this away (though not sure how easy it would be). However the code above is still correct and should be optimized away by any decent optimizing C compiler. ",
            "created_at": "2021-02-03T08:25:06Z",
            "html_url": "https://github.com/cython/cython/issues/3997#issuecomment-772327040",
            "id": 772327040,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3997",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjMyNzA0MA==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-03T08:25:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/772327040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3997/comments",
    "created_at": "2021-02-03T01:44:08Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3997/events",
    "html_url": "https://github.com/cython/cython/issues/3997",
    "id": 799885131,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3997/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3OTk4ODUxMzE=",
    "number": 3997,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG]  `sizeof(uint32_t)` not considered contant",
    "updated_at": "2021-02-03T08:25:07Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3997",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/199429?v=4",
        "events_url": "https://api.github.com/users/dvarrazzo/events{/privacy}",
        "followers_url": "https://api.github.com/users/dvarrazzo/followers",
        "following_url": "https://api.github.com/users/dvarrazzo/following{/other_user}",
        "gists_url": "https://api.github.com/users/dvarrazzo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dvarrazzo",
        "id": 199429,
        "login": "dvarrazzo",
        "node_id": "MDQ6VXNlcjE5OTQyOQ==",
        "organizations_url": "https://api.github.com/users/dvarrazzo/orgs",
        "received_events_url": "https://api.github.com/users/dvarrazzo/received_events",
        "repos_url": "https://api.github.com/users/dvarrazzo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dvarrazzo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dvarrazzo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dvarrazzo"
    }
}