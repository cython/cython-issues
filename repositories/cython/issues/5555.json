{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nCythonizing and compiling on macOS with Apple clang version 14.0.3 (clang-1403.0.22.14.1) generates the following\r\n\r\n<details><summary>compiler warning for \"equality comparison with extraneous parentheses\".</summary>\r\n\r\n```\r\nclang -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot $MACOS13SDK -I$VENV_INCLUDE -I$PYTHON311_INCLUDE -c mycode.c -o $BUILD_DIR/mycode.o\r\nmycode.c:5898:28: warning: equality comparison with extraneous parentheses\r\n      [-Wparentheses-equality]\r\n  if (((__pyx_v_c_mode[0]) == 'f')) {\r\n       ~~~~~~~~~~~~~~~~~~~~^~~~~~\r\nmycode.c:5898:28: note: remove extraneous parentheses around the comparison to\r\n      silence this warning\r\n  if (((__pyx_v_c_mode[0]) == 'f')) {\r\n      ~                    ^     ~\r\nmycode.c:5898:28: note: use '=' to turn this equality comparison into an\r\n      assignment\r\n  if (((__pyx_v_c_mode[0]) == 'f')) {\r\n                           ^~\r\n                           =\r\n1 warning generated.\r\n```\r\n\r\n</details>\r\n\r\nSearching `mycode.c` for `if (((__pyx_v_c_mode[0]) == 'f')) {` takes me to the following \r\n\r\n<details><summary>generated C function.</summary>\r\n\r\n```c\r\n/* \"View.MemoryView\":268\r\n * \r\n * @cname(\"__pyx_array_new\")\r\n * cdef array array_cwrapper(tuple shape, Py_ssize_t itemsize, char *format, char *c_mode, char *buf):             # <<<<<<<<<<<<<<\r\n *     cdef array result\r\n *     cdef str mode = \"fortran\" if c_mode[0] == b'f' else \"c\"  # this often comes from a constant C string.\r\n */\r\n\r\nstatic struct __pyx_array_obj *__pyx_array_new(PyObject *__pyx_v_shape, Py_ssize_t __pyx_v_itemsize, char *__pyx_v_format, char *__pyx_v_c_mode, char *__pyx_v_buf) {\r\n  struct __pyx_array_obj *__pyx_v_result = 0;\r\n  PyObject *__pyx_v_mode = 0;\r\n  struct __pyx_array_obj *__pyx_r = NULL;\r\n  __Pyx_RefNannyDeclarations\r\n  PyObject *__pyx_t_1 = NULL;\r\n  int __pyx_t_2;\r\n  PyObject *__pyx_t_3 = NULL;\r\n  PyObject *__pyx_t_4 = NULL;\r\n  int __pyx_lineno = 0;\r\n  const char *__pyx_filename = NULL;\r\n  int __pyx_clineno = 0;\r\n  __Pyx_RefNannySetupContext(\"array_cwrapper\", 0);\r\n\r\n  /* \"View.MemoryView\":270\r\n * cdef array array_cwrapper(tuple shape, Py_ssize_t itemsize, char *format, char *c_mode, char *buf):\r\n *     cdef array result\r\n *     cdef str mode = \"fortran\" if c_mode[0] == b'f' else \"c\"  # this often comes from a constant C string.             # <<<<<<<<<<<<<<\r\n * \r\n *     if buf is NULL:\r\n */\r\n  if (((__pyx_v_c_mode[0]) == 'f')) {\r\n    __Pyx_INCREF(__pyx_n_s_fortran);\r\n    __pyx_t_1 = __pyx_n_s_fortran;\r\n  } else {\r\n    __Pyx_INCREF(__pyx_n_s_c);\r\n    __pyx_t_1 = __pyx_n_s_c;\r\n  }\r\n  __pyx_v_mode = ((PyObject*)__pyx_t_1);\r\n  __pyx_t_1 = 0;\r\n\r\n/* ✂️ */\r\n}\r\n```\r\n\r\n</details>\r\n\r\n\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nI don't have a minimal example, except to say that my code uses Cython memoryviews extensively as function parameters like `unsigned int8_t[:, :, ::1] out not None`. I build my Cython code with the following `setup.py`\r\n\r\n```python\r\nfrom setuptools import setup\r\nfrom Cython.Build import cythonize\r\nsetup(ext_modules=cythonize('mycode.pyx'))\r\n```\r\n\r\nand then I ran\r\n```console\r\n$ python setup.py build_ext --force --inplace\r\n```\r\n\r\n### Expected behaviour\r\n\r\nCython's generated C code should not produce warnings on major compilers under default build setups.\r\n\r\n### OS\r\n\r\nmacOS 13.4.1\r\n\r\n### Python version\r\n\r\nCPython 3.11.3\r\n\r\n### Cython version\r\n\r\n3.0.0\r\n\r\n### Additional context\r\n\r\nsetuptools 67.7.2\r\n\r\n```console\r\n$ clang --version\r\nApple clang version 14.0.3 (clang-1403.0.22.14.1)\r\nTarget: x86_64-apple-darwin22.5.0\r\nThread model: posix\r\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\r\n```",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5555/comments",
    "created_at": "2023-07-22T13:47:14Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5555/events",
    "html_url": "https://github.com/cython/cython/issues/5555",
    "id": 1816771357,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5555/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5sSbsd",
    "number": 5555,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5555/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5555/timeline",
    "title": "[BUG] clang warning from View.MemoryView's `array_cwrapper`",
    "updated_at": "2023-07-22T13:48:06Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5555",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1417749?v=4",
        "events_url": "https://api.github.com/users/wkschwartz/events{/privacy}",
        "followers_url": "https://api.github.com/users/wkschwartz/followers",
        "following_url": "https://api.github.com/users/wkschwartz/following{/other_user}",
        "gists_url": "https://api.github.com/users/wkschwartz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wkschwartz",
        "id": 1417749,
        "login": "wkschwartz",
        "node_id": "MDQ6VXNlcjE0MTc3NDk=",
        "organizations_url": "https://api.github.com/users/wkschwartz/orgs",
        "received_events_url": "https://api.github.com/users/wkschwartz/received_events",
        "repos_url": "https://api.github.com/users/wkschwartz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wkschwartz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wkschwartz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wkschwartz"
    }
}