{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The following type of code seems to compile and run fine:\r\n\r\n**.py**\r\n```python3\r\nimport cython\r\n\r\nobj = [1,2,3]\r\nptr = cython.cast(cython.pointer(PyObject), obj)\r\nobj2 = cython.cast(object, ptr)\r\n```\r\n\r\n**.pxd**\r\n```python3\r\nimport cython\r\nfrom cpython.ref cimport PyObject\r\n\r\ncdef object obj\r\ncdef PyObject* ptr\r\ncdef list obj2\r\n```\r\n\r\nIt is also valid (C)Python syntax.\r\n\r\nHowever, if run without Cython compilation, it will throw a `NameError` due to `PyObject` being undefined in the `.py` file.\r\n\r\nI believe working around this requires the user to monkey-patch `globals()` as a dictionary in the module, since Cython would complain about the naming conflict with a direct assignment.\r\n\r\n`cython.pointer(PyObject)` also feels a bit verbose compared to, e.g., `cython.p_int`.\r\n\r\nWould it make sense to add `PyObject`, `p_PyObject`, etc to `Shadow.py` (or elsewhere) and allow using forms like `cython.PyObject`, `cython.p_PyObject`, etc?",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Or, actually, since `PyObject` requires an explicit `cimport` in order to be available, I suppose this question could also be generalized as:\r\n\r\n\"Would it make sense to support pure Python emulation for definitions that are usually accessible via `cimport` from or definition in `.pxd` files (such as `cpython.ref.PyObject`, `math.NAN`, `array.resize`, etc)?\"\r\n\r\nMaybe something like `cython.cimport('modulename')` or `cython.cimport('dataname', from='modulename')` could be an alternative, Python-compatible syntax for `cimports` that could load a normal Python file from an expected filepath when run interpreted? Idk; I apologise if this is dumb as I'm just spitballing here.",
            "created_at": "2020-03-11T03:36:52Z",
            "html_url": "https://github.com/cython/cython/issues/3410#issuecomment-597427667",
            "id": 597427667,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzQyNzY2Nw==",
            "updated_at": "2020-03-11T07:04:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/597427667",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the main argument against would be: it'd be hard to come up with too many cases where both the pure Python and the Cython code are able to do much meaningful with the cimports. And given that, you might as well just use Cython syntax.\r\n\r\nThe main one I can really think of is a Cython module with `cpdef`s, where there is a fast path that otherwise behaves the same.",
            "created_at": "2020-03-11T07:42:44Z",
            "html_url": "https://github.com/cython/cython/issues/3410#issuecomment-597488288",
            "id": 597488288,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzQ4ODI4OA==",
            "updated_at": "2020-03-11T07:42:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/597488288",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If it were to be done, I guess you'd want to copy the interface of [`__import__`](https://docs.python.org/3/library/functions.html#__import__) as far as possible.",
            "created_at": "2020-03-11T07:46:03Z",
            "html_url": "https://github.com/cython/cython/issues/3410#issuecomment-597489432",
            "id": 597489432,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzQ4OTQzMg==",
            "updated_at": "2020-03-11T07:46:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/597489432",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wouldn't mind adding `PyObject*` to `Shadow.py` (I mean, why not?), but I don't see a use case for that. @will-ca could you describe how you came up with this? What are/were you trying to achieve?\r\n\r\nI think, given that there's probably no need for `PyObject` as such, `PyObject*` could just become `cython.p_object` or so. Or keep the name `PyObject`, because that's what potential users would know. Yeah, maybe rather that. Not sure.",
            "created_at": "2020-03-21T14:27:46Z",
            "html_url": "https://github.com/cython/cython/issues/3410#issuecomment-602050926",
            "id": 602050926,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjA1MDkyNg==",
            "updated_at": "2020-03-21T14:27:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/602050926",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3410/comments",
    "created_at": "2020-03-11T01:26:49Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-21T14:27:46Z",
            "event": "mentioned",
            "id": 3151782755,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE1MTc4Mjc1NQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3151782755"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-21T14:27:46Z",
            "event": "subscribed",
            "id": 3151782756,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNTE3ODI3NTY=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3151782756"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3410/events",
    "html_url": "https://github.com/cython/cython/issues/3410",
    "id": 578952079,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3410/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Nzg5NTIwNzk=",
    "number": 3410,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "`PyObject` and its pointers in `Shadow.py`?",
    "updated_at": "2020-03-21T14:27:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3410",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
        "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
        "followers_url": "https://api.github.com/users/will-ca/followers",
        "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
        "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/will-ca",
        "id": 37680486,
        "login": "will-ca",
        "node_id": "MDQ6VXNlcjM3NjgwNDg2",
        "organizations_url": "https://api.github.com/users/will-ca/orgs",
        "received_events_url": "https://api.github.com/users/will-ca/received_events",
        "repos_url": "https://api.github.com/users/will-ca/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/will-ca"
    }
}