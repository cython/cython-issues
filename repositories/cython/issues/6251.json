{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\nAfter upgrading Python in Fedora to 3.13.0.b2, we see the following test failures when uilding Cython 3.0.10:\r\n\r\n```\r\n[1/1] Cythonizing /builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/13/run/cpp/test_coroutines_pep492/_cython_inline_e33364e9353c8a258c949b6036361a5e94d7aebd.pyx\r\nSharded tests run in 1031 seconds (17.2 minutes)\r\nErrors found in shards 29, 27, 18, 26, 4, 16, 9\r\nErrors from shard 29:\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase.runTest)\r\n[29] compiling (cpp/cy2) and running cpp_nonstdint\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1548, in run\r\n    ext_so_path = self.runCompileTest()\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1161, in runCompileTest\r\n    return self.compile(\r\n           ~~~~~~~~~~~~^\r\n        self.test_directory, self.module, self.module_path, self.workdir,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        self.test_directory, self.expect_log,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        self.annotate, self.add_cython_import)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1480, in compile\r\n    so_path = self.run_distutils(test_directory, module, workdir, incdir)\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1392, in run_distutils\r\n    raise CompileError(u\"%s\\nCompiler output:\\n%s\" % (error, prepare_captured(stderr)))\r\ndistutils.errors.CompileError: command '/usr/bin/gcc' failed with exit code 1\r\nCompiler output:\r\ncpp_nonstdint.cpp: In function ‘Int24 __Pyx_PyInt_As_Int24(PyObject*)’:\r\ncpp_nonstdint.cpp:6236:25: error: no match for ‘operator|=’ (operand types are ‘Int24’ {aka ‘Integral<3>’} and ‘long long int’)\r\n 6236 |                     val |= ((Int24) idigit) << bits;\r\n      |                     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp:6247:21: error: no match for ‘operator|=’ (operand types are ‘Int24’ {aka ‘Integral<3>’} and ‘long long int’)\r\n 6247 |                 val |= ((Int24) idigit) << bits;\r\n      |                 ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp: In function ‘Int56 __Pyx_PyInt_As_Int56(PyObject*)’:\r\ncpp_nonstdint.cpp:6509:25: error: no match for ‘operator|=’ (operand types are ‘Int56’ {aka ‘Integral<7>’} and ‘long long int’)\r\n 6509 |                     val |= ((Int56) idigit) << bits;\r\n      |                     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp:6520:21: error: no match for ‘operator|=’ (operand types are ‘Int56’ {aka ‘Integral<7>’} and ‘long long int’)\r\n 6520 |                 val |= ((Int56) idigit) << bits;\r\n      |                 ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp: In function ‘Int88 __Pyx_PyInt_As_Int88(PyObject*)’:\r\ncpp_nonstdint.cpp:6782:25: error: no match for ‘operator|=’ (operand types are ‘Int88’ {aka ‘Integral<11>’} and ‘long long int’)\r\n 6782 |                     val |= ((Int88) idigit) << bits;\r\n      |                     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp:6793:21: error: no match for ‘operator|=’ (operand types are ‘Int88’ {aka ‘Integral<11>’} and ‘long long int’)\r\n 6793 |                 val |= ((Int88) idigit) << bits;\r\n      |                 ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp:6798:53: warning: left shift count >= width of type [-Wshift-count-overflow]\r\n 6798 |                     if (unlikely(val & (((Int88) 1) << (sizeof(Int88) * 8 - 1))))\r\n      |                                         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp:1465:43: note: in definition of macro ‘unlikely’\r\n 1465 |   #define unlikely(x) __builtin_expect(!!(x), 0)\r\n      |                                           ^\r\ncpp_nonstdint.cpp: In function ‘Int512 __Pyx_PyInt_As_Int512(PyObject*)’:\r\ncpp_nonstdint.cpp:7055:25: error: no match for ‘operator|=’ (operand types are ‘Int512’ {aka ‘Integral<64>’} and ‘long long int’)\r\n 7055 |                     val |= ((Int512) idigit) << bits;\r\n      |                     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp:7066:21: error: no match for ‘operator|=’ (operand types are ‘Int512’ {aka ‘Integral<64>’} and ‘long long int’)\r\n 7066 |                 val |= ((Int512) idigit) << bits;\r\n      |                 ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp:7071:54: warning: left shift count >= width of type [-Wshift-count-overflow]\r\n 7071 |                     if (unlikely(val & (((Int512) 1) << (sizeof(Int512) * 8 - 1))))\r\n      |                                         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncpp_nonstdint.cpp:1465:43: note: in definition of macro ‘unlikely’\r\n 1465 |   #define unlikely(x) __builtin_expect(!!(x), 0)\r\n      |                                           ^\r\nErrors from shard 27:\r\n======================================================================\r\nFAIL: test_docstrings (r_docstrings.__test__)\r\nDoctest: r_docstrings.__test__.test_docstrings\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.13/doctest.py\", line 2327, in runTest\r\n    raise self.failureException(self.format_failure(new.getvalue()))\r\nAssertionError: Failed doctest test for r_docstrings.__test__.test_docstrings\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line unknown line number, in test_docstrings\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    Pyf.__doc__\r\nExpected:\r\n    '\\n    This is a function docstring.\\n    '\r\nGot:\r\n    '\\nThis is a function docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyC.__doc__\r\nExpected:\r\n    '\\n    This is a class docstring.\\n    '\r\nGot:\r\n    '\\nThis is a class docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyC.docstring_copy_C\r\nExpected:\r\n    '\\n    This is a class docstring.\\n    '\r\nGot:\r\n    '\\nThis is a class docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCS.docstring_copy_C\r\nExpected:\r\n    '\\n    This is a class docstring.\\n    '\r\nGot:\r\n    '\\nThis is a class docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCSS.docstring_copy_C\r\nExpected:\r\n    '\\n    This is a class docstring.\\n    '\r\nGot:\r\n    '\\nThis is a class docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCS.__doc__\r\nExpected:\r\n    '\\n    This is a subclass docstring.\\n    '\r\nGot:\r\n    '\\nThis is a subclass docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCS.docstring_copy_CS\r\nExpected:\r\n    '\\n    This is a subclass docstring.\\n    '\r\nGot:\r\n    '\\nThis is a subclass docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/c/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCSS.docstring_copy_CS\r\nExpected:\r\n    '\\n    This is a subclass docstring.\\n    '\r\nGot:\r\n    '\\nThis is a subclass docstring.\\n'\r\n======================================================================\r\nFAIL: test_docstrings (r_docstrings.__test__)\r\nDoctest: r_docstrings.__test__.test_docstrings\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.13/doctest.py\", line 2327, in runTest\r\n    raise self.failureException(self.format_failure(new.getvalue()))\r\nAssertionError: Failed doctest test for r_docstrings.__test__.test_docstrings\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line unknown line number, in test_docstrings\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    Pyf.__doc__\r\nExpected:\r\n    '\\n    This is a function docstring.\\n    '\r\nGot:\r\n    '\\nThis is a function docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyC.__doc__\r\nExpected:\r\n    '\\n    This is a class docstring.\\n    '\r\nGot:\r\n    '\\nThis is a class docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyC.docstring_copy_C\r\nExpected:\r\n    '\\n    This is a class docstring.\\n    '\r\nGot:\r\n    '\\nThis is a class docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCS.docstring_copy_C\r\nExpected:\r\n    '\\n    This is a class docstring.\\n    '\r\nGot:\r\n    '\\nThis is a class docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCSS.docstring_copy_C\r\nExpected:\r\n    '\\n    This is a class docstring.\\n    '\r\nGot:\r\n    '\\nThis is a class docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCS.__doc__\r\nExpected:\r\n    '\\n    This is a subclass docstring.\\n    '\r\nGot:\r\n    '\\nThis is a subclass docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCS.docstring_copy_CS\r\nExpected:\r\n    '\\n    This is a subclass docstring.\\n    '\r\nGot:\r\n    '\\nThis is a subclass docstring.\\n'\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/27/run/cpp/r_docstrings/r_docstrings.cpython-313-x86_64-linux-gnu.so\", line ?, in r_docstrings.__test__.test_docstrings\r\nFailed example:\r\n    PyCSS.docstring_copy_CS\r\nExpected:\r\n    '\\n    This is a subclass docstring.\\n    '\r\nGot:\r\n    '\\nThis is a subclass docstring.\\n'\r\nErrors from shard 18:\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase.runTest)\r\n[18] compiling (c/cy2) and running time_pxd\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1548, in run\r\n    ext_so_path = self.runCompileTest()\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1161, in runCompileTest\r\n    return self.compile(\r\n           ~~~~~~~~~~~~^\r\n        self.test_directory, self.module, self.module_path, self.workdir,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        self.test_directory, self.expect_log,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        self.annotate, self.add_cython_import)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1480, in compile\r\n    so_path = self.run_distutils(test_directory, module, workdir, incdir)\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1392, in run_distutils\r\n    raise CompileError(u\"%s\\nCompiler output:\\n%s\" % (error, prepare_captured(stderr)))\r\ndistutils.errors.CompileError: command '/usr/bin/gcc' failed with exit code 1\r\nCompiler output:\r\ntime_pxd.c: In function ‘__pyx_f_7cpython_4time_time’:\r\ntime_pxd.c:3071:3: error: unknown type name ‘_PyTime_t’; did you mean ‘PyTime_t’?\r\n 3071 |   _PyTime_t __pyx_v_tic;\r\n      |   ^~~~~~~~~\r\n      |   PyTime_t\r\ntime_pxd.c:3081:17: error: implicit declaration of function ‘_PyTime_GetSystemClock’ [-Wimplicit-function-declaration]\r\n 3081 |   __pyx_v_tic = _PyTime_GetSystemClock();\r\n      |                 ^~~~~~~~~~~~~~~~~~~~~~\r\ntime_pxd.c:3090:13: error: implicit declaration of function ‘_PyTime_AsSecondsDouble’; did you mean ‘PyTime_AsSecondsDouble’? [-Wimplicit-function-declaration]\r\n 3090 |   __pyx_r = _PyTime_AsSecondsDouble(__pyx_v_tic);\r\n      |             ^~~~~~~~~~~~~~~~~~~~~~~\r\n      |             PyTime_AsSecondsDouble\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase.runTest)\r\n[18] compiling (cpp/cy2) and running time_pxd\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1548, in run\r\n    ext_so_path = self.runCompileTest()\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1161, in runCompileTest\r\n    return self.compile(\r\n           ~~~~~~~~~~~~^\r\n        self.test_directory, self.module, self.module_path, self.workdir,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        self.test_directory, self.expect_log,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        self.annotate, self.add_cython_import)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1480, in compile\r\n    so_path = self.run_distutils(test_directory, module, workdir, incdir)\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/runtests.py\", line 1392, in run_distutils\r\n    raise CompileError(u\"%s\\nCompiler output:\\n%s\" % (error, prepare_captured(stderr)))\r\ndistutils.errors.CompileError: command '/usr/bin/gcc' failed with exit code 1\r\nCompiler output:\r\ntime_pxd.cpp: In function ‘double __pyx_f_7cpython_4time_time()’:\r\ntime_pxd.cpp:3086:3: error: ‘_PyTime_t’ was not declared in this scope; did you mean ‘PyTime_t’?\r\n 3086 |   _PyTime_t __pyx_v_tic;\r\n      |   ^~~~~~~~~\r\n      |   PyTime_t\r\ntime_pxd.cpp:3096:3: error: ‘__pyx_v_tic’ was not declared in this scope; did you mean ‘__pyx_k_tic3’?\r\n 3096 |   __pyx_v_tic = _PyTime_GetSystemClock();\r\n      |   ^~~~~~~~~~~\r\n      |   __pyx_k_tic3\r\ntime_pxd.cpp:3096:17: error: ‘_PyTime_GetSystemClock’ was not declared in this scope\r\n 3096 |   __pyx_v_tic = _PyTime_GetSystemClock();\r\n      |                 ^~~~~~~~~~~~~~~~~~~~~~\r\ntime_pxd.cpp:3105:13: error: ‘_PyTime_AsSecondsDouble’ was not declared in this scope; did you mean ‘PyTime_AsSecondsDouble’?\r\n 3105 |   __pyx_r = _PyTime_AsSecondsDouble(__pyx_v_tic);\r\n      |             ^~~~~~~~~~~~~~~~~~~~~~~\r\n      |             PyTime_AsSecondsDouble\r\nErrors from shard 26:\r\n======================================================================\r\nERROR: test_class_ref (Cython.Build.Tests.TestInline.TestInline.test_class_ref)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Tests/TestInline.py\", line 59, in test_class_ref\r\n    tp = inline(\"Type\")['Type']\r\n         ~~~~~~^^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Shadow.py\", line 149, in inline\r\n    return _cython_inline(f, *args, **kwds)\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Inline.py\", line 282, in cython_inline\r\n    build_extension.extensions = cythonize(\r\n                                 ~~~~~~~~~^\r\n        [extension],\r\n        ^^^^^^^^^^^^\r\n        include_path=cython_include_dirs or ['.'],\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        compiler_directives=cython_compiler_directives,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        quiet=quiet)\r\n        ^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Dependencies.py\", line 1154, in cythonize\r\n    cythonize_one(*args)\r\n    ~~~~~~~~~~~~~^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Dependencies.py\", line 1321, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: /builddir/.cython/inline/_cython_inline_cf9b1e66c3443c1bd4e4289223f3f0f0cb3277db.pyx\r\n======================================================================\r\nERROR: test_locals (Cython.Build.Tests.TestInline.TestInline.test_locals)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Tests/TestInline.py\", line 40, in test_locals\r\n    self.assertEqual(inline(\"return a+b\", **self._call_kwds), 3)\r\n                     ~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Shadow.py\", line 149, in inline\r\n    return _cython_inline(f, *args, **kwds)\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Inline.py\", line 282, in cython_inline\r\n    build_extension.extensions = cythonize(\r\n                                 ~~~~~~~~~^\r\n        [extension],\r\n        ^^^^^^^^^^^^\r\n        include_path=cython_include_dirs or ['.'],\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        compiler_directives=cython_compiler_directives,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        quiet=quiet)\r\n        ^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Dependencies.py\", line 1154, in cythonize\r\n    cythonize_one(*args)\r\n    ~~~~~~~~~~~~~^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Dependencies.py\", line 1321, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: /builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/inline/_cython_inline_7e36f59d34c9428dabe3cbf671afa686202f54ec.pyx\r\n======================================================================\r\nERROR: test_pure (Cython.Build.Tests.TestInline.TestInline.test_pure)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Tests/TestInline.py\", line 64, in test_pure\r\n    b = inline(\"\"\"\r\n    b = cy.declare(float, a)\r\n    c = cy.declare(cy.pointer(cy.float), &b)\r\n    return b\r\n    \"\"\", a=3, **self._call_kwds)\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Shadow.py\", line 149, in inline\r\n    return _cython_inline(f, *args, **kwds)\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Inline.py\", line 282, in cython_inline\r\n    build_extension.extensions = cythonize(\r\n                                 ~~~~~~~~~^\r\n        [extension],\r\n        ^^^^^^^^^^^^\r\n        include_path=cython_include_dirs or ['.'],\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        compiler_directives=cython_compiler_directives,\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        quiet=quiet)\r\n        ^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Dependencies.py\", line 1154, in cythonize\r\n    cythonize_one(*args)\r\n    ~~~~~~~~~~~~~^^^^^^^\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/Cython/Build/Dependencies.py\", line 1321, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: /builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/inline/_cython_inline_968f9ed514deb104f9661b3f2b61a21af005cea4.pyx\r\nErrors from shard 4:\r\n======================================================================\r\nFAIL: wrap_hasattr (hasattr)\r\nDoctest: hasattr.wrap_hasattr\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.13/doctest.py\", line 2327, in runTest\r\n    raise self.failureException(self.format_failure(new.getvalue()))\r\nAssertionError: Failed doctest test for hasattr.wrap_hasattr\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/4/run/c/hasattr/hasattr.cpython-313-x86_64-linux-gnu.so\", line unknown line number, in wrap_hasattr\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/4/run/c/hasattr/hasattr.cpython-313-x86_64-linux-gnu.so\", line ?, in hasattr.wrap_hasattr\r\nFailed example:\r\n    wrap_hasattr(Foo(), \"baz\")\r\nException raised:\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib64/python3.13/doctest.py\", line 1395, in __run\r\n        exec(compile(example.source, filename, \"single\",\r\n        ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                     compileflags, True), test.globs)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n      File \"<doctest hasattr.wrap_hasattr[7]>\", line 1, in <module>\r\n        wrap_hasattr(Foo(), \"baz\")\r\n        ~~~~~~~~~~~~^^^^^^^^^^^^^^\r\n      File \"tests/run/hasattr.pyx\", line 43, in hasattr.wrap_hasattr (hasattr.c:2973)\r\n        return hasattr(obj, name)\r\n      File \"tests/run/hasattr.pyx\", line 12, in hasattr.Foo.baz (hasattr.c:2804)\r\n        return int(1)/int(0)\r\n    ZeroDivisionError: division by zero\r\n======================================================================\r\nFAIL: wrap_hasattr (hasattr)\r\nDoctest: hasattr.wrap_hasattr\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.13/doctest.py\", line 2327, in runTest\r\n    raise self.failureException(self.format_failure(new.getvalue()))\r\nAssertionError: Failed doctest test for hasattr.wrap_hasattr\r\n  File \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/4/run/cpp/hasattr/hasattr.cpython-313-x86_64-linux-gnu.so\", line unknown line number, in wrap_hasattr\r\n----------------------------------------------------------------------\r\nFile \"/builddir/build/BUILD/Cython-3.0.10-build/cython-3.0.10/TEST_TMP/4/run/cpp/hasattr/hasattr.cpython-313-x86_64-linux-gnu.so\", line ?, in hasattr.wrap_hasattr\r\nFailed example:\r\n    wrap_hasattr(Foo(), \"baz\")\r\nException raised:\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib64/python3.13/doctest.py\", line 1395, in __run\r\n        exec(compile(example.source, filename, \"single\",\r\n        ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                     compileflags, True), test.globs)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n      File \"<doctest hasattr.wrap_hasattr[7]>\", line 1, in <module>\r\n        wrap_hasattr(Foo(), \"baz\")\r\n        ~~~~~~~~~~~~^^^^^^^^^^^^^^\r\n      File \"tests/run/hasattr.pyx\", line 43, in hasattr.wrap_hasattr (hasattr.cpp:2985)\r\n        return hasattr(obj, name)\r\n      File \"tests/run/hasattr.pyx\", line 12, in hasattr.Foo.baz (hasattr.cpp:2816)\r\n        return int(1)/int(0)\r\n    ZeroDivisionError: division by zero\r\n======================================================================\r\nFAIL: test_attributes (test_exceptions.ImportErrorTests.test_attributes)\r\n----------------------------------------------------------------------\r\nTypeError: ImportError() got an unexpected keyword argument 'invalid'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_exceptions.pyx\", line 1321, in test_exceptions.ImportErrorTests.test_attributes (test_exceptions.c:50666)\r\n    with self.assertRaisesRegex(TypeError, msg):\r\nAssertionError: \"'invalid' is an invalid keyword argument for ImportError\" does not match \"ImportError() got an unexpected keyword argument 'invalid'\"\r\n======================================================================\r\nFAIL: test_attributes (test_exceptions.ImportErrorTests.test_attributes)\r\n----------------------------------------------------------------------\r\nTypeError: ImportError() got an unexpected keyword argument 'invalid'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_exceptions.pyx\", line 1321, in test_exceptions.ImportErrorTests.test_attributes (test_exceptions.cpp:50678)\r\n    with self.assertRaisesRegex(TypeError, msg):\r\nAssertionError: \"'invalid' is an invalid keyword argument for ImportError\" does not match \"ImportError() got an unexpected keyword argument 'invalid'\"\r\nErrors from shard 16:\r\n======================================================================\r\nERROR: test_initvar_is_specified (test_dataclasses.TestReplace.test_initvar_is_specified)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_dataclasses.pyx\", line 1202, in test_dataclasses.TestReplace.test_initvar_is_specified (test_dataclasses.c:159917)\r\n    with self.assertRaises(ValueError):\r\n  File \"tests/run/test_dataclasses.pyx\", line 1203, in test_dataclasses.TestReplace.test_initvar_is_specified (test_dataclasses.c:159855)\r\n    replace(c, x=3)\r\n  File \"/usr/lib64/python3.13/dataclasses.py\", line 1597, in replace\r\n    return _replace(obj, **changes)\r\n  File \"/usr/lib64/python3.13/dataclasses.py\", line 1622, in _replace\r\n    raise TypeError(f\"InitVar {f.name!r} \"\r\n                    f'must be specified with replace()')\r\nTypeError: InitVar 'y' must be specified with replace()\r\n======================================================================\r\nERROR: test_no_init (test_dataclasses.TestReplace.test_no_init)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_dataclasses.pyx\", line 1183, in test_dataclasses.TestReplace.test_no_init (test_dataclasses.c:158699)\r\n    with self.assertRaises(ValueError):\r\n  File \"tests/run/test_dataclasses.pyx\", line 1184, in test_dataclasses.TestReplace.test_no_init (test_dataclasses.c:158636)\r\n    replace(c, x=2, y=30)\r\n  File \"/usr/lib64/python3.13/dataclasses.py\", line 1597, in replace\r\n    return _replace(obj, **changes)\r\n  File \"/usr/lib64/python3.13/dataclasses.py\", line 1615, in _replace\r\n    raise TypeError(f'field {f.name} is declared with '\r\n                    f'init=False, it cannot be specified with '\r\n                    f'replace()')\r\nTypeError: field y is declared with init=False, it cannot be specified with replace()\r\n======================================================================\r\nERROR: test_initvar_is_specified (test_dataclasses.TestReplace.test_initvar_is_specified)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_dataclasses.pyx\", line 1202, in test_dataclasses.TestReplace.test_initvar_is_specified (test_dataclasses.cpp:159929)\r\n    with self.assertRaises(ValueError):\r\n  File \"tests/run/test_dataclasses.pyx\", line 1203, in test_dataclasses.TestReplace.test_initvar_is_specified (test_dataclasses.cpp:159867)\r\n    replace(c, x=3)\r\n  File \"/usr/lib64/python3.13/dataclasses.py\", line 1597, in replace\r\n    return _replace(obj, **changes)\r\n  File \"/usr/lib64/python3.13/dataclasses.py\", line 1622, in _replace\r\n    raise TypeError(f\"InitVar {f.name!r} \"\r\n                    f'must be specified with replace()')\r\nTypeError: InitVar 'y' must be specified with replace()\r\n======================================================================\r\nERROR: test_no_init (test_dataclasses.TestReplace.test_no_init)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_dataclasses.pyx\", line 1183, in test_dataclasses.TestReplace.test_no_init (test_dataclasses.cpp:158711)\r\n    with self.assertRaises(ValueError):\r\n  File \"tests/run/test_dataclasses.pyx\", line 1184, in test_dataclasses.TestReplace.test_no_init (test_dataclasses.cpp:158648)\r\n    replace(c, x=2, y=30)\r\n  File \"/usr/lib64/python3.13/dataclasses.py\", line 1597, in replace\r\n    return _replace(obj, **changes)\r\n  File \"/usr/lib64/python3.13/dataclasses.py\", line 1615, in _replace\r\n    raise TypeError(f'field {f.name} is declared with '\r\n                    f'init=False, it cannot be specified with '\r\n                    f'replace()')\r\nTypeError: field y is declared with init=False, it cannot be specified with replace()\r\nErrors from shard 9:\r\n======================================================================\r\nFAIL: test_find_etc_raise_correct_error_messages (test_unicode.UnicodeTest.test_find_etc_raise_correct_error_messages)\r\n----------------------------------------------------------------------\r\nTypeError: find expected at most 3 arguments, got 4\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_unicode_string_tests.pxi\", line 1374, in test_unicode.MixinStrUnicodeUserStringTest.test_find_etc_raise_correct_error_messages (test_unicode.c:57511)\r\n    self.assertRaisesRegex(TypeError, r'^find\\(', s.find,\r\nAssertionError: \"^find\\(\" does not match \"find expected at most 3 arguments, got 4\"\r\n======================================================================\r\nFAIL: test_find_etc_raise_correct_error_messages (test_unicode.UnicodeTest.test_find_etc_raise_correct_error_messages)\r\n----------------------------------------------------------------------\r\nTypeError: find expected at most 3 arguments, got 4\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_unicode_string_tests.pxi\", line 1374, in test_unicode.MixinStrUnicodeUserStringTest.test_find_etc_raise_correct_error_messages (test_unicode.cpp:57523)\r\n    self.assertRaisesRegex(TypeError, r'^find\\(', s.find,\r\nAssertionError: \"^find\\(\" does not match \"find expected at most 3 arguments, got 4\"\r\n```\r\n\r\nAt least some of the failures (but not all) seem to be caused by docstrings dedentation in Python 3.13.\r\n\r\nFull log: [build.log](https://github.com/user-attachments/files/15915681/build.log.txt)\r\n\n\n### Code to reproduce the behaviour:\n\nbuild cython with cython, run the tests\r\n\n\n### Expected behaviour\n\nthe test should pass :)\n\n### OS\n\nFedora Linux 41\n\n### Python version\n\n3.13.0b2\n\n### Cython version\n\n3.0.10\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I just hit the `wrap_hasattr` failure while testing `pandas` with 3.13. What happens is that in 3.13 `PyObject_HasAttrWithError` is called, which returns -1 and then Cython lets the exception propagate. In 3.12 and earlier, the following code runs instead:\r\n\r\n```c\r\n    r = __Pyx_GetAttr(o, n);\r\n    if (!r) {\r\n        PyErr_Clear();\r\n        return 0;\r\n    }\r\n```\r\n\r\nShould this be considered a bug? In `pandas` I ended up catching the exception (https://github.com/pandas-dev/pandas/pull/59065).",
            "created_at": "2024-06-21T13:42:37Z",
            "html_url": "https://github.com/cython/cython/issues/6251#issuecomment-2182781972",
            "id": 2182781972,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6251",
            "node_id": "IC_kwDOABDGAc6CGpwU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2182781972/reactions"
            },
            "updated_at": "2024-06-21T13:42:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2182781972",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20306270?v=4",
                "events_url": "https://api.github.com/users/lysnikolaou/events{/privacy}",
                "followers_url": "https://api.github.com/users/lysnikolaou/followers",
                "following_url": "https://api.github.com/users/lysnikolaou/following{/other_user}",
                "gists_url": "https://api.github.com/users/lysnikolaou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lysnikolaou",
                "id": 20306270,
                "login": "lysnikolaou",
                "node_id": "MDQ6VXNlcjIwMzA2Mjcw",
                "organizations_url": "https://api.github.com/users/lysnikolaou/orgs",
                "received_events_url": "https://api.github.com/users/lysnikolaou/received_events",
                "repos_url": "https://api.github.com/users/lysnikolaou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lysnikolaou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lysnikolaou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lysnikolaou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Docstring changes have already been fixed in master (I suspect this actually applies to a lot of the issues here). I've backported the test changes as 6e061108d",
            "created_at": "2024-06-23T11:04:35Z",
            "html_url": "https://github.com/cython/cython/issues/6251#issuecomment-2184945030",
            "id": 2184945030,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6251",
            "node_id": "IC_kwDOABDGAc6CO52G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2184945030/reactions"
            },
            "updated_at": "2024-06-23T11:04:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2184945030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "cpp_nonstdint works for me locally - I suspect this is a C++ compiler support issue (which might be worth fixing, but isn't a specific issue with 3.0.x I think)",
            "created_at": "2024-06-23T11:06:27Z",
            "html_url": "https://github.com/cython/cython/issues/6251#issuecomment-2184945582",
            "id": 2184945582,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6251",
            "node_id": "IC_kwDOABDGAc6CO5-u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2184945582/reactions"
            },
            "updated_at": "2024-06-23T11:06:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2184945582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The `hasattr` test: this was \"fixed\" in 599710889695c3f613a665cb15aa32637f1fdbe1 so I could just cherry-pick that.\r\n\r\nHowever - it looks like in pure Python `hasattr` swallowed the error in Python 2, and allowed it to propagate in Python 3. That suggest to me that the fix isn't really right, and that we should get consistent behaviour (probably based on Python 3)",
            "created_at": "2024-06-23T11:45:46Z",
            "html_url": "https://github.com/cython/cython/issues/6251#issuecomment-2184956105",
            "id": 2184956105,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6251",
            "node_id": "IC_kwDOABDGAc6CO8jJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2184956105/reactions"
            },
            "updated_at": "2024-06-23T11:45:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2184956105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "test_unicode works for me (and doesn't look to have changed between 3.0.x and master, where it also works for me) so I don't know what's going on there.\r\n\r\ntest_exceptions was fixed in https://github.com/cython/cython/commit/c076532efbf8cf1b71c385c7ecbd8b6b0d98f7c0 and https://github.com/cython/cython/commit/a065a28f7c5fcadc488d6fc4ee7e8e6b41aed988 but doesn't look to backport cleanly so I don't do it right now",
            "created_at": "2024-06-23T12:16:13Z",
            "html_url": "https://github.com/cython/cython/issues/6251#issuecomment-2184965915",
            "id": 2184965915,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6251",
            "node_id": "IC_kwDOABDGAc6CO-8b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2184965915/reactions"
            },
            "updated_at": "2024-06-23T12:16:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2184965915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> However - it looks like in pure Python `hasattr` swallowed the error in Python 2, and allowed it to propagate in Python 3. That suggest to me that the fix isn't really right, and that we should get consistent behaviour (probably based on Python 3)\r\n\r\nAgreed. We should probably make that behavior consistent.",
            "created_at": "2024-06-24T10:58:22Z",
            "html_url": "https://github.com/cython/cython/issues/6251#issuecomment-2186288041",
            "id": 2186288041,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6251",
            "node_id": "IC_kwDOABDGAc6CUBup",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2186288041/reactions"
            },
            "updated_at": "2024-06-24T10:58:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2186288041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20306270?v=4",
                "events_url": "https://api.github.com/users/lysnikolaou/events{/privacy}",
                "followers_url": "https://api.github.com/users/lysnikolaou/followers",
                "following_url": "https://api.github.com/users/lysnikolaou/following{/other_user}",
                "gists_url": "https://api.github.com/users/lysnikolaou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lysnikolaou",
                "id": 20306270,
                "login": "lysnikolaou",
                "node_id": "MDQ6VXNlcjIwMzA2Mjcw",
                "organizations_url": "https://api.github.com/users/lysnikolaou/orgs",
                "received_events_url": "https://api.github.com/users/lysnikolaou/received_events",
                "repos_url": "https://api.github.com/users/lysnikolaou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lysnikolaou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lysnikolaou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lysnikolaou"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for looking at the failures. I'll see what remains if I backport the mentioned commits.",
            "created_at": "2024-06-24T11:06:42Z",
            "html_url": "https://github.com/cython/cython/issues/6251#issuecomment-2186303316",
            "id": 2186303316,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6251",
            "node_id": "IC_kwDOABDGAc6CUFdU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2186303316/reactions"
            },
            "updated_at": "2024-06-24T11:06:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2186303316",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
                "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
                "followers_url": "https://api.github.com/users/hroncok/followers",
                "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
                "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hroncok",
                "id": 2401856,
                "login": "hroncok",
                "node_id": "MDQ6VXNlcjI0MDE4NTY=",
                "organizations_url": "https://api.github.com/users/hroncok/orgs",
                "received_events_url": "https://api.github.com/users/hroncok/received_events",
                "repos_url": "https://api.github.com/users/hroncok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hroncok"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "[build.log](https://github.com/user-attachments/files/15955843/build.log.txt)\r\n\r\nThis is with https://github.com/cython/cython/commit/6e061108db https://github.com/cython/cython/commit/5997108896 https://github.com/cython/cython/commit/bb8325bca9\r\n",
            "created_at": "2024-06-24T12:42:09Z",
            "html_url": "https://github.com/cython/cython/issues/6251#issuecomment-2186490259",
            "id": 2186490259,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6251",
            "node_id": "IC_kwDOABDGAc6CUzGT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2186490259/reactions"
            },
            "updated_at": "2024-06-24T12:42:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2186490259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
                "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
                "followers_url": "https://api.github.com/users/hroncok/followers",
                "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
                "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hroncok",
                "id": 2401856,
                "login": "hroncok",
                "node_id": "MDQ6VXNlcjI0MDE4NTY=",
                "organizations_url": "https://api.github.com/users/hroncok/orgs",
                "received_events_url": "https://api.github.com/users/hroncok/received_events",
                "repos_url": "https://api.github.com/users/hroncok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hroncok"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6251/comments",
    "created_at": "2024-06-20T14:37:42Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "27eaa0ce5a172b30f969ddcd0c81b6a2e425d2d9",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/27eaa0ce5a172b30f969ddcd0c81b6a2e425d2d9",
            "created_at": "2024-06-23T12:04:50Z",
            "event": "referenced",
            "id": 13255536503,
            "node_id": "REFE_lADOABDGAc6M8UI8zwAAAAMWF293",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13255536503"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "bb8325bca99beb282781e291b2f8fd8e5224acf4",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/bb8325bca99beb282781e291b2f8fd8e5224acf4",
            "created_at": "2024-06-23T12:05:53Z",
            "event": "referenced",
            "id": 13255538663,
            "node_id": "REFE_lADOABDGAc6M8UI8zwAAAAMWF3fn",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13255538663"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "a28667d23eb907ef3712465bf2c98089033eaf0f",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/a28667d23eb907ef3712465bf2c98089033eaf0f",
            "created_at": "2024-06-23T14:11:44Z",
            "event": "referenced",
            "id": 13255799048,
            "node_id": "REFE_lADOABDGAc6M8UI8zwAAAAMWG3EI",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13255799048"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "a1df2cf72210c36967ed67cfeb2e1fd263e9d0f9",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/a1df2cf72210c36967ed67cfeb2e1fd263e9d0f9",
            "created_at": "2024-06-24T19:01:32Z",
            "event": "referenced",
            "id": 13270564402,
            "node_id": "REFE_lADOABDGAc6M8UI8zwAAAAMW_L4y",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13270564402"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "d68ccaf9ca274cfe0df5331006290dfbc8dfc898",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/d68ccaf9ca274cfe0df5331006290dfbc8dfc898",
            "created_at": "2024-06-24T19:02:43Z",
            "event": "referenced",
            "id": 13270575888,
            "node_id": "REFE_lADOABDGAc6M8UI8zwAAAAMW_OsQ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13270575888"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6251/events",
    "html_url": "https://github.com/cython/cython/issues/6251",
    "id": 2364621372,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6251/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6M8UI8",
    "number": 6251,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6251/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6251/timeline",
    "title": "[BUG] Test failrues with Python 3.13.0b2 (Cython 3.0.10)",
    "updated_at": "2024-06-24T12:42:11Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6251",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
        "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
        "followers_url": "https://api.github.com/users/hroncok/followers",
        "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
        "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hroncok",
        "id": 2401856,
        "login": "hroncok",
        "node_id": "MDQ6VXNlcjI0MDE4NTY=",
        "organizations_url": "https://api.github.com/users/hroncok/orgs",
        "received_events_url": "https://api.github.com/users/hroncok/received_events",
        "repos_url": "https://api.github.com/users/hroncok/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hroncok"
    }
}