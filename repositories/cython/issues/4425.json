{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nIt takes a very long time for the C compiler to run on large files like ExprNodes.py and Nodes.py. This is seen in the CI `-all` tests repeatedly timing out (although partly this is because we can't compile them in parallel on Python 2.7)\r\n\r\nOne possible indicator is the warning from gcc:\r\n\r\n> `note: variable tracking size limit exceeded with ‘-fvar-tracking-assignments’, retrying without`\r\n\r\n(although that could potentially be toggled independently or the limit increased)\r\n\r\nObviously it's inevitable that a big Cython file will generate a big C file and that a big C file will take a while to compile, but potentially we could do better.\r\n\r\nThere's a few gcc flags to try to profile compilation time (https://stackoverflow.com/questions/13559818/profiling-the-c-compilation-process), and they suggest that the module init function (where all the module-level user code goes) is the main culprit (unsurprisingly)\r\n\r\n**Environment (please complete the following information):**\r\n - Linux, CI, most obviously in Python 2.7\r\n\r\n**Additional context**\r\n\r\nI tried a couple of approaches to fix the problem.\r\n\r\n1. First I created small sub-scopes within the module init function. https://github.com/da-woods/cython/tree/morelocaltemps. This didn't achieve any speedup or get rid of the warning, but may be worth using some of the change for other reasons (https://github.com/da-woods/cython/commit/c9014165baaf56bf3af0e08971f7e3eda46b428e#commitcomment-57239451)\r\n2. Second, I tried to split each stat at module-level into a separate function (https://github.com/cython/cython/pull/4386). This gave appreciable speed-ups for large modules. However the PR was very intended as a proof of concept with little attention to code quality....\r\n\r\nI think a variant of the second approach is probably worthwhile. My current thought that we shouldn't do it on a \"per-stat\" basis but maybe give each class creation a separate function (that's easy to do for `cdef` classes, slightly harder for regular classes). That would likely give the appropriate granularity and keep things grouped in logical units.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Looking around a bit, [it seems](https://gcc.gnu.org/wiki/Var_Tracking_Assignments) that variable tracking is mostly a debugging feature. Would be nice to locally disable it somehow, but I can't find a way to do that. In any case, the fact that large files break that feature shouldn't trouble us.\r\n\r\nI feel inclined to give a low priority to this issue. Not zero – if we can reduce the C compiler runtime, cool (also in terms of CO2 emissions), but it's only really an issue for large and very large modules, which are rare for simply practical reasons.",
            "created_at": "2021-10-24T09:05:54Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-950288163",
            "id": 950288163,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc44pD8j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/950288163/reactions"
            },
            "updated_at": "2021-10-24T09:05:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/950288163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Looking around a bit, [it seems](https://gcc.gnu.org/wiki/Var_Tracking_Assignments) that variable tracking is mostly a debugging feature. Would be nice to locally disable it somehow, but I can't find a way to do that. In any case, the fact that large files break that feature shouldn't trouble us.\r\n\r\nYeah - I also looked and couldn't find a way to disable it locally\r\n\r\n> \r\n> I feel inclined to give a low priority to this issue. Not zero – if we can reduce the C compiler runtime, cool (also in terms of CO2 emissions), but it's only really an issue for very large modules, which are rare for simply practical reasons.\r\n\r\nI agree - I was only really interested because it's causing the python 2.7 -all jobs to time out. I mainly created the issue because I _wasn't_ planning to do any more on it for now and wanted to record where I'd got to before forgetting it. So low priority!\r\n\r\n",
            "created_at": "2021-10-24T09:58:41Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-950295024",
            "id": 950295024,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc44pFnw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/950295024/reactions"
            },
            "updated_at": "2021-10-24T09:58:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/950295024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To add some more data points, the slowest test files to compile in clang are actually not those that have the most complex module init functions but a large number of types (including closures) and functions:\r\n```\r\ncompile-c   :  1425.27 sec  (1071,  1.331 / run) - slowest: 'c:test_unicode' (28.38s), 'c:test_coroutines_pep492' (27.53s), 'c:test_asyncgen' (14.11s), 'c:memslice' (13.31s), 'c:exttype_total_ordering' (13.10s), 'c:test_grammar' (12.91s), 'c:fused_def' (12.85s), 'c:numpy_test' (12.06s)\r\n```\r\nhttps://github.com/cython/cython/runs/3996856486?check_suite_focus=true\r\n\r\nCan't say why that is. clang seems really slow here in comparison to gcc:\r\n```\r\ncompile-c   :   161.93 sec  (1078,  0.150 / run) - slowest: 'c:numpy_test' (20.83s), 'c:test_unicode' (0.48s), 'c:relaxed_strides' (0.47s), 'c:test_coroutines_pep492' (0.46s), 'c:libc_stdio' (0.42s), 'c:behnel4' (0.40s), 'c:embedded' (0.38s), 'c:a_capi' (0.34s)\r\n```\r\nhttps://github.com/cython/cython/runs/3996853937?check_suite_focus=true\r\n\r\nI checked the CFLAGS and they should say `-O0' in both cases, which should be honoured by both gcc and clang alike as saying \"do not spend time optimising the code\".",
            "created_at": "2021-10-25T13:18:58Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-950921570",
            "id": 950921570,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc44reli",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/950921570/reactions"
            },
            "updated_at": "2021-10-25T13:18:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/950921570",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "On my laptop (just running `test_unicode`) I get\r\n\r\nclang:\r\n```\r\ncompile-c   :    45.93 sec  (   1, 45.928 / run) - slowest: 'c:test_unicode' (45.93s)\r\ncompile-cpp :    42.76 sec  (   1, 42.757 / run) - slowest: 'cpp:test_unicode' (42.76s)\r\n```\r\n\r\ngcc\r\n```\r\ncompile-c   :    57.95 sec  (   1, 57.948 / run) - slowest: 'c:test_unicode' (57.95s)\r\ncompile-cpp :    48.91 sec  (   1, 48.909 / run) - slowest: 'cpp:test_unicode' (48.91s)\r\n```\r\n\r\n(that's with `CLAGS=-Og`, just because `-O0` produces a lot of warnings when I use it).\r\n\r\nI'd say there's `ccache` is probably doing something here?",
            "created_at": "2021-10-25T17:43:05Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-951155889",
            "id": 951155889,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc44sXyx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/951155889/reactions"
            },
            "updated_at": "2021-10-25T17:43:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/951155889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, yeah, right. We don't have ccache on macOS. Probably something we should change.\n",
            "created_at": "2021-10-25T19:48:35Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-951253408",
            "id": 951253408,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc44svmg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/951253408/reactions"
            },
            "updated_at": "2021-10-25T19:48:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/951253408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "BTW, I agree that class creations should give a good granularity for a split. I think that's worth trying out.",
            "created_at": "2021-12-18T16:57:39Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-997230380",
            "id": 997230380,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc47cIcs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/997230380/reactions"
            },
            "updated_at": "2021-12-18T16:57:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/997230380",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "For python-flint I notice a 50% slowdown in compilation time for Cython 3.0.0a11 compared to Cython 0.29.32 (https://github.com/fredrik-johansson/python-flint/pull/29#issuecomment-1351215409).\r\n\r\nIt goes from ~1 minute to ~1.5 minutes for a full `setup.py build_ext --inplace` so it's not a huge problem in python-flint's case but it seems like a regression that I guess could have bigger impact for some other projects.",
            "created_at": "2022-12-14T14:22:59Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1351490288",
            "id": 1351490288,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5Qjhrw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1351490288/reactions"
            },
            "updated_at": "2022-12-14T14:22:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1351490288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@oscarbenjamin do you know if that's in the pyx->c stage or the c-->so stage?",
            "created_at": "2022-12-14T16:55:30Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1351766618",
            "id": 1351766618,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5QklJa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1351766618/reactions"
            },
            "updated_at": "2022-12-14T16:55:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1351766618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @oscarbenjamin do you know if that's in the pyx->c stage or the c-->so stage?\r\n\r\nIs there an easy way to measure that?\r\n\r\nIt looks to me like the `c-->so` stage because I'm only compiling a single extension module and I can see warnings from the C compiler after around 5 seconds i.e.:\r\n```\r\n$ time python setup.py build_ext --inplace\r\n<snip>\r\nCompiling src/flint/pyflint.pyx because it depends on src/flint/functions.pyx.\r\n[1/1] Cythonizing src/flint/pyflint.pyx\r\nrunning build_ext\r\n\r\n## ----------- takes 5 seconds to get here\r\n\r\nbuilding 'flint._flint' extension\r\nINFO: C compiler: x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC\r\n\r\nINFO: compile options: '-I/usr/local/include -I/home/oscar/current/sympy/python-flint/.local/venv/include -I/usr/local/include/flint -I/home/oscar/current/sympy/python-flint/.local/venv/include/flint -I/home/oscar/current/sympy/python-flint/.local/venv/include -I/usr/include/python3.8 -c'\r\nINFO: x86_64-linux-gnu-gcc: src/flint/pyflint.c\r\nsrc/flint/pyflint.c: In function ‘__pyx_pf_5flint_6_flint_14dirichlet_char_4__init__’:\r\nsrc/flint/pyflint.c:194837:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n       if (((__pyx_t_5 > __pyx_t_6) != 0)) {\r\n                       ^\r\nsrc/flint/pyflint.c: At top level:\r\nsrc/flint/pyflint.c:29053:18: warning: ‘__pyx_f_5flint_6_flint_any_as_fmpz_mpoly’ defined but not used [-Wunused-function]\r\n static PyObject *__pyx_f_5flint_6_flint_any_as_fmpz_mpoly(CYTHON_UNUSED PyObject *__pyx_v_x) {\r\n                  ^\r\nINFO: x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -DNDEBUG -g -fwrapv -O2 -Wall build/temp.linux-x86_64-3.8/src/flint/pyflint.o -L/home/oscar/current/sympy/python-flint/.local/venv/lib -L/usr/local/lib -larb -lflint -o /home/oscar/current/sympy/python-flint/src/flint/_flint.cpython-38-x86_64-linux-gnu.so\r\n\r\n# ----------- takes 1 minute to get here:\r\n\r\nreal\t0m54.163s\r\nuser\t0m53.124s\r\nsys\t0m0.828s\r\n```\r\nThat's with Cython 0.29.32 and it looks like about 5 seconds cythonising and then 50 seconds in the C compiler.\r\n\r\nWith Cython 3.0.0a11 it's more like about 5 seconds cythonising and then 70 seconds in the C compiler:\r\n```\r\nreal\t1m26.277s\r\nuser\t1m24.480s\r\nsys\t0m1.568s\r\n```\r\nThe C file generated by 3.0.0a11 is about 30% bigger in terms of lines (293186 lines vs 224736) which matches the increased compilation time.",
            "created_at": "2022-12-14T18:59:34Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1351989413",
            "id": 1351989413,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5Qlbil",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1351989413/reactions"
            },
            "updated_at": "2022-12-14T18:59:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1351989413",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks @oscarbenjamin - you're rough guess at where the cythonization ends and the c compilation begins is probably right. Cython on it's own can be run with `cython <source_file_name>` and that might be the easiest way to measure Cython vs C.\r\n\r\nA few notes:\r\n* There was a bit of a slowdown in building the lexer(?) due to unicode support - it just vastly increased the size of a certain look-up table we had to build. See https://github.com/cython/cython/issues/3646. We think we clawed most of that back though by changing what was compiled.\r\n* A big chunk of the extra file size is probably limited API support. I wouldn't expect that to impact compilation time much - the preprocessor should probably be able to eliminate large chunks of code pretty quickly.\r\n* Personally I'd guess the biggest difference might be because we now default to `binding=True` (which generates a big chunk more C code, in exchange for more introspectability). That might be a useful thing to check (if you have time to test it).\r\n\r\nI have a few ideas about how to speed this up that I'd like to try. I wouldn't expect them to make 3.0 though - they're potentially fairly big changes.",
            "created_at": "2022-12-14T19:31:07Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1352040785",
            "id": 1352040785,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5QloFR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1352040785/reactions"
            },
            "updated_at": "2022-12-14T19:31:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1352040785",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "It takes about 10 seconds to cythonise:\r\n```console\r\n# cython 3.0.0a11\r\n$ time cython -2 --module-name flint._flint flint/pyflint.pyx\r\nwarning: flint/_flint.pxd:18:0: The 'DEF' statement is deprecated and will be removed in a future Cython version. Consider using global variables, constants, and in-place literals instead. See https://github.com/cython/cython/issues/4310\r\n<snip more warnings>\r\nreal\t0m10.466s\r\nuser\t0m10.356s\r\nsys\t0m0.104s\r\n```\r\nThat part is only slightly faster with 0.29:\r\n```console\r\n# cython 0.29.32\r\n$ time cython -2 --module-name flint._flint flint/pyflint.pyx\r\n\r\nreal\t0m9.191s\r\nuser\t0m9.076s\r\nsys\t0m0.112s\r\n```",
            "created_at": "2022-12-14T20:06:03Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1352089668",
            "id": 1352089668,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5Ql0BE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1352089668/reactions"
            },
            "updated_at": "2022-12-14T20:06:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1352089668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One more thing to try if you have time - can you try the full compilation with the `binding` compiler directive set to `True` and then `False` (I think you can add it to https://github.com/fredrik-johansson/python-flint/blob/d6e239d6bf4871a4d90f389177b805fec5368e98/setup.py#L48).\r\n\r\nIf you don't have time I can have a look myself in a few days, but it looks like I'd need to work out a few dependencies first, which I'm trying to avoid.",
            "created_at": "2022-12-14T21:56:05Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1352261895",
            "id": 1352261895,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5QmeEH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1352261895/reactions"
            },
            "updated_at": "2022-12-14T21:56:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1352261895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> One more thing to try if you have time - can you try the full compilation with the binding compiler directive set to True and then False\r\n\r\nThat makes a big difference actually. With Cython 3.0.0a11 and `binding:True` I get a 3 minute build. With `binding:False` it's a 1.5 minute build so that's a 2x speedup.\r\n\r\nWhat exactly does the binding parameter do?\r\n\r\n(In the other timings reported below I didn't set the binding parameter at all which I guess means that it defaults to True)\r\n\r\n> If you don't have time I can have a look myself in a few days, but it looks like I'd need to work out a few dependencies first, which I'm trying to avoid.\r\n\r\nIt's not as bad as it looks because there is a script to download and build the dependencies that takes about 15 minutes so the full repro is\r\n```bash\r\ngit clone https://github.com/fredrik-johansson/python-flint.git\r\ncd python-flint/\r\nsource bin/activate \r\nbin/build_dependencies_unix.sh\r\n# Need numpy and cython at this point\r\ntime python setup.py build_ext --inplace\r\n```\r\n(I'm assuming that you're on a Unixy system with compilers etc. Don't try this at home on Windows, although the problem is worse there for mingw64.)\r\n\r\nThe dependency build is faster if you comment out this part:\r\nhttps://github.com/fredrik-johansson/python-flint/blob/d6e239d6bf4871a4d90f389177b805fec5368e98/bin/build_dependencies_unix.sh#L183-L185\r\n\r\nHaving just repeated the repro steps above I found that it actually took 3 minutes rather than the 1.5 minutes I previously reported:\r\n```console\r\n$ time python setup.py build_ext --inplace\r\n...\r\nreal\t3m10.113s\r\nuser\t3m8.504s\r\nsys\t0m1.468s\r\n```\r\nI guess the difference is because some parts of the compilation are maybe being cached which makes it a bit difficult to reason about timings. I've just tried repeating this a couple of times with cython 3.0.0a11 and 0.29.32:\r\n```\r\ntouch src/flint/*.pyx\r\ntime python setup.py build_ext --inplace\r\n```\r\nI'm now consistently getting ~3 minutes for 3.0.0a11 and ~1 minute for 0.29.32 so a 3x slowdown. I'm not sure why this is different from previous timings.\r\n\r\nI remember now that the reason I noticed a slowdown with cython 3.0.0a11 in the first place was because I was trying to make a coverage-enabled build which is slower in both cases. With cython 0.29:\r\n```console\r\n$ time PYTHON_FLINT_COVERAGE=true python setup.py build_ext --inplace\r\n...\r\nreal\t1m36.786s\r\nuser\t1m34.848s\r\nsys\t0m1.072s\r\n```\r\nAnd with 3.0.0a11 (actually master):\r\n```console\r\n$ time PYTHON_FLINT_COVERAGE=true python setup.py build_ext --inplace\r\n...\r\nreal\t3m50.796s\r\nuser\t3m48.324s\r\nsys\t0m1.460s\r\n```",
            "created_at": "2022-12-14T22:59:22Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1352331162",
            "id": 1352331162,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5Qmu-a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1352331162/reactions"
            },
            "updated_at": "2022-12-14T22:59:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1352331162",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What exactly does the binding parameter do?\r\n\r\nIt wraps functions in a CyFunction object, which adds a whole load of introspectable attributes. For example things like `__annotations__`, `__defaults__`. It makes them look a lot more like Python functions.\r\n\r\nIt's expected to slow things down because it does generate a lot more code to initialize these at start up. So it isn't worrying that it has an effect, although obviously it would be good if we could minimise the effect.\r\n\r\n> (In the other timings reported below I didn't set the binding parameter at all which I guess means that it defaults to True)\r\n\r\nIt defaults to True on Cython 3 and False in 0.29.x. so it's likely one of the more significant differences.\r\n\r\n> I guess the difference is because some parts of the compilation are maybe being cached which makes it a bit difficult to reason about timings. \r\n\r\nPassing `--force` to setup.py should eliminate most of the caching. No need to rerun everything though.\r\n\r\nThanks",
            "created_at": "2022-12-15T07:12:37Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1352647567",
            "id": 1352647567,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5Qn8OP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1352647567/reactions"
            },
            "updated_at": "2022-12-15T07:12:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1352647567",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It might also be interesting to see the differences in symbol sizes that the C compiler generates from 0.29.x and 3.0 C sources. You can list those for a given extension module with\r\n`nm --print-size --size-sort --radix=d  some_module.*so`\r\nThe largest single symbol is usually the module init function (`__pyx_pymod_exec_…`). We already make gcc optimise it for size rather than speed, because it's normally only executed once on module import. It would be interesting the see the size differences of the largest symbols for a real project.",
            "created_at": "2022-12-15T10:02:31Z",
            "html_url": "https://github.com/cython/cython/issues/4425#issuecomment-1352822578",
            "id": 1352822578,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4425",
            "node_id": "IC_kwDOABDGAc5Qom8y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1352822578/reactions"
            },
            "updated_at": "2022-12-15T10:02:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1352822578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 15,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4425/comments",
    "created_at": "2021-10-23T13:52:15Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-23T13:54:05Z",
            "event": "labeled",
            "id": 5508301321,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "LE_lADOABDGAc49pDfezwAAAAFIUgIJ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5508301321"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-12-14T16:55:30Z",
            "event": "mentioned",
            "id": 8039335260,
            "node_id": "MEE_lADOABDGAc49pDfezwAAAAHfLoVc",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8039335260"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-12-14T16:55:30Z",
            "event": "subscribed",
            "id": 8039335268,
            "node_id": "SE_lADOABDGAc49pDfezwAAAAHfLoVk",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8039335268"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-12-14T18:59:35Z",
            "event": "mentioned",
            "id": 8040345993,
            "node_id": "MEE_lADOABDGAc49pDfezwAAAAHfPfGJ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8040345993"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-12-14T18:59:35Z",
            "event": "subscribed",
            "id": 8040346017,
            "node_id": "SE_lADOABDGAc49pDfezwAAAAHfPfGh",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8040346017"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-12-14T19:31:08Z",
            "event": "mentioned",
            "id": 8040565926,
            "node_id": "MEE_lADOABDGAc49pDfezwAAAAHfQUym",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8040565926"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1159732?v=4",
                "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}",
                "followers_url": "https://api.github.com/users/oscarbenjamin/followers",
                "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}",
                "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oscarbenjamin",
                "id": 1159732,
                "login": "oscarbenjamin",
                "node_id": "MDQ6VXNlcjExNTk3MzI=",
                "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs",
                "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events",
                "repos_url": "https://api.github.com/users/oscarbenjamin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oscarbenjamin"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-12-14T19:31:08Z",
            "event": "subscribed",
            "id": 8040565935,
            "node_id": "SE_lADOABDGAc49pDfezwAAAAHfQUyv",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8040565935"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4425/events",
    "html_url": "https://github.com/cython/cython/issues/4425",
    "id": 1034172382,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4425/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc49pDfe",
    "number": 4425,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4425/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4425/timeline",
    "title": "[BUG] Large files compile very slowly in the C compiler",
    "updated_at": "2022-12-15T10:02:32Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4425",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}