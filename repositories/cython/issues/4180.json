{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\nCurrently using const in templated cdef statement works. However, the parser complains when const is used within a templated expression. Related issue and PR: #3885, #3886\r\n\r\n**To Reproduce**\r\nCode to reproduce the behaviour:\r\n```cython\r\n# Mock up templated class V\r\ncdef cppclass V[T]:\r\n    V()\r\ncdef V[const int] v\r\nv = V[const int]()\r\n```\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncdef cppclass V[T]:\r\n    V()\r\ncdef V[const int] v\r\nv = V[const int]()\r\n           ^\r\n------------------------------------------------------------\r\n\r\n/raid/wangm/dev/rapids/.cache/ipython/cython/_cython_magic_57140422ec6affad49b6866a3bff4f72.pyx:4:12: Expected ']', found 'int'\r\n```\r\n\r\n**Expected behavior**\r\nThis should compile into \r\n```c++\r\n// Some mocked up templated class V\r\nV<const int> v;\r\nv = V<const int>();\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Linux 4.15.0-76-generic\r\n - Python version 3.7.10\r\n - Cython version 0.29.23\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@da-woods @scoder I've done a bit of tracing here and have narrowed down the problem, but I could use some help determining the appropriate fix. The error is coming from https://github.com/cython/cython/blob/master/Cython/Compiler/Parsing.py#L619, which is happening because it's parsing the `const` part of the statement as something that should stand on its own within an indexing statement `[...]`. The `p_subscript_list` call 13 lines above that is returning `const` as the only token, whereas in this case we need multiple tokens here. However, I'm not sure where the right place to fix this is. `p_subscript_list` and the subsequent `p_subscript`/`p_slice_element` calls seem pretty specifically tailored to Python slicing syntax. Does it make sense to have those be context-aware enough to know when they're inside a C++ template declaration and to allow spaces within the \"slice\" in order to support multi-token declarations?",
            "created_at": "2023-11-09T18:40:22Z",
            "html_url": "https://github.com/cython/cython/issues/4180#issuecomment-1804365430",
            "id": 1804365430,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4180",
            "node_id": "IC_kwDOABDGAc5rjG52",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1804365430/reactions"
            },
            "updated_at": "2023-11-09T18:40:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1804365430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Does it make sense to have those be context-aware enough to know when they're inside a C++ template declaration and to allow spaces within the \"slice\" in order to support multi-token declarations?\r\n\r\nI don't realistically think they can be context-aware enough.\r\n\r\nTaking the example above:\r\n\r\n```\r\nv = V[const int]()\r\n```\r\n\r\nthis line is treated by the parser as an isolated expression, and so it really can't have any information that distinguishes it from indexing a Python variable then calling the result. The type of `V` won't be known until the type-analysis stage significantly later. \r\n\r\nI think realistically we'd have to significantly loosen what the parser accepts (probably only in Cython mode and not in pure-Python mode), and then reject invalid uses later, probably in analyse_expressions. I suspect rejecting invalid uses would actually already happen so probably doesn't need doing (but might need testing).",
            "created_at": "2023-11-09T18:47:46Z",
            "html_url": "https://github.com/cython/cython/issues/4180#issuecomment-1804385128",
            "id": 1804385128,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4180",
            "node_id": "IC_kwDOABDGAc5rjLto",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1804385128/reactions"
            },
            "updated_at": "2023-11-09T18:48:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1804385128",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That makes sense, I had some misgivings on that front too. I'm not sure I see how the relaxation you envision would work, though. Would it be a matter of changing the `s.expect` call I linked to be conditional in a way that allows for some alternatives? Or are you envisioning a completely different solution elsewhere in the parser since as you say this function may not be context-aware enough? If so, I suspect I don't know enough about Cython's internals myself to address this and would probably need substantial extra guidance to put together a solution.",
            "created_at": "2023-11-09T22:05:21Z",
            "html_url": "https://github.com/cython/cython/issues/4180#issuecomment-1804755479",
            "id": 1804755479,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4180",
            "node_id": "IC_kwDOABDGAc5rkmIX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1804755479/reactions"
            },
            "updated_at": "2023-11-09T22:05:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1804755479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There's (at least) a couple of options:\r\n1. put it in `p_subscript`. That involves replacing `p_test` (which is essentially \"a Python expression\") with something that handles. That'd be the \"LL\"-style solution that Python was based around in the past. The idea here is that by the time you get to your `expect(']')` you really do need to have parsed the full subscript list so that's definitely too high up to parse it.\r\n2. Attempt a more PEG-style solution (i.e. how the more modern Python parser work). In this version you first try parsing the index with a subscript list. If that fails you rewind, and try parsing a \"type list\" instead. For this you use `with tentatively_scan` which automatically rewinds if it encounters and error, so you can try the next possibility. In this case I'd put the `with tentatively_scan` in `p_index` I think.\r\n\r\nThe advantage of option 2 is that it lets you leave the existing index parsing code quite clean (i.e. just Python code), but add a special-case fallback that it tries after.\r\n\r\nThe disadvantages are that rewinding isn't that cheap, and you can end up with \"catastrophic backtracking\" type situations if you have to reparse the same code multiple times to try different options. It also isn't the style that most of the Cython parser is written it, but it's something I've been using the cover the newer syntax which uses the PEG parser in CPython.\r\n\r\nIf I were doing it I'd probably use option 2. But that doesn't mean it's the right option :)",
            "created_at": "2023-11-10T18:33:14Z",
            "html_url": "https://github.com/cython/cython/issues/4180#issuecomment-1806232662",
            "id": 1806232662,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4180",
            "node_id": "IC_kwDOABDGAc5rqOxW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1806232662/reactions"
            },
            "updated_at": "2023-11-10T18:33:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1806232662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4180/comments",
    "created_at": "2021-05-19T22:50:13Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-11-09T18:40:23Z",
            "event": "mentioned",
            "id": 10916760593,
            "node_id": "MEE_lADOABDGAc41aDGDzwAAAAKKsIwR",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10916760593"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-11-09T18:40:23Z",
            "event": "subscribed",
            "id": 10916760598,
            "node_id": "SE_lADOABDGAc41aDGDzwAAAAKKsIwW",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10916760598"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-11-09T18:40:23Z",
            "event": "mentioned",
            "id": 10916760609,
            "node_id": "MEE_lADOABDGAc41aDGDzwAAAAKKsIwh",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10916760609"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-11-09T18:40:23Z",
            "event": "subscribed",
            "id": 10916760613,
            "node_id": "SE_lADOABDGAc41aDGDzwAAAAKKsIwl",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10916760613"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4180/events",
    "html_url": "https://github.com/cython/cython/issues/4180",
    "id": 896020867,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4180/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4OTYwMjA4Njc=",
    "number": 4180,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4180/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4180/timeline",
    "title": "[BUG] Using const in templated expression",
    "updated_at": "2023-11-10T18:33:14Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4180",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13521008?v=4",
        "events_url": "https://api.github.com/users/isVoid/events{/privacy}",
        "followers_url": "https://api.github.com/users/isVoid/followers",
        "following_url": "https://api.github.com/users/isVoid/following{/other_user}",
        "gists_url": "https://api.github.com/users/isVoid/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/isVoid",
        "id": 13521008,
        "login": "isVoid",
        "node_id": "MDQ6VXNlcjEzNTIxMDA4",
        "organizations_url": "https://api.github.com/users/isVoid/orgs",
        "received_events_url": "https://api.github.com/users/isVoid/received_events",
        "repos_url": "https://api.github.com/users/isVoid/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/isVoid/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/isVoid/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/isVoid"
    }
}