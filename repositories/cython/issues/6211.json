{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nIf we try to define a struct that has a field that is an array of another struct, I get an `AssertionError` when it tries to figure out how to infer the type information.\n\n### Code to reproduce the behaviour:\n\n```cython\r\nimport numpy as np\r\n\r\ncdef struct Inner:\r\n    int inner_field\r\n\r\ncdef Inner inner_tmp\r\nInner_DTYPE = np.asarray(<Inner[:1]>(&inner_tmp)).dtype\r\n\r\ncdef struct Outer:\r\n    Inner[3] outer_field\r\n\r\ncdef Outer outer_tmp\r\nOuter_DTYPE = np.asarray(<Outer[:1]>(&outer_tmp)).dtype\r\n```\n\n### Expected behaviour\n\ncythonizing would work and it would be able to write the appropriate C code\n\n### OS\n\nmacOS\n\n### Python version\n\n3.10.11\n\n### Cython version\n\n3.0.9\n\n### Additional context\n\nI believe it is not infering the \"depth\" of the nesting properly, as it returns a value of 2 upon calling `dtype.struct_nesting_depth()`, where I _think_ it should be 3 (1 for the `Outer` struct, 1 for the `Inner` struct, and 1 for the `inner_field` on `Inner`).\r\n\r\nIf I force it to return 3, it does not fail to write the C code, but I get run time errors because the format string for the buffer (the ones from [PEP 3118](https://peps.python.org/pep-3118/)) is wrong when I try to make a numpy array of the respective dtype (it doesnt define `outer_field` on `Outer` as having a length, like `(3)T{...}:outer_field:`, but just as `T{...}:outer_field:`, so I assume there is something else I would have to force override like I did the nesting depth",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "`dtype.struct_nesting_depth()` in https://github.com/cython/cython/blob/master/Cython/Compiler/Buffer.py#L583 returns 2. \r\n\r\nThis is because:\r\n1. The 1st layer takes us to https://github.com/cython/cython/blob/master/Cython/Compiler/PyrexTypes.py#L3931-L3934\r\n2. `self.scope.var_entries` is a list of length 1, which gives us the \"var entry\" that has type `Inner [3]` (or with as cython generates, something like `<CArrayType 3 <CStructOrUnionType Inner __{{some_prefix_here}}_Inner>>`)\r\n3. the call of `.struct_nesting_depth()` on the above returns 1 because it takes us to https://github.com/cython/cython/blob/master/Cython/Compiler/PyrexTypes.py#L340-L344 (I assume because it is an array?), but I believe it should return 2, by taking us back to https://github.com/cython/cython/blob/master/Cython/Compiler/PyrexTypes.py#L3931-L3934 and then to https://github.com/cython/cython/blob/master/Cython/Compiler/PyrexTypes.py#L340-L344",
            "created_at": "2024-05-24T01:40:48Z",
            "html_url": "https://github.com/cython/cython/issues/6211#issuecomment-2128329999",
            "id": 2128329999,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6211",
            "node_id": "IC_kwDOABDGAc5-270P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2128329999/reactions"
            },
            "updated_at": "2024-05-24T01:40:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2128329999",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36887638?v=4",
                "events_url": "https://api.github.com/users/hsorsky/events{/privacy}",
                "followers_url": "https://api.github.com/users/hsorsky/followers",
                "following_url": "https://api.github.com/users/hsorsky/following{/other_user}",
                "gists_url": "https://api.github.com/users/hsorsky/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hsorsky",
                "id": 36887638,
                "login": "hsorsky",
                "node_id": "MDQ6VXNlcjM2ODg3NjM4",
                "organizations_url": "https://api.github.com/users/hsorsky/orgs",
                "received_events_url": "https://api.github.com/users/hsorsky/received_events",
                "repos_url": "https://api.github.com/users/hsorsky/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hsorsky/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hsorsky/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hsorsky"
            }
        },
        {
            "author_association": "NONE",
            "body": "If I override so that we get depth 3 instead of 2, when I then try to import `Inner_DTYPE` and `Outer_DTYPE` I get: \r\n```\r\nRuntimeError: Item size 12 for PEP 3118 buffer format string T{T{i:inner_field:}:outer_field:} does not match the dtype V item size 4.\r\n```\r\n\r\nI believe this format string should be `T{(3)T{i:inner_field:}:outer_field:}`~, but I'm not sure what is generating the format string as is found in the error, so I'm not sure how I can dig any further~\r\n\r\nthis is coming from numpy https://github.com/numpy/numpy/blob/b745f6a5e1e24b989106b76f7c78c712c1f199f3/numpy/_core/src/multiarray/ctors.c#L1320-L1325 ~but I am struggling to dig further and discern how numpy is generating the format string~ \r\n\r\nwhich I can't be sure but after some digging I assume comes after https://github.com/numpy/numpy/blob/b745f6a5e1e24b989106b76f7c78c712c1f199f3/numpy/_core/src/multiarray/buffer.c#L182-L193 is called\r\n\r\n---\r\n\r\nafter more digging digging, I now wonder if it is even anything to do with cython or numpy at all, but rather the python C-API itself? see https://docs.python.org/3/c-api/buffer.html#c.Py_buffer \r\n\r\nis the C generated by cython defining a struct that python \"correctly\" (according to the actually written C code) infers to have format string `T{T{i:inner_field:}:outer_field:}`? or is cython generating C code that _should_ have format string `T{(3)T{i:inner_field:}:outer_field:}` but python (or something else?) is inferring it wrong? ü§∑‚Äç‚ôÇÔ∏è üôÉ ",
            "created_at": "2024-05-24T01:58:45Z",
            "html_url": "https://github.com/cython/cython/issues/6211#issuecomment-2128348637",
            "id": 2128348637,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6211",
            "node_id": "IC_kwDOABDGAc5-3AXd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2128348637/reactions"
            },
            "updated_at": "2024-05-24T13:40:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2128348637",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36887638?v=4",
                "events_url": "https://api.github.com/users/hsorsky/events{/privacy}",
                "followers_url": "https://api.github.com/users/hsorsky/followers",
                "following_url": "https://api.github.com/users/hsorsky/following{/other_user}",
                "gists_url": "https://api.github.com/users/hsorsky/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hsorsky",
                "id": 36887638,
                "login": "hsorsky",
                "node_id": "MDQ6VXNlcjM2ODg3NjM4",
                "organizations_url": "https://api.github.com/users/hsorsky/orgs",
                "received_events_url": "https://api.github.com/users/hsorsky/received_events",
                "repos_url": "https://api.github.com/users/hsorsky/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hsorsky/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hsorsky/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hsorsky"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6211/comments",
    "created_at": "2024-05-22T23:29:46Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-23T03:53:15Z",
            "event": "subscribed",
            "id": 12903002805,
            "node_id": "SE_lADOABDGAc6JyR6xzwAAAAMBFDK1",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12903002805"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6211/events",
    "html_url": "https://github.com/cython/cython/issues/6211",
    "id": 2311659185,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6211/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6JyR6x",
    "number": 6211,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6211/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6211/timeline",
    "title": "[BUG] cython to C translation error on array of structs as struct field",
    "updated_at": "2024-05-24T13:40:58Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6211",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/36887638?v=4",
        "events_url": "https://api.github.com/users/hsorsky/events{/privacy}",
        "followers_url": "https://api.github.com/users/hsorsky/followers",
        "following_url": "https://api.github.com/users/hsorsky/following{/other_user}",
        "gists_url": "https://api.github.com/users/hsorsky/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hsorsky",
        "id": 36887638,
        "login": "hsorsky",
        "node_id": "MDQ6VXNlcjM2ODg3NjM4",
        "organizations_url": "https://api.github.com/users/hsorsky/orgs",
        "received_events_url": "https://api.github.com/users/hsorsky/received_events",
        "repos_url": "https://api.github.com/users/hsorsky/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hsorsky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hsorsky/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hsorsky"
    }
}