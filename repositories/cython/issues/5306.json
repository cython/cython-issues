{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nWhen installing the following package: https://github.com/gevent/gevent/tree/1.5.0\r\n\r\nI noticed that cython runs depending on the _mtime of the installation of cython_, which is frankly absurd. It looks like this:\r\n\r\n```\r\nCompiling src/gevent/resolver/cares.pyx because it depends on /opt/linux-ubuntu20.04-x86_64/gcc-11.1.0/py-cython-0.29.32-wistmswtv7bm55wpadctrr3eqb7jnona/lib/python3.10/site-packages/Cython/Includes/libc/string.pxd.\r\n```\r\n\r\nAnd I noticed this issue because we're setting mtime to 0 in binary tarballs, so that those tarballs are bitwise reproducible -- the mtime of cython became less than the mtime of the *sources* of gevent, causing cython *not to run*. \r\n\r\nThis is pretty much the equivalent of setting a makefile target on a system library, like this: `target: source.c /usr/lib/libdependency.so`, which is a bad idea.\r\n\r\nIs this something that can be fixed in cython?\r\n\r\nThanks\n\n### Code to reproduce the behaviour:\n\n_No response_\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nLinux\n\n### Python version\n\n3.10.8\n\n### Cython version\n\n0.29.33\n\n### Additional context\n\n_No response_",
    "closed_at": "2023-03-13T09:38:17Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> This is pretty much the equivalent of setting a makefile target on a system library, like this: `target: source.c /usr/lib/libdependency.so`, which is a bad idea.\r\n\r\nIt's rather like the C example `target: source.c /usr/include/string.h` which isn't quite that unreasonable. If you update your libc or your C compiler, then recompilation appears sensible to me. (I'm not saying that it has to be this way, but you might end up with random incompatibilities if you regenerate some C files based on the Cython version and not others, so it seems better to rebuild everything that depends on the updated C declarations that are part of Cython.)\r\n\r\n\r\n> And I noticed this issue because we're setting mtime to 0 in binary tarballs, so that those tarballs are bitwise reproducible -- the mtime of cython became less than the mtime of the _sources_ of gevent, causing cython _not to run_.\r\n\r\nIf Cython does not run at all, then it means that the target C source file already exists. Why do you need Cython if that file has already been generated? If you really want to run Cython, then either a) pass the option `-f` or `force=True`, b)  do not include the generated C code in the source distribution to ensure a clean build, or c) use the `cython` command line tool instead of the `cythonize` tool.\r\n\r\nI don't really see anything wrong here.",
            "created_at": "2023-03-12T14:28:29Z",
            "html_url": "https://github.com/cython/cython/issues/5306#issuecomment-1465214003",
            "id": 1465214003,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5306",
            "node_id": "IC_kwDOABDGAc5XVWQz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1465214003/reactions"
            },
            "updated_at": "2023-03-12T14:28:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1465214003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "I disagree, even for local development, but that's besides the point. It's about releases and package management.\r\n\r\nTarball releases include source file mtimes, and they're typically restored when extracted. Nobody expects those files then to be regenerated depending on the mtime of a file _not in the tarball_. A package has a release tarball in 2020 with generated C sources included, you happen to have a Cython in your pythonpath, and now setup.py runs cythonize and regenerates those sources... That's obviously not the intention when folks create that release tarball.\r\n\r\n> Why do you need Cython if that file has already been generated?\r\n\r\nIn the particular case it was a combination of two bugs: (1) the source files were generated with an old and buggy version of Cython, it did not work with Python 3.10, due to Cython relying too much on cpython internals. We never run into an issue though, because (2) cythonize erroneously regenerated C sources, because the release tarball mtimes were recorded as 2020 or w/e, and cython was installed as a build dep with recent mtime.\r\n\r\nNow, in this case the very odd behavior of Cython was \"helpful\" in fixing a buggy release, but in general the exact opposite can happen too, where old and buggy Cython erroneously runs and produces a broken build.\r\n\r\nLong story short: the Cython behavior right now is very unexpected, and totally unique to Cython; autotools packages don't do that for example. Please don't make build behavior depend on `mtime` of build deps (which isn't reliable across different systems anyways, only useful across files from the same release tarball generated on the same machine). Fixing this would help improve deterministic builds.",
            "created_at": "2023-03-12T21:12:28Z",
            "html_url": "https://github.com/cython/cython/issues/5306#issuecomment-1465301041",
            "id": 1465301041,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5306",
            "node_id": "IC_kwDOABDGAc5XVrgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1465301041/reactions"
            },
            "updated_at": "2023-03-12T21:12:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1465301041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/194764?v=4",
                "events_url": "https://api.github.com/users/haampie/events{/privacy}",
                "followers_url": "https://api.github.com/users/haampie/followers",
                "following_url": "https://api.github.com/users/haampie/following{/other_user}",
                "gists_url": "https://api.github.com/users/haampie/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/haampie",
                "id": 194764,
                "login": "haampie",
                "node_id": "MDQ6VXNlcjE5NDc2NA==",
                "organizations_url": "https://api.github.com/users/haampie/orgs",
                "received_events_url": "https://api.github.com/users/haampie/received_events",
                "repos_url": "https://api.github.com/users/haampie/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/haampie/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/haampie/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/haampie"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> cythonize erroneously regenerated C sources, because the release tarball mtimes were recorded as 2020 or w/e\r\n\r\nOk, but that makes it sound like a) you did not pin the exact Cython version and thus risked not getting reproducible results, and b) actually benefited from that. So, what exactly are you complaining about? \\*wink\\*\r\n\r\n> Tarball releases include source file mtimes, and they're typically restored when extracted. Nobody expects those files then to be regenerated depending on the mtime of a file _not in the tarball_.\r\n\r\nIn any case, you seemed to be asking for reproducible builds. To that end, you need to pin the exact Cython release that you want to use for the build, and then don't have a problem, because Cython also (aims to) generate reproducible C files. Use the same version(s), get the same result. No problem here.\r\n\r\nNote that you also need to pin the NumPy version, for example, if you make use of the NumPy-Cython interface declarations (`cimport numpy`). And the version of whatever compile time dependencies you are using (basically, all non-local `cimport`s). Basically, all compile time dependencies can have an impact on recompilation. And that is intended. When calling `cythonize()`, you are asking Cython to translate your sources into C/C++ code files. It can (sometimes) avoid doing that if it finds out that the target file is already there and its source file(s) and compile time dependencies did not change. But if they actually *did* change, then it cannot just sit there and do nothing. It has to do what you asked it to do.\r\n\r\nWhat many users do instead, BTW, is to pin the Cython release series, and often do the same for the compile time dependencies. Thus, you benefit from improvements in the point releases (such as support for newer CPython versions), while keeping the risk of breakage low. But that's a user side decision and there are arguments for and against series- vs. exact version pinning.\r\n\r\nI'm inclined to close this issue since I fail to see what we should improve. Excluding specifically the declarations that Cython ships doesn't feel right (although changes there should also get caught by an additional Cython version check in the target file that we do now, in Cython 3.0, I think), and excluding *all* compile time dependencies from the up-to-date check seems outright wrong. After all, the up-to-date check is mostly meant to avoid unnecessary costly recompilations, not to prevent changes in the target file.",
            "created_at": "2023-03-13T09:25:06Z",
            "html_url": "https://github.com/cython/cython/issues/5306#issuecomment-1465785832",
            "id": 1465785832,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5306",
            "node_id": "IC_kwDOABDGAc5XXh3o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1465785832/reactions"
            },
            "updated_at": "2023-03-13T09:25:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1465785832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> So, what exactly are you complaining about? *wink*\r\n\r\nAs I said, the reverse is possible: `setup.py` of a release tarball with generated C sources is run, a different cython *happens to be `import`able* (system install or whatever), and mtimes of completely incomparable things cause cython to regenerate C sources.\r\n\r\nI don't know how to make clear to you that `mtime` between files of a release tarball and `mtime` of files of an installed packages are not comparable...\r\n\r\n> But if they actually did change, then it cannot just sit there and do nothing. It has to do what you asked it to do.\r\n\r\nFiles in a release tarball are frozen, fixed. They shouldn't be regenerated based on whether you've installed cython before or after a random day in 2020. This is what folks rely on when releasing tarballs.\r\n\r\n> and excluding all compile time dependencies from the up-to-date check seems outright wrong\r\n\r\nThe way I see it it's like `autotools`: there's no need to add `autoconf` / `automake` / `libtool` build deps when the release tarball contains the relevant generated configure scripts. However, if the mtimes of those files _in the release tarball_ are messed up, running `make` causes autoreconf etc to run (and will simply fail if build deps are missing).\r\n\r\nWhat *never* happens is: `make` realizes that your system `automake`'s `mtime` is newer than some file *in the release tarball*, which would happen of course 99.9% of the time, and suddenly requires a full reconfigure. That's what's cython does and it's simply wrong.",
            "created_at": "2023-03-13T10:05:10Z",
            "html_url": "https://github.com/cython/cython/issues/5306#issuecomment-1465845514",
            "id": 1465845514,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5306",
            "node_id": "IC_kwDOABDGAc5XXwcK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1465845514/reactions"
            },
            "updated_at": "2023-03-13T10:06:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1465845514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/194764?v=4",
                "events_url": "https://api.github.com/users/haampie/events{/privacy}",
                "followers_url": "https://api.github.com/users/haampie/followers",
                "following_url": "https://api.github.com/users/haampie/following{/other_user}",
                "gists_url": "https://api.github.com/users/haampie/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/haampie",
                "id": 194764,
                "login": "haampie",
                "node_id": "MDQ6VXNlcjE5NDc2NA==",
                "organizations_url": "https://api.github.com/users/haampie/orgs",
                "received_events_url": "https://api.github.com/users/haampie/received_events",
                "repos_url": "https://api.github.com/users/haampie/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/haampie/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/haampie/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/haampie"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm inclined to agree with this issue, on the basis that it seems consistent with how system headers are treated in C. And that I'm not really sure we can reason too much about the validity of the timestamps of files outside the current project.\r\n\r\nWith that said, I also have little interest in trying to fix it, or in working out what exactly should be considered a system headers from a Cython point of view",
            "created_at": "2023-03-13T21:46:41Z",
            "html_url": "https://github.com/cython/cython/issues/5306#issuecomment-1467009489",
            "id": 1467009489,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5306",
            "node_id": "IC_kwDOABDGAc5XcMnR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1467009489/reactions"
            },
            "updated_at": "2023-03-13T21:46:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1467009489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "For me it's not a high priority issue either, it's just that it bit me and it took a while to figure out what changed in our builds between one day and the next...",
            "created_at": "2023-03-13T21:55:47Z",
            "html_url": "https://github.com/cython/cython/issues/5306#issuecomment-1467019836",
            "id": 1467019836,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5306",
            "node_id": "IC_kwDOABDGAc5XcPI8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1467019836/reactions"
            },
            "updated_at": "2023-03-13T21:55:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1467019836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/194764?v=4",
                "events_url": "https://api.github.com/users/haampie/events{/privacy}",
                "followers_url": "https://api.github.com/users/haampie/followers",
                "following_url": "https://api.github.com/users/haampie/following{/other_user}",
                "gists_url": "https://api.github.com/users/haampie/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/haampie",
                "id": 194764,
                "login": "haampie",
                "node_id": "MDQ6VXNlcjE5NDc2NA==",
                "organizations_url": "https://api.github.com/users/haampie/orgs",
                "received_events_url": "https://api.github.com/users/haampie/received_events",
                "repos_url": "https://api.github.com/users/haampie/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/haampie/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/haampie/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/haampie"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5306/comments",
    "created_at": "2023-03-10T14:22:04Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/194764?v=4",
                "events_url": "https://api.github.com/users/haampie/events{/privacy}",
                "followers_url": "https://api.github.com/users/haampie/followers",
                "following_url": "https://api.github.com/users/haampie/following{/other_user}",
                "gists_url": "https://api.github.com/users/haampie/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/haampie",
                "id": 194764,
                "login": "haampie",
                "node_id": "MDQ6VXNlcjE5NDc2NA==",
                "organizations_url": "https://api.github.com/users/haampie/orgs",
                "received_events_url": "https://api.github.com/users/haampie/received_events",
                "repos_url": "https://api.github.com/users/haampie/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/haampie/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/haampie/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/haampie"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-03-10T14:22:58Z",
            "event": "renamed",
            "id": 8718724818,
            "node_id": "RTE_lADOABDGAc5ggOZMzwAAAAIHrS7S",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] cython package adds prerequisite on cython files.",
                "to": "[BUG] cython package adds prerequisite on cython's internal files."
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/8718724818"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-03-12T14:29:13Z",
            "event": "labeled",
            "id": 8725743624,
            "label": {
                "color": "444444",
                "name": "R: worksforme"
            },
            "node_id": "LE_lADOABDGAc5ggOZMzwAAAAIIGEgI",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8725743624"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-03-13T09:38:17Z",
            "event": "closed",
            "id": 8729496687,
            "node_id": "CE_lADOABDGAc5ggOZMzwAAAAIIUYxv",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/8729496687"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-03-13T09:39:03Z",
            "event": "closed",
            "id": 8729503791,
            "node_id": "CE_lADOABDGAc5ggOZMzwAAAAIIUagv",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "url": "https://api.github.com/repos/cython/cython/issues/events/8729503791"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5306/events",
    "html_url": "https://github.com/cython/cython/issues/5306",
    "id": 1619060300,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556354,
            "name": "R: worksforme",
            "node_id": "MDU6TGFiZWw0MjU1NTYzNTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20worksforme"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5306/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5ggOZM",
    "number": 5306,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5306/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5306/timeline",
    "title": "[BUG] cython package adds prerequisite on cython's internal files.",
    "updated_at": "2023-03-13T21:55:48Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5306",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/194764?v=4",
        "events_url": "https://api.github.com/users/haampie/events{/privacy}",
        "followers_url": "https://api.github.com/users/haampie/followers",
        "following_url": "https://api.github.com/users/haampie/following{/other_user}",
        "gists_url": "https://api.github.com/users/haampie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/haampie",
        "id": 194764,
        "login": "haampie",
        "node_id": "MDQ6VXNlcjE5NDc2NA==",
        "organizations_url": "https://api.github.com/users/haampie/orgs",
        "received_events_url": "https://api.github.com/users/haampie/received_events",
        "repos_url": "https://api.github.com/users/haampie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/haampie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/haampie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/haampie"
    }
}