{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nGiven a pure Python context manager like:\r\n```py\r\n@contextlib.contextmanager\r\ndef nullcontext():\r\n    yield\r\n```\r\na `StopIteration` raised inside of the `with` block will propagate out.\r\n\r\nIf you implement that exact context manager in Cython instead, the `StopIteration` exception will be replaced with a `RuntimeError`.\n\n### Code to reproduce the behaviour:\n\n```shell-session\r\ngit clone https://gist.github.com/godlygeek/3b461adb37d99f77ba470d79745a5c2c /tmp/reproducer\r\ncd /tmp/reproducer\r\npython3 -m venv venv\r\n. venv/bin/activate\r\npip install .\r\npython test.py\r\n```\n\n### Expected behaviour\n\nThat reproducer installs a Python package with 2 modules. One is a pure Python module, the other is a Cython-compiled version of that same pure Python source. The `test.py` imports a context manager from each of them, and uses both in the same way. We should get the same output from both, but instead we see:\r\n```text\r\n--------------------------------------------------\r\ntesting py_nullcontext\r\ncaught StopIteration\r\n--------------------------------------------------\r\ntesting cy_nullcontext\r\nTraceback (most recent call last):\r\n  File \"/tmp/reproducer/test.py\", line 11, in <module>\r\n    raise StopIteration()\r\nStopIteration\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/tmp/reproducer/test.py\", line 10, in <module>\r\n    with func():\r\n  File \"/opt/bb/lib/python3.11/contextlib.py\", line 155, in __exit__\r\n    self.gen.throw(typ, value, traceback)\r\n  File \"pymodule.py\", line 5, in nullcontext\r\n    yield\r\nRuntimeError: generator raised StopIteration\r\n```\n\n### OS\n\nLinux\n\n### Python version\n\n3.12.0\n\n### Cython version\n\n3.0.8\n\n### Additional context\n\nThis is likely due to https://peps.python.org/pep-0479/ but something must be incorrect with the logic about when to apply it, seeing as how this results in a behavior difference from CPython.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "So I think the bit that's failing is https://github.com/python/cpython/blob/cce6ba91b3a0111110d7e1db828bd6311d58a0a7/Lib/contextlib.py#L174\r\n\r\n```\r\n            if (\r\n                    isinstance(value, StopIteration)\r\n                    and exc.__cause__ is value\r\n                ):\r\n```\r\n\r\nYou can reproduce this by compiling the following in Cython\r\n\r\n```\r\ndef nullcontext():\r\n    yield\r\n```\r\n\r\nand then in Python doing:\r\n\r\n```\r\ng = nullcontext()\r\nnext(g)\r\nsi = StopIteration()\r\ntry:\r\n    g.throw(StopIteration, si, None)\r\nexcept RuntimeError as e:\r\n    e2 = e\r\n```\r\n\r\nWith both Python and Cython versions of `nullcontext` you get your `e2 == RuntimeError(\"generator raised StopIteration\")` but in the CYthon version `e2.__cause__` is set to `None` for reasons I don't really understand.",
            "created_at": "2024-01-18T21:28:25Z",
            "html_url": "https://github.com/cython/cython/issues/5953#issuecomment-1899230767",
            "id": 1899230767,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5953",
            "node_id": "IC_kwDOABDGAc5xM_Yv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1899230767/reactions"
            },
            "updated_at": "2024-01-18T21:28:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1899230767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think it just needs the cause setting in https://github.com/cython/cython/blob/0e1026cb7c767450a88ab822e8eda2b451dee3c6/Cython/Utility/Coroutine.c#L303 rather than relying on the implicit chaining",
            "created_at": "2024-01-18T22:35:29Z",
            "html_url": "https://github.com/cython/cython/issues/5953#issuecomment-1899328411",
            "id": 1899328411,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5953",
            "node_id": "IC_kwDOABDGAc5xNXOb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1899328411/reactions"
            },
            "updated_at": "2024-01-18T22:35:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1899328411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5953/comments",
    "created_at": "2024-01-18T19:32:41Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5953/events",
    "html_url": "https://github.com/cython/cython/issues/5953",
    "id": 2088928036,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5953/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc58goMk",
    "number": 5953,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5953/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5953/timeline",
    "title": "[BUG] Cython `@contextlib.contextmanager` unexpectedly turns StopIteration into a RuntimeError",
    "updated_at": "2024-01-18T22:35:31Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5953",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29423?v=4",
        "events_url": "https://api.github.com/users/godlygeek/events{/privacy}",
        "followers_url": "https://api.github.com/users/godlygeek/followers",
        "following_url": "https://api.github.com/users/godlygeek/following{/other_user}",
        "gists_url": "https://api.github.com/users/godlygeek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/godlygeek",
        "id": 29423,
        "login": "godlygeek",
        "node_id": "MDQ6VXNlcjI5NDIz",
        "organizations_url": "https://api.github.com/users/godlygeek/orgs",
        "received_events_url": "https://api.github.com/users/godlygeek/received_events",
        "repos_url": "https://api.github.com/users/godlygeek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/godlygeek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/godlygeek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/godlygeek"
    }
}