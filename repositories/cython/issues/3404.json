{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I tried to make a class in python, the following code works:\r\nFrom my test_loop.pyd file\r\n```\r\nclass mockClass:\r\n    def __init__(self,val):\r\n        self._val = val\r\n    def __getattr__(self,attrName):\r\n        print('Getattr:',attrName)\r\n        print('This work on python:',self.__dict__)\r\n        try:\r\n            return self.__dict__[attrName]\r\n        except:\r\n            raise AttributeError(\"Unknow \",attrName)\r\n    def __add__(self,val):\r\n        return mockClass(self._val+val)\r\n    def __str__(self):\r\n        return str(self._val)\r\ndef test_func():\r\n    print('In test func')\r\n    myList = [1,2,3]\r\n    for ii,item in enumerate(myList):\r\n        if (ii==0):\r\n            out = mockClass(item)\r\n        else:\r\n            print('Add:',item)\r\n            out += item\r\n\r\n    return out\r\n```\r\nAnd the module works, my test.py file:\r\n```\r\nimport test_loop\r\na = test_loop.test_func()\r\nprint(a)\r\n\r\n\r\n```\r\nBut when I change the python class to cython class I got stuck in the recursive loop: the function\\_\\_getattr\\_\\_ (I tried \\_\\_getattribute\\_\\_ too) get stuck because it try to find \\_\\_dict\\_\\_, which is, again, require function \\_\\_getattr\\_\\_.\r\n\r\n```\r\ncdef class mockClass:\r\n    cdef int _val\r\n    def __init__(self,val):\r\n        self._val = val\r\n    def __getattr__(self,attrName):\r\n        print('Getattr:',attrName)\r\n        print('This work on python:',self.__dict__)\r\n        try:\r\n            return self.__dict__[attrName]\r\n        except:\r\n            raise AttributeError(\"Unknow \",attrName)\r\n    def __add__(self,val):\r\n        return mockClass(self._val+val)\r\n    def __str__(self):\r\n        return str(self._val)\r\n```\r\n\r\n",
    "closed_at": "2020-03-10T15:49:31Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "There are a few things to keep in mind here:\r\n\r\n1. [Extension types](https://cython.readthedocs.io/en/latest/src/userguide/extension_types.html) isn't a normal Python type, as thus you should not expect it to always work in the same way.  For instance, many decorator would not work without weird hacks on the Cython side.\r\n2. In extension types, `cdef` attributes are only visible to Cython code, unless specified otherwise (`readonly` or `public`).\r\n3. `__dict__` doesn't exist in an extension type unless you declare it.\r\n4. Never, ever, ever use bare `except` while doing magic, unless you know exactly what you're doing.\r\n5. `__getattr__` is invoked when `AttributeError` is raised, hence the infinite recursion.\r\n6. Last but not least, please don't use camelCase for class names.",
            "created_at": "2020-03-10T06:53:54Z",
            "html_url": "https://github.com/cython/cython/issues/3404#issuecomment-596932205",
            "id": 596932205,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3404",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjkzMjIwNQ==",
            "updated_at": "2020-03-10T06:53:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/596932205",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "author_association": "NONE",
            "body": "1. ok, I just assume that they want to make extension type as close as python class possible, and newbie user (like me) usually assume so. And I think it's useful to have somewhere stating that there are differences. \r\n2. Yes I know so I tried to make some kind of getter/setter function to modify this from python. \r\n3. I didn't know that, thank you. \r\n4. I know it's look silly but it's a reduced code. \r\n5. Yes, I know, but I didn't know is __dict__ not existed in extension class, so I thought it was there but __getattr__ somehow can't get it. \r\n6. Why? ",
            "created_at": "2020-03-10T14:54:38Z",
            "html_url": "https://github.com/cython/cython/issues/3404#issuecomment-597130538",
            "id": 597130538,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3404",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzEzMDUzOA==",
            "updated_at": "2020-03-10T14:54:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/597130538",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/30892991?v=4",
                "events_url": "https://api.github.com/users/nguoihn1988/events{/privacy}",
                "followers_url": "https://api.github.com/users/nguoihn1988/followers",
                "following_url": "https://api.github.com/users/nguoihn1988/following{/other_user}",
                "gists_url": "https://api.github.com/users/nguoihn1988/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nguoihn1988",
                "id": 30892991,
                "login": "nguoihn1988",
                "node_id": "MDQ6VXNlcjMwODkyOTkx",
                "organizations_url": "https://api.github.com/users/nguoihn1988/orgs",
                "received_events_url": "https://api.github.com/users/nguoihn1988/received_events",
                "repos_url": "https://api.github.com/users/nguoihn1988/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nguoihn1988/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nguoihn1988/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nguoihn1988"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Since adding `__dict__` should solve the original issue (I hope), shouldn't this be closed?  Answering to (6), by convention camelCase should never be used in Python code at all, and in case to keep consistency, camelCase in other languages is often used for methods, which will eventually cause confusion if used as a class name.",
            "created_at": "2020-03-10T15:07:00Z",
            "html_url": "https://github.com/cython/cython/issues/3404#issuecomment-597137508",
            "id": 597137508,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3404",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzEzNzUwOA==",
            "updated_at": "2020-03-10T15:07:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/597137508",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, I will close it. Manually adding __dict__ initialization in __cinit__ did solve the problem. I wanted to be able to switch code easily from Python to Cython. \r\nI reopened because I want to know about camelCase, I never heard of that. ",
            "created_at": "2020-03-10T15:49:28Z",
            "html_url": "https://github.com/cython/cython/issues/3404#issuecomment-597161057",
            "id": 597161057,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3404",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzE2MTA1Nw==",
            "updated_at": "2020-03-10T15:49:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/597161057",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/30892991?v=4",
                "events_url": "https://api.github.com/users/nguoihn1988/events{/privacy}",
                "followers_url": "https://api.github.com/users/nguoihn1988/followers",
                "following_url": "https://api.github.com/users/nguoihn1988/following{/other_user}",
                "gists_url": "https://api.github.com/users/nguoihn1988/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nguoihn1988",
                "id": 30892991,
                "login": "nguoihn1988",
                "node_id": "MDQ6VXNlcjMwODkyOTkx",
                "organizations_url": "https://api.github.com/users/nguoihn1988/orgs",
                "received_events_url": "https://api.github.com/users/nguoihn1988/received_events",
                "repos_url": "https://api.github.com/users/nguoihn1988/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nguoihn1988/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nguoihn1988/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nguoihn1988"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3404/comments",
    "created_at": "2020-03-09T18:25:24Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/30892991?v=4",
                "events_url": "https://api.github.com/users/nguoihn1988/events{/privacy}",
                "followers_url": "https://api.github.com/users/nguoihn1988/followers",
                "following_url": "https://api.github.com/users/nguoihn1988/following{/other_user}",
                "gists_url": "https://api.github.com/users/nguoihn1988/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nguoihn1988",
                "id": 30892991,
                "login": "nguoihn1988",
                "node_id": "MDQ6VXNlcjMwODkyOTkx",
                "organizations_url": "https://api.github.com/users/nguoihn1988/orgs",
                "received_events_url": "https://api.github.com/users/nguoihn1988/received_events",
                "repos_url": "https://api.github.com/users/nguoihn1988/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nguoihn1988/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nguoihn1988/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nguoihn1988"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-10T14:54:51Z",
            "event": "closed",
            "id": 3115074207,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzExNTA3NDIwNw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3115074207"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/30892991?v=4",
                "events_url": "https://api.github.com/users/nguoihn1988/events{/privacy}",
                "followers_url": "https://api.github.com/users/nguoihn1988/followers",
                "following_url": "https://api.github.com/users/nguoihn1988/following{/other_user}",
                "gists_url": "https://api.github.com/users/nguoihn1988/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nguoihn1988",
                "id": 30892991,
                "login": "nguoihn1988",
                "node_id": "MDQ6VXNlcjMwODkyOTkx",
                "organizations_url": "https://api.github.com/users/nguoihn1988/orgs",
                "received_events_url": "https://api.github.com/users/nguoihn1988/received_events",
                "repos_url": "https://api.github.com/users/nguoihn1988/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nguoihn1988/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nguoihn1988/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nguoihn1988"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-10T14:55:11Z",
            "event": "reopened",
            "id": 3115075699,
            "node_id": "MDEzOlJlb3BlbmVkRXZlbnQzMTE1MDc1Njk5",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3115075699"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/30892991?v=4",
                "events_url": "https://api.github.com/users/nguoihn1988/events{/privacy}",
                "followers_url": "https://api.github.com/users/nguoihn1988/followers",
                "following_url": "https://api.github.com/users/nguoihn1988/following{/other_user}",
                "gists_url": "https://api.github.com/users/nguoihn1988/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nguoihn1988",
                "id": 30892991,
                "login": "nguoihn1988",
                "node_id": "MDQ6VXNlcjMwODkyOTkx",
                "organizations_url": "https://api.github.com/users/nguoihn1988/orgs",
                "received_events_url": "https://api.github.com/users/nguoihn1988/received_events",
                "repos_url": "https://api.github.com/users/nguoihn1988/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nguoihn1988/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nguoihn1988/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nguoihn1988"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-10T15:49:31Z",
            "event": "closed",
            "id": 3115320506,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzExNTMyMDUwNg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3115320506"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3404/events",
    "html_url": "https://github.com/cython/cython/issues/3404",
    "id": 578103721,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3404/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NzgxMDM3MjE=",
    "number": 3404,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Cython exetension class __getattr__ not doing the same behavoir with python's class counter part",
    "updated_at": "2020-03-10T15:49:31Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3404",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/30892991?v=4",
        "events_url": "https://api.github.com/users/nguoihn1988/events{/privacy}",
        "followers_url": "https://api.github.com/users/nguoihn1988/followers",
        "following_url": "https://api.github.com/users/nguoihn1988/following{/other_user}",
        "gists_url": "https://api.github.com/users/nguoihn1988/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nguoihn1988",
        "id": 30892991,
        "login": "nguoihn1988",
        "node_id": "MDQ6VXNlcjMwODkyOTkx",
        "organizations_url": "https://api.github.com/users/nguoihn1988/orgs",
        "received_events_url": "https://api.github.com/users/nguoihn1988/received_events",
        "repos_url": "https://api.github.com/users/nguoihn1988/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nguoihn1988/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nguoihn1988/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nguoihn1988"
    }
}