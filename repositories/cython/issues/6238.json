{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\nWhen a C++ parent class has an error using a child class's name as the constructor, the result appears to be undefined behavior w.r.t. compilation rather than producing a clear error. Depending on the nature of the error sometimes compilation succeeds (even if perhaps should not) while other times it produces surprising errors.\n\n### Code to reproduce the behaviour:\n\nUsing IPython\r\n```cython\r\nIn [19]: %%cython --cplus                                                                             \r\n    ...: cdef extern from *:                                                                          \r\n    ...:     \"\"\"                                   \r\n    ...:     class Parent {     \r\n    ...:     public:                      \r\n    ...:         Parent() = default;               \r\n    ...:     };                                    \r\n    ...:                                        \r\n    ...:     class Child : public Parent {\r\n    ...:     public:                                                                                  \r\n    ...:         Child() = default;                                                                   \r\n    ...:         Child& make() { return *this; }                                                                                                                                                            \r\n    ...:     };                                                                                                                                                                                             \r\n    ...:     \"\"\"                                                                                      \r\n    ...:     cdef cppclass Parent:                                                                                                                                                                          \r\n    ...:         # Typo!                                                                                                                                                                                    \r\n    ...:         Child()                 \r\n    ...:         # Correct                         \r\n    ...:         # Parent()     \r\n    ...:                                           \r\n    ...:     cdef cppclass Child(Parent):   \r\n    ...:         Child()                                                                              \r\n    ...:         Child& make()                                                                                                                                                                              \r\n    ...:                                                                                              \r\n    ...: cdef Parent a = Parent()                                                                     \r\n    ...: cdef Child b = Child()  \r\n```\r\nThis will produce the surprising error\r\n```\r\n    cdef cppclass Child(Parent):                   \r\n        Child()                                 \r\n        Child& make()                     \r\n        ^                                                                                             \r\n------------------------------------------------------------                                          \r\n                                                                                                                                                                                                            \r\n.cache/ipython/cython/_cython_magic_fb643096fb7fcafe150b69487ea1f11eb512bda1.pyx:22:8: 'Child' is not a type identifier   \r\n```\r\nA natural way to ensure that the class's existence would be known in time for the method declaration might be to [forward declare the class](https://cython.readthedocs.io/en/latest/src/userguide/extension_types.html#forward-declaring-extension-types), since that is supported for extension types:\r\n```\r\n    ...:     cdef cppclass Child(Parent):\r\n    ...:         pass     \r\n    ...:                   \r\n    ...:     cdef cppclass Child(Parent):          \r\n    ...:         Child()                    \r\n    ...:         Child& make()                                                                        \r\n    ...:                         \r\n```\r\nBut it seems like forward declaring is not supported for cppclasses since the above code produces the below errors\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------                                          \r\n...                                 \r\n                                                   \r\n    cdef cppclass Child(Parent):\r\n        Child()                           \r\n        Child& make()\r\n                                                   \r\ncdef Parent a = Parent()                        \r\n                ^      \r\n------------------------------------------------------------                                          \r\n                                                   \r\n.cache/ipython/cython/_cython_magic_b8703338bfd10012656eb32b0d1d505f6ea3a063.pyx:27:16: no constructor found for C++  type 'Parent'                                                                         \r\n                                                   \r\nError compiling Cython file:                                                                          \r\n------------------------------------------------------------                                                                                                                                                \r\n...                                                                                                                                                                                                         \r\n    cdef cppclass Child(Parent):         \r\n        Child()           \r\n        Child& make()      \r\n                                                   \r\ncdef Parent a = Parent()                    \r\ncdef Child b = Child()                                                                                \r\n               ^                                                                                                                                                                                            \r\n------------------------------------------------------------                                          \r\n                                                   \r\n.cache/ipython/cython/_cython_magic_b8703338bfd10012656eb32b0d1d505f6ea3a063.pyx:28:15: no constructor found for C++  type 'Child'      \r\n```\r\nThe first error is unsurprising since the typo means that no `Parent()` constructor has been declared, but the second error is a bit surprising since it seems to indicate that only the first declaration of the child class was seen and the second was completely ignored (which would explain why the forward declaration seemingly \"fixed\" the original error; Cython simply never processed the `make` factory after the forward declaration was added).\n\n### Expected behaviour\n\nI would expect the code to give a reasonable error indicating that the constructor has the wrong type. The signature for constructors should be unique or at least distinct enough to be identifiable as different from a method given the context.\n\n### OS\n\nLinux\n\n### Python version\n\n3.10.4\n\n### Cython version\n\n3.0.10\n\n### Additional context\n\nFixing this isn't terribly high priority, but I wanted to open an issue to at least serve as documentation for future users who encounter the problem.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6238/comments",
    "created_at": "2024-06-11T18:22:56Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25541553?v=4",
                "events_url": "https://api.github.com/users/etseidl/events{/privacy}",
                "followers_url": "https://api.github.com/users/etseidl/followers",
                "following_url": "https://api.github.com/users/etseidl/following{/other_user}",
                "gists_url": "https://api.github.com/users/etseidl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/etseidl",
                "id": 25541553,
                "login": "etseidl",
                "node_id": "MDQ6VXNlcjI1NTQxNTUz",
                "organizations_url": "https://api.github.com/users/etseidl/orgs",
                "received_events_url": "https://api.github.com/users/etseidl/received_events",
                "repos_url": "https://api.github.com/users/etseidl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/etseidl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/etseidl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/etseidl"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-11T18:54:29Z",
            "event": "subscribed",
            "id": 13121482487,
            "node_id": "SE_lADOABDGAc6L5NKYzwAAAAMOGe73",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13121482487"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/in/85914?v=4",
                "events_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/rapids-bot",
                "id": 73299758,
                "login": "rapids-bot[bot]",
                "node_id": "MDM6Qm90NzMyOTk3NTg=",
                "organizations_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rapids-bot%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/rapids-bot%5Bbot%5D"
            },
            "commit_id": "f655602ecd8f254dfcee5eb0c790bd3336e83d7c",
            "commit_url": "https://api.github.com/repos/rapidsai/cudf/commits/f655602ecd8f254dfcee5eb0c790bd3336e83d7c",
            "created_at": "2024-06-11T22:59:22Z",
            "event": "referenced",
            "id": 13123568605,
            "node_id": "REFE_lADOABDGAc6L5NKYzwAAAAMOOcPd",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13123568605"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6238/events",
    "html_url": "https://github.com/cython/cython/issues/6238",
    "id": 2347029144,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6238/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6L5NKY",
    "number": 6238,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6238/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6238/timeline",
    "title": "[BUG] Misleading exception for error in inheritance",
    "updated_at": "2024-06-11T18:22:56Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6238",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vyasr",
        "id": 1538165,
        "login": "vyasr",
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vyasr"
    }
}