{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "E.g. code from tutorial - primes.pyx:\r\n```cython\r\ndef primes(int nb_primes):\r\n    cdef int n, i, len_p\r\n    cdef int p[1000]\r\n    if nb_primes > 1000:\r\n        nb_primes = 1000\r\n\r\n    len_p = 0  # The current number of elements in p.\r\n    n = 2\r\n    while len_p < nb_primes:\r\n        # Is n prime?\r\n        for i in p[:len_p]:\r\n            if n % i == 0:\r\n                break\r\n\r\n        # If no break occurred in the loop, we have a prime.\r\n        else:\r\n            p[len_p] = n\r\n            len_p += 1\r\n        n += 1\r\n\r\n    # Let's return the result in a python list:\r\n    result_as_list  = [prime for prime in p[:len_p]]\r\n    return result_as_list\r\n```\r\nWith declaration in docs like:\r\n```rst\r\n.. literalinclude:: ../../examples/tutorial/cython_tutorial/primes.pyx\r\n    :linenos:\r\n```\r\n---\r\nRight after all the code is shown, there is a line by line explanation, for example:\r\n```rst\r\nNow, let's dig into the core of the function::\r\n\r\n    cdef int n, i, len_p\r\n    cdef int p[1000]\r\n```\r\nWhich looks like this:\r\n> Now, let's dig into the core of the function:\r\n> ```cython\r\n> cdef int n, i, len_p\r\n> cdef int p[1000]\r\n> ```\r\nThe problem with this approach is that this part is easily out of sync with the original script, so there is a solution to this problem - [literalinclude lines](https://devopstutodoc.readthedocs.io/en/stable/documentation/doc_generators/sphinx/rest_sphinx/code/literalinclude/literalinclude.html#lines-xxx):\r\n\r\n```rst\r\nNow, let's dig into the core of the function:\r\n\r\n.. literalinclude:: ../../examples/tutorial/cython_tutorial/primes.pyx\r\n   :lines: 2,3\r\n```\r\nA simple and reliable way.\r\nThe only thing is that if you just use lines, then we will have an extra padding, and it will look something like this:\r\n> Now, let's dig into the core of the function:\r\n> ```cython\r\n>     cdef int n, i, len_p\r\n>     cdef int p[1000]\r\n> ```\r\nYou can leave it that way, however, in cases with a large amount of indentation it may not be very nice, therefore you can use `:dedent:`, which will cut off unnecessary indentation:\r\n```rst\r\nNow, let's dig into the core of the function:\r\n\r\n.. literalinclude:: ../../examples/tutorial/cython_tutorial/primes.pyx\r\n   :lines: 2,3\r\n   :dedent:\r\n```\r\n->\r\n> Now, let's dig into the core of the function:\r\n> ```cython\r\n> cdef int n, i, len_p\r\n> cdef int p[1000]\r\n> ```",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4222/comments",
    "created_at": "2021-06-11T00:23:41Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4222/events",
    "html_url": "https://github.com/cython/cython/issues/4222",
    "id": 918077670,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4222/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MTgwNzc2NzA=",
    "number": 4222,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Use literalinclude with lines instead of copy-pasting parts of code",
    "updated_at": "2021-06-11T00:23:41Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4222",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
        "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
        "followers_url": "https://api.github.com/users/0dminnimda/followers",
        "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
        "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/0dminnimda",
        "id": 52697657,
        "login": "0dminnimda",
        "node_id": "MDQ6VXNlcjUyNjk3NjU3",
        "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
        "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
        "repos_url": "https://api.github.com/users/0dminnimda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/0dminnimda"
    }
}