{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "This might be just me doing things wrong, but I have trouble figuring out how to use the command line option `-s include_path=...` when calling `python3 -m Cython.Build.cythonize` for a standalone compilation in a separate process (to work around bug https://github.com/cython/cython/issues/2730 ).\r\n\r\nI tried these two calls:\r\n\r\n1. As a list: `/usr/bin/python3 -m Cython.Build.Cythonize /tmp/pip-req-build-liyrbm_y/src/wobblui/dragselection.pyx -s include_path=['/tmp/pip-req-build-liyrbm_y/src'] -s gdb_debug=False -X always_allow_keywords=True -X boundscheck=True -X language_level=3 -X profile=False -X linetrace=False`\r\n\r\n2. As a string: `/usr/bin/python3 -m Cython.Build.Cythonize /tmp/pip-req-build-zl7im29r/src/wobblui/dragselection.pyx -s include_path=/tmp/pip-req-build-zl7im29r/src -s gdb_debug=False -X always_allow_keywords=True -X boundscheck=True -X language_level=3 -X profile=False -X linetrace=False`\r\n\r\nBoth give me this error, where Cython seems to become confused accessing the include directories internally:\r\n\r\n```\r\n  ERROR: Traceback (most recent call last):\r\n  ERROR:   File \"/usr/lib64/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n  ERROR:     \"__main__\", mod_spec)\r\n  ERROR:   File \"/usr/lib64/python3.7/runpy.py\", line 85, in _run_code\r\n  ERROR:     exec(code, run_globals)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Cythonize.py\", line 227, in <module>\r\n  ERROR:     main()\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Cythonize.py\", line 223, in main\r\n  ERROR:     cython_compile(path, options)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Cythonize.py\", line 106, in cython_compile\r\n  ERROR:     **options.options)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Dependencies.py\", line 966, in cythonize\r\n  ERROR:     aliases=aliases)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Dependencies.py\", line 824, in create_extension_list\r\n  ERROR:     kwds = deps.distutils_info(file, aliases, base).values\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Dependencies.py\", line 679, in distutils_info\r\n  ERROR:     return (self.transitive_merge(filename, self.distutils_info0, DistutilsInfo.merge)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Dependencies.py\", line 689, in transitive_merge\r\n  ERROR:     node, extract, merge, seen, {}, self.cimported_files)[0]\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Dependencies.py\", line 700, in transitive_merge_helper\r\n  ERROR:     for next in outgoing(node):\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Utils.py\", line 54, in wrapper\r\n  ERROR:     res = cache[args] = f(self, *args)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Dependencies.py\", line 601, in cimported_files\r\n  ERROR:     pxd_file = self.find_pxd(module, filename)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Utils.py\", line 54, in wrapper\r\n  ERROR:     res = cache[args] = f(self, *args)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Build/Dependencies.py\", line 583, in find_pxd\r\n  ERROR:     pxd = self.context.find_pxd_file(relative, None)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Compiler/Main.py\", line 250, in find_pxd_file\r\n  ERROR:     pxd = self.search_include_directories(qualified_name, \".pxd\", pos, sys_path=sys_path)\r\n  ERROR:   File \"/tmp/pip-build-env-c95g9yn8/overlay/lib64/python3.7/site-packages/Cython/Compiler/Main.py\", line 292, in search_include_directories\r\n  ERROR:     include_dirs = include_dirs + sys.path\r\n  ERROR: TypeError: unsupported operand type(s) for +: 'bool' and 'list'\r\n```\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I get this too",
            "created_at": "2019-11-11T11:33:05Z",
            "html_url": "https://github.com/cython/cython/issues/3168#issuecomment-552407446",
            "id": 552407446,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3168",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjQwNzQ0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/552407446/reactions"
            },
            "updated_at": "2019-11-11T11:33:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/552407446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6676821?v=4",
                "events_url": "https://api.github.com/users/WilkAndy/events{/privacy}",
                "followers_url": "https://api.github.com/users/WilkAndy/followers",
                "following_url": "https://api.github.com/users/WilkAndy/following{/other_user}",
                "gists_url": "https://api.github.com/users/WilkAndy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WilkAndy",
                "id": 6676821,
                "login": "WilkAndy",
                "node_id": "MDQ6VXNlcjY2NzY4MjE=",
                "organizations_url": "https://api.github.com/users/WilkAndy/orgs",
                "received_events_url": "https://api.github.com/users/WilkAndy/received_events",
                "repos_url": "https://api.github.com/users/WilkAndy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WilkAndy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WilkAndy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WilkAndy"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think a workaround is to call `python3 -c \"from Cython.Build import cythonize; import sys; # ... use sys.argv[1] and cythonize(...arguments...) to do call...\"` but I find that considerably more ugly. Hence it'd be nice if supporting this argument via standalone was supported. Is there some more info I could provide to help with fixing this?",
            "created_at": "2019-12-01T10:40:02Z",
            "html_url": "https://github.com/cython/cython/issues/3168#issuecomment-560090175",
            "id": 560090175,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3168",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA5MDE3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/560090175/reactions"
            },
            "updated_at": "2019-12-01T10:40:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/560090175",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "NONE",
            "body": "Any progress with this? Seems easy enough to allow the options that are passed to be other than booleans, or else to allow passing includes directly\r\n\r\nThe issue that passing through options is done in `ParseOptionsAction` which only allows booleans\r\n\r\n```\r\nclass ParseOptionsAction(Action):\r\n    def __call__(self, parser, namespace, values, option_string=None):\r\n        options = dict(getattr(namespace, self.dest, {}))\r\n        for opt in values.split(','):\r\n            if '=' in opt:\r\n                n, v = opt.split('=', 1)\r\n                v = v.lower() not in ('false', 'f', '0', 'no')\r\n            else:\r\n                n, v = opt, True\r\n            options[n] = v\r\n        setattr(namespace, self.dest, options)\r\n```\r\nhttps://github.com/cython/cython/blob/master/Cython/Compiler/CmdLine.py",
            "created_at": "2022-07-26T12:16:08Z",
            "html_url": "https://github.com/cython/cython/issues/3168#issuecomment-1195406948",
            "id": 1195406948,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3168",
            "node_id": "IC_kwDOABDGAc5HQHZk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1195406948/reactions"
            },
            "updated_at": "2022-07-26T12:19:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1195406948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2090554?v=4",
                "events_url": "https://api.github.com/users/KimiNewt/events{/privacy}",
                "followers_url": "https://api.github.com/users/KimiNewt/followers",
                "following_url": "https://api.github.com/users/KimiNewt/following{/other_user}",
                "gists_url": "https://api.github.com/users/KimiNewt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KimiNewt",
                "id": 2090554,
                "login": "KimiNewt",
                "node_id": "MDQ6VXNlcjIwOTA1NTQ=",
                "organizations_url": "https://api.github.com/users/KimiNewt/orgs",
                "received_events_url": "https://api.github.com/users/KimiNewt/received_events",
                "repos_url": "https://api.github.com/users/KimiNewt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KimiNewt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KimiNewt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KimiNewt"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3168/comments",
    "created_at": "2019-10-07T12:07:19Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3168/events",
    "html_url": "https://github.com/cython/cython/issues/3168",
    "id": 503409905,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3168/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MDM0MDk5MDU=",
    "number": 3168,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/cython/cython/issues/3168/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/3168/timeline",
    "title": "Trouble figuring out how to use -s include_path=... when calling python3 -m Cython.Build.cythonize stanalone",
    "updated_at": "2022-07-26T12:19:06Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3168",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ghost",
        "id": 10137,
        "login": "ghost",
        "node_id": "MDQ6VXNlcjEwMTM3",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ghost"
    }
}