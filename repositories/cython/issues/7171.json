{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe the bug\n\nOne of the tests in \"test_coroutines_pep492\" takes excessively long on the macOS CI test runners, leading to job timeouts and failures.\n```\n2025-09-26T02:37:06.5558300Z [5] compiling (cpp) tests in and running test_coroutines_pep492 ...\n...\n2025-09-26T02:40:04.4457570Z test_oneline_defs (test_coroutines_pep492.TokenizerRegrTest) ... \n2025-09-26T02:40:06.9109130Z Compiling /Users/runner/work/cython/cython/TEST_TMP/5/run/cpp/test_coroutines_pep492/_cython_inline_d30a026915db60884a94c6bf747cce1daeb657bb65a4fde7a2e6bdb12ac87024.pyx because it changed.\n2025-09-26T02:40:06.9210270Z __pyx_fuse_1func2_inpy (pure_fused.TestCls)\n2025-09-26T02:40:06.9210910Z [1/1] Cythonizing /Users/runner/work/cython/cython/TEST_TMP/5/run/cpp/test_coroutines_pep492/_cython_inline_d30a026915db60884a94c6bf747cce1daeb657bb65a4fde7a2e6bdb12ac87024.pyx\n...\n2025-09-26T03:16:33.4023210Z #### 2025-09-26 03:16:33.402088 - waiting for [5]\n2025-09-26T03:16:37.6477880Z Compiling /Users/runner/work/cython/cython/TEST_TMP/5/run/cpp/test_coroutines_pep492/_cython_inline_73a03ea72e85eb8dafeb7d899d3101ad3bc6c1bd4cd11a393318129aafec471d.pyx because it changed.\n2025-09-26T03:16:37.6479900Z [1/1] Cythonizing /Users/runner/work/cython/cython/TEST_TMP/5/run/cpp/test_coroutines_pep492/_cython_inline_73a03ea72e85eb8dafeb7d899d3101ad3bc6c1bd4cd11a393318129aafec471d.pyx\n...\n2025-09-26T03:37:10.0131910Z #### 2025-09-26 03:37:10.012517 - waiting for [5]\n2025-09-26T03:37:12.8098460Z /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/unittest/case.py:550: RuntimeWarning: coroutine '__invoke.<locals>.foo' was never awaited\n2025-09-26T03:37:12.8119260Z   method()\n2025-09-26T03:37:12.8134300Z ok\n```\n\n\n### Code to reproduce the behaviour:\n\nThe failing test seems to be this:\n```python\n    def test_oneline_defs(self):\n        buf = []\n        for i in range(500):\n            buf.append('def i{i}(): return {i}'.format(i=i))\n        buf = '\\n'.join(buf)\n\n        # Test that 500 consequent, one-line defs is OK\n        ns = {}\n        exec(buf, ns, ns)\n        self.assertEqual(ns['i499'](), 499)\n\n        # Test that 500 consequent, one-line defs *and*\n        # one 'async def' following them is OK\n        buf += '\\nasync def foo():\\n    return'\n        ns = {}\n        exec(buf, ns, ns)\n        self.assertEqual(ns['i499'](), 499)\n```\n(Note that `exec()` is using Cython compilation in this test module.)\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nmacOS\n\n### Python version\n\n_No response_\n\n### Cython version\n\nmaster\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think I can partially reproduce this on x64 Linux: test_coroutines_pep492 takes about 45 seconds on GCC and about 465 seconds on clang 21.1.1. That's not as bad as on the MacOS CI (where it's 60s vs 3000s) but it suggests it might be possible to learn something without a Mac.",
            "created_at": "2025-09-26T20:01:05Z",
            "html_url": "https://github.com/cython/cython/issues/7171#issuecomment-3340303271",
            "id": 3340303271,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7171",
            "node_id": "IC_kwDOABDGAc7HGPun",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3340303271/reactions"
            },
            "updated_at": "2025-09-26T20:01:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3340303271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Running gcc with `-ftime-report` gives the following timings for the compiler stages:\n`CFLAGS=\"-Og -ggdb -Wcast-qual -Wall -Wextra -std=c99 -ftime-report\"`\n```\n phase parsing                      :   1.04 (  5%)   0.38 ( 48%)   1.42 (  7%)    40M ( 15%)\n phase opt and generate             :  18.90 ( 94%)   0.41 ( 52%)  19.32 ( 93%)   225M ( 84%)\n callgraph functions expansion      :  18.21 ( 91%)   0.26 ( 33%)  18.48 ( 89%)   148M ( 55%)\n callgraph ipa passes               :   0.61 (  3%)   0.13 ( 16%)   0.73 (  4%)    48M ( 18%)\n```\n<details>\n```\nTime variable                                   usr           sys          wall           GGC\n phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)  1532k (  1%)\n phase parsing                      :   1.04 (  5%)   0.38 ( 48%)   1.42 (  7%)    40M ( 15%)\n phase lang. deferred               :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)    96  (  0%)\n phase opt and generate             :  18.90 ( 94%)   0.41 ( 52%)  19.32 ( 93%)   225M ( 84%)\n phase last asm                     :   0.05 (  0%)   0.00 (  0%)   0.05 (  0%)  2022k (  1%)\n dump files                         :   0.05 (  0%)   0.00 (  0%)   0.08 (  0%)     0  (  0%)\n callgraph construction             :   0.07 (  0%)   0.01 (  1%)   0.05 (  0%)    15M (  6%)\n callgraph optimization             :   0.01 (  0%)   0.01 (  1%)   0.06 (  0%)  4664  (  0%)\n callgraph functions expansion      :  18.21 ( 91%)   0.26 ( 33%)  18.48 ( 89%)   148M ( 55%)\n callgraph ipa passes               :   0.61 (  3%)   0.13 ( 16%)   0.73 (  4%)    48M ( 18%)\n ipa function summary               :   0.03 (  0%)   0.01 (  1%)   0.03 (  0%)  2698k (  1%)\n ipa dead code removal              :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)     0  (  0%)\n ipa inlining heuristics            :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)   128  (  0%)\n ipa pure const                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)    19k (  0%)\n ipa modref                         :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)\n cfg construction                   :   0.02 (  0%)   0.00 (  0%)   0.00 (  0%)   254k (  0%)\n cfg cleanup                        :   0.04 (  0%)   0.01 (  1%)   0.02 (  0%)  7904  (  0%)\n trivially dead code                :   0.03 (  0%)   0.00 (  0%)   0.05 (  0%)   224  (  0%)\n df scan insns                      :   0.06 (  0%)   0.01 (  1%)   0.07 (  0%)    54k (  0%)\n df live regs                       :   0.07 (  0%)   0.01 (  1%)   0.07 (  0%)  1552  (  0%)\n df live&initialized regs           :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)     0  (  0%)\n df reg dead/unused notes           :   0.04 (  0%)   0.00 (  0%)   0.07 (  0%)  1624k (  1%)\n register information               :   0.04 (  0%)   0.00 (  0%)   0.02 (  0%)     0  (  0%)\n alias analysis                     :   0.04 (  0%)   0.00 (  0%)   0.03 (  0%)  1392k (  1%)\n alias stmt walking                 :   0.07 (  0%)   0.00 (  0%)   0.09 (  0%)    29k (  0%)\n register scan                      :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)    49k (  0%)\n rebuild jump labels                :   0.05 (  0%)   0.00 (  0%)   0.02 (  0%)     0  (  0%)\n preprocessing                      :   0.11 (  1%)   0.16 ( 20%)   0.15 (  1%)  9639k (  3%)\n lexical analysis                   :   0.15 (  1%)   0.08 ( 10%)   0.21 (  1%)     0  (  0%)\n parser (global)                    :   0.06 (  0%)   0.02 (  3%)   0.16 (  1%)    11M (  4%)\n parser struct body                 :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)   253k (  0%)\n parser function body               :   0.43 (  2%)   0.09 ( 11%)   0.58 (  3%)    11M (  4%)\n parser inl. func. body             :   0.29 (  1%)   0.03 (  4%)   0.32 (  2%)  6100k (  2%)\n early inlining heuristics          :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)   437k (  0%)\n inline parameters                  :   0.02 (  0%)   0.00 (  0%)   0.01 (  0%)  1975k (  1%)\n integration                        :   0.02 (  0%)   0.01 (  1%)   0.03 (  0%)  2771k (  1%)\n tree gimplify                      :   0.03 (  0%)   0.00 (  0%)   0.04 (  0%)    10M (  4%)\n tree eh                            :   0.00 (  0%)   0.01 (  1%)   0.00 (  0%)   407k (  0%)\n tree CFG construction              :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)  3090k (  1%)\n tree CFG cleanup                   :   0.17 (  1%)   0.01 (  1%)   0.15 (  1%)    42k (  0%)\n tree copy propagation              :   0.04 (  0%)   0.00 (  0%)   0.02 (  0%)   560  (  0%)\n tree SSA rewrite                   :   0.07 (  0%)   0.05 (  6%)   0.09 (  0%)    34M ( 13%)\n tree SSA incremental               :   0.02 (  0%)   0.00 (  0%)   0.00 (  0%)   247k (  0%)\n tree operand scan                  :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)  3089k (  1%)\n backwards jump threading           :   0.02 (  0%)   0.00 (  0%)   0.02 (  0%)    11k (  0%)\n tree CCP                           :   0.06 (  0%)   0.01 (  1%)   0.09 (  0%)   257k (  0%)\n tree FRE                           :   0.11 (  1%)   0.02 (  3%)   0.11 (  1%)   913k (  0%)\n tree forward propagate             :   0.02 (  0%)   0.01 (  1%)   0.03 (  0%)    62k (  0%)\n tree conservative DCE              :   0.01 (  0%)   0.00 (  0%)   0.03 (  0%)   240  (  0%)\n tree aggressive DCE                :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)    21k (  0%)\n PHI merge                          :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)    75k (  0%)\n tree SSA uncprop                   :   0.46 (  2%)   0.00 (  0%)   0.48 (  2%)     0  (  0%)\n tree strlen optimization           :   0.02 (  0%)   0.00 (  0%)   0.04 (  0%)  1228k (  0%)\n dominance frontiers                :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)\n dominance computation              :   0.05 (  0%)   0.00 (  0%)   0.05 (  0%)     0  (  0%)\n out of ssa                         :   0.05 (  0%)   0.01 (  1%)   0.06 (  0%)   398k (  0%)\n expand vars                        :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)  1217k (  0%)\n expand                             :   0.11 (  1%)   0.02 (  3%)   0.09 (  0%)    25M (  9%)\n post expand cleanups               :   0.01 (  0%)   0.00 (  0%)   0.02 (  0%)  1215k (  0%)\n forward prop                       :   0.11 (  1%)   0.04 (  5%)   0.18 (  1%)   184k (  0%)\n CSE                                :   0.19 (  1%)   0.00 (  0%)   0.21 (  1%)   251k (  0%)\n dead code elimination              :   0.01 (  0%)   0.00 (  0%)   0.02 (  0%)     0  (  0%)\n loop init                          :   0.01 (  0%)   0.00 (  0%)   0.02 (  0%)  3342k (  1%)\n branch prediction                  :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)   251k (  0%)\n combiner                           :   0.19 (  1%)   0.00 (  0%)   0.21 (  1%)  1516k (  1%)\n integrated RA                      :   0.54 (  3%)   0.05 (  6%)   0.60 (  3%)    35M ( 13%)\n LRA non-specific                   :   0.33 (  2%)   0.02 (  3%)   0.30 (  1%)  9978k (  4%)\n LRA virtuals elimination           :   0.05 (  0%)   0.00 (  0%)   0.09 (  0%)    12M (  4%)\n LRA reload inheritance             :   0.04 (  0%)   0.00 (  0%)   0.03 (  0%)   205k (  0%)\n LRA create live ranges             :   0.12 (  1%)   0.00 (  0%)   0.12 (  1%)    63k (  0%)\n LRA hard reg assignment            :   0.02 (  0%)   0.00 (  0%)   0.03 (  0%)     0  (  0%)\n reload                             :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)    27k (  0%)\n reload CSE regs                    :   2.12 ( 11%)   0.00 (  0%)   2.11 ( 10%)  6637k (  2%)\n thread pro- & epilogue             :   0.07 (  0%)   0.00 (  0%)   0.03 (  0%)  1965k (  1%)\n combine stack adjustments          :   0.04 (  0%)   0.00 (  0%)   0.02 (  0%)    12k (  0%)\n hard reg cprop                     :   0.06 (  0%)   0.01 (  1%)   0.05 (  0%)  8256  (  0%)\n machine dep reorg                  :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)    57k (  0%)\n reorder blocks                     :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)   415k (  0%)\n shorten branches                   :   0.05 (  0%)   0.00 (  0%)   0.04 (  0%)    24  (  0%)\n final                              :   0.20 (  1%)   0.00 (  0%)   0.26 (  1%)  4607k (  2%)\n variable output                    :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)   304k (  0%)\n symout                             :   0.09 (  0%)   0.00 (  0%)   0.08 (  0%)    12M (  5%)\n variable tracking                  :   3.53 ( 18%)   0.02 (  3%)   3.54 ( 17%)    25M ( 10%)\n var-tracking dataflow              :   4.34 ( 22%)   0.02 (  3%)   4.39 ( 21%)    62k (  0%)\n var-tracking emit                  :   4.52 ( 23%)   0.01 (  1%)   4.51 ( 22%)  2256k (  1%)\n uninit var analysis                :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)\n initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)    12k (  0%)\n access analysis                    :   0.07 (  0%)   0.00 (  0%)   0.08 (  0%)   952  (  0%)\n rest of compilation                :   0.23 (  1%)   0.02 (  3%)   0.19 (  1%)  2843k (  1%)\n remove unused locals               :   0.03 (  0%)   0.00 (  0%)   0.05 (  0%)     0  (  0%)\n address taken                      :   0.00 (  0%)   0.01 (  1%)   0.00 (  0%)    32  (  0%)\n repair loop structures             :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)     0  (  0%)\n TOTAL                              :  20.00          0.79         20.81          269M\n```\n</details>\n\nWith `-O2` instead of `-Og`:\n```\n phase parsing                      :   0.99 (  3%)   0.38 ( 29%)   1.38 (  3%)    40M (  9%)\n phase opt and generate             :  37.96 ( 97%)   0.92 ( 71%)  38.85 ( 96%)   392M ( 90%)\n callgraph functions expansion      :  32.71 ( 84%)   0.73 ( 56%)  33.43 ( 83%)   304M ( 70%)\n callgraph ipa passes               :   5.16 ( 13%)   0.17 ( 13%)   5.32 ( 13%)    59M ( 14%)\n```\n<details>\n```\nTime variable                                   usr           sys          wall           GGC\n phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1532k (  0%)\n phase parsing                      :   0.99 (  3%)   0.38 ( 29%)   1.38 (  3%)    40M (  9%)\n phase opt and generate             :  37.96 ( 97%)   0.92 ( 71%)  38.85 ( 96%)   392M ( 90%)\n phase last asm                     :   0.06 (  0%)   0.00 (  0%)   0.07 (  0%)  1961k (  0%)\n garbage collection                 :   0.03 (  0%)   0.01 (  1%)   0.03 (  0%)     0  (  0%)\n dump files                         :   0.06 (  0%)   0.03 (  2%)   0.06 (  0%)     0  (  0%)\n callgraph construction             :   0.10 (  0%)   0.04 (  3%)   0.11 (  0%)    38M (  9%)\n callgraph optimization             :   0.05 (  0%)   0.02 (  2%)   0.04 (  0%)  4664  (  0%)\n callgraph functions expansion      :  32.71 ( 84%)   0.73 ( 56%)  33.43 ( 83%)   304M ( 70%)\n callgraph ipa passes               :   5.16 ( 13%)   0.17 ( 13%)   5.32 ( 13%)    59M ( 14%)\n ipa function summary               :   0.02 (  0%)   0.00 (  0%)   0.02 (  0%)  1515k (  0%)\n ipa dead code removal              :   0.02 (  0%)   0.00 (  0%)   0.01 (  0%)    80  (  0%)\n ipa cp                             :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)  2540k (  1%)\n ipa inlining heuristics            :   0.10 (  0%)   0.01 (  1%)   0.11 (  0%)  7122k (  2%)\n ipa function splitting             :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)   274k (  0%)\n ipa comdats                        :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)\n ipa pure const                     :   0.02 (  0%)   0.01 (  1%)   0.01 (  0%)    13k (  0%)\n ipa icf                            :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)  8040  (  0%)\n ipa SRA                            :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)  2033k (  0%)\n ipa modref                         :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)   373k (  0%)\n cfg construction                   :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)   239k (  0%)\n cfg cleanup                        :   0.04 (  0%)   0.00 (  0%)   0.07 (  0%)   496k (  0%)\n trivially dead code                :   0.08 (  0%)   0.00 (  0%)   0.07 (  0%)     0  (  0%)\n df scan insns                      :   0.03 (  0%)   0.00 (  0%)   0.05 (  0%)    27k (  0%)\n df reaching defs                   :   0.37 (  1%)   0.13 ( 10%)   0.46 (  1%)     0  (  0%)\n df live regs                       :   0.27 (  1%)   0.00 (  0%)   0.30 (  1%)    18k (  0%)\n df live&initialized regs           :   0.14 (  0%)   0.02 (  2%)   0.15 (  0%)     0  (  0%)\n df must-initialized regs           :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)     0  (  0%)\n df use-def / def-use chains        :   0.19 (  0%)   0.03 (  2%)   0.24 (  1%)     0  (  0%)\n df reg dead/unused notes           :   0.14 (  0%)   0.01 (  1%)   0.13 (  0%)  1474k (  0%)\n register information               :   0.05 (  0%)   0.00 (  0%)   0.05 (  0%)     0  (  0%)\n alias analysis                     :   0.10 (  0%)   0.00 (  0%)   0.10 (  0%)  3858k (  1%)\n alias stmt walking                 :   0.77 (  2%)   0.04 (  3%)   0.77 (  2%)    23k (  0%)\n register scan                      :   0.01 (  0%)   0.00 (  0%)   0.03 (  0%)    76k (  0%)\n rebuild jump labels                :   0.04 (  0%)   0.01 (  1%)   0.02 (  0%)     0  (  0%)\n preprocessing                      :   0.13 (  0%)   0.07 (  5%)   0.23 (  1%)  9639k (  2%)\n lexical analysis                   :   0.10 (  0%)   0.11 (  8%)   0.25 (  1%)     0  (  0%)\n parser (global)                    :   0.03 (  0%)   0.05 (  4%)   0.05 (  0%)    11M (  3%)\n parser function body               :   0.44 (  1%)   0.13 ( 10%)   0.53 (  1%)    11M (  3%)\n parser inl. func. body             :   0.29 (  1%)   0.02 (  2%)   0.32 (  1%)  6100k (  1%)\n early inlining heuristics          :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)   521k (  0%)\n inline parameters                  :   0.02 (  0%)   0.01 (  1%)   0.04 (  0%)  1985k (  0%)\n integration                        :   0.10 (  0%)   0.03 (  2%)   0.10 (  0%)    13M (  3%)\n tree gimplify                      :   0.02 (  0%)   0.00 (  0%)   0.04 (  0%)    10M (  2%)\n tree CFG construction              :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)  3090k (  1%)\n tree CFG cleanup                   :   0.34 (  1%)   0.00 (  0%)   0.33 (  1%)   330k (  0%)\n tree tail merge                    :   0.03 (  0%)   0.00 (  0%)   0.03 (  0%)   118k (  0%)\n tree VRP                           :   0.80 (  2%)   0.00 (  0%)   0.85 (  2%)  1366k (  0%)\n tree Early VRP                     :   3.05 (  8%)   0.00 (  0%)   3.08 (  8%)  1341k (  0%)\n tree copy propagation              :   0.07 (  0%)   0.00 (  0%)   0.09 (  0%)    22k (  0%)\n tree PTA                           :   0.22 (  1%)   0.02 (  2%)   0.30 (  1%)  1244k (  0%)\n tree SSA rewrite                   :   0.04 (  0%)   0.02 (  2%)   0.06 (  0%)    34M (  8%)\n tree SSA incremental               :   0.05 (  0%)   0.00 (  0%)   0.05 (  0%)  1785k (  0%)\n tree operand scan                  :   0.05 (  0%)   0.03 (  2%)   0.09 (  0%)  7960k (  2%)\n dominator optimization             :   0.41 (  1%)   0.00 (  0%)   0.48 (  1%)  2947k (  1%)\n backwards jump threading           :   0.36 (  1%)   0.00 (  0%)   0.32 (  1%)   483k (  0%)\n isolate eroneous paths             :   0.01 (  0%)   0.00 (  0%)   0.02 (  0%)  2488  (  0%)\n tree CCP                           :   0.20 (  1%)   0.01 (  1%)   0.14 (  0%)   369k (  0%)\n tree reassociation                 :   0.11 (  0%)   0.00 (  0%)   0.10 (  0%)   232  (  0%)\n tree PRE                           :   0.16 (  0%)   0.01 (  1%)   0.19 (  0%)  2975k (  1%)\n tree FRE                           :   0.25 (  1%)   0.02 (  2%)   0.27 (  1%)  2582k (  1%)\n tree code sinking                  :   0.02 (  0%)   0.00 (  0%)   0.01 (  0%)  1442k (  0%)\n tree linearize phis                :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)   631k (  0%)\n tree forward propagate             :   0.13 (  0%)   0.02 (  2%)   0.14 (  0%)   530k (  0%)\n tree conservative DCE              :   0.01 (  0%)   0.02 (  2%)   0.02 (  0%)  6744  (  0%)\n tree aggressive DCE                :   2.23 (  6%)   0.01 (  1%)   2.24 (  6%)  2083k (  0%)\n tree DSE                           :   0.16 (  0%)   0.00 (  0%)   0.13 (  0%)   103k (  0%)\n PHI merge                          :   0.04 (  0%)   0.01 (  1%)   0.05 (  0%)    31M (  7%)\n tree canonical iv                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)    35k (  0%)\n tree slp vectorization             :   0.42 (  1%)   0.02 (  2%)   0.43 (  1%)    37M (  9%)\n tree iv optimization               :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)   114k (  0%)\n tree SSA uncprop                   :   0.03 (  0%)   0.00 (  0%)   0.05 (  0%)     0  (  0%)\n tree strlen optimization           :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)   623k (  0%)\n tree modref                        :   0.02 (  0%)   0.00 (  0%)   0.02 (  0%)  1239k (  0%)\n dominance frontiers                :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)     0  (  0%)\n dominance computation              :   0.08 (  0%)   0.02 (  2%)   0.08 (  0%)     0  (  0%)\n out of ssa                         :   0.14 (  0%)   0.00 (  0%)   0.11 (  0%)   132k (  0%)\n expand vars                        :   0.00 (  0%)   0.01 (  1%)   0.00 (  0%)  1217k (  0%)\n expand                             :   0.19 (  0%)   0.00 (  0%)   0.21 (  1%)    26M (  6%)\n post expand cleanups               :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)   623k (  0%)\n forward prop                       :   0.11 (  0%)   0.05 (  4%)   0.20 (  0%)   234k (  0%)\n CSE                                :   0.59 (  2%)   0.01 (  1%)   0.62 (  2%)   646k (  0%)\n dead code elimination              :   0.07 (  0%)   0.00 (  0%)   0.04 (  0%)     0  (  0%)\n dead store elim1                   :   0.09 (  0%)   0.00 (  0%)   0.09 (  0%)   574k (  0%)\n dead store elim2                   :   0.15 (  0%)   0.00 (  0%)   0.20 (  0%)    10M (  2%)\n loop init                          :   0.01 (  0%)   0.01 (  1%)   0.06 (  0%)  3982k (  1%)\n loop fini                          :   0.01 (  0%)   0.00 (  0%)   0.02 (  0%)     0  (  0%)\n CPROP                              :   0.52 (  1%)   0.01 (  1%)   0.56 (  1%)  3124k (  1%)\n PRE                                :   0.18 (  0%)   0.01 (  1%)   0.20 (  0%)    13k (  0%)\n code hoisting                      :   0.04 (  0%)   0.00 (  0%)   0.02 (  0%)  8472  (  0%)\n CSE 2                              :   0.23 (  1%)   0.00 (  0%)   0.24 (  1%)   162k (  0%)\n branch prediction                  :   0.02 (  0%)   0.01 (  1%)   0.01 (  0%)   258k (  0%)\n combiner                           :   0.12 (  0%)   0.01 (  1%)   0.11 (  0%)  2055k (  0%)\n if-conversion                      :   0.03 (  0%)   0.00 (  0%)   0.01 (  0%)   164k (  0%)\n integrated RA                      :   0.67 (  2%)   0.03 (  2%)   0.72 (  2%)    23M (  5%)\n LRA non-specific                   :   0.30 (  1%)   0.00 (  0%)   0.31 (  1%)    10M (  2%)\n LRA virtuals elimination           :   0.06 (  0%)   0.00 (  0%)   0.06 (  0%)    12M (  3%)\n LRA reload inheritance             :   0.05 (  0%)   0.00 (  0%)   0.04 (  0%)   414k (  0%)\n LRA create live ranges             :   0.12 (  0%)   0.00 (  0%)   0.14 (  0%)   124k (  0%)\n LRA hard reg assignment            :   0.04 (  0%)   0.00 (  0%)   0.02 (  0%)     0  (  0%)\n LRA rematerialization              :   0.34 (  1%)   0.00 (  0%)   0.34 (  1%)     0  (  0%)\n reload CSE regs                    :   4.15 ( 11%)   0.00 (  0%)   4.10 ( 10%)    12M (  3%)\n ree                                :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)  1144  (  0%)\n thread pro- & epilogue             :   0.05 (  0%)   0.00 (  0%)   0.03 (  0%)   674k (  0%)\n if-conversion 2                    :   0.02 (  0%)   0.00 (  0%)   0.02 (  0%)  3864  (  0%)\n combine stack adjustments          :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)   168  (  0%)\n peephole 2                         :   0.11 (  0%)   0.00 (  0%)   0.10 (  0%)    11M (  3%)\n hard reg cprop                     :   0.05 (  0%)   0.02 (  2%)   0.04 (  0%)    22k (  0%)\n scheduling 2                       :   4.07 ( 10%)   0.04 (  3%)   4.11 ( 10%)   662k (  0%)\n machine dep reorg                  :   0.15 (  0%)   0.00 (  0%)   0.16 (  0%)    57k (  0%)\n reorder blocks                     :   0.03 (  0%)   0.00 (  0%)   0.01 (  0%)   581k (  0%)\n shorten branches                   :   0.06 (  0%)   0.00 (  0%)   0.07 (  0%)     0  (  0%)\n final                              :   0.16 (  0%)   0.01 (  1%)   0.18 (  0%)  5273k (  1%)\n variable output                    :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)   290k (  0%)\n symout                             :   0.07 (  0%)   0.00 (  0%)   0.10 (  0%)    15M (  4%)\n variable tracking                  :   3.63 (  9%)   0.01 (  1%)   3.57 (  9%)    25M (  6%)\n var-tracking dataflow              :   4.43 ( 11%)   0.01 (  1%)   4.41 ( 11%)    39k (  0%)\n var-tracking emit                  :   4.39 ( 11%)   0.00 (  0%)   4.43 ( 11%)  3245k (  1%)\n if to switch conversion            :   0.00 (  0%)   0.00 (  0%)   0.01 (  0%)     0  (  0%)\n straight-line strength reduction   :   0.00 (  0%)   0.00 (  0%)   0.02 (  0%)   920  (  0%)\n access analysis                    :   0.11 (  0%)   0.00 (  0%)   0.13 (  0%)  3360  (  0%)\n rest of compilation                :   0.19 (  0%)   0.06 (  5%)   0.26 (  1%)  1587k (  0%)\n remove unused locals               :   0.05 (  0%)   0.01 (  1%)   0.03 (  0%)     0  (  0%)\n address taken                      :   0.03 (  0%)   0.00 (  0%)   0.03 (  0%)     0  (  0%)\n rebuild frequencies                :   0.01 (  0%)   0.00 (  0%)   0.00 (  0%)    13k (  0%)\n repair loop structures             :   0.01 (  0%)   0.00 (  0%)   0.01 (  0%)   632  (  0%)\n TOTAL                              :  39.01          1.30         40.30          436M\n```\n</details>\n\nFor clang-20, what sticks out is this:\n```\n                          Pass execution timing report\n===-------------------------------------------------------------------------===\n  Total Execution Time: 17.0576 seconds (17.0556 wall clock)\n\n   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---\n  13.7299 ( 81.1%)   0.0075 (  6.2%)  13.7374 ( 80.5%)  13.7376 ( 80.5%)  SimplifyCFGPass\n...\n                          Pass execution timing report\n===-------------------------------------------------------------------------===\n  Total Execution Time: 45.4912 seconds (45.7500 wall clock)\n\n   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---\n  28.7357 ( 63.8%)   0.0028 (  0.7%)  28.7385 ( 63.2%)  28.9759 ( 63.3%)  Control Flow Optimizer\n...\n                               Clang time report\n===-------------------------------------------------------------------------===\n  Total Execution Time: 63.6330 seconds (63.8906 wall clock)\n\n   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---\n  45.2522 ( 71.8%)   0.4575 ( 72.7%)  45.7098 ( 71.8%)  45.9699 ( 72.0%)  Machine code generation\n  17.0443 ( 27.1%)   0.1370 ( 21.8%)  17.1813 ( 27.0%)  17.1801 ( 26.9%)  Optimizer\n```\n",
            "created_at": "2025-09-30T20:04:04Z",
            "html_url": "https://github.com/cython/cython/issues/7171#issuecomment-3353619237",
            "id": 3353619237,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7171",
            "node_id": "IC_kwDOABDGAc7H5Csl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3353619237/reactions"
            },
            "updated_at": "2025-09-30T20:04:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3353619237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the problem is the function locals. We use `cython.inline()` to implement a compiled `exec()` here, which generates all code in a function body. That creates temp variables for all 500 def-functions that this test defines in order to mostly just test the parser, then tests all of them for NULL and puts them into the `locals()` dict that it returns, and finally conditionally xdecrefs all of them. That's a ton of local variables and conditional code in one huge >8100 lines C function. With all the conditions in place the C compiler clearly takes ages to decide how to optimise this.\n\nNot sure what to do here. We could make the test work better by replacing `exec()` with something that only exercises the Cython translation, although that won't make the general problem go away. It seems a somewhat hypothetical problem, though, unless users actually generate Cython code like this.",
            "created_at": "2025-09-30T20:15:19Z",
            "html_url": "https://github.com/cython/cython/issues/7171#issuecomment-3353655184",
            "id": 3353655184,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7171",
            "node_id": "IC_kwDOABDGAc7H5LeQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3353655184/reactions"
            },
            "updated_at": "2025-09-30T20:15:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3353655184",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`cython.inline`'s decision to put everything in a function scope is not great for use in tests. Although probably OK for its main use.  I don't know if it'd be any better in a global scope though - it might not look too different.\n\nI tend to agree it's not worth worrying too much about the general problem unless we start getting specific real-world issues.",
            "created_at": "2025-09-30T21:26:03Z",
            "html_url": "https://github.com/cython/cython/issues/7171#issuecomment-3353857116",
            "id": 3353857116,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7171",
            "node_id": "IC_kwDOABDGAc7H58xc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3353857116/reactions"
            },
            "updated_at": "2025-09-30T21:26:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3353857116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7171/comments",
    "created_at": "2025-09-26T04:01:07Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-09-26T04:01:08Z",
            "event": "labeled",
            "id": 19933435490,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc7N-fCtzwAAAASkIBZi",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/19933435490"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-09-26T04:01:08Z",
            "event": "labeled",
            "id": 19933435503,
            "label": {
                "color": "444444",
                "name": "Testing"
            },
            "node_id": "LE_lADOABDGAc7N-fCtzwAAAASkIBZv",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/19933435503"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7171/events",
    "html_url": "https://github.com/cython/cython/issues/7171",
    "id": 3455709357,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558326,
            "name": "Testing",
            "node_id": "MDU6TGFiZWw0MjU1NTgzMjY=",
            "url": "https://api.github.com/repos/cython/cython/labels/Testing"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7171/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7N-fCt",
    "number": 7171,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7171/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7171/timeline",
    "title": "[BUG] \"test_coroutines_pep492\" extremely slow on macos",
    "type": null,
    "updated_at": "2025-09-30T21:26:03Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7171",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    }
}