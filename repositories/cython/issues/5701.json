{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nPip added build isolation, and sadly this broke painless source code dependencies for Cython for cross-project `.pxd` import because now every such dependency needs to be fully built (which if it's Cython can take forever) *again* for each install due to build isolation. Pip has also decided that build isolation is always force-enabled for all packages now, so this makes it impossible to make a Cython package depend on another Cython package for `.pxd` import without causing the user potentially really extreme and untenable build times. There needs to be a way to do this that works in practice, more concretely, how to specify a Cython dep in `pyproject.toml` as a build dependency in a way where the package is put in place for import mechanisms to find it but isn't actually built.\r\n\r\nFrom my previous interactions with the pip developers they're pretty clueless and overwhelmed with finding any way to address this and just won't, so this might require some pushing and suggestions from the Cython project side.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n1. Make two packages that can be installed via setuptools `setup.py` or similar. One of them, let's call it package A, should have `.pxd` packages that end up being installed (via `MANIFEST.in` or such) into where the final module folder then is in site packages or alike.\r\n\r\n2. Make the other package, package B, then depend on package A by 1. adding to its `setup.py` a mechanism that uses python's standard mechanisms, currently this would be importlib's `importlib.util.find_spec` I believe, to locate package A, then 2. use `cythonize`'s `include_path` option to specify that as a search path for `.pxd` files, then 3. `cimport` some `.pxd` from package A in package B somewhere. Please note you might run into #2886 and somehow need to work around that if your project also uses `.pyx`/`.pxd` for the `__init__.pyx` main module file.\r\n\r\n3. You'll find that you'll need to add package A to package B's `pyproject.toml` as a build dependency or it won't be found with build isolation enabled. But that will also cause package A to be built even when the build may take hours (that's not an exaggeration for what I've run into on some devices). You'll probably also find out like me that there doesn't seem to be any mechanism to avoid this, e.g. some \"this is a build dependency but don't build it itself\" flag in `pyproject.toml`. You'll find that otherwise you'll need to tell end users to use `--no-build-isolation` which they won't understand why they need it, and also it might cause other issues down the line, like less reproducible and clean builds hiding other bugs, etc.\r\n\r\n### Expected behaviour\r\n\r\nThere should be an obvious way how to specify a Cython project as a build dependency in `pyproject.toml` with some standardized flag that e.g. makes all `cythonize` calls a no-op by default or something, or something else that requires as little modifications to be widely supported by Cython projects as possible.\r\n\r\n### OS\r\n\r\nAll OSes affected\r\n\r\n### Python version\r\n\r\nAll Python versions affected if your pip is new enough to enforce build isolation\r\n\r\n### Cython version\r\n\r\nAll Cython versions affected\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": "2023-09-21T10:10:16Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "(Maybe I should note the kind of severity on this. Basically I sunk literal days into trying to make my project not a pain to install that I planned to open-source, a pretty big multiple thousands of lines graphical program of a few years, and I failed. Because I don't want to require pages of extra ways for a normal user to even try to get it running, I gave up on it for now, waiting for the Cython and pip ecosystem to somehow figure out a non-painful way to do this for both the dev and the user where I feel comfortable subjecting others to my code and the process of getting it to run.)",
            "created_at": "2023-09-14T18:10:02Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1719917991",
            "id": 1719917991,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mg92n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1719917991/reactions"
            },
            "updated_at": "2023-09-14T18:10:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1719917991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. Let me try to understand what goes wrong here.\r\n\r\n> that will also cause package A to be built even when the build may take hours\r\n\r\nDoesn't pip install the other project as wheel? Or does this only apply to packages that do not provide wheels (for a given architecture)?",
            "created_at": "2023-09-14T18:37:38Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1719954319",
            "id": 1719954319,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mhGuP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1719954319/reactions"
            },
            "updated_at": "2023-09-14T18:37:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1719954319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the response! As for wheels, yeah, this is my own stuff and I don't know how to provide wheels. :laughing:  It's also not on pypi. And wheels wouldn't solve it for my own installs of the dev versions to debug stuff, I think.\r\n\r\nAlso, pip hates cross compilation from last time I've tried it since it doesn't seem to understand when it's pointed at using a cross compiler and can't be made to, if I'm not entirely misremembering, which at least from what I've gathered they also intend never to solve (which I think combined with build isolation is a mistake but that's a whole other can of worms and less so connected to Cython), so that alone would get in the way of me ever reliably providing wheels.\r\n\r\nBut if all that means as a result people can't reasonably install it at all without facing potentially hours of extra time and hangs that I really can't put up with myself either when working on it, that's not really a way I can ever dare release this to others. Right now you basically need to specify `--no-build-isolation` and if you don't it breaks, but no regular user is going to understand that, so this is kind of untenable.",
            "created_at": "2023-09-14T18:45:56Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1719965064",
            "id": 1719965064,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mhJWI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1719965064/reactions"
            },
            "updated_at": "2023-09-14T18:48:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1719965064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Wheels are relatively easy to build with cibuildwheel, e.g. on a Github Actions workflow. See [what Cython does](https://github.com/cython/cython/blob/master/.github/workflows/wheels.yml), for example. You can also cross-compile them for Arm64 and others. That would probably solve your problem, because installing wheels is quick.\r\n\r\nAs for a development workflow, maybe you can get away with not making your own packages (for which you have a local checkout) build dependencies of your project at all, but to just include their pxd directories in your PYTHONPATH, so that Cython can pick them up? You don't really have to build a package with pip while you are locally working on it.",
            "created_at": "2023-09-14T20:06:38Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1720070644",
            "id": 1720070644,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mhjH0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1720070644/reactions"
            },
            "updated_at": "2023-09-14T20:06:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1720070644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the idea! I think the problem is that the `setup.py` would need to do that, right? So how would I do that in some friendly maintainable way when I just have the `requirements.txt` entry to pick up?\r\n\r\nI'm not looking to find yet another barely maintainable hack (like the one to work around #2886 ) that for this one even has the potential to make it unbuildable for others. Basically if someone gets it from Github or Gitlab via pip, the install should then work as intended, otherwise I don't see a point in even publishing it, I would consider that a broken package.",
            "created_at": "2023-09-14T20:11:34Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1720077007",
            "id": 1720077007,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mhkrP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1720077007/reactions"
            },
            "updated_at": "2023-09-14T20:14:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1720077007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Others will probably not have your other packages checked out to build together with those locally. If you provide binary wheels, your users (and collaborators on each single package) will be fine. Probably you as well, as long as you're not making changes to the pxd files compared to what the binary wheels include. If you make change there, you'll have to point Cython to the local directory where you keep the updated versions.",
            "created_at": "2023-09-14T20:23:40Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1720093597",
            "id": 1720093597,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mhoud",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1720093597/reactions"
            },
            "updated_at": "2023-09-14T20:24:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1720093597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "So is the answer really \"sorry, the package just can't be built normally from source then\"? :cry: \r\n\r\nAs an additional note, I think expecting everyone in this situation to always provide wheels is also not a good way out. This is a pretty niche project so I'll probably not keep up well with releases, but that doesn't mean I want people to have huge trouble getting it to install instead.",
            "created_at": "2023-09-14T20:31:31Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1720105820",
            "id": 1720105820,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mhrtc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1720105820/reactions"
            },
            "updated_at": "2023-09-14T20:32:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1720105820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "NONE",
            "body": "I thought about this some more, and I think the main problem is that I don't understand why pip rebuilds something from scratch if it's already built and in the site packages. Doing so causes two big issues: 1. it risks for Cython in particular to rebuild with the wrong and not exact matching version causing crashes and corruption if there's e.g. `.pxd` importing going on but then with a binary incompatible variant, 2. it wastes lots of time even for non-Cython stuff, 3. it doesn't achieve anything of use if it was already just built or I can't see what. (There probably is something achieved by this but I just don't get why yet.)\r\n\r\nLike hypothetically, why couldn't it generate a wheel locally (I think it actually does, usually) when that dependency is first installed into site packages, and then just reuse that wheel without rebuilding when inside the build isolation venv for the next thing depending on it? I don't understand that, the blind refetching and rebuilding when the version needed already sits around in the local site packages ready for use.\r\n\r\nI'm probably missing something, but it's all really weird and cumbersome. But hacking around to search `.pxd` from a counter-intuitive third location that is neither `requirements.txt` or `pyproject.toml` manually sure doesn't sound like the correct way to deal with it.\r\n\r\nAnd my apologies for being so confused!",
            "created_at": "2023-09-15T00:11:43Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1720311085",
            "id": 1720311085,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mid0t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1720311085/reactions"
            },
            "updated_at": "2023-09-15T00:14:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1720311085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Not really a cython issue, maybe we should continue this on the mailing list and not here.\r\n\r\npip is a package manager. It passes the build task on to a build backend, which in your case is setuptools/setup.py. When you tell pip to invoke the backend to build your package, it wants to do so in a reproducible way. That means creating an isolated environment to build in. (You can override this with `--no-build-isolation`). Now if your package has dependencies, and those dependencies are wheels, and your internet connection is OK, this isolation is not that painful: it will download and install a handful of wheels (which pip even caches locally to make it faster next time) and then pass the build task off to the build backend. But if you do not have wheels, pip, as a package manager, will look at the dependencies and build each one separately from source. You cannot really tell pip \"hey, this is a dependency but it is not a package\". If you want something like that, maybe you should not declare dependencies in your pyproject.toml. There are other choices:\r\n- add them to your source tree as a submodule\r\n- use a build system that knows about dependencies like bazel\r\n\r\nSo you have to choose: if you use pip to manage your dependencies, you have to buy into their model. I use \"buy\" intentionally: there is a cost to using the standard.",
            "created_at": "2023-09-15T05:05:23Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1720682673",
            "id": 1720682673,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mj4ix",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1720682673/reactions"
            },
            "updated_at": "2023-09-15T05:05:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1720682673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You cannot really tell pip \"hey, this is a dependency but it is not a package\".\r\n\r\nBut couldn't this be solved? All that would be needed is a `pyproject.toml` flag that tells pip that it should still fetch this, place it somewhere, but just not build it. Or alternatively, to make it not rebuild it if it's already in the site packages but simply copy it over. Or maybe teach setuptools to fetch something picked from a `requirements.txt` line of choice into a folder alike how pip would do it? That's all solutions I can think of.\r\n\r\nThe problem with submodules is it won't match what you have in site packages, and also it won't necessarily match what's in `requirements.txt` or `pyproject.toml`, hence yet again introducing a third confusing non-standard place to configure this, risking using the wrong version and a build with binary incompatible `.pxd` and a whole mess with crashes etc. for people who were predictably caught off-guard.\r\n\r\nThe problem with buying into their model is that pip used to not have build isolation, which is when I started this project. None of this used to be an issue. I honestly currently regret a little using Python & Cython now given how things have developed, but it feels like a fixable state.\r\n\r\nI filed a ticket here because I just hoped Cython developers would have a better idea what exactly would be a good fix on the pip or setuptools side for this. My apologies if that wasn't useful.",
            "created_at": "2023-09-15T06:58:36Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1720774351",
            "id": 1720774351,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5mkO7P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1720774351/reactions"
            },
            "updated_at": "2023-09-20T22:59:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1720774351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "NONE",
            "body": "Basically, when I started this project setuptool's setup_requires was the way to go and there was no build isolation, and everything worked fine even for `.pxd` imports without hours of rebuilds and without using wheels or anything. Then all these changes happened, and suddenly there is no way to do this anymore, and I just feel like it renders Cython way less practical for huge projects. With how this situation is today, I wouldn't have jumped into Cython anymore, and I think that might be worth solving.",
            "created_at": "2023-09-20T22:59:13Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1728530003",
            "id": 1728530003,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nB0ZT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1728530003/reactions"
            },
            "updated_at": "2023-09-20T22:59:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1728530003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Where is the code to your project? Please open an issue there and ping me so we can continue the discussion somewhere else.",
            "created_at": "2023-09-21T04:15:26Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1728738681",
            "id": 1728738681,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nCnV5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1728738681/reactions"
            },
            "updated_at": "2023-09-21T04:15:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1728738681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "NONE",
            "body": "It's currently not set to public because I saw no point, given I currently don't see a way how to make it installable in a way the average pip user understands :woman_shrugging: (which is why I made this ticket here).\r\n\r\nMaybe I'm wrong, but I don't think this discussion is very dependent on the actual code. I think all projects that consist of 2+ larger Cython packages that take a while to build where one larger package does `.pxd` cimports from another larger one will run into this issue. Even with wheels this isn't fixable for building dev versions.",
            "created_at": "2023-09-21T08:47:58Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1729130131",
            "id": 1729130131,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nEG6T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1729130131/reactions"
            },
            "updated_at": "2023-09-21T08:47:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1729130131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Even with wheels this isn't fixable for building dev versions.\r\n\r\nIt sounds to me like the only issue that you have is local development. As soon as you release a public version with wheels, the problem goes away.\r\n\r\nI don't currently see how we could help you here, so I'll close this ticket. If we find new ideas of what Cython specifically could do to improve the in-development situation of interrelated projects, it's fine to continue the discussion here. Or open a new ticket.",
            "created_at": "2023-09-21T10:10:16Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1729268797",
            "id": 1729268797,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nEow9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1729268797/reactions"
            },
            "updated_at": "2023-09-21T10:10:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1729268797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, I was hoping you could contact the pip devs and figure out something that works for both sides. I think it's greatly harming the Cython ecosystem, I can't be the only one who finds this pretty untenable for daily work.\r\n\r\n>  As soon as you release a public version with wheels, the problem goes away.\r\n\r\nThat really seems like window dressing, development work never stops. \"Local development\" being the \"only\" issue is a pretty massive issue. Also, small headcount projects simply may not have the resources for a CI to make wheels for all platforms it's used on, so then it inevitably impacts the user as well.",
            "created_at": "2023-09-21T10:12:56Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1729272978",
            "id": 1729272978,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nEpyS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1729272978/reactions"
            },
            "updated_at": "2023-09-21T10:17:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1729272978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think all projects that consist of ...\r\n\r\nDo you have supporting examples of such projects? A counter example: SciPy [cimports numpy](https://github.com/scipy/scipy/blob/38410650cc0b0ffb058ec57b154a0bd688db8b8d/scipy/io/matlab/_mio_utils.pyx#L6), and successfully submits NumPy issues based on developer workflows when NumPy breaks their project, which is often.\r\n\r\n> I can't be the only one who finds this pretty untenable for daily work\r\n\r\nSo far it seems so? Without code, it is very difficult to help you or even understand your situation. Feel free to invite me (mattip on github and codeberg) to your private repo so we can continue the conversation there, I can sign an NDA if needed.\r\n\r\n> small headcount projects simply may not have the resources for a CI to make wheels ..\r\n\r\n[cibuildwheel](https://cibuildwheel.readthedocs.io/en/stable/) goes a long way to making this work across many CI providers, and dovetails well with the [meson](https://mesonbuild.com/) build system plus ninja to build large cython projects like SciPy or Pandas in parallel. We recently converted NumPy from setup.py/setuptools to meson, as did Scipy, and are happy with the results: build time decreased by at least a factor of 5 if not more.",
            "created_at": "2023-09-21T11:28:08Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1729379195",
            "id": 1729379195,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nFDt7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1729379195/reactions"
            },
            "updated_at": "2023-09-21T11:28:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1729379195",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Could you provide an example of reproducing this issue by simply running `git clone` and `pip install`? AFAIK, [pip will try to use cached wheels by default](https://pip.pypa.io/en/latest/topics/caching/). If nothing is going wrong, pip shouldn't build the dependency twice.",
            "created_at": "2023-09-21T11:30:25Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1729382455",
            "id": 1729382455,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nFEg3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1729382455/reactions"
            },
            "updated_at": "2023-09-21T11:30:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1729382455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53637421?v=4",
                "events_url": "https://api.github.com/users/GalaxySnail/events{/privacy}",
                "followers_url": "https://api.github.com/users/GalaxySnail/followers",
                "following_url": "https://api.github.com/users/GalaxySnail/following{/other_user}",
                "gists_url": "https://api.github.com/users/GalaxySnail/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GalaxySnail",
                "id": 53637421,
                "login": "GalaxySnail",
                "node_id": "MDQ6VXNlcjUzNjM3NDIx",
                "organizations_url": "https://api.github.com/users/GalaxySnail/orgs",
                "received_events_url": "https://api.github.com/users/GalaxySnail/received_events",
                "repos_url": "https://api.github.com/users/GalaxySnail/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GalaxySnail/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GalaxySnail/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GalaxySnail"
            }
        },
        {
            "author_association": "NONE",
            "body": "> AFAIK, [pip will try to use cached wheels by default](https://pip.pypa.io/en/latest/topics/caching/). If nothing is going wrong, pip shouldn't build the dependency twice.\r\n\r\nAh, yeah, that's an important piece of info, that would certainly explain why nobody else is complaining. For me somehow that doesn't work with my current setup.\r\n\r\nThere's certainly no NDA needed, I just need to make the time to clean up the copyright and license notices to set it public. And/or make a minimal example project to reproduce issue, since apparently it works for everyone else.",
            "created_at": "2023-09-21T11:36:03Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1729390269",
            "id": 1729390269,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nFGa9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1729390269/reactions"
            },
            "updated_at": "2023-09-21T11:36:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1729390269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Installing directly from a source distribution will make pip build a wheel, regardless of whether there is a matching cached wheel.\r\n\r\n(from https://pip.pypa.io/en/latest/topics/caching/ )\r\n\r\nI think this might be the problem. I'm always referring to the git repository since this package isn't on pypi, I assume from the quote that pip then just doesn't cache which matches what I'm seeing. Is there a way to fix that? Addendum: the concrete `requirements.txt` line to refer to the dependency is like: `mypackage @ https://github.com/ell1e/mypackage/archive/master.zip`, and the `setup.py` reformats this for `install_requires` to the format of: `mypackage @ https://github.com/ell1e/mypackage/archive/master.zip#egg=mypackage`, and to `setup.py`'s `dependency_links` it adds an entry of `https://github.com/ell1e/mypackage/archive/master.zip#egg=mypackage`",
            "created_at": "2023-09-21T12:13:46Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1729447913",
            "id": 1729447913,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5nFUfp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1729447913/reactions"
            },
            "updated_at": "2023-09-21T12:20:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1729447913",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have as a consequence of this already decided a while ago that the Python ecosystem, with its combination of slowness and Cython becoming untenable with standard tooling, is better left behind. But it's sad, there's a lot of years of code and work that others could benefit from wasted. So I'm still hoping this will be resolved, but I can't say that I'm particularly positive. There seems to be a bit of apathy from all sides about this problem.",
            "created_at": "2023-10-11T18:36:05Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-1758276817",
            "id": 1758276817,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc5ozSzR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1758276817/reactions"
            },
            "updated_at": "2023-10-11T18:36:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1758276817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        },
        {
            "author_association": "NONE",
            "body": "For what it's worth:\r\n\r\n> So far it seems so?\r\n\r\nIt seems many devs are generally are fed up with where pip is moving, at the very least, from those I talk to. I'm glad that I'm now heading elsewhere myself. I'm hoping some time the packaging situation of Python will improve, but in the last years it mostly seemed to only get worse and worse which is a shame.",
            "created_at": "2024-03-22T08:43:03Z",
            "html_url": "https://github.com/cython/cython/issues/5701#issuecomment-2014622633",
            "id": 2014622633,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5701",
            "node_id": "IC_kwDOABDGAc54FLOp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2014622633/reactions"
            },
            "updated_at": "2024-03-22T08:43:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2014622633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
                "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
                "followers_url": "https://api.github.com/users/ell1e/followers",
                "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
                "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ell1e",
                "id": 64124388,
                "login": "ell1e",
                "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
                "organizations_url": "https://api.github.com/users/ell1e/orgs",
                "received_events_url": "https://api.github.com/users/ell1e/received_events",
                "repos_url": "https://api.github.com/users/ell1e/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ell1e"
            }
        }
    ],
    "comments": 21,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5701/comments",
    "created_at": "2023-09-14T11:29:10Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-09-21T10:10:16Z",
            "event": "closed",
            "id": 10433216413,
            "node_id": "CE_lADOABDGAc5xCE9yzwAAAAJt3j-d",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10433216413"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5701/events",
    "html_url": "https://github.com/cython/cython/issues/5701",
    "id": 1896370034,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5701/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5xCE9y",
    "number": 5701,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5701/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5701/timeline",
    "title": "[BUG] pip broke painless source code dependencies for Cython, there needs to be a way to do this that works in practice",
    "updated_at": "2024-03-22T08:43:04Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5701",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/64124388?v=4",
        "events_url": "https://api.github.com/users/ell1e/events{/privacy}",
        "followers_url": "https://api.github.com/users/ell1e/followers",
        "following_url": "https://api.github.com/users/ell1e/following{/other_user}",
        "gists_url": "https://api.github.com/users/ell1e/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ell1e",
        "id": 64124388,
        "login": "ell1e",
        "node_id": "MDQ6VXNlcjY0MTI0Mzg4",
        "organizations_url": "https://api.github.com/users/ell1e/orgs",
        "received_events_url": "https://api.github.com/users/ell1e/received_events",
        "repos_url": "https://api.github.com/users/ell1e/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ell1e/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ell1e/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ell1e"
    }
}