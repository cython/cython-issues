{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\nRedeclaring variable in pure python mode is behaving not consistently with cython code. E.g. in cython following code raises error:\r\n```cython\r\ndef foo():\r\n    cdef float a = 3.0\r\n    cdef int a = 1\r\n    print(a)\r\n```\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n# cdef int a = 1\r\n# cdef int a = 2.0\r\n\r\ndef foo():\r\n    cdef float a = 3.0\r\n    cdef int a = 1\r\n             ^\r\n------------------------------------------------------------\r\n\r\nbug.pyx:8:13: 'a' redeclared\r\n```\n\n### Code to reproduce the behaviour:\n\n```cython\r\ndef foo():\r\n    a: cython.float = 3.0\r\n    a: cython.int = 1\r\n    print(a)\r\n```\r\n\r\n```python\r\n$ python\r\nPython 3.9.12 (main, May  8 2022, 18:05:13)\r\n[Clang 12.0.0 (clang-1200.0.32.29)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import bug\r\n>>> bug.foo()\r\n1.0\r\n>>>\r\n```\n\n### Expected behaviour\n\nThere are two possible solutions:\r\n1. compiling code will fail with error as in cython code\r\n2. code prints value `1`\n\n### Environment\n\nOS: macOS\r\nPython version 3.9.12\r\nCython version master\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think that's expected. It's legal (if poor) Python code so I think it'll just ignore contradictory annotations. I'd expect a warning though",
            "created_at": "2022-10-03T07:26:03Z",
            "html_url": "https://github.com/cython/cython/issues/5059#issuecomment-1265041091",
            "id": 1265041091,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5059",
            "node_id": "IC_kwDOABDGAc5LZv7D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1265041091/reactions"
            },
            "updated_at": "2022-10-03T07:26:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1265041091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think that's expected. It's legal (if poor) Python code so I think it'll just ignore contradictory annotations. I'd expect a warning though\r\n\r\nFair enough but in this case the code should print `1` not `1.0`. E.g. in python you got:\r\n\r\n```python\r\n>>> a: float = 1.0\r\n>>> a: int = 1\r\n>>> print(a)\r\n1\r\n```\r\n\r\nMy personal opinion: I think it is better if cython will be more strict than python -> not allowing redeclaring variables rather then generating code which behaves in a way that user does not expect.",
            "created_at": "2022-10-03T09:15:45Z",
            "html_url": "https://github.com/cython/cython/issues/5059#issuecomment-1265158968",
            "id": 1265158968,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5059",
            "node_id": "IC_kwDOABDGAc5LaMs4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1265158968/reactions"
            },
            "updated_at": "2022-10-03T09:19:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1265158968",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This reminded me of unfinished #3984, where the conclusion was that overriding a node with another node should warn.",
            "created_at": "2022-10-03T14:15:55Z",
            "html_url": "https://github.com/cython/cython/issues/5059#issuecomment-1265510230",
            "id": 1265510230,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5059",
            "node_id": "IC_kwDOABDGAc5LbidW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1265510230/reactions"
            },
            "updated_at": "2022-10-03T14:15:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1265510230",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Fair enough but in this case the code should print `1` not `1.0`.\r\n\r\nYou're right - I missed that detail.\r\n\r\nThe general view we take on annotations is \"they're not written specifically for Cython so Cython should use them if possible but not error if they're confusing\". That's different from a \"cdef\" statement which is definitely written for Cython.\r\n\r\nSo my view is that `a` should ideally end up untyped in your example. But it looks like that isn't what actually happens.",
            "created_at": "2022-10-03T16:53:59Z",
            "html_url": "https://github.com/cython/cython/issues/5059#issuecomment-1265748441",
            "id": 1265748441,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5059",
            "node_id": "IC_kwDOABDGAc5LccnZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1265748441/reactions"
            },
            "updated_at": "2022-10-03T16:53:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1265748441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think it is better if cython will be more strict than python -> not allowing redeclaring variables rather then generating code which behaves in a way that user does not expect.\r\n\r\nI and probably others always thought of cython as some kind of superset of python, is it a good reson to break this?\r\nIt feels like cython always tries to follow the idea if it's like that in python, we do it the same way\r\n\r\n> So my view is that a should ideally end up untyped in your example. But it looks like that isn't what actually happens\r\n\r\nYeah, this is the real bug in here",
            "created_at": "2022-10-03T22:05:31Z",
            "html_url": "https://github.com/cython/cython/issues/5059#issuecomment-1266115884",
            "id": 1266115884,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5059",
            "node_id": "IC_kwDOABDGAc5Ld2Us",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1266115884/reactions"
            },
            "updated_at": "2022-10-03T22:08:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1266115884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > I think it is better if cython will be more strict than python -> not allowing redeclaring variables rather then generating code which behaves in a way that user does not expect.\r\n> \r\n> I and probably others always thought of cython as some kind of superset of python, is it a good reson to break this? It feels like cython always tries to follow the idea if it's like that in python, we do it the same way\r\n\r\n[PEP 526](https://peps.python.org/pep-0526/#global-and-local-variable-annotations) has this to say on the matter:\r\n\r\n```\r\nDuplicate type annotations will be ignored. However, static type checkers\r\nmay issue a warning for annotations of the same variable by a different type:\r\n\r\na: int\r\na: str  # Static type checker may or may not warn about this.\r\n```\r\n\r\nSo, in Python, this is a warning at best.\r\n\r\nHowever, when you run Cython on typed code, you are not just saying, \"please compile this Python code for me\", you are also explicitly enabling static typing. I think that explicit step of a user from \"run this Python code with type annotations ignored at runtime\" to \"compile this Python code with static typing\" is enough of a reason to let Cython reject contradicting type declarations with a compile error. This should not just be a warning, even if Cython does not completely understand the annotation yet.\r\n\r\nIf we encounter conflicting type annotations in user code, it seems more likely (to me) that it's a bug than intention. Intuitively, if you want different types for a variable, then why do you use the same variable name in the first place? The differently typed cases are probably really referring to different things that are worth having different names.",
            "created_at": "2022-10-04T05:44:42Z",
            "html_url": "https://github.com/cython/cython/issues/5059#issuecomment-1266424589",
            "id": 1266424589,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5059",
            "node_id": "IC_kwDOABDGAc5LfBsN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1266424589/reactions"
            },
            "updated_at": "2022-10-04T05:45:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1266424589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This nice thing about @scoder's interpretation (vs mine) is that it's probably much easier to implement the error message for it than it'd be to diagnose multiple conflicting annotations and revert back to untyped.",
            "created_at": "2022-10-04T17:00:59Z",
            "html_url": "https://github.com/cython/cython/issues/5059#issuecomment-1267297656",
            "id": 1267297656,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5059",
            "node_id": "IC_kwDOABDGAc5LiW14",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1267297656/reactions"
            },
            "updated_at": "2022-10-04T17:00:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1267297656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I personally prefer @scoder solution.",
            "created_at": "2022-10-04T19:12:18Z",
            "html_url": "https://github.com/cython/cython/issues/5059#issuecomment-1267466253",
            "id": 1267466253,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5059",
            "node_id": "IC_kwDOABDGAc5LjAAN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1267466253/reactions"
            },
            "updated_at": "2022-10-04T19:12:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1267466253",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5059/comments",
    "created_at": "2022-10-03T07:03:19Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-10-04T17:01:00Z",
            "event": "mentioned",
            "id": 7518488840,
            "node_id": "MEE_lADOABDGAc5TGmhgzwAAAAHAIwkI",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7518488840"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-10-04T17:01:00Z",
            "event": "subscribed",
            "id": 7518488850,
            "node_id": "SE_lADOABDGAc5TGmhgzwAAAAHAIwkS",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7518488850"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-10-04T19:12:18Z",
            "event": "mentioned",
            "id": 7519372171,
            "node_id": "MEE_lADOABDGAc5TGmhgzwAAAAHAMIOL",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7519372171"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-10-04T19:12:18Z",
            "event": "subscribed",
            "id": 7519372181,
            "node_id": "SE_lADOABDGAc5TGmhgzwAAAAHAMIOV",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7519372181"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5059/events",
    "html_url": "https://github.com/cython/cython/issues/5059",
    "id": 1394239584,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5059/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5TGmhg",
    "number": 5059,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5059/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5059/timeline",
    "title": "[BUG] Redeclaring variable in pure python mode is not raising error",
    "updated_at": "2022-10-04T19:12:18Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5059",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
        "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
        "followers_url": "https://api.github.com/users/matusvalo/followers",
        "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
        "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/matusvalo",
        "id": 827060,
        "login": "matusvalo",
        "node_id": "MDQ6VXNlcjgyNzA2MA==",
        "organizations_url": "https://api.github.com/users/matusvalo/orgs",
        "received_events_url": "https://api.github.com/users/matusvalo/received_events",
        "repos_url": "https://api.github.com/users/matusvalo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/matusvalo"
    }
}