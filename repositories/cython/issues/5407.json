{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Prepare to be candidate of standard library of Python\r\n\r\nCython is awesome project. Nowadays, almost all venv environment has Cython installed. As a result, for the demand aspect, almost everyone hope it becomes part of standard library in the future.\r\n\r\n# Suggestion of refactoring and improvement\r\n\r\n- The naming and style convention is not Pythonic. In python, all modules are supposed to be lower case. And so on.\r\n- There is tree root level modules in Cython, there are `cython`, `Cython` and `pyximport`. In my suggestion, provide single root level module named `cython` and all those stuff be sub-module of it.\r\n- Give user more control on importing pyx files. Currently, when want to import pyx file in normal python script. It need firstly `pyximport.install()` and then `pyximport.load_module(...)`, `pyximport.install()` is a global operation, there is too many side-effect for user who just want to import a single module which has only one cython function for acceleration. It would be nice to add some mechanism to load module without changing global configuration.\r\n- `distutils` will be removed in Python 3.12, Please consider to use `setuptools` and `packaging`.\r\n-  It would be Pythonic if make all filename, path-related variable and arguments `pathlib.Path` compatible. Currently, `pyximport` module's filename related stuff doesn't support `pathlib.Path` objects.\r\n- Make cython packaging related stuff support modern packaging tool (like poetry).\r\n- The last but not the least, drop support for Python 2.x , now, almost nobody use Python 2. If there is they can use Cython 0.x for their application. Python 2 historical legacy is too heavy for a project's development.\r\n\r\n\r\n# Some personal thought\r\n\r\nIt really cannot be imagined what the would will look like if Cython disappeared. If the upstream author use Cython to accelerate their project. I would be very happy. But if let me use Cython in my codebase, I would be hesitate. Due to the issue I mentioned above. I am very worried about whether it is long-term solution.\r\n\r\nPython is a glue language, what Cython done is making this glue stick items easier. I really hope Cython codebase become how PEP hope to be.\r\n\r\nEvery brilliant project is done by refactoring again and again.",
    "closed_at": "2023-04-26T13:38:45Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "@scoder , What is your opinion?",
            "created_at": "2023-04-26T04:59:00Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1522783564",
            "id": 1522783564,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5aw9VM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1522783564/reactions"
            },
            "updated_at": "2023-04-26T04:59:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1522783564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44539531?v=4",
                "events_url": "https://api.github.com/users/evan0greenup/events{/privacy}",
                "followers_url": "https://api.github.com/users/evan0greenup/followers",
                "following_url": "https://api.github.com/users/evan0greenup/following{/other_user}",
                "gists_url": "https://api.github.com/users/evan0greenup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/evan0greenup",
                "id": 44539531,
                "login": "evan0greenup",
                "node_id": "MDQ6VXNlcjQ0NTM5NTMx",
                "organizations_url": "https://api.github.com/users/evan0greenup/orgs",
                "received_events_url": "https://api.github.com/users/evan0greenup/received_events",
                "repos_url": "https://api.github.com/users/evan0greenup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/evan0greenup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/evan0greenup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/evan0greenup"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The issue tracker is not the place for general discussion. This should have been clear from the issue template used to open new issues here. I wonder how you missed that when opening this issue? Please use the mailing list for general discussion. But since you already asked ...\r\n\r\n> almost everyone hope it becomes part of standard library\r\n\r\nAs a NumPy maintainer, I view open source software and the base python differently. There is no special group of maintainers waiting for a package to enter the standard library in order to contribute to it, and no special funding process for making a package inside the standard library more lucrative than one outside it. Actually the opposite is true: once a package enters the standard library it is more difficult to make deep changes, its release cycle is tied to CPython's release cycle, and funding is now part of a larger CPython funding issue.\r\n\r\n> I am very worried about whether it is long-term solution\r\n\r\nCython has been around for quite a while, and has shown it can grow a small community of maintainers. What would ensure its future would be sustainable funding. If your project is using cython, or for that matter, any open source software, you should be funding its maintenance. Assuming you are not already, you can do so from the \"sponsor\" link at the top of this page, or by any of the means listed in the [documentation](https://cython.org/#donate). If you already are finding a way to contribute or to get your employer to contribute, then thanks!\r\n\r\nMany of the items on your \"suggestions\" list are in progress or have been discussed elsewhere. You might have more impact by splitting them into manageable tasks, looking in the issue tracker if any of them (like distutils or python2) have been discussed elsewhere, and either opening new issues or commenting on the existing ones.\r\n\r\n",
            "created_at": "2023-04-26T05:42:59Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1522816765",
            "id": 1522816765,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5axFb9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1522816765/reactions"
            },
            "updated_at": "2023-04-26T05:42:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1522816765",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mattip \r\n\r\n1. Whether become standard library is up to core developers. But being Pythonic is always good for a foundational library like Cython.\r\n\r\n2. I am neither doubt about the funding capability of Cython, nor using Cython for product construction. I just using for my hobby project. I just enjoy programming. The initial of Python project is also similar. The way I contribute to Cython will be code commits and feature enhancement to Cython. But first, the project need to make contributor feel comfortable to contribute with -- coding style and naming convention. A Upper Case module name really make me feel dizzy with class name, and sometimes really easy to accidentally instancing module for instance.  \r\n\r\n3. I just want Cython to become well-organized. ",
            "created_at": "2023-04-26T06:51:57Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1522878994",
            "id": 1522878994,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5axUoS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1522878994/reactions"
            },
            "updated_at": "2023-04-26T06:51:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1522878994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44539531?v=4",
                "events_url": "https://api.github.com/users/evan0greenup/events{/privacy}",
                "followers_url": "https://api.github.com/users/evan0greenup/followers",
                "following_url": "https://api.github.com/users/evan0greenup/following{/other_user}",
                "gists_url": "https://api.github.com/users/evan0greenup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/evan0greenup",
                "id": 44539531,
                "login": "evan0greenup",
                "node_id": "MDQ6VXNlcjQ0NTM5NTMx",
                "organizations_url": "https://api.github.com/users/evan0greenup/orgs",
                "received_events_url": "https://api.github.com/users/evan0greenup/received_events",
                "repos_url": "https://api.github.com/users/evan0greenup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/evan0greenup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/evan0greenup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/evan0greenup"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * The naming and style convention is not Pythonic. In python, all modules are supposed to be lower case. And so on.\r\n\r\nPEP 8 also says \"Some other good reasons to ignore a particular guideline: [...] To be consistent with surrounding code that also breaks it (maybe for historic reasons)\r\n \r\n> * There is tree root level modules in Cython, there are `cython`, `Cython` and `pyximport`. In my suggestion, provide single root level module named `cython` and all those stuff be sub-module of it.\r\n\r\nThey're kind different things though. The `cython` module is things we want users to access (e.g. decorators to control compiler options, type annotations). The `Cython` module is our own implementation - we don't want someone who's simply using the compiler to have access to all the compiler internals. `pyximport` is a separate tool to let people have quickly compile a module for development purposes.\r\n \r\n> * Give user more control on importing pyx files. Currently, when want to import pyx file in normal python script. It need firstly `pyximport.install()` and then `pyximport.load_module(...)`, `pyximport.install()` is a global operation, there is too many side-effect for user who just want to import a single module which has only one cython function for acceleration. It would be nice to add some mechanism to load module without changing global configuration.\r\n\r\nThe robust way to control importing pyx files is to write a setup script. `pyximport` is only intended to be a quick and dirty solution to help people in development.\r\n \r\n> * `distutils` will be removed in Python 3.12, Please consider to use `setuptools` and `packaging`.\r\n\r\nWe've mostly changed to setuptools in the master branch. If there's anything we've missed then PRs are welcome.\r\n\r\n> * It would be Pythonic if make all filename, path-related variable and arguments `pathlib.Path` compatible. Currently, `pyximport` module's filename related stuff doesn't support `pathlib.Path` objects.\r\n\r\nPRs are welcome.\r\n\r\n> * Make cython packaging related stuff support modern packaging tool (like poetry).\r\n\r\nYes, this is definitely something we'd like to improve. I know almost nothing about poetry personally, unfortunately\r\n\r\n> * The last but not the least, drop support for Python 2.x , now, almost nobody use Python 2. If there is they can use Cython 0.x for their application. Python 2 historical legacy is too heavy for a project's development.\r\n\r\nWe've said that 3.0 will be the last release to support 2.x. We do intent to see that through, and then it's dropped.\r\n\r\n------------------------------\r\n\r\n> Nowadays, almost all venv environment has Cython installed.\r\n\r\nThat's probably not true, nor should it be true. I imagine most venv have something built with Cython installed, but that shouldn't require them to have Cython itself installed.\r\n\r\n> As a result, for the demand aspect, almost everyone hope it becomes part of standard library in the future.\r\n\r\nIt's been discussed a few times in the past. I think the conclusion was not to do it:\r\n* it makes it harder to add new features\r\n* it ties Cython to the Python versioning - currently there's very little difference between Cython whichever version of Python it's installed on. If it were part of the standard library we wouldn't be able to go back and update Cython on Python 3.7 - it'd forever be fixed to what was released then.\r\n\r\n(largely the reasons that Matti said above)\r\n\r\n----------------------------------------------------------------------\r\n\r\n> It really cannot be imagined what the would will look like if Cython disappeared. \r\n\r\nIt's unlikely to disappear completely - it's open source and there's plenty of copies out there. However, as with any open-source project there's a limited number of maintainers and so it obviously isn't guaranteed that it'll be maintained forever.\r\nIt probably wouldn't be too hard for someone to keep it up-to-date with changes in the C API and working as it is now, even if the core maintainers disappeared.",
            "created_at": "2023-04-26T07:38:26Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1522931992",
            "id": 1522931992,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5axhkY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1522931992/reactions"
            },
            "updated_at": "2023-04-26T07:38:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1522931992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "@da-woods , For NOT INTEGRATE AS STANDARD LIBRARY, now I understand, thanks for explain it to me.\r\n\r\nBut here I would like to introduce my philosophy toward open source framework (especially) Python open source framework.\r\n\r\nCython is different from the open source software like `vlc` and `libreoffice`, The majority of those software's user is not programmer. For Cython, all its user is experienced programmer. The core developers of projects like Cython should not restrict their user. In addition to make the software fit for majority user. It also is also need to preserve the space for geeks to hack the framework, to maximum its potential value. A good example is Python's importlib. In the old version of python, there is no importlib. The details of Python import system is so-called internals, and the majority user will not use this feature. But there it is, and it is successful. And there is a lot of such low level internals which is sharpened to become accessible to users. *Geek's inspiration* is very important. Make low-level details get sharpened and let the advanced user explore their own way on this framework. The expected effect is like the user add features which the core developer have never imagine before. This is what the project like Cython should travel through.\r\n\r\n\r\nThis issue report is mainly focusing on philosophy and ideas. But specific details. That is why I am grouping all those points into single issue. The role which Cython play is very essential to me. I just want to share my ideas.\r\n\r\n`keras` is used to be standalone framework. But when it merged into `tensorflow`, it becomes `tensorflow.keras`. `pyximport` is for `cython`, they are supposed to be in same root module. The only situation which I imagine which I project contain two or more root-level modules is: For small company, when they have multiple loose-coupled python component to maintain, they put them into single repository to avoid package management `pip install` procedure and make maintenance easier. If a project is uploaded to PyPi, I believe it should be in single root module.\r\n\r\nImagine if every project in PyPI use several root module name, because python module name is short and concise, naming collision will become unavoidable.\r\n\r\nAnd this can also make beginners aware that `pyximport` is related to `cython`, not other project else. ",
            "created_at": "2023-04-26T08:38:31Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1523011240",
            "id": 1523011240,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5ax06o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1523011240/reactions"
            },
            "updated_at": "2023-04-26T08:57:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1523011240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44539531?v=4",
                "events_url": "https://api.github.com/users/evan0greenup/events{/privacy}",
                "followers_url": "https://api.github.com/users/evan0greenup/followers",
                "following_url": "https://api.github.com/users/evan0greenup/following{/other_user}",
                "gists_url": "https://api.github.com/users/evan0greenup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/evan0greenup",
                "id": 44539531,
                "login": "evan0greenup",
                "node_id": "MDQ6VXNlcjQ0NTM5NTMx",
                "organizations_url": "https://api.github.com/users/evan0greenup/orgs",
                "received_events_url": "https://api.github.com/users/evan0greenup/received_events",
                "repos_url": "https://api.github.com/users/evan0greenup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/evan0greenup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/evan0greenup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/evan0greenup"
            }
        },
        {
            "author_association": "NONE",
            "body": "The dynamic and self-reflexion nature make Python and Python-related extension (like Cython) different from the compiled language.\r\n\r\nFor Rust compiler design, the codebase in this style is fine. But for Python superset, low-level details need to be sharpened.",
            "created_at": "2023-04-26T09:06:10Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1523054925",
            "id": 1523054925,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5ax_lN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1523054925/reactions"
            },
            "updated_at": "2023-04-26T09:08:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1523054925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44539531?v=4",
                "events_url": "https://api.github.com/users/evan0greenup/events{/privacy}",
                "followers_url": "https://api.github.com/users/evan0greenup/followers",
                "following_url": "https://api.github.com/users/evan0greenup/following{/other_user}",
                "gists_url": "https://api.github.com/users/evan0greenup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/evan0greenup",
                "id": 44539531,
                "login": "evan0greenup",
                "node_id": "MDQ6VXNlcjQ0NTM5NTMx",
                "organizations_url": "https://api.github.com/users/evan0greenup/orgs",
                "received_events_url": "https://api.github.com/users/evan0greenup/received_events",
                "repos_url": "https://api.github.com/users/evan0greenup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/evan0greenup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/evan0greenup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/evan0greenup"
            }
        },
        {
            "author_association": "NONE",
            "body": "In my opinion, the procedure should like this:\r\n\r\n1. decide the expected high-level behave.\r\n2. find the best low-level approach to achieving this goal. Until it is the best in nature (there is no better alternative approach).\r\n3. refine the low-level stuff (data structure, low-level interface ...) to make it hackable to user.\r\n\r\nThis cycle should go again and again for to add new feature. This should be what you expect @evan0greenup .\r\n\r\nWhen the behavior is not determined yet, focusing on low-level stuff is too early.",
            "created_at": "2023-04-26T09:27:36Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1523088888",
            "id": 1523088888,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5ayH34",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1523088888/reactions"
            },
            "updated_at": "2023-04-26T09:27:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1523088888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41497963?v=4",
                "events_url": "https://api.github.com/users/stevenleeS0ht/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevenleeS0ht/followers",
                "following_url": "https://api.github.com/users/stevenleeS0ht/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevenleeS0ht/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevenleeS0ht",
                "id": 41497963,
                "login": "stevenleeS0ht",
                "node_id": "MDQ6VXNlcjQxNDk3OTYz",
                "organizations_url": "https://api.github.com/users/stevenleeS0ht/orgs",
                "received_events_url": "https://api.github.com/users/stevenleeS0ht/received_events",
                "repos_url": "https://api.github.com/users/stevenleeS0ht/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevenleeS0ht/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevenleeS0ht/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevenleeS0ht"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * The naming and style convention is not Pythonic. In python, all modules are supposed to be lower case. And so on.\r\n\r\nWhile not PEP-8, I don't see a reason to change this. We considered it back in 2007 when we forked Cython from Pyrex, and decided against it because there was little to gain for the existing code base.\r\n\r\n> * There is tree root level modules in Cython, there are `cython`, `Cython` and `pyximport`. In my suggestion, provide single root level module named `cython` and all those stuff be sub-module of it.\r\n\r\nI'd be fine with moving `pyximport` into a separate package. Cython doesn't depend on it in any way, and pyximport doesn't really depend on a specific Cython version. Also, I don't want to put any work into pyximport, really. And that's the reason why that wasn't done yet.\r\n\r\n> * Give user more control on importing pyx files. Currently, when want to import pyx file in normal python script. It need firstly `pyximport.install()` and then `pyximport.load_module(...)`, `pyximport.install()` is a global operation, there is too many side-effect for user who just want to import a single module which has only one cython function for acceleration. It would be nice to add some mechanism to load module without changing global configuration.\r\n\r\n`pyximport` is a hacked-up development tool that was built to reduce the manual compilation work while programming Cython modules. It was specifically designed as an import hook, thus the `install()` step. IDEs can probably do something better these days.\r\n\r\n> * It would be Pythonic if make all filename, path-related variable and arguments `pathlib.Path` compatible. Currently, `pyximport` module's filename related stuff doesn't support `pathlib.Path` objects.\r\n\r\nSee my comments regarding pyximport above. If someone wants to put work into this, fine. Maybe someone could fork it and turn it into a separate PyPI project, so that we can eventually remove it from Cython's code base.\r\n\r\n> * `distutils` will be removed in Python 3.12, Please consider to use `setuptools` and `packaging`.\r\n\r\nThere is a latent friction between the way setuptools uses Cython and Cython uses setuptools (or, rather, distutils in a few corners) since setuptools tries to use Cython at the same time Cython is using  setuptools. It's unclear what would be the best place to improve this, but I'd guess that both projects would have to move a little. As it stands, it usually works.\r\n\r\n> * Make cython packaging related stuff support modern packaging tool (like poetry).\r\n\r\nIt's not really Cython's job to use distutils or setuptools, or other build tools and frameworks. Build tools should best integrate with Cython themselves, i.e. the other way round. Cython is only one step in a build process, a single, separate one, that these tools should execute.\r\n\r\n> * The last but not the least, drop support for Python 2.x , now, almost nobody use Python 2. If there is they can use Cython 0.x for their application. Python 2 historical legacy is too heavy for a project's development.\r\n\r\nLet's leave that for Cython 3.1, as planned.",
            "created_at": "2023-04-26T13:37:28Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1523438696",
            "id": 1523438696,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5azdRo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1523438696/reactions"
            },
            "updated_at": "2023-04-26T13:37:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1523438696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It seems to me that this issue has been discussed and there is nothing actionable in it. At least, it's way too broad to keep it open. I'll close it.",
            "created_at": "2023-04-26T13:38:45Z",
            "html_url": "https://github.com/cython/cython/issues/5407#issuecomment-1523440516",
            "id": 1523440516,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5407",
            "node_id": "IC_kwDOABDGAc5azduE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1523440516/reactions"
            },
            "updated_at": "2023-04-26T13:38:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1523440516",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5407/comments",
    "created_at": "2023-04-26T04:37:02Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T04:59:00Z",
            "event": "mentioned",
            "id": 9098951084,
            "node_id": "MEE_lADOABDGAc5kY6_nzwAAAAIeVvms",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9098951084"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T04:59:00Z",
            "event": "subscribed",
            "id": 9098951097,
            "node_id": "SE_lADOABDGAc5kY6_nzwAAAAIeVvm5",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9098951097"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T06:51:57Z",
            "event": "mentioned",
            "id": 9099642828,
            "node_id": "MEE_lADOABDGAc5kY6_nzwAAAAIeYYfM",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9099642828"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T06:51:58Z",
            "event": "subscribed",
            "id": 9099642832,
            "node_id": "SE_lADOABDGAc5kY6_nzwAAAAIeYYfQ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9099642832"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T08:38:31Z",
            "event": "mentioned",
            "id": 9100622275,
            "node_id": "MEE_lADOABDGAc5kY6_nzwAAAAIecHnD",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9100622275"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T08:38:31Z",
            "event": "subscribed",
            "id": 9100622283,
            "node_id": "SE_lADOABDGAc5kY6_nzwAAAAIecHnL",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9100622283"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44539531?v=4",
                "events_url": "https://api.github.com/users/evan0greenup/events{/privacy}",
                "followers_url": "https://api.github.com/users/evan0greenup/followers",
                "following_url": "https://api.github.com/users/evan0greenup/following{/other_user}",
                "gists_url": "https://api.github.com/users/evan0greenup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/evan0greenup",
                "id": 44539531,
                "login": "evan0greenup",
                "node_id": "MDQ6VXNlcjQ0NTM5NTMx",
                "organizations_url": "https://api.github.com/users/evan0greenup/orgs",
                "received_events_url": "https://api.github.com/users/evan0greenup/received_events",
                "repos_url": "https://api.github.com/users/evan0greenup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/evan0greenup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/evan0greenup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/evan0greenup"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T09:27:36Z",
            "event": "mentioned",
            "id": 9101235879,
            "node_id": "MEE_lADOABDGAc5kY6_nzwAAAAIeedan",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9101235879"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44539531?v=4",
                "events_url": "https://api.github.com/users/evan0greenup/events{/privacy}",
                "followers_url": "https://api.github.com/users/evan0greenup/followers",
                "following_url": "https://api.github.com/users/evan0greenup/following{/other_user}",
                "gists_url": "https://api.github.com/users/evan0greenup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/evan0greenup",
                "id": 44539531,
                "login": "evan0greenup",
                "node_id": "MDQ6VXNlcjQ0NTM5NTMx",
                "organizations_url": "https://api.github.com/users/evan0greenup/orgs",
                "received_events_url": "https://api.github.com/users/evan0greenup/received_events",
                "repos_url": "https://api.github.com/users/evan0greenup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/evan0greenup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/evan0greenup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/evan0greenup"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T09:27:36Z",
            "event": "subscribed",
            "id": 9101235889,
            "node_id": "SE_lADOABDGAc5kY6_nzwAAAAIeedax",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9101235889"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-04-26T13:38:45Z",
            "event": "closed",
            "id": 9103760701,
            "node_id": "CE_lADOABDGAc5kY6_nzwAAAAIeoF09",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/9103760701"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5407/events",
    "html_url": "https://github.com/cython/cython/issues/5407",
    "id": 1684254695,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5407/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5kY6_n",
    "number": 5407,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/cython/cython/issues/5407/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5407/timeline",
    "title": "Suggestion and issue reports for the future of Cython",
    "updated_at": "2023-04-26T13:38:45Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5407",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/44539531?v=4",
        "events_url": "https://api.github.com/users/evan0greenup/events{/privacy}",
        "followers_url": "https://api.github.com/users/evan0greenup/followers",
        "following_url": "https://api.github.com/users/evan0greenup/following{/other_user}",
        "gists_url": "https://api.github.com/users/evan0greenup/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/evan0greenup",
        "id": 44539531,
        "login": "evan0greenup",
        "node_id": "MDQ6VXNlcjQ0NTM5NTMx",
        "organizations_url": "https://api.github.com/users/evan0greenup/orgs",
        "received_events_url": "https://api.github.com/users/evan0greenup/received_events",
        "repos_url": "https://api.github.com/users/evan0greenup/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/evan0greenup/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/evan0greenup/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/evan0greenup"
    }
}