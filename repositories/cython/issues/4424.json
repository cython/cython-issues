{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "\r\n**Describe the bug**\r\n\r\nBuilding the python-cython 0.29.24 package with Python 3.10 on GNU Guix, I get he following two failures:\r\n\r\n```\r\nErrors found in shards 23, 7\r\n\r\nErrors from shard 23:\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase)\r\ncompiling (cpp) and running cpp_stl_conversion\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/guix-build-python-cython-0.29.24.drv-0/Cython-0.29.24/runtests.py\", line 1257, in run\r\n    ext_so_path = self.runCompileTest()\r\n  File \"/tmp/guix-build-python-cython-0.29.24.drv-0/Cython-0.29.24/runtests.py\", line 931, in runCompileTest\r\n    return self.compile(\r\n  File \"/tmp/guix-build-python-cython-0.29.24.drv-0/Cython-0.29.24/runtests.py\", line 1178, in compile\r\n    self._match_output(expected_errors, errors, tostderr)\r\n  File \"/tmp/guix-build-python-cython-0.29.24.drv-0/Cython-0.29.24/runtests.py\", line 1227, in _match_output\r\n    self.assertEqual(None, unexpected)\r\nAssertionError: None != \"18:5: Unraisable exception in function 'cpp_stl_conversion.add_strings'.\"\r\n\r\n\r\nErrors from shard 7:\r\n======================================================================\r\nFAIL: testSyntaxErrorMissingParens (test_exceptions.ExceptionTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_exceptions.pyx\", line 171, in test_exceptions.ExceptionTests.testSyntaxErrorMissingParens.ckmsg (test_exceptions.c:7368)\r\n    compile(src, '<fragment>', 'exec')\r\n  File \"<fragment>\", line 1\r\n    print \"old style\"\r\n    ^^^^^^^^^^^^^^^^^\r\nSyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_exceptions.pyx\", line 179, in test_exceptions.ExceptionTests.testSyntaxErrorMissingParens (test_exceptions.c:7793)\r\n    ckmsg(s, \"Missing parentheses in call to 'print'. \"\r\n  File \"tests/run/test_exceptions.pyx\", line 174, in test_exceptions.ExceptionTests.testSyntaxErrorMissingParens.ckmsg (test_exceptions.c:7569)\r\n    self.fail(\"expected %s, got %s\" % (msg, e.msg))\r\nAssertionError: expected Missing parentheses in call to 'print'. Did you mean print(\"old style\")?, got Missing parentheses in call to 'print'. Did you mean print(...)?\r\n\r\n======================================================================\r\nFAIL: testSyntaxErrorMissingParens (test_exceptions.ExceptionTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_exceptions.pyx\", line 171, in test_exceptions.ExceptionTests.testSyntaxErrorMissingParens.ckmsg (test_exceptions.cpp:7382)\r\n    compile(src, '<fragment>', 'exec')\r\n  File \"<fragment>\", line 1\r\n    print \"old style\"\r\n    ^^^^^^^^^^^^^^^^^\r\nSyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_exceptions.pyx\", line 179, in test_exceptions.ExceptionTests.testSyntaxErrorMissingParens (test_exceptions.cpp:7807)\r\n    ckmsg(s, \"Missing parentheses in call to 'print'. \"\r\n  File \"tests/run/test_exceptions.pyx\", line 174, in test_exceptions.ExceptionTests.testSyntaxErrorMissingParens.ckmsg (test_exceptions.cpp:7583)\r\n    self.fail(\"expected %s, got %s\" % (msg, e.msg))\r\nAssertionError: expected Missing parentheses in call to 'print'. Did you mean print(\"old style\")?, got Missing parentheses in call to 'print'. Did you mean print(...)?\r\n\r\nTimes:\r\ncompile-cpp :   572.07 sec  (1040,  0.550 / run) - slowest: 'cpp:test_unicode' (11.08s), 'cpp:test_coroutines_pep492' (7.95s), 'cpp:test_grammar' (5.08s), 'cpp:memslice' (4.99s), 'cpp:test_exceptions' (4.82s), 'cpp:fused_def' (4.70s), 'cpp:test_asyncgen' (4.28s), 'cpp:memoryview' (4.11s)\r\ncython      :   410.30 sec  (2202,  0.186 / run) - slowest: 'c:test_unicode' (6.04s), 'c:memslice' (5.74s), 'cpp:memslice' (5.28s), 'c:test_coroutines_pep492' (4.81s), 'cpp:fused_types' (4.43s), 'cpp:test_unicode' (4.33s), 'c:fused_types' (4.31s), 'c:memoryview' (4.25s)\r\ncompile-c   :   395.51 sec  ( 973,  0.406 / run) - slowest: 'c:test_unicode' (13.48s), 'c:test_coroutines_pep492' (9.95s), 'c:memslice' (6.65s), 'c:test_grammar' (5.46s), 'c:test_asyncgen' (4.50s), 'c:test_exceptions' (4.32s), 'c:memoryview' (3.97s), 'c:fused_def' (3.73s)\r\netoe-build  :   115.84 sec  (  68,  1.704 / run) - slowest: 'c:memoryview_compare_type_pointers(1)' (7.34s), 'c:memoryview_acq_count(1)' (6.82s), 'c:memoryview_inline_pxd(1)' (3.91s), 'c:pure_pxd(1)' (3.53s), 'c:cdef_multiple_inheritance_errors(1)' (3.03s), 'c:check_size(1)' (2.68s), 'c:module_api(1)' (2.55s), 'c:asyncio_generators(1)' (2.55s)\r\nrun         :    89.80 sec  (1375,  0.065 / run) - slowest: 'c:memslice' (28.81s), 'cpp:memslice' (17.04s), 'c:test_fstring' (9.13s), 'c:test_coroutines_pep492' (8.17s), 'c:test_unicode' (4.84s), 'cpp:test_unicode' (4.52s), 'cpp:memoryview_in_subclasses' (2.99s), 'c:memoryview_in_subclasses' (2.95s)\r\netoe-run    :    18.26 sec  ( 108,  0.169 / run) - slowest: 'c:pyximport_pyimport(1)' (2.28s), 'c:cythonize_script_package(1)' (1.82s), 'c:cpdef_pickle(1)' (1.58s), 'c:cythonize_script(1)' (1.52s), 'c:pyximport_namespace(1)' (1.18s), 'c:pyximport_errors(1)' (1.17s), 'c:cythonize_script_excludes(1)' (1.15s), 'c:py35_asyncio_async_def(2)' (1.11s)\r\nimport      :     0.69 sec  (1375,  0.000 / run) - slowest: 'c:test_fstring' (0.01s), 'cpp:memslice' (0.01s), 'c:memslice' (0.01s), 'cpp:bufaccess' (0.01s), 'c:bufaccess' (0.01s), 'c:importas' (0.01s), 'c:memoryview' (0.00s), 'c:memoryview_pep489_typing' (0.00s)\r\npyrun       :     0.17 sec  (  51,  0.003 / run) - slowest: 'py:ext_auto_richcmp' (0.02s), 'py:generators_py' (0.02s), 'py:constant_folding' (0.01s), 'py:pure_py' (0.01s), 'py:methodmangling_T5' (0.01s), 'py:delslice' (0.01s), 'py:withstat_py' (0.01s), 'py:purecdef' (0.01s)\r\npyimport    :     0.04 sec  (  51,  0.001 / run) - slowest: 'py:pure_py' (0.00s), 'py:constant_folding' (0.00s), 'py:withstat_py27' (0.00s), 'py:generators_py' (0.00s), 'py:ext_auto_richcmp' (0.00s), 'py:pep526_variable_annotations' (0.00s), 'py:withstat_py' (0.00s), 'py:purecdef' (0.00s)\r\nALL DONE\r\nerror: in phase 'check': uncaught exception:\r\n%exception #<&invoke-error program: \"python\" arguments: (\"runtests.py\" \"-vv\" \"-j\" \"24\") exit-status: 1 term-signal: #f stop-signal: #f> \r\nphase `check' failed after 109.8 seconds\r\n```\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\n\r\nRun the test suite with Python 3.10.\r\n\r\n**Expected behavior**\r\nAll tests should pass.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: GNU/Linux\r\n - Python version 3.10\r\n - Cython version 0.29.24",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Hmm, seems already fixed on master.",
            "created_at": "2021-10-23T04:57:38Z",
            "html_url": "https://github.com/cython/cython/issues/4424#issuecomment-950064745",
            "id": 950064745,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4424",
            "node_id": "IC_kwDOABDGAc44oNZp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/950064745/reactions"
            },
            "updated_at": "2021-10-23T04:57:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/950064745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8332263?v=4",
                "events_url": "https://api.github.com/users/Apteryks/events{/privacy}",
                "followers_url": "https://api.github.com/users/Apteryks/followers",
                "following_url": "https://api.github.com/users/Apteryks/following{/other_user}",
                "gists_url": "https://api.github.com/users/Apteryks/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Apteryks",
                "id": 8332263,
                "login": "Apteryks",
                "node_id": "MDQ6VXNlcjgzMzIyNjM=",
                "organizations_url": "https://api.github.com/users/Apteryks/orgs",
                "received_events_url": "https://api.github.com/users/Apteryks/received_events",
                "repos_url": "https://api.github.com/users/Apteryks/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Apteryks/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Apteryks/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Apteryks"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Sorry - initial message was wrong. It looks like Python 3.10 has changed the error output slightly.\r\n\r\nUnfortunately the CI isn't working for Python 3.10 so this kind of thing can break easily.\r\n\r\nIt'll probably just be a case of adding `#doctest: +ELLIPSIS` (and then a `...`)",
            "created_at": "2021-10-23T06:46:46Z",
            "html_url": "https://github.com/cython/cython/issues/4424#issuecomment-950104083",
            "id": 950104083,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4424",
            "node_id": "IC_kwDOABDGAc44oXAT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/950104083/reactions"
            },
            "updated_at": "2021-10-23T06:46:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/950104083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4424/comments",
    "created_at": "2021-10-23T04:35:01Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-23T06:42:57Z",
            "event": "labeled",
            "id": 5507913781,
            "label": {
                "color": "444444",
                "name": "Testing"
            },
            "node_id": "LE_lADOABDGAc49opeCzwAAAAFITBg1",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5507913781"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4424/events",
    "html_url": "https://github.com/cython/cython/issues/4424",
    "id": 1034065794,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558326,
            "name": "Testing",
            "node_id": "MDU6TGFiZWw0MjU1NTgzMjY=",
            "url": "https://api.github.com/repos/cython/cython/labels/Testing"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4424/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc49opeC",
    "number": 4424,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4424/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4424/timeline",
    "title": "[BUG] testSyntaxErrorMissingParens and testSyntaxErrorMissingParens test failures with Python 3.10Test failure with Python 3.10",
    "updated_at": "2021-10-23T06:46:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4424",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8332263?v=4",
        "events_url": "https://api.github.com/users/Apteryks/events{/privacy}",
        "followers_url": "https://api.github.com/users/Apteryks/followers",
        "following_url": "https://api.github.com/users/Apteryks/following{/other_user}",
        "gists_url": "https://api.github.com/users/Apteryks/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Apteryks",
        "id": 8332263,
        "login": "Apteryks",
        "node_id": "MDQ6VXNlcjgzMzIyNjM=",
        "organizations_url": "https://api.github.com/users/Apteryks/orgs",
        "received_events_url": "https://api.github.com/users/Apteryks/received_events",
        "repos_url": "https://api.github.com/users/Apteryks/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Apteryks/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Apteryks/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Apteryks"
    }
}