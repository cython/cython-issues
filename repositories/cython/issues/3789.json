{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "\r\nWindows 10, Python 3.8.3, Cython 3.0a5, Visual Studio 2017 version 15.9.20.\r\n\r\nLet's consider the following example:\r\n\r\na.h:\r\n\r\n```cpp\r\n#pragma once\r\n#include <memory>\r\n\r\nstd::unique_ptr<int> f() {\r\n    return std::make_unique<int>(123456);\r\n}\r\n```\r\n\r\nb.pyx:\r\n\r\n```cython\r\nfrom libcpp.memory cimport unique_ptr\r\n\r\ncdef extern from \"a.h\":\r\n    unique_ptr[int] f() except +\r\n\r\ndef g():\r\n    cdef unique_ptr[int] p = f()\r\n```\r\n\r\nsetup.py:\r\n```python\r\nfrom setuptools import setup, Extension\r\nfrom Cython.Build import cythonize\r\n\r\nextensions = [Extension(\r\n    \"b\",\r\n    [\"b.pyx\"],\r\n    language='c++'\r\n)]\r\nsetup(ext_modules=cythonize(extensions, compiler_directives={\"language_level\" : \"3\"}))\r\n```\r\n\r\n**Expected behavior**\r\n `python setup.py build` builds a `.pyd`-file.\r\n\r\n**Observed behavior**\r\n`python setup.py build` produces a message referencing error C2280, doesn't build a `.pyd`-file.\r\n\r\n**Workaround**\r\nAdding `extra_compile_args=[\"/Zc:__cplusplus\"]` to the arguments of `Extension` fixes the problem.\r\n\r\n**Likely reason**\r\nMSVC defines `__cplusplus` as `199711L` by default ([details](https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/))\r\n\r\nCython defines `__PYX_STD_MOVE_IF_SUPPORTED` like this:\r\n\r\n([source](https://github.com/cython/cython/blob/master/Cython/Utility/CppSupport.cpp))\r\n```cpp\r\n#if __cplusplus >= 201103L\r\n  #include <utility>\r\n  #define __PYX_STD_MOVE_IF_SUPPORTED(x) std::move(x)\r\n#else\r\n  #define __PYX_STD_MOVE_IF_SUPPORTED(x) x\r\n#endif\r\n```\r\n\r\nThe generated `.cpp` file tries to copy a `unique_ptr`, and thus doesn't compile.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "Does MSVC provide a way to detect C++11 support? Or is it the case that MSVC > \"some version\" always supports `std::move` whatever command line arguments it's called with? Because if not then we're kind of stuck.\r\n\r\nYou're currently no worse off now than with for Cython <3, since earlier versions would also have tried to copy the `unique_ptr`. We do want to default to supporting c++98 (so we can't just replace `__PYX_STD_MOVE_IF_SUPPORTED` with `std::move`).\r\n\r\nUnless we can reliably detect support then your workaround sounds like the correct solution.",
            "created_at": "2020-08-25T16:36:44Z",
            "html_url": "https://github.com/cython/cython/issues/3789#issuecomment-680137026",
            "id": 680137026,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3789",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDEzNzAyNg==",
            "performed_via_github_app": null,
            "updated_at": "2020-08-25T16:36:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/680137026",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I _think_ if both `__cplusplus` and `_MSVC_LANG` are defined, whatever their value, then `std::move` should work. The documentation says:\r\n\r\n> _MSVC_LANG Defined as an integer literal that specifies the C++ language standard targeted by the compiler. It's set only in code compiled as C++. The macro is the integer literal value 201402L by default, or when the /std:c++14 compiler option is specified. The macro is set to 201703L if the /std:c++17 compiler option is specified. It's set to a higher, unspecified value when the /std:c++latest option is specified. Otherwise, the macro is undefined. The _MSVC_LANG macro and /std (Specify Language Standard Version) compiler options are available beginning in Visual Studio 2015 Update 3.\r\n\r\nAs for earlier versions, I, sadly, don't know.",
            "created_at": "2020-08-25T20:09:53Z",
            "html_url": "https://github.com/cython/cython/issues/3789#issuecomment-680244352",
            "id": 680244352,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3789",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDI0NDM1Mg==",
            "performed_via_github_app": null,
            "updated_at": "2020-08-25T20:09:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/680244352",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/2109478?v=4",
                "events_url": "https://api.github.com/users/Zabolekar/events{/privacy}",
                "followers_url": "https://api.github.com/users/Zabolekar/followers",
                "following_url": "https://api.github.com/users/Zabolekar/following{/other_user}",
                "gists_url": "https://api.github.com/users/Zabolekar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Zabolekar",
                "id": 2109478,
                "login": "Zabolekar",
                "node_id": "MDQ6VXNlcjIxMDk0Nzg=",
                "organizations_url": "https://api.github.com/users/Zabolekar/orgs",
                "received_events_url": "https://api.github.com/users/Zabolekar/received_events",
                "repos_url": "https://api.github.com/users/Zabolekar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Zabolekar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Zabolekar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Zabolekar"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I'm getting the impression that it `std::move` should probably work on at least Visual Studio 2015 onwards (with no obvious way to turn it off). I don't have a huge amount of enthusiasm to download every version of Visual Studio to prove that this is true.\r\n\r\nI guess the thing to do would be to turn it on in a PR and see if anything breaks in the Windows tests. The compiler version on Windows is largely dictated by Python anyway, so there aren't a huge variety of options.",
            "created_at": "2020-08-25T20:41:10Z",
            "html_url": "https://github.com/cython/cython/issues/3789#issuecomment-680258798",
            "id": 680258798,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3789",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDI1ODc5OA==",
            "performed_via_github_app": null,
            "updated_at": "2020-08-25T20:41:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/680258798",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3789/comments",
    "created_at": "2020-08-25T13:31:54Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3789/events",
    "html_url": "https://github.com/cython/cython/issues/3789",
    "id": 685489307,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3789/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2ODU0ODkzMDc=",
    "number": 3789,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] __PYX_STD_MOVE_IF_SUPPORTED doesn't work well with MSVC",
    "updated_at": "2020-08-25T20:41:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3789",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/2109478?v=4",
        "events_url": "https://api.github.com/users/Zabolekar/events{/privacy}",
        "followers_url": "https://api.github.com/users/Zabolekar/followers",
        "following_url": "https://api.github.com/users/Zabolekar/following{/other_user}",
        "gists_url": "https://api.github.com/users/Zabolekar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Zabolekar",
        "id": 2109478,
        "login": "Zabolekar",
        "node_id": "MDQ6VXNlcjIxMDk0Nzg=",
        "organizations_url": "https://api.github.com/users/Zabolekar/orgs",
        "received_events_url": "https://api.github.com/users/Zabolekar/received_events",
        "repos_url": "https://api.github.com/users/Zabolekar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Zabolekar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Zabolekar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Zabolekar"
    }
}