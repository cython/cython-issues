{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "Calling `__hash__` on a `cdef class` with a [too large value can lead to exceptions](https://github.com/cython/cython/issues/3840) - specifically this can happen when returning `id(self)` which is an obvious choice for classes that are equal by identity.\r\n\r\nFor Python classes the default behaviour is [just to truncate the hash value](https://docs.python.org/3/reference/datamodel.html#object.__hash__):\r\n\r\n> Note: `hash()` truncates the value returned from an objectâ€™s custom `__hash__()` method to the size of a `Py_ssize_t`. This is typically 8 bytes on 64-bit builds and 4 bytes on 32-bit builds.\r\n\r\n**Describe the solution you'd like**\r\n\r\nCython should probably do the same. In practice Python accomplishes the truncation by just calling `PyObject_Hash` on the oversized integer, and that's probably the easiest way for Cython to work too.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThe main alternative would be to do nothing - the user is responsible for feeding a correct sized integer. This has the advantage of not trying to second-guess the user. Note that Cython already second-guesses the user to an extent and converts -1 to -2 (to avoid signalling an exception.\r\n\r\n**Other thoughts**\r\n\r\nIt isn't completely obvious where to put this. One option would be in `CPyHashTType`'s `from_py_function = \"__Pyx_PyInt_AsHash_t\"`. That might affect code outside `__hash__` though?",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "My first intuition is to do nothing. Isn't this really only an issue with Python 2, where `Py_hash_t` is not defined?\r\nAnd, was this really an issue with `__hash__` and not with the `id()` call in #3840? As long as `id()` returns a C integer, and we return just that as `Py_hash_t` from `__hash__`, I don't see an issue here.",
            "created_at": "2020-09-26T15:00:11Z",
            "html_url": "https://github.com/cython/cython/issues/3841#issuecomment-699506678",
            "id": 699506678,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3841",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTUwNjY3OA==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-26T15:00:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/699506678",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I don't think it's a specifically Python 2 issue.\r\n\r\nThe issue with `id()` was that `Py_hash_t` is a `signed int` while `id()` returns an `unsigned int` with the same number of bits. Therefore about half of the numbers that can be returned for `id()` aren't valid hashes. For 64 bit systems this doesn't seem to be a problem practically but for 32 bit systems it looks like it's pretty common for pointers to be in the upper half of the range.\r\n\r\nThe more general point is that the Python wrapper for `__hash__` does accept any integer however large and truncates it to fit in `Py_hash_t` and therefore Cython might want to do the same. Maybe. Obviously `cdef class` isn't a Python language feature so they're allowed to behave differently though.\r\n\r\nIt's clearly not a big issue and it's easily worked around, so doing nothing may be a sensible option.",
            "created_at": "2020-09-26T15:11:07Z",
            "html_url": "https://github.com/cython/cython/issues/3841#issuecomment-699507968",
            "id": 699507968,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3841",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTUwNzk2OA==",
            "performed_via_github_app": null,
            "updated_at": "2020-09-26T15:11:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/699507968",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3841/comments",
    "created_at": "2020-09-26T10:10:59Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-09-26T10:12:22Z",
            "event": "labeled",
            "id": 3810619339,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDM4MTA2MTkzMzk=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3810619339"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3841/events",
    "html_url": "https://github.com/cython/cython/issues/3841",
    "id": 709510086,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3841/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3MDk1MTAwODY=",
    "number": 3841,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] cdef class `__hash__` should handle integer overflow gracefully",
    "updated_at": "2020-09-26T15:11:07Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3841",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}