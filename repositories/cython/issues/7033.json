{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe your issue\n\nI am building a diff tool for tables https://github.com/pulkin/sdiff\n\nThere, I use Myers algorithm to compare two sequences `a` and `b`. As you may expect, the diff algorithm frequently performs the check `a[i] == b[j]` for integers `i`, `j` to identify longest common sub-sequences. To squeeze every bit of performance, I use cython for the entire algorithm as well as the comparison `a[i] == b[j]`.\n\nThe main challenge is that the types of `a` and `b` are not known so I build backends on demand. For example, when I have two strings, I ask to build this:\n\n```python\nimport cython\nfrom sdiff.cython.compare cimport ComparisonBackend\ncdef class Backend(ComparisonBackend):\n  cdef unicode a\n  cdef unicode b\n  def __init__(self, unicode a, unicode b):\n    self.a = a\n    self.b = b\n  cdef double compare(self, Py_ssize_t i, Py_ssize_t j):\n    return self.a[i] == self.b[j]\n```\n\nThe primary benefit is eliminating most overheads in calling `Backend.compare` in C scope while also keeping modularity for the rest of the code.\n\n**The issue is that some of these 10-line cdef classes are VERY SLOW to compile.** For example, the memoryview version takes about 8.6s to compile on my laptop:\n\n```python\nimport cython\nfrom sdiff.cython.compare cimport ComparisonBackend\ncdef class Backend(ComparisonBackend):\n  cdef const double[:] a\n  cdef const double[:] b\n  def __init__(self, const double[:] a not None, const double[:] b not None):\n    self.a = a\n    self.b = b\n  @cython.initializedcheck(False)\n  @cython.wraparound(False)\n  cdef double compare(self, Py_ssize_t i, Py_ssize_t j):\n    return self.a[i] == self.b[j]\n```\n\nThe \"unicode\" class takes 1.8s to build for the comparison (which is also not small). I think such times are hardly justifiable: these are very basic classes. The only explicit import `compare.pyx` is [5 lines of code](https://github.com/pulkin/sdiff/blob/main/sdiff/cython/compare.pyx).\n\nIf there are ways to improve build times please share.\n\nOn a side note, the two classes generate 10k and 28k lines of source code.",
    "closed_at": "2025-07-24T06:34:57Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Yes, the memoryview code is known to be intensive for the C compiler.\n\nIs there a reason why you compile the classes \"on demand\"? Why not generate at least the most common datatype classes ahead of time in a single module? There can't be that many, at least not many common ones, and you'd save a lot of per-module overhead.\n\nAlso, if you're looking for longest common sequences, why not extract the loop as well? Consider adding a method to your `Backend` classes that directly finds the first mismatch in the two sequences. If that's your bottleneck, I'm sure that letting the C compiler see and optimise the whole search loop will make a visible difference in many cases.\n\nA common interface for this are the \"cmp\" style comparison functions that compare two sequences and on the first mismatch (or at the end) return -1 for lower, 0 for same, 1 for greater. You can use an integer pointer argument to additionally return the position of the differing value if you need that.\n\nEDIT: I looked up [your code](https://github.com/pulkin/sdiff/blob/2c059bd75fb7bbc667c4a6f1b5c90fc75c35a75c/sdiff/cython/cmyers.pyx#L167-L185) and it's not quite about finding common sequences. But the loops still seem simple enough to extract them, I'd say, so you should definitely try that.\n\nIf you really think you need to generate multiple separate modules, then the [shared module](https://cython.readthedocs.io/en/latest/src/userguide/source_files_and_compilation.html#shared-utility-module) feature in Cython 3.1 will probably help. It allows you to compile a module with internal Cython code once (specifically including the memoryview code) and then let other Cython modules use it, instead of including and compiling that code again.\n\nThat said, please direct further discussion to the cython-users mailing list. This seems more of a support request than a bug report, and we have the mailing list specifically for that.",
            "created_at": "2025-07-24T06:34:58Z",
            "html_url": "https://github.com/cython/cython/issues/7033#issuecomment-3112222938",
            "id": 3112222938,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7033",
            "node_id": "IC_kwDOABDGAc65gMDa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3112222938/reactions"
            },
            "updated_at": "2025-07-24T07:30:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3112222938",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Is there a reason why you compile the classes \"on demand\"?\n\nAnswering this and related questions: there are many viewpoints on whether two elements match. Sometimes it is `a[i] == b[j]`, sometimes it is `abs(a[i] - b[j]) <= atol`, sometimes you do want to compare `NaN`s and `inf`s in some special way. On top of it, I was planning to start comparing elements of [structures arrays](https://numpy.org/doc/stable/user/basics.rec.html). There are too many possibilities. Having a single shared `pyx` is where I departed from (see e.g. https://github.com/pulkin/sdiff/blob/3ea4659d43896619dacb6e581be2b32b299082bb/sdiff/cython/compare.pyx). It has none of the above features while also being a bit silly (not sure if it will compare `+0.0` and `-0.0` correctly). Adding those feature means a lot more of repetitive code: exhausting to write, difficult to test. So I switched to dynamic code generation which lifted the burden of maintaining a single module with all possible (combinations of) features. I still think it was a very productive refactoring idea.\n\nThanks for the shared modules and embedding the loop ideas: will try that out. I guess there are some other possible compromises as well. It is a bit unfortunate though that using cython becomes impractical in my case for no good reason. Not saying it is an easy task but this whole situation with compile times brings plain C modules back on the table.",
            "created_at": "2025-07-24T22:34:13Z",
            "html_url": "https://github.com/cython/cython/issues/7033#issuecomment-3115206811",
            "id": 3115206811,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7033",
            "node_id": "IC_kwDOABDGAc65rkib",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3115206811/reactions"
            },
            "updated_at": "2025-07-24T22:34:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3115206811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14786764?v=4",
                "events_url": "https://api.github.com/users/pulkin/events{/privacy}",
                "followers_url": "https://api.github.com/users/pulkin/followers",
                "following_url": "https://api.github.com/users/pulkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/pulkin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pulkin",
                "id": 14786764,
                "login": "pulkin",
                "node_id": "MDQ6VXNlcjE0Nzg2NzY0",
                "organizations_url": "https://api.github.com/users/pulkin/orgs",
                "received_events_url": "https://api.github.com/users/pulkin/received_events",
                "repos_url": "https://api.github.com/users/pulkin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pulkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pulkin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pulkin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "A note for those who end up here while investigating a similar issue: [shared memoryview module](https://cython.readthedocs.io/en/latest/src/userguide/source_files_and_compilation.html#shared-utility-module) as per above suggestion indeed provides a signiificant speedup in my case and brings the compile times close to `2s`.",
            "created_at": "2025-07-24T22:53:47Z",
            "html_url": "https://github.com/cython/cython/issues/7033#issuecomment-3115239973",
            "id": 3115239973,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7033",
            "node_id": "IC_kwDOABDGAc65rsol",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3115239973/reactions"
            },
            "updated_at": "2025-07-24T22:53:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3115239973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14786764?v=4",
                "events_url": "https://api.github.com/users/pulkin/events{/privacy}",
                "followers_url": "https://api.github.com/users/pulkin/followers",
                "following_url": "https://api.github.com/users/pulkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/pulkin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pulkin",
                "id": 14786764,
                "login": "pulkin",
                "node_id": "MDQ6VXNlcjE0Nzg2NzY0",
                "organizations_url": "https://api.github.com/users/pulkin/orgs",
                "received_events_url": "https://api.github.com/users/pulkin/received_events",
                "repos_url": "https://api.github.com/users/pulkin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pulkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pulkin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pulkin",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7033/comments",
    "created_at": "2025-07-23T23:02:30Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-07-24T06:34:42Z",
            "event": "labeled",
            "id": 18788542146,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "LE_lADOABDGAc7CMEuZzwAAAARf4mbC",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/18788542146"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-07-24T06:34:58Z",
            "event": "closed",
            "id": 18788545725,
            "node_id": "CE_lADOABDGAc7CMEuZzwAAAARf4nS9",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "url": "https://api.github.com/repos/cython/cython/issues/events/18788545725"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7033/events",
    "html_url": "https://github.com/cython/cython/issues/7033",
    "id": 3257944985,
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 414800623,
            "name": "support question",
            "node_id": "MDU6TGFiZWw0MTQ4MDA2MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/support%20question"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7033/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7CMEuZ",
    "number": 7033,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7033/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7033/timeline",
    "title": "Tiny pyx are very slow to build",
    "type": null,
    "updated_at": "2025-07-24T22:53:47Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7033",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/14786764?v=4",
        "events_url": "https://api.github.com/users/pulkin/events{/privacy}",
        "followers_url": "https://api.github.com/users/pulkin/followers",
        "following_url": "https://api.github.com/users/pulkin/following{/other_user}",
        "gists_url": "https://api.github.com/users/pulkin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pulkin",
        "id": 14786764,
        "login": "pulkin",
        "node_id": "MDQ6VXNlcjE0Nzg2NzY0",
        "organizations_url": "https://api.github.com/users/pulkin/orgs",
        "received_events_url": "https://api.github.com/users/pulkin/received_events",
        "repos_url": "https://api.github.com/users/pulkin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pulkin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pulkin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pulkin",
        "user_view_type": "public"
    }
}