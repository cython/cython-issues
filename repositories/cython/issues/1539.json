{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Based on following section within `valid_dtype` function in `PyrexTypes.py` file:\r\n```\r\nif dtype.is_struct and dtype.kind == 'struct':\r\n            for member in dtype.scope.var_entries:\r\n                if not self.valid_dtype(member.type):\r\n                    return False\r\n\r\n            return True\r\n```\r\n\r\nIt returns `False` when the problem is one of the declared types in `struct` which is exactly same as using a completely invalid type for memory view.\r\n\r\n    Invalid base type for memoryview slice: all_words_tp\r\n\r\nInstead it should specified the real cause of the exception by showing the invalid type. Maybe by raising an exception instead of returning `False` and then rewriting the `validate_memslice_dtype` function in order to handle that.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Any updates on this?\r\n",
            "created_at": "2022-04-24T21:12:57Z",
            "html_url": "https://github.com/cython/cython/issues/1539#issuecomment-1107919548",
            "id": 1107919548,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1539",
            "node_id": "IC_kwDOABDGAc5CCYK8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1107919548/reactions"
            },
            "updated_at": "2022-04-24T21:12:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1107919548",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Any updates on this?\r\n\r\nDon't think so. More specific error messages are always nice.\r\n\r\nCython doesn't typically use exceptions much for this kind of thing. Maybe it'd be clearer to make the function `invalid_dtype` and have it return an error string or `False` (or something similar)?",
            "created_at": "2022-04-24T21:53:20Z",
            "html_url": "https://github.com/cython/cython/issues/1539#issuecomment-1107925210",
            "id": 1107925210,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1539",
            "node_id": "IC_kwDOABDGAc5CCZja",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1107925210/reactions"
            },
            "updated_at": "2022-04-24T21:53:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1107925210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1539/comments",
    "created_at": "2016-12-03T08:22:27Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1539/events",
    "html_url": "https://github.com/cython/cython/issues/1539",
    "id": 193274467,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1539/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUxOTMyNzQ0Njc=",
    "number": 1539,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/1539/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/1539/timeline",
    "title": "Raising a proper exception instead of `Invalid base type for memoryview slice` when the error is because of using an invalid type within `struct`",
    "updated_at": "2022-04-24T21:53:20Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1539",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5694520?v=4",
        "events_url": "https://api.github.com/users/mazdaka/events{/privacy}",
        "followers_url": "https://api.github.com/users/mazdaka/followers",
        "following_url": "https://api.github.com/users/mazdaka/following{/other_user}",
        "gists_url": "https://api.github.com/users/mazdaka/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mazdaka",
        "id": 5694520,
        "login": "mazdaka",
        "node_id": "MDQ6VXNlcjU2OTQ1MjA=",
        "organizations_url": "https://api.github.com/users/mazdaka/orgs",
        "received_events_url": "https://api.github.com/users/mazdaka/received_events",
        "repos_url": "https://api.github.com/users/mazdaka/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mazdaka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mazdaka/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mazdaka"
    }
}