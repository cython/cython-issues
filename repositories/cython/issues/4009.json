{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen `linetrace` directive of the compiler is enabled, some of the arguments of `prange` can not be typed in multiple lines. Specifically, `schedule` and `chunksize` arguments must be typed in the same line as the prange's start/stop index. For example, the following syntax:\r\n\r\n```cython\r\nfor i in prange(\r\n            num_iter,\r\n            schedule='dynamic', chunksize=10,\r\n            nogil=True,\r\n            num_threads=4):\r\n```\r\nraises: `error: invalid entry to OpenMP structured block`. However, by moving `schedule` and `chunksize` to the same line as `num_iter` as shown below:\r\n\r\n```cython\r\nfor i in prange(\r\n            num_iter, schedule='dynamic', chunksize=10,\r\n            nogil=True,\r\n            num_threads=4):\r\n```\r\nit compiles just fine. The above issue happens only if `linetrace` feature of the compiler is enabled.\r\n\r\n**To Reproduce**\r\n\r\nIn `_module.pyx`:\r\n```cython\r\nfrom cython.parallel cimport prange\r\n\r\ncpdef void func():\r\n    cdef int i\r\n    cdef int num_iter=1000\r\n    for i in prange(\r\n            num_iter,\r\n            schedule='dynamic', # issue does not occur by moving this argument to the same line as \"num_iter\"\r\n            chunksize=10,       # issue does not occur by moving this argument to the same line as \"num_iter\"\r\n            nogil=True,\r\n            num_threads=4):\r\n        pass\r\n```\r\nIn `setup.py`:\r\n\r\n```cython\r\nfrom setuptools import setup\r\nfrom setuptools.extension import Extension\r\nfrom Cython.Build import cythonize\r\n\r\nextension = Extension(\r\n    \"_module\",\r\n    sources=[\"_module.pyx\"],\r\n    extra_compile_args=['-fopenmp'],\r\n    extra_link_args=['-fopenmp'],\r\n)\r\n\r\nexternal_module = cythonize(\r\n    extension,\r\n    compiler_directives={'linetrace': True}    # by removing this line, the issue does not occur \r\n)\r\n\r\nsetup(ext_modules=external_module)\r\n```\r\n\r\nIn `main.py`:\r\n\r\n```cython\r\nfrom _module import func\r\nfunc()\r\n```\r\nCython's error:\r\n\r\n```\r\nCompiling _module.pyx because it changed.\r\n[1/1] Cythonizing _module.pyx\r\n/opt/miniconda3/lib/python3.8/site-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /home/abc/test/_module.pyx\r\n  tree = Parsing.p_module(s, pxd, full_module_name)\r\nrunning build_ext\r\nbuilding '_module' extension\r\ngcc -pthread -B /opt/miniconda3/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/opt/miniconda3/include/python3.8 -c _module.c -o build/temp.linux-x86_64-3.8/_module.o -fopenmp\r\n_module.c: In function ‘__pyx_f_7_module_func’:\r\n_module.c:613:43: error: invalid entry to OpenMP structured block\r\n     { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }\r\n                                           ^\r\n_module.c:1150:71: note: in definition of macro ‘__Pyx_TraceLine’\r\n   #define __Pyx_TraceLine(lineno, nogil, goto_error)   if ((1)); else goto_error;\r\n                                                                       ^~~~~~~~~~\r\n_module.c:1338:33: note: in expansion of macro ‘__PYX_ERR’\r\n             __Pyx_TraceLine(8,1,__PYX_ERR(0, 8, __pyx_L8_error))\r\n                                 ^~~~~~~~~\r\nerror: command 'gcc' failed with exit status 1\r\n```\r\n\r\n**Expected behavior**\r\nArguments of `prange` can be typed in multiple lines without raising compilation errors.\r\n\r\n**Environment:**\r\n - OS: Ubuntu 18.04\r\n - Python version: 3.8.5\r\n - Cython version: 0.29.21",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4009/comments",
    "created_at": "2021-02-16T23:37:51Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4009/events",
    "html_url": "https://github.com/cython/cython/issues/4009",
    "id": 809727842,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4009/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4MDk3Mjc4NDI=",
    "number": 4009,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] When linetrace is enabled, schedule and chunksize parameters of prange cannot be typed in multiple lines",
    "updated_at": "2021-02-16T23:52:40Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4009",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2945135?v=4",
        "events_url": "https://api.github.com/users/ameli/events{/privacy}",
        "followers_url": "https://api.github.com/users/ameli/followers",
        "following_url": "https://api.github.com/users/ameli/following{/other_user}",
        "gists_url": "https://api.github.com/users/ameli/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ameli",
        "id": 2945135,
        "login": "ameli",
        "node_id": "MDQ6VXNlcjI5NDUxMzU=",
        "organizations_url": "https://api.github.com/users/ameli/orgs",
        "received_events_url": "https://api.github.com/users/ameli/received_events",
        "repos_url": "https://api.github.com/users/ameli/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ameli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ameli/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ameli"
    }
}