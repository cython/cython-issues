{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**Note:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\nThis [particular feature](https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/discriminated-unions#struct-discriminated-unions) even F# got recently.\r\n\r\n```\r\ninl main() =\r\n    inl ~x : option i32 = None\r\n    match x with\r\n    | Some: x => x\r\n    | None => 0\r\n```\r\n```\r\ncdef class US0:\r\n    cdef readonly unsigned long tag\r\ncdef class US0_0(US0): # none\r\n    def __init__(self): self.tag = 0\r\ncdef class US0_1(US0): # some_\r\n    cdef readonly signed long v0\r\n    def __init__(self, signed long v0): self.tag = 1; self.v0 = v0\r\ncpdef signed long main():\r\n    cdef US0 v0\r\n    cdef signed long v1\r\n    v0 = US0_0()\r\n    if v0.tag == 0: # none\r\n        return 0\r\n    elif v0.tag == 1: # some_\r\n        v1 = (<US0_1>v0).v0\r\n        return v1\r\n```\r\n\r\nRight now there is no difference between how stack (non-recursive) and heap (recursive) unions are compiled in the Cython backend. I had no choice, but to do a heap implementation for both of them.\r\n\r\nCython's cdef unions are not the right tool for the job. Not only do they not support Python objects, even if they did, the memory management system would not be able to handle them. So unless I want to mess with memory management and pointer myself in the backend, I have no choice but to leave the implementation as it is for the time being.\r\n\r\nThe result of that is that option types will have to go through the heap and be less efficient as a result.\r\n\r\nBut overall this issue is not as high priority as stack tuples.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "If you're just looking for to support \"value or None\" then it works (by default) with extension types. https://cython.readthedocs.io/en/latest/src/userguide/extension_types.html#extension-types-and-none.",
            "created_at": "2021-01-30T13:05:52Z",
            "html_url": "https://github.com/cython/cython/issues/3990#issuecomment-770209814",
            "id": 770209814,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3990",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDIwOTgxNA==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-30T13:05:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/770209814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I suppose the `option` type could be optimized for extension types and objects to just check whether they are None instead of wrapping them with the union wrapper. But this is not particularly important for me.\r\n\r\nMuch like with stack tuples, the main benefit of stack unions would be that they avoid the heap allocation of heap unions. That fact that the tag field would take some extra space on the stack is trivial in comparison.",
            "created_at": "2021-01-30T13:28:09Z",
            "html_url": "https://github.com/cython/cython/issues/3990#issuecomment-770212636",
            "id": 770212636,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3990",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDIxMjYzNg==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-30T13:28:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/770212636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6266635?v=4",
                "events_url": "https://api.github.com/users/mrakgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrakgr/followers",
                "following_url": "https://api.github.com/users/mrakgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrakgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrakgr",
                "id": 6266635,
                "login": "mrakgr",
                "node_id": "MDQ6VXNlcjYyNjY2MzU=",
                "organizations_url": "https://api.github.com/users/mrakgr/orgs",
                "received_events_url": "https://api.github.com/users/mrakgr/received_events",
                "repos_url": "https://api.github.com/users/mrakgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrakgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrakgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrakgr"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3990/comments",
    "created_at": "2021-01-29T14:37:28Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3990/events",
    "html_url": "https://github.com/cython/cython/issues/3990",
    "id": 796932851,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3990/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3OTY5MzI4NTE=",
    "number": 3990,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] Discriminated stack unions",
    "updated_at": "2021-01-30T13:28:09Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3990",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6266635?v=4",
        "events_url": "https://api.github.com/users/mrakgr/events{/privacy}",
        "followers_url": "https://api.github.com/users/mrakgr/followers",
        "following_url": "https://api.github.com/users/mrakgr/following{/other_user}",
        "gists_url": "https://api.github.com/users/mrakgr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mrakgr",
        "id": 6266635,
        "login": "mrakgr",
        "node_id": "MDQ6VXNlcjYyNjY2MzU=",
        "organizations_url": "https://api.github.com/users/mrakgr/orgs",
        "received_events_url": "https://api.github.com/users/mrakgr/received_events",
        "repos_url": "https://api.github.com/users/mrakgr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mrakgr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mrakgr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mrakgr"
    }
}