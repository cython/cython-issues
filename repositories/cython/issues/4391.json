{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "**Describe the bug**\r\nInference determines the wrong type (one indirection too much) when taking the address of a function. This results in a cython compiler error.\r\n\r\n**To Reproduce**\r\nCode to reproduce the behaviour:\r\n```cython\r\ncdef extern from \"header.h\":\r\n    void use(int)\r\n\r\n    ctypedef void(* Func)(int)\r\n    void with_callback(Func f)\r\n\r\ndef main():\r\n    with_callback(&use)  # OK\r\n\r\n    ptr = &use  # Cannot assign type 'void (*)(int)' to 'void (**)(int)'\r\n    with_callback(ptr)  # Cannot assign type 'void (**)(int)' to 'Func'\r\n```\r\n\r\n**Expected behavior**\r\nType `void (*)(int)` should be inferred for `ptr`, allowing the program to compile successfully.\r\n\r\n**Actual behavior**\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    void with_callback(Func f)\r\n\r\ndef main():\r\n    with_callback(&use)\r\n\r\n    ptr = &use\r\n         ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:10:10: Cannot assign type 'void (*)(int)' to 'void (**)(int)'\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\ndef main():\r\n    with_callback(&use)\r\n\r\n    ptr = &use\r\n    with_callback(ptr)\r\n                 ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:11:18: Cannot assign type 'void (**)(int)' to 'Func'\r\n```\r\n\r\n**Environment:**\r\n - OS: Windows\r\n - Python version: 3.9.1\r\n - Cython version: 0.29.24\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report, that seems wrong.\r\n\r\nThe code for that is in\r\nhttps://github.com/cython/cython/blob/97c05e7a936e1a8929ee8c3e2f6629cc061cb66b/Cython/Compiler/ExprNodes.py#L10512-L10513\r\n\r\nCan't say right now how exactly this can be fixed since functions and their pointers are a bit special in C. So this needs a bit more investigation. We already infer the function pointer from the function name in the base class (`UnopNode.infer_type()`), and then creating a pointer from that leads to the duplication.\r\n\r\nI added a test file for now, where we can put a test for this.\r\nhttps://github.com/cython/cython/commit/97c05e7a936e1a8929ee8c3e2f6629cc061cb66b\r\n\r\nNote that things like\r\n```cython\r\nf = &func\r\np = &f\r\np[0][0]\r\n```\r\nalso need to keep working, so just inferring the function itself instead of the pointer isn't correct either.\r\n\r\nCould you try to debug this a bit more?",
            "created_at": "2021-10-02T09:30:18Z",
            "html_url": "https://github.com/cython/cython/issues/4391#issuecomment-932722076",
            "id": 932722076,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4391",
            "node_id": "IC_kwDOABDGAc43mDWc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/932722076/reactions"
            },
            "updated_at": "2021-10-02T09:30:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/932722076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "So what's happening in C is that `func` is something called a \"function designator\". It has type `void (int)`, i.e. it's not a pointer at all.\r\nTaking the address of a function designator results in a function pointer.\r\n\r\nHowever, C also has a little known feature called \"function-to-function-pointer decay\". It's the lesser known brother of array-to-pointer decay.\r\nBasically, if you do anything with a function designator *except* taking its address, the C compiler will implicitly take the address of the function.\r\n\r\nSo `with_callback(use);` and `with_callback(&use);` are the same thing in C.\r\nEven `with_callback(*use);` works and does the exact same thing! (The function designator `use` can't be dereferenced, so it implicitly turns into a function pointer which can. The result of the dereference is another function designator `*&use`, which then also implicitly decays to `&*&use`).\r\nBasically, in C you can have an almost arbitary mixture of `&` and `*` in front of a function name. If there's two `&` in a row, you're taking the address of a function pointer rvalue, and that's a compiler error. But any other combination of `&` and `*` is valid and will (after decay) result in a single-level pointer to the function.\r\n\r\nhttps://godbolt.org/z/qq6P16cP7\r\n\r\nCython already supports all of:\r\n```\r\n    with_callback(use)   # OK\r\n    with_callback(&use)  # OK\r\n    with_callback((&use)[0])  # OK\r\n    with_callback(&(&use)[0])  # OK\r\n ```\r\nSo function designators seem to be supported by the cython compiler -- just not when inferring the type of a local variable. ",
            "created_at": "2021-10-02T12:19:48Z",
            "html_url": "https://github.com/cython/cython/issues/4391#issuecomment-932743007",
            "id": 932743007,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4391",
            "node_id": "IC_kwDOABDGAc43mIdf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/932743007/reactions"
            },
            "updated_at": "2021-10-02T12:19:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/932743007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243140?v=4",
                "events_url": "https://api.github.com/users/dgrunwald/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald/followers",
                "following_url": "https://api.github.com/users/dgrunwald/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald",
                "id": 243140,
                "login": "dgrunwald",
                "node_id": "MDQ6VXNlcjI0MzE0MA==",
                "organizations_url": "https://api.github.com/users/dgrunwald/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4391/comments",
    "created_at": "2021-10-01T13:20:02Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-02T08:50:33Z",
            "event": "labeled",
            "id": 5397900628,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc48ZlgizwAAAAFBvW1U",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5397900628"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-02T08:50:33Z",
            "event": "labeled",
            "id": 5397900629,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "LE_lADOABDGAc48ZlgizwAAAAFBvW1V",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5397900629"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4391/events",
    "html_url": "https://github.com/cython/cython/issues/4391",
    "id": 1013340194,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4391/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc48Zlgi",
    "number": 4391,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4391/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4391/timeline",
    "title": "[BUG] Incorrect type inferred for pointer to function",
    "updated_at": "2021-10-02T12:19:48Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4391",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/243140?v=4",
        "events_url": "https://api.github.com/users/dgrunwald/events{/privacy}",
        "followers_url": "https://api.github.com/users/dgrunwald/followers",
        "following_url": "https://api.github.com/users/dgrunwald/following{/other_user}",
        "gists_url": "https://api.github.com/users/dgrunwald/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dgrunwald",
        "id": 243140,
        "login": "dgrunwald",
        "node_id": "MDQ6VXNlcjI0MzE0MA==",
        "organizations_url": "https://api.github.com/users/dgrunwald/orgs",
        "received_events_url": "https://api.github.com/users/dgrunwald/received_events",
        "repos_url": "https://api.github.com/users/dgrunwald/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dgrunwald/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dgrunwald/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dgrunwald"
    }
}