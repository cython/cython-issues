{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "A normal Cython function gets wrapped in Python's native `staticmethod`:\r\n```python\r\ncimport cython \r\n@staticmethod \r\ndef statmeth(int arg): \r\n    return arg \r\n\r\nprint(statmeth) \r\n```\r\n```\r\n<staticmethod object at 0x7fbad8fcadd0>\r\n```\r\n\r\nHowever, fused functions are instead `cyfunction`, with the `__Pyx_CYFUNCTION_STATICMETHOD` flag set:\r\n```python\r\ncimport cython \r\n@staticmethod \r\ndef statmeth(cython.integral arg): \r\n    return arg \r\n\r\nprint(statmeth) \r\n```\r\n```\r\n<cyfunction statmeth at 0x7fbaa44ef140>\r\n```\r\n\r\nThis code:\r\n```c\r\n    if (func->self || func->func.flags & __Pyx_CYFUNCTION_STATICMETHOD) {\r\n        // Do not allow rebinding and don't do anything for static methods\r\n        Py_INCREF(self);\r\n        return self;\r\n    }\r\n```\r\nmeans that a fused staticmethod's `__get__` will return the staticmethod unchanged. This is different from Python's `staticmethod.__get__`, which instead returns the original function.\r\n```python\r\ncimport cython \r\n\r\nclass C:\r\n    @staticmethod \r\n    def normal(arg): \r\n        return arg \r\n\r\n    @staticmethod \r\n    def fused(cython.integral arg): \r\n        return arg \r\n\r\nobj = C()\r\n\r\nfor f in obj.normal, obj.fused: \r\n    print('normal:', f) \r\n    print('get once:', f.__get__(obj)) \r\n    print('get twice:', f.__get__(obj).__get__(obj)) \r\n    print('call:', f.__get__(obj).__get__(obj)()) \r\n    print() \r\n```\r\n```python\r\nnormal: <staticmethod object at 0x7fbaa4398c10>\r\nget once: <cyfunction normal at 0x7fbaa4529bb0>\r\nget twice: <bound method normal of 42>\r\ncall: 42\r\n\r\nnormal: <cyfunction fused at 0x7fbad8ee5c80>\r\nget once: <cyfunction fused at 0x7fbad8ee5c80>\r\nget twice: <cyfunction fused at 0x7fbad8ee5c80>\r\nTraceback (most recent call last)\r\n   ...\r\nTypeError: Expected at least 1 argument, got 0\r\n```\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Did you try this with the latest master?",
            "created_at": "2020-05-15T14:26:28Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629265638",
            "id": 629265638,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTI2NTYzOA==",
            "updated_at": "2020-05-15T14:26:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629265638",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Could be one of these: #3381 #3106",
            "created_at": "2020-05-15T14:29:25Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629267086",
            "id": 629267086,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTI2NzA4Ng==",
            "updated_at": "2020-05-15T14:29:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629267086",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, I get this on current master. (Though the reason I'm digging is trying to get Cython 0.29 compatible with Python 3.9.)\r\nThanks for the pointers. I believe it's something else, though I admit I'm somewhat lost in the codebase.\r\nIt looks to me like `CYFUNCTION_STATICMETHOD` is not really used in regular functions. I'm not sure how it's being set for the fused ones.\r\n",
            "created_at": "2020-05-15T14:49:02Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629276930",
            "id": 629276930,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTI3NjkzMA==",
            "updated_at": "2020-05-15T14:49:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629276930",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4",
                "events_url": "https://api.github.com/users/encukou/events{/privacy}",
                "followers_url": "https://api.github.com/users/encukou/followers",
                "following_url": "https://api.github.com/users/encukou/following{/other_user}",
                "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/encukou",
                "id": 302922,
                "login": "encukou",
                "node_id": "MDQ6VXNlcjMwMjkyMg==",
                "organizations_url": "https://api.github.com/users/encukou/orgs",
                "received_events_url": "https://api.github.com/users/encukou/received_events",
                "repos_url": "https://api.github.com/users/encukou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/encukou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/encukou"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> However, fused functions are instead cyfunction, with the __Pyx_CYFUNCTION_STATICMETHOD flag set\r\n\r\nThat at least has to be true, since the function still needs to act as a fused function (e.g. it needs to be indexable tos select the specialization).\r\n\r\nPossibly what should happen is for `__get__` to return a copy of the fused function without `__Pyx_CYFUNCTION_STATICMETHOD` set?",
            "created_at": "2020-05-15T17:20:14Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629380531",
            "id": 629380531,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM4MDUzMQ==",
            "updated_at": "2020-05-15T17:20:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629380531",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, that seems worth a try. It's a bit costly, though. I think, for the specific case of static methods, we could just cache the instance and always return it from that point on.",
            "created_at": "2020-05-15T17:26:16Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629383956",
            "id": 629383956,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM4Mzk1Ng==",
            "updated_at": "2020-05-15T17:26:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629383956",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> That at least has to be true, since the function still needs to act as a fused function (e.g. it needs to be indexable tos select the specialization).\r\n\r\nThat means using `staticmethod` as a decorator works differently than calling it, as in:\r\n\r\n```\r\ncimport cython \r\n \r\n@classmethod \r\ndef with_decorator(cython.numeric arg): \r\n    return arg \r\n \r\ndef _func(cython.numeric arg): \r\n    return arg \r\nwith_call = staticmethod(_func) \r\n\r\nwith_decorator[int]\r\n# with_call[int]  # error\r\n```\r\nIs that expected?",
            "created_at": "2020-05-15T17:41:05Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629390812",
            "id": 629390812,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM5MDgxMg==",
            "updated_at": "2020-05-15T17:41:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629390812",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4",
                "events_url": "https://api.github.com/users/encukou/events{/privacy}",
                "followers_url": "https://api.github.com/users/encukou/followers",
                "following_url": "https://api.github.com/users/encukou/following{/other_user}",
                "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/encukou",
                "id": 302922,
                "login": "encukou",
                "node_id": "MDQ6VXNlcjMwMjkyMg==",
                "organizations_url": "https://api.github.com/users/encukou/orgs",
                "received_events_url": "https://api.github.com/users/encukou/received_events",
                "repos_url": "https://api.github.com/users/encukou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/encukou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/encukou"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think it's probably unavoidable. It isn't ideal behaviour but having fused functions work as fused functions is more important than having them be perfectly consistent with Python functions.\r\n\r\nObviously a suitable fix would be an improvement, but it's hard to see what that fix would be.",
            "created_at": "2020-05-15T17:45:03Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629392729",
            "id": 629392729,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM5MjcyOQ==",
            "updated_at": "2020-05-15T17:45:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629392729",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is that expected?\r\n\r\nWell, I don't see a way around this. `staticmethod` is implemented on Python side. I mean, ok, we could special case it inside of Cython compiled code, but then it would still behave differently when you run your code uncompiled (actually, I guess it already does that…) or call the decorator elsewhere or by other (not so obvious) means.",
            "created_at": "2020-05-15T17:45:57Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629393151",
            "id": 629393151,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM5MzE1MQ==",
            "updated_at": "2020-05-15T17:45:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629393151",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I guess the hyper-correct thing would be a `cython.staticmethod` decorator. But I'll let you weigh the pros and cons; I'm just making sure you're aware of the edge case.",
            "created_at": "2020-05-15T17:50:12Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629395108",
            "id": 629395108,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM5NTEwOA==",
            "updated_at": "2020-05-15T17:50:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629395108",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4",
                "events_url": "https://api.github.com/users/encukou/events{/privacy}",
                "followers_url": "https://api.github.com/users/encukou/followers",
                "following_url": "https://api.github.com/users/encukou/following{/other_user}",
                "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/encukou",
                "id": 302922,
                "login": "encukou",
                "node_id": "MDQ6VXNlcjMwMjkyMg==",
                "organizations_url": "https://api.github.com/users/encukou/orgs",
                "received_events_url": "https://api.github.com/users/encukou/received_events",
                "repos_url": "https://api.github.com/users/encukou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/encukou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/encukou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the hyper-correct thing would be a cython.staticmethod decorator\r\n\r\n… and then users would forget to import that and would still end up with the Python one, but only in 43% of the cases. ¯\\_(ツ)_/¯",
            "created_at": "2020-05-15T17:54:15Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629396885",
            "id": 629396885,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM5Njg4NQ==",
            "updated_at": "2020-05-15T17:54:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629396885",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Looking at it again, I'm not sure there's a good reason for static fused methods to be special most of the time. Except in cdef classes they behave fine when just wrapped with `staticmethod`.\r\n\r\n`classmethod` looks like it does have to stay special, so will probably have similar slight incompatibilities.\r\n\r\n`__get__` does become quite expensive for `staticmethod` though since it has to copy a fairly complex structure instead of just incrementing a reference. It might be worth fixing it though - although I should probably understand it a little better first.",
            "created_at": "2020-05-16T09:16:56Z",
            "html_url": "https://github.com/cython/cython/issues/3614#issuecomment-629615211",
            "id": 629615211,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3614",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTYxNTIxMQ==",
            "updated_at": "2020-05-16T09:16:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629615211",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3614/comments",
    "created_at": "2020-05-15T14:23:54Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3614/events",
    "html_url": "https://github.com/cython/cython/issues/3614",
    "id": 619004191,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3614/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2MTkwMDQxOTE=",
    "number": 3614,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Fused staticmethod is not unwrapped in __get__",
    "updated_at": "2020-05-16T09:16:56Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3614",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4",
        "events_url": "https://api.github.com/users/encukou/events{/privacy}",
        "followers_url": "https://api.github.com/users/encukou/followers",
        "following_url": "https://api.github.com/users/encukou/following{/other_user}",
        "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/encukou",
        "id": 302922,
        "login": "encukou",
        "node_id": "MDQ6VXNlcjMwMjkyMg==",
        "organizations_url": "https://api.github.com/users/encukou/orgs",
        "received_events_url": "https://api.github.com/users/encukou/received_events",
        "repos_url": "https://api.github.com/users/encukou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/encukou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/encukou"
    }
}