{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Variables of mixed type, one is signed and one is unsigned is occurring in a Boolean compare expression. This leads to false results to the compare operation.\r\nSystem:\r\nopenSUSE Leap 15.2 linux 64-bit\r\nLinux localhost.localdomain 5.3.18-lp152.106-default #1 SMP Mon Nov 22 08:38:17 UTC 2021 (52078fe) x86_64 x86_64 x86_64\r\ngcc version 7.5.0\r\nPython 2.7.18\r\nCython version 3.0.0a10\r\n\r\nSource code:\r\n\r\n```cython\r\n    cdef mod_int _new_random_prime(self, set known_primes) except 1:\r\n        \"\"\"\r\n        Choose a new random prime for inclusion in the list of moduli,\r\n        or raise a ``RuntimeError`` if there are no more primes.\r\n\r\n        INPUT:\r\n\r\n        - ``known_primes`` -- Python set of already known primes in\r\n          the allowed interval; we will not return a prime in\r\n          known_primes.\r\n        \"\"\"\r\n        cdef Py_ssize_t i\r\n        cdef mod_int p\r\n        while True:\r\n            if len(known_primes) >= self._num_primes:\r\n                raise RuntimeError(\"there are not enough primes in the interval [%s, %s] to complete this multimodular computation\"%(self._l_bound, self._u_bound))\r\n            p = random_prime(self._u_bound, lbound =self._l_bound)\r\n            if p not in known_primes:\r\n                return p\r\n```\r\n\r\n-----------------------------\r\nCythonized output:\r\n```c\r\n  while (1) {\r\n\r\n    /* \"sage/arith/multi_modular.pyx\":199\r\n *         cdef mod_int p\r\n *         while True:\r\n *             if len(known_primes) >= self._num_primes:             # <<<<<<<<<<<<<<\r\n *                 raise RuntimeError(\"there are not enough primes in the interval [%s, %s] to complete this multimodular computation\"%(self._l_bound, self._u_bound))\r\n *             p = random_prime(self._u_bound, lbound =self._l_bound)\r\n */\r\n    if (unlikely(__pyx_v_known_primes == Py_None)) {\r\n      PyErr_SetString(PyExc_TypeError, \"object of type 'NoneType' has no len()\");\r\n      __PYX_ERR(0, 199, __pyx_L1_error)\r\n    }\r\n    __pyx_t_1 = PySet_GET_SIZE(__pyx_v_known_primes); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 199, __pyx_L1_error)\r\n    __pyx_t_2 = ((__pyx_t_1 >= __pyx_v_self->_num_primes) != 0);\r\n    if (unlikely(__pyx_t_2)) {\r\n\r\n      /* \"sage/arith/multi_modular.pyx\":200\r\n *         while True:\r\n *             if len(known_primes) >= self._num_primes:\r\n *                 raise RuntimeError(\"there are not enough primes in the interval [%s, %s] to complete this multimodular computation\"%(self._l_bound, self._u_bound))             # <<<<<<<<<<<<<<\r\n *             p = random_prime(self._u_bound, lbound =self._l_bound)\r\n *             if p not in known_primes:\r\n */\r\n```\r\n------------------------------\r\nPROBLEM:\r\n```c\r\n    __pyx_t_2 = ((__pyx_t_1 >= __pyx_v_self->_num_primes) != 0);\r\n```\r\n\r\nis comparing a signed versus an unsigned variable.\r\n\r\nWhile l_bounds and u_bounds are unsigned integers, used later on in creating self->_num_primes which means that _num_primes is possibly set as an unsigned value, later on _num_primes is set by the call to the primes_pi() function which returns an Integer(n) value which can be negative or positive so apparently Integer() is signed.\r\n\r\nWhat does the function call PySet_GET_SIZE() return? signed or unsigned?\r\nIn any case a compare between mixed types is occurring.\r\n\r\nThere are 161 warnings of this type occurring in the sage code.\r\n",
    "closed_at": "2022-01-27T19:29:31Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmm. Difficult to say if there is something we can do here. `len()` returns the usual Python C-API size type, which is signed (`ssize_t` typedefed as `Py_ssize_t`). It's signed because indexing can be negative in Python, so unsigned sizes would get in the way quickly.\r\n\r\nIf you compare a `len()` result to an unsigned integer then yes, you get a comparison between signed and unsigned. Since the normal C integer types are signed, and the users has to do something in order to get an unsigned type, I think the right way is to let the user resolve this mismatch. Meaning, you have to apply an explicit cast that goes either way. Cython cannot decide whether a signed or unsigned comparison is the safe choice here.",
            "created_at": "2022-01-27T19:17:19Z",
            "html_url": "https://github.com/cython/cython/issues/4596#issuecomment-1023558419",
            "id": 1023558419,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4596",
            "node_id": "IC_kwDOABDGAc49AkMT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1023558419/reactions"
            },
            "updated_at": "2022-01-27T19:17:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1023558419",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'll close this as not a bug. Users should apply a cast in this case.",
            "created_at": "2022-01-27T19:29:31Z",
            "html_url": "https://github.com/cython/cython/issues/4596#issuecomment-1023567467",
            "id": 1023567467,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4596",
            "node_id": "IC_kwDOABDGAc49AmZr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1023567467/reactions"
            },
            "updated_at": "2022-01-27T19:29:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1023567467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4596/comments",
    "created_at": "2022-01-27T18:49:09Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-27T19:29:04Z",
            "event": "labeled",
            "id": 5966245192,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "LE_lADOABDGAc5CjllpzwAAAAFjna1I",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5966245192"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-27T19:29:32Z",
            "event": "closed",
            "id": 5966247636,
            "node_id": "CE_lADOABDGAc5CjllpzwAAAAFjnbbU",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5966247636"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4596/events",
    "html_url": "https://github.com/cython/cython/issues/4596",
    "id": 1116625257,
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 414800623,
            "name": "support question",
            "node_id": "MDU6TGFiZWw0MTQ4MDA2MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/support%20question"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4596/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5Cjllp",
    "number": 4596,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4596/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4596/timeline",
    "title": "[BUG] Compare of signed and unsigned variables",
    "updated_at": "2022-01-27T19:29:32Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4596",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/73915626?v=4",
        "events_url": "https://api.github.com/users/website-reader/events{/privacy}",
        "followers_url": "https://api.github.com/users/website-reader/followers",
        "following_url": "https://api.github.com/users/website-reader/following{/other_user}",
        "gists_url": "https://api.github.com/users/website-reader/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/website-reader",
        "id": 73915626,
        "login": "website-reader",
        "node_id": "MDQ6VXNlcjczOTE1NjI2",
        "organizations_url": "https://api.github.com/users/website-reader/orgs",
        "received_events_url": "https://api.github.com/users/website-reader/received_events",
        "repos_url": "https://api.github.com/users/website-reader/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/website-reader/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/website-reader/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/website-reader"
    }
}