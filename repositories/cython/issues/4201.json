{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "<!--\r\n**Note:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nRelated to https://github.com/cython/cython/issues/3883 and https://github.com/cython/cython/pull/3910, should `typing.Union` be interpreted as a fused type? (It'd obviously need to be ignored in `cdef class`es and maybe a few other contexts since you wouldn't want it to break anything in places where fused types can't be used)\r\n\r\n**Additional context**\r\n\r\nIt's not completely obvious that this is the right thing to do. Thus I'm not proposing to put it in the initial implementation of `typing`. But it's probably a reasonable interpretation of the type.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Would be a nice feature, I think.\r\n\r\nNote that this also suffers from the general problem that builtin type declarations are strict types in Cython (disallowing subtypes) but allow subtypes in Python. So something like `Union[list, tuple]` (or `Union[List, Tuple]`) would really translate to `Union[list, tuple, object]`. Which, BTW, is always a safe fallback to have. It just generates more code, as well as a runtime performance hit when entering Python functions.\r\n\r\nIn the worst case, we can still add a directive to disable it later. It shouldn't hurt much to do this unconditionally to start with. (Note that any additional directive effectively cuts our test coverage in half.)",
            "created_at": "2021-06-09T08:05:57Z",
            "html_url": "https://github.com/cython/cython/issues/4201#issuecomment-857481949",
            "id": 857481949,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4201",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzQ4MTk0OQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-09T08:05:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/857481949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> So something like `Union[list, tuple]` (or `Union[List, Tuple]`) would really translate to `Union[list, tuple, object]`. Which, BTW, is always a safe fallback to have. It just generates more code, as well as a runtime performance hit when entering Python functions.\r\n\r\nI don't know if this makes sense, but if we want to correspond to python as closely as possible, then in case of a discrepancy of `Union[List, Tuple]`, we can first fallback to `Union[MutableSequence, Sequence]` (in general, you can fallback even further), and then to the `object`.",
            "created_at": "2021-06-29T11:26:07Z",
            "html_url": "https://github.com/cython/cython/issues/4201#issuecomment-870511753",
            "id": 870511753,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4201",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDUxMTc1Mw==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-29T11:26:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/870511753",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't know if this makes sense, but if we want to correspond to python as closely as possible, then in case of a discrepancy of `Union[List, Tuple]`, we can first fallback to `Union[MutableSequence, Sequence]` (in general, you can fallback even further), and then to the `object`.\r\n\r\nIf that proves to be helpful type information, then yes. Currently, the only relevant type information is \"know type with known behaviour\" (all builtins, no subtypes) versus \"unknown type or unknown behaviour\" (e.g. `object` or a subtype of a builtin type). Everything else doesn't help much at the C level.\r\n\r\nThere is also a use case for knowing that it's \"definitely not type X\", which we could use for disabling certain optimistic type adaptations to reduce the code and runtime overhead. That could be relevant for the `object` case, for example. If we have a fused type that includes `list`, `tuple` and `object`, then we could eliminate the first two from the last case. Not something that's currently part of Cython's type system, though. (And not something to solve in this ticket.)",
            "created_at": "2021-06-29T14:44:32Z",
            "html_url": "https://github.com/cython/cython/issues/4201#issuecomment-870664116",
            "id": 870664116,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4201",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDY2NDExNg==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-29T14:44:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/870664116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> If that proves to be helpful type information, then yes. Currently, the only relevant type information is \"know type with known behaviour\" (all builtins, no subtypes) versus \"unknown type or unknown behaviour\" (e.g. `object` or a subtype of a builtin type). Everything else doesn't help much at the C level.\r\n\r\nThis generally goes back to being able to benefit from duck typing when compiling.\r\nYou can probably get something from this, but I can't say anything concrete right now.\r\n\r\n> There is also a use case for knowing that it's \"definitely not type X\", which we could use for disabling certain optimistic type adaptations to reduce the code and runtime overhead. That could be relevant for the `object` case, for example. If we have a fused type that includes `list`, `tuple` and `object`, then we could eliminate the first two from the last case. Not something that's currently part of Cython's type system, though. (And not something to solve in this ticket.)\r\n\r\nAn interesting idea for optimization, it would be necessary to create such a issue if it doesn't exist yet.\r\n",
            "created_at": "2021-06-29T15:05:02Z",
            "html_url": "https://github.com/cython/cython/issues/4201#issuecomment-870680405",
            "id": 870680405,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4201",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDY4MDQwNQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-29T15:05:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/870680405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4201/comments",
    "created_at": "2021-05-30T08:20:25Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-30T08:21:18Z",
            "event": "labeled",
            "id": 4816859640,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ4MTY4NTk2NDA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4816859640"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-30T08:21:28Z",
            "event": "labeled",
            "id": 4816859763,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ4MTY4NTk3NjM=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4816859763"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-06-09T07:55:45Z",
            "event": "unlabeled",
            "id": 4863288716,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDg2MzI4ODcxNg==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4863288716"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-06-09T07:55:45Z",
            "event": "labeled",
            "id": 4863288718,
            "label": {
                "color": "444444",
                "name": "Cython Language Feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ4NjMyODg3MTg=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4863288718"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-06-09T07:55:45Z",
            "event": "labeled",
            "id": 4863288720,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ4NjMyODg3MjA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4863288720"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4201/events",
    "html_url": "https://github.com/cython/cython/issues/4201",
    "id": 906677840,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425559948,
            "name": "Cython Language Feature",
            "node_id": "MDU6TGFiZWw0MjU1NTk5NDg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Cython%20Language%20Feature"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4201/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MDY2Nzc4NDA=",
    "number": 4201,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] typing.Union -> fused type?",
    "updated_at": "2021-06-29T15:05:02Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4201",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}