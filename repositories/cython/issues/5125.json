{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\n\nI am looking at the last example here: https://docs.cython.org/en/latest/src/userguide/parallelism.html\r\n\r\nHere is the documentation linked to: https://www.openmp.org/wp-content/uploads/spec30.pdf\r\n\r\nBut that is C, C++ documentation and does not actually show the API syntax at all for Cython.\r\n\r\nYou just give the one example using `with nogil, parallel():` \r\n\r\nThe above which I have no idea which openmp c++ api it is using, with my best guess being something like:\r\n\r\n```\r\nvoid a1(int n, float *a, float *b)\r\n{\r\nint i;\r\n#pragma omp parallel for\r\nfor (i=1; i<n; i++) /* i is private by default */\r\nb[i] = (a[i] + a[i-1]) / 2.0;\r\n```\r\nfrom the linked to openmp documentation.\r\n\r\nI also want to do reductions but in that case what is the syntax?\r\n\r\nAre users supposed to poke around in the dark taking wild guesses at what the api calls would be by looking at C++ documentation?\r\n\r\nIf you're going to release something, please document it.  We are not all super duper brilliant like you folks.  \r\n\n\n### Describe the solution you'd like.\n\nDocumentation of Cython OpenMP and way more examples.\r\n\r\nAlso Jupyter lab or notebook style documentation where I can execute cells, make edits, execute, etc. \n\n### Describe alternatives you've considered.\n\nI'm in Jupyter lab taking guesses, also trying in a .pyx file, incredibly frustrating to say the least and I'm about to throw it away and just write C or C++ which seems wasteful of your efforts so far.  \n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Just a few quick comments:\r\n\r\n> I also want to do reductions but in that case what is the syntax?\r\n\r\nThere's specifically an example in the documentation of that:\r\n\r\n```\r\nfrom cython.parallel import prange\r\n\r\ncdef int i\r\ncdef int n = 30\r\ncdef int sum = 0\r\n\r\nfor i in prange(n, nogil=True):\r\n    sum += i\r\n\r\nprint(sum)\r\n```\r\n\r\nEssentially Cython infers the reduction for you when you do `+=` or similar.\r\n\r\n> Also Jupyter lab or notebook style documentation where I can execute cells, make edits, execute, etc.\r\n\r\nI don't think this is realistic - I'm not sure we have the expertise or resources to set up a server where we can let people can safely run arbitrary C code. I agree it sounds nice, but I don't really see how we can do that.\r\n\r\n> [...] just write C or C++ [...]\r\n\r\nIf you want to generate very specific OpenMP/C/C++ code then this is actually a pretty good idea - sometimes it's most appropriate to use Cython as a wrapper around some hand-written C or C++..\r\n\r\n----------------------------------------------------------------\r\n\r\nThere's definitely room for improvement with the documentation - I think probably a \"tutorial\" style introduction to parallelism might be a good idea. There's a bit of a balance with writing for users that know C, and users that don't know C. You obviously want to know what OpenMP code is generated but this would be confusing to a lot of other people.\r\n\r\nEssentially what Cython does with parallelization is `openmp parallel for` (`prange` in Cython), and `openmp parallel` (`parallel` in Cython). It's able to infer reductions for parallel for loops. There isn't a much customization available beyond that though - if you want more control you're probably better hand-writing it.\r\n\r\nConvincing yourself that it's generated the right C code is a bit of a challenge and possibly something we should do better on. But I don't have too many good ideas here.\r\n\r\nI'll have a go at writing a more tutorially introduction when I have time.",
            "created_at": "2022-11-11T20:21:17Z",
            "html_url": "https://github.com/cython/cython/issues/5125#issuecomment-1312162963",
            "id": 1312162963,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5125",
            "node_id": "IC_kwDOABDGAc5ONgST",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1312162963/reactions"
            },
            "updated_at": "2022-11-11T20:21:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1312162963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5125/comments",
    "created_at": "2022-11-11T12:18:28Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5125/events",
    "html_url": "https://github.com/cython/cython/issues/5125",
    "id": 1445394152,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5125/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5WJvbo",
    "number": 5125,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5125/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5125/timeline",
    "title": "[ENHWhere is the openMP documentation",
    "updated_at": "2022-11-11T20:21:17Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5125",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/25189545?v=4",
        "events_url": "https://api.github.com/users/nyck33/events{/privacy}",
        "followers_url": "https://api.github.com/users/nyck33/followers",
        "following_url": "https://api.github.com/users/nyck33/following{/other_user}",
        "gists_url": "https://api.github.com/users/nyck33/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nyck33",
        "id": 25189545,
        "login": "nyck33",
        "node_id": "MDQ6VXNlcjI1MTg5NTQ1",
        "organizations_url": "https://api.github.com/users/nyck33/orgs",
        "received_events_url": "https://api.github.com/users/nyck33/received_events",
        "repos_url": "https://api.github.com/users/nyck33/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nyck33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nyck33/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nyck33"
    }
}