{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "```\r\n[1/1] Cythonizing giacpy/giacpy.pyx\r\n/usr/lib64/python3.8/site-packages/Cython/Compiler/Main.py:344: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /builddir/build/BUILD/giacpy-0.7.0/giacpy/giacpy.pxd\r\n  tree = Parsing.p_module(s, pxd, full_module_name)\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 129, in <module>\r\n    ext_modules+=cythonize([Extension(\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Build/Dependencies.py\", line 1105, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Build/Dependencies.py\", line 1246, in cythonize_one\r\n    result = compile_single(pyx_file, options, full_module_name=full_module_name)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Main.py\", line 575, in compile_single\r\n    return run_pipeline(source, options, full_module_name)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Main.py\", line 503, in run_pipeline\r\n    err, enddata = Pipeline.run_pipeline(pipeline, source)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Pipeline.py\", line 356, in run_pipeline\r\n    data = run(phase, data)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Pipeline.py\", line 336, in run\r\n    return phase(data)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Pipeline.py\", line 52, in generate_pyx_code_stage\r\n    module_node.process_implementation(options, result)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/ModuleNode.py\", line 167, in process_implementation\r\n    self.generate_c_code(env, options, result)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/ModuleNode.py\", line 459, in generate_c_code\r\n    self.generate_module_init_func(modules[:-1], env, globalstate['init_module'])\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/ModuleNode.py\", line 2797, in generate_module_init_func\r\n    self.body.generate_execution_code(code)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Nodes.py\", line 403, in generate_execution_code\r\n    stat.generate_execution_code(code)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Nodes.py\", line 403, in generate_execution_code\r\n    stat.generate_execution_code(code)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Nodes.py\", line 5142, in generate_execution_code\r\n    self.body.generate_execution_code(code)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Nodes.py\", line 403, in generate_execution_code\r\n    stat.generate_execution_code(code)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Nodes.py\", line 5529, in generate_execution_code\r\n    self.generate_assignment_code(code)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/Nodes.py\", line 5826, in generate_assignment_code\r\n    self.lhs.generate_assignment_code(self.rhs, code)\r\n  File \"/usr/lib64/python3.8/site-packages/Cython/Compiler/ExprNodes.py\", line 2344, in generate_assignment_code\r\n    namespace = self.entry.scope.namespace_cname\r\nAttributeError: 'PropertyScope' object has no attribute 'namespace_cname'\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here is a minimum reproducer.\r\n```\r\ncdef class HelpClass:\r\n\r\n     def help(self):\r\n        return \"help, I need somebody\"\r\n\r\n\r\n     property help:\r\n         def __get__(self):\r\n           return self.help()\r\n```",
            "created_at": "2021-01-12T07:59:05Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758478697",
            "id": 758478697,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQ3ODY5Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T07:59:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758478697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I didn't know about the `property xxx:` syntax. Is it documented somewhere? The only documentation I see is for using it as a decorator: `@property`. ",
            "created_at": "2021-01-12T08:03:59Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758481057",
            "id": 758481057,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQ4MTA1Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T08:03:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758481057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "@Mattip https://cython.readthedocs.io/en/latest/src/userguide/extension_types.html#properties - it's an older syntax from before Cython supported decorator properties.\r\n\r\nI'm not completely sure if it should be possible to have a function called `help` and a property called `help`, but it shouldn't crash.",
            "created_at": "2021-01-12T08:13:43Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758485929",
            "id": 758485929,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQ4NTkyOQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T08:13:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758485929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ahh, thanks for the clarification. Using a decorator gives the same cython `AttributeError`:\r\n```\r\ncdef class HelpClass:\r\n\r\n     def help(self):\r\n        return \"help, I need somebody\"\r\n\r\n\r\n     @property\r\n     def help(self):\r\n        return self.help()\r\n```\r\nand trying to reuse the property as a method gives a recursion error in CPython (which makes sense since the property, appearing later in the definition, overrides the method)\r\n\r\n```help.py\r\nclass HelpClass:\r\n\r\n     def help(self):\r\n        return \"help, I need somebody\"\r\n\r\n\r\n     @property\r\n     def help(self):\r\n        return self.help()\r\n\r\n\r\nh = HelpClass()\r\nprint(h.help)\r\n```\r\n\r\nSo maybe raising an error here is the correct thing to do. I wonder how/why it works pre-cython-3.0 ?",
            "created_at": "2021-01-12T08:25:05Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758491898",
            "id": 758491898,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQ5MTg5OA==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T08:25:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758491898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "It fails on the current 0.29.x branch. If I go back to 0.28.6 then it just returns the method (i.e. the property doesn't to have work)\r\n\r\n```\r\n>>> HelpClass().help\r\n<built-in method help of prop.HelpClass object at 0x7f65b4a3be80>\r\n```",
            "created_at": "2021-01-12T08:29:11Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758494021",
            "id": 758494021,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQ5NDAyMQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T08:29:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758494021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What is the desired behaviour?\r\n- silently allow a property and method to override eachother (like python), which is a change in behaviour between 0.28 and 3.0 and will result in unhappy faces from giacpy since they will get runtime recursion errors\r\n- raise an error if a property has the same name as a class method/attribute when parsing\r\n- easy way out: wrap line 2344 in `generate_assignment_code` with a `try`/`except` to call `error()` instead.",
            "created_at": "2021-01-12T08:39:27Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758499202",
            "id": 758499202,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQ5OTIwMg==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T08:39:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758499202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Or go back to 0.28 behaviour which seems to be \"not override a method/attribute with a property\"",
            "created_at": "2021-01-12T08:41:19Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758500144",
            "id": 758500144,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODUwMDE0NA==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T08:41:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758500144",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Probably one of:\r\n\r\n* silently allow a property and method to override eachother (like python), which is a change in behaviour between 0.28 and 3.0 and will result in unhappy faces from giacpy since they will get runtime recursion errors\r\n* raise an error if a property has the same name as a class method/attribute when parsing\r\n\r\nMost likely the latter (simply because it's easiest to do).\r\n\r\nPersonally I don't think the 0.28 behaviour was ever meaningfully correct, but it has the advantage of not changing things.\r\n\r\n--------------\r\n\r\nIt looks like something that really needs to be fixed in giacpy though, even if Cython could handle it better too. Based on the simplified test they could probably just delete the property.",
            "created_at": "2021-01-12T08:54:10Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758507038",
            "id": 758507038,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODUwNzAzOA==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T08:54:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758507038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Both: cython should handle this better and giacpy needs a fix. I could not figure out how to register to file an issue at [giacpy](https://gitlab.math.univ-paris-diderot.fr/han/giacpy), so I sent an email to the owner. \r\n\r\nI am trying to write a failing test for this, but have run into a problem. Do the tests/error/test*.py tests actually run properly? Modifying the error message in a random error test, say `e_decorators.pyx`, and running `python runtests.py e_decorators` passes, even though the error messages now do not match. Modifying the code to not raise an error also passes the test run. Is this expected?",
            "created_at": "2021-01-12T12:49:11Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758634295",
            "id": 758634295,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODYzNDI5NQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T12:49:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758634295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The author of giacpy has [fixed the source](https://gitlab.math.univ-paris-diderot.fr/han/giacpy/-/commit/223018904e80c5d839e1c727ce136d2886b55b2e) and I checked that was sufficient to allow cython to process the file.",
            "created_at": "2021-01-12T13:49:53Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758666787",
            "id": 758666787,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODY2Njc4Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T13:49:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758666787",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> I am trying to write a failing test for this, but have run into a problem. Do the tests/error/test*.py tests actually run properly? Modifying the error message in a random error test, say `e_decorators.pyx`, and running `python runtests.py e_decorators` passes, even though the error messages now do not match. Modifying the code to not raise an error also passes the test run. Is this expected?\r\n\r\nThey do work in general, but `e_decorators.pyx` in particular looks broken. I'm not 100% sure but I think `_ERRORS` has to be the last thing in the file.",
            "created_at": "2021-01-12T17:16:27Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-758808992",
            "id": 758808992,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODgwODk5Mg==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-12T17:16:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/758808992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I am looking for the correct spot to \"raise an error if a property decorator has the same name as a class method/attribute when parsing\".  One strategy would be when visiting attributes/methods check for a decorator, and when visiting the decorator check attributes/methods. Is there something like a resolver pass in the ParseTreeTrasforms that would be a good place to do this? \r\n\r\nxref #3975 which fixed the `e_decorators.pyx` test.",
            "created_at": "2021-01-24T12:51:57Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-766343031",
            "id": 766343031,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjM0MzAzMQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-24T12:51:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/766343031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I'd think it'd probably be when decorators are set up in [`AnalyseDeclarationsTransform`](https://github.com/cython/cython/blob/master/Cython/Compiler/ParseTreeTransforms.py#L1632) or possibly in `PropertyNode.analyse_expressions` (or `PropertyNode.analyse_declarations`). I'm guessing the difficulty would be that properties usually implemented in terms of a function of the same name, so you need to ignore that.",
            "created_at": "2021-01-24T13:02:14Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-766344425",
            "id": 766344425,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjM0NDQyNQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-24T13:02:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/766344425",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tried something in #3984, but it is not correct. I am not sure I am on the right track.",
            "created_at": "2021-01-24T18:02:13Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-766403912",
            "id": 766403912,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjQwMzkxMg==",
            "performed_via_github_app": null,
            "updated_at": "2021-01-24T18:02:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/766403912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This discussion is a bit theoretical now that giacpy has cleaned up the code causing this.\r\n\r\nI think #3984 is correctly raising an error, but it is a change in parsing behaviour and will require adjusting some other tests. Previously, a property and an attribute/method with the same name could co-exists in a cdef class. The property would externally shadow the attribut/method, and internally would call the shadowed mangled name, so there was no RecursionError. But this behviour is not really correct. \r\n\r\nThe [pure-python test](https://github.com/cython/cython/pull/3984/files#diff-cfbf53318ca35a41eb563e59be5296e1342cfa61d8a3b40f6a065ea279b9166fR1) I added, which segfaults in Cython, shows that Cython does not correctly create the RecursionError that python emits.",
            "created_at": "2021-02-09T12:07:47Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-775891284",
            "id": 775891284,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTg5MTI4NA==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-09T12:07:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/775891284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> The [pure-python test](https://github.com/cython/cython/pull/3984/files#diff-cfbf53318ca35a41eb563e59be5296e1342cfa61d8a3b40f6a065ea279b9166fR1) I added, which segfaults in Cython, shows that Cython does not correctly create the RecursionError that python emits.\r\n\r\nI don't think Cython does anything to detect recursion (so I'd expect a crash rather than a RecursionError). It looks like there's a [new API in Python 3.9](https://docs.python.org/3/c-api/exceptions.html#recursion-control) than could be used to detect recursion. Although it seems like it might be more overhead than is justified for the feature.",
            "created_at": "2021-02-12T20:50:03Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-778447395",
            "id": 778447395,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODQ0NzM5NQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-12T20:50:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/778447395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is there a way to assert that a segfault is the intended result of a test or should I remove the test from the PR?",
            "created_at": "2021-02-14T07:35:56Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-778740606",
            "id": 778740606,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODc0MDYwNg==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-14T07:35:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/778740606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Could you do\r\n\r\n```\r\n@property\r\ndef p(self):\r\n  self.call_count += 1\r\n  if self.call_count > 10: raise Recursion error\r\n  return self.p()\r\n```\r\n\r\nThe objective is to test that the property calls overrides the function and thus calls itself. It doesn't need to go to \"completion\" to show that.",
            "created_at": "2021-02-14T08:48:07Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-778747254",
            "id": 778747254,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODc0NzI1NA==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-14T08:48:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/778747254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The fixed test shows that overriding an attribute/method with a property works in non-cdef, python classes. But now we are back to the beginning: in a cdef class, nodes with the same name are added to the class's `stats.body` list and do not replace each other. In the example\r\n```\r\ncdef class A:\r\n    def fortytwo(self):\r\n        return 42\r\n\r\n    def fortytwo(self):\r\n        return '42'\r\n\r\n    @property\r\n    def fortytwo(self):\r\n        return 'fortytwo'\r\n```\r\n\r\nthere will be three nodes named `fortytwo` on the `CClassDefNode.stats` when it reaches `CClassDefNode.generate_execution_code()`. Shouldn't the second override the first and remove the node, and then the third override the second and remove it as well? ",
            "created_at": "2021-02-15T21:57:09Z",
            "html_url": "https://github.com/cython/cython/issues/3651#issuecomment-779465639",
            "id": 779465639,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3651",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTQ2NTYzOQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-15T21:57:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/779465639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3651/comments",
    "created_at": "2020-05-30T15:30:33Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-30T15:30:33Z",
            "event": "labeled",
            "id": 3389829658,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMzODk4Mjk2NTg=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3389829658"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-30T15:30:33Z",
            "event": "milestoned",
            "id": 3389829660,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMzODk4Mjk2NjA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3389829660"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-06-10T08:17:29Z",
            "event": "labeled",
            "id": 3428426452,
            "label": {
                "color": "444444",
                "name": "P: blocker"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDM0Mjg0MjY0NTI=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3428426452"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-01-12T08:13:43Z",
            "event": "mentioned",
            "id": 4194551741,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE5NDU1MTc0MQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4194551741"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-01-12T08:13:43Z",
            "event": "subscribed",
            "id": 4194551748,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxOTQ1NTE3NDg=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4194551748"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3651/events",
    "html_url": "https://github.com/cython/cython/issues/3651",
    "id": 627757585,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557145,
            "name": "P: blocker",
            "node_id": "MDU6TGFiZWw0MjU1NTcxNDU=",
            "url": "https://api.github.com/repos/cython/cython/labels/P:%20blocker"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3651/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 303,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 23,
        "state": "open",
        "title": "3.0",
        "updated_at": "2021-01-26T18:49:42Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU2Mjc3NTc1ODU=",
    "number": 3651,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "giacpy fails to build with Cython 3.0",
    "updated_at": "2021-02-15T21:57:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3651",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}