{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently one can write in Cython an `enum` using `cpdef`, which exposes it to Cython and Python. However there doesn't appear to be a way to do this in pure Python (aside from declaring the `enum` in a `.pxd` file alongside the `.py` file). It would be useful to have some kind of syntax to declare an `enum` in pure Python, which provides an efficient C implementation around it. Though must admit am a bit clueless on what this would need to look like.\r\n\r\n**Describe the solution you'd like**\r\n\r\nGiven the current use of decorators for other Cython objects in pure Python (like `cclass` and `cfunc`), one approach might be to use a decorator here like so.\r\n\r\n```cython\r\nfrom cython import cenum\r\n\r\n@cenum\r\nclass Status:\r\n    stopped: \"Py_ssize_t\" = 0\r\n    running: \"Py_ssize_t\" = 1\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThough another option might be to use a base class for all Cython `enum`s. Not sure if this has any advantaged over the former.\r\n\r\n```cython\r\nfrom cython import CEnum\r\n\r\nclass Status(CEnum):\r\n    stopped: \"Py_ssize_t\" = 0\r\n    running: \"Py_ssize_t\" = 1\r\n```\r\n\r\nAnother potential option would be to follow the syntax Python itself uses and allow `cclass` (or perhaps still `cenum`) to handle this case (only using `Enum` as hint).\r\n\r\n```cython\r\nfrom cython import cclass\r\nfrom enum import Enum\r\n\r\n@cclass\r\nclass Status(Enum):\r\n    stopped: \"Py_ssize_t\" = 0\r\n    running: \"Py_ssize_t\" = 1\r\n```\r\n\r\nThere might be other variants on this that I'm not aware of that would be better still.\r\n\r\n**Additional context**\r\n\r\nNA\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3923/comments",
    "created_at": "2020-12-01T05:06:32Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3923/events",
    "html_url": "https://github.com/cython/cython/issues/3923",
    "id": 754013213,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3923/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3NTQwMTMyMTM=",
    "number": 3923,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[ENH] Pure Python support for Enum",
    "updated_at": "2020-12-01T05:06:32Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3923",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jakirkham",
        "id": 3019665,
        "login": "jakirkham",
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jakirkham"
    }
}