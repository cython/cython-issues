{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nI assume this is not officially supported, but it worked in older Python version 3.11 no issues, upgraded my system yesterday and got this crash (using multithreading for things like encryption).\n\nTremendously useful to have C++ callback Python, also in a new thread for greater performance, but I understand if you don't care to or it's not viable to support it in latest/future Python versions.\n\nWhat's going on here on the surface is Python calls C++ and then C++ calls Python back in a new thread, but despite being a single thread (which did not crash in Python 3.11) the program segfaults.\n\n### Code to reproduce the behaviour:\n\n```cython\nfrom libc.stdio cimport printf\n\ncdef:\n        extern from \"all.cpp\" nogil:\n                void test()\n\n        extern void pyTest():\n                printf(\"no issue\\n\")\n                print(\"crash\")\n\nwith nogil:\n        test()\n```\n\n```c++\n#include <thread>\n\nextern void pyTest();\n\nvoid test() {\n        std::thread t = std::thread(pyTest);\n        t.join();\n}\n```\n\n### Expected behaviour\n\nNo crash? At least it used not to.\n\n### OS\n\nDebian 13\n\n### Python version\n\n3.13.5\n\n### Cython version\n\n3.1.3\n\n### Additional context\n\nGDB reports the following (not super helpful, but):\n#0  0x00007ffff776d440 in ?? () from /lib/x86_64-linux-gnu/libpython3.13.so.1.0\n#1  0x0000555555578e62 in __Pyx_PyObject_FastCallDict (func=func@entry=0x7ffff599e430, \n    args=args@entry=0x7fffee989a08, _nargs=_nargs@entry=9223372036854775809, \n    kwargs=kwargs@entry=0x0) at standalone.cpp:82250\n\nThis also happens in Cython 3.1.2 so it's not a bug with the newest Cython version.",
    "closed_at": "2025-08-18T16:59:08Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
        "events_url": "https://api.github.com/users/Source61/events{/privacy}",
        "followers_url": "https://api.github.com/users/Source61/followers",
        "following_url": "https://api.github.com/users/Source61/following{/other_user}",
        "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Source61",
        "id": 68166790,
        "login": "Source61",
        "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
        "organizations_url": "https://api.github.com/users/Source61/orgs",
        "received_events_url": "https://api.github.com/users/Source61/received_events",
        "repos_url": "https://api.github.com/users/Source61/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Source61",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "You can also ignore the nogil stuff. With the GIL held it still crashes, and it also crashes with nogil without calling a new thread.\n\nI understand this is not supported behavior - it doesn't make sense to do Python stuff without the GIL in a sense.\n\nBut the alternative seem to be no support for C++ calling Python back (Python -> C++ -> Python), which is a huge loss in my opinion, as it's a very powerful feature.\n\nEither way I will be migrating to using multithreaded epoll instead of asyncio/uvloop, so I should be fine without this feature, as I've also almost phased out Cython completely at this point, writing my main project in C++ instead.",
            "created_at": "2025-08-17T07:10:48Z",
            "html_url": "https://github.com/cython/cython/issues/7093#issuecomment-3194185960",
            "id": 3194185960,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7093",
            "node_id": "IC_kwDOABDGAc6-Y2jo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3194185960/reactions"
            },
            "updated_at": "2025-08-17T07:10:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3194185960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "```\ncdef extern void thisShouldWork() nogil:\n    with gil:\n        printf(\"no issue\\n\")\n        print(\"crash\")\n```\n\nYour `pyTest` function assures it holds the GIL when called however it doesn't actually do anything to ensure that.\n",
            "created_at": "2025-08-17T08:41:32Z",
            "html_url": "https://github.com/cython/cython/issues/7093#issuecomment-3194232911",
            "id": 3194232911,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7093",
            "node_id": "IC_kwDOABDGAc6-ZCBP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3194232911/reactions"
            },
            "updated_at": "2025-08-17T08:41:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3194232911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> ```\n> cdef extern void thisShouldWork() nogil:\n>     with gil:\n>         printf(\"no issue\\n\")\n>         print(\"crash\")\n> ```\n> \n> Your `pyTest` function assures it holds the GIL when called however it doesn't actually do anything to ensure that.\n\nI'm not sure I understand. That code would and does catch a Cython generation error due to the conflicting nature of declaring the function nogil and trying to hold the GIL.\n\nBut as mentioned you don't have to do anything related to locking or releasing the GIL, the code crashes however you declare it if you call an extern function from C++ to Python in a new thread and do anything Pythonic in there.\n\nWhich is new in Python 3.13, 3.11 did not crash like this.\n\nIn other words I shouldn't have added anything about GIL stuff, it's a distraction from the issue, I just added nogil stuff out of habit and uncertainty in the beginning.",
            "created_at": "2025-08-17T15:48:06Z",
            "html_url": "https://github.com/cython/cython/issues/7093#issuecomment-3194468110",
            "id": 3194468110,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7093",
            "node_id": "IC_kwDOABDGAc6-Z7cO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3194468110/reactions"
            },
            "updated_at": "2025-08-17T15:49:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3194468110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm not sure I understand. That code would and does catch a Cython generation error due to the conflicting nature of declaring the function nogil and trying to hold the GIL.\n\nNo. It works for me. There's no conflict. The `nogil` on the function definition says \"it does not need to hold the GIL when called\". The `with gil:` inside the function acquires the GIL.\n\n> But as mentioned you don't have to do anything related to locking or releasing the GIL\n\nNo - you do have to have the GIL. You're calling the Python `print` function and that needs the GIL. Your new C++ thread will not hold the GIL when its started.\n\n> Which is new in Python 3.13, 3.11 did not crash like this.\n\nThat's luck. You can sometimes get away with not holding the GIL when it's technically needed. It was still a bug not to hold it in Python 3.11.  This is a Python change though, not a Cython change.",
            "created_at": "2025-08-18T07:26:28Z",
            "html_url": "https://github.com/cython/cython/issues/7093#issuecomment-3195460558",
            "id": 3195460558,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7093",
            "node_id": "IC_kwDOABDGAc6-dtvO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3195460558/reactions"
            },
            "updated_at": "2025-08-18T07:26:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3195460558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > I'm not sure I understand. That code would and does catch a Cython generation error due to the conflicting nature of declaring the function nogil and trying to hold the GIL.\n> \n> No. It works for me. There's no conflict. The `nogil` on the function definition says \"it does not need to hold the GIL when called\". The `with gil:` inside the function acquires the GIL.\n> \n> > But as mentioned you don't have to do anything related to locking or releasing the GIL\n> \n> No - you do have to have the GIL. You're calling the Python `print` function and that needs the GIL. Your new C++ thread will not hold the GIL when its started.\n> \n> > Which is new in Python 3.13, 3.11 did not crash like this.\n> \n> That's luck. You can sometimes get away with not holding the GIL when it's technically needed. It was still a bug not to hold it in Python 3.11. This is a Python change though, not a Cython change.\n\nOh, you're right if I don't call with nogil: test() in the beginning there won't be a Cython error.\n\nHowever it locks infinitely at runtime, ctrl+c doesn't even work, you have to manually kill the process afterwards.\n\nHere's my Cython code:\n```cython\nfrom libc.stdio cimport printf\n\ncdef:\n        extern from \"all.cpp\":\n                void test()\n\n        extern void pyTest() nogil:\n                printf(\"hello world\\n\")\n                with gil:\n                        print(\"crash\")\n\ntest()\n```\n\nResults: \"hello world\" and hangs.",
            "created_at": "2025-08-18T16:37:12Z",
            "html_url": "https://github.com/cython/cython/issues/7093#issuecomment-3197649320",
            "id": 3197649320,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7093",
            "node_id": "IC_kwDOABDGAc6-mEGo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3197649320/reactions"
            },
            "updated_at": "2025-08-18T16:37:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3197649320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You have to call `test` without the GIL (i.e. in a `with nogil` block). Note that just labelling `test` as `nogil` isn't sufficient - that just tells Cython that it *can* be used without the GIL.\n\nThere's nothing between\n\n```\n        std::thread t = std::thread(pyTest);\n        t.join();\n```\n\nthat will release the GIL. Therefore `pyTest` can never finish because `with gil` can never finish.\n\nThe version I'm testing with is:\n\n```\n# distutils: language=c++\n\nfrom libc.stdio cimport printf\n\ncdef extern from *:\n    \"\"\"\n    #include <thread>\n\n    extern void pyTest();\n\n    void test() {\n            std::thread t = std::thread(pyTest);\n            t.join();\n    }\n    \"\"\"\n    void test() nogil\n\n    void pyTest() nogil:\n        with gil:\n            printf(\"no issue\\n\")\n            print(\"crash\")\n\nwith nogil:\n        test()\n```\n\n(I've moved `all.cpp` into an inline block just to make it easier, but that shouldn't make a difference)",
            "created_at": "2025-08-18T16:44:57Z",
            "html_url": "https://github.com/cython/cython/issues/7093#issuecomment-3197678070",
            "id": 3197678070,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7093",
            "node_id": "IC_kwDOABDGAc6-mLH2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3197678070/reactions"
            },
            "updated_at": "2025-08-18T16:44:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3197678070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You have to call `test` without the GIL (i.e. in a `with nogil` block). Note that just labelling `test` as `nogil` isn't sufficient - that just tells Cython that it _can_ be used without the GIL.\n> \n> There's nothing between\n> \n> ```\n>         std::thread t = std::thread(pyTest);\n>         t.join();\n> ```\n> \n> that will release the GIL. Therefore `pyTest` can never finish because `with gil` can never finish.\n> \n> The version I'm testing with is:\n> \n> ```\n> # distutils: language=c++\n> \n> from libc.stdio cimport printf\n> \n> cdef extern from *:\n>     \"\"\"\n>     #include <thread>\n> \n>     extern void pyTest();\n> \n>     void test() {\n>             std::thread t = std::thread(pyTest);\n>             t.join();\n>     }\n>     \"\"\"\n>     void test() nogil\n> \n>     void pyTest() nogil:\n>         with gil:\n>             printf(\"no issue\\n\")\n>             print(\"crash\")\n> \n> with nogil:\n>         test()\n> ```\n> \n> (I've moved `all.cpp` into an inline block just to make it easier, but that shouldn't make a difference)\n\nOh I see, we declare test a nogil function as well, I should've figured.\nYes, it works now, that's curious.\n\nI guess I'll close this, I feel like there's a bug (or \"doing something a little unexpected\" / \"missing some railguards in there\"), but you can't necessarily railguard everything, so that's fine/understandable (specifically when we call test with the GIL and it calls a nogil function and it locks, but maybe I'm not understanding something there).\n\nIn either case thanks for the response and good luck with the project.",
            "created_at": "2025-08-18T16:59:08Z",
            "html_url": "https://github.com/cython/cython/issues/7093#issuecomment-3197727797",
            "id": 3197727797,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7093",
            "node_id": "IC_kwDOABDGAc6-mXQ1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3197727797/reactions"
            },
            "updated_at": "2025-08-18T16:59:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3197727797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7093/comments",
    "created_at": "2025-08-17T07:01:29Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-08-18T16:59:08Z",
            "event": "closed",
            "id": 19208108031,
            "node_id": "CE_lADOABDGAc7GXd3uzwAAAAR45Hf_",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/19208108031"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7093/events",
    "html_url": "https://github.com/cython/cython/issues/7093",
    "id": 3328040430,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7093/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7GXd3u",
    "number": 7093,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7093/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7093/timeline",
    "title": "[BUG] Segfault when calling extern function from C++ to Python with Python code in thread (with synchronization) in new Python version only",
    "type": null,
    "updated_at": "2025-08-18T16:59:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7093",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
        "events_url": "https://api.github.com/users/Source61/events{/privacy}",
        "followers_url": "https://api.github.com/users/Source61/followers",
        "following_url": "https://api.github.com/users/Source61/following{/other_user}",
        "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Source61",
        "id": 68166790,
        "login": "Source61",
        "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
        "organizations_url": "https://api.github.com/users/Source61/orgs",
        "received_events_url": "https://api.github.com/users/Source61/received_events",
        "repos_url": "https://api.github.com/users/Source61/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Source61",
        "user_view_type": "public"
    }
}