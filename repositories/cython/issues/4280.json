{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nC functions that do not return Python objects cannot currently propagate exceptions by default but require an explicit `except` clause. In Python code, declared return types default to safe exception propagation instead. Both should behave the same.\r\n```cython\r\ncdef int func():\r\n    raise TypeError  # is not propagated\r\n\r\n@cython.cfunc\r\ndef pyfunc() -> cython.int:\r\n    raise TypeError  # is propagated\r\n\r\ncdef int no_exc_func():\r\n    return 0  # no exception raised\r\n\r\ncdef extern from *:\r\n    int no_exc_cfunc()  # no exception expected\r\n```\r\n\r\n**Describe the solution you'd like**\r\nC functions should also propagate their exceptions by default.\r\n```cython\r\ncdef int func():\r\n    raise TypeError  # CHANGE: should get propagated as with `except? -1`, the default exception value.\r\n\r\n@cython.exceptval(check=False)\r\ncdef int func():\r\n    raise TypeError  # is not propagated\r\n\r\ncdef int no_exc_func():\r\n    return 0  # CHANGE: no exception raised, but tested by caller\r\n\r\ncdef int explicit_no_exc_func() noexcept:    # <- CHANGE\r\n    return 0  # no exception raised, and not tested by caller\r\n\r\ncdef extern from *:\r\n    int no_exc_cfunc()  # unclear - should exceptions also be expected for `extern` functions?\r\n```\r\n\r\nQuestions:\r\n* non-extern `cdef` functions declared in `.pxd` files should probably be affected, too, since they should match the implementation in the corresponding `.pyx` / `.py` file.\r\n* C functions defined in `cdef extern` blocks are unlikely to benefit from this change. Can we live with keeping them different?\r\n\r\nAlso see\r\nhttps://github.com/cython/cython/issues/3580\r\nhttps://github.com/cython/cython/issues/933\r\n",
    "closed_at": "2022-09-10T13:55:17Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> ```cython\r\n>     raise TypeError  # CHANGE: should get propagated as with `except -1`, the default exception value.\r\n> ```\r\n\r\nPresumably `except?-1` (i.e -1 may not be the exception value)",
            "created_at": "2021-07-13T16:52:10Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-879246049",
            "id": 879246049,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTI0NjA0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/879246049/reactions"
            },
            "updated_at": "2021-07-13T16:52:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/879246049",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "There is currently no syntax for the old behavior, is there? If propagating exceptions is the default there should be a syntax for not propagating exceptions.",
            "created_at": "2021-10-07T08:57:25Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937592356",
            "id": 937592356,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc434oYk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937592356/reactions"
            },
            "updated_at": "2021-10-07T08:57:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937592356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1321505?v=4",
                "events_url": "https://api.github.com/users/Chronial/events{/privacy}",
                "followers_url": "https://api.github.com/users/Chronial/followers",
                "following_url": "https://api.github.com/users/Chronial/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chronial/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Chronial",
                "id": 1321505,
                "login": "Chronial",
                "node_id": "MDQ6VXNlcjEzMjE1MDU=",
                "organizations_url": "https://api.github.com/users/Chronial/orgs",
                "received_events_url": "https://api.github.com/users/Chronial/received_events",
                "repos_url": "https://api.github.com/users/Chronial/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Chronial/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chronial/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Chronial"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There is\r\n```cython\r\n@cython.exceptval(check=False)\r\n```\r\nwhich should give you the old behaviour.",
            "created_at": "2021-10-07T09:13:34Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937605250",
            "id": 937605250,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc434riC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937605250/reactions"
            },
            "updated_at": "2021-10-07T09:13:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937605250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry, I was talking about the cython syntax.",
            "created_at": "2021-10-07T09:20:07Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937610526",
            "id": 937610526,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc434s0e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937610526/reactions"
            },
            "updated_at": "2021-10-07T09:20:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937610526",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1321505?v=4",
                "events_url": "https://api.github.com/users/Chronial/events{/privacy}",
                "followers_url": "https://api.github.com/users/Chronial/followers",
                "following_url": "https://api.github.com/users/Chronial/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chronial/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Chronial",
                "id": 1321505,
                "login": "Chronial",
                "node_id": "MDQ6VXNlcjEzMjE1MDU=",
                "organizations_url": "https://api.github.com/users/Chronial/orgs",
                "received_events_url": "https://api.github.com/users/Chronial/received_events",
                "repos_url": "https://api.github.com/users/Chronial/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Chronial/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chronial/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Chronial"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This will rarely be used. We could add, say, `except -`, but you don't need syntax as long as there is a way to do it.",
            "created_at": "2021-10-07T09:23:04Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937612902",
            "id": 937612902,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc434tZm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937612902/reactions"
            },
            "updated_at": "2021-10-07T09:23:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937612902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To be more specific, the main use case for this is a C callback function that cannot propagate exceptions. In all other cases, having Python print out \"sorry, could not raise this exception\" is largely unhelpful.",
            "created_at": "2021-10-07T09:30:50Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937618674",
            "id": 937618674,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc434uzy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937618674/reactions"
            },
            "updated_at": "2021-10-07T09:30:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937618674",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm thinking of\r\n```\r\ncdef double sin(double x):\r\n    ...\r\n```\r\n\r\nThe proposed change would worsen the performance of calls to this function, would it not?\r\n\r\nFor syntax I would propose `noexcept` – I think that's very clear and also what c++ uses. On the other hand, the semantics are not the same as in c++ – `terminate()` vs silence, so that might be a reason not to use this syntax.",
            "created_at": "2021-10-07T09:32:37Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937619988",
            "id": 937619988,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc434vIU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937619988/reactions"
            },
            "updated_at": "2021-10-07T09:46:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937619988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1321505?v=4",
                "events_url": "https://api.github.com/users/Chronial/events{/privacy}",
                "followers_url": "https://api.github.com/users/Chronial/followers",
                "following_url": "https://api.github.com/users/Chronial/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chronial/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Chronial",
                "id": 1321505,
                "login": "Chronial",
                "node_id": "MDQ6VXNlcjEzMjE1MDU=",
                "organizations_url": "https://api.github.com/users/Chronial/orgs",
                "received_events_url": "https://api.github.com/users/Chronial/received_events",
                "repos_url": "https://api.github.com/users/Chronial/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Chronial/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chronial/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Chronial"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A function like this will most likely not raise exceptions any way, and might even get inlined as such, but ok, the caller would now check for `-1.0`, and if found, would call `PyExc_Check()`. So, yes, there is a bit of overhead for this specific value. Whether that's at all visible or not will depend on the specific code. Unless `-1` turns out to be a fairly frequent return value, my guess is that you wouldn't notice it in practice, but only specific user code benchmarks can tell the truth here.\r\n\r\nEither way, I'm sure there are users who would like to add the annotation whether or not this makes a visible difference, so there is a use case for this. Thanks for insisting.\r\n\r\nSince such a signature can appear in `.pxd` files, Cython cannot (in general) analyse automatically whether an exception may get raised or not, and thus requires assistance by the user provided signature. I don't think we currently allow decorators on function signatures in `.pxd` files, so yeah, that's that.\r\n\r\nEither we turn the switch and add syntax, or we don't turn the switch for Cython 3.0. I'll update the ticket description.",
            "created_at": "2021-10-07T09:59:58Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937640909",
            "id": 937640909,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4340PN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937640909/reactions"
            },
            "updated_at": "2021-10-07T09:59:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937640909",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Either we turn the switch and add syntax, or we don't turn the switch for Cython 3.0. I'll update the ticket description.\r\n\r\nI would like to point out that despite me nagging I am a strong supporter of this general change and 3.0 definitely seems the right time to this, since it is a non-trivial backwards-compatibility-breaking change.\r\n\r\nBut I have one more question about the plan: What about the return types (i.e. void and structs) that don't support exception marker values. They would keep their old behavior, or would they default to `except *`?",
            "created_at": "2021-10-07T14:01:42Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937823298",
            "id": 937823298,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc435gxC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937823298/reactions"
            },
            "updated_at": "2021-10-07T14:01:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937823298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1321505?v=4",
                "events_url": "https://api.github.com/users/Chronial/events{/privacy}",
                "followers_url": "https://api.github.com/users/Chronial/followers",
                "following_url": "https://api.github.com/users/Chronial/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chronial/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Chronial",
                "id": 1321505,
                "login": "Chronial",
                "node_id": "MDQ6VXNlcjEzMjE1MDU=",
                "organizations_url": "https://api.github.com/users/Chronial/orgs",
                "received_events_url": "https://api.github.com/users/Chronial/received_events",
                "repos_url": "https://api.github.com/users/Chronial/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Chronial/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chronial/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Chronial"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I had a thought on this: would it apply to  `cdef extern` functions? I mostly think it shouldn't (because the vast majority of `cdef extern` functions don't raise Python exceptions) but I do like the consistency that they should behave in the same way as defined `cdef` functions.",
            "created_at": "2021-10-07T17:19:28Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-937997248",
            "id": 937997248,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc436LPA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/937997248/reactions"
            },
            "updated_at": "2021-10-07T17:19:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/937997248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> \r\n> \r\n> This will rarely be used. We could add, say, `except -`, but you don't need syntax as long as there is a way to do it.\r\n\r\nI have to say I like the `noexcept` suggestion for this much better (and not just because it matches C++). I find `except -` quite cryptic and it relies on a single character that's visually sparse and easy to overlook.",
            "created_at": "2021-10-10T01:16:14Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-939386404",
            "id": 939386404,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc43_eYk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/939386404/reactions"
            },
            "updated_at": "2021-10-10T01:16:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/939386404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33685575?v=4",
                "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
                "followers_url": "https://api.github.com/users/h-vetinari/followers",
                "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
                "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/h-vetinari",
                "id": 33685575,
                "login": "h-vetinari",
                "node_id": "MDQ6VXNlcjMzNjg1NTc1",
                "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
                "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
                "repos_url": "https://api.github.com/users/h-vetinari/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/h-vetinari"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Just as a reminder: when this issue will be solved it'll be really nice to look through the docs and fix the previous forms like\r\n`@cython.exceptval(check=False)` / `except *`\r\n\r\nOne of the docs to fix is [Working with Python arrays](https://cython.readthedocs.io/en/latest/src/tutorial/array.html)",
            "created_at": "2021-10-28T15:10:06Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-953940733",
            "id": 953940733,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc442_r9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/953940733/reactions"
            },
            "updated_at": "2021-10-28T15:48:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/953940733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hi @scoder - is this being actively worked on? Otherwise, I'm happy to give it a stab. ",
            "created_at": "2022-01-31T18:56:37Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1026102494",
            "id": 1026102494,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc49KRTe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1026102494/reactions"
            },
            "updated_at": "2022-01-31T18:56:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1026102494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hi @shwina . I am not aware about anyone working on this. Feel free to pick it. PRs are welcome.",
            "created_at": "2022-02-15T22:33:57Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1040865583",
            "id": 1040865583,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4-Clkv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1040865583/reactions"
            },
            "updated_at": "2022-02-15T22:33:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1040865583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, I think the intended behaviour is pretty clear. Let's get some code to discuss, also to see if the behaviour for `extern` declarations feels ok.\r\n\r\nI changed the Cython syntax modifier to `noexcept`. It's a context specific thing in the parser and thus won't introduce new keywords.",
            "created_at": "2022-02-15T22:45:14Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1040873143",
            "id": 1040873143,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4-Cna3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1040873143/reactions"
            },
            "updated_at": "2022-02-15T22:45:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1040873143",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Note: Default propagating exception should also help with handling `None` values in `cdef` functions - see discussion (https://github.com/cython/cython/pull/4516#discussion_r806116949): After fixing this issue we should be able check `None` value in cdef functions and support `not None` in cdef functions (except functions with `noexcept` modifier).\r\n",
            "created_at": "2022-02-16T11:26:16Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1041389132",
            "id": 1041389132,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4-ElZM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1041389132/reactions"
            },
            "updated_at": "2022-02-16T11:27:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1041389132",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Default propagating exception should also help with handling `None` values in `cdef` functions\r\n\r\nHmm, no, this seems unrelated. The `noexcept` modifer has an effect on the return value checking but not on arguments.",
            "created_at": "2022-02-16T11:44:41Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1041403883",
            "id": 1041403883,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4-Eo_r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1041403883/reactions"
            },
            "updated_at": "2022-02-16T11:44:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1041403883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Hmm, no, this seems unrelated. The noexcept modifer has an effect on the return value checking but not on arguments.\r\n\r\nI am sorry, I should be more clear. Currently in Cython we have following limitation (example taken from https://github.com/cython/cython/pull/4516#discussion_r806116949):\r\n1. We are not checking `None` value in cdef classes in pure python mode (In regular python functions `None` value is checked).\r\n```python\r\n@cython.cfunc\r\ndef foo(bar: Bar) -> cython.int:\r\n     # here we are not checking if bar is None and hence passing None value here is allowed.\r\n```\r\n2. `not None` keyword is not allowed in cdef functions.\r\n```cython\r\ncdef int foo(Bar bar not None):\r\n    # not None construct is not supported in cdef functions\r\n```\r\nI suppose that both examples are caused because cdef function cannot propagate `TypeError` which is raised during the check of the value. My point is that when this issue is closed, we should be able to support both cases mentioned above since exception will be propagated by default by -1 value.\r\n\r\nBoth of cases won't be supported after fixing this PR in case of `noexcept` modifier because this modifier is not enabling exception propagation from cdef function.\r\n\r\nDoes it make sense what I wrote? I hope so. :-)",
            "created_at": "2022-02-16T12:39:31Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1041450970",
            "id": 1041450970,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4-E0fa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1041450970/reactions"
            },
            "updated_at": "2022-02-16T12:39:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1041450970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I suppose that both examples are caused because cdef function cannot propagate `TypeError` which is raised during the check of the value.\r\n\r\nNo, that's not the reason. For `cdef` functions, it's the caller's responsibility to pass the correct input values in the expected types and all. The function only accepts what it gets. Thus, the caller would have to know that `None` is not allowed here and check for it itself. The function does not have to raise exceptions in this case, because it never validates the input.\r\n\r\nThus: unrelated.",
            "created_at": "2022-02-16T19:10:12Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1042054342",
            "id": 1042054342,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4-HHzG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1042054342/reactions"
            },
            "updated_at": "2022-02-16T19:10:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1042054342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> No, that's not the reason. For cdef functions, it's the caller's responsibility to pass the correct input values in the expected types and all. The function only accepts what it gets. \r\n\r\nTo be honest I still don't understand fully rationale of this and why we cant implement raising `TypeError` similar to regular python functions. But I don't want to clutter this issue with this discussion. My apologies for this off topic discussion. I did not expect that my note will trigger such discussion.",
            "created_at": "2022-02-16T19:49:35Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1042102000",
            "id": 1042102000,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4-HTbw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1042102000/reactions"
            },
            "updated_at": "2022-02-16T19:49:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1042102000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "[copying this here from [the PR](https://github.com/cython/cython/pull/4670#issuecomment-1072977391), since it belongs into the ticket discussion]\r\n\r\nFunction pointers seem the biggest open question. As soon as we make a distinction between extern and non-extern functions, we end up with the problem that function pointers need to be able to refer to both. And they seem equally likely to refer to either kind of function, maybe even with a slightly higher chance of pointing to Cython implemented (i.e. non-extern) functions, even though they are a totally C-ish thing.\r\n\r\nSo you'd end up with code like this:\r\n```cython\r\ncdef extern from \"someheader.h\":\r\n    int cfunc(int x)\r\n\r\ncdef int cdeffunc(int x) noexcept:\r\n    return x + 1\r\n\r\ncdef int (*func)(int x) noexcept\r\n\r\nfunc = cfunc\r\nfunc = cdeffunc\r\n```\r\nand\r\n```cython\r\ncdef extern from \"someheader.h\":\r\n    int cfunc(int x) except? -1\r\n\r\ncdef int cdeffunc(int x):\r\n    return x + 1\r\n\r\ncdef int (*func)(int x)\r\n\r\nfunc = cfunc\r\nfunc = cdeffunc\r\n```\r\nOTOH, if we make both behave the same, then we break pretty much all .pxd files out there, but end up with something more consistent:\r\n```cython\r\ncdef extern from \"someheader.h\" noexcept:\r\n    int cfunc(int x)\r\n\r\ncdef int cdeffunc(int x) noexcept:\r\n    return x + 1\r\n\r\ncdef int (*func)(int x) noexcept\r\n\r\nfunc = cfunc\r\nfunc = cdeffunc\r\n```\r\nIt feels like the decision is between \"easy to use (in most cases)\" and \"easy to explain\".\r\n\r\n(And yes, if we make all variants behave the same, then we must backport the `noexcept` modifier to 0.29.x so that users can write declarations now that still work in 3.0.)",
            "created_at": "2022-03-19T14:53:59Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1073024015",
            "id": 1073024015,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4_9QwP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1073024015/reactions"
            },
            "updated_at": "2022-03-19T14:53:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1073024015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm generally in favour of consistency I think. And consistency only adds unnecessary checks - it shouldn't break much. I think the other option is too many unintuitive rules.\r\n\r\nOne note: an `except *` function pointer should be able to store a `noexcept` function. I'm not sure if it is currently, but it could be made compatible. That suggests that most code should continue to work, even if function others are assumed to need an exception check by default.",
            "created_at": "2022-03-19T22:06:27Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1073119260",
            "id": 1073119260,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4_9oAc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1073119260/reactions"
            },
            "updated_at": "2022-03-19T22:06:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1073119260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One other point: for a Cython-implemented function returning an `int` we can implicitly add `except? -1` (because Cython controls the error code). However for an `extern` function it probably has to be `except *` (because it could use anything as an error code).\r\n\r\nSo it's dificult to be completely consistent ",
            "created_at": "2022-03-19T22:10:58Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1073119999",
            "id": 1073119999,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4_9oL_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1073119999/reactions"
            },
            "updated_at": "2022-03-19T22:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1073119999",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> However for an `extern` function it probably has to be `except *` (because it could use anything as an error code).\r\n\r\nI don't think so. The large bulk of `extern` functions will be plain C functions that do not raise exceptions [*]. Those that raise exceptions are probably declared CPython API functions, almost all of which adhere to the `except -1` pattern if they return an `int`. Those few remaining `extern` functions out there that raise Python exceptions, that return an `int` and do *not* report the exception case with `-1` should ALWAYS be marked with `except XYZ` explicitly by the users who declare them.\r\n\r\n[*] that's also the main reason why `extern` functions may seem special enough to break the rules to make them easier to use. For them, it feels the other way round. If we assign them exception propagation features by default, many users may end up with inefficient code without knowing. In the same way that it's easy to forget to declare exception propagation on `cdef` functions, it's easy to forget to declare *no* exception propagation on blocks of `extern` functions.",
            "created_at": "2022-03-20T09:13:08Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1073206542",
            "id": 1073206542,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4_99UO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1073206542/reactions"
            },
            "updated_at": "2022-03-20T09:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1073206542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It feels like the decision is between \"easy to use (in most cases)\" and \"easy to explain\".\r\n\r\nJust my 2c: I'm inclined to the latter (always assume a function will raise by default, `extern` or not). Especially given:\r\n\r\n> Special cases aren't special enough to break the rules.\r\n\r\nThe \"special case\" here are extern functions that _do_ indeed raise. While not a common case, I'd argue that the risk of missing an explicit `except` with those functions is high, compared to the risk of missing an explicit `noexcept` in the more common case.",
            "created_at": "2022-03-20T12:52:42Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1073244869",
            "id": 1073244869,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4_-GrF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1073244869/reactions"
            },
            "updated_at": "2022-03-20T12:59:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1073244869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> [*] that's also the main reason why `extern` functions may seem special enough to break the rules to make them easier to use. For them, it feels the other way round. If we assign them exception propagation features by default, many users may end up with inefficient code without knowing. In the same way that it's easy to forget to declare exception propagation on `cdef` functions, it's easy to forget to declare _no_ exception propagation on blocks of `extern` functions.\r\n\r\nI was tempted to agree, but looking closer at the example above, I think the consistency should win out, and that the inefficiency of forgetting the `noexcept` should be solved with announcements, documentation (perhaps even warnings that always show up during a transition period, unless suppressed by a flag) etc.\r\n\r\nThese functions are still being imported into cython after all, where the project \"sets the rules\". It's IMO a legitimate desire for cython to to require `noexcept`, and it's equally legitimate to add that requirement in 3.0. Not that it'll be _fun_, but looking at the example, it's IMO abundantly clear what the healthier longterm choice would be.",
            "created_at": "2022-03-20T23:10:53Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1073368866",
            "id": 1073368866,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc4_-k8i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1073368866/reactions"
            },
            "updated_at": "2022-03-20T23:10:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1073368866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33685575?v=4",
                "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
                "followers_url": "https://api.github.com/users/h-vetinari/followers",
                "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
                "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/h-vetinari",
                "id": 33685575,
                "login": "h-vetinari",
                "node_id": "MDQ6VXNlcjMzNjg1NTc1",
                "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
                "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
                "repos_url": "https://api.github.com/users/h-vetinari/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/h-vetinari"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "FWIW I think I'm currently leaning towards \"treat extern functions differently (and assume they don't throw)\". On the basis that:\r\n* I don't think most people think of a Cython-defined `cdef` function and an extern function as the same thing, so I don't think it'll actually catch too many people out.\r\n* The vast majority of extern functions don't throw (except for the Python C API, and most people use Cython's wrapping of that anyway).\r\n* The people using extern functions that do throw should hopefully mostly know what they're doing and be thinking about this stuff actively (\"hopefully\" is doing a lot of work in this sentence though)\r\n* It's very, very rare to access a Cython-defined `cdef` function with `cdef extern...` - almost everyone uses `cimport` so that's one less cause for confusion.\r\n\r\nI'm not sure that opinion brings us any closer to agreement though.",
            "created_at": "2022-04-13T17:34:32Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1098311752",
            "id": 1098311752,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5BduhI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1098311752/reactions"
            },
            "updated_at": "2022-04-13T17:34:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1098311752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I can only add that if we choose consistency (`extern` function also are assumed to throw by default), it will need a bit of work to explicitly mark a _ton_ of extern functions declared in the Cython codebase `noexcept`. I don't mind doing that, but would like for us to reach a consensus before I try.\r\n\r\nFor now, I'm treating extern functions as \"special\" in the PR and attempting to pass tests. I'm close...",
            "created_at": "2022-04-13T21:30:00Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1098506052",
            "id": 1098506052,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5Bed9E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1098506052/reactions"
            },
            "updated_at": "2022-04-13T21:30:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1098506052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> FWIW I think I'm currently leaning towards \"treat extern functions differently (and assume they don't throw)\".\r\n> [...]\r\n> I'm not sure that opinion brings us any closer to agreement though.\r\n\r\nHappy to retract my preference if that furthers finding a solution; it could well be that I'm falling into the trap of \"a foolish consistency\".",
            "created_at": "2022-04-13T21:34:57Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1098510213",
            "id": 1098510213,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5Bee-F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1098510213/reactions"
            },
            "updated_at": "2022-04-15T01:24:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1098510213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33685575?v=4",
                "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
                "followers_url": "https://api.github.com/users/h-vetinari/followers",
                "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
                "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/h-vetinari",
                "id": 33685575,
                "login": "h-vetinari",
                "node_id": "MDQ6VXNlcjMzNjg1NTc1",
                "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
                "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
                "repos_url": "https://api.github.com/users/h-vetinari/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/h-vetinari"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Since we can have cython3 specific pxd files (x.pxd for cython2 and x.cython-3.0.pxd) I think it is OK to make a breaking change.",
            "created_at": "2022-04-14T13:24:04Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1099182954",
            "id": 1099182954,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5BhDNq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1099182954/reactions"
            },
            "updated_at": "2022-04-14T13:24:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1099182954",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Since we can have cython3 specific pxd files (x.pxd for cython2 and x.cython-3.0.pxd) I think it is OK to make a breaking change.\r\n\r\nSo – are you voting for also changing `extern` functions?\r\n\r\nI take your argument, although asking everyone to start splitting their .pxd files still seems a bit pushy to me. I'd rather add the `noexcept` marker as a no-op to 0.29.x. And I'd still rather try to avoid it where possible and require it only where necessary.",
            "created_at": "2022-04-15T09:45:38Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1100003146",
            "id": 1100003146,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5BkLdK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1100003146/reactions"
            },
            "updated_at": "2022-04-15T09:45:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1100003146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> So – are you voting for also changing extern functions?\r\n\r\nI ~don't think so.~ think @da-woods' arguments are persuasive.",
            "created_at": "2022-04-15T15:26:24Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1100175543",
            "id": 1100175543,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5Bk1i3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1100175543/reactions"
            },
            "updated_at": "2022-04-15T15:27:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1100175543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree with these arguments. And we're still in alpha, so let's use that to gather feedback before the final release.\r\n\r\n**Decision:**\r\n- We change to \"always propagate with the default exception value\" for cdef/cpdef functions implemented in Cython 3.0, unless there is an explicit `except` or `noexcept` clause.\r\n- We keep `noexcept` semantics for `cdef extern` blocks of function declarations (unless they return object types or have an explicit `except` clause).\r\n- We add `noexcept` as a no-op for Cython 0.29.x, so that users can start adding it to their function implementations, if they need it and want their code to be compatible with Cython 3.0.\r\n\r\nWe also need to update the documentation to reflect this, and to explain the difference for `extern` blocks. Note that `extern` functions that are declared as returning an object type always propagate exceptions anyway, so this needs to be part of the explanation as well. The semantic change only applies to functions returning C types, where it is unclear whether exceptions will be raised or not, but where not propagating them from a Cython implemented function is a common mistake.",
            "created_at": "2022-04-16T06:49:21Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1100588580",
            "id": 1100588580,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5BmaYk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1100588580/reactions"
            },
            "updated_at": "2022-04-16T06:49:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1100588580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Function pointers seem the biggest open question. As soon as we make a distinction between extern and non-extern functions, we end up with the problem that function pointers need to be able to refer to both. And they seem equally likely to refer to either kind of function, maybe even with a slightly higher chance of pointing to Cython implemented (i.e. non-extern) functions, even though they are a totally C-ish thing.\r\n\r\nComing back to this part. I think there are two directions for arguments here:\r\n1) Function pointers are somewhat more likely to refer to Cython implemented functions, and should therefore follow their semantics.\r\n2) Function pointers are declarations and should therefore follow the common behaviour of (`extern`) declarations.\r\n\r\nFor pragmatic reasons, I'm leaning towards argument 1). Users seem more likely to implement a function and then need a pointer to it, than to point to `extern` functions. I think that should guide the semantics. The remaining cases can be handled with better error messages on assignments that point to the right fix.\r\n\r\nAlso in the (probably not so common) cases where function pointers need to point to different functions that do and do not propagate exceptions, the now implicit `except?` or `except *` on the pointer type would lead to correct behaviour since it adds a call to `PyErr_Occurred()`. If the pointer is not going to refer to a raising function, then calling through it would now be a little slower, which can be resolved by adding the `noexcept` marker (which, again, we should also allow in Cython 0.29.x). And that would be visible from `cython -a`.\r\n\r\nIf there are no objections to this, then the decision is to make function pointers behave like Cython implemented functions.",
            "created_at": "2022-04-16T07:15:20Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1100592792",
            "id": 1100592792,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5BmbaY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1100592792/reactions"
            },
            "updated_at": "2022-04-16T07:15:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1100592792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If the pointer is not going to refer to a raising function, then calling through it would now be a little slower, which can be resolved by adding the `noexcept` marker (which, again, we should also allow in Cython 0.29.x). And that would be visible from `cython -a`.\r\n\r\nYes, although this should be combined with https://github.com/cython/cython/issues/4689 so that we can point to non-raising functions with a raising function pointer.\r\n\r\n> For pragmatic reasons, I'm leaning towards argument 1). Users seem more likely to implement a function and then need a pointer to it, than to point to extern functions. I think that should guide the semantics. The remaining cases can be handled with better error messages on assignments that point to the right fix.\r\n\r\nI think what is quite common is to implement a Cython function (which'll now raise) and pass it to a C function (which may not be expecting an exception). Therefore...\r\n\r\n> If there are no objections to this, then the decision is to make function pointers behave like Cython implemented functions.\r\n\r\nNo objections, but I think we should add a strongly worded warning for function pointers passed to extern functions that don't have an exception specification. That's potentially somewhere where it has the potential to go wrong and where users should be thinking \"what happens to my exception\". (I don't think we should warn about the a lack of exception specification anywhere else)",
            "created_at": "2022-04-16T07:29:19Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1100594707",
            "id": 1100594707,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5Bmb4T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1100594707/reactions"
            },
            "updated_at": "2022-04-16T07:29:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1100594707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> * We add `noexcept` as a no-op for Cython 0.29.x, so that users can start adding it to their function implementations, if they need it and want their code to be compatible with Cython 3.0.\r\n\r\nDebian bullseye, Ubuntu focal and jammy are still not EOL but ship a version of Cython 0.29 that does not understand `noexcept`. As a maintainer of a Cython module how do I make the module compile on all versions?",
            "created_at": "2023-10-12T17:39:42Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1760072894",
            "id": 1760072894,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5o6JS-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1760072894/reactions"
            },
            "updated_at": "2023-10-12T17:39:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1760072894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8167495?v=4",
                "events_url": "https://api.github.com/users/aleasto/events{/privacy}",
                "followers_url": "https://api.github.com/users/aleasto/followers",
                "following_url": "https://api.github.com/users/aleasto/following{/other_user}",
                "gists_url": "https://api.github.com/users/aleasto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aleasto",
                "id": 8167495,
                "login": "aleasto",
                "node_id": "MDQ6VXNlcjgxNjc0OTU=",
                "organizations_url": "https://api.github.com/users/aleasto/orgs",
                "received_events_url": "https://api.github.com/users/aleasto/received_events",
                "repos_url": "https://api.github.com/users/aleasto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aleasto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aleasto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aleasto"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Debian bullseye, Ubuntu focal and jammy are still not EOL but ship a version of Cython 0.29 that does not understand `noexcept`. As a maintainer of a Cython module how do I make the module compile on all versions?\r\n\r\nAre you concerned about just being able to build the module or users being able to interact with your module via public pxd files?\r\n\r\nIf it's just building the module the something like setuptools `install_requires` would probably be the right thing to do. With build isolation there's really no reason to build using the platform version of Cython.\r\n\r\nIf you want users to be able to use pxd files with their platform Cython then you might be able to use versioned pxd files. From the changelog:\r\n\r\n> .pxd files can now be [versioned](https://cython.readthedocs.io/en/latest/src/userguide/sharing_declarations.html#versioning) by adding an extension like “.cython-30.pxd” to prevent older Cython versions (than 3.0 in this case) from picking them up\r\n\r\nThe unversioned pxd file would be used by Cython 0.29.x, while the versioned one would be used by Cython 3. I haven't looked into them specifically for this problem but I think they should be suitable.\r\n\r\nThe other thing you could do is just use `legacy_implicit_noexcept` to use the old behaviour for now.",
            "created_at": "2023-10-12T17:55:20Z",
            "html_url": "https://github.com/cython/cython/issues/4280#issuecomment-1760097398",
            "id": 1760097398,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4280",
            "node_id": "IC_kwDOABDGAc5o6PR2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1760097398/reactions"
            },
            "updated_at": "2023-10-12T17:56:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1760097398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 37,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4280/comments",
    "created_at": "2021-07-13T10:44:36Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-13T10:44:36Z",
            "event": "labeled",
            "id": 5012932980,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDUwMTI5MzI5ODA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5012932980"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-13T10:44:36Z",
            "event": "labeled",
            "id": 5012932982,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDUwMTI5MzI5ODI=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5012932982"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-13T10:44:36Z",
            "event": "milestoned",
            "id": 5012932994,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDUwMTI5MzI5OTQ=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5012932994"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-13T13:07:07Z",
            "event": "labeled",
            "id": 5013718927,
            "label": {
                "color": "444444",
                "name": "P: blocker"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDUwMTM3MTg5Mjc=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5013718927"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-15T06:42:35Z",
            "event": "subscribed",
            "id": 5023472530,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwMjM0NzI1MzA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5023472530"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-31T18:56:37Z",
            "event": "mentioned",
            "id": 5983170135,
            "node_id": "MEE_lADOABDGAc44N4FizwAAAAFkn-5X",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5983170135"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-31T18:56:37Z",
            "event": "subscribed",
            "id": 5983170145,
            "node_id": "SE_lADOABDGAc44N4FizwAAAAFkn-5h",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5983170145"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-02-15T22:33:58Z",
            "event": "mentioned",
            "id": 6078676597,
            "node_id": "MEE_lADOABDGAc44N4FizwAAAAFqUT51",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6078676597"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-02-15T22:33:58Z",
            "event": "subscribed",
            "id": 6078676603,
            "node_id": "SE_lADOABDGAc44N4FizwAAAAFqUT57",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6078676603"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-04-15T15:26:25Z",
            "event": "mentioned",
            "id": 6440936582,
            "node_id": "MEE_lADOABDGAc44N4FizwAAAAF_6OSG",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6440936582"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-04-15T15:26:25Z",
            "event": "subscribed",
            "id": 6440936584,
            "node_id": "SE_lADOABDGAc44N4FizwAAAAF_6OSI",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6440936584"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-09-10T13:55:17Z",
            "event": "closed",
            "id": 7360967250,
            "node_id": "CE_lADOABDGAc44N4FizwAAAAG2v3JS",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7360967250"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4280/events",
    "html_url": "https://github.com/cython/cython/issues/4280",
    "id": 943161698,
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557145,
            "name": "P: blocker",
            "node_id": "MDU6TGFiZWw0MjU1NTcxNDU=",
            "url": "https://api.github.com/repos/cython/cython/labels/P:%20blocker"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4280/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 947,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 1,
        "state": "open",
        "title": "3.0",
        "updated_at": "2023-07-25T06:58:14Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU5NDMxNjE2OTg=",
    "number": 4280,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4280/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4280/timeline",
    "title": "[ENH] C functions should propagate exceptions by default",
    "updated_at": "2023-10-12T17:56:41Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4280",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}