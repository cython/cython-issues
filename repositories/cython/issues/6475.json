{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\ncythonize has no way to pass the parameter aliases to Cython.Build.cythonize\n\n### Code to reproduce the behaviour:\n\n```cython\r\n# example code\r\n```\r\n(test_311) bash-3.2$ cythonize -h\r\nusage: cythonize [-h] [-X NAME=VALUE,...] [-E NAME=VALUE,...] [-s NAME=VALUE] [-2] [-3] [--3str] [-+] [-a] [--annotate-fullc] [-x PATTERN] [-b] [-i] [-j N] [-f] [-q]\r\n                 [--lenient] [-k] [--no-docstrings] [-M]\r\n                 [sources ...]\r\n\r\npositional arguments:\r\n  sources\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  -X NAME=VALUE,..., --directive NAME=VALUE,...\r\n                        set a compiler directive\r\n  -E NAME=VALUE,..., --compile-time-env NAME=VALUE,...\r\n                        set a compile time environment variable\r\n  -s NAME=VALUE, --option NAME=VALUE\r\n                        set a cythonize option\r\n  -2                    use Python 2 syntax mode by default\r\n  -3                    use Python 3 syntax mode by default\r\n  --3str                use Python 3 syntax mode by default\r\n  -+, --cplus           Compile as C++ rather than C\r\n  -a, --annotate        Produce a colorized HTML version of the source.\r\n  --annotate-fullc      Produce a colorized HTML version of the source which includes entire generated C/C++-code.\r\n  -x PATTERN, --exclude PATTERN\r\n                        exclude certain file patterns from the compilation\r\n  -b, --build           build extension modules using distutils/setuptools\r\n  -i, --inplace         build extension modules in place using distutils/setuptools (implies -b)\r\n  -j N, --parallel N    run builds in N parallel jobs (default: 6)\r\n  -f, --force           force recompilation\r\n  -q, --quiet           be less verbose during compilation\r\n  --lenient             increase Python compatibility by ignoring some compile time errors\r\n  -k, --keep-going      compile as much as possible, ignore compilation failures\r\n  --no-docstrings       strip docstrings\r\n  -M, --depfile         produce depfiles for the sources\r\n\r\nEnvironment variables:\r\n  CYTHON_FORCE_REGEN: if set to 1, forces cythonize to regenerate the output files regardless\r\n        of modification times and changes.\r\n  Environment variables accepted by setuptools are supported to configure the C compiler and build:\r\n  https://setuptools.pypa.io/en/latest/userguide/ext_modules.html#compiler-and-linker-options\n\n### Expected behaviour\n\ncythonize command line could pass the parameter aliases as Cython.Build.cythonize\r\n\r\n\n\n### OS\n\nall\n\n### Python version\n\nall\n\n### Cython version\n\nall\n\n### Additional context\n\nthe patch I use the deal with the issue.\r\n\r\n--- Cythonize.py\tSat Sep 28 23:29:25 2024\r\n+++ Cythonize.py.new\tMon Oct 14 11:18:49 2024\r\n@@ -73,6 +73,7 @@\r\n                 compile_time_env=options.compile_time_env,\r\n                 force=options.force,\r\n                 quiet=options.quiet,\r\n+                aliases=options.aliases,\r\n                 depfile=options.depfile,\r\n                 language=options.language,\r\n                 **options.options)\r\n@@ -191,6 +192,7 @@\r\n     parser.add_argument('--no-docstrings', dest='no_docstrings', action='store_true', default=None,\r\n                       help='strip docstrings')\r\n     parser.add_argument('-M', '--depfile', action='store_true', help='produce depfiles for the sources')\r\n+    parser.add_argument('--aliases', action='store', help='aliases')\r\n     parser.add_argument('sources', nargs='*')\r\n     return parser\r\n \r\n@@ -222,6 +224,10 @@\r\n     if options.language_level:\r\n         assert options.language_level in (2, 3, '3str')\r\n         options.options['language_level'] = options.language_level\r\n+\r\n+    if options.aliases:\r\n+        import json\r\n+        options.aliases=json.loads(options.aliases)\r\n \r\n     if options.lenient:\r\n         # increase Python compatibility by ignoring compile time errors",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6475/comments",
    "created_at": "2024-11-02T11:08:26Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6475/events",
    "html_url": "https://github.com/cython/cython/issues/6475",
    "id": 2630392638,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6475/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6cyJs-",
    "number": 6475,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6475/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6475/timeline",
    "title": "[BUG] cythonize cmd missing Parameters aliases to pass to Cython.Build.cythonize",
    "updated_at": "2024-11-02T11:08:26Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6475",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32301019?v=4",
        "events_url": "https://api.github.com/users/irvinren/events{/privacy}",
        "followers_url": "https://api.github.com/users/irvinren/followers",
        "following_url": "https://api.github.com/users/irvinren/following{/other_user}",
        "gists_url": "https://api.github.com/users/irvinren/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/irvinren",
        "id": 32301019,
        "login": "irvinren",
        "node_id": "MDQ6VXNlcjMyMzAxMDE5",
        "organizations_url": "https://api.github.com/users/irvinren/orgs",
        "received_events_url": "https://api.github.com/users/irvinren/received_events",
        "repos_url": "https://api.github.com/users/irvinren/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/irvinren/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/irvinren/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/irvinren",
        "user_view_type": "public"
    }
}