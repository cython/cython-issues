{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\nWhen CPython is compiled in debug mode, Cython may trigger an assertion related to function flags.\r\n\r\n**To Reproduce**\r\n\r\n* Compile CPython 3.11.0b1 from source `--with-pydebug`\r\n* `pip install asynq` with the newly compiled python\r\n* `python -c 'import asynq'`\r\n* Crash: `Assertion failed: (PyCFunction_Check(func)), function PyCFunction_GET_FLAGS, file methodobject.h, line 59.`\r\n\r\n**Expected behavior**\r\nNo crash\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - Python version 3.11b1\r\n - Cython version 0.29.30\r\n\r\n**Additional context**\r\n\r\nThe crash is around here: https://github.com/cython/cython/blob/169876872f3cb6198971a1db07e5b8a9d12b3dac/Cython/Utility/ObjectHandling.c#L2237. If `func` is a `CyFunctionObject`, the `__Pyx_IsCyOrPyCFunction` check passes and we call `PyCFunction_GET_FLAGS`, but in debug mode that function checks that its arg is exactly a PyCFunction.\r\n\r\nIt appears that this is harmless because the layout of `CyFunctionObject` has a `PyCFunction` at the top, so it's fine at runtime to treat the former as if it's the latter. Therefore, things work fine in non-debug mode.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> function checks that its arg is exactly a PyCFunction.\r\n\r\nIt isn't even quite that. It doesn't do an \"exact\" check. I think the issues is that `CyFunction` is structured as if it inherits from `PyCFunction` (it has `PyCFunction` as the first element of the struct) but doesn't set `tp_base`.\r\n",
            "created_at": "2022-05-22T06:01:34Z",
            "html_url": "https://github.com/cython/cython/issues/4804#issuecomment-1133825107",
            "id": 1133825107,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4804",
            "node_id": "IC_kwDOABDGAc5DlMxT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1133825107/reactions"
            },
            "updated_at": "2022-05-22T06:01:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1133825107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Since CPython 3.9, it is possible to inherit from PyCFunction. We could try if we can do this for CyFunction. There is a certain risk of triggering incorrect special handling code somewhere in CPython or third party modules, since such code might not have been written with actual PyCFunction subtypes in mind that behave differently. But if that happens, it probably wouldn't be on Cython's plate to fix it. We're still in alpha, let's see if we can do this.",
            "created_at": "2022-05-25T10:32:49Z",
            "html_url": "https://github.com/cython/cython/issues/4804#issuecomment-1137075123",
            "id": 1137075123,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4804",
            "node_id": "IC_kwDOABDGAc5DxmOz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1137075123/reactions"
            },
            "updated_at": "2022-05-25T10:32:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1137075123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Because the assertion is in an inline function in a header file, it affects any module which is built in debug mode, regardless of how Python itself was built.\r\n\r\nI got the above crash with:\r\n\r\n* CPython 3.11.0rc1, **not** built in debug mode\r\n* A module generated by Cython 0.29.32, built in debug mode\r\n\r\nDefining NDEBUG while compiling the Cython module fixed the problem, but this obviously disables all other assertions as well, which isn't ideal.",
            "created_at": "2022-09-15T19:13:17Z",
            "html_url": "https://github.com/cython/cython/issues/4804#issuecomment-1248507136",
            "id": 1248507136,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4804",
            "node_id": "IC_kwDOABDGAc5KarUA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1248507136/reactions"
            },
            "updated_at": "2022-09-15T19:15:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1248507136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/166954?v=4",
                "events_url": "https://api.github.com/users/mhsmith/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhsmith/followers",
                "following_url": "https://api.github.com/users/mhsmith/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhsmith/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhsmith",
                "id": 166954,
                "login": "mhsmith",
                "node_id": "MDQ6VXNlcjE2Njk1NA==",
                "organizations_url": "https://api.github.com/users/mhsmith/orgs",
                "received_events_url": "https://api.github.com/users/mhsmith/received_events",
                "repos_url": "https://api.github.com/users/mhsmith/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhsmith/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhsmith/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhsmith"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think we've given up on inheriting from CyFunction (at least for the moment) so I suspect practically we need `__pyx_CyOrPyCFunction_GET_FLAGS` with a slightly different path for debug mode. Or possibly to disable the shortcut path in debug mode (which might be easier)",
            "created_at": "2022-09-15T19:53:11Z",
            "html_url": "https://github.com/cython/cython/issues/4804#issuecomment-1248543812",
            "id": 1248543812,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4804",
            "node_id": "IC_kwDOABDGAc5Ka0RE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1248543812/reactions"
            },
            "updated_at": "2022-09-15T21:12:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1248543812",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Confirmed this is still a problem in Cython 3.0a11/CPython 3.11rc2. Trivial reproducer:\r\n```console\r\n# cython —version\r\nCython version 3.0.0a11\r\n# cat bad.py \r\ndef init():\r\n    print('init')\r\n\r\ninit()\r\n# cython bad.py \r\n# clang -fno-common -dynamic -g -Og -Wall -g -I/opt/local/include -arch x86_64 -I/usr/local/py311_debug/Python.framework/Versions/3.11/include/python3.11d -c bad.c -o  bad.o\r\n# /usr/bin/clang -bundle -undefined dynamic_lookup bad.o -o bad.cpython-311d-darwin.so\r\nld: warning: -undefined dynamic_lookup may not work with chained fixups\r\n# python -c 'import bad'\r\nAssertion failed: (PyCFunction_Check(func)), function PyCFunction_GET_FLAGS, file methodobject.h, line 59.\r\nFatal Python error: Aborted\r\n\r\nCurrent thread 0x0000000114cfe600 (most recent call first):\r\n  File \"<frozen importlib._bootstrap>\", line 241 in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap_external>\", line 1241 in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 690 in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1149 in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1178 in _find_and_load\r\n  File \"<string>\", line 1 in <module>\r\n\r\nExtension modules: bad (total: 1)\r\nAbort trap: 6\r\n```\r\n\r\nThe interesting part of the backtrace:\r\n```\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t    0x7ff81038b00e __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t    0x7ff8103c11ff pthread_kill + 263\r\n2   libsystem_c.dylib             \t    0x7ff8102cf2d8 raise + 26\r\n3   Python                        \t       0x10ba77be1 faulthandler_fatal_error + 209 (faulthandler.c:373)\r\n4   libsystem_platform.dylib      \t    0x7ff8103d6dfd _sigtramp + 29\r\n5   ???                           \t0xcdcdcdcdcdcdcdcd ???\r\n6   libsystem_c.dylib             \t    0x7ff81030cd24 abort + 123\r\n7   libsystem_c.dylib             \t    0x7ff81030c0cb __assert_rtn + 314\r\n8   bad.cpython-311d-darwin.so    \t       0x10b8121b1 PyCFunction_GET_FLAGS.cold.1 + 33 (methodobject.h:59)\r\n9   bad.cpython-311d-darwin.so    \t       0x10b811825 PyCFunction_GET_FLAGS + 37 (methodobject.h:59)\r\n10  bad.cpython-311d-darwin.so    \t       0x10b8117a5 __Pyx_PyObject_FastCallDict + 117 (bad.c:4211)\r\n11  bad.cpython-311d-darwin.so    \t       0x10b80f0b9 __Pyx_PyObject_CallNoArg + 25 (bad.c:4266)\r\n12  bad.cpython-311d-darwin.so    \t       0x10b80e94b __pyx_pymod_exec_bad + 699 (bad.c:2464)\r\n13  Python                        \t       0x10b967346 PyModule_ExecDef + 134 (moduleobject.c:419)\r\n```\r\n\r\nAs noted, compiling with `-DNDEBUG` stops the crash.  \r\n\r\nEDIT: See the following comments; this was not undefined behaviour.\r\n\r\nBut in doing so, we're entering the realm of undefined behaviour.\r\n\r\nThe relevant portion of `__Pyx_PyObject_FastCallDict` (simplified):\r\n```C\r\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {\r\n    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);\r\n\r\n    if (nargs == 0 && kwargs == NULL) {\r\n        if (__Pyx_IsCyOrPyCFunction(func))\r\n        {\r\n            if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {\r\n                return __Pyx_PyObject_CallMethO(func, NULL);\r\n            }\r\n        }\r\n    }\r\n…\r\n}\r\n```\r\n\r\nwhere  `PyCFunction_GET_FLAGS` is defined like so:\r\n```C\r\nstatic inline int PyCFunction_GET_FLAGS(PyObject *func) {\r\n    return _PyCFunctionObject_CAST(func)->m_ml->ml_flags;\r\n}\r\n```\r\n\r\nSo when `func` is actually a  `__pyx_CyFunctionType` then this is taking some arbitrary offset from the pointer and an arbitrary offset from _that_ pointer and treating it like a meaningful flags value. At least on my machine right now, that value is always 130, which doesn't pass the `& METH_NOARGS` check, so we luckily end up in a code path that at least appears to work. ",
            "created_at": "2022-10-13T12:21:00Z",
            "html_url": "https://github.com/cython/cython/issues/4804#issuecomment-1277523244",
            "id": 1277523244,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4804",
            "node_id": "IC_kwDOABDGAc5MJXUs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1277523244/reactions"
            },
            "updated_at": "2022-10-13T17:27:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1277523244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1256082?v=4",
                "events_url": "https://api.github.com/users/jamadden/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamadden/followers",
                "following_url": "https://api.github.com/users/jamadden/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamadden/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamadden",
                "id": 1256082,
                "login": "jamadden",
                "node_id": "MDQ6VXNlcjEyNTYwODI=",
                "organizations_url": "https://api.github.com/users/jamadden/orgs",
                "received_events_url": "https://api.github.com/users/jamadden/received_events",
                "repos_url": "https://api.github.com/users/jamadden/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamadden/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamadden/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamadden"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't believe this is undefined behaviour. If you look at the the CyFunction struct the first element is a `PyCFunctionObject`.\r\n\r\nhttps://github.com/cython/cython/blob/c900b6a587801aa3efc918809e53d6c33bc8ed73/Cython/Utility/CythonFunction.c#L30-L36\r\n\r\nCasting a struct pointer to the type of the first element is explicitly allowed in C (and pretty much the whole of the Python type system is based on it). So unless I'm missing something `PyCFunction_GET_FLAGS` should work correctly (with the debug assertions off...).\r\n\r\nI have proposed a PR to fix it - I'm not hugely happy with the proposed fix so I'm not going to merge it unilaterally myself though.",
            "created_at": "2022-10-13T17:11:37Z",
            "html_url": "https://github.com/cython/cython/issues/4804#issuecomment-1277929290",
            "id": 1277929290,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4804",
            "node_id": "IC_kwDOABDGAc5MK6dK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1277929290/reactions"
            },
            "updated_at": "2022-10-13T17:11:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1277929290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm so sorry, I completely missed that fact. (It's a little easier to overlook in the generated files, which is what I was looking at, where there are a lot more C preprocessor directives in use.) Yes, in that case, you are absolutely right, and I withdraw my comment. And apologize for taking up your time.",
            "created_at": "2022-10-13T17:26:48Z",
            "html_url": "https://github.com/cython/cython/issues/4804#issuecomment-1277946231",
            "id": 1277946231,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4804",
            "node_id": "IC_kwDOABDGAc5MK-l3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1277946231/reactions"
            },
            "updated_at": "2022-10-13T17:26:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1277946231",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1256082?v=4",
                "events_url": "https://api.github.com/users/jamadden/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamadden/followers",
                "following_url": "https://api.github.com/users/jamadden/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamadden/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamadden",
                "id": 1256082,
                "login": "jamadden",
                "node_id": "MDQ6VXNlcjEyNTYwODI=",
                "organizations_url": "https://api.github.com/users/jamadden/orgs",
                "received_events_url": "https://api.github.com/users/jamadden/received_events",
                "repos_url": "https://api.github.com/users/jamadden/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamadden/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamadden/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamadden"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4804/comments",
    "created_at": "2022-05-22T04:10:25Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "9863293a8377085e683a0de3aac9a841da1cbce8",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/9863293a8377085e683a0de3aac9a841da1cbce8",
            "created_at": "2022-09-15T21:11:17Z",
            "event": "referenced",
            "id": 7398378221,
            "node_id": "REFE_lADOABDGAc5KKBiKzwAAAAG4-krt",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7398378221"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4804/events",
    "html_url": "https://github.com/cython/cython/issues/4804",
    "id": 1244141706,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4804/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5KKBiK",
    "number": 4804,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4804/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4804/timeline",
    "title": "[BUG] Assertion failure in PyCFunction_GET_FLAGS on debug mode",
    "updated_at": "2022-10-14T01:54:56Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4804",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/906600?v=4",
        "events_url": "https://api.github.com/users/JelleZijlstra/events{/privacy}",
        "followers_url": "https://api.github.com/users/JelleZijlstra/followers",
        "following_url": "https://api.github.com/users/JelleZijlstra/following{/other_user}",
        "gists_url": "https://api.github.com/users/JelleZijlstra/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/JelleZijlstra",
        "id": 906600,
        "login": "JelleZijlstra",
        "node_id": "MDQ6VXNlcjkwNjYwMA==",
        "organizations_url": "https://api.github.com/users/JelleZijlstra/orgs",
        "received_events_url": "https://api.github.com/users/JelleZijlstra/received_events",
        "repos_url": "https://api.github.com/users/JelleZijlstra/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/JelleZijlstra/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JelleZijlstra/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/JelleZijlstra"
    }
}