{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- DO NOT use the bug and feature tracker for general questions and support requests.\r\n  Use the `cython-users` mailing list instead.\r\n  It has a wider audience, so you get more and better answers.\r\n- Did you search for similar issues already?\r\n  Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release?\r\n  It might already have what you want to report.\r\n  Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\nAnnotating memoryviews of extension types in the pure Python mode with `mem_view: extension_type[:]` fails. However, annotating Cython primitives memoryviews (e.g. `mem_view: cython.int[:]`) works just fine. The cdef syntax does not have this problem. \r\n\r\n**To Reproduce**\r\nConsider the following cdef syntax:\r\n\r\n```cython\r\n# cython: initializedcheck = False, boundscheck = False, wraparound = False\r\n\r\ncdef class container:\r\n    cdef int item\r\n\r\ncdef int calc_containers(container[::1] containers):\r\n    cdef int s = 0\r\n    cdef int c = containers.shape[0]\r\n    for i in range(c):\r\n        s += containers[i].item\r\n    return s\r\n\r\ncdef int calc_ints(int[::1] ints):\r\n    cdef int s = 0\r\n    cdef int c = ints.shape[0]\r\n    for i in range(c):\r\n        s += ints[i]\r\n    return s\r\n```\r\n\r\nThis will compile into:\r\n\r\n```c\r\nstatic int __pyx_f_12memview_cdef_calc_containers(__Pyx_memviewslice __pyx_v_containers) { ... }\r\nstatic int __pyx_f_12memview_cdef_calc_ints(__Pyx_memviewslice __pyx_v_ints) { ... }\r\n```\r\n\r\nConsider the following pure Python code:\r\n\r\n```python\r\n# cython: initializedcheck = False, boundscheck = False, wraparound = False\r\n\r\nimport cython\r\n\r\n@cython.cclass\r\nclass container:\r\n    item: cython.int\r\n\r\n@cython.cfunc\r\ndef calc_containers(containers: container[::1]) -> cython.int:\r\n    s: cython.int = 0\r\n    c: cython.int = containers.shape[0]\r\n    for i in range(c):\r\n        s += containers[i].item\r\n    return s\r\n\r\n@cython.cfunc\r\ndef calc_ints(ints: cython.int[::1]) -> cython.int:\r\n    s: cython.int = 0\r\n    c: cython.int = ints.shape[0]\r\n    for i in range(c):\r\n        s += ints[i]\r\n    return s\r\n```\r\n\r\nThis will compile into:\r\n```c\r\nstatic int __pyx_f_12memview_pure_calc_containers(PyObject *__pyx_v_containers) { ... }\r\nstatic int __pyx_f_12memview_pure_calc_ints(__Pyx_memviewslice __pyx_v_ints) { ... }\r\n```\r\n\r\nIn the cdef case all arguments are of type `__Pyx_memviewslice`, while in the pure Python case the extension type memoryviews are of type `PyObject` and the primitives of type `__Pyx_memviewslice`. The implication is that the pure Python code will not perform as well (and in some cases will not run at all), even if, in principle, the same syntax was used in all places.\r\n\r\n**Expected behavior**\r\nAnnotating memoryviews of extension types in the pure Python mode should work in the same fashion as annotating memoryviews of Cython primitives. For example:\r\n\r\n```python\r\n@cython.cfunc\r\ndef calc0(data: extension_type[:]) -> cython.double: ...\r\n\r\n@cython.cfunc\r\ndef calc1(data: cython.double[:]) -> cython.double: ...\r\n```\r\n\r\nBoth should be efficiently compiled. Currently, only the function `calc1` is efficiently compiled. \r\n\r\n**Environment (please complete the following information):**\r\n - OS: Windows 10\r\n - Python version: 3.10.5\r\n - Cython version: 3.0.0a10\r\n\r\n**Additional context**\r\nI could not find anything about this in the documentation. \r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You could probably use the `locals` decorator instead. But I don't see why it shouldn't work.",
            "created_at": "2022-07-20T08:41:27Z",
            "html_url": "https://github.com/cython/cython/issues/4907#issuecomment-1189996334",
            "id": 1189996334,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4907",
            "node_id": "IC_kwDOABDGAc5G7ecu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1189996334/reactions"
            },
            "updated_at": "2022-07-20T08:41:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1189996334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I can not get the `locals` decorator to work for extension type memoryviews. See the code below:\r\n\r\n```python\r\n@cython.cfunc\r\n@cython.locals(ints = cython.int[::1])\r\ndef calc_ints_alt(ints) -> cython.int:\r\n    s: cython.int = 0\r\n    c: cython.int = ints.shape[0]\r\n    for i in range(c):\r\n        s += ints[i]\r\n    return s\r\n```\r\n\r\nCompiles to:\r\n\r\n```c\r\nstatic int __pyx_f_12memview_pure_calc_ints_alt(__Pyx_memviewslice __pyx_v_ints) { ... }\r\n```\r\n\r\nConsider the following code with an extension type:\r\n\r\n```python\r\n@cython.cfunc\r\n@cython.locals(containers = container[::1])\r\ndef calc_containers_alt(containers) -> cython.int:\r\n    s: cython.int = 0\r\n    c: cython.int = containers.shape[0]\r\n    for i in range(c):\r\n        s += containers[i].item\r\n    return s\r\n```\r\n\r\nThe compiler will fail with the following error:\r\n\r\n```\r\n@cython.cfunc\r\n@cython.locals(containers = container[:])\r\n                                    ^\r\n------------------------------------------------------------\r\n\r\npath\\memview_pure.pyx:26:37: Not a type\r\n```\r\n\r\nIn other words, I can not get memoryviews of extension types to work. I am also unable to find an alternative way to annotate memoryviews in the pure Python mode.",
            "created_at": "2022-07-20T16:34:56Z",
            "html_url": "https://github.com/cython/cython/issues/4907#issuecomment-1190503624",
            "id": 1190503624,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4907",
            "node_id": "IC_kwDOABDGAc5G9aTI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1190503624/reactions"
            },
            "updated_at": "2022-07-20T16:34:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1190503624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52362148?v=4",
                "events_url": "https://api.github.com/users/Acmion/events{/privacy}",
                "followers_url": "https://api.github.com/users/Acmion/followers",
                "following_url": "https://api.github.com/users/Acmion/following{/other_user}",
                "gists_url": "https://api.github.com/users/Acmion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Acmion",
                "id": 52362148,
                "login": "Acmion",
                "node_id": "MDQ6VXNlcjUyMzYyMTQ4",
                "organizations_url": "https://api.github.com/users/Acmion/orgs",
                "received_events_url": "https://api.github.com/users/Acmion/received_events",
                "repos_url": "https://api.github.com/users/Acmion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Acmion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Acmion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Acmion"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Again, that does look like it should work, so is a bug.\r\n\r\nPractically you'll find a memoryview of `container` is equivalent to a memoryview of `object` with an unchecked cast to `container` (there's no validation of types for example, and the internal structure is exactly the same). So you might be able to use\r\n\r\n```\r\n@cython.cfunc\r\ndef calc_containers_alt(containers: object[:]) -> cython.int:\r\n   ...\r\n        s += cython.cast(container, containers[i], typecheck=False).item\r\n```\r\n\r\nand it should generate almost the same C code as a memoryview of `container`. However, I haven't actually tested that it works, and it's a workaround that you shouldn't have to do",
            "created_at": "2022-07-20T17:37:23Z",
            "html_url": "https://github.com/cython/cython/issues/4907#issuecomment-1190565883",
            "id": 1190565883,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4907",
            "node_id": "IC_kwDOABDGAc5G9pf7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1190565883/reactions"
            },
            "updated_at": "2022-07-20T17:37:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1190565883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Your code works, but the memoryview is again considered as a `PyObject` and thus performance suffers once again. Consider the following code:\r\n\r\n```python\r\n@cython.cfunc\r\ndef calc_objs(containers: object[:]) -> cython.int:\r\n    s: cython.int = 0\r\n    c: cython.int = containers.shape[0]\r\n    for i in range(c):\r\n        cnt: container = cython.cast(container, containers[i], typecheck=False)\r\n        s += cnt.item\r\n    return s\r\n```\r\n\r\nIt translates into this:\r\n\r\n```c\r\nstatic int __pyx_f_12memview_pure_calc_objs(PyObject *__pyx_v_containers) { ... }\r\n```\r\n\r\nThis time the code does work, but it performs about 20x worse than `cdef int calc_containers(container[::1] containers)` (defined in the first post), because of the incorrect type. This means that Cython has to interface with Python for, for example, the indexation. I also tried `cython.locals(containers = object[:])` and got the same error as previously: `Not a type`.",
            "created_at": "2022-07-20T20:15:56Z",
            "html_url": "https://github.com/cython/cython/issues/4907#issuecomment-1190713283",
            "id": 1190713283,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4907",
            "node_id": "IC_kwDOABDGAc5G-NfD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1190713283/reactions"
            },
            "updated_at": "2022-07-21T01:20:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1190713283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52362148?v=4",
                "events_url": "https://api.github.com/users/Acmion/events{/privacy}",
                "followers_url": "https://api.github.com/users/Acmion/followers",
                "following_url": "https://api.github.com/users/Acmion/following{/other_user}",
                "gists_url": "https://api.github.com/users/Acmion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Acmion",
                "id": 52362148,
                "login": "Acmion",
                "node_id": "MDQ6VXNlcjUyMzYyMTQ4",
                "organizations_url": "https://api.github.com/users/Acmion/orgs",
                "received_events_url": "https://api.github.com/users/Acmion/received_events",
                "repos_url": "https://api.github.com/users/Acmion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Acmion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Acmion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Acmion"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah - my suggestion would only have been worthwhile if it typed it as a memoryview. I hoped it might, but obviously not...",
            "created_at": "2022-07-20T20:36:51Z",
            "html_url": "https://github.com/cython/cython/issues/4907#issuecomment-1190732165",
            "id": 1190732165,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4907",
            "node_id": "IC_kwDOABDGAc5G-SGF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1190732165/reactions"
            },
            "updated_at": "2022-07-20T20:36:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1190732165",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4907/comments",
    "created_at": "2022-07-20T03:35:57Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-20T08:40:30Z",
            "event": "labeled",
            "id": 7027228320,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc5OGqSbzwAAAAGi2v6g",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7027228320"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-20T08:40:30Z",
            "event": "labeled",
            "id": 7027228323,
            "label": {
                "color": "444444",
                "name": "Pure Python Mode"
            },
            "node_id": "LE_lADOABDGAc5OGqSbzwAAAAGi2v6j",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7027228323"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4907/events",
    "html_url": "https://github.com/cython/cython/issues/4907",
    "id": 1310368923,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558499,
            "name": "Pure Python Mode",
            "node_id": "MDU6TGFiZWw0MjU1NTg0OTk=",
            "url": "https://api.github.com/repos/cython/cython/labels/Pure%20Python%20Mode"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4907/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5OGqSb",
    "number": 4907,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4907/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4907/timeline",
    "title": "[BUG] Annotating Memoryviews of Extension Types in the Pure Python Mode With `mem_view: extension_type[:]` Fails",
    "updated_at": "2022-07-21T01:20:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4907",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52362148?v=4",
        "events_url": "https://api.github.com/users/Acmion/events{/privacy}",
        "followers_url": "https://api.github.com/users/Acmion/followers",
        "following_url": "https://api.github.com/users/Acmion/following{/other_user}",
        "gists_url": "https://api.github.com/users/Acmion/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Acmion",
        "id": 52362148,
        "login": "Acmion",
        "node_id": "MDQ6VXNlcjUyMzYyMTQ4",
        "organizations_url": "https://api.github.com/users/Acmion/orgs",
        "received_events_url": "https://api.github.com/users/Acmion/received_events",
        "repos_url": "https://api.github.com/users/Acmion/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Acmion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Acmion/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Acmion"
    }
}