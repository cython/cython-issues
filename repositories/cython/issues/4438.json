{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "When a complex array has type `npy_complex256` (on 64-bit) or `npy_clongdouble`, indexing for an element returns a dict with keys `real` and `imag`.  All other complex types generate the complex value itself, and not a dict.\r\n\r\nConsider the following Cython file:\r\n\r\n```\r\nimport numpy as np\r\ncimport numpy as cnp\r\n\r\n\r\ndef one_long_double():\r\n    cdef:\r\n        cnp.ndarray[cnp.npy_longdouble] output\r\n\r\n    output = np.array([1], dtype=np.longdouble)\r\n    print(output[0])\r\n\r\n\r\ndef one_c128():\r\n    cdef:\r\n        cnp.ndarray[cnp.complex128_t] output\r\n\r\n    output = np.array([1 + 1j], dtype=np.complex128)\r\n    print(output[0])\r\n\r\n\r\ndef one_c256():\r\n    cdef:\r\n        cnp.ndarray[cnp.npy_complex256] output\r\n\r\n    output = np.array([1 + 1j], dtype=np.complex256)\r\n    print(output[0])\r\n\r\n\r\ndef one_clong_double():\r\n    cdef:\r\n        cnp.ndarray[cnp.clongdouble_t] output\r\n\r\n    output = np.array([1 + 1j], dtype=np.clongdouble)\r\n    print(output[0])\r\n\r\n\r\ndef one_long_double_complex():\r\n    cdef:\r\n        cnp.ndarray[long double complex] output\r\n\r\n    output = np.array([1 + 1j], dtype=np.clongdouble)\r\n    print(output[0])\r\n\r\n\r\nprint('long double')\r\none_long_double()\r\nprint('c128')\r\none_c128()\r\nprint('c256')\r\none_c256()\r\nprint('clongdouble')\r\none_clong_double()\r\nprint('long double complex')\r\none_long_double_complex()\r\n```\r\n\r\nCode at: https://github.com/matthew-brett/cyext\r\n\r\nThis gives output:\r\n\r\n```\r\nlong double\r\n1.0\r\nc128\r\n(1+1j)\r\nc256\r\n{'real': 1.0, 'imag': 1.0}\r\nclongdouble\r\n{'real': 1.0, 'imag': 1.0}\r\nlong double complex\r\n(1+1j)\r\n```\r\n\r\nI think this shows that internally, Cython interprets the elements in `complex256` and (equivalently) `clongdouble` as dicts, whereas this not true for other complex data types, nor for the cdef of the same thing, using `long double complex`.\r\n\r\nThis seems confusing to me - and specifically, it will require some odd workarounds in Scipy code when using the `np.clongdouble` type.  Is it intended?   Is there an easy workaround to get the complex value by indexing, rather than the dict?\r\n",
    "closed_at": "2021-11-01T22:26:03Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I notice too that Cython also returns a dict with:\r\n\r\n```\r\ndef one_np_c128():\r\n    cdef:\r\n        cnp.ndarray[cnp.npy_complex128] output\r\n\r\n    output = np.array([1 + 1j], dtype=np.complex128)\r\n    print(output[0])\r\n```\r\n\r\nThat is - it seems to treat the `npy_complex*` form of the data type as containing dicts, and the `complex*_t` types as containing complex values, except for `clongdouble_t`, which it always treats as containing dicts.",
            "created_at": "2021-11-01T21:25:56Z",
            "html_url": "https://github.com/cython/cython/issues/4438#issuecomment-956629029",
            "id": 956629029,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4438",
            "node_id": "IC_kwDOABDGAc45BQAl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/956629029/reactions"
            },
            "updated_at": "2021-11-01T21:25:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/956629029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67612?v=4",
                "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
                "followers_url": "https://api.github.com/users/matthew-brett/followers",
                "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
                "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matthew-brett",
                "id": 67612,
                "login": "matthew-brett",
                "node_id": "MDQ6VXNlcjY3NjEy",
                "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
                "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
                "repos_url": "https://api.github.com/users/matthew-brett/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matthew-brett"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "The definitions are at https://github.com/numpy/numpy/blob/main/numpy/__init__.cython-30.pxd (Cython no longer maintains the Numpy pxd files itself)\r\n\r\nWithout the `_t` the definitions are like:\r\n```\r\nctypedef struct npy_complex128:\r\n        double real\r\n        double imag\r\n```\r\n\r\nWhile with the `_t`:\r\n```\r\nctypedef double complex complex128_t\r\n```\r\n\r\nSo I'd say this is probably working as intended (although I don't know the Numpy complex types enough to know why that is)\r\n\r\n`clongdouble_t` looks like an outlier though and should probably be fixed if possible. But ideally in Numpy I think",
            "created_at": "2021-11-01T22:15:16Z",
            "html_url": "https://github.com/cython/cython/issues/4438#issuecomment-956732728",
            "id": 956732728,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4438",
            "node_id": "IC_kwDOABDGAc45BpU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/956732728/reactions"
            },
            "updated_at": "2021-11-01T22:18:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/956732728",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Aha - yes - thanks for investigating.  I'll post over at Numpy ...",
            "created_at": "2021-11-01T22:26:03Z",
            "html_url": "https://github.com/cython/cython/issues/4438#issuecomment-956754809",
            "id": 956754809,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4438",
            "node_id": "IC_kwDOABDGAc45But5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/956754809/reactions"
            },
            "updated_at": "2021-11-01T22:26:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/956754809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67612?v=4",
                "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
                "followers_url": "https://api.github.com/users/matthew-brett/followers",
                "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
                "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matthew-brett",
                "id": 67612,
                "login": "matthew-brett",
                "node_id": "MDQ6VXNlcjY3NjEy",
                "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
                "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
                "repos_url": "https://api.github.com/users/matthew-brett/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matthew-brett"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4438/comments",
    "created_at": "2021-11-01T20:57:04Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67612?v=4",
                "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
                "followers_url": "https://api.github.com/users/matthew-brett/followers",
                "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
                "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matthew-brett",
                "id": 67612,
                "login": "matthew-brett",
                "node_id": "MDQ6VXNlcjY3NjEy",
                "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
                "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
                "repos_url": "https://api.github.com/users/matthew-brett/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matthew-brett"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-11-01T22:26:03Z",
            "event": "closed",
            "id": 5551766785,
            "node_id": "CE_lADOABDGAc4-FffgzwAAAAFK6T0B",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5551766785"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4438/events",
    "html_url": "https://github.com/cython/cython/issues/4438",
    "id": 1041627104,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4438/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc4-Fffg",
    "number": 4438,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4438/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4438/timeline",
    "title": "[BUG] npy_clongdouble element access inconsistent with other complex types.",
    "updated_at": "2021-11-01T22:26:03Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4438",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/67612?v=4",
        "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}",
        "followers_url": "https://api.github.com/users/matthew-brett/followers",
        "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/matthew-brett",
        "id": 67612,
        "login": "matthew-brett",
        "node_id": "MDQ6VXNlcjY3NjEy",
        "organizations_url": "https://api.github.com/users/matthew-brett/orgs",
        "received_events_url": "https://api.github.com/users/matthew-brett/received_events",
        "repos_url": "https://api.github.com/users/matthew-brett/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/matthew-brett"
    }
}