{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\nWhen using cpp_locals(True) in combination with  exception handling inside of a prange, an incorrect assignment is generated. The following code:\r\n```cython\r\ncimport cython\r\nfrom cython.parallel import prange\r\n\r\ncdef extern from *:\r\n    \"\"\"\r\n    class Test {\r\n    };\r\n    \"\"\"\r\n    cdef cppclass Test:\r\n        Test() nogil except +\r\n\r\n@cython.cpp_locals(True)\r\ncdef test():\r\n    cdef int i\r\n    for i in prange(10, nogil=True):\r\n        var = Test()\r\n```\r\nuses std::optional<Test> to store the variable, while it uses Test to store the thread local variable. This results in an invalid assignment:\r\n```\r\nCYTHON_UNUSED __Pyx_Optional_Type<Test> __pyx_v_var;\r\n__Pyx_Optional_Type<Test> __pyx_t_3;\r\n...\r\nTest __pyx_parallel_temp1;\r\n...\r\n__pyx_t_3 = Test();\r\n__pyx_v_var = std::move((*__pyx_t_3));\r\n...\r\n__pyx_parallel_temp1 = __pyx_v_var;\r\n```\r\nhere the last assignment to `__pyx_parallel_temp1` is invalid.\r\n\r\n**Expected behavior**\r\nThe temporary variable `__pyx_parallel_temp1` should use the type `__Pyx_Optional_Type<Test>` as well.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "I'd obviously missed that pranges have their own type of temp. I also wonder if the assignment to parallel_temp should use `std::move` too (although that would need a close look at the context it's used in)",
            "created_at": "2021-08-31T06:41:30Z",
            "html_url": "https://github.com/cython/cython/issues/4354#issuecomment-908945056",
            "id": 908945056,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4354",
            "node_id": "IC_kwDOABDGAc42LWag",
            "performed_via_github_app": null,
            "updated_at": "2021-08-31T06:41:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/908945056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I also wonder if the assignment to parallel_temp should use std::move too (although that would need a close look at the context it's used in)\r\n\r\nI wondered this too, since it would help me with my problem from https://github.com/cython/cython/issues/4352.",
            "created_at": "2021-08-31T11:48:07Z",
            "html_url": "https://github.com/cython/cython/issues/4354#issuecomment-909162037",
            "id": 909162037,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4354",
            "node_id": "IC_kwDOABDGAc42MLY1",
            "performed_via_github_app": null,
            "updated_at": "2021-08-31T11:48:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/909162037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> > I also wonder if the assignment to parallel_temp should use std::move too (although that would need a close look at the context it's used in)\r\n\r\n> I wondered this too, since it would help me with my problem from #4352.\r\n\r\nAt least on gcc, `lastprivate` implies copy constructable, so I don't think this necessarily helps you. I think the move is still worth generating for efficiency, but it doesn't let you couldn't already do.\r\n\r\n-----------\r\n\r\nEdit: From microsoft: https://docs.microsoft.com/en-us/cpp/parallel/openmp/2-directives?view=msvc-160#2723-lastprivate\r\n\r\n> A variable with a class type that's specified as lastprivate must have an accessible, unambiguous copy assignment operator.\r\n\r\nso I really don't think you can such a class directly inside a Cython parallel loop. If you don't use it after the loop (so Cython's `lastprivate` clause is unnecessary) then it'd probably work to wrap the loop body in a cdef function and call the cdef function in the loop",
            "created_at": "2021-09-01T20:02:49Z",
            "html_url": "https://github.com/cython/cython/issues/4354#issuecomment-910678298",
            "id": 910678298,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4354",
            "node_id": "IC_kwDOABDGAc42R9ka",
            "performed_via_github_app": null,
            "updated_at": "2021-09-01T20:21:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/910678298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> If you don't use it after the loop (so Cython's lastprivate clause is unnecessary) then it'd probably work to wrap the loop body in a cdef function and call the cdef function in the loop\r\n\r\nYes that's what I do now. ",
            "created_at": "2021-09-01T20:28:37Z",
            "html_url": "https://github.com/cython/cython/issues/4354#issuecomment-910712800",
            "id": 910712800,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4354",
            "node_id": "IC_kwDOABDGAc42SF_g",
            "performed_via_github_app": null,
            "updated_at": "2021-09-01T20:28:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/910712800",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4354/comments",
    "created_at": "2021-08-30T23:45:42Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "6ec22b8f240c5a858f56587435f25ebcee975a87",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/6ec22b8f240c5a858f56587435f25ebcee975a87",
            "created_at": "2021-09-01T18:49:24Z",
            "event": "referenced",
            "id": 5241576448,
            "node_id": "REFE_lADOABDGAc46m_aWzwAAAAE4bBwA",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5241576448"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "3e775d9c95350b05443acc9d7b258856ceac34fa",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/3e775d9c95350b05443acc9d7b258856ceac34fa",
            "created_at": "2021-09-01T18:50:16Z",
            "event": "referenced",
            "id": 5241581752,
            "node_id": "REFE_lADOABDGAc46m_aWzwAAAAE4bDC4",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5241581752"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4354/events",
    "html_url": "https://github.com/cython/cython/issues/4354",
    "id": 983299734,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4354/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5ODMyOTk3MzQ=",
    "number": 4354,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] cpp_locals generates broken code for thread local temp variables",
    "updated_at": "2021-09-01T20:28:37Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4354",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
        "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
        "followers_url": "https://api.github.com/users/maxbachmann/followers",
        "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
        "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/maxbachmann",
        "id": 44199644,
        "login": "maxbachmann",
        "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
        "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
        "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
        "repos_url": "https://api.github.com/users/maxbachmann/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/maxbachmann"
    }
}