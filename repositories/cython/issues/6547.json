{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\n```python\r\ndef ff():\r\n\ti = 0\r\n\treturn [f for i in range(5) if (f := i)]\r\n\r\nprint(ff())\r\n```\r\n\r\nThis code gives `[]` in Cython, but `[1, 2, 3, 4]` in Python.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n_No response_\r\n\r\n### Expected behaviour\r\n\r\n_No response_\r\n\r\n### OS\r\n\r\n_No response_\r\n\r\n### Python version\r\n\r\n_No response_\r\n\r\n### Cython version\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Yeah can reproduce that.\r\n\r\nThe problem looks to be\r\n\r\n```\r\n__pyx_v_i = 0;\r\n\r\n// ...\r\n\r\nfor (__pyx_t_2 = 0; __pyx_t_2 < 5; __pyx_t_2+=1) {\r\n      __pyx_7genexpr__pyx_v_i = __pyx_t_2;\r\n      __pyx_t_3 = __pyx_v_i;\r\n```\r\n\r\nso it's using two different variables for `i`.",
            "created_at": "2024-12-08T10:48:51Z",
            "html_url": "https://github.com/cython/cython/issues/6547#issuecomment-2525586624",
            "id": 2525586624,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6547",
            "node_id": "IC_kwDOABDGAc6WiWTA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2525586624/reactions"
            },
            "updated_at": "2024-12-08T10:48:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2525586624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "On the other hand some user might want to do things like\r\n\r\n```cython\r\ncdef object f():\r\n    cdef int i\r\n    return [g(i) for i in range(5)]\r\n```\r\n\r\nthe underlying problem is without the `cdef int i`, then the `i` will be unnecessarily converted to Python long and back. Even though the `cdef int i` is for a different scope, and there's obviously no overflow.\r\n\r\nThus the next question is\r\n\r\n```cython\r\ndef gg():\r\n\treturn [i*2 for i in range(2**31-5, 2**31-2)]\r\n\r\ndef ff():\r\n\tcdef int i\r\n\treturn [i*2 for i in range(2**31-5, 2**31-2)]\r\n\r\ncdef int j\r\ndef hh():\r\n\treturn [j*2 for j in range(2**31-5, 2**31-2)]\r\n\r\nprint(ff())\r\nprint(gg())\r\nprint(hh())\r\n```\r\n\r\nis it appropriate then for `ff` and `hh` to give integer overflow, since arguably the `cdef` is for an upper scope?\r\n\r\nThis code\r\n```cython\r\ncdef int k\r\ndef kk():\r\n\tk = 2**31-5\r\n\tk *= 2\r\n\treturn k\r\n\r\nprint(kk())\r\n```\r\n\r\ndoesn't overflow, but then you can argue that there's no way to do `cdef` inside a list comprehension scope. Perhaps we can keep the current behavior (allow `ff` and `hh` above to overflow, just modify the scope of walrus operator)",
            "created_at": "2024-12-08T10:54:21Z",
            "html_url": "https://github.com/cython/cython/issues/6547#issuecomment-2525588490",
            "id": 2525588490,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6547",
            "node_id": "IC_kwDOABDGAc6WiWwK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2525588490/reactions"
            },
            "updated_at": "2024-12-08T10:55:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2525588490",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25191436?v=4",
                "events_url": "https://api.github.com/users/user202729/events{/privacy}",
                "followers_url": "https://api.github.com/users/user202729/followers",
                "following_url": "https://api.github.com/users/user202729/following{/other_user}",
                "gists_url": "https://api.github.com/users/user202729/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/user202729",
                "id": 25191436,
                "login": "user202729",
                "node_id": "MDQ6VXNlcjI1MTkxNDM2",
                "organizations_url": "https://api.github.com/users/user202729/orgs",
                "received_events_url": "https://api.github.com/users/user202729/received_events",
                "repos_url": "https://api.github.com/users/user202729/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/user202729/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/user202729/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/user202729",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the underlying problem is without the cdef int i, then the i will be unnecessarily converted to Python long and back. \r\n\r\nNo it isn't. It's already inferred as `int` (at least for simple cases where Cython can easily reason about the size of the arguments to `range` - don't think that applies to your `**` examples though).\r\n\r\nI think the rules for inferring the type of loop variables are already fairly well established for Cython so we probably don't want to be messing with them here. We just want the walrus operator to follow the rules consistently",
            "created_at": "2024-12-08T17:07:06Z",
            "html_url": "https://github.com/cython/cython/issues/6547#issuecomment-2526247059",
            "id": 2526247059,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6547",
            "node_id": "IC_kwDOABDGAc6Wk3iT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2526247059/reactions"
            },
            "updated_at": "2024-12-08T17:07:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2526247059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Alright, it indeed doesn't. Probably I made a mistake somewhere. Thanks.",
            "created_at": "2024-12-08T18:05:22Z",
            "html_url": "https://github.com/cython/cython/issues/6547#issuecomment-2526295185",
            "id": 2526295185,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6547",
            "node_id": "IC_kwDOABDGAc6WlDSR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2526295185/reactions"
            },
            "updated_at": "2024-12-08T18:05:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2526295185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25191436?v=4",
                "events_url": "https://api.github.com/users/user202729/events{/privacy}",
                "followers_url": "https://api.github.com/users/user202729/followers",
                "following_url": "https://api.github.com/users/user202729/following{/other_user}",
                "gists_url": "https://api.github.com/users/user202729/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/user202729",
                "id": 25191436,
                "login": "user202729",
                "node_id": "MDQ6VXNlcjI1MTkxNDM2",
                "organizations_url": "https://api.github.com/users/user202729/orgs",
                "received_events_url": "https://api.github.com/users/user202729/received_events",
                "repos_url": "https://api.github.com/users/user202729/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/user202729/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/user202729/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/user202729",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6547/comments",
    "created_at": "2024-12-08T10:39:22Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": "160c6555e501a2d78e8043d2dcaa85e666e137dc",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/160c6555e501a2d78e8043d2dcaa85e666e137dc",
            "created_at": "2024-12-08T19:03:45Z",
            "event": "referenced",
            "id": 15574201763,
            "node_id": "REFE_lADOABDGAc6ibdkuzwAAAAOgS3Wj",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15574201763"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6547/events",
    "html_url": "https://github.com/cython/cython/issues/6547",
    "id": 2725108014,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6547/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6ibdku",
    "number": 6547,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6547/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6547/timeline",
    "title": "[BUG] Incorrect scoping for walrus operator in list comprehension when there's local variable with same name",
    "updated_at": "2024-12-08T18:05:23Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6547",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/25191436?v=4",
        "events_url": "https://api.github.com/users/user202729/events{/privacy}",
        "followers_url": "https://api.github.com/users/user202729/followers",
        "following_url": "https://api.github.com/users/user202729/following{/other_user}",
        "gists_url": "https://api.github.com/users/user202729/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/user202729",
        "id": 25191436,
        "login": "user202729",
        "node_id": "MDQ6VXNlcjI1MTkxNDM2",
        "organizations_url": "https://api.github.com/users/user202729/orgs",
        "received_events_url": "https://api.github.com/users/user202729/received_events",
        "repos_url": "https://api.github.com/users/user202729/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/user202729/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/user202729/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/user202729",
        "user_view_type": "public"
    }
}