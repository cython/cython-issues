{
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Currently, efficient iteration over a memory views axis requires indexing. Iterating with a for-in-loop should result in the same code.\r\n\r\nConvert the loop in `IterationTransform._optimise_for_loop()` in `Optimize.py`, similar to the `range` optimisation.\r\n\r\nAdditional idea: for multi-dimensional views, the iteration could yield borrowed slices, with their lifetime bound to the current loop iteration. That would avoid the refcounting overhead for them, which can hurt for very small slices (as found in #2987). Iteration seems to provide a natural frame for this.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Just to make sure I get it right:\r\n\r\nWe're trying to convert\r\n\r\n```py\r\nfor e in the_view:\r\n\t# do whatever on e\r\n```\r\n\r\ninto\r\n\r\n```c\r\nfor (i = 0; i < length_of_the_view; i++) {\r\n\t// do whatever on some_view[i]\r\n}\r\n```\r\n\r\nAnd in the case that `e` is actually another view, we convert it into a \"borrowed slice\" (I don't know what that means yet but I'll look into it)\r\n\r\nIs this correct?",
            "created_at": "2020-05-17T14:59:12Z",
            "html_url": "https://github.com/cython/cython/issues/2227#issuecomment-629811773",
            "id": 629811773,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2227",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTgxMTc3Mw==",
            "updated_at": "2020-05-17T14:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629811773",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1190450?v=4",
                "events_url": "https://api.github.com/users/NicolasHug/events{/privacy}",
                "followers_url": "https://api.github.com/users/NicolasHug/followers",
                "following_url": "https://api.github.com/users/NicolasHug/following{/other_user}",
                "gists_url": "https://api.github.com/users/NicolasHug/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/NicolasHug",
                "id": 1190450,
                "login": "NicolasHug",
                "node_id": "MDQ6VXNlcjExOTA0NTA=",
                "organizations_url": "https://api.github.com/users/NicolasHug/orgs",
                "received_events_url": "https://api.github.com/users/NicolasHug/received_events",
                "repos_url": "https://api.github.com/users/NicolasHug/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/NicolasHug/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/NicolasHug/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/NicolasHug"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes. If `the_view` is a memoryview (which is the case that I'd like to support here), then you wouldn't have to type `e`, it would just be a view on the same buffer with one dimension less (or a simple item value for 1D views).\r\n\r\nWith \"borrowed slice\" I mean a slice that is not refcounted (a \"borrowed\" reference) and thus relies on the main view to keep the buffer alive. But that seems safe in this specific case, since we're holding tight to it while we're iterating over it.\r\n\r\nAn unclear issue is: What happens on re-assignments to the loop variable? Can/should we allow that at all? Should we switch back to ref-counting if we detect that? (That seems the best way out for this.)\r\n\r\nI think the semantics would be like this:\r\n```cython\r\nfor x in a_view:\r\n    …\r\nelse:\r\n    …\r\n```\r\nwould translate into (rough pseudo-code)\r\n```cython\r\ntry:\r\n    x = borrowed(None)\r\n    for i in range(len(a_view)):\r\n         x = borrowed(a_view[i])\r\n        …\r\n    else:\r\n        …\r\nfinally:\r\n    del x  # or incref(x), maybe?\r\n```\r\nAnd then, there could be a way to get `prange()` loops by saying\r\n```cython\r\nfor x in cython.parallel.piter(a_view):\r\n    …\r\n```\r\nas noted in #2628.",
            "created_at": "2020-05-17T15:24:23Z",
            "html_url": "https://github.com/cython/cython/issues/2227#issuecomment-629815329",
            "id": 629815329,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2227",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTgxNTMyOQ==",
            "updated_at": "2020-05-17T16:23:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629815329",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've had an go at the easy bit of this (optimized iteration over memoryviews), not the \"borrowed reference\" side of it, which I think it quite a bit more involved. To work well it requires some changes to type inference of memoryviews, which could probably do with some more thought.\r\n\r\nI think the borrowed reference side is potentially a mess - you have to worry about reassignment (as you observe) but it's also inconsistent with the rest of Python if you can't access the loop target after the loop has finished.",
            "created_at": "2020-05-17T19:32:11Z",
            "html_url": "https://github.com/cython/cython/issues/2227#issuecomment-629848545",
            "id": 629848545,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2227",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTg0ODU0NQ==",
            "updated_at": "2020-05-17T19:32:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/629848545",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2227/comments",
    "created_at": "2018-05-01T15:37:04Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-05-01T15:37:04Z",
            "event": "labeled",
            "id": 1603577177,
            "label": {
                "color": "0e8a16",
                "name": "help wanted"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE2MDM1NzcxNzc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1603577177"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-05-01T15:37:04Z",
            "event": "labeled",
            "id": 1603577179,
            "label": {
                "color": "444444",
                "name": "Optimization"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE2MDM1NzcxNzk=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1603577179"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-05-01T15:37:04Z",
            "event": "labeled",
            "id": 1603577181,
            "label": {
                "color": "444444",
                "name": "Cython Language Feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE2MDM1NzcxODE=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1603577181"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2227/events",
    "html_url": "https://github.com/cython/cython/issues/2227",
    "id": 319233854,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425559948,
            "name": "Cython Language Feature",
            "node_id": "MDU6TGFiZWw0MjU1NTk5NDg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Cython%20Language%20Feature"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556272,
            "name": "Optimization",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNzI=",
            "url": "https://api.github.com/repos/cython/cython/labels/Optimization"
        },
        {
            "color": "0e8a16",
            "default": true,
            "description": null,
            "id": 414800879,
            "name": "help wanted",
            "node_id": "MDU6TGFiZWw0MTQ4MDA4Nzk=",
            "url": "https://api.github.com/repos/cython/cython/labels/help%20wanted"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2227/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzMTkyMzM4NTQ=",
    "number": 2227,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Support for-loop iteration over 1-dim memory views",
    "updated_at": "2020-05-17T19:32:21Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2227",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}