{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI would like to store a tri-bool in my class. That is, a type of `bint` that has 3 states: True, False or None.\r\n\r\n**Describe the solution you'd like**\r\nCython could introduce a new `tribint` type (name open for suggestions), that would similarly to `bint` be stored as a C integer but be conveniently converted to True, False or now None.\r\n\r\nIn Pure Python Mode this could be typed as `Optional[cython.bint]` or the Shadow.py shortcut `cython.tribint`.\r\n\r\nLooking at the following example code:\r\n```cython\r\ncdef class Test:\r\n    cdef readonly bint value\r\n\r\n    def __init__(self, bint val):\r\n        self.value = val\r\n```\r\nThe generated C code has the following struct, meaning that Cython could easily fit this in without enlarging the amount of bits used.\r\n```c\r\nstruct __pyx_obj_54_cython_magic_873facacc7630598f8ce75554d0cdb8a3ab7d7b9_Test {\r\n  PyObject_HEAD\r\n  int value;\r\n};\r\n```\r\nI do not know what arrangement would be best, None meaning missing matches nicely with `-1`. But the issue then becomes that `-1` is a common exception value, so `2` may be better fit.\r\n\r\n**Describe alternatives you've considered**\r\nI could keep using `bint` where None becomes False, this is acceptable but I would like to keep the information of whether it was determined to be False or simply missing.\r\n\r\n**Additional context**\r\nThis would be a breaking change, as some may be dependent on None becoming False, therefor I am proposing a new type.",
    "closed_at": "2021-08-10T17:12:52Z",
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "This feels like something that could be solved using an enum (either `cdef` or `cpdef`).\r\n\r\nI think the feature falls a little outside of Cython's core focus: it isn't really a faster version of an existing Python feature, and it isn't really a way to wrap an existing C/C++ feature.\r\n\r\nIt might be nice if it were possible to define custom to/from Python conversion functions though, so you could get the conversion to/from `None` to be automatic.",
            "created_at": "2021-08-10T17:12:52Z",
            "html_url": "https://github.com/cython/cython/issues/4334#issuecomment-896163791",
            "id": 896163791,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4334",
            "node_id": "IC_kwDOABDGAc41al_P",
            "performed_via_github_app": null,
            "updated_at": "2021-08-10T17:12:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/896163791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4334/comments",
    "created_at": "2021-08-10T13:12:47Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-08-10T17:12:53Z",
            "event": "closed",
            "id": 5136645721,
            "node_id": "MDExOkNsb3NlZEV2ZW50NTEzNjY0NTcyMQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5136645721"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4334/events",
    "html_url": "https://github.com/cython/cython/issues/4334",
    "id": 964969368,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4334/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5NjQ5NjkzNjg=",
    "number": 4334,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "[ENH] Support for tri-bool types",
    "updated_at": "2021-08-10T17:12:53Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4334",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
        "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
        "followers_url": "https://api.github.com/users/Bluenix2/followers",
        "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
        "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Bluenix2",
        "id": 38372706,
        "login": "Bluenix2",
        "node_id": "MDQ6VXNlcjM4MzcyNzA2",
        "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
        "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
        "repos_url": "https://api.github.com/users/Bluenix2/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Bluenix2"
    }
}