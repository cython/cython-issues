{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\n[Since PEP 703 has been accepted](https://discuss.python.org/t/a-steering-council-notice-about-pep-703-making-the-global-interpreter-lock-optional-in-cpython/30474), has Cython discussed plans for supporting this mode, either when it drops (presumably in 3.13) or in a later release when it becomes the default (probably much later, I haven't fully kept up with discussions but I think that's expected to be a multi-release change)? Based on the various discussions on the threads about the GIL removal, it seems like many extension modules using Python's public C API should be able to transition to using nogil without too much pain as long as they aren't implicitly relying on the locking in their own internal logic independent of Python's APIs. However, given Cython's extensive usage of Python internals, I suspect that many Python functions that Cython relies on may not be made thread-safe in a public release of nogil, so Cython's internals will require a fair bit of work to test here. Is that a fair assumption?\r\n\r\nI have no immediate need for this feature, but I have heard the question come up in a few discussions now so I thought it would be helpful to start a public thread. Presumably Cython wouldn't want to touch this until after the 3.1 release removes all the legacy 2.7-3.6 code paths anyway. Apologies if this question has already been asked elsewhere, I haven't been able to find any discussion of it on the issues or in the cython-users mailing list. ",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Support is mostly there in the master branch (3.1) and we're discussing some more fixes in pull requests currently.\n",
            "created_at": "2024-04-24T16:07:35Z",
            "html_url": "https://github.com/cython/cython/issues/6162#issuecomment-2075310120",
            "id": 2075310120,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6162",
            "node_id": "IC_kwDOABDGAc57srgo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2075310120/reactions"
            },
            "updated_at": "2024-04-24T16:07:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2075310120",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Q: As a Cython user, is there anything I should do/change to support the nogil Python? Are they any change needed in the Cython code or build system (ex: compiler/linker flags, compile-time macros, ...)? It would be great to have a single page in the docs for reference.",
            "created_at": "2024-04-25T02:57:58Z",
            "html_url": "https://github.com/cython/cython/issues/6162#issuecomment-2076262374",
            "id": 2076262374,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6162",
            "node_id": "IC_kwDOABDGAc57wT_m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2076262374/reactions"
            },
            "updated_at": "2024-04-25T02:57:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2076262374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Q: As a Cython user, is there anything I should do/change to support the nogil Python? Are they any change needed in the Cython code or build system (ex: compiler/linker flags, compile-time macros, ...)? It would be great to have a single page in the docs for reference.\r\n\r\nI don't think you need to do anything special (except for using the Cython master branch rather than a release). Although I haven't tried it myself yet - we've just accepted a few patches from people interested in it.",
            "created_at": "2024-04-25T06:56:53Z",
            "html_url": "https://github.com/cython/cython/issues/6162#issuecomment-2076499108",
            "id": 2076499108,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6162",
            "node_id": "IC_kwDOABDGAc57xNyk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2076499108/reactions"
            },
            "updated_at": "2024-04-25T06:56:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2076499108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">Q: As a Cython user, is there anything I should do/change to support the nogil Python?\n\nI don't think there are any guidelines on this. We're still in the very early stages. There will probably be rules of thumb once a number of projects have attempted the adaptation and were able to collect some experience with it. But all code is different.\n\nNote that extensions will have to opt-in to running without the GIL held. However, this seems to only apply to the module init code, not to the exposed functions/methods.\n\nhttps://peps.python.org/pep-0703/#py-mod-gil-slot\n\nGenerally speaking, CPython is removing a lock here that previously guarded all sorts of code, state and data structures against race conditions and concurrent modifications. That suggests that a lot of code (probably most code) will now exhibit these issues when run concurrently.\n\nI've personally relied on the GIL in several libraries that I've written. Making them run without the GIL will probably require some kind of dedicated locking now to assure correctness. Even worse, this might now have to be done at a per-interpreter level rather than globally, which complicates things further.\n\nIMHO, CPython itself should provide some of the tooling that we need now, especially portable, per-interpreter locks, as well as platform independent inline intrinsics for atomic CPU instructions.\n",
            "created_at": "2024-04-25T07:31:15Z",
            "html_url": "https://github.com/cython/cython/issues/6162#issuecomment-2076551414",
            "id": 2076551414,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6162",
            "node_id": "IC_kwDOABDGAc57xaj2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2076551414/reactions"
            },
            "updated_at": "2024-04-25T07:31:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2076551414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Note that extensions will have to opt-in to running without the GIL held. However, this seems to only apply to the module init code, not to the exposed functions/methods. https://peps.python.org/pep-0703/#py-mod-gil-slot\r\n\r\nRight now I don't that that's implemented (https://github.com/python/cpython/pull/116882) so we can't do anything but it will be soon.\r\n\r\nMy understanding is that if you import a single extension module that says that it needs the GIL then the interpreter will re-enable the GIL at runtime until it shuts down. So I don't think it's just for the module init function.\r\n\r\n>I've personally relied on the GIL in several libraries that I've written.\r\n\r\nWe should probably give users the choice about what to report with that slot. So that people who know they rely on the GIL can report that correctly (even if we believe that Cython generates suitable code).",
            "created_at": "2024-04-25T16:24:14Z",
            "html_url": "https://github.com/cython/cython/issues/6162#issuecomment-2077688058",
            "id": 2077688058,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6162",
            "node_id": "IC_kwDOABDGAc571wD6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2077688058/reactions"
            },
            "updated_at": "2024-04-25T16:24:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2077688058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6162/comments",
    "created_at": "2024-04-24T15:32:32Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-04-25T17:55:38Z",
            "event": "labeled",
            "id": 12613078119,
            "label": {
                "color": "A37CC3",
                "name": "nogil CPython"
            },
            "node_id": "LE_lADOABDGAc6GzQCbzwAAAALvzExn",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12613078119"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6162/events",
    "html_url": "https://github.com/cython/cython/issues/6162",
    "id": 2261581979,
    "labels": [
        {
            "color": "A37CC3",
            "default": false,
            "description": "",
            "id": 6871764375,
            "name": "nogil CPython",
            "node_id": "LA_kwDOABDGAc8AAAABmZbNlw",
            "url": "https://api.github.com/repos/cython/cython/labels/nogil%20CPython"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6162/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6GzQCb",
    "number": 6162,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/cython/cython/issues/6162/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6162/timeline",
    "title": "[ENH] Support for the nogil branch of Python",
    "updated_at": "2024-04-25T17:55:38Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6162",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vyasr",
        "id": 1538165,
        "login": "vyasr",
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vyasr"
    }
}