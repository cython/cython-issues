{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nWhen cythonizing a simple Python Function with a Type Hinted Optional Argument (see minimal example) the Cythonized Module gives a TypeError upon importing.  \r\n\r\n`TypeError: Expected float, got int`\r\n\r\nThe Optional Typehint breaks the implicit casting between int and float.\r\n\r\n\n\n### Code to reproduce the behaviour:\n\n```cython\r\nfrom typing import Optional\r\n\r\n# results in an error\r\ndef func1(arg: Optional[float]=0):\r\n    pass\r\n\r\n# works\r\ndef func2(arg: Optional[float]=0.0):\r\n    pass\r\n\r\n# works\r\ndef func3(arg: float=0):\r\n    pass\r\n\r\n```\r\n\n\n### Expected behaviour\n\nIn my opinion this simple type-cast should be possible as float/int are simply mixed up and these RuntimeErrors are hard to test prior deployment\n\n### OS\n\nLinux\n\n### Python version\n\n3.9.18\n\n### Cython version\n\n3.0.3\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Not quite sure what the best thing to do here.\r\n\r\nWith `arg: float` the argument is typed as a C float (and so Cython knows the automatic cast from C in to C float).\r\n\r\nWith `arg: Optional[float]` the argument is typed as a *Python* `float` (or `None`) and so Cython does an exact type-check for the Python object. Right now we don't do much with the knowledge that it's a Python `float`, but in principle any optimizations would be based on that exact type check.\r\n\r\nI don't think it's desirable for a default argument and the explicitly passed argument to behave differently.\r\n\r\nWe could potentially add a coercion in, but I suspect there's a lot of unintended consequences there (for example do we want to silently add a bunch of `tuple` to `list` coercions, because I suspect you'd get those as a side-effect?)\r\n\r\nIf you ran it through a static type checker like `mypy` (as pure Python code) it'd almost certainly tell you the type annotation is wrong, and I'm inclined to agree. I think this is just a case where we're trying to match Cython's existing, long-established rules against the newer rules for annotation typing in Python in general and they don't quite match up.",
            "created_at": "2023-10-06T18:08:31Z",
            "html_url": "https://github.com/cython/cython/issues/5750#issuecomment-1751206560",
            "id": 1751206560,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5750",
            "node_id": "IC_kwDOABDGAc5oYUqg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1751206560/reactions"
            },
            "updated_at": "2023-10-06T18:08:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1751206560",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think it's desirable for a default argument and the explicitly passed argument to behave differently.\r\n\r\nI'm inclined to agree. I understand that it's surprising to get a runtime error here, also because Python does not give you runtime errors for incorrect type annotations but only build-time type checkers do. It is potentially something that Cython could detect and warn about at compile time, at least in some cases, but probably not all.",
            "created_at": "2023-10-06T19:32:43Z",
            "html_url": "https://github.com/cython/cython/issues/5750#issuecomment-1751312491",
            "id": 1751312491,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5750",
            "node_id": "IC_kwDOABDGAc5oYuhr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1751312491/reactions"
            },
            "updated_at": "2023-10-06T19:32:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1751312491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> With arg: float the argument is typed as a C float \r\n\r\nThis is kind of confusing. It was even surprising for me. I thought that `float` is mapping to `PyObject *`. How types are mapped in pure python mode? In Cython language it is mapping directly to C types:\r\n| Cython      | Result C type |\r\n| ----------- | ----------- |\r\n| `int`      | `int`       |\r\n| `float`   | `float`        |\r\n\r\nBut in pure python mode it is a mess:\r\n\r\n| Pure Python      | Result C type |\r\n| ----------- | ----------- |\r\n| `int`      | `PyObject *`       |\r\n| `cython.int`   | `int`        |\r\n| `float`   | `double`        |\r\n| `cython.float`   | `float`        |\r\n\r\nHence, I think we should come up with clear rule how pure python types are mapped to C types in generated C file. E.g. All python types (int, double, complex, bool, ...) are mapped to `PyObject *` and all `cython.XYZ` are mapped directly to C types. If the type is not recognized by python it should not be allowed only under `cython.TYPE` - e.g. `bar: double` is not allowed but `bar: cython.double` yes",
            "created_at": "2023-10-07T17:49:02Z",
            "html_url": "https://github.com/cython/cython/issues/5750#issuecomment-1751780758",
            "id": 1751780758,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5750",
            "node_id": "IC_kwDOABDGAc5oag2W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1751780758/reactions"
            },
            "updated_at": "2023-10-07T17:56:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1751780758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The argument for `int` is that a Python `int` can be arbitrarily big, where as a C `int` can't so they aren't equivalent. In contrast a Python `float` is internally represented by a `double` so we can use that without loss.\r\n\r\nThe underlying principle is \"type hints probably aren't intended for Cython so we should do what's safe\".\r\n\r\nAt one point I proposed an alternative mode where we assume the type hints are for Cython and take them literally (https://github.com/cython/cython/pull/4883) since I suspect that's what most people actually mean. But extra modes add complication so aren't always good",
            "created_at": "2023-10-07T17:56:34Z",
            "html_url": "https://github.com/cython/cython/issues/5750#issuecomment-1751782203",
            "id": 1751782203,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5750",
            "node_id": "IC_kwDOABDGAc5oahM7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1751782203/reactions"
            },
            "updated_at": "2023-10-07T17:56:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1751782203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I did add a table to the documentation to at least write down all the rules: https://cython.readthedocs.io/en/latest/src/tutorial/pure.html#reference-table",
            "created_at": "2023-10-07T17:57:28Z",
            "html_url": "https://github.com/cython/cython/issues/5750#issuecomment-1751782365",
            "id": 1751782365,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5750",
            "node_id": "IC_kwDOABDGAc5oahPd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1751782365/reactions"
            },
            "updated_at": "2023-10-07T17:57:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1751782365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I did add a table to the documentation to at least write down all the rules: https://cython.readthedocs.io/en/latest/src/tutorial/pure.html#reference-table\r\n\r\nI missed that table. Thanks!",
            "created_at": "2023-10-07T17:58:56Z",
            "html_url": "https://github.com/cython/cython/issues/5750#issuecomment-1751782630",
            "id": 1751782630,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5750",
            "node_id": "IC_kwDOABDGAc5oahTm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1751782630/reactions"
            },
            "updated_at": "2023-10-07T17:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1751782630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5750/comments",
    "created_at": "2023-10-06T10:07:08Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5750/events",
    "html_url": "https://github.com/cython/cython/issues/5750",
    "id": 1929836002,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5750/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5zBvXi",
    "number": 5750,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5750/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5750/timeline",
    "title": "[BUG] Optional Typehint breaks implicit int to float conversion",
    "updated_at": "2023-10-07T17:58:56Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5750",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/17784676?v=4",
        "events_url": "https://api.github.com/users/mspi92/events{/privacy}",
        "followers_url": "https://api.github.com/users/mspi92/followers",
        "following_url": "https://api.github.com/users/mspi92/following{/other_user}",
        "gists_url": "https://api.github.com/users/mspi92/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mspi92",
        "id": 17784676,
        "login": "mspi92",
        "node_id": "MDQ6VXNlcjE3Nzg0Njc2",
        "organizations_url": "https://api.github.com/users/mspi92/orgs",
        "received_events_url": "https://api.github.com/users/mspi92/received_events",
        "repos_url": "https://api.github.com/users/mspi92/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mspi92/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mspi92/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mspi92"
    }
}