{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nImplicitly or explicitly calling a string object as a <bytes> object to use bytes.replace($1, $2) no longer works since version 3.0.9.\n\n### Code to reproduce the behaviour:\n\n```cython\r\nfrom libcpp.string cimport string\r\n\r\ncdef:\r\n        string tmp = b\"abcdefg\"\r\n\r\ntmp = tmp.replace(b\"f\", b\"H\")\r\n```\r\n\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nDebian 12\n\n### Python version\n\n3.11.2\n\n### Cython version\n\n3.0.9\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm slightly amazed that this ever worked. It should be possible to do it manually via casting:\r\n\r\n```\r\ntmp = (<bytes>tmp).replace(b\"f\", b\"H\")\r\n```\r\n\r\nIt isn't obvious to me whether this is something we should fix or not. It seems pretty unintuitive to be implicitly calling `bytes` methods like this, but the worry is that lots of people are relying on it.",
            "created_at": "2024-04-02T06:55:25Z",
            "html_url": "https://github.com/cython/cython/issues/6123#issuecomment-2031210441",
            "id": 2031210441,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6123",
            "node_id": "IC_kwDOABDGAc55Ec_J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2031210441/reactions"
            },
            "updated_at": "2024-04-02T06:55:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2031210441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This kind of breakage shouldn't happen in a point release, so it's an unintended regression. However, now that the regression is there, I wonder if we should really go back and change it again. I doubt that \"lots of people\" are relying on this specific behaviour. And it's easy to work around for users by making their code more explicit.\r\n\r\nIt worked in the sense that it creates one or two Python bytes objects, one before and one after the replacement, in which case the code throws away the first. We also allow `cpp_string.decode()`, so it's not that far fetched.\r\n\r\nHowever, the difference to `cpp_string.decode()` is that it only creates one decoded string object, whereas the old `cpp_string.replace()` could create two bytes objects, and that's not visible from the code. So making the conversion explicit really is an improvement to user code.\r\n\r\nI'd keep the new behaviour, unless there is broader opposition.\r\n\r\nBut it's one more reason to be conservative with updates in point releases.",
            "created_at": "2024-04-02T08:24:01Z",
            "html_url": "https://github.com/cython/cython/issues/6123#issuecomment-2031375060",
            "id": 2031375060,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6123",
            "node_id": "IC_kwDOABDGAc55FFLU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2031375060/reactions"
            },
            "updated_at": "2024-04-02T08:24:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2031375060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I'm slightly amazed that this ever worked. It should be possible to do it manually via casting:\r\n> \r\n> ```\r\n> tmp = (<bytes>tmp).replace(b\"f\", b\"H\")\r\n> ```\r\n> \r\n> It isn't obvious to me whether this is something we should fix or not. It seems pretty unintuitive to be implicitly calling `bytes` methods like this, but the worry is that lots of people are relying on it.\r\n\r\nThanks, I had tried <bytes>(tmp) but that didn't work, (<bytes>tmp) on the other hand worked.\r\n\r\nTo me it's incredibly useful to be able to code like this so I hope you don't remove the option altogether, my project that's years in the making would probably not survive such an update (making every call explicit it might survive), but removing the ability to use Python calls like this altogether would be detrimental, after all Python has a lot of good libraries and functions for manipulating strings and such so you don't have to in C++, and these libraries are so optimized that it's often just as cheap if not cheaper to use the Python library, so why force users to do it in C++, you know what I mean?\r\n\r\nI understand that's not what you're doing though, just expressing my concern about the hypothetical that this functionality would be removed in the future, I hope it doesn't.\r\n\r\nThanks for being reasonable as always and coming up with solutions/workarounds whenever possible.",
            "created_at": "2024-04-02T15:56:54Z",
            "html_url": "https://github.com/cython/cython/issues/6123#issuecomment-2032443257",
            "id": 2032443257,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6123",
            "node_id": "IC_kwDOABDGAc55JJ95",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2032443257/reactions"
            },
            "updated_at": "2024-04-02T15:56:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2032443257",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Don't worry. Being able to mix C, C++ and Python APIs freely is at the core of Cython's feature set.\r\n\r\nThis is just a rather special case where C++ and Python methods with the same name exist and disagree. In that case, it seems reasonable that the C++ method of a C++ object is looked up first, before trying a conversion to Python and looking up the method there. So, if the old behaviour hadn't existed before, the new behaviour would be the expected, unsurprising one.",
            "created_at": "2024-04-02T16:17:16Z",
            "html_url": "https://github.com/cython/cython/issues/6123#issuecomment-2032493715",
            "id": 2032493715,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6123",
            "node_id": "IC_kwDOABDGAc55JWST",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2032493715/reactions"
            },
            "updated_at": "2024-04-02T16:17:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2032493715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wonder if it's worth putting a warning on the implicit conversion for an attribute lookup since it's an area where it's easy to get unexpected behaviour (and also missed attribute lookup becomes a runtime error rather than a compile time error).\r\n\r\nI definitely don't want to stop anyone doing it deliberately but I wonder if it's unintended rather than intended in most cases.",
            "created_at": "2024-04-02T16:50:38Z",
            "html_url": "https://github.com/cython/cython/issues/6123#issuecomment-2032565957",
            "id": 2032565957,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6123",
            "node_id": "IC_kwDOABDGAc55Jn7F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2032565957/reactions"
            },
            "updated_at": "2024-04-02T16:50:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2032565957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6123/comments",
    "created_at": "2024-04-01T23:45:43Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-04-02T08:23:57Z",
            "event": "labeled",
            "id": 12321183135,
            "label": {
                "color": "444444",
                "name": "R: wontfix"
            },
            "node_id": "LE_lADOABDGAc6ER84szwAAAALeZlWf",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12321183135"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6123/events",
    "html_url": "https://github.com/cython/cython/issues/6123",
    "id": 2219298348,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557400,
            "name": "R: wontfix",
            "node_id": "MDU6TGFiZWw0MjU1NTc0MDA=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6123/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6ER84s",
    "number": 6123,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6123/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6123/timeline",
    "title": "[BUG] New string::replace in Cython 3.0.9 feature overrides the bytes.replace method",
    "updated_at": "2024-04-02T16:50:39Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6123",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
        "events_url": "https://api.github.com/users/Source61/events{/privacy}",
        "followers_url": "https://api.github.com/users/Source61/followers",
        "following_url": "https://api.github.com/users/Source61/following{/other_user}",
        "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Source61",
        "id": 68166790,
        "login": "Source61",
        "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
        "organizations_url": "https://api.github.com/users/Source61/orgs",
        "received_events_url": "https://api.github.com/users/Source61/received_events",
        "repos_url": "https://api.github.com/users/Source61/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Source61"
    }
}