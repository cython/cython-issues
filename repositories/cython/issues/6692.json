{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Is your feature request related to a problem? Please describe.\n\nIn my code, I would like to do [...]\n```cython\ncdef:\n    optional[string] g_optional\n    variant[int, string] g_variant\n\ndef optional_value() -> bytes | None:\n    # If g_optional contains a value, return the value coerced to Python.\n    # Otherwise return None.\n    return g_optional\n\ndef set_optional_value(x: bytes | None):\n    # If x is not None, set g_variant to its value coerced to C++.\n    # Otherwise, reset g_variant to value-less state.\n    g_optional = x\n\ndef variant_value() -> int | bytes:\n    # Return the value held by g_variant, coerced to Python\n    return g_variant\n\ndef set_variant_value(x: int | bytes):\n    # Depending on x's type, coerce it to C++ and call the\n    # corresponding g_variant value-setting overload.\n    g_variant = x\n```\n\n\n### Describe the solution you'd like.\n\n1. Support automatic conversion from `std::optional` and `std::variant` to Python objects.\n    * `std::optional<T>` would convert to `None | Py[T]` where `Py[T]` is the result of coercing `T`  to Python\n    * `std::optional<T1, T2...>` would similarly convert to `Py[T1] | Py[T2] | ...`\n\n2. Support explicit conversion to Python objects to `std::optional` and `std::variant`.\n\n(see examples above)\n\n### Describe alternatives you've considered.\n\nCurrently, one has to write explicit unwrapping code such as:\n```cython\n    @property\n    def null_count(self):\n        \"\"\"\n        The number of nulls.\n        \"\"\"\n        null_count = self.sp_statistics.get().null_count\n        if null_count.has_value():\n            return null_count.value()\n        else:\n            return None\n```\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I might be able to work on this if that's deemed desirable.",
            "created_at": "2025-02-24T14:08:25Z",
            "html_url": "https://github.com/cython/cython/issues/6692#issuecomment-2678521860",
            "id": 2678521860,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6692",
            "node_id": "IC_kwDOABDGAc6fpwAE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2678521860/reactions"
            },
            "updated_at": "2025-02-24T14:08:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2678521860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`std::optional` would be relatively straightforward I think and seems worthwhile.\n\n`std::variant` has a number of issues:\n1. I don't think Cython currently has a way to handle a variable number of template arguments. The easiest thing here might be to declare it with a fixed sensible maximum (e.g. 10)\n2. We don't currently understand `typing.Union` - we decided that it didn't map well to fused types, but haven't found anything useful to do with it. I think that's OK in this context though in that we're just treating it as a coercion to/from `object` (which is how we currently interpret `typing.Union`).\n3. I think `std::variant` to `object` is fairly straightforward (it's essentially just `std::visit` on each of the options). I think `object` to `std::variant` is potentially harder. We probably just have to try all possible coercions in order until one doesn't fail and I'm not sure that's great.",
            "created_at": "2025-02-24T18:56:59Z",
            "html_url": "https://github.com/cython/cython/issues/6692#issuecomment-2679381987",
            "id": 2679381987,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6692",
            "node_id": "IC_kwDOABDGAc6ftB_j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2679381987/reactions"
            },
            "updated_at": "2025-02-24T18:56:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2679381987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6692/comments",
    "created_at": "2025-02-24T14:07:14Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/167685456?v=4",
                "events_url": "https://api.github.com/users/MohsenPrg/events{/privacy}",
                "followers_url": "https://api.github.com/users/MohsenPrg/followers",
                "following_url": "https://api.github.com/users/MohsenPrg/following{/other_user}",
                "gists_url": "https://api.github.com/users/MohsenPrg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MohsenPrg",
                "id": 167685456,
                "login": "MohsenPrg",
                "node_id": "U_kgDOCf6tUA",
                "organizations_url": "https://api.github.com/users/MohsenPrg/orgs",
                "received_events_url": "https://api.github.com/users/MohsenPrg/received_events",
                "repos_url": "https://api.github.com/users/MohsenPrg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MohsenPrg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MohsenPrg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MohsenPrg",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-24T22:00:17Z",
            "event": "unsubscribed",
            "id": 16438466762,
            "node_id": "UE_lADOABDGAc6rXjy0zwAAAAPTzxjK",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16438466762"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/563?v=4",
                "events_url": "https://api.github.com/users/amoeba/events{/privacy}",
                "followers_url": "https://api.github.com/users/amoeba/followers",
                "following_url": "https://api.github.com/users/amoeba/following{/other_user}",
                "gists_url": "https://api.github.com/users/amoeba/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amoeba",
                "id": 563,
                "login": "amoeba",
                "node_id": "MDQ6VXNlcjU2Mw==",
                "organizations_url": "https://api.github.com/users/amoeba/orgs",
                "received_events_url": "https://api.github.com/users/amoeba/received_events",
                "repos_url": "https://api.github.com/users/amoeba/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amoeba/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amoeba/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amoeba",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-25T06:35:23Z",
            "event": "subscribed",
            "id": 16448123737,
            "node_id": "SE_lADOABDGAc6rXjy0zwAAAAPUYnNZ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16448123737"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6692/events",
    "html_url": "https://github.com/cython/cython/issues/6692",
    "id": 2875079860,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6692/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6rXjy0",
    "number": 6692,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6692/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6692/timeline",
    "title": "[ENH][C++] Automatic coercion from `std::optional` and `std::variant`",
    "updated_at": "2025-02-24T18:57:01Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6692",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "node_id": "MDQ6VXNlcjE3MjE4MjA=",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou",
        "user_view_type": "public"
    }
}