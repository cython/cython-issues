{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm a bit puzzled by this bug. It's the one that I had previously mentioned in https://github.com/cython/cython/issues/3594#issuecomment-628617993. It looks like loading numpy breaks OpenMP for the subsequently loaded modules.\r\n\r\nHere is an example.\r\nContent of test.pyx:\r\n```cython\r\nfrom cython.parallel import prange\r\n\r\ncdef int i, sum1 = 0\r\nfor i in prange(10, nogil=True, schedule='dynamic'):\r\n    sum1 += i\r\nprint(sum1)\r\n```\r\nCompilation:\r\n```\r\n$ cython -3 test.pyx\r\n$ gcc -std=c99 -Wall -Wextra -Wno-pedantic -fopenmp -fPIC -shared -o test.so test.c $(pkg-config --cflags --libs python3)\r\n```\r\n\r\nThe expected behavior:\r\n```\r\n$ OMP_NUM_THREADS=8 python3 -qc 'import test, numpy' \r\n45\r\n```\r\nThe bug:\r\n```\r\n$ OMP_NUM_THREADS=1 python3 -qc 'import numpy, test'\r\n45\r\n$ OMP_NUM_THREADS=8 python3 -qc 'import numpy, test'\r\n360\r\n$ OMP_NUM_THREADS=100 python3 -qc 'import numpy, test'\r\n4500\r\n```\r\n\r\nI'm not sure where the bug is actually.\r\nMaybe the code generated by cython is not completely conforming to whatever assumption it's supposed to. Maybe it's about numpy. Or maybe about the MKL; which I use on this machine as a BLAS through the debian's *alternatives* symlink mechanism. Or about the GCC's implementation of OpenMP. Or maybe in the way all those interact.\r\n\r\nWherever the bug is, it affects `runtest.py`, making some tests fail even if they're unrelated to numpy.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Looks like it's more about the MKL than numpy or cython.\r\n\r\nAs far as I understand, Intel's MKL uses the LLVM implementation of OpenMP which is also (at least partially) developed by Intel. This OpenMP implementation aims at providing a binary compatibility with GOMP, the GCC's implementation of OpenMP. They do so by defining the same symbols as libgomp. Unfortunately, there's been some change in the ABI on the GOMP side, which LLVM has some lag on.\r\n\r\nAnd since the MKL library loads `libiomp5.so` with `dlopen` with the flag `RTLD_GLOBAL`, it is looked up when any library tries to resolve a dynamic symbol. Even when the symbol resolution come from another shared object that didn't ask for it.\r\n\r\nI guess the correct fix would be to have Intel fix their MKL to not load `libiomp5.so` with `RTLD_GLOBAL`. But this probably won't happen anytime soon, if ever.\r\n\r\nI'm not sure what can be done on the cython side.\r\nMaybe a caveat in the doc telling to try to avoid mixing GCC's and LLVM's OpenMP implementation in a single process?\r\nAnd maybe adding some code to check the simultaneous presence of libgomp and libiomp5 and warn about it?",
            "created_at": "2020-05-20T18:33:54Z",
            "html_url": "https://github.com/cython/cython/issues/3618#issuecomment-631649855",
            "id": 631649855,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3618",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTY0OTg1NQ==",
            "updated_at": "2020-05-20T18:33:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/631649855",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6136274?v=4",
                "events_url": "https://api.github.com/users/Celelibi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Celelibi/followers",
                "following_url": "https://api.github.com/users/Celelibi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Celelibi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Celelibi",
                "id": 6136274,
                "login": "Celelibi",
                "node_id": "MDQ6VXNlcjYxMzYyNzQ=",
                "organizations_url": "https://api.github.com/users/Celelibi/orgs",
                "received_events_url": "https://api.github.com/users/Celelibi/received_events",
                "repos_url": "https://api.github.com/users/Celelibi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Celelibi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Celelibi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Celelibi"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is there an easy way to detect it? And how long is this likely to be a problem for (since presumably LLVM will update their implementation at some point)?\r\n\r\nIn some ways it seems like an easily google-able bug report (this?) might be all that can be done.",
            "created_at": "2020-05-21T16:28:23Z",
            "html_url": "https://github.com/cython/cython/issues/3618#issuecomment-632191800",
            "id": 632191800,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3618",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjE5MTgwMA==",
            "updated_at": "2020-05-21T16:28:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/632191800",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "As I understand, those functions were in libgomp since late 2015 (gcc 5.3), but weren't used by default until may 2019, with the release of gcc 9.1. LLVM caught up with GCC with the released of LLVM 10 in march 2020.\r\n\r\nSo this bug has been lurking for 5 years and has been exposed for short of year. However, the actual delay may depend on the distro updating their packages. (LLVM 10 is still not available in Debian.) So this will get eventually fixed by upgrading LLVM... until the next ABI upgrade on the GCC side. This is not sustainable in the long run.\r\n\r\nI don't know about the googlablility of this issue since the symptom is just a wrong result. Having an error message of some kind might be a lot more googlable.\r\n\r\nI see 3 ways of detecting multiple OpenMP libraries:\r\n- Use the function `dl_iterate_phdr` and look for known library names. This function seems to be glibc-specific.\r\n- Parse `/proc/self/maps` and look for known libraries names. This is likely linux-specific.\r\n- Use `dlsym` to look for symbols that are assumed to be specific to a given OpenMP library. This is posix-specific.\r\n\r\nNote that I have no idea whether this issue might affect non-unix platforms. The third option seems to be the most portable, but I can't find a symbol specific to libgomp that might not be ported to libiomp5 in the future.",
            "created_at": "2020-05-21T20:57:47Z",
            "html_url": "https://github.com/cython/cython/issues/3618#issuecomment-632341959",
            "id": 632341959,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3618",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjM0MTk1OQ==",
            "updated_at": "2020-05-21T20:57:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/632341959",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6136274?v=4",
                "events_url": "https://api.github.com/users/Celelibi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Celelibi/followers",
                "following_url": "https://api.github.com/users/Celelibi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Celelibi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Celelibi",
                "id": 6136274,
                "login": "Celelibi",
                "node_id": "MDQ6VXNlcjYxMzYyNzQ=",
                "organizations_url": "https://api.github.com/users/Celelibi/orgs",
                "received_events_url": "https://api.github.com/users/Celelibi/received_events",
                "repos_url": "https://api.github.com/users/Celelibi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Celelibi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Celelibi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Celelibi"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3618/comments",
    "created_at": "2020-05-18T01:27:56Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6136274?v=4",
                "events_url": "https://api.github.com/users/Celelibi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Celelibi/followers",
                "following_url": "https://api.github.com/users/Celelibi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Celelibi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Celelibi",
                "id": 6136274,
                "login": "Celelibi",
                "node_id": "MDQ6VXNlcjYxMzYyNzQ=",
                "organizations_url": "https://api.github.com/users/Celelibi/orgs",
                "received_events_url": "https://api.github.com/users/Celelibi/received_events",
                "repos_url": "https://api.github.com/users/Celelibi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Celelibi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Celelibi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Celelibi"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-19T03:18:01Z",
            "event": "renamed",
            "id": 3349893097,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzM0OTg5MzA5Nw==",
            "rename": {
                "from": "prange incompatible with numpy",
                "to": "prange incompatible with numpy+MKL"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/3349893097"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6136274?v=4",
                "events_url": "https://api.github.com/users/Celelibi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Celelibi/followers",
                "following_url": "https://api.github.com/users/Celelibi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Celelibi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Celelibi",
                "id": 6136274,
                "login": "Celelibi",
                "node_id": "MDQ6VXNlcjYxMzYyNzQ=",
                "organizations_url": "https://api.github.com/users/Celelibi/orgs",
                "received_events_url": "https://api.github.com/users/Celelibi/received_events",
                "repos_url": "https://api.github.com/users/Celelibi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Celelibi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Celelibi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Celelibi"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-20T18:33:46Z",
            "event": "renamed",
            "id": 3357780459,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzM1Nzc4MDQ1OQ==",
            "rename": {
                "from": "prange incompatible with numpy+MKL",
                "to": "prange(schedule='dynamic') incompatible with numpy+MKL"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/3357780459"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3618/events",
    "html_url": "https://github.com/cython/cython/issues/3618",
    "id": 619847104,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3618/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2MTk4NDcxMDQ=",
    "number": 3618,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "prange(schedule='dynamic') incompatible with numpy+MKL",
    "updated_at": "2020-05-21T20:57:47Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3618",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/6136274?v=4",
        "events_url": "https://api.github.com/users/Celelibi/events{/privacy}",
        "followers_url": "https://api.github.com/users/Celelibi/followers",
        "following_url": "https://api.github.com/users/Celelibi/following{/other_user}",
        "gists_url": "https://api.github.com/users/Celelibi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Celelibi",
        "id": 6136274,
        "login": "Celelibi",
        "node_id": "MDQ6VXNlcjYxMzYyNzQ=",
        "organizations_url": "https://api.github.com/users/Celelibi/orgs",
        "received_events_url": "https://api.github.com/users/Celelibi/received_events",
        "repos_url": "https://api.github.com/users/Celelibi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Celelibi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Celelibi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Celelibi"
    }
}