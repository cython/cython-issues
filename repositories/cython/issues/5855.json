{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Is your feature request related to a problem? Please describe.\n\nI would like for it to be possible for one package to cimport pxd modules from another package that is made available not by installation but via [`sys.meta_path`](https://docs.python.org/3/library/sys.html#sys.meta_path). From my experimentation, Cython will currently find any pxd files that are on the static Python module search path `sys.path`, which means that it respects `.pth` files because those automatically modify `sys.path` when Python is loaded as well. However, `sys.meta_path` works differently because it involves dynamically loading modules by executing code at runtime.\n\n### Describe the solution you'd like.\n\nI don't have a complete idea here, but here's my starting point.\r\n\r\nI wasn't able to quickly determine how Cython determines what directories to search for cimports, but I would speculate that the list of search paths is prepopulated from `sys.path` before the transpiler takes over and starts parsing pyx/pxd files to compile. Assuming that is the case, adding support for `sys.meta_path` would require different logic because it must be looked up based on the actual name of the module being imported. For example, if a pxd contained\r\n```\r\nfrom foo.bar cimport baz\r\n```\r\nthen Cython would need to do something like step back out in Python and try to do `from foo.bar import baz`, then if that worked extract the resulting module's directory and point the transpiler to that location. However, I can see cases where this might not work at all, such as if the subpackage bar only contained Cython pxd files and no Python files or compiled `so`s to import, because then the `import` would fail where the `cimport` should succeed. I'm not sure how such a case ought to work, so my solution is still only half-baked. We'd definitely need something more sophisticated to work in all cases, and it may be that meta path loaders just don't make sense for all Cython use cases since they're reliant on Python's import system finding importable modules at runtime and pxd files are not importable.\n\n### Describe alternatives you've considered.\n\n_No response_\n\n### Additional context\n\n[I originally asked this question on the cython-users mailing list](https://groups.google.com/g/cython-users/c/rfXzsHvT4mw), but after some extended experimentation with pth files etc I'm confident that my diagnosis of the limitation at least is correct, so I figured opening a feature request here would be appropriate and this would be a better forum for the development discussion.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5855/comments",
    "created_at": "2023-11-21T01:37:22Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5855/events",
    "html_url": "https://github.com/cython/cython/issues/5855",
    "id": 2003290287,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5855/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc53Z8iv",
    "number": 5855,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5855/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5855/timeline",
    "title": "[ENH] Support sys.meta_path modifications for finding pxd files",
    "updated_at": "2023-11-21T01:37:22Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5855",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vyasr",
        "id": 1538165,
        "login": "vyasr",
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vyasr"
    }
}