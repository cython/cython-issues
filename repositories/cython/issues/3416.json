{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "It would be really useful to have a way to convert `std::vector<T>` to `T[::1]` in Cython. This would allow zero-copy usage of `std::vector<T>`'s data in Python or other Cython contexts.\r\n\r\nHere's some dummy code illustrating a bit more how one might like to use this.\r\n\r\n```cython\r\ncdef vector[uint8_t] v = memoryview(b\"abc\")\r\ncdef uint8_t[::1] d = v\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's an [SO question]( https://stackoverflow.com/q/45133276/3877089 ) along the same lines.",
            "created_at": "2020-03-12T01:44:07Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-597964796",
            "id": 597964796,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5Nzk2NDc5Ng==",
            "updated_at": "2020-03-12T01:44:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/597964796",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "    cdef vector[uint8_t] v = memoryview(b\"abc\")\r\n\r\nThis would  always require a copy since the vector owns its own memory and can share with another object.\r\n\r\nFor the vector->memoryview conversion there's a choice of three ways of doing, and only the way that makes a copy is safe:\r\n\r\n    # view generated from a pointer - dangerous the the memoryview outlives the vector.\r\n    # You can do this with regular pointers too, but it has to be explicit\r\n    cdef uint8_t[::1] d = <uint8_t[:v.size()]>&v[0]\r\n\r\n    # COPY into a Python wrapper class that exports the buffer interface\r\n    cdef uint8_t[::1] d = WrapperClass(v)\r\n\r\n    # move into a Python wrapper class that exports the buffer interface.\r\n    # Dangerous if anyone else tries to use the vector afterwards so could not be automatic\r\n    cdef uint8_t[::1] d = WrapperClass(move(v))\r\n\r\n------------------------\r\n\r\nProviding optional cdef wrapper classes for standard library types (like `ArrayWrapper` in the linked SO question) _might_ be a useful addition (or it could be getting a bit out of scope for a code-translator project), but I don't think there's a sensible way of doing what you want correctly and automatically. Unless someone else can thing of one.",
            "created_at": "2020-03-12T08:05:06Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598056922",
            "id": 598056922,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA1NjkyMg==",
            "updated_at": "2020-03-12T08:05:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598056922",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks @da-woods! ðŸ˜„\r\n\r\nFWIW the `memoryview(b\"abc\")` bit was merely illustrative. Not worried about that bit.\r\n\r\nYeah I guess I was hoping that `WrapperClass(move(v))` could be injected here. With some `WrapperClass` bits living in Cython. Though don't feel tied to any of the SO proposals if you think there is a better way ðŸ™‚\r\n\r\nAdmittedly the code example above doesn't show this, but was specifically thinking of the case where the `std::vector` would be returned to Python. So a `memoryview` onto the underlying data that keeps `std::vector` alive and could be pretty powerful. ðŸ˜„\r\n\r\nThere would be some code needed for this. Though I doubt it will be quite as extensive as [Cython's own `memoryview` support]( https://github.com/cython/cython/blob/43cdef76c81637f52c53139f0ff15f7e40cfd3e7/Cython/Utility/MemoryView.pyx ). ðŸ˜‰",
            "created_at": "2020-03-12T08:34:00Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598066885",
            "id": 598066885,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA2Njg4NQ==",
            "updated_at": "2020-03-12T08:34:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598066885",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Though don't feel tied to any of the SO proposals if you think there is a better way\r\n\r\nI don't think there's a better way. But someone else might....\r\n\r\nI think `WrapperClass(move(v))` could only be safely applied where `v` is known to be a temporary (like):\r\n\r\n    cdef uint_t8[::1] d = std::vector(...) # fine ...\r\n\r\nbut most other cases wouldn't be fine.\r\n\r\nI can see why this idea is quite appealing, but I think it'd be difficult to do automatically.",
            "created_at": "2020-03-12T08:44:32Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598070675",
            "id": 598070675,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA3MDY3NQ==",
            "updated_at": "2020-03-12T08:44:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598070675",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yep, that makes sense. Thanks for helping shine some light on the trickier parts. ðŸ™‚\r\n\r\nWasn't thinking of `move` explicitly, but you are right it needs to be there and that can be tricky. What if `WrapperClass` requires an `rvalue`? This would force the user to acknowledge this value is expiring and kick up some compiler errors if they don't handle it correctly?",
            "created_at": "2020-03-12T09:06:39Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598079828",
            "id": 598079828,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA3OTgyOA==",
            "updated_at": "2020-03-12T09:06:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598079828",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There's two problems with `rvalues`.\r\n\r\n1. is that Cython doesn't really understand them so the failure would happen when the C++ is compiled. I think it's better if the error can be generated at the Cython stage if possible.\r\n2. I think Cython is still targetting C++98 code. It's obviously fine (and good) to use later versions to be more efficient, but it's bad to be automatically generating code that can't work with C++98.  So a wrapper than moves if possible and copies if not would be OK, but a wrapper that requires move to exist probably wouldn't (especially if it was created automatically)",
            "created_at": "2020-03-12T09:19:58Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598085431",
            "id": 598085431,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA4NTQzMQ==",
            "updated_at": "2020-03-12T09:19:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598085431",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Do you know if there is discussion about bumping the C++ target for Cython? Wondering given how quickly C++ standards are evolving these days. Also didn't know if this was something that might fit in Cython 3.0.",
            "created_at": "2020-03-12T09:28:00Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598088907",
            "id": 598088907,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA4ODkwNw==",
            "updated_at": "2020-03-12T09:28:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598088907",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Considering I had to change one of my PRs to fit C89 I suspect not.\r\n\r\nMy view is still that it might be nice if a suitable wrapper existed (and maybe for `std::string` too if you were doing one?), but\r\na) You'd probably want it to be created on explicit request rather than doing automatic conversions for memoryviews.\r\nb) Facilities exist for the user to ask for a move https://github.com/cython/cython/pull/3358, which would make intent clear and only work on C++11\r\nc) Copying the vector would be an acceptable C++98 fallback (unless the user has asked for a move)\r\nd) I do have a [PR pending](https://github.com/cython/cython/pull/3362) that should automatically use `std::move` on temps if it's safe to do so. That should help with this to avoid copying in some of the easier cases. But obviously \"explicit is better than implicit\".\r\n\r\nI think that's all the opinions I usefully have on this",
            "created_at": "2020-03-12T09:43:29Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598095350",
            "id": 598095350,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA5NTM1MA==",
            "updated_at": "2020-03-12T09:43:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598095350",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Noticed your PR ( https://github.com/cython/cython/pull/3362 ) went in the other day. Congrats! ðŸ˜„\r\n\r\nWondering, does that help us here?",
            "created_at": "2020-04-22T18:29:28Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-617952948",
            "id": 617952948,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzk1Mjk0OA==",
            "updated_at": "2020-04-22T18:29:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/617952948",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Noticed your PR ( #3362 ) went in the other day. Congrats! smile\r\n> \r\n> Wondering, does that help us here?\r\n\r\nNo I don't think so. That PR is pretty unrelated to this.",
            "created_at": "2020-04-22T18:32:20Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-617954423",
            "id": 617954423,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzk1NDQyMw==",
            "updated_at": "2020-04-22T18:32:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/617954423",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Considering I had to change one of my PRs to fit C89\r\n\r\nThat's partly for MSVC, partly because we didn't have a reason yet to change it.\r\n\r\nI think it can be acceptable to require a certain C/C++ language level for specific features, and then generate an `#error` that explains what users need to do to make it work. As long as it doesn't impact the general compilation but only that specific feature.\r\n\r\nOTOH, if we can implement some feature without requiring a more recent C/C++ compiler (or at least keep a reasonable fallback for older ones), the better. :)",
            "created_at": "2020-04-22T19:57:31Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618004340",
            "id": 618004340,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODAwNDM0MA==",
            "updated_at": "2020-04-22T19:57:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618004340",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That makes sense. Would the C version be bumped once Python 2.7 is dropped? IIUC Python 2.7 (on Windows) requires VS 2008, which only had C89 support.",
            "created_at": "2020-04-22T20:37:05Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618026277",
            "id": 618026277,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODAyNjI3Nw==",
            "updated_at": "2020-04-22T20:37:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618026277",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Also while you are here @scoder, I'm curious to hear your thoughts on this problem more generally. For example one case that comes up is the need to return a `std::vector<T>` from a Python function. What are your thoughts on having some wrapper class in Cython that exposes the Python Buffer Protocol and hangs onto the `std::vector<T>` object. I think currently this is coerced to a Python `list`, but it would be very helpful to avoid that coercion. Here's the use case:\r\n\r\n\r\n```python\r\ndef func(...):\r\n    cdef vector[uint8_t] v = c_func(...)\r\n    return v\r\n````",
            "created_at": "2020-04-22T20:42:00Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618028674",
            "id": 618028674,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODAyODY3NA==",
            "updated_at": "2020-04-22T20:42:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618028674",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Maybe we could add a cython.listview() for that?\n",
            "created_at": "2020-04-23T07:03:22Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618219904",
            "id": 618219904,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODIxOTkwNA==",
            "updated_at": "2020-04-23T07:03:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618219904",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "So adding some new object to Cython? Yeah that makes sense.\r\n\r\nWith `std::vector` it can be templated to hold different types. Do you have thoughts on how we handle this templating in this new object?",
            "created_at": "2020-04-23T18:34:14Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618577085",
            "id": 618577085,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODU3NzA4NQ==",
            "updated_at": "2020-04-23T18:34:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618577085",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Practically it would have to be generated code like [the code for struct conversion](https://github.com/cython/cython/blob/master/Cython/Utility/CConvert.pyx) since it isn't possible to template cdef classes.",
            "created_at": "2020-04-23T20:12:23Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618639717",
            "id": 618639717,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODYzOTcxNw==",
            "updated_at": "2020-04-23T20:12:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618639717",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do you have thoughts on how we handle this templating in this new object?\r\n\r\nHmm, right, mapping the item type is an issue. A case like `vector[int]` is simple (items would be Python int objects), but a `vector[vector[int]]` would then return copied int-lists as items again, and it's not obvious how to let users map those.\r\n\r\nAlthough, why not `listview(container, mapping_function)`? Where the optional `mapping_function` could also be `cython.listview`, amongst other things, and the default would just be the normal C->Python type mapping.\r\n\r\nI don't see this as a plain object implementation. It can well be a language feature with deep integration into the type system. It can be implemented with Cython code generation, like fused types or the C++ type mappings. Maybe with a base class that can then be shared across different Cython modules. (Not sure if the latter is helpful, maybe for type checks?)\r\n\r\nAnd if the item type is one that is supported by the buffer protocol (including structs etc.), then the generated type could include support for the buffer protocol. (`vector` can apparently [provide access to its buffer](https://stackoverflow.com/a/6485519)).",
            "created_at": "2020-04-23T20:21:00Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618644898",
            "id": 618644898,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODY0NDg5OA==",
            "updated_at": "2020-04-23T20:21:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618644898",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for your thoughts @da-woods and @scoder! ðŸ˜„\r\n\r\nGood idea. Will look at [`CConvert.pyx`]( https://github.com/cython/cython/blob/master/Cython/Utility/CConvert.pyx ) to understand how similar things are handled. Does this seem like a reasonable place for this functionality to live?\r\n\r\nHaving a way to handle nested `vector`s would be good. Am seeing cases where that would help. Though even at a first pass just handling a single level of `vector`s would be good. We can always build on that if it's too tricky to handle the nesting initially.\r\n\r\nIt's definitely useful to have some way to handle and pass around data like this at the Python layer.\r\n\r\nYep supporting the buffer protocol wherever possible seems ideal. Should be helpful for people wanting to use this in conjunction with NumPy and/or other libraries that are able to handle the buffer protocol and/or `memoryview`s.",
            "created_at": "2020-04-24T00:34:52Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618739092",
            "id": 618739092,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODczOTA5Mg==",
            "updated_at": "2020-04-24T00:34:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618739092",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I changed the title of this ticket to catch the more general idea.\r\n\r\n@jakirkham yes, I think we can start \"small\" and build on it. The first step would be to write a Tempita template for an `@cython.final` cdef class that wraps a `std::list` of a specific item type, and uses Cython's auto-conversion for passing the items from and to Python. See `CppConvert.pyx` for the C++ conversions, but I think it's worth a new file `CppWrap.pyx`.\r\n\r\nIn later steps, we can add support for non-standard item conversions and the buffer protocol.\r\n\r\nI think there is a use case for packing *and* unpacking this wrapper, though. That suggests that it should be integrated with the type system, and that the wrapping should be triggered by a type cast, assignment or return type declaration, instead of a function call. Hmmm â€¦ I guess type checking the item type of such a wrapper on input safely at runtime would involve something almost as complex as the dtype item description of the buffer protocol. Maybe we can piggy-back on the buffer item type checks? Or maybe that's out of scope for the initial attemptâ€¦\r\n\r\nAnyway, integrating it with the type system means that there should be a new type for it in `PyrexTypes.py`, similar to `MemoryViewSliceType`, but without the axis, contiguous and incref/decref parts. The `from_py/to_py` methods are where the conversion is triggered by the type system. That would mean calling some helper function that instantiates the wrapper or unpacks it back into a pointer. The `dtype` is the item type, maybe we can keep that. We need separate wrapper types for different wrapped item types, but I'm not sure if we also need separate types for different C++ container types, e.g. `std::list` vs. `std::vector`. Maybe we can get away with just `std::list`? (Although I guess it doesn't really matter if we generate a couple of more such typesâ€¦)\r\n\r\nNote that the `MemoryViewSliceType` does more than we need here because it's actually a mix of a C level type and a Python level representation. For our case, I think we can even inherit from `PyExtensionType` since that's what we're building here.\r\n\r\nRegarding ownership of the C++ list/vector â€“ that's also a bit tricky. I think we need to assume that the ownership always passes on to the wrapper, and use its `__dealloc__()` method to call `del` on the C++ pointer. I guess that's where `std::move()` enters the game. I'd be ok with making this a C++11-only feature, i.e. add a new C++ utility code section that checks the C++ version and emits a hard `#error` otherwise.\r\n\r\nOk, enough panic induced, I guess. I don't think it's as difficult or as much work as it might sound from my description. Just give it a try, and we'll see where that gets us.",
            "created_at": "2020-04-24T07:05:40Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-618841915",
            "id": 618841915,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODg0MTkxNQ==",
            "updated_at": "2020-04-24T07:05:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/618841915",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3416/comments",
    "created_at": "2020-03-11T23:54:43Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-12T08:34:00Z",
            "event": "mentioned",
            "id": 3121857127,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzEyMTg1NzEyNw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3121857127"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-12T08:34:00Z",
            "event": "subscribed",
            "id": 3121857130,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMjE4NTcxMzA=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3121857130"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-22T20:42:00Z",
            "event": "mentioned",
            "id": 3262367874,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI2MjM2Nzg3NA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3262367874"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-22T20:42:00Z",
            "event": "subscribed",
            "id": 3262367878,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNjIzNjc4Nzg=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3262367878"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-23T20:38:10Z",
            "event": "labeled",
            "id": 3266804583,
            "label": {
                "color": "444444",
                "name": "Cython Language Feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNjY4MDQ1ODM=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3266804583"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-23T20:38:10Z",
            "event": "labeled",
            "id": 3266804584,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNjY4MDQ1ODQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3266804584"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-24T00:34:52Z",
            "event": "mentioned",
            "id": 3267376650,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI2NzM3NjY1MA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3267376650"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-24T00:34:52Z",
            "event": "subscribed",
            "id": 3267376652,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNjczNzY2NTI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3267376652"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-24T00:34:53Z",
            "event": "mentioned",
            "id": 3267376655,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI2NzM3NjY1NQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3267376655"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-24T00:34:53Z",
            "event": "subscribed",
            "id": 3267376656,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNjczNzY2NTY=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3267376656"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-24T06:15:02Z",
            "event": "renamed",
            "id": 3267986779,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzI2Nzk4Njc3OQ==",
            "rename": {
                "from": "Supporting the Python buffer protocol with `std::vector<T>`",
                "to": "Auto-wrapping `std::vector<T>` etc. as view"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/3267986779"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-24T06:15:47Z",
            "event": "labeled",
            "id": 3267988619,
            "label": {
                "color": "f9d0c4",
                "name": "C++"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNjc5ODg2MTk=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3267988619"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-24T07:05:40Z",
            "event": "mentioned",
            "id": 3268112559,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI2ODExMjU1OQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3268112559"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-24T07:05:40Z",
            "event": "subscribed",
            "id": 3268112563,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNjgxMTI1NjM=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3268112563"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3416/events",
    "html_url": "https://github.com/cython/cython/issues/3416",
    "id": 579609382,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425559948,
            "name": "Cython Language Feature",
            "node_id": "MDU6TGFiZWw0MjU1NTk5NDg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Cython%20Language%20Feature"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3416/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Nzk2MDkzODI=",
    "number": 3416,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Auto-wrapping `std::vector<T>` etc. as view",
    "updated_at": "2020-04-24T07:05:40Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3416",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jakirkham",
        "id": 3019665,
        "login": "jakirkham",
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jakirkham"
    }
}