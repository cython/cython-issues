{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "It would be really useful to have a way to convert `std::vector<T>` to `T[::1]` in Cython. This would allow zero-copy usage of `std::vector<T>`'s data in Python or other Cython contexts.\r\n\r\nHere's some dummy code illustrating a bit more how one might like to use this.\r\n\r\n```cython\r\ncdef vector[uint8_t] v = memoryview(b\"abc\")\r\ncdef uint8_t[::1] d = v\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's an [SO question]( https://stackoverflow.com/q/45133276/3877089 ) along the same lines.",
            "created_at": "2020-03-12T01:44:07Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-597964796",
            "id": 597964796,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5Nzk2NDc5Ng==",
            "updated_at": "2020-03-12T01:44:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/597964796",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "    cdef vector[uint8_t] v = memoryview(b\"abc\")\r\n\r\nThis would  always require a copy since the vector owns its own memory and can share with another object.\r\n\r\nFor the vector->memoryview conversion there's a choice of three ways of doing, and only the way that makes a copy is safe:\r\n\r\n    # view generated from a pointer - dangerous the the memoryview outlives the vector.\r\n    # You can do this with regular pointers too, but it has to be explicit\r\n    cdef uint8_t[::1] d = <uint8_t[:v.size()]>&v[0]\r\n\r\n    # COPY into a Python wrapper class that exports the buffer interface\r\n    cdef uint8_t[::1] d = WrapperClass(v)\r\n\r\n    # move into a Python wrapper class that exports the buffer interface.\r\n    # Dangerous if anyone else tries to use the vector afterwards so could not be automatic\r\n    cdef uint8_t[::1] d = WrapperClass(move(v))\r\n\r\n------------------------\r\n\r\nProviding optional cdef wrapper classes for standard library types (like `ArrayWrapper` in the linked SO question) _might_ be a useful addition (or it could be getting a bit out of scope for a code-translator project), but I don't think there's a sensible way of doing what you want correctly and automatically. Unless someone else can thing of one.",
            "created_at": "2020-03-12T08:05:06Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598056922",
            "id": 598056922,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA1NjkyMg==",
            "updated_at": "2020-03-12T08:05:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598056922",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks @da-woods! ðŸ˜„\r\n\r\nFWIW the `memoryview(b\"abc\")` bit was merely illustrative. Not worried about that bit.\r\n\r\nYeah I guess I was hoping that `WrapperClass(move(v))` could be injected here. With some `WrapperClass` bits living in Cython. Though don't feel tied to any of the SO proposals if you think there is a better way ðŸ™‚\r\n\r\nAdmittedly the code example above doesn't show this, but was specifically thinking of the case where the `std::vector` would be returned to Python. So a `memoryview` onto the underlying data that keeps `std::vector` alive and could be pretty powerful. ðŸ˜„\r\n\r\nThere would be some code needed for this. Though I doubt it will be quite as extensive as [Cython's own `memoryview` support]( https://github.com/cython/cython/blob/43cdef76c81637f52c53139f0ff15f7e40cfd3e7/Cython/Utility/MemoryView.pyx ). ðŸ˜‰",
            "created_at": "2020-03-12T08:34:00Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598066885",
            "id": 598066885,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA2Njg4NQ==",
            "updated_at": "2020-03-12T08:34:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598066885",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Though don't feel tied to any of the SO proposals if you think there is a better way\r\n\r\nI don't think there's a better way. But someone else might....\r\n\r\nI think `WrapperClass(move(v))` could only be safely applied where `v` is known to be a temporary (like):\r\n\r\n    cdef uint_t8[::1] d = std::vector(...) # fine ...\r\n\r\nbut most other cases wouldn't be fine.\r\n\r\nI can see why this idea is quite appealing, but I think it'd be difficult to do automatically.",
            "created_at": "2020-03-12T08:44:32Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598070675",
            "id": 598070675,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA3MDY3NQ==",
            "updated_at": "2020-03-12T08:44:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598070675",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yep, that makes sense. Thanks for helping shine some light on the trickier parts. ðŸ™‚\r\n\r\nWasn't thinking of `move` explicitly, but you are right it needs to be there and that can be tricky. What if `WrapperClass` requires an `rvalue`? This would force the user to acknowledge this value is expiring and kick up some compiler errors if they don't handle it correctly?",
            "created_at": "2020-03-12T09:06:39Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598079828",
            "id": 598079828,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA3OTgyOA==",
            "updated_at": "2020-03-12T09:06:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598079828",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There's two problems with `rvalues`.\r\n\r\n1. is that Cython doesn't really understand them so the failure would happen when the C++ is compiled. I think it's better if the error can be generated at the Cython stage if possible.\r\n2. I think Cython is still targetting C++98 code. It's obviously fine (and good) to use later versions to be more efficient, but it's bad to be automatically generating code that can't work with C++98.  So a wrapper than moves if possible and copies if not would be OK, but a wrapper that requires move to exist probably wouldn't (especially if it was created automatically)",
            "created_at": "2020-03-12T09:19:58Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598085431",
            "id": 598085431,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA4NTQzMQ==",
            "updated_at": "2020-03-12T09:19:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598085431",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Do you know if there is discussion about bumping the C++ target for Cython? Wondering given how quickly C++ standards are evolving these days. Also didn't know if this was something that might fit in Cython 3.0.",
            "created_at": "2020-03-12T09:28:00Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598088907",
            "id": 598088907,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA4ODkwNw==",
            "updated_at": "2020-03-12T09:28:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598088907",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Considering I had to change one of my PRs to fit C89 I suspect not.\r\n\r\nMy view is still that it might be nice if a suitable wrapper existed (and maybe for `std::string` too if you were doing one?), but\r\na) You'd probably want it to be created on explicit request rather than doing automatic conversions for memoryviews.\r\nb) Facilities exist for the user to ask for a move https://github.com/cython/cython/pull/3358, which would make intent clear and only work on C++11\r\nc) Copying the vector would be an acceptable C++98 fallback (unless the user has asked for a move)\r\nd) I do have a [PR pending](https://github.com/cython/cython/pull/3362) that should automatically use `std::move` on temps if it's safe to do so. That should help with this to avoid copying in some of the easier cases. But obviously \"explicit is better than implicit\".\r\n\r\nI think that's all the opinions I usefully have on this",
            "created_at": "2020-03-12T09:43:29Z",
            "html_url": "https://github.com/cython/cython/issues/3416#issuecomment-598095350",
            "id": 598095350,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3416",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA5NTM1MA==",
            "updated_at": "2020-03-12T09:43:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/598095350",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3416/comments",
    "created_at": "2020-03-11T23:54:43Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-12T08:34:00Z",
            "event": "mentioned",
            "id": 3121857127,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzEyMTg1NzEyNw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3121857127"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-03-12T08:34:00Z",
            "event": "subscribed",
            "id": 3121857130,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMjE4NTcxMzA=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3121857130"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3416/events",
    "html_url": "https://github.com/cython/cython/issues/3416",
    "id": 579609382,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3416/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Nzk2MDkzODI=",
    "number": 3416,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Supporting the Python buffer protocol with `std::vector<T>`",
    "updated_at": "2020-03-12T09:43:29Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3416",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jakirkham",
        "id": 3019665,
        "login": "jakirkham",
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jakirkham"
    }
}