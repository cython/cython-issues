{
    "active_lock_reason": "too heated",
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nread the context please. Is there a C++ compiler option to suppress this error? It's really frustrating.\r\n\r\n\n\n### Code to reproduce the behaviour:\n\n```cython\r\n# example code\r\n```\r\n\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nlinux\n\n### Python version\n\n3.10\n\n### Cython version\n\n3.10\n\n### Additional context\n\n```\r\n/root/.cache/bazel/_bazel_root/d3b50b4cc9881520a202abb92e745f8f/external/cython/Cython/Compiler/Main.py:381: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /root/.cache/bazel/_bazel_root/d3b50b4cc9881520a202abb92e745f8f/execroot/org_tensorflow_io/external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/cygrpc.pxd\r\n  tree = Parsing.p_module(s, pxd, full_module_name)\r\nwarning: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/cygrpc.pxd:39:0: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\nwarning: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/cygrpc.pyx:53:0: The 'IF' statement is deprecated and will be removed in a future Cython version. Consider using runtime conditions or C macros instead. See https://github.com/cython/cython/issues/4310\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi:60:5: Exception check on '_destroy' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi:296:5: Exception check on '_server_cert_config_fetcher_wrapper' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/records.pyx.pxi:21:5: Exception check on '_copy_slice' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/records.pyx.pxi:26:5: Exception check on '_slice_from_bytes' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/security.pyx.pxi:20:5: Exception check on 'ssl_roots_override_callback' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:71:5: Exception check on 'socket_connect' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:86:5: Exception check on 'socket_destroy' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:89:5: Exception check on 'socket_shutdown' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:96:5: Exception check on 'socket_close' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:136:5: Exception check on 'socket_write' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:164:5: Exception check on 'socket_read' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:252:5: Exception check on 'socket_accept' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:287:5: Exception check on 'socket_resolve_async' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:329:5: Exception check on 'timer_start' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:335:5: Exception check on 'timer_stop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:343:5: Exception check on 'init_loop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:346:5: Exception check on 'destroy_loop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:349:5: Exception check on 'kick_loop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:352:5: Exception check on 'run_loop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi:42:5: Exception check on '__prefork' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi:56:5: Exception check on '__postfork_parent' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi:63:5: Exception check on '__postfork_child' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:40:5: Exception check on 'asyncio_socket_destroy' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:44:5: Exception check on 'asyncio_socket_connect' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:55:5: Exception check on 'asyncio_socket_close' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:63:5: Exception check on 'asyncio_socket_shutdown' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:68:5: Exception check on 'asyncio_socket_write' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:76:5: Exception check on 'asyncio_socket_read' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:155:5: Exception check on 'asyncio_socket_accept' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:170:5: Exception check on 'asyncio_resolve_async' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:178:5: Exception check on 'asyncio_timer_start' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:184:5: Exception check on 'asyncio_timer_stop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:190:5: Exception check on 'asyncio_init_loop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:194:5: Exception check on 'asyncio_destroy_loop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:198:5: Exception check on 'asyncio_kick_loop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\nperformance hint: external/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:202:5: Exception check on 'asyncio_run_loop' will always require the GIL to be acquired. Possible solutions:\r\n        1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.\r\n        2. Use an 'int' return type on the function to allow an error code to be returned.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    return 1\r\n  else:\r\n    return 0\r\n\r\ncdef grpc_arg_pointer_vtable default_vtable\r\ndefault_vtable.copy = &_copy_pointer\r\n                      ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/vtable.pyx.pxi:34:22: Cannot assign type 'void *(*)(void *) except? NULL' to 'void *(*)(void *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void *(void *) except? NULL'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  else:\r\n    return 0\r\n\r\ncdef grpc_arg_pointer_vtable default_vtable\r\ndefault_vtable.copy = &_copy_pointer\r\ndefault_vtable.destroy = &_destroy_pointer\r\n                         ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/vtable.pyx.pxi:35:25: Cannot assign type 'void (*)(void *) except *' to 'void (*)(void *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void *) except *'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    return 0\r\n\r\ncdef grpc_arg_pointer_vtable default_vtable\r\ndefault_vtable.copy = &_copy_pointer\r\ndefault_vtable.destroy = &_destroy_pointer\r\ndefault_vtable.cmp = &_compare_pointer\r\n                     ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/vtable.pyx.pxi:36:21: Cannot assign type 'int (*)(void *, void *) except? -1' to 'int (*)(void *, void *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'int (void *, void *) except? -1'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  cdef grpc_ssl_server_credentials_options* c_options = NULL\r\n  c_options = grpc_ssl_server_credentials_create_options_using_config_fetcher(\r\n    GRPC_SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_AND_VERIFY\r\n    if force_client_auth else\r\n    GRPC_SSL_DONT_REQUEST_CLIENT_CERTIFICATE,\r\n    _server_cert_config_fetcher_wrapper,\r\n    ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi:290:4: Cannot assign type 'grpc_ssl_certificate_config_reload_status (void *, grpc_ssl_server_certificate_config **) except * nogil' to 'grpc_ssl_server_certificate_config_callback'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_ssl_certificate_config_reload_status (void *, grpc_ssl_server_certificate_config **) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n  def cb_func(cb, args):\r\n    _spawn_greenlet(cb, *args)\r\n  set_async_callback_func(cb_func)\r\n\r\n  gevent_resolver_vtable.resolve = socket_resolve\r\n                                   ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:392:35: Cannot assign type 'grpc_error *(char *, char *, grpc_resolved_addresses **) except? NULL nogil' to 'grpc_error *(*)(char *, char *, grpc_resolved_addresses **) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(char *, char *, grpc_resolved_addresses **) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  def cb_func(cb, args):\r\n    _spawn_greenlet(cb, *args)\r\n  set_async_callback_func(cb_func)\r\n\r\n  gevent_resolver_vtable.resolve = socket_resolve\r\n  gevent_resolver_vtable.resolve_async = socket_resolve_async\r\n                                         ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:393:41: Cannot assign type 'void (grpc_custom_resolver *, char *, char *) except * nogil' to 'void (*)(grpc_custom_resolver *, char *, char *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_resolver *, char *, char *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  set_async_callback_func(cb_func)\r\n\r\n  gevent_resolver_vtable.resolve = socket_resolve\r\n  gevent_resolver_vtable.resolve_async = socket_resolve_async\r\n\r\n  gevent_socket_vtable.init = socket_init\r\n                              ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:395:30: Cannot assign type 'grpc_error *(grpc_custom_socket *, int) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *, int) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *, int) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n  gevent_resolver_vtable.resolve = socket_resolve\r\n  gevent_resolver_vtable.resolve_async = socket_resolve_async\r\n\r\n  gevent_socket_vtable.init = socket_init\r\n  gevent_socket_vtable.connect = socket_connect\r\n                                 ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:396:33: Cannot assign type 'void (grpc_custom_socket *, const grpc_sockaddr *, size_t, grpc_custom_connect_callback) except * nogil' to 'void (*)(grpc_custom_socket *, const grpc_sockaddr *, size_t, grpc_custom_connect_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, const grpc_sockaddr *, size_t, grpc_custom_connect_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_resolver_vtable.resolve = socket_resolve\r\n  gevent_resolver_vtable.resolve_async = socket_resolve_async\r\n\r\n  gevent_socket_vtable.init = socket_init\r\n  gevent_socket_vtable.connect = socket_connect\r\n  gevent_socket_vtable.destroy = socket_destroy\r\n                                 ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:397:33: Cannot assign type 'void (grpc_custom_socket *) except * nogil' to 'void (*)(grpc_custom_socket *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_resolver_vtable.resolve_async = socket_resolve_async\r\n\r\n  gevent_socket_vtable.init = socket_init\r\n  gevent_socket_vtable.connect = socket_connect\r\n  gevent_socket_vtable.destroy = socket_destroy\r\n  gevent_socket_vtable.shutdown = socket_shutdown\r\n                                  ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:398:34: Cannot assign type 'void (grpc_custom_socket *) except * nogil' to 'void (*)(grpc_custom_socket *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n  gevent_socket_vtable.init = socket_init\r\n  gevent_socket_vtable.connect = socket_connect\r\n  gevent_socket_vtable.destroy = socket_destroy\r\n  gevent_socket_vtable.shutdown = socket_shutdown\r\n  gevent_socket_vtable.close = socket_close\r\n                               ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:399:31: Cannot assign type 'void (grpc_custom_socket *, grpc_custom_close_callback) except * nogil' to 'void (*)(grpc_custom_socket *, grpc_custom_close_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, grpc_custom_close_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.init = socket_init\r\n  gevent_socket_vtable.connect = socket_connect\r\n  gevent_socket_vtable.destroy = socket_destroy\r\n  gevent_socket_vtable.shutdown = socket_shutdown\r\n  gevent_socket_vtable.close = socket_close\r\n  gevent_socket_vtable.write = socket_write\r\n                               ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:400:31: Cannot assign type 'void (grpc_custom_socket *, grpc_slice_buffer *, grpc_custom_write_callback) except * nogil' to 'void (*)(grpc_custom_socket *, grpc_slice_buffer *, grpc_custom_write_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, grpc_slice_buffer *, grpc_custom_write_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.connect = socket_connect\r\n  gevent_socket_vtable.destroy = socket_destroy\r\n  gevent_socket_vtable.shutdown = socket_shutdown\r\n  gevent_socket_vtable.close = socket_close\r\n  gevent_socket_vtable.write = socket_write\r\n  gevent_socket_vtable.read = socket_read\r\n                              ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:401:30: Cannot assign type 'void (grpc_custom_socket *, char *, size_t, grpc_custom_read_callback) except * nogil' to 'void (*)(grpc_custom_socket *, char *, size_t, grpc_custom_read_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, char *, size_t, grpc_custom_read_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.destroy = socket_destroy\r\n  gevent_socket_vtable.shutdown = socket_shutdown\r\n  gevent_socket_vtable.close = socket_close\r\n  gevent_socket_vtable.write = socket_write\r\n  gevent_socket_vtable.read = socket_read\r\n  gevent_socket_vtable.getpeername = socket_getpeername\r\n                                     ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:402:37: Cannot assign type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, int *) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *, const grpc_sockaddr *, int *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, int *) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.shutdown = socket_shutdown\r\n  gevent_socket_vtable.close = socket_close\r\n  gevent_socket_vtable.write = socket_write\r\n  gevent_socket_vtable.read = socket_read\r\n  gevent_socket_vtable.getpeername = socket_getpeername\r\n  gevent_socket_vtable.getsockname = socket_getsockname\r\n                                     ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:403:37: Cannot assign type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, int *) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *, const grpc_sockaddr *, int *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, int *) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.close = socket_close\r\n  gevent_socket_vtable.write = socket_write\r\n  gevent_socket_vtable.read = socket_read\r\n  gevent_socket_vtable.getpeername = socket_getpeername\r\n  gevent_socket_vtable.getsockname = socket_getsockname\r\n  gevent_socket_vtable.bind = socket_bind\r\n                              ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:404:30: Cannot assign type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, size_t, int) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *, const grpc_sockaddr *, size_t, int) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, size_t, int) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.write = socket_write\r\n  gevent_socket_vtable.read = socket_read\r\n  gevent_socket_vtable.getpeername = socket_getpeername\r\n  gevent_socket_vtable.getsockname = socket_getsockname\r\n  gevent_socket_vtable.bind = socket_bind\r\n  gevent_socket_vtable.listen = socket_listen\r\n                                ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:405:32: Cannot assign type 'grpc_error *(grpc_custom_socket *) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.read = socket_read\r\n  gevent_socket_vtable.getpeername = socket_getpeername\r\n  gevent_socket_vtable.getsockname = socket_getsockname\r\n  gevent_socket_vtable.bind = socket_bind\r\n  gevent_socket_vtable.listen = socket_listen\r\n  gevent_socket_vtable.accept = socket_accept\r\n                                ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:406:32: Cannot assign type 'void (grpc_custom_socket *, grpc_custom_socket *, grpc_custom_accept_callback) except * nogil' to 'void (*)(grpc_custom_socket *, grpc_custom_socket *, grpc_custom_accept_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, grpc_custom_socket *, grpc_custom_accept_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.getsockname = socket_getsockname\r\n  gevent_socket_vtable.bind = socket_bind\r\n  gevent_socket_vtable.listen = socket_listen\r\n  gevent_socket_vtable.accept = socket_accept\r\n\r\n  gevent_timer_vtable.start = timer_start\r\n                              ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:408:30: Cannot assign type 'void (grpc_custom_timer *) except * nogil' to 'void (*)(grpc_custom_timer *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_timer *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.bind = socket_bind\r\n  gevent_socket_vtable.listen = socket_listen\r\n  gevent_socket_vtable.accept = socket_accept\r\n\r\n  gevent_timer_vtable.start = timer_start\r\n  gevent_timer_vtable.stop = timer_stop\r\n                             ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:409:29: Cannot assign type 'void (grpc_custom_timer *) except * nogil' to 'void (*)(grpc_custom_timer *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_timer *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_socket_vtable.accept = socket_accept\r\n\r\n  gevent_timer_vtable.start = timer_start\r\n  gevent_timer_vtable.stop = timer_stop\r\n\r\n  gevent_pollset_vtable.init = init_loop\r\n                               ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:411:31: Cannot assign type 'void (void) except * nogil' to 'void (*)(void) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n  gevent_timer_vtable.start = timer_start\r\n  gevent_timer_vtable.stop = timer_stop\r\n\r\n  gevent_pollset_vtable.init = init_loop\r\n  gevent_pollset_vtable.poll = run_loop\r\n                               ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:412:31: Cannot assign type 'void (size_t) except * nogil' to 'void (*)(size_t) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (size_t) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_timer_vtable.start = timer_start\r\n  gevent_timer_vtable.stop = timer_stop\r\n\r\n  gevent_pollset_vtable.init = init_loop\r\n  gevent_pollset_vtable.poll = run_loop\r\n  gevent_pollset_vtable.kick = kick_loop\r\n                               ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:413:31: Cannot assign type 'void (void) except * nogil' to 'void (*)(void) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n  gevent_timer_vtable.stop = timer_stop\r\n\r\n  gevent_pollset_vtable.init = init_loop\r\n  gevent_pollset_vtable.poll = run_loop\r\n  gevent_pollset_vtable.kick = kick_loop\r\n  gevent_pollset_vtable.shutdown = destroy_loop\r\n                                   ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/grpc_gevent.pyx.pxi:414:35: Cannot assign type 'void (void) except * nogil' to 'void (*)(void) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ndef fork_handlers_and_grpc_init():\r\n    grpc_init()\r\n    if _GRPC_ENABLE_FORK_SUPPORT:\r\n        with _fork_state.fork_handler_registered_lock:\r\n            if not _fork_state.fork_handler_registered:\r\n                pthread_atfork(&__prefork, &__postfork_parent, &__postfork_child)\r\n                               ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi:98:31: Cannot assign type 'void (*)(void) except * nogil' to 'void (*)(void) noexcept nogil'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ndef fork_handlers_and_grpc_init():\r\n    grpc_init()\r\n    if _GRPC_ENABLE_FORK_SUPPORT:\r\n        with _fork_state.fork_handler_registered_lock:\r\n            if not _fork_state.fork_handler_registered:\r\n                pthread_atfork(&__prefork, &__postfork_parent, &__postfork_child)\r\n                                           ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi:98:43: Cannot assign type 'void (*)(void) except * nogil' to 'void (*)(void) noexcept nogil'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ndef fork_handlers_and_grpc_init():\r\n    grpc_init()\r\n    if _GRPC_ENABLE_FORK_SUPPORT:\r\n        with _fork_state.fork_handler_registered_lock:\r\n            if not _fork_state.fork_handler_registered:\r\n                pthread_atfork(&__prefork, &__postfork_parent, &__postfork_child)\r\n                                                               ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi:98:63: Cannot assign type 'void (*)(void) except * nogil' to 'void (*)(void) noexcept nogil'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncdef void asyncio_run_loop(size_t timeout_ms) with gil:\r\n    pass\r\n\r\n\r\ndef install_asyncio_iomgr():\r\n    asyncio_resolver_vtable.resolve = asyncio_resolve\r\n                                      ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:207:38: Cannot assign type 'grpc_error *(char *, char *, grpc_resolved_addresses **) except? NULL nogil' to 'grpc_error *(*)(char *, char *, grpc_resolved_addresses **) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(char *, char *, grpc_resolved_addresses **) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    pass\r\n\r\n\r\ndef install_asyncio_iomgr():\r\n    asyncio_resolver_vtable.resolve = asyncio_resolve\r\n    asyncio_resolver_vtable.resolve_async = asyncio_resolve_async\r\n                                            ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:208:44: Cannot assign type 'void (grpc_custom_resolver *, char *, char *) except * nogil' to 'void (*)(grpc_custom_resolver *, char *, char *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_resolver *, char *, char *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\ndef install_asyncio_iomgr():\r\n    asyncio_resolver_vtable.resolve = asyncio_resolve\r\n    asyncio_resolver_vtable.resolve_async = asyncio_resolve_async\r\n\r\n    asyncio_socket_vtable.init = asyncio_socket_init\r\n                                 ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:210:33: Cannot assign type 'grpc_error *(grpc_custom_socket *, int) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *, int) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *, int) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ndef install_asyncio_iomgr():\r\n    asyncio_resolver_vtable.resolve = asyncio_resolve\r\n    asyncio_resolver_vtable.resolve_async = asyncio_resolve_async\r\n\r\n    asyncio_socket_vtable.init = asyncio_socket_init\r\n    asyncio_socket_vtable.connect = asyncio_socket_connect\r\n                                    ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:211:36: Cannot assign type 'void (grpc_custom_socket *, const grpc_sockaddr *, size_t, grpc_custom_connect_callback) except * nogil' to 'void (*)(grpc_custom_socket *, const grpc_sockaddr *, size_t, grpc_custom_connect_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, const grpc_sockaddr *, size_t, grpc_custom_connect_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_resolver_vtable.resolve = asyncio_resolve\r\n    asyncio_resolver_vtable.resolve_async = asyncio_resolve_async\r\n\r\n    asyncio_socket_vtable.init = asyncio_socket_init\r\n    asyncio_socket_vtable.connect = asyncio_socket_connect\r\n    asyncio_socket_vtable.destroy = asyncio_socket_destroy\r\n                                    ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:212:36: Cannot assign type 'void (grpc_custom_socket *) except * nogil' to 'void (*)(grpc_custom_socket *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_resolver_vtable.resolve_async = asyncio_resolve_async\r\n\r\n    asyncio_socket_vtable.init = asyncio_socket_init\r\n    asyncio_socket_vtable.connect = asyncio_socket_connect\r\n    asyncio_socket_vtable.destroy = asyncio_socket_destroy\r\n    asyncio_socket_vtable.shutdown = asyncio_socket_shutdown\r\n                                     ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:213:37: Cannot assign type 'void (grpc_custom_socket *) except * nogil' to 'void (*)(grpc_custom_socket *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n    asyncio_socket_vtable.init = asyncio_socket_init\r\n    asyncio_socket_vtable.connect = asyncio_socket_connect\r\n    asyncio_socket_vtable.destroy = asyncio_socket_destroy\r\n    asyncio_socket_vtable.shutdown = asyncio_socket_shutdown\r\n    asyncio_socket_vtable.close = asyncio_socket_close\r\n                                  ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:214:34: Cannot assign type 'void (grpc_custom_socket *, grpc_custom_close_callback) except * nogil' to 'void (*)(grpc_custom_socket *, grpc_custom_close_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, grpc_custom_close_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.init = asyncio_socket_init\r\n    asyncio_socket_vtable.connect = asyncio_socket_connect\r\n    asyncio_socket_vtable.destroy = asyncio_socket_destroy\r\n    asyncio_socket_vtable.shutdown = asyncio_socket_shutdown\r\n    asyncio_socket_vtable.close = asyncio_socket_close\r\n    asyncio_socket_vtable.write = asyncio_socket_write\r\n                                  ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:215:34: Cannot assign type 'void (grpc_custom_socket *, grpc_slice_buffer *, grpc_custom_write_callback) except * nogil' to 'void (*)(grpc_custom_socket *, grpc_slice_buffer *, grpc_custom_write_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, grpc_slice_buffer *, grpc_custom_write_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.connect = asyncio_socket_connect\r\n    asyncio_socket_vtable.destroy = asyncio_socket_destroy\r\n    asyncio_socket_vtable.shutdown = asyncio_socket_shutdown\r\n    asyncio_socket_vtable.close = asyncio_socket_close\r\n    asyncio_socket_vtable.write = asyncio_socket_write\r\n    asyncio_socket_vtable.read = asyncio_socket_read\r\n                                 ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:216:33: Cannot assign type 'void (grpc_custom_socket *, char *, size_t, grpc_custom_read_callback) except * nogil' to 'void (*)(grpc_custom_socket *, char *, size_t, grpc_custom_read_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, char *, size_t, grpc_custom_read_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.destroy = asyncio_socket_destroy\r\n    asyncio_socket_vtable.shutdown = asyncio_socket_shutdown\r\n    asyncio_socket_vtable.close = asyncio_socket_close\r\n    asyncio_socket_vtable.write = asyncio_socket_write\r\n    asyncio_socket_vtable.read = asyncio_socket_read\r\n    asyncio_socket_vtable.getpeername = asyncio_socket_getpeername\r\n                                        ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:217:40: Cannot assign type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, int *) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *, const grpc_sockaddr *, int *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, int *) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.shutdown = asyncio_socket_shutdown\r\n    asyncio_socket_vtable.close = asyncio_socket_close\r\n    asyncio_socket_vtable.write = asyncio_socket_write\r\n    asyncio_socket_vtable.read = asyncio_socket_read\r\n    asyncio_socket_vtable.getpeername = asyncio_socket_getpeername\r\n    asyncio_socket_vtable.getsockname = asyncio_socket_getsockname\r\n                                        ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:218:40: Cannot assign type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, int *) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *, const grpc_sockaddr *, int *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, int *) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.close = asyncio_socket_close\r\n    asyncio_socket_vtable.write = asyncio_socket_write\r\n    asyncio_socket_vtable.read = asyncio_socket_read\r\n    asyncio_socket_vtable.getpeername = asyncio_socket_getpeername\r\n    asyncio_socket_vtable.getsockname = asyncio_socket_getsockname\r\n    asyncio_socket_vtable.bind = asyncio_socket_bind\r\n                                 ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:219:33: Cannot assign type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, size_t, int) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *, const grpc_sockaddr *, size_t, int) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *, const grpc_sockaddr *, size_t, int) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.write = asyncio_socket_write\r\n    asyncio_socket_vtable.read = asyncio_socket_read\r\n    asyncio_socket_vtable.getpeername = asyncio_socket_getpeername\r\n    asyncio_socket_vtable.getsockname = asyncio_socket_getsockname\r\n    asyncio_socket_vtable.bind = asyncio_socket_bind\r\n    asyncio_socket_vtable.listen = asyncio_socket_listen\r\n                                   ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:220:35: Cannot assign type 'grpc_error *(grpc_custom_socket *) except? NULL nogil' to 'grpc_error *(*)(grpc_custom_socket *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'grpc_error *(grpc_custom_socket *) except? NULL nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.read = asyncio_socket_read\r\n    asyncio_socket_vtable.getpeername = asyncio_socket_getpeername\r\n    asyncio_socket_vtable.getsockname = asyncio_socket_getsockname\r\n    asyncio_socket_vtable.bind = asyncio_socket_bind\r\n    asyncio_socket_vtable.listen = asyncio_socket_listen\r\n    asyncio_socket_vtable.accept = asyncio_socket_accept\r\n                                   ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:221:35: Cannot assign type 'void (grpc_custom_socket *, grpc_custom_socket *, grpc_custom_accept_callback) except * nogil' to 'void (*)(grpc_custom_socket *, grpc_custom_socket *, grpc_custom_accept_callback) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_socket *, grpc_custom_socket *, grpc_custom_accept_callback) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.getsockname = asyncio_socket_getsockname\r\n    asyncio_socket_vtable.bind = asyncio_socket_bind\r\n    asyncio_socket_vtable.listen = asyncio_socket_listen\r\n    asyncio_socket_vtable.accept = asyncio_socket_accept\r\n\r\n    asyncio_timer_vtable.start = asyncio_timer_start\r\n                                 ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:223:33: Cannot assign type 'void (grpc_custom_timer *) except * nogil' to 'void (*)(grpc_custom_timer *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_timer *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.bind = asyncio_socket_bind\r\n    asyncio_socket_vtable.listen = asyncio_socket_listen\r\n    asyncio_socket_vtable.accept = asyncio_socket_accept\r\n\r\n    asyncio_timer_vtable.start = asyncio_timer_start\r\n    asyncio_timer_vtable.stop = asyncio_timer_stop\r\n                                ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:224:32: Cannot assign type 'void (grpc_custom_timer *) except * nogil' to 'void (*)(grpc_custom_timer *) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_custom_timer *) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_socket_vtable.accept = asyncio_socket_accept\r\n\r\n    asyncio_timer_vtable.start = asyncio_timer_start\r\n    asyncio_timer_vtable.stop = asyncio_timer_stop\r\n\r\n    asyncio_pollset_vtable.init = asyncio_init_loop\r\n                                  ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:226:34: Cannot assign type 'void (void) except * nogil' to 'void (*)(void) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n    asyncio_timer_vtable.start = asyncio_timer_start\r\n    asyncio_timer_vtable.stop = asyncio_timer_stop\r\n\r\n    asyncio_pollset_vtable.init = asyncio_init_loop\r\n    asyncio_pollset_vtable.poll = asyncio_run_loop\r\n                                  ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:227:34: Cannot assign type 'void (size_t) except * nogil' to 'void (*)(size_t) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (size_t) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_timer_vtable.start = asyncio_timer_start\r\n    asyncio_timer_vtable.stop = asyncio_timer_stop\r\n\r\n    asyncio_pollset_vtable.init = asyncio_init_loop\r\n    asyncio_pollset_vtable.poll = asyncio_run_loop\r\n    asyncio_pollset_vtable.kick = asyncio_kick_loop\r\n                                  ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:228:34: Cannot assign type 'void (void) except * nogil' to 'void (*)(void) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    asyncio_timer_vtable.stop = asyncio_timer_stop\r\n\r\n    asyncio_pollset_vtable.init = asyncio_init_loop\r\n    asyncio_pollset_vtable.poll = asyncio_run_loop\r\n    asyncio_pollset_vtable.kick = asyncio_kick_loop\r\n    asyncio_pollset_vtable.shutdown = asyncio_destroy_loop\r\n                                      ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/iomgr/iomgr.pyx.pxi:229:38: Cannot assign type 'void (void) except * nogil' to 'void (*)(void) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (void) except * nogil'.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\ncdef class CallbackWrapper:\r\n\r\n    def __cinit__(self, object future, CallbackFailureHandler failure_handler):\r\n        self.context.functor.functor_run = self.functor_run\r\n                                               ^\r\n------------------------------------------------------------\r\n\r\nexternal/com_github_grpc_grpc/src/python/grpcio/grpc/_cython/_cygrpc/aio/callback_common.pyx.pxi:36:47: Cannot assign type 'void (grpc_experimental_completion_queue_functor *, int) except *' to 'void (*)(grpc_experimental_completion_queue_functor *, int) noexcept'. Exception values are incompatible. Suggest adding 'noexcept' to type 'void (grpc_experimental_completion_queue_functor *, int) except *'.\r\n```",
    "closed_at": "2024-11-27T07:53:02Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "@matusvalo ",
            "created_at": "2024-11-26T13:40:00Z",
            "html_url": "https://github.com/cython/cython/issues/6523#issuecomment-2500831906",
            "id": 2500831906,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6523",
            "node_id": "IC_kwDOABDGAc6VD6qi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2500831906/reactions"
            },
            "updated_at": "2024-11-26T13:40:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2500831906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24861783?v=4",
                "events_url": "https://api.github.com/users/LinGeLin/events{/privacy}",
                "followers_url": "https://api.github.com/users/LinGeLin/followers",
                "following_url": "https://api.github.com/users/LinGeLin/following{/other_user}",
                "gists_url": "https://api.github.com/users/LinGeLin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LinGeLin",
                "id": 24861783,
                "login": "LinGeLin",
                "node_id": "MDQ6VXNlcjI0ODYxNzgz",
                "organizations_url": "https://api.github.com/users/LinGeLin/orgs",
                "received_events_url": "https://api.github.com/users/LinGeLin/received_events",
                "repos_url": "https://api.github.com/users/LinGeLin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LinGeLin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LinGeLin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LinGeLin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@matusvalo help",
            "created_at": "2024-11-26T14:32:47Z",
            "html_url": "https://github.com/cython/cython/issues/6523#issuecomment-2500959526",
            "id": 2500959526,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6523",
            "node_id": "IC_kwDOABDGAc6VEZ0m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2500959526/reactions"
            },
            "updated_at": "2024-11-26T14:32:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2500959526",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24861783?v=4",
                "events_url": "https://api.github.com/users/LinGeLin/events{/privacy}",
                "followers_url": "https://api.github.com/users/LinGeLin/followers",
                "following_url": "https://api.github.com/users/LinGeLin/following{/other_user}",
                "gists_url": "https://api.github.com/users/LinGeLin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LinGeLin",
                "id": 24861783,
                "login": "LinGeLin",
                "node_id": "MDQ6VXNlcjI0ODYxNzgz",
                "organizations_url": "https://api.github.com/users/LinGeLin/orgs",
                "received_events_url": "https://api.github.com/users/LinGeLin/received_events",
                "repos_url": "https://api.github.com/users/LinGeLin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LinGeLin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LinGeLin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LinGeLin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@matusvalo Get up and get to work",
            "created_at": "2024-11-26T14:45:54Z",
            "html_url": "https://github.com/cython/cython/issues/6523#issuecomment-2501006079",
            "id": 2501006079,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6523",
            "node_id": "IC_kwDOABDGAc6VElL_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2501006079/reactions"
            },
            "updated_at": "2024-11-26T14:45:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2501006079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24861783?v=4",
                "events_url": "https://api.github.com/users/LinGeLin/events{/privacy}",
                "followers_url": "https://api.github.com/users/LinGeLin/followers",
                "following_url": "https://api.github.com/users/LinGeLin/following{/other_user}",
                "gists_url": "https://api.github.com/users/LinGeLin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LinGeLin",
                "id": 24861783,
                "login": "LinGeLin",
                "node_id": "MDQ6VXNlcjI0ODYxNzgz",
                "organizations_url": "https://api.github.com/users/LinGeLin/orgs",
                "received_events_url": "https://api.github.com/users/LinGeLin/received_events",
                "repos_url": "https://api.github.com/users/LinGeLin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LinGeLin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LinGeLin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LinGeLin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@LinGeLin it isn't really acceptable to hassle people for an instant response. Please don't do that.",
            "created_at": "2024-11-26T16:35:56Z",
            "html_url": "https://github.com/cython/cython/issues/6523#issuecomment-2501353555",
            "id": 2501353555,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6523",
            "node_id": "IC_kwDOABDGAc6VF6BT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2501353555/reactions"
            },
            "updated_at": "2024-11-26T16:35:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2501353555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is a support question rather than a bug report. In future, please ask support questions on the mailing list instead https://groups.google.com/g/cython-users.\r\n\r\nI suspect the version of grpc you have is only compatible with Cython 0.29.x. So you either need to downgrade Cython, or upgrade grpc.\r\n\r\nThe `legacy_implicit_noexcept` directive restores the old behaviour with cdef functions and `noexcept`.\r\n",
            "created_at": "2024-11-27T07:53:02Z",
            "html_url": "https://github.com/cython/cython/issues/6523#issuecomment-2503153029",
            "id": 2503153029,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6523",
            "node_id": "IC_kwDOABDGAc6VMxWF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2503153029/reactions"
            },
            "updated_at": "2024-11-27T07:53:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2503153029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6523/comments",
    "created_at": "2024-11-26T13:17:11Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24861783?v=4",
                "events_url": "https://api.github.com/users/LinGeLin/events{/privacy}",
                "followers_url": "https://api.github.com/users/LinGeLin/followers",
                "following_url": "https://api.github.com/users/LinGeLin/following{/other_user}",
                "gists_url": "https://api.github.com/users/LinGeLin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LinGeLin",
                "id": 24861783,
                "login": "LinGeLin",
                "node_id": "MDQ6VXNlcjI0ODYxNzgz",
                "organizations_url": "https://api.github.com/users/LinGeLin/orgs",
                "received_events_url": "https://api.github.com/users/LinGeLin/received_events",
                "repos_url": "https://api.github.com/users/LinGeLin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LinGeLin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LinGeLin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LinGeLin",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T13:39:44Z",
            "event": "renamed",
            "id": 15436521593,
            "node_id": "RTE_lADOABDGAc6gnLDbzwAAAAOYFqB5",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] ",
                "to": "[BUG] grpc build failed"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/15436521593"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T13:40:02Z",
            "event": "mentioned",
            "id": 15436525440,
            "node_id": "MEE_lADOABDGAc6gnLDbzwAAAAOYFq-A",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15436525440"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T13:40:02Z",
            "event": "subscribed",
            "id": 15436525456,
            "node_id": "SE_lADOABDGAc6gnLDbzwAAAAOYFq-Q",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15436525456"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T14:32:49Z",
            "event": "mentioned",
            "id": 15437287917,
            "node_id": "MEE_lADOABDGAc6gnLDbzwAAAAOYIlHt",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15437287917"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T14:32:49Z",
            "event": "subscribed",
            "id": 15437287936,
            "node_id": "SE_lADOABDGAc6gnLDbzwAAAAOYIlIA",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15437287936"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T14:45:55Z",
            "event": "mentioned",
            "id": 15437484504,
            "node_id": "MEE_lADOABDGAc6gnLDbzwAAAAOYJVHY",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15437484504"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T14:45:55Z",
            "event": "subscribed",
            "id": 15437484519,
            "node_id": "SE_lADOABDGAc6gnLDbzwAAAAOYJVHn",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15437484519"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24861783?v=4",
                "events_url": "https://api.github.com/users/LinGeLin/events{/privacy}",
                "followers_url": "https://api.github.com/users/LinGeLin/followers",
                "following_url": "https://api.github.com/users/LinGeLin/following{/other_user}",
                "gists_url": "https://api.github.com/users/LinGeLin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LinGeLin",
                "id": 24861783,
                "login": "LinGeLin",
                "node_id": "MDQ6VXNlcjI0ODYxNzgz",
                "organizations_url": "https://api.github.com/users/LinGeLin/orgs",
                "received_events_url": "https://api.github.com/users/LinGeLin/received_events",
                "repos_url": "https://api.github.com/users/LinGeLin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LinGeLin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LinGeLin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LinGeLin",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T16:35:57Z",
            "event": "mentioned",
            "id": 15439153444,
            "node_id": "MEE_lADOABDGAc6gnLDbzwAAAAOYPskk",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15439153444"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24861783?v=4",
                "events_url": "https://api.github.com/users/LinGeLin/events{/privacy}",
                "followers_url": "https://api.github.com/users/LinGeLin/followers",
                "following_url": "https://api.github.com/users/LinGeLin/following{/other_user}",
                "gists_url": "https://api.github.com/users/LinGeLin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LinGeLin",
                "id": 24861783,
                "login": "LinGeLin",
                "node_id": "MDQ6VXNlcjI0ODYxNzgz",
                "organizations_url": "https://api.github.com/users/LinGeLin/orgs",
                "received_events_url": "https://api.github.com/users/LinGeLin/received_events",
                "repos_url": "https://api.github.com/users/LinGeLin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LinGeLin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LinGeLin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LinGeLin",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T16:35:57Z",
            "event": "subscribed",
            "id": 15439153453,
            "node_id": "SE_lADOABDGAc6gnLDbzwAAAAOYPskt",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15439153453"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-26T16:36:13Z",
            "event": "locked",
            "id": 15439158461,
            "lock_reason": "too heated",
            "node_id": "LOE_lADOABDGAc6gnLDbzwAAAAOYPty9",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15439158461"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-27T07:53:02Z",
            "event": "closed",
            "id": 15448384425,
            "node_id": "CE_lADOABDGAc6gnLDbzwAAAAOYy6Op",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "url": "https://api.github.com/repos/cython/cython/issues/events/15448384425"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-27T07:53:16Z",
            "event": "labeled",
            "id": 15448386643,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "LE_lADOABDGAc6gnLDbzwAAAAOYy6xT",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15448386643"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6523/events",
    "html_url": "https://github.com/cython/cython/issues/6523",
    "id": 2694623451,
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 414800623,
            "name": "support question",
            "node_id": "MDU6TGFiZWw0MTQ4MDA2MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/support%20question"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6523/labels{/name}",
    "locked": true,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6gnLDb",
    "number": 6523,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6523/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6523/timeline",
    "title": "[BUG] grpc build failed",
    "updated_at": "2024-11-27T07:53:16Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6523",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24861783?v=4",
        "events_url": "https://api.github.com/users/LinGeLin/events{/privacy}",
        "followers_url": "https://api.github.com/users/LinGeLin/followers",
        "following_url": "https://api.github.com/users/LinGeLin/following{/other_user}",
        "gists_url": "https://api.github.com/users/LinGeLin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LinGeLin",
        "id": 24861783,
        "login": "LinGeLin",
        "node_id": "MDQ6VXNlcjI0ODYxNzgz",
        "organizations_url": "https://api.github.com/users/LinGeLin/orgs",
        "received_events_url": "https://api.github.com/users/LinGeLin/received_events",
        "repos_url": "https://api.github.com/users/LinGeLin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LinGeLin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LinGeLin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LinGeLin",
        "user_view_type": "public"
    }
}