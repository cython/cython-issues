{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Pandas seems to semi-regularly run into issues with NumPy's logic which currently says that object arrays **may** be filled with `NULL` at initialization so that `NULL` is accepted everywhere to have the same meaning as `None`.\r\n(See also https://github.com/pandas-dev/pandas/pull/47097)\r\n\r\nThis is a bit weird, since NumPy *also* fills the array with `None` almost always, so in the few places where it doesn't it is unexpected!\r\n\r\nI have opened https://github.com/numpy/numpy/pull/21817 to solve this in NumPy.  The intention would be that NumPy for now should accept `NULL`, but defines it as incorrect and will never produce it on its own (with some \"internal\" exceptions).\r\n\r\nNow, I am not sure what the best solution is here and if you think that Cython should fix this (or we should do both), I can look into it.\r\nIn some sense, a fix in cython might be best... then pandas can just upgrade its Cython dependency and stop worrying about these oddities. ",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think this would be the right changes (probably, I did not test it thoroughly):\r\n```python\r\ndiff --git a/Cython/Compiler/ExprNodes.py b/Cython/Compiler/ExprNodes.py\r\nindex c20a76bd4..19aa787e0 100644\r\n--- a/Cython/Compiler/ExprNodes.py\r\n+++ b/Cython/Compiler/ExprNodes.py\r\n@@ -4578,17 +4578,17 @@ class BufferIndexNode(_IndexingBaseNode):\r\n         buffer_entry, ptrexpr = self.buffer_lookup_code(code)\r\n \r\n         if self.buffer_type.dtype.is_pyobject:\r\n-            # Must manage refcounts. Decref what is already there\r\n-            # and incref what we put in.\r\n+            # Must manage refcounts. XDecref what is already there\r\n+            # and incref what we put in (NumPy allows there to be NULL)\r\n             ptr = code.funcstate.allocate_temp(buffer_entry.buf_ptr_type,\r\n                                                manage_ref=False)\r\n             rhs_code = rhs.result()\r\n             code.putln(\"%s = %s;\" % (ptr, ptrexpr))\r\n-            code.put_gotref(\"*%s\" % ptr, self.buffer_type.dtype)\r\n-            code.putln(\"__Pyx_INCREF(%s); __Pyx_DECREF(*%s);\" % (\r\n+            code.put_xgotref(\"*%s\" % ptr, self.buffer_type.dtype)\r\n+            code.putln(\"__Pyx_INCREF(%s); __Pyx_XDECREF(*%s);\" % (\r\n                 rhs_code, ptr))\r\n             code.putln(\"*%s %s= %s;\" % (ptr, op, rhs_code))\r\n-            code.put_giveref(\"*%s\" % ptr, self.buffer_type.dtype)\r\n+            code.put_xgiveref(\"*%s\" % ptr, self.buffer_type.dtype)\r\n             code.funcstate.release_temp(ptr)\r\n         else:\r\n             # Simple case\r\n@@ -4609,8 +4609,11 @@ class BufferIndexNode(_IndexingBaseNode):\r\n             # is_temp is True, so must pull out value and incref it.\r\n             # NOTE: object temporary results for nodes are declared\r\n             #       as PyObject *, so we need a cast\r\n-            code.putln(\"%s = (PyObject *) *%s;\" % (self.result(), self.buffer_ptr_code))\r\n-            code.putln(\"__Pyx_INCREF((PyObject*)%s);\" % self.result())\r\n+            res = self.result()\r\n+            code.putln(\"%s = (PyObject *) *%s;\" % (res, self.buffer_ptr_code))\r\n+            # NumPy does (occasionally) allow NULL to denote None.\r\n+            code.putln(\"if (%s == NULL) %s = Py_None;\" % (res, res))\r\n+            code.putln(\"__Pyx_INCREF((PyObject*)%s);\" % res)\r\n \r\n     def free_subexpr_temps(self, code):\r\n         for temp in self.index_temps:\r\n```\r\n\r\nI had a brief look at the test, but would have to look more to figure out how to get the NULLs in there best.",
            "created_at": "2022-06-23T00:14:37Z",
            "html_url": "https://github.com/cython/cython/issues/4858#issuecomment-1163791116",
            "id": 1163791116,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4858",
            "node_id": "IC_kwDOABDGAc5FXgsM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1163791116/reactions"
            },
            "updated_at": "2022-06-23T00:14:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1163791116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61977?v=4",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seberg",
                "id": 61977,
                "login": "seberg",
                "node_id": "MDQ6VXNlcjYxOTc3",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seberg"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4858/comments",
    "created_at": "2022-06-22T23:17:57Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61977?v=4",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seberg",
                "id": 61977,
                "login": "seberg",
                "node_id": "MDQ6VXNlcjYxOTc3",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seberg"
            },
            "commit_id": "1af7ccde7cec85a839468e9863ee683645171536",
            "commit_url": "https://api.github.com/repos/seberg/cython/commits/1af7ccde7cec85a839468e9863ee683645171536",
            "created_at": "2022-06-23T02:11:52Z",
            "event": "referenced",
            "id": 6862095776,
            "node_id": "REFE_lADOABDGAc5MXdKdzwAAAAGZA0Wg",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6862095776"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4858/events",
    "html_url": "https://github.com/cython/cython/issues/4858",
    "id": 1281217181,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4858/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5MXdKd",
    "number": 4858,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4858/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4858/timeline",
    "title": "[BUG] Should cython object buffers check for NULL?",
    "updated_at": "2022-06-23T00:14:37Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4858",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/61977?v=4",
        "events_url": "https://api.github.com/users/seberg/events{/privacy}",
        "followers_url": "https://api.github.com/users/seberg/followers",
        "following_url": "https://api.github.com/users/seberg/following{/other_user}",
        "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seberg",
        "id": 61977,
        "login": "seberg",
        "node_id": "MDQ6VXNlcjYxOTc3",
        "organizations_url": "https://api.github.com/users/seberg/orgs",
        "received_events_url": "https://api.github.com/users/seberg/received_events",
        "repos_url": "https://api.github.com/users/seberg/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seberg"
    }
}