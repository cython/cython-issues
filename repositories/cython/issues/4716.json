{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Declaring a fused type where one element is a `libcpp` container whose elements are fused raises an `AttributeError`. See below for an example. I would have expected the code to compile.\r\n\r\n```cython\r\n# distutils: language=c++\r\n\r\nfrom libcpp.vector cimport vector\r\n\r\n\r\nctypedef fused fused_element_type:\r\n    int\r\n    long\r\n\r\n\r\nctypedef fused error:\r\n    vector[fused_element_type]\r\n```\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\nctypedef fused fused_element_type:\r\n    int\r\n    long\r\n\r\n\r\nctypedef fused error:\r\n^\r\n------------------------------------------------------------\r\n\r\n/[redacted]/_cython_magic_8449521bb3abea1d93e6323ea9cb8d1a.pyx:11:0: Compiler crash in AnalyseDeclarationsTransform\r\n\r\nFile 'ModuleNode.py', line 124, in analyse_declarations: ModuleNode(_cython_magic_8449521bb3abea1d93e6323ea9cb8d1a.pyx:1:0,\r\n    full_module_name = '_cython_magic_8449521bb3abea1d93e6323ea9cb8d1a')\r\nFile 'Nodes.py', line 431, in analyse_declarations: StatListNode(_cython_magic_8449521bb3abea1d93e6323ea9cb8d1a.pyx:3:0)\r\nFile 'Nodes.py', line 1250, in analyse_declarations: FusedTypeNode(_cython_magic_8449521bb3abea1d93e6323ea9cb8d1a.pyx:11:0,\r\n    name = 'error',\r\n    types = [...]/1)\r\nFile 'Nodes.py', line 1273, in analyse: FusedTypeNode(_cython_magic_8449521bb3abea1d93e6323ea9cb8d1a.pyx:11:0,\r\n    name = 'error',\r\n    types = [...]/1)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/[redacted]/site-packages/Cython/Compiler/Nodes.py\", line 1273, in analyse\r\n    return PyrexTypes.FusedType(types, name=self.name)\r\n  File \"/[redacted]/site-packages/Cython/Compiler/PyrexTypes.py\", line 1636, in __init__\r\n    for subtype in t.types:\r\nAttributeError: 'CppClassType' object has no attribute 'types'\r\n```\r\n\r\n**Environment**\r\n - OS: macOS Monterey 12.3 (M1 chip)\r\n - Python version: 3.9.9 (pyenv via brew)\r\n - Cython version: 0.29.28",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "I'm not sure if this should work or not.\r\n\r\nYou should be able to write a function with a templated fused type:\r\n\r\n```\r\ncdef f(vector[fused_element_type] vec):\r\n    ...\r\n```\r\n\r\nBut I don't know whether a `ctypedef` would work, or whether it should be `ctypedef fused`.",
            "created_at": "2022-04-06T20:31:24Z",
            "html_url": "https://github.com/cython/cython/issues/4716#issuecomment-1090761265",
            "id": 1090761265,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4716",
            "node_id": "IC_kwDOABDGAc5BA7Ix",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1090761265/reactions"
            },
            "updated_at": "2022-04-06T20:31:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1090761265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry, maybe some context would've been helpful. I'm trying to use fused types of vectors of fused types for some recursive template programming. \r\n\r\nIn the C++ world, tensors are often represented as nested vectors, e.g. a matrix is `vector<vector<double>>`. That's arguably not a great choice (a linearized representation is probably better), but, when working with third-party libraries, it's a representation we're stuck with. In the python world, numpy arrays are the de-facto standard, and I wanted to be able to convert between them. The code at the bottom of this comment does that for nested vectors of doubles using a recursive approach so we don't need different implementations for tensors of different rank.\r\n\r\nThe crux for the templated recursion to work is this fused `ctypedef`.\r\n\r\n```cython\r\nctypedef fused vector_or_double:\r\n    double  # vector\r\n    vector[double]  # matrix\r\n    vector[vector[double]]  # rank-3 tensor\r\n    # Add additional layers for higher-dimensional tensors.\r\n```\r\n\r\nBut we may also want to convert `int` or `float` tensors, and I tried to replace `double` with `cython.numeric`, giving rise to the original error message.\r\n\r\n# Full example code\r\n\r\n```cython\r\n# distutils: language=c++\r\n# cython: boundscheck=False\r\n# cython: cdivision=True\r\n\r\nfrom libcpp.vector cimport vector\r\nimport numpy as np\r\ncimport cython\r\nfrom cython.operator cimport dereference, preincrement\r\n\r\n\r\nctypedef fused vector_or_double:\r\n    double\r\n    vector[double]\r\n    vector[vector[double]]\r\n    # Add additional layers for higher-dimensional tensors.\r\n    \r\n    \r\ncdef nested_to_ndarray(vector[vector_or_double] nested):\r\n    \"\"\"\r\n    Convert nested vectors to a numpy array.\r\n    \"\"\"\r\n    cdef:\r\n        long size\r\n        vector[long] shape = vector[long]()\r\n        double[:] target\r\n        \r\n    size = _infer_shape(nested, shape)\r\n    target = np.empty(size)\r\n    _recursive_fill(nested, &target[0], size)\r\n    return np.reshape(target, shape)\r\n    \r\n\r\ncdef void _recursive_fill(vector[vector_or_double] source, double* target, long stride):\r\n    \"\"\"\r\n    Fill nested source vectors into a preallocated target.\r\n    \r\n    Args:\r\n        source: Nested source vectors.\r\n        target: Pointer to preallocated memory.\r\n        stride: Stride for preallocated memory.\r\n    \"\"\"\r\n    stride = stride // source.size()\r\n    if vector_or_double is double:\r\n        iterator = source.begin()\r\n        while iterator != source.end():\r\n            target[0] = dereference(iterator)\r\n            preincrement(iterator)\r\n            target += 1\r\n    else:\r\n        iterator = source.begin()\r\n        while iterator != source.end():\r\n            _recursive_fill(dereference(iterator), target, stride)\r\n            preincrement(iterator)\r\n            target += stride\r\n            \r\n            \r\ncdef long _infer_shape(vector[vector_or_double] nested, vector[long]& shape):\r\n    \"\"\"\r\n    Infer the shape of nested vectors.\r\n    \r\n    Args:\r\n        nested: Nested vectors.\r\n        shape: Shape vector to populate.\r\n    \r\n    Returns:\r\n        size: Total number of elements.\r\n    \"\"\"\r\n    cdef long size = nested.size()\r\n    # Push the current dimension.\r\n    shape.push_back(size)\r\n    # This is the lowest level or there are no elements. We are done here.\r\n    if vector_or_double is double or size == 0:\r\n        return size\r\n    # Recurse down one level.\r\n    return size * _infer_shape(nested.at(0), shape)\r\n```",
            "created_at": "2022-04-06T22:36:31Z",
            "html_url": "https://github.com/cython/cython/issues/4716#issuecomment-1090880058",
            "id": 1090880058,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4716",
            "node_id": "IC_kwDOABDGAc5BBYI6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1090880058/reactions"
            },
            "updated_at": "2022-04-06T22:36:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1090880058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/966348?v=4",
                "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/tillahoffmann/followers",
                "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tillahoffmann",
                "id": 966348,
                "login": "tillahoffmann",
                "node_id": "MDQ6VXNlcjk2NjM0OA==",
                "organizations_url": "https://api.github.com/users/tillahoffmann/orgs",
                "received_events_url": "https://api.github.com/users/tillahoffmann/received_events",
                "repos_url": "https://api.github.com/users/tillahoffmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tillahoffmann"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Ok - I follow what you're trying to do. I'm not sure if I'd expect it to work or not, but I can see why it'd be useful.",
            "created_at": "2022-04-07T06:26:28Z",
            "html_url": "https://github.com/cython/cython/issues/4716#issuecomment-1091126963",
            "id": 1091126963,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4716",
            "node_id": "IC_kwDOABDGAc5BCUaz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1091126963/reactions"
            },
            "updated_at": "2022-04-07T06:26:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1091126963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "What might work at a guess: go to the first line of the traceback and replace `t.types` (which only works for a first-level fused type) with `t.get_fused_types()` (which should work with any type).",
            "created_at": "2022-04-07T07:11:07Z",
            "html_url": "https://github.com/cython/cython/issues/4716#issuecomment-1091159330",
            "id": 1091159330,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4716",
            "node_id": "IC_kwDOABDGAc5BCcUi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1091159330/reactions"
            },
            "updated_at": "2022-04-07T07:11:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1091159330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4716/comments",
    "created_at": "2022-04-06T00:09:12Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4716/events",
    "html_url": "https://github.com/cython/cython/issues/4716",
    "id": 1193856838,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4716/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5HKM9G",
    "number": 4716,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4716/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4716/timeline",
    "title": "[BUG] Cannot declare fused type for container whose elements are fused types",
    "updated_at": "2022-04-07T07:11:07Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4716",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/966348?v=4",
        "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}",
        "followers_url": "https://api.github.com/users/tillahoffmann/followers",
        "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}",
        "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tillahoffmann",
        "id": 966348,
        "login": "tillahoffmann",
        "node_id": "MDQ6VXNlcjk2NjM0OA==",
        "organizations_url": "https://api.github.com/users/tillahoffmann/orgs",
        "received_events_url": "https://api.github.com/users/tillahoffmann/received_events",
        "repos_url": "https://api.github.com/users/tillahoffmann/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tillahoffmann"
    }
}