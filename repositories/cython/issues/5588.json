{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nWhen compiling a Cython class `cpdef` method with fused type arguments and default arguments, I get a compiler crash (see next section). This happens only when running Cython with `pypy` (PyPy 7.3), the same code compiles fine with CPython (Python 3.10). The error seems to originate from `Cython.COmpiler.PyrexTypes`, as shown in the traceback. \n\n### Code to reproduce the behaviour:\n\nI have a hard time reproducing it because this comes from a larger codebase ([althonos/pyhmmer](https://github.com/althonos/pyhmmer)) but I have the following method inside a `cdef class`:\r\n\r\n```cython\r\ncpdef TopHits search_msa(self, DigitalMSA query, SearchTargets sequences, Builder builder = None)\r\n```\r\nwhere `TopHits`, `DigitalMSA` and `Builder` are Cython classes, and `SearchTargets` a fused type.\r\n\r\nI'm getting the following crash, but only when compiling with PyPy, with CPython it compiles fines:\r\n```\r\npyhmmer/plan7.pyx:5589:10: Compiler crash in AnalyseDeclarationsTransform\r\n\r\nModuleNode.body = StatListNode(plan7.pyx:15:0)\r\nStatListNode.stats[116] = StatListNode(plan7.pyx:4763:5)\r\nStatListNode.stats[0] = CClassDefNode(plan7.pyx:4763:5,\r\n    as_name = 'Pipeline',\r\n    class_name = 'Pipeline',\r\n    doc = '...',\r\n    module_name = '',\r\n    punycode_class_name = 'Pipeline',\r\n    visibility = 'private')\r\nCClassDefNode.body = StatListNode(plan7.pyx:4764:4)\r\nStatListNode.stats[29] = CFuncDefNode(plan7.pyx:5589:10,\r\n    args = [...]/4,\r\n    doc = '...',\r\n    has_fused_arguments = True,\r\n    is_c_class_method = 1,\r\n    modifiers = [...]/0,\r\n    outer_attrs = [...]/2,\r\n    overridable = 1,\r\n    visibility = 'private')\r\nFile 'FusedNode.py', line 62, in __init__: FusedCFuncDefNode(plan7.pyx:5589:10,\r\n    fused_compound_types = [...]/1,\r\n    match = \"dest_sig[{{dest_sig_idx}}] = '{{specialized_type_name}}'\",\r\n    no_match = 'dest_sig[{{dest_sig_idx}}] = None',\r\n    nodes = [...]/2)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/Cython/Compiler/FusedNode.py\", line 62, in __init__\r\n    self.copy_cdef(env)\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/Cython/Compiler/Symtab.py\", line 259, in __repr__\r\n    return \"%s(<%x>, name=%s, type=%s)\" % (type(self).__name__, id(self), self.name, self.type)\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/Cython/Compiler/PyrexTypes.py\", line 301, in __str__\r\n    return self.declaration_code(\"\", for_display = 1).strip()\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/Cython/Compiler/PyrexTypes.py\", line 3258, in declaration_code\r\n    arg_decl_list.append(self.op_arg_struct.declaration_code(Naming.optional_args_cname))\r\nAttributeError: 'NoneType' object has no attribute 'declaration_code'\r\nTraceback (most recent call last):\r\n  File \"/home/althonos/Code/pyhmmer/setup.py\", line 740, in <module>\r\n    setuptools.setup(\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/setuptools/__init__.py\", line 107, in setup\r\n    return distutils.core.setup(**attrs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/setuptools/_distutils/core.py\", line 185, in setup\r\n    return run_commands(dist)\r\n           ^^^^^^^^^^^^^^^^^^\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/setuptools/_distutils/core.py\", line 201, in run_commands\r\n    dist.run_commands()\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/setuptools/_distutils/dist.py\", line 969, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/setuptools/dist.py\", line 1234, in run_command\r\n    super().run_command(command)\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n    cmd_obj.run()\r\n  File \"/home/althonos/Code/pyhmmer/setup.py\", line 133, in run\r\n    self.extensions = cythonize(self.extensions, **cython_args)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/Cython/Build/Dependencies.py\", line 1134, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/althonos/.local/lib/pypy3.10/site-packages/Cython/Build/Dependencies.py\", line 1301, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: pyhmmer/plan7.pyx\r\n```\r\n</details>\r\n\n\n### Expected behaviour\n\nThe Cython code (and the generated C code) compiles and works.\n\n### OS\n\nLinux\n\n### Python version\n\nPython 3.10.12 [PyPy 7.3.12 with GCC 13.1.1 20230429]\n\n### Cython version\n\n3.0.0\n\n### Additional context\n\nI actually tried modifying `PyrexTypes.py`:\r\n\r\nhttps://github.com/cython/cython/blob/b4671ba09dd69911dc979f15917bbb8a2d4bdc7b/Cython/Compiler/PyrexTypes.py#L3257-L3258\r\n\r\nTo check that `self.op_arg_struct` is not none:\r\n```python\r\nif self.optional_arg_count and self.op_arg_struct is not None:\r\n    arg_decl_list.append(self.op_arg_struct.declaration_code(Naming.optional_args_cname))\r\n```\r\n\r\nIn that case I can compile both the Cython file and the resulting C code succesfully, but maybe that's just a hotfix and it breaks things elswehere :shrug: .",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I wonder if there is some difference in the function signature introspection between CPython and PyPy that leads to the missing `op_arg_struct`. ",
            "created_at": "2023-08-04T10:08:23Z",
            "html_url": "https://github.com/cython/cython/issues/5588#issuecomment-1665363803",
            "id": 1665363803,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5588",
            "node_id": "IC_kwDOABDGAc5jQ29b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1665363803/reactions"
            },
            "updated_at": "2023-08-04T10:08:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1665363803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One thing I wonder (without having done any investigation or tried anything): is this a difference between \"Cython compiled to extension modules\" and \"Cython run as Python code\" rather than a difference between CPython and PyPy.\r\n\r\nThat'd seem more likely to me. Because at the point you hit this bug, the generated code should be completely independent of the Python version used to generate it.",
            "created_at": "2023-08-04T16:56:07Z",
            "html_url": "https://github.com/cython/cython/issues/5588#issuecomment-1665919987",
            "id": 1665919987,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5588",
            "node_id": "IC_kwDOABDGAc5jS-vz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1665919987/reactions"
            },
            "updated_at": "2023-08-04T16:56:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1665919987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I mean, I have Cython 3.0 installed for both CPython and PyPy; when I try to compile the same code (either with `python setup.py build_ext --inplace` or with `pypy3 setup.py build_ext --inplace`, both of which internally call `Cython.Build.cythonize`) I get the bug above with `pypy3` but not with `python`. That happened in CI as well, where only the PyPy builds were crashing.",
            "created_at": "2023-08-04T20:02:55Z",
            "html_url": "https://github.com/cython/cython/issues/5588#issuecomment-1666114976",
            "id": 1666114976,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5588",
            "node_id": "IC_kwDOABDGAc5jTuWg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1666114976/reactions"
            },
            "updated_at": "2023-08-04T20:03:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1666114976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8660647?v=4",
                "events_url": "https://api.github.com/users/althonos/events{/privacy}",
                "followers_url": "https://api.github.com/users/althonos/followers",
                "following_url": "https://api.github.com/users/althonos/following{/other_user}",
                "gists_url": "https://api.github.com/users/althonos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/althonos",
                "id": 8660647,
                "login": "althonos",
                "node_id": "MDQ6VXNlcjg2NjA2NDc=",
                "organizations_url": "https://api.github.com/users/althonos/orgs",
                "received_events_url": "https://api.github.com/users/althonos/received_events",
                "repos_url": "https://api.github.com/users/althonos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/althonos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/althonos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/althonos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just to explain my comment: the Cython wheels that we distribute for CPython are typically compiled with Cython themselves. The versions we distribute for PyPy typically aren't. I'm guessing that this is more likely to be the difference than PyPy itself.\r\n\r\nIt needs proper investigation though (and not asking you to do the investigation) - that is just a guess at this stage.",
            "created_at": "2023-08-04T23:56:44Z",
            "html_url": "https://github.com/cython/cython/issues/5588#issuecomment-1666288593",
            "id": 1666288593,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5588",
            "node_id": "IC_kwDOABDGAc5jUYvR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1666288593/reactions"
            },
            "updated_at": "2023-08-04T23:56:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1666288593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To try it out, you can download the pure Python wheel of Cython from PyPI and install it on CPython, then see if the build fails there, too. (There's also a pip option to avoid binary wheels, but I can't look that up right now.)\n",
            "created_at": "2023-08-05T05:02:40Z",
            "html_url": "https://github.com/cython/cython/issues/5588#issuecomment-1666391192",
            "id": 1666391192,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5588",
            "node_id": "IC_kwDOABDGAc5jUxyY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1666391192/reactions"
            },
            "updated_at": "2023-08-05T05:02:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1666391192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> To try it out, you can download the pure Python wheel of Cython from PyPI and install it on CPython, then see if the build fails there, too. (There's also a pip option to avoid binary wheels, but I can't look that up right now.)\r\n\r\nI tried this, and the CPython build was fine.\r\n\r\nAdditionally, I was able to confirm that this crash is only for PyPy 3.9 and prior, I'm not getting it with PyPy 3.10.",
            "created_at": "2023-08-05T12:34:14Z",
            "html_url": "https://github.com/cython/cython/issues/5588#issuecomment-1666493974",
            "id": 1666493974,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5588",
            "node_id": "IC_kwDOABDGAc5jVK4W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1666493974/reactions"
            },
            "updated_at": "2023-08-05T12:34:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1666493974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8660647?v=4",
                "events_url": "https://api.github.com/users/althonos/events{/privacy}",
                "followers_url": "https://api.github.com/users/althonos/followers",
                "following_url": "https://api.github.com/users/althonos/following{/other_user}",
                "gists_url": "https://api.github.com/users/althonos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/althonos",
                "id": 8660647,
                "login": "althonos",
                "node_id": "MDQ6VXNlcjg2NjA2NDc=",
                "organizations_url": "https://api.github.com/users/althonos/orgs",
                "received_events_url": "https://api.github.com/users/althonos/received_events",
                "repos_url": "https://api.github.com/users/althonos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/althonos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/althonos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/althonos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've at least got it down to a short reproducible example\r\n\r\nsomething.pxd\r\n```\r\nctypedef fused f1:\r\n    int\r\n    double\r\n\r\ncdef class C:\r\n    cpdef object xxx(self, f1 x, a=?)\r\n```\r\n\r\nsomething.pyx\r\n```\r\ncdef class C:\r\n    cpdef object xxx(self, f1 x, a=None):\r\n        return x+a\r\n\r\ndef call(C c, double x):\r\n    c.xxx(x)\r\n```\r\n\r\nand just build with `PYTHON cythonize.py -if something.pyx` where `PYTHON` is either pypy or CPython",
            "created_at": "2023-08-06T17:05:29Z",
            "html_url": "https://github.com/cython/cython/issues/5588#issuecomment-1666922373",
            "id": 1666922373,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5588",
            "node_id": "IC_kwDOABDGAc5jWzeF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1666922373/reactions"
            },
            "updated_at": "2023-08-06T17:05:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1666922373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "PyPy bug: https://foss.heptapod.net/pypy/pypy/-/issues/3978\r\n\r\nhttps://github.com/cython/cython/blob/6776c96f66fc799c62be4d6d4022903a5e36cbb2/Cython/Compiler/FusedNode.py#L201-L206\r\n\r\n`self.node.entry` isn't in a state where it can be printed. On CPython this doesn't matter. On PyPy it causes a failure while preparing the `ValueError` and thus you get a different exception.\r\n\r\nI'm going to leave this open here because what we have in Cython feels fragile. Maybe we should make it so that `CFuncType.declaration_code` can succeed (at least in `for_display` mode) even when `op_arg_struct` is None? Because being able to `print` things is useful. So I think there's useful cleanup to be done in Cython even if the bug isn't a Cython bug",
            "created_at": "2023-08-06T17:30:58Z",
            "html_url": "https://github.com/cython/cython/issues/5588#issuecomment-1666928527",
            "id": 1666928527,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5588",
            "node_id": "IC_kwDOABDGAc5jW0-P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1666928527/reactions"
            },
            "updated_at": "2023-08-06T17:30:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1666928527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5588/comments",
    "created_at": "2023-08-04T08:25:23Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-08-06T17:55:37Z",
            "event": "labeled",
            "id": 10017699796,
            "label": {
                "color": "444444",
                "name": "cleanup"
            },
            "node_id": "LE_lADOABDGAc5tc7uGzwAAAAJVGffU",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10017699796"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5588/events",
    "html_url": "https://github.com/cython/cython/issues/5588",
    "id": 1836301190,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558030,
            "name": "cleanup",
            "node_id": "MDU6TGFiZWw0MjU1NTgwMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/cleanup"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5588/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5tc7uG",
    "number": 5588,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5588/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5588/timeline",
    "title": "[BUG] PyPy-specific compiler crash in a function with fused types",
    "updated_at": "2023-08-06T17:55:37Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5588",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8660647?v=4",
        "events_url": "https://api.github.com/users/althonos/events{/privacy}",
        "followers_url": "https://api.github.com/users/althonos/followers",
        "following_url": "https://api.github.com/users/althonos/following{/other_user}",
        "gists_url": "https://api.github.com/users/althonos/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/althonos",
        "id": 8660647,
        "login": "althonos",
        "node_id": "MDQ6VXNlcjg2NjA2NDc=",
        "organizations_url": "https://api.github.com/users/althonos/orgs",
        "received_events_url": "https://api.github.com/users/althonos/received_events",
        "repos_url": "https://api.github.com/users/althonos/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/althonos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/althonos/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/althonos"
    }
}