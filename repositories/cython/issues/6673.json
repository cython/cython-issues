{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nThis code\n```\nargs = [1, 2, 3]\nbar(*args)\n```\nfails to compile with the error `Non-trivial keyword arguments and starred arguments not allowed in cdef functions.` But if the function is templated, it compiles with no error:\n```python\nargs = [1, 2, 3]\nbar[A](*args)\n```\n\n`bar` is a C++ function that may throw an exception. If it throws an exception, python crashes with `Fatal Python error: Aborted...`\n\nIf however I pass in the arguments normally, without destructuring, the exception handling works as expected:\n```python\nbar[A]([1, 2, 3])\n# >>> RuntimeError: Error!\n```\n\nMaybe this is a parsing error, and `bar[A](*args)` should be prevented from compiling, and so this is some undefined behavior?\n\nAlthough it's not clear to me it shouldn't work to destructure arguments - \"starred arguments not allowed in cdef functions\" sounds like it's referring to starred arguments in the function _definition_ e.g. `def bar(*args)`. Not clear why destructuring wouldn't be allowed in the function _invocation_.\n\n### Code to reproduce the behaviour:\n\n```c++\n// bar.h\nclass A {};\n\ntemplate<class T>\nvoid bar(int, int) {\n    throw std::runtime_error(\"Error!\");\n}\n```\n```cython\n# bar.pxd\ncdef extern from \"bar.h\":\n    cdef cppclass A\n    void bar[T](int, int) except +\n```\n```cython\n# foo.pyx\nfrom .bar cimport bar, A\ndef foo():\n    args = [1, 2]\n    bar[A](*args)\n\n```\n```python\n# test.py\nfrom . import foo\ndef test(*args):\n    foo.foo()\n```\n\n\n### Expected behaviour\n\nI expect that the code above should raise a python RuntimeError, but instead it crashes:\n```\n>>> from src import test\n>>> test.test()\nlibc++abi: terminating with uncaught exception of type std::runtime_error: Error!\nAbort trap: 6\n```\nOr alternatively if this is happening because destructuring args shouldn't be allowed here, I expect the compiler to indicate that.\n\n### OS\n\nmacOS\n\n### Python version\n\n3.12.8\n\n### Cython version\n\n3.0.12\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> This code\n> \n> ```\n> args = [1, 2, 3]\n> bar(*args)\n> ```\n> \n> fails to compile with the error `Non-trivial keyword arguments and starred arguments not allowed in cdef functions.`\n\nThis is the intended behaviour. With that said, it would be possible to make starred arguments work in some cases. But really, `cdef` functions aren't supposed to work with all the dynamic features of Python.\n\n> ```\n> args = [1, 2]\n> bar[A](*args)\n> ```\n\nThis is actually doing something really odd. It's creating an automatic Python object wrapping of bar and calling that.\n\n```\n__pyx_t_1 = __Pyx_CFunc_void__lParenint__comma_int__rParenexcept__2B_to_py_0_0(bar<A>); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 11, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __pyx_t_4 = PySequence_Tuple(__pyx_v_args); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 11, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 11, __pyx_L1_error)\n```\n\nSo the \"real\" bug that I think needs fixing is that the automatic Python object wrapping isn't handling the exception correctly.\n\nWe also probably shouldn't do the auto-conversion in this case, because it most likely isn't what you intended - I'm increasingly not a fan of these auto-conversions in most cases.",
            "created_at": "2025-02-15T10:39:07Z",
            "html_url": "https://github.com/cython/cython/issues/6673#issuecomment-2660864354",
            "id": 2660864354,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6673",
            "node_id": "IC_kwDOABDGAc6emZFi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2660864354/reactions"
            },
            "updated_at": "2025-02-15T10:39:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2660864354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6673/comments",
    "created_at": "2025-02-14T23:00:59Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6673/events",
    "html_url": "https://github.com/cython/cython/issues/6673",
    "id": 2854843922,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6673/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6qKXYS",
    "number": 6673,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6673/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6673/timeline",
    "title": "[BUG] Destructuring argument list of templated function breaks exception handling",
    "updated_at": "2025-02-15T10:39:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6673",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/43770515?v=4",
        "events_url": "https://api.github.com/users/emlys/events{/privacy}",
        "followers_url": "https://api.github.com/users/emlys/followers",
        "following_url": "https://api.github.com/users/emlys/following{/other_user}",
        "gists_url": "https://api.github.com/users/emlys/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/emlys",
        "id": 43770515,
        "login": "emlys",
        "node_id": "MDQ6VXNlcjQzNzcwNTE1",
        "organizations_url": "https://api.github.com/users/emlys/orgs",
        "received_events_url": "https://api.github.com/users/emlys/received_events",
        "repos_url": "https://api.github.com/users/emlys/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/emlys/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/emlys/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/emlys",
        "user_view_type": "public"
    }
}