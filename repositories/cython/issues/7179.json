{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\n\nIn my code, I would like to do \n```cython\ncdef packed class ClassName:\n```\n\nWe have cdef packed struct and I have set up a cdef class as wrapper around one, to great effect. But it requires a bunch of manual handling on my end, plus I want to apply it to several classes, preferably easily so I can benchmark the changes.\nIn my limited testing with the one class I adjusted manually, memory use went down as expected and I was unable to measure a performance difference.\n\nSo I'd like to request the ability to define a cython cdef class as packed, so that the underlying struct is packed as well.\n\n\n### Describe the solution you'd like.\n\n_No response_\n\n### Describe alternatives you've considered.\n\n_No response_\n\n### Additional context\n\n_No response_",
    "closed_at": "2025-10-01T06:58:23Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. I don't think we can easily make this work because Python's object header is part of the struct. It probably won't change due to packing, but there is no guarantee for that. Supporting packed object structs for cdef classes bares a certain risk of breaking them in future Python versions or other implementations.\n\nWhat you could do is to use a packed struct as an attribute of the cdef class to store all non-Python attributes (or only those that seem worth packing). You don't need to include Python objects since they are pointers and won't benefit from packing (and you actually cannot include them in a struct in Cython due to their reference counting). But that seems a simple enough solution to me.\n",
            "created_at": "2025-10-01T04:57:27Z",
            "html_url": "https://github.com/cython/cython/issues/7179#issuecomment-3354744766",
            "id": 3354744766,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7179",
            "node_id": "IC_kwDOABDGAc7H9Ve-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3354744766/reactions"
            },
            "updated_at": "2025-10-01T04:57:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3354744766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Thanks for the report. I don't think we can easily make this work because Python's object header is part of the struct. \n\nIt's slightly hard to reason about because it's a nonstandard compiler extension. However, it doesn't look like the packed attribute applies to substructures. So I don't think it should affect the current definition of `PyObject_HEAD` at least.",
            "created_at": "2025-10-01T06:15:26Z",
            "html_url": "https://github.com/cython/cython/issues/7179#issuecomment-3354897524",
            "id": 3354897524,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7179",
            "node_id": "IC_kwDOABDGAc7H96x0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3354897524/reactions"
            },
            "updated_at": "2025-10-01T06:15:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3354897524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think it should affect the current definition of `PyObject_HEAD`\n\nRight, probably not. However, it's CPython's decision how it wants to express that header and I'd rather not interfere with that. I think going the other way and injecting a packed struct into the object struct as a regular struct field is a much simpler and safer solution that can be used right now.",
            "created_at": "2025-10-01T06:58:23Z",
            "html_url": "https://github.com/cython/cython/issues/7179#issuecomment-3354998662",
            "id": 3354998662,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7179",
            "node_id": "IC_kwDOABDGAc7H-TeG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3354998662/reactions"
            },
            "updated_at": "2025-10-01T06:58:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3354998662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7179/comments",
    "created_at": "2025-09-30T20:16:02Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-10-01T06:58:23Z",
            "event": "closed",
            "id": 20026704375,
            "node_id": "CE_lADOABDGAc7O4mmjzwAAAASpr0H3",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "url": "https://api.github.com/repos/cython/cython/issues/events/20026704375"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7179/events",
    "html_url": "https://github.com/cython/cython/issues/7179",
    "id": 3470944675,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7179/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7O4mmj",
    "number": 7179,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7179/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7179/timeline",
    "title": "[ENH] cdef packed class",
    "type": null,
    "updated_at": "2025-10-01T06:58:23Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7179",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3189725?v=4",
        "events_url": "https://api.github.com/users/Berserker66/events{/privacy}",
        "followers_url": "https://api.github.com/users/Berserker66/followers",
        "following_url": "https://api.github.com/users/Berserker66/following{/other_user}",
        "gists_url": "https://api.github.com/users/Berserker66/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Berserker66",
        "id": 3189725,
        "login": "Berserker66",
        "node_id": "MDQ6VXNlcjMxODk3MjU=",
        "organizations_url": "https://api.github.com/users/Berserker66/orgs",
        "received_events_url": "https://api.github.com/users/Berserker66/received_events",
        "repos_url": "https://api.github.com/users/Berserker66/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Berserker66/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Berserker66/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Berserker66",
        "user_view_type": "public"
    }
}