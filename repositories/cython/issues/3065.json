{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Hello up there. Please consider the following example:\r\n\r\n---- 8< ---- (`y.pyx`)\r\n```cython\r\n# cython: language_level=2\r\n# distutils: language=c++\r\n\r\ncdef extern from *:\r\n    \"\"\"\r\n    #include <exception>\r\n    void ggg() {\r\n        throw std::bad_alloc();\r\n    }\r\n    \"\"\"\r\n    void ggg()\r\n\r\ncdef void fff() except *:\r\n    raise RuntimeError('aaa')\r\n\r\ncdef void hhh() except +*:\r\n    fff()\r\n    ggg()\r\n\r\ndef aaa():\r\n    hhh()\r\n```\r\n\r\nExplanation:\r\n- `ggg` throws C++ exception and is _not_ marked with `except +` -- thus functions that calls `ggg` may throw C++ exception themselves;\r\n- `fff` raises Python exception but returns void. It thus is marked with `except *` for its caller to check whether Python exception occurred.\r\n- `hhh` calls both `fff` and `ggg`. It thus may raise either Python exception (from `fff`) or C++ exception (from `ggg`). `hhh` is thus marked as `except +*`.\r\n\r\nWhen trying to cythonize `y.pyx`, it gives:\r\n\r\n```\r\n/home/kirr/tmp/trashme/pyx/y.cpp: In function ‘void __pyx_f_1y_hhh()’:\r\n/home/kirr/tmp/trashme/pyx/y.cpp:1189:3: error: ‘__pyx_r’ was not declared in this scope\r\n   __pyx_r = <Cython.Compiler.ExprNodes.CharNode object at 0x7f8e76e20810>;\r\n   ^~~~~~~\r\n/home/kirr/tmp/trashme/pyx/y.cpp:1189:3: note: suggested alternative: ‘__pyx_f’\r\n   __pyx_r = <Cython.Compiler.ExprNodes.CharNode object at 0x7f8e76e20810>;\r\n   ^~~~~~~\r\n   __pyx_f\r\n/home/kirr/tmp/trashme/pyx/y.cpp:1189:13: error: expected primary-expression before ‘<’ token\r\n   __pyx_r = <Cython.Compiler.ExprNodes.CharNode object at 0x7f8e76e20810>;\r\n             ^\r\n/home/kirr/tmp/trashme/pyx/y.cpp:1189:14: error: ‘Cython’ was not declared in this scope\r\n   __pyx_r = <Cython.Compiler.ExprNodes.CharNode object at 0x7f8e76e20810>;\r\n              ^~~~~~\r\n/home/kirr/tmp/trashme/pyx/y.cpp: In function ‘PyObject* __pyx_pf_1y_aaa(PyObject*)’:\r\n/home/kirr/tmp/trashme/pyx/y.cpp:1229:5: error: ‘__Pyx_CppExn2PyErr’ was not declared in this scope\r\n     __Pyx_CppExn2PyErr();\r\n     ^~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nWith the following code generated for `hhh`:\r\n\r\n```c\r\nstatic void __pyx_f_1y_hhh(void) {\r\n  __Pyx_RefNannyDeclarations\r\n  __Pyx_RefNannySetupContext(\"hhh\", 0);\r\n\r\n  /* \"y.pyx\":17\r\n * \r\n * cdef void hhh() except +*:\r\n *     fff()             # <<<<<<<<<<<<<<\r\n *     ggg()\r\n * \r\n */\r\n  __pyx_f_1y_fff(); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 17, __pyx_L1_error)\r\n\r\n  /* \"y.pyx\":18\r\n * cdef void hhh() except +*:\r\n *     fff()\r\n *     ggg()             # <<<<<<<<<<<<<<\r\n * \r\n * def aaa():\r\n */\r\n  ggg();\r\n\r\n  /* \"y.pyx\":16\r\n *     raise RuntimeError('aaa')\r\n * \r\n * cdef void hhh() except +*:             # <<<<<<<<<<<<<<\r\n *     fff()\r\n *     ggg()\r\n */\r\n\r\n  /* function exit code */\r\n  goto __pyx_L0;\r\n  __pyx_L1_error:;\r\n  __Pyx_AddTraceback(\"y.hhh\", __pyx_clineno, __pyx_lineno, __pyx_filename);\r\n  __pyx_r = <Cython.Compiler.ExprNodes.CharNode object at 0x7f8e76e20810>;\r\n  __pyx_L0:;\r\n  __Pyx_RefNannyFinishContext();\r\n}\r\n```\r\n\r\nNotice the `__pyx_r = <Cython.Compiler.ExprNodes.CharNode object at 0x7f8e76e20810>;` line.\r\n\r\nCython version: `0.29.13-514-gac1c9fe47` (today's master).\r\n\r\nThanks beforehand,\r\nKirill",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "https://github.com/cython/cython/issues/3064 is different, but probably related.",
            "created_at": "2019-08-01T17:29:14Z",
            "html_url": "https://github.com/cython/cython/issues/3065#issuecomment-517383852",
            "id": 517383852,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzM4Mzg1Mg==",
            "performed_via_github_app": null,
            "updated_at": "2019-08-01T17:29:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/517383852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
                "events_url": "https://api.github.com/users/navytux/events{/privacy}",
                "followers_url": "https://api.github.com/users/navytux/followers",
                "following_url": "https://api.github.com/users/navytux/following{/other_user}",
                "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/navytux",
                "id": 1794248,
                "login": "navytux",
                "node_id": "MDQ6VXNlcjE3OTQyNDg=",
                "organizations_url": "https://api.github.com/users/navytux/orgs",
                "received_events_url": "https://api.github.com/users/navytux/received_events",
                "repos_url": "https://api.github.com/users/navytux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/navytux"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Running into this as well. My current work around for this issue is the following dummy function:\r\n```python\r\ncdef dummy() except +:\r\n    dummy()\r\n```\r\nwhich tricks cython into generating\r\n\r\n```\r\n/* CppExceptionConversion.proto */\r\n#ifndef __Pyx_CppExn2PyErr\r\n#include <new>\r\n#include <typeinfo>\r\n#include <stdexcept>\r\n#include <ios>\r\nstatic void __Pyx_CppExn2PyErr() {\r\n  try {\r\n    if (PyErr_Occurred())\r\n      ; // let the latest Python exn pass through and ignore the current one\r\n    else\r\n      throw;\r\n  } catch (const std::bad_alloc& exn) {\r\n    PyErr_SetString(PyExc_MemoryError, exn.what());\r\n  } catch (const std::bad_cast& exn) {\r\n    PyErr_SetString(PyExc_TypeError, exn.what());\r\n  } catch (const std::bad_typeid& exn) {\r\n    PyErr_SetString(PyExc_TypeError, exn.what());\r\n  } catch (const std::domain_error& exn) {\r\n    PyErr_SetString(PyExc_ValueError, exn.what());\r\n  } catch (const std::invalid_argument& exn) {\r\n    PyErr_SetString(PyExc_ValueError, exn.what());\r\n  } catch (const std::ios_base::failure& exn) {\r\n    PyErr_SetString(PyExc_IOError, exn.what());\r\n  } catch (const std::out_of_range& exn) {\r\n    PyErr_SetString(PyExc_IndexError, exn.what());\r\n  } catch (const std::overflow_error& exn) {\r\n    PyErr_SetString(PyExc_OverflowError, exn.what());\r\n  } catch (const std::range_error& exn) {\r\n    PyErr_SetString(PyExc_ArithmeticError, exn.what());\r\n  } catch (const std::underflow_error& exn) {\r\n    PyErr_SetString(PyExc_ArithmeticError, exn.what());\r\n  } catch (const std::exception& exn) {\r\n    PyErr_SetString(PyExc_RuntimeError, exn.what());\r\n  }\r\n  catch (...)\r\n  {\r\n    PyErr_SetString(PyExc_RuntimeError, \"Unknown exception\");\r\n  }\r\n}\r\n#endif\r\n```\r\n",
            "created_at": "2021-02-21T07:39:27Z",
            "html_url": "https://github.com/cython/cython/issues/3065#issuecomment-782814777",
            "id": 782814777,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjgxNDc3Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-21T07:39:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/782814777",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Looking at the original, only `cdef extern` functions should be `except +`. It definitely isn't safe to let C++ exceptions propagate through Cython-generated code. Therefore `ggg` should be `except+` and `hhh` is `except *`.\r\n\r\nIt looks like there's somewhere that doesn't generate the correct utility code though... I'm not sure if that's because the assume that a Cython-defined function can't be `except +` (in which case we need to enforce it with an error message) or if the issue is elsewhere",
            "created_at": "2021-02-21T07:52:51Z",
            "html_url": "https://github.com/cython/cython/issues/3065#issuecomment-782816081",
            "id": 782816081,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjgxNjA4MQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-21T07:52:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/782816081",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "In my case I have C++ functions, that can throw exceptions or have an error set from e.g. PyUnicode_READY.\r\n```python\r\ncdef extern from \"example.hpp\":\r\n    double func1(...) except +*\r\n    double func2() except +*\r\n```\r\nit was also not enough to add a dummy function in the C++ code\r\n```python\r\ncdef extern from \"example.hpp\":\r\n    double func1(...) except +*\r\n    double func2() except +*\r\n    dummy except +\r\n```\r\napparently it only generates the code when the function is actually called",
            "created_at": "2021-02-21T08:07:19Z",
            "html_url": "https://github.com/cython/cython/issues/3065#issuecomment-782817650",
            "id": 782817650,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjgxNzY1MA==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-21T08:09:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/782817650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Thanks @maxbachmann - that's a useful clarification",
            "created_at": "2021-02-21T08:10:26Z",
            "html_url": "https://github.com/cython/cython/issues/3065#issuecomment-782817968",
            "id": 782817968,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjgxNzk2OA==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-21T08:10:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/782817968",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3065/comments",
    "created_at": "2019-08-01T17:28:35Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-02-21T08:10:26Z",
            "event": "mentioned",
            "id": 4356094149,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDM1NjA5NDE0OQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4356094149"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-02-21T08:10:26Z",
            "event": "subscribed",
            "id": 4356094151,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzNTYwOTQxNTE=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4356094151"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": "64a20f542f13598096c0de221eab520fa34b8cfb",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/64a20f542f13598096c0de221eab520fa34b8cfb",
            "created_at": "2021-02-21T09:58:59Z",
            "event": "referenced",
            "id": 4356173322,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNTYxNzMzMjI=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4356173322"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-24T11:42:37Z",
            "event": "milestoned",
            "id": 4786246785,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDQ3ODYyNDY3ODU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4786246785"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-24T11:42:44Z",
            "event": "labeled",
            "id": 4786247229,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3ODYyNDcyMjk=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4786247229"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-24T11:42:44Z",
            "event": "labeled",
            "id": 4786247230,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3ODYyNDcyMzA=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4786247230"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3065/events",
    "html_url": "https://github.com/cython/cython/issues/3065",
    "id": 475802395,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3065/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 380,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 27,
        "state": "open",
        "title": "3.0",
        "updated_at": "2021-05-24T13:57:52Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU0NzU4MDIzOTU=",
    "number": 3065,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Bad code generated for `except +*` function",
    "updated_at": "2021-05-24T11:42:44Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3065",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
        "events_url": "https://api.github.com/users/navytux/events{/privacy}",
        "followers_url": "https://api.github.com/users/navytux/followers",
        "following_url": "https://api.github.com/users/navytux/following{/other_user}",
        "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/navytux",
        "id": 1794248,
        "login": "navytux",
        "node_id": "MDQ6VXNlcjE3OTQyNDg=",
        "organizations_url": "https://api.github.com/users/navytux/orgs",
        "received_events_url": "https://api.github.com/users/navytux/received_events",
        "repos_url": "https://api.github.com/users/navytux/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/navytux"
    }
}