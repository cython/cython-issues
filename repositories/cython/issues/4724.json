{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "**Describe the bug**\r\nImporting `Cython` before `setuptools` causes the `isinstance` check in [`distutils.command.check_extensions_list`](https://github.com/python/cpython/blob/a43fd45918cef48187053d7c56d3b9bb902151d0/Lib/distutils/command/build_ext.py#L342) to fail because [`setuptools` overrides the `distutils.extension.Extension` class](https://github.com/pypa/setuptools/blob/e5552d3c42eddc463788861ae4c8847183eeec1c/setuptools/extension.py#L30).\r\n\r\n[PEP 8](https://peps.python.org/pep-0008/#imports) code formatters (e.g. `black`, `isort`) sort imports alphabetically. Alphabetization is not a requirement of PEP 8, but added in these formatters for enhanced readability. To date, there are no easy ways (e.g. in vscode `settings.json`) to not format specific files. Particularly if auto-formatting on save, this makes checking in code problematic because it is not immediately apparent why the code breaks after being saved.\r\n\r\nThe earliest similar issue related to this one is [#1507](https://github.com/cython/cython/issues/1507), however this was concerning Cython 0.25.1 and this issue exists (at least in) Cython 0.28.29. \r\n\r\n**MRE (Minimal Reproducible Example):**\r\n\r\n```cython\r\nfrom Cython.Build import cythonize\r\nfrom setuptools import find_packages, setup\r\n\r\next_modules = cythonize(\r\n    module_list=\"*.pyx\",\r\n    language_level=3,\r\n)\r\n\r\nsetup(\r\n    name=\"my_ext_module\",\r\n    version=\"0.1.0\",\r\n    ext_modules=ext_modules,\r\n    zip_safe=False,\r\n    package=find_packages(),\r\n)\r\n```\r\n\r\n**Output:**\r\n\r\n```bash\r\n> py setup.py build_ext -i\r\nrunning build_ext\r\nerror: each element of 'ext_modules' option must be an Extension instance or 2-tuple\r\n```\r\n\r\n**Temporary Fix:**\r\n```cython\r\n# setuptools must be imported before Cython\r\nfrom setuptools import find_packages, setup\r\nfrom Cython.Build import cythonize\r\n\r\n...\r\n```\r\n\r\nAlternatively, re-monkeypatching `distutils.extension.Extension` in `setup.py` has been done to solve this same issue in the [`pyvision` project](https://github.com/cvondrick/pyvision/commit/07604f4445683365c5bee57a2276aebe05c244d4):\r\n\r\n```cython\r\nfrom distutils.extension import Extension as _Extension\r\nfrom setuptools import setup \r\ndistutils.extension.Extension = _Extension\r\ndistutils.command.build_ext.Extension = _Extension\r\nExtension = _Extension\r\nfrom Cython.Distutils import build_ext \r\n\r\n...\r\n```\r\n\r\n**Expected behavior**\r\nCython `cythonize` properly compiles extension modules regardless of import order w.r.t `setuptools`.\r\n\r\n**Environment:**  \r\n - OS: Windows 10\r\n - Python: 3.8.10 (64-bit)\r\n - Cython: 0.29.28\r\n\r\n**Additional context**\r\nTurning off code formatting makes checking in code in larger project problematic. Without in-depth knowledge of `setuptools` and `distutils`, the error message returned by `setuptools` is confusing and does not help in fixing the actual problem.\r\n\r\nIMO, relying on import order defeats many of the reason to have modules in python at all (and is not a full-proof solution):\r\n\r\n- `cpython` modules are source files compiled independently of the translation units that import them\r\n- an imported module should have no effect on the compilation of the translation unit that imports the module\r\n- you should be able to import modules in any order without concern for redefinition of module items\r\n\r\n \r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4724/comments",
    "created_at": "2022-04-07T16:49:36Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59346180?v=4",
                "events_url": "https://api.github.com/users/adam-grant-hendry/events{/privacy}",
                "followers_url": "https://api.github.com/users/adam-grant-hendry/followers",
                "following_url": "https://api.github.com/users/adam-grant-hendry/following{/other_user}",
                "gists_url": "https://api.github.com/users/adam-grant-hendry/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/adam-grant-hendry",
                "id": 59346180,
                "login": "adam-grant-hendry",
                "node_id": "MDQ6VXNlcjU5MzQ2MTgw",
                "organizations_url": "https://api.github.com/users/adam-grant-hendry/orgs",
                "received_events_url": "https://api.github.com/users/adam-grant-hendry/received_events",
                "repos_url": "https://api.github.com/users/adam-grant-hendry/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/adam-grant-hendry/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adam-grant-hendry/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/adam-grant-hendry"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-04-07T16:54:29Z",
            "event": "renamed",
            "id": 6390266256,
            "node_id": "RTE_lADOABDGAc5HTlrEzwAAAAF847mQ",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] `check_extensions_lists` Fails `isintance` Check Depending on Import Order",
                "to": "[BUG] `check_extensions_lists` Fails `isinstance` Check Depending on Import Order"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/6390266256"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4724/events",
    "html_url": "https://github.com/cython/cython/issues/4724",
    "id": 1196317380,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4724/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5HTlrE",
    "number": 4724,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4724/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4724/timeline",
    "title": "[BUG] `check_extensions_lists` Fails `isinstance` Check Depending on Import Order",
    "updated_at": "2022-04-07T16:54:29Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4724",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/59346180?v=4",
        "events_url": "https://api.github.com/users/adam-grant-hendry/events{/privacy}",
        "followers_url": "https://api.github.com/users/adam-grant-hendry/followers",
        "following_url": "https://api.github.com/users/adam-grant-hendry/following{/other_user}",
        "gists_url": "https://api.github.com/users/adam-grant-hendry/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adam-grant-hendry",
        "id": 59346180,
        "login": "adam-grant-hendry",
        "node_id": "MDQ6VXNlcjU5MzQ2MTgw",
        "organizations_url": "https://api.github.com/users/adam-grant-hendry/orgs",
        "received_events_url": "https://api.github.com/users/adam-grant-hendry/received_events",
        "repos_url": "https://api.github.com/users/adam-grant-hendry/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adam-grant-hendry/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adam-grant-hendry/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adam-grant-hendry"
    }
}