{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nFor an inline function defined in a pxd file, the coverage of the initial line, which is generated during the initialization of the module, attributes it to the pyx file that uses the pxd file, rather than to the pxd file. (See example below).\n\n### Code to reproduce the behaviour:\n\n`mod.pxd`\r\n```cython\r\n# cython: language_level=3\r\n\r\ncpdef inline function_pxd():\r\n    pass\r\n```\r\n\r\n`mod.pyx`\r\n```cython\r\n# cython: language_level=3\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncpdef function_pyx():\r\n    pass\r\n```\r\n The empty lines here are to make sure there isn't any overlapping valid line numbers between the pyx and the pxd file.\r\n\r\nCompiled using `cython -X linetrace=True mod.pyx; gcc -ggdb3 -O0 -DCYTHON_TRACE_NOGIL=1 -DCYTHON_TRACE=1 mod.c -shared -fPIC -o mod.so -I/usr/include/python3.12` and generated a coverage report with the following script, (with cython plugin loaded)\r\n\r\n```python\r\nimport mod\r\n\r\nmod.function_pyx()\r\nmod.function_pxd()\r\n```\r\n\r\nThe coverage sqlite db file shows a lines bit of `\\x0a\\x00\\x00\\x04` for the pyx file (which decodes to 1, 3, 26) and empty for the pxd file. Note that line 3 is completely empty for the pyx and it is actually the cpdef line for the pxd function.\r\n\r\nThe reason behind this is that in the generate C code, there's\r\n\r\n```c\r\n  __Pyx_TraceCall(\"__Pyx_PyMODINIT_FUNC PyInit_mod(void)\", __pyx_f[1], 1, 0, __PYX_ERR(1, 1, __pyx_L1_error));\r\n\r\n  /* \"mod.pxd\":3\r\n * # cython: language_level=3\r\n * \r\n * cpdef inline function_pxd():             # <<<<<<<<<<<<<<\r\n *     pass\r\n */\r\n  __Pyx_TraceLine(3,0,__PYX_ERR(0, 3, __pyx_L1_error))\r\n\r\n  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3mod_1function_pxd, 0, __pyx_n_s_function_pxd, NULL, __pyx_n_s_mod, __pyx_d, ((PyObject *)__pyx_codeobj_)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_2);\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_function_pxd, __pyx_t_2) < 0) __PYX_ERR(0, 3, __pyx_L1_error)\r\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n\r\n  /* \"mod.pyx\":26\r\n * \r\n * \r\n * cpdef function_pyx():             # <<<<<<<<<<<<<<\r\n *     pass\r\n */\r\n  __Pyx_TraceLine(26,0,__PYX_ERR(1, 26, __pyx_L1_error))\r\n```\r\n\r\nwhere the file name table is defined as,\r\n```c\r\nstatic const char *__pyx_f[] = {\r\n  \"mod.pxd\",\r\n  \"mod.pyx\",\r\n};\r\n```\r\n\r\nWe can see that the call context was set up (by `__Pyx_TraceCall`) to be part of the pyx file (i.e. `__pyx_f[1]`) and the pxd file line number is used in this context without any change of file name context. Maybe a \"dummy\" init function should be generated for each of the pxd files that's included/used?\n\n### Expected behaviour\n\nLine 3 should be reported as being covered in the pxd file and not pyx file.\n\n### OS\n\nLinux\n\n### Python version\n\n3.12.3\n\n### Cython version\n\n3.0.10\n\n### Additional context\n\nThis effect also show up for pxd files cimported into another pxd/pyx file.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "And indeed, manually creating a new context by editing the c code like this fixes the issue,\r\n\r\n```c\r\n  {\r\n  __Pyx_TraceDeclarations\r\n  __Pyx_TraceCall(\"__Pyx_PyMODINIT_FUNC PyInit_mod(void)\", __pyx_f[0], 1, 0, __PYX_ERR(1, 1, __pyx_L1_error));\r\n\r\n  /* \"mod.pxd\":3\r\n * # cython: language_level=3\r\n * \r\n * cpdef inline function_pxd():             # <<<<<<<<<<<<<<\r\n *     pass\r\n */\r\n  __Pyx_TraceLine(3,0,__PYX_ERR(0, 3, __pyx_L1_error))\r\n\r\n  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3mod_1function_pxd, 0, __pyx_n_s_function_pxd, NULL, __pyx_n_s_mod, __pyx_d, ((PyObject *)__pyx_codeobj_)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_2);\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_function_pxd, __pyx_t_2) < 0) __PYX_ERR(0, 3, __pyx_L1_error)\r\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n  }\r\n\r\n  __Pyx_TraceCall(\"__Pyx_PyMODINIT_FUNC PyInit_mod(void)\", __pyx_f[1], 1, 0, __PYX_ERR(1, 1, __pyx_L1_error));\r\n  /* \"mod.pyx\":26\r\n * \r\n * \r\n * cpdef function_pyx():             # <<<<<<<<<<<<<<\r\n *     pass\r\n */\r\n  __Pyx_TraceLine(26,0,__PYX_ERR(1, 26, __pyx_L1_error))\r\n\r\n  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_3mod_3function_pyx, 0, __pyx_n_s_function_pyx, NULL, __pyx_n_s_mod, __pyx_d, ((PyObject *)__pyx_codeobj__2)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 26, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_2);\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_function_pyx, __pyx_t_2) < 0) __PYX_ERR(1, 26, __pyx_L1_error)\r\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n```\r\n\r\nThe coverage report is now `[1, 26]` for the pyx file (where 1 is the module initialization and the 26 is the pyx function initialization) and `[3]` for the pxd file (initialization of the pxd function).\r\n",
            "created_at": "2024-07-19T05:27:04Z",
            "html_url": "https://github.com/cython/cython/issues/6295#issuecomment-2238222329",
            "id": 2238222329,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6295",
            "node_id": "IC_kwDOABDGAc6FaI_5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2238222329/reactions"
            },
            "updated_at": "2024-07-19T05:27:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2238222329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/712232?v=4",
                "events_url": "https://api.github.com/users/yuyichao/events{/privacy}",
                "followers_url": "https://api.github.com/users/yuyichao/followers",
                "following_url": "https://api.github.com/users/yuyichao/following{/other_user}",
                "gists_url": "https://api.github.com/users/yuyichao/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yuyichao",
                "id": 712232,
                "login": "yuyichao",
                "node_id": "MDQ6VXNlcjcxMjIzMg==",
                "organizations_url": "https://api.github.com/users/yuyichao/orgs",
                "received_events_url": "https://api.github.com/users/yuyichao/received_events",
                "repos_url": "https://api.github.com/users/yuyichao/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yuyichao/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yuyichao/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yuyichao"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ahh, seems that this is https://github.com/cython/cython/issues/2882",
            "created_at": "2024-07-19T05:57:46Z",
            "html_url": "https://github.com/cython/cython/issues/6295#issuecomment-2238256890",
            "id": 2238256890,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6295",
            "node_id": "IC_kwDOABDGAc6FaRb6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2238256890/reactions"
            },
            "updated_at": "2024-07-19T05:57:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2238256890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/712232?v=4",
                "events_url": "https://api.github.com/users/yuyichao/events{/privacy}",
                "followers_url": "https://api.github.com/users/yuyichao/followers",
                "following_url": "https://api.github.com/users/yuyichao/following{/other_user}",
                "gists_url": "https://api.github.com/users/yuyichao/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yuyichao",
                "id": 712232,
                "login": "yuyichao",
                "node_id": "MDQ6VXNlcjcxMjIzMg==",
                "organizations_url": "https://api.github.com/users/yuyichao/orgs",
                "received_events_url": "https://api.github.com/users/yuyichao/received_events",
                "repos_url": "https://api.github.com/users/yuyichao/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yuyichao/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yuyichao/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yuyichao"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6295/comments",
    "created_at": "2024-07-19T05:17:16Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6295/events",
    "html_url": "https://github.com/cython/cython/issues/6295",
    "id": 2417924058,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6295/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6QHpfa",
    "number": 6295,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6295/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6295/timeline",
    "title": "[BUG] Coverage for the signature line of inline cdef/cpdef function in pxd file got attributed to the wrong file",
    "updated_at": "2024-07-19T05:57:47Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6295",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/712232?v=4",
        "events_url": "https://api.github.com/users/yuyichao/events{/privacy}",
        "followers_url": "https://api.github.com/users/yuyichao/followers",
        "following_url": "https://api.github.com/users/yuyichao/following{/other_user}",
        "gists_url": "https://api.github.com/users/yuyichao/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yuyichao",
        "id": 712232,
        "login": "yuyichao",
        "node_id": "MDQ6VXNlcjcxMjIzMg==",
        "organizations_url": "https://api.github.com/users/yuyichao/orgs",
        "received_events_url": "https://api.github.com/users/yuyichao/received_events",
        "repos_url": "https://api.github.com/users/yuyichao/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yuyichao/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yuyichao/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yuyichao"
    }
}