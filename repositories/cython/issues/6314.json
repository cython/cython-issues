{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nIn my code, I would like to do [...]\r\n```cython\r\nif cython.compiled:\r\n    cython.eval(\"typedef const int a\")\r\nelse:\r\n    a = int\r\n```\r\n\r\n### Describe the solution you'd like.\r\n\r\nI think that this way, one can \"close the gap\" between the Pure Python mode and the regular mode, without waiting for every feature to be implemented, and without duplicating stuff with a `.pxd` file. The rest of the features can be added incrementally. \r\n\r\nThis is similar in principle to `cdef extern from *: \"\"\" .... \"\"\"` which is used to allow writing C code that can not be otherwise used in Cython.\r\n\r\n### Describe alternatives you've considered.\r\n\r\nOne can use a `.pxd` file in some cases. \r\nOther option is maybe to use hints:\r\n```a: cython.literal(\"typedef const int a\") = int```\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I quite like the basic idea. However:\r\n\r\n1. I think it needs to be as restrictive as possible (really just from an ease of implementation point of view)\r\n2. The name `eval` kind of implies that the code should do something when run in Python - I think we'd want a less generic name.\r\n\r\nI'd propose having `cython.type_definitions` in place of `eval`. And restrict it to type definitions and `cdef` definitions with no executable code allowed. (I guess it's debatable whether you might want a *whole* function definition to be allowed...)\r\n\r\n`cython.literal` also sounds fairly useful to me - I think I'd go for `a: cython.literal(\"const int\")` and drop the `typedef` and variable name from what you've written. We do already allow some strings in annotations to be used for typing, but they're discouraged and I'm not sure exactly what rules are applied to them. This makes it more explicit.\r\n\r\nI think we do need to be careful because allowing things like:\r\n\r\n```\r\ndef f():\r\n   cython.eval(\"yield\")\r\n```\r\n\r\nwould definitely mess up the current implementation (just based on when the `yield` is processed vs when compiler directives are evaluated).",
            "created_at": "2024-07-30T17:49:26Z",
            "html_url": "https://github.com/cython/cython/issues/6314#issuecomment-2258890491",
            "id": 2258890491,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6314",
            "node_id": "IC_kwDOABDGAc6Go-77",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2258890491/reactions"
            },
            "updated_at": "2024-07-30T17:49:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2258890491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "@da-woods I'm glad that you like my idea. I also like `literal` better, but I came up with it in the end of the description, and forgot to update the previous sections.\r\n\r\nUnlike you, I think that the usage of this should be as permissive as technically possible. The reason for this is twofold:\r\n1. Why would you care if someone did something bad? The use of this should be limited (not restricted) to cases when you generally don't have another option, and you don't want to start writing your Pure Python Cython code from scratch in the Cython syntax. \r\n2. The documentation, capabilities and examples over the Internet of the Pure Python mode are not nearly as comprehensive as the Cython-syntax mode. Suppose you find some code that works in the docs or over the net, you should be able to \"inject\" it as is (with minimal tweaking) even in the Pure Python mode.\r\n\r\nRegardless of what you guys decide on what I just wrote, I hope that this feature will be implemented in the future.",
            "created_at": "2024-07-30T20:03:33Z",
            "html_url": "https://github.com/cython/cython/issues/6314#issuecomment-2259114904",
            "id": 2259114904,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6314",
            "node_id": "IC_kwDOABDGAc6Gp1uY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2259114904/reactions"
            },
            "updated_at": "2024-07-30T20:04:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2259114904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4324329?v=4",
                "events_url": "https://api.github.com/users/erezinman/events{/privacy}",
                "followers_url": "https://api.github.com/users/erezinman/followers",
                "following_url": "https://api.github.com/users/erezinman/following{/other_user}",
                "gists_url": "https://api.github.com/users/erezinman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/erezinman",
                "id": 4324329,
                "login": "erezinman",
                "node_id": "MDQ6VXNlcjQzMjQzMjk=",
                "organizations_url": "https://api.github.com/users/erezinman/orgs",
                "received_events_url": "https://api.github.com/users/erezinman/received_events",
                "repos_url": "https://api.github.com/users/erezinman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/erezinman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/erezinman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/erezinman"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6314/comments",
    "created_at": "2024-07-30T15:55:28Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-07-30T20:03:34Z",
            "event": "mentioned",
            "id": 13700782208,
            "node_id": "MEE_lADOABDGAc6RU4Q6zwAAAAMwoViA",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13700782208"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-07-30T20:03:34Z",
            "event": "subscribed",
            "id": 13700782218,
            "node_id": "SE_lADOABDGAc6RU4Q6zwAAAAMwoViK",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13700782218"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6314/events",
    "html_url": "https://github.com/cython/cython/issues/6314",
    "id": 2438169658,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6314/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6RU4Q6",
    "number": 6314,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6314/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6314/timeline",
    "title": "[ENH] Add a mechanism for executing Cython-syntax code in Pure Python mode.",
    "updated_at": "2024-07-30T20:04:29Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6314",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4324329?v=4",
        "events_url": "https://api.github.com/users/erezinman/events{/privacy}",
        "followers_url": "https://api.github.com/users/erezinman/followers",
        "following_url": "https://api.github.com/users/erezinman/following{/other_user}",
        "gists_url": "https://api.github.com/users/erezinman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/erezinman",
        "id": 4324329,
        "login": "erezinman",
        "node_id": "MDQ6VXNlcjQzMjQzMjk=",
        "organizations_url": "https://api.github.com/users/erezinman/orgs",
        "received_events_url": "https://api.github.com/users/erezinman/received_events",
        "repos_url": "https://api.github.com/users/erezinman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/erezinman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/erezinman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/erezinman"
    }
}