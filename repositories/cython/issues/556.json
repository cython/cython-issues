{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I just added inline_module's and submitted a PR today here: https://github.com/cython/cython/pull/555\r\n\r\nMy intent was something like OpenCL's JIT/AOC compilation (PyCUDA/PyOpenCL also work this way) which is simple and high performance, and I saw cython had this capability and just needed a little bit of a wrapper to expose it better.\r\n\r\nBut after trying to put it into use for my own problems, where I would regularly want to use Eigen or other integration problems I realized I'd still have to write and save [many] code fragments to other files which cythonize-ing would read in through includes, when you need to work with something that doesn't have a cython cimport module.  This is pretty ugly and doesn't achieve the easier flow that I had wanted.\r\n\r\nHowever if there was a way to embed C/C++ inside a pyx file (that is inline to strings), there would be no such issue.\r\n\r\nedit: To clarify on where I had envisioned the workflow going, something closer but between the spectrum of asm block and  SYCL is desired, maybe I just need to give the verbatim docstream method a test drive, but at the time I opened this issue I was also spotting that there would be sections/fragments of python functions that I'd just want to \"hop\" out of python to c++ in, and in that sense it is a more powerful single source model than explicit function boundaries (of which the functions would be numerous, weakly purposed and have some boilerplate tax) - this is why I indicated preference for inline strings/asm like constructs and while the situation is better now with the verbatim docstring based implementations, there is still some gaps towards better usability/boiler plate reduction.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "This would be a great feature that I have wanted many times. There are several situations where I need like 10 lines of C or C++ code to bridge something that Cython cannot quite do and thus have to add a separate file for. Would be wonderful to have single-source capability. Sad to see no response has been made here. One suggestion I have is:\r\n\r\n```\r\ncdef extern from _:\r\n    \"\"\"\r\n    C or C++ code goes here in this string. Gets included as if it had been in a header file (instead of using _ above).\r\n    \"\"\"\r\n    # Then the normal extern definitions go here.\r\n```",
            "created_at": "2019-07-23T05:09:00Z",
            "html_url": "https://github.com/cython/cython/issues/556#issuecomment-514056051",
            "id": 514056051,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/556",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDA1NjA1MQ==",
            "updated_at": "2019-07-23T05:09:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/514056051",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1537688?v=4",
                "events_url": "https://api.github.com/users/coderforlife/events{/privacy}",
                "followers_url": "https://api.github.com/users/coderforlife/followers",
                "following_url": "https://api.github.com/users/coderforlife/following{/other_user}",
                "gists_url": "https://api.github.com/users/coderforlife/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/coderforlife",
                "id": 1537688,
                "login": "coderforlife",
                "node_id": "MDQ6VXNlcjE1Mzc2ODg=",
                "organizations_url": "https://api.github.com/users/coderforlife/orgs",
                "received_events_url": "https://api.github.com/users/coderforlife/received_events",
                "repos_url": "https://api.github.com/users/coderforlife/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/coderforlife/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/coderforlife/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/coderforlife"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Duplicate of #1915.\r\nhttps://cython.readthedocs.io/en/latest/src/userguide/external_C_code.html#including-verbatim-c-code",
            "created_at": "2019-07-23T19:46:33Z",
            "html_url": "https://github.com/cython/cython/issues/556#issuecomment-514356572",
            "id": 514356572,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/556",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDM1NjU3Mg==",
            "updated_at": "2019-07-23T19:46:33Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/514356572",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "One option that might work without too much extra syntax would be to overload `eval` and `exec`.\r\n\r\nSo something like:\r\n\r\n    something = eval(\"a ? 1 : 2;\",  # just some example C code\r\n                                c=True)\r\n\r\n    exec(\"\"\"for (int x=0; x<10; ++x) {\r\n        a += x;\r\n    }\"\"\", c=True)\r\n\r\nThree obvious issues would be:\r\n1. Return type of `eval`? It'd probably make sense for Cython-level type checking to just not happen for it.\r\n2. Access to variables outside the statement - `a` would most likely not work because Cython typically mangles variable names. This would either require the user to set the cname of variables that they want to access, or for Cython to try to scan the string and swap `a` to the `cname` (which would probably be very difficult to do right, so undesirable).\r\n3. When used at module scope I suspect users would expect to be able to create function definitions (which wouldn't work because the code would be inserted inside `PyInit_modulename`).\r\n\r\nWith those in mind I'm not really convinced this is viable.",
            "created_at": "2020-03-27T10:22:34Z",
            "html_url": "https://github.com/cython/cython/issues/556#issuecomment-604923755",
            "id": 604923755,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/556",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDkyMzc1NQ==",
            "updated_at": "2020-03-27T10:22:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/604923755",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/556/comments",
    "created_at": "2016-08-14T01:26:18Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-07-23T19:46:34Z",
            "event": "closed",
            "id": 2504218853,
            "node_id": "MDExOkNsb3NlZEV2ZW50MjUwNDIxODg1Mw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2504218853"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-07-23T19:46:43Z",
            "event": "labeled",
            "id": 2504219244,
            "label": {
                "color": "444444",
                "name": "R: duplicate"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDI1MDQyMTkyNDQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2504219244"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-07-23T19:49:19Z",
            "event": "unlabeled",
            "id": 2504226194,
            "label": {
                "color": "444444",
                "name": "R: duplicate"
            },
            "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjUwNDIyNjE5NA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2504226194"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-07-23T19:49:25Z",
            "event": "reopened",
            "id": 2504226491,
            "node_id": "MDEzOlJlb3BlbmVkRXZlbnQyNTA0MjI2NDkx",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2504226491"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/556/events",
    "html_url": "https://github.com/cython/cython/issues/556",
    "id": 171036656,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/556/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUxNzEwMzY2NTY=",
    "number": 556,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "add single source capability for defining C/C++ objects/functions inline to cython pyx files",
    "updated_at": "2020-03-27T10:22:34Z",
    "url": "https://api.github.com/repos/cython/cython/issues/556",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/2229688?v=4",
        "events_url": "https://api.github.com/users/nevion/events{/privacy}",
        "followers_url": "https://api.github.com/users/nevion/followers",
        "following_url": "https://api.github.com/users/nevion/following{/other_user}",
        "gists_url": "https://api.github.com/users/nevion/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nevion",
        "id": 2229688,
        "login": "nevion",
        "node_id": "MDQ6VXNlcjIyMjk2ODg=",
        "organizations_url": "https://api.github.com/users/nevion/orgs",
        "received_events_url": "https://api.github.com/users/nevion/received_events",
        "repos_url": "https://api.github.com/users/nevion/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nevion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nevion/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nevion"
    }
}