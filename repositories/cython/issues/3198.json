{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "This was [reported on the mailing list](https://mail.python.org/pipermail/cython-devel/2016-February/004674.html) a few years ago but I can't see an issue for it.\r\n\r\n```cython\r\ncdef extern from \"<any>\" namespace \"std\" nogil: \r\n    cdef cppclass any: \r\n        any() \r\n        any(const any& other) except + \r\n        any[ValueType](ValueType value) except + \r\n \r\ncdef any a \r\n```\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncdef extern from \"<any>\" namespace \"std\" nogil:\r\n    cdef cppclass any:\r\n        any()\r\n        any(const any& other) except +\r\n        any[ValueType](ValueType value) except +\r\n                    ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:5:21: undeclared name not builtin: ValueType\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncdef extern from \"<any>\" namespace \"std\" nogil:\r\n    cdef cppclass any:\r\n        any()\r\n        any(const any& other) except +\r\n        any[ValueType](ValueType value) except +\r\n                    ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:5:21: Array dimension not integer\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncdef extern from \"<any>\" namespace \"std\" nogil:\r\n    cdef cppclass any:\r\n        any()\r\n        any(const any& other) except +\r\n        any[ValueType](ValueType value) except +\r\n                      ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:5:23: 'ValueType' is not a type identifier\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncdef extern from \"<any>\" namespace \"std\" nogil:\r\n    cdef cppclass any:\r\n        any()\r\n        any(const any& other) except +\r\n        any[ValueType](ValueType value) except +\r\n                     ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:5:22: Missing name in declaration.\r\n```\r\n\r\nYury's workaround works:\r\n```cython\r\ncdef extern from \"<any>\" namespace \"std\" nogil: \r\n    cdef cppclass any: \r\n        any() \r\n        any(const any& other) except + \r\n        any any[ValueType](ValueType value) except + \r\n \r\ncdef any a \r\n```\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "How can this constructor be used then?  `any[int](42)` does not seem to work.",
            "created_at": "2020-01-15T08:17:51Z",
            "html_url": "https://github.com/cython/cython/issues/3198#issuecomment-574546920",
            "id": 574546920,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3198",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDU0NjkyMA==",
            "updated_at": "2020-01-15T08:17:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/574546920",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Could you post example code showing what you're trying to do?",
            "created_at": "2020-01-15T09:39:59Z",
            "html_url": "https://github.com/cython/cython/issues/3198#issuecomment-574577013",
            "id": 574577013,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3198",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDU3NzAxMw==",
            "updated_at": "2020-01-15T09:39:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/574577013",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/6166539?v=4",
                "events_url": "https://api.github.com/users/mje-nz/events{/privacy}",
                "followers_url": "https://api.github.com/users/mje-nz/followers",
                "following_url": "https://api.github.com/users/mje-nz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mje-nz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mje-nz",
                "id": 6166539,
                "login": "mje-nz",
                "node_id": "MDQ6VXNlcjYxNjY1Mzk=",
                "organizations_url": "https://api.github.com/users/mje-nz/orgs",
                "received_events_url": "https://api.github.com/users/mje-nz/received_events",
                "repos_url": "https://api.github.com/users/mje-nz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mje-nz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mje-nz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mje-nz"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sure, if I modify [alure.pxd](https://github.com/McSinyx/palace/blob/1d230d3bd44b0c1f035b5a029f137f7fb2fd1b80/alure.pxd#L32) to fit [the header](https://en.cppreference.com/w/cpp/header/chrono) (`template <class Rep2> constexpr explicit duration(const Rep2& r);`):\r\n```cython\r\ncdef extern from '<chrono>' namespace 'std::chrono' nogil:\r\n    cdef cppclass duration[Rep, Period=*]:\r\n        ctypedef Rep rep\r\n        duration() except +\r\n        Rep2 duration[Rep2](const Rep2&) except +\r\n        rep count() except +\r\n\r\n    ctypedef duration[int64_t, nano] nanoseconds\r\n    ctypedef duration[int64_t, milli] milliseconds\r\n```\r\nand [call it with](https://github.com/McSinyx/palace/blob/1d230d3bd44b0c1f035b5a029f137f7fb2fd1b80/palace.pyx#L506)\r\n```cython\r\ncimport alure\r\n\r\ncdef class Source:\r\n    cdef alure.Source impl\r\n\r\n    def fade_out_to_stop(self, gain: float, ms: int) -> None:\r\n        self.impl.fade_out_to_stop(gain, alure.milliseconds(ms))\r\n```\r\nI get this\r\n```\r\nCompiling palace.pyx because it changed.\r\n[1/1] Cythonizing palace.pyx\r\nwarning: alure.pxd:308:8: 'Basic' redeclared \r\nwarning: alure.pxd:309:8: 'Full' redeclared \r\nwarning: alure.pxd:310:8: 'Capture' redeclared \r\nwarning: alure.pxd:313:8: 'Basic' redeclared \r\nwarning: alure.pxd:314:8: 'Full' redeclared \r\nrunning install\r\nrunning bdist_egg\r\nrunning egg_info\r\nwriting palace.egg-info/PKG-INFO\r\nwriting dependency_links to palace.egg-info/dependency_links.txt\r\nwriting top-level names to palace.egg-info/top_level.txt\r\nreading manifest file 'palace.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'palace.egg-info/SOURCES.txt'\r\ninstalling library code to build/bdist.linux-x86_64/egg\r\nrunning install_lib\r\nrunning build_ext\r\nbuilding 'palace' extension\r\nx86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/AL/ -I/usr/include/python3.7m -c palace.cpp -o build/temp.linux-x86_64-3.7/palace.o\r\npalace.cpp: In function ‘PyObject* __pyx_pf_6palace_6Source_8fade_out_to_stop(__pyx_obj_6palace_Source*, double, PyObject*)’:\r\npalace.cpp:7172:74: error: no matching function for call to ‘std::chrono::duration<long int, std::ratio<1, 1000> >::duration(PyObject* const&)’\r\n 7172 |     __pyx_t_1 = std::chrono::milliseconds(((PyObject *const &)__pyx_v_ms));\r\n      |                                                                          ^\r\nIn file included from palace.cpp:689:\r\n/usr/include/c++/9/chrono:338:14: note: candidate: ‘template<class _Rep2, class _Period2, class> constexpr std::chrono::duration<_Rep, _Period>::duration(const std::chrono::duration<_Rep, _Period>&)’\r\n  338 |    constexpr duration(const duration<_Rep2, _Period2>& __d)\r\n      |              ^~~~~~~~\r\n/usr/include/c++/9/chrono:338:14: note:   template argument deduction/substitution failed:\r\npalace.cpp:7172:74: note:   mismatched types ‘const std::chrono::duration<_Rep1, _Period1>’ and ‘PyObject* const’ {aka ‘_object* const’}\r\n 7172 |     __pyx_t_1 = std::chrono::milliseconds(((PyObject *const &)__pyx_v_ms));\r\n      |                                                                          ^\r\nIn file included from palace.cpp:689:\r\n/usr/include/c++/9/chrono:331:23: note: candidate: ‘template<class _Rep2, class> constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&)’\r\n  331 |    constexpr explicit duration(const _Rep2& __rep)\r\n      |                       ^~~~~~~~\r\n/usr/include/c++/9/chrono:331:23: note:   template argument deduction/substitution failed:\r\nIn file included from /usr/include/c++/9/bits/move.h:55,\r\n                 from /usr/include/c++/9/bits/nested_exception.h:40,\r\n                 from /usr/include/c++/9/exception:144,\r\n                 from /usr/include/c++/9/ios:39,\r\n                 from palace.cpp:680:\r\n/usr/include/c++/9/type_traits: In substitution of ‘template<class ... _Cond> using _Require = typename std::enable_if<std::__and_< <template-parameter-1-1> >::value>::type [with _Cond = {std::is_convertible<_object* const&, long int>, std::__or_<std::chrono::treat_as_floating_point<long int>, std::__not_<std::chrono::treat_as_floating_point<_object*> > >}]’:\r\n/usr/include/c++/9/chrono:328:27:   required from here\r\n/usr/include/c++/9/type_traits:2054:11: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’\r\n 2054 |     using _Require = typename enable_if<__and_<_Cond...>::value>::type;\r\n      |           ^~~~~~~~\r\nIn file included from palace.cpp:689:\r\n/usr/include/c++/9/chrono:324:2: note: candidate: ‘constexpr std::chrono::duration<_Rep, _Period>::duration(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000>]’\r\n  324 |  duration(const duration&) = default;\r\n      |  ^~~~~~~~\r\n/usr/include/c++/9/chrono:324:11: note:   no known conversion for argument 1 from ‘PyObject* const’ {aka ‘_object* const’} to ‘const std::chrono::duration<long int, std::ratio<1, 1000> >&’\r\n  324 |  duration(const duration&) = default;\r\n      |           ^~~~~~~~~~~~~~~\r\n/usr/include/c++/9/chrono:322:12: note: candidate: ‘std::chrono::duration<_Rep, _Period>::duration() [with _Rep = long int; _Period = std::ratio<1, 1000>]’\r\n  322 |  constexpr duration() = default;\r\n      |            ^~~~~~~~\r\n/usr/include/c++/9/chrono:322:12: note:   candidate expects 0 arguments, 1 provided\r\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n```\r\n\r\nIf I change the call to `alure.milliseconds[int64_t](ms)`, this is raised:\r\n```\r\nCompiling palace.pyx because it changed.\r\n[1/1] Cythonizing palace.pyx\r\nwarning: alure.pxd:308:8: 'Basic' redeclared \r\nwarning: alure.pxd:309:8: 'Full' redeclared \r\nwarning: alure.pxd:310:8: 'Capture' redeclared \r\nwarning: alure.pxd:313:8: 'Basic' redeclared \r\nwarning: alure.pxd:314:8: 'Full' redeclared \r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n        Fading is updated during calls to `Context.update`,\r\n        which should be called regularly (30 to 50 times per second)\r\n        for the fading to be smooth.\r\n        \"\"\"\r\n        self.impl.fade_out_to_stop(gain, alure.milliseconds[int64_t](ms))\r\n                                                          ^\r\n------------------------------------------------------------\r\n\r\npalace.pyx:529:59: Compiler crash in AnalyseExpressionsTransform\r\n\r\nModuleNode.body = StatListNode(palace.pyx:30:0)\r\nStatListNode.stats[20] = StatListNode(palace.pyx:472:5)\r\nStatListNode.stats[0] = CClassDefNode(palace.pyx:472:5,\r\n    as_name = 'Source',\r\n    class_name = 'Source',\r\n    doc = \"Sound source for playing audio.\\n\\n    There is no practical limit to the number of sources one may create.\\n\\n    When the source is no longer needed, `destroy` must be called,\\n    unless the context manager is used, which guarantees the source's\\n    destructioni upon completion of the block, even if an error occurs.\\n\\n    Parameters\\n    ----------\\n    context : Context\\n        The context from which the source is to be created.\\n    \",\r\n    module_name = '',\r\n    punycode_class_name = 'Source',\r\n    visibility = 'private')\r\nCClassDefNode.body = StatListNode(palace.pyx:473:4)\r\nStatListNode.stats[4] = DefNode(palace.pyx:507:4,\r\n    doc = 'Fade the source to `gain` over `ms` milliseconds,\\n        at which point playback will stop. `gain` is in addition to\\n        the base gain, and must be greater than 0 and less than 1.\\n        `ms` must also be positive\\n\\n        The fading is logarithmic. As a result, the initial drop-off may\\n        happen faster than expected but the fading is more perceptually\\n        consistant over the given duration. It will take just as much\\n        time to go from -6 dB to -12 dB as it will to go from -40 dB\\n        to -46 dB, for example.\\n\\n        Pending playback from a future buffer is not immediately\\n        canceled, but the fade timer starts with this call. If the\\n        future buffer then becomes ready, it will start mid-fade.\\n        Pending playback will be canceled if the fade out completes\\n        before the future buffer becomes ready.\\n\\n        Fading is updated during calls to `Context.update`,\\n        which should be called regularly (30 to 50 times per second)\\n        for the fading to be smooth.\\n        ',\r\n    modifiers = [...]/0,\r\n    name = 'fade_out_to_stop',\r\n    np_args_idx = [...]/0,\r\n    num_required_args = 3,\r\n    outer_attrs = [...]/2,\r\n    py_wrapper_required = True,\r\n    reqd_kw_flags_cname = '0',\r\n    used = True)\r\nFile 'Nodes.py', line 389, in analyse_expressions: StatListNode(palace.pyx:508:8)\r\nFile 'Nodes.py', line 5300, in analyse_expressions: ExprStatNode(palace.pyx:529:34)\r\nFile 'ExprNodes.py', line 587, in analyse_expressions: SimpleCallNode(palace.pyx:529:34,\r\n    analysed = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 5596, in analyse_types: SimpleCallNode(palace.pyx:529:34,\r\n    analysed = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 5556, in analyse_types: SimpleCallNode(palace.pyx:529:68,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 5464, in analyse_as_type_constructor: SimpleCallNode(palace.pyx:529:68,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 3485, in analyse_as_type: IndexNode(palace.pyx:529:59,\r\n    is_subscript = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'Nodes.py', line 1156, in analyse: TemplatedTypeNode(palace.pyx:529:59)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/home/cnx/.local/lib/python3.7/site-packages/Cython/Compiler/Nodes.py\", line 1156, in analyse\r\n    if len(self.positional_args) > 1 or self.keyword_args.key_value_pairs:\r\nAttributeError: 'NoneType' object has no attribute 'key_value_pairs'\r\nTraceback (most recent call last):\r\n  File \"./setup.py\", line 39, in <module>\r\n    c_string_type='str', c_string_encoding='utf8')),\r\n  File \"/home/cnx/.local/lib/python3.7/site-packages/Cython/Build/Dependencies.py\", line 1098, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/cnx/.local/lib/python3.7/site-packages/Cython/Build/Dependencies.py\", line 1221, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: palace.pyx\r\n```\r\n",
            "created_at": "2020-01-15T10:37:30Z",
            "html_url": "https://github.com/cython/cython/issues/3198#issuecomment-574600692",
            "id": 574600692,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3198",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDYwMDY5Mg==",
            "updated_at": "2020-01-15T10:37:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/574600692",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Okay, I can't get your project to build on my machine, but the workaround in this issue is:\r\n\r\n```cpp\r\nduration duration[Rep2](const Rep2&) except +\r\n```\r\n\r\nnot \r\n\r\n```cpp\r\nRep2 duration[Rep2](const Rep2&) except +\r\n```",
            "created_at": "2020-01-15T20:52:30Z",
            "html_url": "https://github.com/cython/cython/issues/3198#issuecomment-574850968",
            "id": 574850968,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3198",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDg1MDk2OA==",
            "updated_at": "2020-01-15T20:52:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/574850968",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/6166539?v=4",
                "events_url": "https://api.github.com/users/mje-nz/events{/privacy}",
                "followers_url": "https://api.github.com/users/mje-nz/followers",
                "following_url": "https://api.github.com/users/mje-nz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mje-nz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mje-nz",
                "id": 6166539,
                "login": "mje-nz",
                "node_id": "MDQ6VXNlcjYxNjY1Mzk=",
                "organizations_url": "https://api.github.com/users/mje-nz/orgs",
                "received_events_url": "https://api.github.com/users/mje-nz/received_events",
                "repos_url": "https://api.github.com/users/mje-nz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mje-nz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mje-nz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mje-nz"
            }
        },
        {
            "author_association": "NONE",
            "body": "Oops sorry my mistake, but correcting it still gives the same/similar error.  In my case however it is OK to use the current hack (`duration(const rep&) except +`) though.",
            "created_at": "2020-01-16T03:22:32Z",
            "html_url": "https://github.com/cython/cython/issues/3198#issuecomment-574963993",
            "id": 574963993,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3198",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDk2Mzk5Mw==",
            "updated_at": "2020-01-16T03:22:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/574963993",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3198/comments",
    "created_at": "2019-10-20T22:45:37Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3198/events",
    "html_url": "https://github.com/cython/cython/issues/3198",
    "id": 509664296,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3198/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MDk2NjQyOTY=",
    "number": 3198,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Templated constructors",
    "updated_at": "2020-01-16T03:22:32Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3198",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/6166539?v=4",
        "events_url": "https://api.github.com/users/mje-nz/events{/privacy}",
        "followers_url": "https://api.github.com/users/mje-nz/followers",
        "following_url": "https://api.github.com/users/mje-nz/following{/other_user}",
        "gists_url": "https://api.github.com/users/mje-nz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mje-nz",
        "id": 6166539,
        "login": "mje-nz",
        "node_id": "MDQ6VXNlcjYxNjY1Mzk=",
        "organizations_url": "https://api.github.com/users/mje-nz/orgs",
        "received_events_url": "https://api.github.com/users/mje-nz/received_events",
        "repos_url": "https://api.github.com/users/mje-nz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mje-nz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mje-nz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mje-nz"
    }
}