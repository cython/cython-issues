{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\n#6497 broke building scikit-image with:\r\n\r\n\r\n```\r\nFAILED: skimage/morphology/_max_tree.cpython-313-x86_64-linux-gnu.so.p/_max_tree.c                                                                                                                               \r\n  /home/tcaswell/source/p/scikit-image/scikit-image/skimage/_build_utils/cythoner.py ../skimage/morphology/_max_tree.pyx skimage/morphology/_max_tree.cpython-313-x86_64-linux-gnu.so.p/_max_tree.c -Xfreethreading\r\n_compatible=True                                                                                                                                                                                                   \r\n                                                                                                                                                                                                                   \r\n  Error compiling Cython file:                                                                                                                                                                                     \r\n  ------------------------------------------------------------                                                                                                                                                     \r\n  ...                                                                                                                                                                                                              \r\n      cdef DTYPE_INT64_t p, q                                                                                                                                                                                      \r\n      cdef DTYPE_UINT64_t number_of_pixels = len(image)                                                                                                                                                            \r\n      cdef np.ndarray[DTYPE_FLOAT64_t, ndim = 1] area = np.ones(number_of_pixels,                                                                                                                                  \r\n                                                                dtype=np.float64)                                                                                                                                  \r\n                                                                                                                                                                                                                   \r\n      for p in sorted_indices[::-1]:                                                                                                                                                                               \r\n                             ^                                                                                                                                                                                     \r\n  ------------------------------------------------------------                                                                                                                                                     \r\n                                                                                                                                                                                                                   \r\n  /home/tcaswell/source/p/scikit-image/scikit-image/skimage/morphology/_max_tree.pyx:196:27: Compiler crash in IterationTransform                                                                                  \r\n                                                                                                                                                                                                                   \r\n  ModuleNode.body = StatListNode(_max_tree.pyx:16:0)                                                                                                                                                               \r\n  StatListNode.stats[16] = StatListNode(_max_tree.pyx:183:0)                                                                                                                                                       \r\n  StatListNode.stats[0] = FusedCFuncDefNode(_max_tree.pyx:183:0,                                                                                                                                                   \r\n      defaults = [...]/3,                                                                                                                                                                                          \r\n      fused_compound_types = [...]/1,                                                                                                                                                                              \r\n      match = \"dest_sig[{{dest_sig_idx}}] = '{{specialized_type_name}}'\",                                                                                                                                          \r\n      no_match = 'dest_sig[{{dest_sig_idx}}] = None',                                                                                                                                                              \r\n      nodes = [...]/10,                                                                                                                                                                                            \r\n      specialized_pycfuncs = [...]/10)                                                                                                                                                                             \r\n  FusedCFuncDefNode.stats[1] = CFuncDefNode(_max_tree.pyx:183:0,                                                                                                                                                         args = [...]/3,                                                                                                                                                                                              \r\n      doc = 'Compute the area of all max-tree components.\\n\\n    This attribute is used for area opening and closing\\n    ',                                                                                       \r\n      modifiers = [...]/0,                                                                                                                                                                                         \r\n      node_positions = [...]/43,                                                                                                                                                                                   \r\n      outer_attrs = [...]/2,                                                                                                                                                                                       \r\n      overridable = True,                                                                                                                                                                                          \r\n      visibility = 'private')                                                                                                                                                                                      \r\n  CFuncDefNode.body = StatListNode(_max_tree.pyx:186:4,                                                                                                                                                            \r\n      is_terminator = True)                                                                                                                                                                                        \r\n  StatListNode.stats[3] = ForInStatNode(_max_tree.pyx:196:4)          \r\n  File 'UtilNodes.py', line 325, in analyse_expressions: LetNode(_max_tree.pyx:196:4)                                                                                                                              \r\n  File 'ExprNodes.py', line 622, in analyse_expressions: NoneCheckNode(_max_tree.pyx:196:27,\r\n      exception_message = \"'NoneType' is not iterable\",\r\n      exception_type_cname = 'PyExc_TypeError',\r\n      is_nonecheck = True,\r\n      result_is_used = True,\r\n      use_managed_ref = True)\r\n  File 'ExprNodes.py', line 1226, in analyse_types: NoneCheckNode(_max_tree.pyx:196:27,\r\n      exception_message = \"'NoneType' is not iterable\",\r\n      exception_type_cname = 'PyExc_TypeError',\r\n      is_nonecheck = True,\r\n      result_is_used = True,\r\n      use_managed_ref = True)\r\n  File 'ExprNodes.py', line 5052, in analyse_types: MemoryViewSliceNode(_max_tree.pyx:196:27,\r\n      is_memview_slice = True,\r\n      is_temp = True,\r\n      memslice_index = True,\r\n      none_error_message = 'Cannot slice None memoryview slice',\r\n      original_indices = [...]/1,\r\n      result_is_used = True,\r\n      use_managed_ref = True)\r\n  File 'ExprNodes.py', line 5123, in analyse_operation: MemoryViewSliceNode(_max_tree.pyx:196:27,\r\n      is_memview_slice = True,\r\n      is_temp = True,\r\n      memslice_index = True,\r\n      none_error_message = 'Cannot slice None memoryview slice',\r\n      original_indices = [...]/1,\r\n      result_is_used = True,\r\n      use_managed_ref = True)\r\n\r\n  Compiler crash traceback from this point on:\r\n    File \"/home/tcaswell/.virtualenvs/cp313/lib/python3.13/site-packages/Cython/Compiler/ExprNodes.py\", line 5123, in analyse_operation\r\n      self.type = PyrexTypes.MemoryViewSliceType(self.base.type.dtype, axes)\r\n                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    File \"/home/tcaswell/.virtualenvs/cp313/lib/python3.13/site-packages/Cython/Compiler/PyrexTypes.py\", line 690, in __init__\r\n      self.flags = MemoryView.get_buf_flags(self.axes)\r\n                   ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^\r\n    File \"/home/tcaswell/.virtualenvs/cp313/lib/python3.13/site-packages/Cython/Compiler/MemoryView.py\", line 114, in get_buf_flags\r\n      is_c_contig, is_f_contig = is_cf_contig(specs) \r\n                                 ~~~~~~~~~~~~^^^^^^^ \r\n    File \"/home/tcaswell/.virtualenvs/cp313/lib/python3.13/site-packages/Cython/Compiler/MemoryView.py\", line 658, in is_cf_contig\r\n      elif (specs[-1] == ('direct','contig') and\r\n            ~~~~~^^^^\r\n  IndexError: list index out of range\r\n  Traceback (most recent call last):\r\n    File \"/home/tcaswell/source/p/scikit-image/scikit-image/skimage/_build_utils/cythoner.py\", line 37, in <module>\r\n      main()\r\n      ~~~~^^\r\n    File \"/home/tcaswell/source/p/scikit-image/scikit-image/skimage/_build_utils/cythoner.py\", line 20, in main\r\n      sbp.run(\r\n      ~~~~~~~^\r\n          [\r\n          ^\r\n      ...<10 lines>...\r\n          check=True,\r\n          ^^^^^^^^^^^\r\n      )\r\n      ^\r\n    File \"/home/tcaswell/.pybuild/cp313/lib/python3.13/subprocess.py\", line 577, in run\r\n      raise CalledProcessError(retcode, process.args,\r\n                               output=stdout, stderr=stderr)\r\n  subprocess.CalledProcessError: Command '['cython', '-3', '--fast-fail', '--output-file', '/home/tcaswell/source/p/scikit-image/scikit-image/.mesonpy-e1w391ho/skimage/morphology/_max_tree.cpython-313-x86_64-lin\r\nux-gnu.so.p/_max_tree.c', '--include-dir', '/home/tcaswell/source/p/scikit-image/scikit-image/.mesonpy-e1w391ho', '-Xfreethreading_compatible=True', '/home/tcaswell/source/p/scikit-image/scikit-image/skimage/mor\r\nphology/_max_tree.pyx']' returned non-zero exit status 1.\r\n\r\n```\n\n### Code to reproduce the behaviour:\n\nThe first function in skimage that fails is:\r\n\r\n\r\n```cython\r\ncpdef np.ndarray[DTYPE_FLOAT64_t, ndim = 1] _compute_area(np_real_numeric[::1] image,\r\n            DTYPE_INT64_t[::1] parent,\r\n            DTYPE_INT64_t[::1] sorted_indices):\r\n    \"\"\"Compute the area of all max-tree components.\r\n\r\n    This attribute is used for area opening and closing\r\n    \"\"\"\r\n    cdef DTYPE_INT64_t p_root = sorted_indices[0]\r\n    cdef DTYPE_INT64_t p, q\r\n    cdef DTYPE_UINT64_t number_of_pixels = len(image)\r\n    cdef np.ndarray[DTYPE_FLOAT64_t, ndim = 1] area = np.ones(number_of_pixels,\r\n                                                              dtype=np.float64)\r\n\r\n    for p in sorted_indices[::-1]:\r\n        if p == p_root:\r\n            continue\r\n        q = parent[p]\r\n        area[q] = area[q] + area[p]\r\n\r\n    return area\r\n```\r\n\r\n\n\n### Expected behaviour\n\nscikit-image builds\n\n### OS\n\nlinux\n\n### Python version\n\n3.13, 3.14\n\n### Cython version\n\nmaster branch\n\n### Additional context\n\nbisect log:\r\n\r\n\r\n<details>\r\n\r\n```\r\n@ git bisect log\r\ngit bisect start\r\n# status: waiting for both good and bad commits\r\n# bad: [033ae2eb614f9fcb526c6049a751706df561db88] Get module-state working on multi-phase init (#6463)\r\ngit bisect bad 033ae2eb614f9fcb526c6049a751706df561db88\r\n# status: waiting for good commit(s), bad commit known\r\n# good: [355f1bb4fde8c368c434f27bb1cb964da206b746] Prepare release of Cython 3.1.0a1.\r\ngit bisect good 355f1bb4fde8c368c434f27bb1cb964da206b746\r\n# good: [d95049a10888bdf996fdf7f60aca19410d74d9ab] Split the PyLongBinop utility function into shorter type specific functions to allow inlining the type dispatch and eventually doing it at translation time if possible.\r\ngit bisect good d95049a10888bdf996fdf7f60aca19410d74d9ab\r\n# good: [3bd3503384c25e31c21e340baf3d5d4e380e5256] Turn off module state for Limited API (#6469)\r\ngit bisect good 3bd3503384c25e31c21e340baf3d5d4e380e5256\r\n# bad: [3d4f536d2ac87ea5a11b8bc5066e2407b658752b] Prevent crash when method call fails and use simple refcounting code in __Pyx_GetCurrentInterpreterId().\r\ngit bisect bad 3d4f536d2ac87ea5a11b8bc5066e2407b658752b\r\n# bad: [ad7c92ffbe2562019bab1a07d5ab0b63c6f67202] Fix a crash when calling the optimised sorted() by using a dedicated \"SortedListNode\" for this simple code injection. (#6497)\r\ngit bisect bad ad7c92ffbe2562019bab1a07d5ab0b63c6f67202\r\n# first bad commit: [ad7c92ffbe2562019bab1a07d5ab0b63c6f67202] Fix a crash when calling the optimised sorted() by using a dedicated \"SortedListNode\" for this simple code injection. (#6497)\r\n\r\n```\r\n\r\n</details>",
    "closed_at": "2024-11-25T07:20:49Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. I think the difference is that we previously ignored `analyse_types()` calls in `NoneCheckNode` and now obey them. That's an unrelated change that I can revert.\r\n\r\nThe actual problem is probably deeper than that: it's usually questionable to call `analyse_types()` more than once, and even if we do, then it should produce the same result as the first call and not behave differently (or even crash).",
            "created_at": "2024-11-25T05:09:57Z",
            "html_url": "https://github.com/cython/cython/issues/6518#issuecomment-2496869489",
            "id": 2496869489,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6518",
            "node_id": "IC_kwDOABDGAc6U0zRx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2496869489/reactions"
            },
            "updated_at": "2024-11-25T05:09:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2496869489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6518/comments",
    "created_at": "2024-11-24T20:20:01Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
                "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
                "followers_url": "https://api.github.com/users/tacaswell/followers",
                "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
                "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tacaswell",
                "id": 199813,
                "login": "tacaswell",
                "node_id": "MDQ6VXNlcjE5OTgxMw==",
                "organizations_url": "https://api.github.com/users/tacaswell/orgs",
                "received_events_url": "https://api.github.com/users/tacaswell/received_events",
                "repos_url": "https://api.github.com/users/tacaswell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tacaswell",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-24T20:20:20Z",
            "event": "renamed",
            "id": 15411404423,
            "node_id": "RTE_lADOABDGAc6gPEu1zwAAAAOWl16H",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] ",
                "to": "[BUG] regression in getting reversed view of sorted arrays"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/15411404423"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-25T04:25:41Z",
            "event": "milestoned",
            "id": 15413851776,
            "milestone": {
                "title": "3.1"
            },
            "node_id": "MIE_lADOABDGAc6gPEu1zwAAAAOWvLaA",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15413851776"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-25T04:25:52Z",
            "event": "labeled",
            "id": 15413856937,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc6gPEu1zwAAAAOWvMqp",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15413856937"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-25T04:25:52Z",
            "event": "labeled",
            "id": 15413856942,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "LE_lADOABDGAc6gPEu1zwAAAAOWvMqu",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15413856942"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": "12bf5122dcd772232e49b9078b24176843d9a150",
            "commit_url": "https://api.github.com/repos/scoder/cython/commits/12bf5122dcd772232e49b9078b24176843d9a150",
            "created_at": "2024-11-25T05:13:36Z",
            "event": "referenced",
            "id": 15414248259,
            "node_id": "REFE_lADOABDGAc6gPEu1zwAAAAOWwsND",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15414248259"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": "eacef0d706ddc5f38a4752ac2ae9ba7d02cb40eb",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/eacef0d706ddc5f38a4752ac2ae9ba7d02cb40eb",
            "created_at": "2024-11-25T07:20:50Z",
            "event": "closed",
            "id": 15415384365,
            "node_id": "CE_lADOABDGAc6gPEu1zwAAAAOW1Bkt",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15415384365"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5138957?v=4",
                "events_url": "https://api.github.com/users/jollaitbot/events{/privacy}",
                "followers_url": "https://api.github.com/users/jollaitbot/followers",
                "following_url": "https://api.github.com/users/jollaitbot/following{/other_user}",
                "gists_url": "https://api.github.com/users/jollaitbot/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jollaitbot",
                "id": 5138957,
                "login": "jollaitbot",
                "node_id": "MDQ6VXNlcjUxMzg5NTc=",
                "organizations_url": "https://api.github.com/users/jollaitbot/orgs",
                "received_events_url": "https://api.github.com/users/jollaitbot/received_events",
                "repos_url": "https://api.github.com/users/jollaitbot/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jollaitbot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jollaitbot/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jollaitbot",
                "user_view_type": "public"
            },
            "commit_id": "eacef0d706ddc5f38a4752ac2ae9ba7d02cb40eb",
            "commit_url": "https://api.github.com/repos/sailfishos-mirror/python-cython/commits/eacef0d706ddc5f38a4752ac2ae9ba7d02cb40eb",
            "created_at": "2024-11-25T12:23:01Z",
            "event": "referenced",
            "id": 15419887455,
            "node_id": "REFE_lADOABDGAc6gPEu1zwAAAAOXGM9f",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15419887455"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6518/events",
    "html_url": "https://github.com/cython/cython/issues/6518",
    "id": 2688306101,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6518/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 275,
        "created_at": "2019-02-24T14:21:23Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder",
            "user_view_type": "public"
        },
        "description": "* Remove code for Python 2 and Python < 3.8.\r\n* Integrate better with Python 3.\r\n* Improve support for the Limited API.\r\n* Start supporting GIL-free Python 3.13.\r\n* Support the Py3.13 `sys.monitoring` API.\r\n* Support and use `am_send` for coroutines.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/65",
        "id": 4082235,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/65/labels",
        "node_id": "MDk6TWlsZXN0b25lNDA4MjIzNQ==",
        "number": 65,
        "open_issues": 19,
        "state": "open",
        "title": "3.1",
        "updated_at": "2024-11-25T09:30:12Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/65"
    },
    "node_id": "I_kwDOABDGAc6gPEu1",
    "number": 6518,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6518/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6518/timeline",
    "title": "[BUG] regression in getting reversed view of sorted arrays",
    "updated_at": "2024-11-25T07:20:50Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6518",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
        "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
        "followers_url": "https://api.github.com/users/tacaswell/followers",
        "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
        "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tacaswell",
        "id": 199813,
        "login": "tacaswell",
        "node_id": "MDQ6VXNlcjE5OTgxMw==",
        "organizations_url": "https://api.github.com/users/tacaswell/orgs",
        "received_events_url": "https://api.github.com/users/tacaswell/received_events",
        "repos_url": "https://api.github.com/users/tacaswell/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tacaswell",
        "user_view_type": "public"
    }
}