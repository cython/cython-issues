{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nIn my Python code, I would like to do the equivalent of\r\n```cython\r\ncdef const int x = 0\r\ncdef const int[:] mv\r\n```\r\n\r\n\r\n### Describe the solution you'd like.\r\n\r\n```cython\r\nx: cython.const(cython.int) = 0\r\nx: cython.volatile(cython.int) = 0\r\nmv: cython.const(cython.int)[:]\r\n```\r\n\r\nHowever, this is invalid annotation syntax since [calls are not allowed](https://typing.readthedocs.io/en/latest/spec/annotations.html#type-and-annotation-expressions) there.\r\n\r\n### Describe alternatives you've considered.\r\n\r\n```cython\r\nx: cython.const[cython.int] = 0  # possibly a bit too overloaded by now\r\nmv: cython.const[int[:]]  # probably difficult to remember if it's that or cython.const[int][:]\r\nx: cython.int[cython.const] = 0  # difficult to distinguish from (and to mix with) memory views\r\nx: cython.int(cython.const) = 0  # we don't have anything like this yet\r\n\r\nwith cython.const:  # doesn't work for function arguments\r\n    x: cython.int = 0\r\n```\r\n\r\nThe [`Annotate[]` typing syntax](https://typing.readthedocs.io/en/latest/spec/qualifiers.html#annotated) is fairly verbose and only available in Python 3.9 and later:\r\n\r\n```cython\r\nfrom typing import Annotated\r\nx: Annotated[cython.int, cython.const] = 0\r\ny: Annotated[cython.int, cython.volatile] = 1\r\nz: Annotated[cython.int[:], cython.const] = 1\r\n```\r\nFor memory views, it's not obvious whether `Annotated[cython.int[:], cython.const]` really means the commonly used `(const int)[:]` or `const (int[:])` (as it's written). In general, `Annotated[]` is less suitable for any annotations e.g. on struct fields or any other structured usage.\r\n\r\n### Additional context\r\n\r\nThere's the general problem with memory views that we'll add two levels of declarations, `const()` and `[:]`, which should better be used in a specific order. It's a difference whether you write `cython.const(cython.int)[:]` or `cython.const(cython.int[:])` (in the latter case, the variable cannot be modified, in the first, it's only the items of the memory view).\r\n\r\nWe could argue that `const (int[:])` isn't very useful in comparison to `(const int)[:]` and live without a Python expression for the first. In fact, Cython already transforms `const int[:]` into `(const int)[:]` internally, for this very reason.\r\n\r\nHowever, transforming the \"obvious\" expression `const[int[:]]` into `const[int][:]` automatically means that we cannot support `const (int[:])` in the future any more.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Describe alternatives you've considered.\r\n\r\nI propose to use approach from python stdlib `typing` module [1]:\r\n\r\n```python\r\nfrom typing import Annotated\r\nx: Annotated[cython.int, cython.const] = 0\r\ny: Annotated[cython.int, cython.volatile] = 1\r\nz: Annotated[cython.int[:], cython.const] = 1\r\n```\r\n\r\nIt is used for instance in popular fastapi framework [2].\r\n\r\n[1] https://docs.python.org/3/library/typing.html#typing.Annotated\r\n[2] https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#add-query-to-annotated-in-the-q-parameter",
            "created_at": "2023-09-27T12:25:44Z",
            "html_url": "https://github.com/cython/cython/issues/5728#issuecomment-1737290695",
            "id": 1737290695,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5728",
            "node_id": "IC_kwDOABDGAc5njPPH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1737290695/reactions"
            },
            "updated_at": "2023-09-27T12:30:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1737290695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've run into this when trying to use type hints instead of cython.locals() / cython.declare() -- I want to declare a variable as const char * but there doesn't seem to be any way to using type hints. I'm reverting back to cython.locals() / cython.declare() for now.",
            "created_at": "2024-09-10T20:39:09Z",
            "html_url": "https://github.com/cython/cython/issues/5728#issuecomment-2341969338",
            "id": 2341969338,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5728",
            "node_id": "IC_kwDOABDGAc6Ll526",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2341969338/reactions"
            },
            "updated_at": "2024-09-10T20:39:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2341969338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/234443?v=4",
                "events_url": "https://api.github.com/users/jpe/events{/privacy}",
                "followers_url": "https://api.github.com/users/jpe/followers",
                "following_url": "https://api.github.com/users/jpe/following{/other_user}",
                "gists_url": "https://api.github.com/users/jpe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jpe",
                "id": 234443,
                "login": "jpe",
                "node_id": "MDQ6VXNlcjIzNDQ0Mw==",
                "organizations_url": "https://api.github.com/users/jpe/orgs",
                "received_events_url": "https://api.github.com/users/jpe/received_events",
                "repos_url": "https://api.github.com/users/jpe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jpe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jpe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jpe"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ```python\r\n> x: Annotated[cython.int, cython.const] = 0\r\n> ```\r\n\r\nI'm not so sure. This is even more verbose and feels less easy to integrate with typedefs. It's also not clear how to reproduce the difference between `(const int)[:]` and `const (int[:])` with this syntax.",
            "created_at": "2024-09-11T07:08:26Z",
            "html_url": "https://github.com/cython/cython/issues/5728#issuecomment-2342833027",
            "id": 2342833027,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5728",
            "node_id": "IC_kwDOABDGAc6LpMuD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2342833027/reactions"
            },
            "updated_at": "2024-09-11T07:08:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2342833027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It turns out that [call syntax is not allowed](https://typing.readthedocs.io/en/latest/spec/annotations.html#type-and-annotation-expressions) inside of type annotations. This makes `cython.const(cython.int)` invalid syntax.",
            "created_at": "2024-09-11T08:38:55Z",
            "html_url": "https://github.com/cython/cython/issues/5728#issuecomment-2343013495",
            "id": 2343013495,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5728",
            "node_id": "IC_kwDOABDGAc6Lp4x3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2343013495/reactions"
            },
            "updated_at": "2024-09-11T08:38:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2343013495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the best of the bad solutions here is `const[]` as in `const[int]`.\r\n\r\nThe drawbacks of `cython.int[const]` seem worse, requiring us to open up something as simple as `cython.int` for further nested bracket annotations. Even if we restricted that to only Cython types (e.g. not allow it for Python `int` etc.), it still seems a large opportunity for invalid syntax usage. Is it `int[const][:]` or `int[const, :]` or `int[:][const]` or what else?\r\n\r\nRegarding memory views, `const[int][:]` seems ok-ish, though not great. We should consider explicitly disallowing `const[int[:]]` for now, as that's usually not what users want but would obstruct future semantics.",
            "created_at": "2024-09-11T09:55:47Z",
            "html_url": "https://github.com/cython/cython/issues/5728#issuecomment-2343182381",
            "id": 2343182381,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5728",
            "node_id": "IC_kwDOABDGAc6LqiAt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2343182381/reactions"
            },
            "updated_at": "2024-09-11T09:55:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2343182381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5728/comments",
    "created_at": "2023-09-27T07:12:12Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-09-27T12:28:52Z",
            "event": "labeled",
            "id": 10486824526,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "LE_lADOABDGAc5yIk65zwAAAAJxED5O",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10486824526"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-09-27T12:28:52Z",
            "event": "labeled",
            "id": 10486824534,
            "label": {
                "color": "444444",
                "name": "Pure Python Mode"
            },
            "node_id": "LE_lADOABDGAc5yIk65zwAAAAJxED5W",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10486824534"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5728/events",
    "html_url": "https://github.com/cython/cython/issues/5728",
    "id": 1914851001,
    "labels": [
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558499,
            "name": "Pure Python Mode",
            "node_id": "MDU6TGFiZWw0MjU1NTg0OTk=",
            "url": "https://api.github.com/repos/cython/cython/labels/Pure%20Python%20Mode"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5728/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5yIk65",
    "number": 5728,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/cython/cython/issues/5728/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5728/timeline",
    "title": "[ENH] Support `const` and `volatile` in Pure Python Mode",
    "updated_at": "2024-09-11T09:55:49Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5728",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}