{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "**Describe the bug**\r\nDeclaring a C variable inside a loop body is allowed, as long as it is declared using the annotation syntax rather than `cdef`.\r\n\r\n**To Reproduce**\r\nThis fails, as expected:\r\n```cython\r\nfrom libc.stdint cimport int64_t\r\ndef foo():\r\n   for x in range(3):\r\n       cdef int64_t i; i = x\r\n```\r\nIt fails with this error:\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\nfrom libc.stdint cimport int64_t\r\ndef foo():\r\n    for x in range(3):\r\n        cdef int64_t i; i = x\r\n            ^\r\n------------------------------------------------------------\r\n\r\nsome.pyx:4:13: cdef statement not allowed here\r\n```\r\nBut this succeeds:\r\n```cython\r\nfrom libc.stdint cimport int64_t\r\ndef foo():\r\n    for x in range(3):\r\n        i: int64_t = x\r\n```\r\nand generates `int64_t __pyx_v_i` at function scope.\r\n\r\n**Expected behavior**\r\nI would expect the two ways of declaring a C variable to behave consistently - either declarations of C variables should be allowed inside blocks or they shouldn't; I wouldn't expect it to depend on how you declare the variable.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Linux\r\n - Python version: 3.8.10\r\n - Cython version 0.29.23",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "> I would expect the two ways of declaring a C variable to behave consistently - either declarations of C variables should be allowed inside blocks or they shouldn't; I wouldn't expect it to depend on how you declare the variable.\r\n\r\nI wouldn't necessarily expect this. In my mind:\r\n* `cdef` is a strong type instruction, that Cython *has* to use, and because it's Cython's own syntax then Cython is free to set the rules.\r\n* Annotations are \"weaker\" type instruction that Cython tries to use, but has to be prepared to ignore (for example, if they don't make sense). I'm not sure we're keen on rejecting valid Python code because it annotated the same variable more than once (given that Cython does aim to run most valid Python code).\r\n\r\nI guess there might be an argument for ignoring annotations placed anywhere that a cdef declaration would not be allowed, but I don't think it should be a compile error.\r\n\r\nWhere I do think there's room for improvement is for *inconsistent* annotations, which Cython doesn't currently seem to handle correctly or flag:\r\n\r\n```\r\ndef f(x: list):\r\n    x: list = []\r\n    if x:\r\n        x: tuple = [1,2]\r\n    return len(x)\r\n```\r\nshould probably be rejected because it isn't obvious what type `x` is.",
            "created_at": "2021-06-17T17:59:15Z",
            "html_url": "https://github.com/cython/cython/issues/4235#issuecomment-863445569",
            "id": 863445569,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4235",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzQ0NTU2OQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-17T17:59:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/863445569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "It is a reasonable observation though - the behaviour is slightly inconsistent. But it isn't completely obvious what the right thing to do is.",
            "created_at": "2021-06-17T18:02:36Z",
            "html_url": "https://github.com/cython/cython/issues/4235#issuecomment-863449221",
            "id": 863449221,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4235",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzQ0OTIyMQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-17T18:02:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/863449221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The general problem is that it's impossible to know the users intent. Did they specifically write the type annotations for Cython and want it to be strict about them? Or did they write the type annotations for Python and now want Cython to compile their existing code but take advantage of the types if it can?\r\n\r\nIn the end, we already have `-Werror` to turn such warnings into errors. So users can have Cython fail if it detects anything it can't handle.",
            "created_at": "2021-06-17T19:08:33Z",
            "html_url": "https://github.com/cython/cython/issues/4235#issuecomment-863494870",
            "id": 863494870,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4235",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzQ5NDg3MA==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-17T19:08:33Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/863494870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That being written, I agree that inconsistent types should always be rejected. ",
            "created_at": "2021-06-17T19:10:42Z",
            "html_url": "https://github.com/cython/cython/issues/4235#issuecomment-863496179",
            "id": 863496179,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4235",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzQ5NjE3OQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-17T19:10:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/863496179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I guess there might be an argument for ignoring annotations placed anywhere that a cdef declaration would not be allowed\r\n\r\nI think this might be the most reasonable behavior.\r\n\r\nI noticed this because someone on my team wrote code that didn't behave as they expected - they defined a C++ variable inside a for loop using an annotation, and were very surprised to learn that its default constructor ran only once, not once per loop iteration, because it had been hoisted out of the loop by Cython.\r\n\r\nMeanwhile, I was surprised that Cython allowed it to be declared inside the loop at all.",
            "created_at": "2021-06-17T19:43:50Z",
            "html_url": "https://github.com/cython/cython/issues/4235#issuecomment-863515010",
            "id": 863515010,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4235",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzUxNTAxMA==",
            "performed_via_github_app": null,
            "updated_at": "2021-06-17T19:43:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/863515010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29423?v=4",
                "events_url": "https://api.github.com/users/godlygeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/godlygeek/followers",
                "following_url": "https://api.github.com/users/godlygeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/godlygeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/godlygeek",
                "id": 29423,
                "login": "godlygeek",
                "node_id": "MDQ6VXNlcjI5NDIz",
                "organizations_url": "https://api.github.com/users/godlygeek/orgs",
                "received_events_url": "https://api.github.com/users/godlygeek/received_events",
                "repos_url": "https://api.github.com/users/godlygeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/godlygeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/godlygeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/godlygeek"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4235/comments",
    "created_at": "2021-06-17T17:33:05Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4235/events",
    "html_url": "https://github.com/cython/cython/issues/4235",
    "id": 924177298,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4235/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MjQxNzcyOTg=",
    "number": 4235,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Annotations declaring C variables are allowed inside loops",
    "updated_at": "2021-06-17T19:43:50Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4235",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29423?v=4",
        "events_url": "https://api.github.com/users/godlygeek/events{/privacy}",
        "followers_url": "https://api.github.com/users/godlygeek/followers",
        "following_url": "https://api.github.com/users/godlygeek/following{/other_user}",
        "gists_url": "https://api.github.com/users/godlygeek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/godlygeek",
        "id": 29423,
        "login": "godlygeek",
        "node_id": "MDQ6VXNlcjI5NDIz",
        "organizations_url": "https://api.github.com/users/godlygeek/orgs",
        "received_events_url": "https://api.github.com/users/godlygeek/received_events",
        "repos_url": "https://api.github.com/users/godlygeek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/godlygeek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/godlygeek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/godlygeek"
    }
}