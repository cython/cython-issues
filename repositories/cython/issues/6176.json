{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\r\n\r\nI been getting segfault at random times. Sometimes the code works fine, other time its `segfault`, I am not sure what exactly is causing it. If you look at https://github.com/YoSTEALTH/Shakti/actions/runs/8861871806 you can see `1` of the test pass while other fail from `segfault`. This has set me back weeks of work trying to debug and I am still lost! I am not sure if its the user, cython, python bug.\r\n\r\nI have tried using `gbd`, those things are also random and output I can't make head or tails out of. Also tried https://cython.readthedocs.io/en/latest/src/userguide/debugging.html `python-dbg` seems like its not been touched for 8 years!\r\n\r\nI could really use some help with this, or point me to a tool that tells me exactly what is causing the problem! so I can fix it.\r\n\r\nThank You\r\n\r\nedit: same code 2 different segfault results.\r\n\r\n``` bash\r\nProcess 83103 stopped\r\n* thread #1, name = 'python3', stop reason = signal SIGSEGV: address access protected (fault address: 0x7ffff74f3a60)\r\n    frame #0: 0x00007ffff74f3a60\r\n->  0x7ffff74f3a60: addb   %al, (%rax)\r\n    0x7ffff74f3a62: addb   %al, (%rax)\r\n    0x7ffff74f3a64: addb   %al, (%rax)\r\n    0x7ffff74f3a66: addb   %al, (%rax)\r\n(lldb) bt\r\n* thread #1, name = 'python3', stop reason = signal SIGSEGV: address access protected (fault address: 0x7ffff74f3a60)\r\n  * frame #0: 0x00007ffff74f3a60\r\n    frame #1: 0x00005555555da778 python3`_PyEval_EvalFrameDefault at generated_cases.c.h:2611:25\r\n    frame #2: 0x000055555566112d python3`gen_send [inlined] _PyEval_EvalFrame(throwflag=0, frame=0x00007ffff74b5f28, tstate=<unavailable>) at pycore_ceval.h:114:16\r\n    frame #3: 0x0000555555661128 python3`gen_send at genobject.c:228:24\r\n    frame #4: 0x0000555555661128 python3`gen_send at genobject.c:269:9\r\n    frame #5: 0x0000555555660f80 python3`gen_send(gen=0x00007ffff74b5ee0, arg=0x0000555555a91e60) at genobject.c:292:12\r\n    frame #6: 0x00007ffff72dfaea run.cpython-313-x86_64-linux-gnu.so`__Pyx_PyObject_FastCallDict.constprop.1 + 554\r\n    frame #7: 0x00007ffff72f023b run.cpython-313-x86_64-linux-gnu.so`__pyx_pw_6shakti_5event_3run_1run + 5995\r\n    frame #8: 0x0000555555643a24 python3`_PyObject_MakeTpCall(tstate=0x0000555555ad1858, callable=0x00007ffff7348ba0, args=0x00007ffff7f9d088, nargs=<unavailable>, keywords=0x0000000000000000) at call.c:242:18\r\n    frame #9: 0x00005555555d5aba python3`_PyEval_EvalFrameDefault at generated_cases.c.h:813:23\r\n    frame #10: 0x0000555555794f6f python3`PyEval_EvalCode [inlined] _PyEval_EvalFrame(throwflag=0, frame=0x00007ffff7f9d020, tstate=0x0000555555ad1858) at pycore_ceval.h:114:16\r\n    frame #11: 0x0000555555794f62 python3`PyEval_EvalCode at ceval.c:1806:12\r\n    frame #12: 0x0000555555794f18 python3`PyEval_EvalCode(co=<unavailable>, globals=<unavailable>, locals=0x00007ffff7538480) at ceval.c:601:21\r\n    frame #13: 0x0000555555801aa9 python3`run_mod at pythonrun.c:1291:9\r\n    frame #14: 0x0000555555801a63 python3`run_mod(mod=<unavailable>, filename=<unavailable>, globals=0x00007ffff7538480, locals=0x00007ffff7538480, flags=<unavailable>, arena=<unavailable>, interactive_src=0x0000000000000000, generate_new_source=0) at pythonrun.c:1376:19\r\n    frame #15: 0x00005555558037d7 python3`_PyRun_SimpleFileObject at pythonrun.c:1212:15\r\n    frame #16: 0x0000555555803761 python3`_PyRun_SimpleFileObject(fp=0x0000555555b4c3e0, filename=0x00007ffff75457f0, closeit=1, flags=0x00007fffffffdc48) at pythonrun.c:461:13\r\n    frame #17: 0x0000555555803e6c python3`_PyRun_AnyFileObject(fp=0x0000555555b4c3e0, filename=0x00007ffff75457f0, closeit=1, flags=0x00007fffffffdc48) at pythonrun.c:77:15\r\n    frame #18: 0x000055555582d2a1 python3`pymain_run_python at main.c:357:15\r\n    frame #19: 0x000055555582d20b python3`pymain_run_python at main.c:376:15\r\n    frame #20: 0x000055555582d1b8 python3`pymain_run_python(exitcode=0x00007fffffffdd90) at main.c:628:21\r\n    frame #21: 0x000055555582d90a python3`Py_BytesMain at main.c:707:5\r\n    frame #22: 0x00007ffff7cdbcd0 libc.so.6`___lldb_unnamed_symbol3264 + 128\r\n    frame #23: 0x00007ffff7cdbd8a libc.so.6`__libc_start_main + 138\r\n    frame #24: 0x00005555555e6215 python3`_start + 37\r\n```\r\n\r\n``` bash\r\n* thread #1, name = 'python3', stop reason = signal SIGSEGV: invalid address (fault address: 0x2)\r\n  * frame #0: 0x00005555556ca4b9 python3`_PyObject_Malloc at obmalloc.c:2107:13\r\n    frame #1: 0x00005555556ca48f python3`_PyObject_Malloc(ctx=<unavailable>, nbytes=40) at obmalloc.c:2127:17\r\n    frame #2: 0x00005555556aad12 python3`_PyObject_New(tp=0x0000555555a6e2a0) at object.c:451:33\r\n    frame #3: 0x00005555556cb6ff python3`range_iter [inlined] fast_range_iter(len=1, step=1, stop=1, start=0) at rangeobject.c:963:30\r\n    frame #4: 0x00005555556cb6f3 python3`range_iter(seq=0x00007ffff7336340) at rangeobject.c:1168:12\r\n    frame #5: 0x0000555555627ed3 python3`PyObject_GetIter(o=<unavailable>) at abstract.c:2860:26\r\n    frame #6: 0x00005555555d7506 python3`_PyEval_EvalFrameDefault at generated_cases.c.h:2921:20\r\n    frame #7: 0x000055555566112d python3`gen_send [inlined] _PyEval_EvalFrame(throwflag=0, frame=0x00007ffff74b60e8, tstate=<unavailable>) at pycore_ceval.h:114:16\r\n    frame #8: 0x0000555555661128 python3`gen_send at genobject.c:228:24\r\n    frame #9: 0x0000555555661128 python3`gen_send at genobject.c:269:9\r\n    frame #10: 0x0000555555660f80 python3`gen_send(gen=0x00007ffff74b60a0, arg=0x0000555555a6c7a0) at genobject.c:292:12\r\n    frame #11: 0x00007ffff72dfaea run.cpython-313-x86_64-linux-gnu.so`__Pyx_PyObject_FastCallDict.constprop.1 + 554\r\n    frame #12: 0x00007ffff72f023b run.cpython-313-x86_64-linux-gnu.so`__pyx_pw_6shakti_5event_3run_1run + 5995\r\n    frame #13: 0x0000555555643a24 python3`_PyObject_MakeTpCall(tstate=0x0000555555ad1858, callable=0x00007ffff7348ba0, args=0x00007ffff7f9d088, nargs=<unavailable>, keywords=0x0000000000000000) at call.c:242:18\r\n    frame #14: 0x00005555555d5aba python3`_PyEval_EvalFrameDefault at generated_cases.c.h:813:23\r\n    frame #15: 0x0000555555794f6f python3`PyEval_EvalCode [inlined] _PyEval_EvalFrame(throwflag=0, frame=0x00007ffff7f9d020, tstate=0x0000555555ad1858) at pycore_ceval.h:114:16\r\n    frame #16: 0x0000555555794f62 python3`PyEval_EvalCode at ceval.c:1806:12\r\n    frame #17: 0x0000555555794f18 python3`PyEval_EvalCode(co=<unavailable>, globals=<unavailable>, locals=0x00007ffff7538480) at ceval.c:601:21\r\n    frame #18: 0x0000555555801aa9 python3`run_mod at pythonrun.c:1291:9\r\n    frame #19: 0x0000555555801a63 python3`run_mod(mod=<unavailable>, filename=<unavailable>, globals=0x00007ffff7538480, locals=0x00007ffff7538480, flags=<unavailable>, arena=<unavailable>, interactive_src=0x0000000000000000, generate_new_source=0) at pythonrun.c:1376:19\r\n    frame #20: 0x00005555558037d7 python3`_PyRun_SimpleFileObject at pythonrun.c:1212:15\r\n    frame #21: 0x0000555555803761 python3`_PyRun_SimpleFileObject(fp=0x0000555555b4c3e0, filename=0x00007ffff75457f0, closeit=1, flags=0x00007fffffffdc48) at pythonrun.c:461:13\r\n    frame #22: 0x0000555555803e6c python3`_PyRun_AnyFileObject(fp=0x0000555555b4c3e0, filename=0x00007ffff75457f0, closeit=1, flags=0x00007fffffffdc48) at pythonrun.c:77:15\r\n    frame #23: 0x000055555582d2a1 python3`pymain_run_python at main.c:357:15\r\n    frame #24: 0x000055555582d20b python3`pymain_run_python at main.c:376:15\r\n    frame #25: 0x000055555582d1b8 python3`pymain_run_python(exitcode=0x00007fffffffdd90) at main.c:628:21\r\n    frame #26: 0x000055555582d90a python3`Py_BytesMain at main.c:707:5\r\n    frame #27: 0x00007ffff7cdbcd0 libc.so.6`___lldb_unnamed_symbol3264 + 128\r\n    frame #28: 0x00007ffff7cdbd8a libc.so.6`__libc_start_main + 138\r\n    frame #29: 0x00005555555e6215 python3`_start + 37\r\n```\r\nedit: another test\r\n``` bash\r\nfree(): invalid pointer\r\nProcess 83520 stopped\r\n* thread #1, name = 'python3', stop reason = signal SIGABRT\r\n    frame #0: 0x00007ffff7d4332c libc.so.6`___lldb_unnamed_symbol3680 + 268\r\nlibc.so.6`___lldb_unnamed_symbol3680:\r\n->  0x7ffff7d4332c <+268>: movl   %eax, %ebx\r\n    0x7ffff7d4332e <+270>: negl   %ebx\r\n    0x7ffff7d43330 <+272>: cmpl   $0xfffff000, %eax         ; imm = 0xFFFFF000\r\n    0x7ffff7d43335 <+277>: movl   $0x0, %eax\r\n(lldb) bt\r\n* thread #1, name = 'python3', stop reason = signal SIGABRT\r\n  * frame #0: 0x00007ffff7d4332c libc.so.6`___lldb_unnamed_symbol3680 + 268\r\n    frame #1: 0x00007ffff7cf26c8 libc.so.6`raise + 24\r\n    frame #2: 0x00007ffff7cda4b8 libc.so.6`abort + 215\r\n    frame #3: 0x00007ffff7cdb395 libc.so.6`___lldb_unnamed_symbol3216 + 5\r\n    frame #4: 0x00007ffff7d4d2a7 libc.so.6`___lldb_unnamed_symbol3746 + 23\r\n    frame #5: 0x00007ffff7d4f5b4 libc.so.6`___lldb_unnamed_symbol3773 + 516\r\n    frame #6: 0x00007ffff7d51e93 libc.so.6`__libc_free + 115\r\n    frame #7: 0x00005555556b34b5 python3`_PyObject_Free [inlined] PyMem_RawFree(ptr=<unavailable>) at obmalloc.c:963:5\r\n    frame #8: 0x00005555556b34a8 python3`_PyObject_Free at obmalloc.c:2416:9\r\n    frame #9: 0x00005555556de2e8 python3`object_repr [inlined] Py_DECREF(op=0x00007ffff7b65070) at object.h:945:9\r\n    frame #10: 0x00005555556de2e0 python3`object_repr(self=<unavailable>) at typeobject.c:5883:5\r\n    frame #11: 0x00005555556ab030 python3`PyObject_Str(v=0x00007ffff74f22c0) at object.c:725:12\r\n    frame #12: 0x000055555566438d python3`PyFile_WriteObject(v=0x00007ffff74f22c0, f=<unavailable>, flags=<unavailable>) at fileobject.c:117:17\r\n    frame #13: 0x000055555578ecba python3`builtin_print at bltinmodule.c:2097:15\r\n    frame #14: 0x000055555578ec51 python3`builtin_print(module=<unavailable>, args=<unavailable>, nargs=<unavailable>, kwnames=<unavailable>) at bltinmodule.c.h:940:20\r\n    frame #15: 0x00005555556a733f python3`cfunction_vectorcall_FASTCALL_KEYWORDS(func=0x00007ffff7c4ee80, args=0x00007ffff7350a98, nargsf=<unavailable>, kwnames=<unavailable>) at methodobject.c:441:24\r\n    frame #16: 0x00007ffff70a9d8f entry.cpython-313-x86_64-linux-gnu.so`__Pyx_PyObject_Call + 63\r\n    frame #17: 0x00007ffff70c56a8 entry.cpython-313-x86_64-linux-gnu.so`__pyx_gb_6shakti_5event_5entry_3SQE_6generator + 1064\r\n    frame #18: 0x00007ffff70ab62c entry.cpython-313-x86_64-linux-gnu.so`__Pyx_Coroutine_SendEx + 108\r\n    frame #19: 0x00007ffff72ebeb5 file.cpython-313-x86_64-linux-gnu.so`__Pyx__Coroutine_Yield_From_Generic + 133\r\n    frame #20: 0x00007ffff72ee2cb file.cpython-313-x86_64-linux-gnu.so`__pyx_gb_6shakti_2io_4file_2generator + 1675\r\n    frame #21: 0x00007ffff72c630c file.cpython-313-x86_64-linux-gnu.so`__Pyx_Coroutine_SendEx + 108\r\n    frame #22: 0x00005555555e2d68 python3`_PyEval_EvalFrameDefault at generated_cases.c.h:5101:30\r\n    frame #23: 0x000055555566112d python3`gen_send [inlined] _PyEval_EvalFrame(throwflag=0, frame=0x00007ffff736d678, tstate=<unavailable>) at pycore_ceval.h:114:16\r\n    frame #24: 0x0000555555661128 python3`gen_send at genobject.c:228:24\r\n    frame #25: 0x0000555555661128 python3`gen_send at genobject.c:269:9\r\n    frame #26: 0x0000555555660f80 python3`gen_send(gen=0x00007ffff736d630, arg=0x0000555555a6c7a0) at genobject.c:292:12\r\n    frame #27: 0x00007ffff7067aea run.cpython-313-x86_64-linux-gnu.so`__Pyx_PyObject_FastCallDict.constprop.1 + 554\r\n    frame #28: 0x00007ffff707823b run.cpython-313-x86_64-linux-gnu.so`__pyx_pw_6shakti_5event_3run_1run + 5995\r\n    frame #29: 0x000055555564650b python3`PyObject_Call at call.c:361:19\r\n    frame #30: 0x00005555556464c0 python3`PyObject_Call(callable=0x00007ffff7335cb0, args=0x00007ffff7378db0, kwargs=0x0000000000000000) at call.c:373:12\r\n    frame #31: 0x00005555555d55e2 python3`_PyEval_EvalFrameDefault at generated_cases.c.h:1267:26\r\n    frame #32: 0x0000555555794f6f python3`PyEval_EvalCode [inlined] _PyEval_EvalFrame(throwflag=0, frame=0x00007ffff7f9d020, tstate=0x0000555555ad1858) at pycore_ceval.h:114:16\r\n    frame #33: 0x0000555555794f62 python3`PyEval_EvalCode at ceval.c:1806:12\r\n    frame #34: 0x0000555555794f18 python3`PyEval_EvalCode(co=<unavailable>, globals=<unavailable>, locals=0x00007ffff7538480) at ceval.c:601:21\r\n    frame #35: 0x0000555555801aa9 python3`run_mod at pythonrun.c:1291:9\r\n    frame #36: 0x0000555555801a63 python3`run_mod(mod=<unavailable>, filename=<unavailable>, globals=0x00007ffff7538480, locals=0x00007ffff7538480, flags=<unavailable>, arena=<unavailable>, interactive_src=0x0000000000000000, generate_new_source=0) at pythonrun.c:1376:19\r\n    frame #37: 0x00005555558037d7 python3`_PyRun_SimpleFileObject at pythonrun.c:1212:15\r\n    frame #38: 0x0000555555803761 python3`_PyRun_SimpleFileObject(fp=0x0000555555b4c3e0, filename=0x00007ffff75457f0, closeit=1, flags=0x00007fffffffdc48) at pythonrun.c:461:13\r\n    frame #39: 0x0000555555803e6c python3`_PyRun_AnyFileObject(fp=0x0000555555b4c3e0, filename=0x00007ffff75457f0, closeit=1, flags=0x00007fffffffdc48) at pythonrun.c:77:15\r\n    frame #40: 0x000055555582d2a1 python3`pymain_run_python at main.c:357:15\r\n    frame #41: 0x000055555582d20b python3`pymain_run_python at main.c:376:15\r\n    frame #42: 0x000055555582d1b8 python3`pymain_run_python(exitcode=0x00007fffffffdd90) at main.c:628:21\r\n    frame #43: 0x000055555582d90a python3`Py_BytesMain at main.c:707:5\r\n    frame #44: 0x00007ffff7cdbcd0 libc.so.6`___lldb_unnamed_symbol3264 + 128\r\n    frame #45: 0x00007ffff7cdbd8a libc.so.6`__libc_start_main + 138\r\n    frame #46: 0x00005555555e6215 python3`_start + 37\r\n```",
    "closed_at": "2024-05-03T17:35:43Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm going to close this because I think it's pretty unlikely to be a Python or Cython bug, and we try to keep support questions on the mailing list (https://groups.google.com/g/cython-users) rather than on the bug tracker.\r\n\r\nMy advice is:\r\n* A C debugger (gdb, lldb) is the right level of tool to use.\r\n* it's reasonably likely that it's memory getting overwritten and that the bug is some distance from where you see the error. Especially because it's crashing in unpredictable places.\r\n* Debugging is much easier if you compile without optimizations (`-O0` cflag) although that doesn't help you see through Python code.\r\n* I'd also try tools like address sanitizer, memory sanitizer, undefined behaviour sanitizer (you can turn them on with compiler flags). They're more likely to show where the initial mistake is.",
            "created_at": "2024-05-03T17:35:43Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2093474934",
            "id": 2093474934,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc58x-R2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2093474934/reactions"
            },
            "updated_at": "2024-05-03T17:35:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2093474934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@da-woods Thanks for your input.\r\n\r\nAfter enabling `-fsanitize=address` I am getting `sleep.cpython-313-x86_64-linux-gnu.so: undefined symbol: __asan_option_detect_stack_use_after_return`\r\n\r\nI can't use that mailing list or else I would have done so.",
            "created_at": "2024-05-03T21:43:02Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2093801354",
            "id": 2093801354,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc58zN-K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2093801354/reactions"
            },
            "updated_at": "2024-05-03T21:43:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2093801354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I finally got `-fsanitize=address` to work with compile and link and enabled `LD_PRELOAD`, I got tons of memory leak messages!So I ran the compiler with just `1` `empty.pyx` file and I still got memory leak messages!!!\r\n\r\n``` cython\r\nfrom os import environ\r\nfrom setuptools import setup\r\nfrom Cython.Build import cythonize\r\nfrom Cython.Distutils import Extension\r\n\r\n\r\nenviron['LD_PRELOAD'] = 'libasan.so'\r\nextension = [Extension(name='empty',  # where the `.so` will be saved.\r\n                       sources=['empty.pyx'],\r\n                       language='c',\r\n                       extra_compile_args=[\r\n                            '-fsanitize=address',\r\n                        ],\r\n                       extra_link_args=[\r\n                            '-fsanitize=address',\r\n                        ])]\r\nsetup(\r\n    name='testing',\r\n    ext_modules=cythonize(extension, compiler_directives={'language_level': 3}),\r\n    zip_safe=False,\r\n```\r\n\r\n``` bash\r\nRunning ...                                                                                    \r\n                                                                 \r\nCompiling empty.pyx because it changed.             \r\n[1/1] Cythonizing empty.pyx\r\nrunning build_ext                                        \r\nbuilding 'empty' extension                                                                     \r\ncreating build  \r\ncreating build/temp.linux-x86_64-cpython-313                                                \r\ngcc -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O3 -Wall -fPIC -I/opt/python/3.13/include/python3.13 -c empty.c -o build/temp.linux-x86_64-cpython-313/empty.o -fsanitize=address\r\n                                                                                               \r\n=================================================================\r\n==12103==ERROR: LeakSanitizer: detected memory leaks                                        \r\n\r\nDirect leak of 2763 byte(s) in 309 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n                                                        \r\nDirect leak of 2320 byte(s) in 58 object(s) allocated from:                                    \r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69                                                                            \r\n    #1 0x7fc0c4 in symtab_node::create_reference(symtab_node*, ipa_ref_use, gimple*) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x7fc0c4) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)                                                                                              \r\n                \r\nDirect leak of 1913 byte(s) in 215 object(s) allocated from:                                \r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69                                                 \r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)                                                       \r\n    #2 0x66b9f1cbefeac7ff  (<unknown module>)\r\n\r\nDirect leak of 732 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce007a in __interceptor_realloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:85\r\n    #1 0x829bad in cgraph_node::remove_callees() (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x829bad) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 688 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0xa1f9ee in ipa_fn_summary::account_size_time(int, sreal, ipa_predicate const&, ipa_predicate const&, bool) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0xa1f9ee) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 550 byte(s) in 55 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0031  (<unknown module>)\r\n\r\nDirect leak of 550 byte(s) in 55 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0030  (<unknown module>)\r\n\r\nDirect leak of 540 byte(s) in 54 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0032  (<unknown module>)\r\n\r\nDirect leak of 530 byte(s) in 53 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea002f  (<unknown module>)\r\n\r\nDirect leak of 520 byte(s) in 52 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0036  (<unknown module>)\r\n\r\nDirect leak of 520 byte(s) in 52 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0033  (<unknown module>)\r\n\r\nDirect leak of 520 byte(s) in 52 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0034  (<unknown module>)\r\n\r\nDirect leak of 500 byte(s) in 50 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0037  (<unknown module>)\r\n\r\nDirect leak of 500 byte(s) in 50 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0038  (<unknown module>)\r\n\r\nDirect leak of 500 byte(s) in 50 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1cbefea0035  (<unknown module>)\r\n\r\nDirect leak of 336 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0xa3d27a in modref_access_node::insert_kill(vec<modref_access_node, va_heap, vl_ptr>&, modref_access_node&, bool) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0xa3d27a) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 336 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce007a in __interceptor_realloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:85\r\n    #1 0x7fbe12 in symtab_node::create_reference(symtab_node*, ipa_ref_use, gimple*) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x7fbe12) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 260 byte(s) in 29 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x7441ffffffff  (<unknown module>)\r\n\r\nDirect leak of 179 byte(s) in 20 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x66b9f1caffffffff  (<unknown module>)\r\n\r\nDirect leak of 162 byte(s) in 18 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cfb6ff  (<unknown module>)\r\n\r\nDirect leak of 112 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce0cc1 in __interceptor_calloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:77\r\n    #1 0x199a735 in htab_create (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199a735) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 104 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce007a in __interceptor_realloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:85\r\n    #1 0x7583f8  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x7583f8) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 104 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce0cc1 in __interceptor_calloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:77\r\n    #1 0x199a6b5 in xcalloc (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199a6b5) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 102 byte(s) in 7 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x19bd79a  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x19bd79a) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 72 byte(s) in 8 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x7ffc094d8dff  ([stack]+0x2ddff)\r\n\r\nDirect leak of 36 byte(s) in 4 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x7ffc094d89ff  ([stack]+0x2d9ff)\r\n\r\nDirect leak of 36 byte(s) in 4 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x8962ff  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x8962ff) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 27 byte(s) in 3 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cfb3ff  (<unknown module>)\r\n\r\nDirect leak of 27 byte(s) in 3 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cfbbff  (<unknown module>)\r\n\r\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0xa66d08  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0xa66d08) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0xa460c5 in ipa_register_cgraph_hooks() (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0xa460c5) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0xa6667a  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0xa6667a) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 20 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x890032 in mem_loc_descriptor(rtx_def*, machine_mode, machine_mode, var_init_status) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x890032) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 20 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x890034 in mem_loc_descriptor(rtx_def*, machine_mode, machine_mode, var_init_status) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x890034) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d82eff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260a7bcff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x7442608430ff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x7ffc094d8cff  ([stack]+0x2dcff)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260f6a3ff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0xefeac7ff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260a057ff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260a3e7ff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d9faff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x46ff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260dcffff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cfbdff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x7442608456ff  (<unknown module>)\r\n\r\nDirect leak of 18 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x7442617123ff  (<unknown module>)\r\n\r\nDirect leak of 16 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x8963fa  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x8963fa) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 15 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x30656e696c5e  (<unknown module>)\r\n\r\nDirect leak of 14 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260f6a47f  (<unknown module>)\r\n\r\nDirect leak of 14 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x8b518a  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x8b518a) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 10 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744261a20036  (<unknown module>)\r\n\r\nDirect leak of 10 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d30035  (<unknown module>)\r\n\r\nDirect leak of 10 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cb0037  (<unknown module>)\r\n\r\nDirect leak of 10 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cb0035  (<unknown module>)\r\n\r\nDirect leak of 10 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cb002f  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d3a0ff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260c945ff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d39fff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cb53ff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x8b50ff  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x8b50ff) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x8b1cff  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x8b1cff) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d57bff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260dd4bff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cc7aff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cc78ff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260cadeff  (<unknown module>)\r\n\r\nDirect leak of 9 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260ca51ff  (<unknown module>)\r\n\r\nDirect leak of 8 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d3a3bf  (<unknown module>)\r\n\r\nDirect leak of 8 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d0341f  (<unknown module>)\r\n\r\nDirect leak of 8 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260d0343f  (<unknown module>)\r\n\r\nDirect leak of 7 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x199ac1f in xstrdup (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199ac1f) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n    #2 0x744260f6a37f  (<unknown module>)\r\n\r\nIndirect leak of 261992 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce0cc1 in __interceptor_calloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:77\r\n    #1 0x199a6b5 in xcalloc (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x199a6b5) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nIndirect leak of 2168 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce007a in __interceptor_realloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:85\r\n    #1 0x7fbf1d in symtab_node::create_reference(symtab_node*, ipa_ref_use, gimple*) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x7fbf1d) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nIndirect leak of 336 byte(s) in 2 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x7fbd58 in symtab_node::create_reference(symtab_node*, ipa_ref_use, gimple*) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x7fbd58) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0xa66628  (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0xa66628) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x16c7c75 in clone_info::get_create(cgraph_node*) (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0x16c7c75) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0xa46576 in ipcp_transformation_initialize() (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0xa46576) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x744265ce1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0xa46435 in ipcp_transformation_initialize() (/usr/lib/gcc/x86_64-pc-linux-gnu/13.2.1/cc1+0xa46435) (BuildId: f32049cda0cd81a36bd1543f6b3b6dcb629abdeb)\r\n\r\nSUMMARY: AddressSanitizer: 280743 byte(s) leaked in 1282 allocation(s).\r\n\r\n=================================================================\r\n==12102==ERROR: LeakSanitizer: detected memory leaks\r\n\r\nDirect leak of 286 byte(s) in 4 object(s) allocated from:\r\n    #0 0x7ae19e6e1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x457327  (/usr/bin/gcc+0x457327) (BuildId: 7392cfd0fa10a20584133c316cc717abc268fd55)\r\n\r\nDirect leak of 176 byte(s) in 2 object(s) allocated from:\r\n    #0 0x7ae19e6e1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x414672  (/usr/bin/gcc+0x414672) (BuildId: 7392cfd0fa10a20584133c316cc717abc268fd55)\r\n\r\nDirect leak of 88 byte(s) in 1 object(s) allocated from:\r\n    #0 0x7ae19e6e1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x409b18  (/usr/bin/gcc+0x409b18) (BuildId: 7392cfd0fa10a20584133c316cc717abc268fd55)\r\n\r\nDirect leak of 16 byte(s) in 1 object(s) allocated from:\r\n    #0 0x7ae19e6e1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x40cb42  (/usr/bin/gcc+0x40cb42) (BuildId: 7392cfd0fa10a20584133c316cc717abc268fd55)\r\n\r\nIndirect leak of 16 byte(s) in 1 object(s) allocated from:\r\n    #0 0x7ae19e6e1359 in __interceptor_malloc /usr/src/debug/gcc/gcc/libsanitizer/asan/asan_malloc_linux.cpp:69\r\n    #1 0x4579ff  (/usr/bin/gcc+0x4579ff) (BuildId: 7392cfd0fa10a20584133c316cc717abc268fd55)\r\n\r\nSUMMARY: AddressSanitizer: 582 byte(s) leaked in 9 allocation(s).\r\nerror: command '/usr/bin/gcc' failed with exit code 1\r\n```",
            "created_at": "2024-05-04T02:28:30Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2093965565",
            "id": 2093965565,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc58z2D9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2093965565/reactions"
            },
            "updated_at": "2024-05-04T02:28:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2093965565",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You're not looking for leaks so can ignore them as in https://stackoverflow.com/a/51061314/",
            "created_at": "2024-05-04T05:53:01Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2094037919",
            "id": 2094037919,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc580Huf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2094037919/reactions"
            },
            "updated_at": "2024-05-04T05:53:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2094037919",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I am having no luck tracking down the bug. Would you mind looking at https://github.com/YoSTEALTH/Shakti/actions/runs/9293027524/job/25575275512 I am not sure who else I can ask to help with this! #Python #C not much help when it comes to Cython.\r\n\r\nJust simply running async function gives segfault! doesn't make much sense.\r\n\r\n```python\r\n\r\nasync def nope_test():\r\n    print('nope_test()')\r\n\r\n\r\nshakti.run(\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test(),\r\n    nope_test()\r\n)\r\n\r\n# Fatal Python error: Segmentation fault\r\n\r\n# Current thread 0x0000746ae74d0740 (most recent call first):\r\n#   Garbage-collecting\r\n#   <no Python frame>\r\n\r\n# Extension modules: liburing.error, liburing.queue, liburing.time, liburing.os, liburing.version, liburing._test, liburing.helper, liburing.common, liburing.register, liburing.futex, liburing.file, liburing.syscall, liburing.xattr, liburing.statx, liburing.poll, liburing.socket, liburing.socket_extra, liburing.probe, liburing.other, shakti.event.entry, shakti.event.sleep, shakti.event.run, shakti.core.base, shakti.lib.time, shakti.os._test, shakti.os.random, shakti.os.rename, shakti.os.mkdir, shakti.os.remove, shakti.io.file, shakti.io.statx, shakti.io.socket (total: 32)\r\n```\r\n",
            "created_at": "2024-05-29T22:00:50Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2138331224",
            "id": 2138331224,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_dFhY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2138331224/reactions"
            },
            "updated_at": "2024-05-29T22:00:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2138331224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Using Valgrind to run above gives me:\r\n``` text\r\n\r\n==14783== Memcheck, a memory error detector\r\n==14783== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.\r\n==14783== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info\r\n==14783== Command: /opt/python/3.13/bin/python3 _3.py\r\n==14783== Parent PID: 14781\r\n==14783== \r\n==14783== Invalid read of size 8\r\n==14783==    at 0x3A8ACB: block_free (pyarena.c:95)\r\n==14783==    by 0x3A8ACB: _PyArena_Free (pyarena.c:170)\r\n==14783==    by 0x3B51D3: pyrun_file (pythonrun.c:1215)\r\n==14783==    by 0x3B51D3: _PyRun_SimpleFileObject (pythonrun.c:459)\r\n==14783==    by 0x3B57AB: _PyRun_AnyFileObject (pythonrun.c:77)\r\n==14783==    by 0x3DF700: pymain_run_file_obj (main.c:357)\r\n==14783==    by 0x3DF700: pymain_run_file (main.c:376)\r\n==14783==    by 0x3DF700: pymain_run_python.constprop.0 (main.c:639)\r\n==14783==    by 0x3DFDE9: Py_RunMain (main.c:718)\r\n==14783==    by 0x3DFDE9: pymain_main (main.c:748)\r\n==14783==    by 0x3DFDE9: Py_BytesMain (main.c:772)\r\n==14783==    by 0x49A4C87: (below main) (libc_start_call_main.h:58)\r\n==14783==  Address 0x7fc792f25120 is not stack'd, malloc'd or (recently) free'd\r\n==14783== \r\n==14783== \r\n==14783== Process terminating with default action of signal 11 (SIGSEGV): dumping core\r\n==14783==  Access not within mapped region at address 0x7FC792F25120\r\n==14783==    at 0x3A8ACB: block_free (pyarena.c:95)\r\n==14783==    by 0x3A8ACB: _PyArena_Free (pyarena.c:170)\r\n==14783==    by 0x3B51D3: pyrun_file (pythonrun.c:1215)\r\n==14783==    by 0x3B51D3: _PyRun_SimpleFileObject (pythonrun.c:459)\r\n==14783==    by 0x3B57AB: _PyRun_AnyFileObject (pythonrun.c:77)\r\n==14783==    by 0x3DF700: pymain_run_file_obj (main.c:357)\r\n==14783==    by 0x3DF700: pymain_run_file (main.c:376)\r\n==14783==    by 0x3DF700: pymain_run_python.constprop.0 (main.c:639)\r\n==14783==    by 0x3DFDE9: Py_RunMain (main.c:718)\r\n==14783==    by 0x3DFDE9: pymain_main (main.c:748)\r\n==14783==    by 0x3DFDE9: Py_BytesMain (main.c:772)\r\n==14783==    by 0x49A4C87: (below main) (libc_start_call_main.h:58)\r\n==14783==  If you believe this happened as a result of a stack\r\n==14783==  overflow in your program's main thread (unlikely but\r\n==14783==  possible), you can try to increase the size of the\r\n==14783==  main thread stack using the --main-stacksize= flag.\r\n==14783==  The main thread stack size used in this run was 8388608.\r\n==14783== \r\n==14783== HEAP SUMMARY:\r\n==14783==     in use at exit: 2,118,903 bytes in 2,532 blocks\r\n==14783==   total heap usage: 5,203 allocs, 2,671 frees, 7,648,034 bytes allocated\r\n==14783== \r\n==14783== 1 bytes in 1 blocks are definitely lost in loss record 3 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x27CB7F: PyMem_RawMalloc (obmalloc.c:940)\r\n==14783==    by 0x27CB7F: _PyObject_Malloc (obmalloc.c:2132)\r\n==14783==    by 0x25B3BC: PyModule_ExecDef (moduleobject.c:470)\r\n==14783==    by 0x386CEA: exec_builtin_or_dynamic (import.c:873)\r\n==14783==    by 0x386CEA: _imp_exec_dynamic_impl (import.c:4773)\r\n==14783==    by 0x386CEA: _imp_exec_dynamic (import.c.h:513)\r\n==14783==    by 0x258A5A: cfunction_vectorcall_O (methodobject.c:512)\r\n==14783==    by 0x1896CB: _PyEval_EvalFrameDefault (generated_cases.c.h:1353)\r\n==14783==    by 0x34A08C: _PyEval_EvalFrame (pycore_ceval.h:119)\r\n==14783==    by 0x34A08C: _PyEval_Vector (ceval.c:1818)\r\n==14783==    by 0x34A08C: PyEval_EvalCode (ceval.c:598)\r\n==14783==    by 0x3449A8: builtin_exec_impl (bltinmodule.c:1145)\r\n==14783==    by 0x3449A8: builtin_exec (bltinmodule.c.h:556)\r\n==14783==    by 0x258EDE: cfunction_vectorcall_FASTCALL_KEYWORDS (methodobject.c:441)\r\n==14783==    by 0x1896CB: _PyEval_EvalFrameDefault (generated_cases.c.h:1353)\r\n==14783==    by 0x1F3956: _PyObject_VectorcallTstate (pycore_call.h:168)\r\n==14783==    by 0x1F3956: object_vacall (call.c:819)\r\n==14783==    by 0x1F4F74: PyObject_CallMethodObjArgs (call.c:880)\r\n==14783== \r\n==14783== 520 bytes in 1 blocks are possibly lost in loss record 1,013 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x27CB7F: PyMem_RawMalloc (obmalloc.c:940)\r\n==14783==    by 0x27CB7F: _PyObject_Malloc (obmalloc.c:2132)\r\n==14783==    by 0x3796E4: _PyObject_MallocWithType (pycore_object_alloc.h:46)\r\n==14783==    by 0x3796E4: gc_alloc (gc.c:2022)\r\n==14783==    by 0x3796E4: _PyObject_GC_NewVar (gc.c:2061)\r\n==14783==    by 0x289BE7: PyTuple_New (tupleobject.c:76)\r\n==14783==    by 0x289BE7: PyTuple_New (tupleobject.c:70)\r\n==14783==    by 0x3A07CC: r_object (marshal.c:1243)\r\n==14783==    by 0x3A0A37: r_object (marshal.c:1428)\r\n==14783==    by 0x3A07F4: r_object (marshal.c:1249)\r\n==14783==    by 0x3A0A1E: r_object (marshal.c:1425)\r\n==14783==    by 0x3A07F4: r_object (marshal.c:1249)\r\n==14783==    by 0x3A0A1E: r_object (marshal.c:1425)\r\n==14783==    by 0x3A2B27: read_object (marshal.c:1556)\r\n==14783==    by 0x3A2CB8: marshal_loads_impl (marshal.c:1899)\r\n==14783==    by 0x3A2CB8: marshal_loads (marshal.c.h:332)\r\n==14783== \r\n==14783== 600 bytes in 1 blocks are possibly lost in loss record 1,030 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x27CB7F: PyMem_RawMalloc (obmalloc.c:940)\r\n==14783==    by 0x27CB7F: _PyObject_Malloc (obmalloc.c:2132)\r\n==14783==    by 0x3796E4: _PyObject_MallocWithType (pycore_object_alloc.h:46)\r\n==14783==    by 0x3796E4: gc_alloc (gc.c:2022)\r\n==14783==    by 0x3796E4: _PyObject_GC_NewVar (gc.c:2061)\r\n==14783==    by 0x289BE7: PyTuple_New (tupleobject.c:76)\r\n==14783==    by 0x289BE7: PyTuple_New (tupleobject.c:70)\r\n==14783==    by 0x3A07CC: r_object (marshal.c:1243)\r\n==14783==    by 0x3A0A37: r_object (marshal.c:1428)\r\n==14783==    by 0x3A07F4: r_object (marshal.c:1249)\r\n==14783==    by 0x3A0A1E: r_object (marshal.c:1425)\r\n==14783==    by 0x3A2B27: read_object (marshal.c:1556)\r\n==14783==    by 0x3A2CB8: marshal_loads_impl (marshal.c:1899)\r\n==14783==    by 0x3A2CB8: marshal_loads (marshal.c.h:332)\r\n==14783==    by 0x18E825: _PyEval_EvalFrameDefault (generated_cases.c.h:1215)\r\n==14783==    by 0x1F3956: _PyObject_VectorcallTstate (pycore_call.h:168)\r\n==14783==    by 0x1F3956: object_vacall (call.c:819)\r\n==14783== \r\n==14783== 4,608 bytes in 2 blocks are possibly lost in loss record 1,469 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x4004A8D: malloc (rtld-malloc.h:56)\r\n==14783==    by 0x4004A8D: _dlfo_mappings_segment_allocate (dl-find_object.c:217)\r\n==14783==    by 0x4004A8D: _dl_find_object_update_1 (dl-find_object.c:671)\r\n==14783==    by 0x4004A8D: _dl_find_object_update (dl-find_object.c:805)\r\n==14783==    by 0x400CD1F: dl_open_worker_begin (dl-open.c:756)\r\n==14783==    by 0x4001522: _dl_catch_exception (dl-catch.c:237)\r\n==14783==    by 0x400C0DF: dl_open_worker (dl-open.c:803)\r\n==14783==    by 0x4001522: _dl_catch_exception (dl-catch.c:237)\r\n==14783==    by 0x400C533: _dl_open (dl-open.c:905)\r\n==14783==    by 0x4A0D9E3: dlopen_doit (dlopen.c:56)\r\n==14783==    by 0x4001522: _dl_catch_exception (dl-catch.c:237)\r\n==14783==    by 0x4001678: _dl_catch_error (dl-catch.c:256)\r\n==14783==    by 0x4A0D4C2: _dlerror_run (dlerror.c:138)\r\n==14783==    by 0x4A0DA9E: dlopen_implementation (dlopen.c:71)\r\n==14783==    by 0x4A0DA9E: dlopen@@GLIBC_2.34 (dlopen.c:81)\r\n==14783== \r\n==14783== 5,296 bytes in 1 blocks are possibly lost in loss record 1,473 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x27CB7F: PyMem_RawMalloc (obmalloc.c:940)\r\n==14783==    by 0x27CB7F: _PyObject_Malloc (obmalloc.c:2132)\r\n==14783==    by 0x3796E4: _PyObject_MallocWithType (pycore_object_alloc.h:46)\r\n==14783==    by 0x3796E4: gc_alloc (gc.c:2022)\r\n==14783==    by 0x3796E4: _PyObject_GC_NewVar (gc.c:2061)\r\n==14783==    by 0x289493: _PyTuple_FromArray.part.0 (tupleobject.c:380)\r\n==14783==    by 0x18D400: _PyEval_EvalFrameDefault (generated_cases.c.h:1374)\r\n==14783==    by 0x1F625F: _PyObject_VectorcallDictTstate (call.c:135)\r\n==14783==    by 0x1F625F: _PyObject_Call_Prepend (call.c:504)\r\n==14783==    by 0x29D941: slot_tp_init (typeobject.c:9646)\r\n==14783==    by 0x2906F6: type_call (typeobject.c:1909)\r\n==14783==    by 0x1F3503: _PyObject_MakeTpCall (call.c:242)\r\n==14783==    by 0x18AA2D: _PyEval_EvalFrameDefault (generated_cases.c.h:813)\r\n==14783==    by 0x34A08C: _PyEval_EvalFrame (pycore_ceval.h:119)\r\n==14783==    by 0x34A08C: _PyEval_Vector (ceval.c:1818)\r\n==14783==    by 0x34A08C: PyEval_EvalCode (ceval.c:598)\r\n==14783==    by 0x3449A8: builtin_exec_impl (bltinmodule.c:1145)\r\n==14783==    by 0x3449A8: builtin_exec (bltinmodule.c.h:556)\r\n==14783== \r\n==14783== 8,224 bytes in 1 blocks are possibly lost in loss record 1,483 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x27CB7F: PyMem_RawMalloc (obmalloc.c:940)\r\n==14783==    by 0x27CB7F: _PyObject_Malloc (obmalloc.c:2132)\r\n==14783==    by 0x3A8A11: block_new (pyarena.c:81)\r\n==14783==    by 0x3A8A11: _PyArena_New (pyarena.c:135)\r\n==14783==    by 0x3B5155: pyrun_file (pythonrun.c:1195)\r\n==14783==    by 0x3B5155: _PyRun_SimpleFileObject (pythonrun.c:459)\r\n==14783==    by 0x3B57AB: _PyRun_AnyFileObject (pythonrun.c:77)\r\n==14783==    by 0x3DF700: pymain_run_file_obj (main.c:357)\r\n==14783==    by 0x3DF700: pymain_run_file (main.c:376)\r\n==14783==    by 0x3DF700: pymain_run_python.constprop.0 (main.c:639)\r\n==14783==    by 0x3DFDE9: Py_RunMain (main.c:718)\r\n==14783==    by 0x3DFDE9: pymain_main (main.c:748)\r\n==14783==    by 0x3DFDE9: Py_BytesMain (main.c:772)\r\n==14783==    by 0x49A4C87: (below main) (libc_start_call_main.h:58)\r\n==14783== \r\n==14783== 8,224 bytes in 1 blocks are possibly lost in loss record 1,484 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x27CB7F: PyMem_RawMalloc (obmalloc.c:940)\r\n==14783==    by 0x27CB7F: _PyObject_Malloc (obmalloc.c:2132)\r\n==14783==    by 0x3A8B8F: block_new (pyarena.c:81)\r\n==14783==    by 0x3A8B8F: block_alloc (pyarena.c:112)\r\n==14783==    by 0x3A8B8F: _PyArena_Malloc (pyarena.c:183)\r\n==14783==    by 0x195613: _PyPegen_insert_memo (pegen.c:54)\r\n==14783==    by 0x1A4934: conjunction_rule (parser.c:12086)\r\n==14783==    by 0x1A4B04: disjunction_rule (parser.c:11950)\r\n==14783==    by 0x1A511C: expression_rule (parser.c:11238)\r\n==14783==    by 0x1AE0C1: _tmp_122_rule (parser.c:33162)\r\n==14783==    by 0x1B5A96: genexp_rule (parser.c:17396)\r\n==14783==    by 0x1A17FB: primary_raw (parser.c:14405)\r\n==14783==    by 0x1A17FB: primary_rule (parser.c:14320)\r\n==14783==    by 0x1A1C67: await_primary_rule (parser.c:14274)\r\n==14783==    by 0x1A1F99: power_rule (parser.c:14150)\r\n==14783==    by 0x1A1F99: factor_rule (parser.c:14100)\r\n==14783== \r\n==14783== 8,224 bytes in 1 blocks are possibly lost in loss record 1,485 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x27CB7F: PyMem_RawMalloc (obmalloc.c:940)\r\n==14783==    by 0x27CB7F: _PyObject_Malloc (obmalloc.c:2132)\r\n==14783==    by 0x3A8B8F: block_new (pyarena.c:81)\r\n==14783==    by 0x3A8B8F: block_alloc (pyarena.c:112)\r\n==14783==    by 0x3A8B8F: _PyArena_Malloc (pyarena.c:183)\r\n==14783==    by 0x1956B5: _PyPegen_insert_memo (pegen.c:54)\r\n==14783==    by 0x1956B5: _PyPegen_update_memo (pegen.c:79)\r\n==14783==    by 0x1A376E: bitwise_or_rule (parser.c:12964)\r\n==14783==    by 0x1A3B4D: comparison_rule (parser.c:12210)\r\n==14783==    by 0x1A3B4D: inversion_rule (parser.c:12161)\r\n==14783==    by 0x1A46E4: conjunction_rule (parser.c:12038)\r\n==14783==    by 0x1A4B04: disjunction_rule (parser.c:11950)\r\n==14783==    by 0x1A511C: expression_rule (parser.c:11238)\r\n==14783==    by 0x1AE0C1: _tmp_122_rule (parser.c:33162)\r\n==14783==    by 0x1B5A96: genexp_rule (parser.c:17396)\r\n==14783==    by 0x1A17FB: primary_raw (parser.c:14405)\r\n==14783==    by 0x1A17FB: primary_rule (parser.c:14320)\r\n==14783== \r\n==14783== 8,224 bytes in 1 blocks are possibly lost in loss record 1,486 of 1,521\r\n==14783==    at 0x4842788: malloc (vg_replace_malloc.c:446)\r\n==14783==    by 0x27CB7F: PyMem_RawMalloc (obmalloc.c:940)\r\n==14783==    by 0x27CB7F: _PyObject_Malloc (obmalloc.c:2132)\r\n==14783==    by 0x3A8B8F: block_new (pyarena.c:81)\r\n==14783==    by 0x3A8B8F: block_alloc (pyarena.c:112)\r\n==14783==    by 0x3A8B8F: _PyArena_Malloc (pyarena.c:183)\r\n==14783==    by 0x1956B5: _PyPegen_insert_memo (pegen.c:54)\r\n==14783==    by 0x1956B5: _PyPegen_update_memo (pegen.c:79)\r\n==14783==    by 0x1A376E: bitwise_or_rule (parser.c:12964)\r\n==14783==    by 0x1A3B4D: comparison_rule (parser.c:12210)\r\n==14783==    by 0x1A3B4D: inversion_rule (parser.c:12161)\r\n==14783==    by 0x1A46E4: conjunction_rule (parser.c:12038)\r\n==14783==    by 0x1A4B04: disjunction_rule (parser.c:11950)\r\n==14783==    by 0x1A511C: expression_rule (parser.c:11238)\r\n==14783==    by 0x1AE0C1: _tmp_122_rule (parser.c:33162)\r\n==14783==    by 0x1AE330: _tmp_258_rule (parser.c:41274)\r\n==14783==    by 0x1AE330: _loop0_124_rule (parser.c:33214)\r\n==14783==    by 0x1AE330: _gather_123_rule (parser.c:33282)\r\n==14783==    by 0x1B8C4E: args_rule (parser.c:17645)\r\n==14783== \r\n==14783== LEAK SUMMARY:\r\n==14783==    definitely lost: 1 bytes in 1 blocks\r\n==14783==    indirectly lost: 0 bytes in 0 blocks\r\n==14783==      possibly lost: 43,920 bytes in 9 blocks\r\n==14783==    still reachable: 2,074,982 bytes in 2,522 blocks\r\n==14783==         suppressed: 0 bytes in 0 blocks\r\n==14783== Reachable blocks (those to which a pointer was found) are not shown.\r\n==14783== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n==14783== \r\n==14783== For lists of detected and suppressed errors, rerun with: -s\r\n==14783== ERROR SUMMARY: 10 errors from 10 contexts (suppressed: 0 from 0)\r\n\r\n```",
            "created_at": "2024-05-29T23:31:31Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2138415376",
            "id": 2138415376,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_daEQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2138415376/reactions"
            },
            "updated_at": "2024-05-29T23:31:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2138415376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Running using `lldb` gives:\r\n``` bash\r\n$ lldb -- /opt/python/3.13/bin/python3 _3.py\r\n(lldb) target create \"/opt/python/3.13/bin/python3\"\r\nCurrent executable set to '/opt/python/3.13/bin/python3' (x86_64).\r\n(lldb) settings set -- target.run-args  \"_3.py\"\r\n(lldb) run\r\nProcess 20821 launched: '/opt/python/3.13/bin/python3' (x86_64)\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nnope_test()\r\nProcess 20821 stopped\r\n* thread #1, name = 'python3', stop reason = signal SIGSEGV: address not mapped to object (fault address: 0x7ffff6973120)\r\n    frame #0: 0x00005555557f4acb python3`_PyArena_Free at pyarena.c:95:16\r\n(lldb) bt\r\n* thread #1, name = 'python3', stop reason = signal SIGSEGV: address not mapped to object (fault address: 0x7ffff6973120)\r\n  * frame #0: 0x00005555557f4acb python3`_PyArena_Free at pyarena.c:95:16\r\n    frame #1: 0x00005555557f4abc python3`_PyArena_Free(arena=0x00007ffff7bc7cd0) at pyarena.c:170:5\r\n    frame #2: 0x00005555558011d4 python3`_PyRun_SimpleFileObject at pythonrun.c:1215:5\r\n    frame #3: 0x0000555555801151 python3`_PyRun_SimpleFileObject(fp=0x0000555555b5ed40, filename=0x00007ffff7599700, closeit=1, flags=0x00007fffffffdc48) at pythonrun.c:459:13\r\n    frame #4: 0x00005555558017ac python3`_PyRun_AnyFileObject(fp=0x0000555555b5ed40, filename=0x00007ffff7599700, closeit=1, flags=0x00007fffffffdc48) at pythonrun.c:77:15\r\n    frame #5: 0x000055555582b701 python3`pymain_run_python at main.c:357:15\r\n    frame #6: 0x000055555582b66b python3`pymain_run_python at main.c:376:15\r\n    frame #7: 0x000055555582b618 python3`pymain_run_python(exitcode=0x00007fffffffdd90) at main.c:639:21\r\n    frame #8: 0x000055555582bdea python3`Py_BytesMain at main.c:718:5\r\n    frame #9: 0x00007ffff7cd3c88 libc.so.6`___lldb_unnamed_symbol3256 + 120\r\n    frame #10: 0x00007ffff7cd3d4c libc.so.6`__libc_start_main + 140\r\n    frame #11: 0x00005555555e0ed5 python3`_start + 37\r\n(lldb)\r\n```",
            "created_at": "2024-05-29T23:39:25Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2138421254",
            "id": 2138421254,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_dbgG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2138421254/reactions"
            },
            "updated_at": "2024-05-29T23:39:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2138421254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@da-woods https://github.com/axboe/liburing/issues/1159 from what I can tell, `cqe` does not get populated consistently from C side into Cython class https://github.com/YoSTEALTH/Liburing/blob/master/src/liburing/queue.pyx#L131 any insight into this?",
            "created_at": "2024-06-01T00:09:50Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2143154555",
            "id": 2143154555,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_vfF7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2143154555/reactions"
            },
            "updated_at": "2024-06-01T00:09:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2143154555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I haven't tested this, but what I'm very suspicious of is:\r\n\r\n```\r\n            sqe = <SQE><void*><uintptr_t>user_data\r\n            sqe.result = res\r\n            if sqe.job & CORO:\r\n                Py_DECREF(sqe)\r\n                value = None    # start coroutine\r\n            else:\r\n                value = False   # bogus value\r\n```\r\n\r\nWhen you do\r\n\r\n```\r\nsqe = <SQE><void*><uintptr_t>user_data\r\n```\r\n\r\nCython *doesn't* `INCREF` `user_data` but it does take ownership of it. Therefore in the\r\n\r\n```\r\n                Py_DECREF(sqe)\r\n                value = None    # start coroutine\r\n```\r\n\r\npath `sqe` will get `DECREF`ed twice - once by you and once by Cython. Since you only have one reference to it I think that's wrong.\r\n\r\nSimilarly in the\r\n\r\n```\r\n                value = False   # bogus value\r\n```\r\n\r\npath, `sqe` will get `DECREF`ed once by Cython and thus destroyed, which I suspect isn't what you intend.\r\n\r\nI think what you want is\r\n\r\n```\r\n            sqe = <SQE><void*><uintptr_t>user_data\r\n            sqe.result = res\r\n            if sqe.job & CORO:\r\n                # sqe is decrefed by Cython\r\n                value = None    # start coroutine\r\n            else:\r\n                Py_INCREF(sqe)  # sqe survives\r\n                value = False   # bogus value\r\n```\r\n\r\nYou could probably find that out for sure by using a debug build of Python, which has extra asserts in to catch reference counting bugs. But I'm not sure whether that's worth it vs just making the change.",
            "created_at": "2024-06-01T08:50:40Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2143366715",
            "id": 2143366715,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_wS47",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2143366715/reactions"
            },
            "updated_at": "2024-06-01T08:50:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2143366715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Actually goal there is to `DECREF` the `sqe` if `sqe.job & CORO` as I manually increase it here https://github.com/YoSTEALTH/Shakti/blob/master/src/shakti/event/run.pyx#L55-L60 I normally let Cython deal with managing reference which it seem to do good job.\r\n\r\nI ended up solving the segfault issue https://github.com/axboe/liburing/issues/1159#issuecomment-2143341439 as you can see basic test passes https://github.com/YoSTEALTH/Shakti/actions/runs/9328775681 for some reason C function `io_uring_peek_batch_cqe` was glitching out once it was wrapped in Cython, I am not sure how to debug that issue! The solution was to use different combination of C functions which seems to have fixed the issue.\r\n\r\nIt wouldn't just be my system or compiler issues since I also upload to GitHub and it was failing there as well.",
            "created_at": "2024-06-01T19:35:04Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2143560498",
            "id": 2143560498,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_xCMy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2143560498/reactions"
            },
            "updated_at": "2024-06-01T19:35:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2143560498",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I still think the decref is wrong. You finish `initialize` with a refcount of 1 on `sqe`. After `sqe = <SQE><void*><uintptr_t>user_data` Cython takes ownership of that reference. So your DECREF will end up being one too many.",
            "created_at": "2024-06-01T20:19:51Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2143573444",
            "id": 2143573444,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_xFXE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2143573444/reactions"
            },
            "updated_at": "2024-06-01T20:19:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2143573444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tried this and its a segfault:\r\n```python\r\nsqe = <SQE><void*><uintptr_t>user_data\r\nsqe.result = res\r\nif sqe.job & CORO:\r\n    value = None    # start coroutine\r\nelse:\r\n    Py_DECREF(sqe)\r\n    value = False   # bogus value\r\n```\r\nI only increase ref for flag `sqe.job = CORO` there are other jobs like `ENTRY` `ENTRIES` https://github.com/YoSTEALTH/Shakti/blob/master/src/shakti/event/entry.pyx#L87-L95 I don't mess with those reference count since they are inside async coroutine and those are kept alive till coroutine is closed.\r\n\r\n`initialize` is a function so once initialization is done function will clear all the internal reference, because those `sqe` don't get passed outside of function thus... I increase `sqe object` by `1`, now the object isn't gc'ed. Later `sqe` object is recreated inside `engine` the object will have `2` ref count `1` from inside `initialize` and `1` for newly created object, thus I decref by `1`, now new `sqe` is safe to be deleted/referenced, ...\r\n\r\nIts not a normal event loop where you use a queue to hold objects and such, queue is very expensive, I use few of these(gc, coroutine) tricks to manage.",
            "created_at": "2024-06-02T04:16:16Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2143690776",
            "id": 2143690776,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_xiAY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2143690776/reactions"
            },
            "updated_at": "2024-06-02T04:16:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2143690776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would it be better to use `Py_XDECREF` with `PyObject`?\r\n``` cython\r\ncdef PyObject* ptr\r\nif (ptr := <PyObject*><uintptr_t>user_data) is NULL:\r\n    break  # handle error\r\nsqe = <SQE>ptr\r\nsqe.result = res\r\nif sqe.job & CORO:\r\n    Py_XDECREF(ptr)\r\n    value = None    # start coroutine\r\nelse:\r\n    value = False   # bogus value\r\n```",
            "created_at": "2024-06-02T05:24:31Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2143703775",
            "id": 2143703775,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_xlLf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2143703775/reactions"
            },
            "updated_at": "2024-06-02T05:24:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2143703775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@da-woods @scoder would you guys mind following whats happening at https://github.com/axboe/liburing/issues/1159 looks like C function is working as intended, so could be a Cython issue? Same exact code 2 different C functions called produces either success and segfault?!\r\n\r\np.s also would you mind looking at https://github.com/YoSTEALTH/Liburing/blob/master/src/liburing/helper.pyx#L48-L55 is this correct? Or should it be `memcpy(sqe, sqe_s.ptr + i, size)` ?",
            "created_at": "2024-06-04T03:30:26Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2146518767",
            "id": 2146518767,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_8Ubv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2146518767/reactions"
            },
            "updated_at": "2024-06-04T03:41:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2146518767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I tried this and its a segfault:\r\n> \r\n> ```python\r\n> sqe = <SQE><void*><uintptr_t>user_data\r\n> sqe.result = res\r\n> if sqe.job & CORO:\r\n>     value = None    # start coroutine\r\n> else:\r\n>     Py_DECREF(sqe)\r\n>     value = False   # bogus value\r\n> ```\r\n\r\nThis *isn't* what I suggested (check the `else` case).\r\n\r\n> p.s also would you mind looking at https://github.com/YoSTEALTH/Liburing/blob/master/src/liburing/helper.pyx#L48-L55 is this correct? Or should it be `memcpy(sqe, sqe_s.ptr + i, size)` ?\r\n\r\nThe two should be equivalent. I personally think `sqe_s.ptr + i` is easier to read, but it does the same thing.",
            "created_at": "2024-06-04T06:45:18Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2146734552",
            "id": 2146734552,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc5_9JHY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2146734552/reactions"
            },
            "updated_at": "2024-06-04T06:45:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2146734552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The two should be equivalent. I personally think sqe_s.ptr + i is easier to read, but it does the same thing.\r\n\r\nCool, I couldn't find any docs related to how to use `memcpy` with `cython`, just saw that trick on the net some where. Agree with easy to read.\r\n\r\nTried with bellow and doesn't seem to change the segfault!\r\n``` python\r\nelse:\r\n    Py_XINCREF(ptr)\r\n    value = False   # bogus value\r\n```",
            "created_at": "2024-06-05T03:06:10Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2148769548",
            "id": 2148769548,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc6AE58M",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2148769548/reactions"
            },
            "updated_at": "2024-06-05T03:40:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2148769548",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I created a simple test so please check out https://github.com/YoSTEALTH/Liburing/blob/master/test/queue/get_cqe_test.py#L34 so you can see why `io_uring_peek_batch_cqe` segfaults! there isn't any external library or reference counting going on, simple test. Here is the test result: https://github.com/YoSTEALTH/Liburing/actions/runs/9378179237/job/25820967178 if `loop = 1` that test will pass and sometimes randomly it passes for lower `loop` values.\r\n\r\nedit: not much to the wrap https://github.com/search?q=repo%3AYoSTEALTH/Liburing%20io_uring_peek_batch_cqe&type=code",
            "created_at": "2024-06-05T04:22:22Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2148826197",
            "id": 2148826197,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc6AFHxV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2148826197/reactions"
            },
            "updated_at": "2024-06-05T04:32:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2148826197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can reproduce your error. I didn't manage to get any useful information about what causes it in the time I have available I'm afraid. Not sure what else to usefully suggest.",
            "created_at": "2024-06-05T20:01:05Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2150855762",
            "id": 2150855762,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc6AM3RS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2150855762/reactions"
            },
            "updated_at": "2024-06-05T20:01:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2150855762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I can reproduce your error. I didn't manage to get any useful information about what causes it in the time I have available I'm afraid. Not sure what else to usefully suggest.\r\n\r\nThanks @da-woods for testing. I feel a bit better... don't sound like the crazy person telling everyone there is a bug for months now! lol\r\n\r\nC developer recommended using `io_uring` [debug tracking ](https://github.com/axboe/liburing/issues/1159#issuecomment-2146101228) in it you can see that `io_uring` does receive and complete the event as designed. The problem might be somehow that data isn't getting to Cython/Python side? Or something else?\r\n\r\nTesting: https://github.com/YoSTEALTH/Liburing/blob/master/test/queue/get_cqe_test.py#L25-L42\r\n\r\n`loop = 1` success\r\n``` bash\r\n# cat /sys/kernel/debug/tracing/trace\r\n# tracer: nop\r\n#\r\n# entries-in-buffer/entries-written: 3/3   #P:24\r\n#\r\n#                                _-----=> irqs-off/BH-disabled\r\n#                               / _----=> need-resched\r\n#                              | / _---=> hardirq/softirq\r\n#                              || / _--=> preempt-depth\r\n#                              ||| / _-=> migrate-disable\r\n#                              |||| /     delay\r\n#           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION\r\n#              | |         |   |||||     |         |\r\n         python3-10870   [007] .....  9449.521209: io_uring_create: ring 00000000fba94d3d, fd 5 sq size 1024, cq size 2048, flags 0x10000\r\n         python3-10870   [007] .....  9449.521567: io_uring_submit_req: ring 00000000fba94d3d, req 00000000b241b5d9, user_data 0x1, opcode NOP, flags 0x0, sq_thread 0\r\n         python3-10870   [007] ...1.  9449.521569: io_uring_complete: ring 00000000fba94d3d, req 00000000b241b5d9, user_data 0x1, result 0, cflags 0x0 extra1 0 extra2 0\r\n```\r\n\r\n`loop = 3` segfault! (randomly this test will pass as well)\r\n``` bash\r\n# cat /sys/kernel/debug/tracing/trace\r\n# tracer: nop\r\n#\r\n# entries-in-buffer/entries-written: 7/7   #P:24\r\n#\r\n#                                _-----=> irqs-off/BH-disabled\r\n#                               / _----=> need-resched\r\n#                              | / _---=> hardirq/softirq\r\n#                              || / _--=> preempt-depth\r\n#                              ||| / _-=> migrate-disable\r\n#                              |||| /     delay\r\n#           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION\r\n#              | |         |   |||||     |         |\r\n         python3-11070   [007] .....  9858.839921: io_uring_create: ring 00000000c1fecd3c, fd 5 sq size 1024, cq size 2048, flags 0x10000\r\n         python3-11070   [007] .....  9858.840299: io_uring_submit_req: ring 00000000c1fecd3c, req 00000000c4ef02c0, user_data 0x1, opcode NOP, flags 0x0, sq_thread 0\r\n         python3-11070   [007] .....  9858.840300: io_uring_submit_req: ring 00000000c1fecd3c, req 00000000d2a8f79d, user_data 0x2, opcode NOP, flags 0x0, sq_thread 0\r\n         python3-11070   [007] .....  9858.840300: io_uring_submit_req: ring 00000000c1fecd3c, req 00000000e253e956, user_data 0x3, opcode NOP, flags 0x0, sq_thread 0\r\n         python3-11070   [007] ...1.  9858.840301: io_uring_complete: ring 00000000c1fecd3c, req 00000000c4ef02c0, user_data 0x1, result 0, cflags 0x0 extra1 0 extra2 0\r\n         python3-11070   [007] ...1.  9858.840302: io_uring_complete: ring 00000000c1fecd3c, req 00000000d2a8f79d, user_data 0x2, result 0, cflags 0x0 extra1 0 extra2 0\r\n         python3-11070   [007] ...1.  9858.840302: io_uring_complete: ring 00000000c1fecd3c, req 00000000e253e956, user_data 0x3, result 0, cflags 0x0 extra1 0 extra2 0\r\n```",
            "created_at": "2024-06-05T21:11:44Z",
            "html_url": "https://github.com/cython/cython/issues/6176#issuecomment-2150970124",
            "id": 2150970124,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6176",
            "node_id": "IC_kwDOABDGAc6ANTMM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2150970124/reactions"
            },
            "updated_at": "2024-06-05T21:11:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2150970124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
                "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
                "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
                "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
                "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YoSTEALTH",
                "id": 35307184,
                "login": "YoSTEALTH",
                "node_id": "MDQ6VXNlcjM1MzA3MTg0",
                "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
                "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
                "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YoSTEALTH"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6176/comments",
    "created_at": "2024-05-02T20:56:55Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-03T17:30:37Z",
            "event": "labeled",
            "id": 12699199949,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "LE_lADOABDGAc6HsCDXzwAAAAL07mnN",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12699199949"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-03T17:35:43Z",
            "event": "closed",
            "id": 12699252806,
            "node_id": "CE_lADOABDGAc6HsCDXzwAAAAL07zhG",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "url": "https://api.github.com/repos/cython/cython/issues/events/12699252806"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-03T21:43:02Z",
            "event": "mentioned",
            "id": 12701447563,
            "node_id": "MEE_lADOABDGAc6HsCDXzwAAAAL1ELWL",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12701447563"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-03T21:43:03Z",
            "event": "subscribed",
            "id": 12701447575,
            "node_id": "SE_lADOABDGAc6HsCDXzwAAAAL1ELWX",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12701447575"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-01T00:09:52Z",
            "event": "mentioned",
            "id": 13007136742,
            "node_id": "MEE_lADOABDGAc6HsCDXzwAAAAMHSSfm",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13007136742"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-01T00:09:52Z",
            "event": "subscribed",
            "id": 13007136771,
            "node_id": "SE_lADOABDGAc6HsCDXzwAAAAMHSSgD",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13007136771"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-04T03:30:27Z",
            "event": "mentioned",
            "id": 13029518592,
            "node_id": "MEE_lADOABDGAc6HsCDXzwAAAAMInq0A",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13029518592"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-04T03:30:27Z",
            "event": "subscribed",
            "id": 13029518605,
            "node_id": "SE_lADOABDGAc6HsCDXzwAAAAMInq0N",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13029518605"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-04T03:30:27Z",
            "event": "mentioned",
            "id": 13029518621,
            "node_id": "MEE_lADOABDGAc6HsCDXzwAAAAMInq0d",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13029518621"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-04T03:30:27Z",
            "event": "subscribed",
            "id": 13029518637,
            "node_id": "SE_lADOABDGAc6HsCDXzwAAAAMInq0t",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13029518637"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-05T21:11:46Z",
            "event": "mentioned",
            "id": 13057585324,
            "node_id": "MEE_lADOABDGAc6HsCDXzwAAAAMKSvCs",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13057585324"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-05T21:11:46Z",
            "event": "subscribed",
            "id": 13057585341,
            "node_id": "SE_lADOABDGAc6HsCDXzwAAAAMKSvC9",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13057585341"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6176/events",
    "html_url": "https://github.com/cython/cython/issues/6176",
    "id": 2276466903,
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 414800623,
            "name": "support question",
            "node_id": "MDU6TGFiZWw0MTQ4MDA2MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/support%20question"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6176/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6HsCDX",
    "number": 6176,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6176/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6176/timeline",
    "title": "[BUG] Random Segfault",
    "updated_at": "2024-06-05T21:11:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6176",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35307184?v=4",
        "events_url": "https://api.github.com/users/YoSTEALTH/events{/privacy}",
        "followers_url": "https://api.github.com/users/YoSTEALTH/followers",
        "following_url": "https://api.github.com/users/YoSTEALTH/following{/other_user}",
        "gists_url": "https://api.github.com/users/YoSTEALTH/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/YoSTEALTH",
        "id": 35307184,
        "login": "YoSTEALTH",
        "node_id": "MDQ6VXNlcjM1MzA3MTg0",
        "organizations_url": "https://api.github.com/users/YoSTEALTH/orgs",
        "received_events_url": "https://api.github.com/users/YoSTEALTH/received_events",
        "repos_url": "https://api.github.com/users/YoSTEALTH/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/YoSTEALTH/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/YoSTEALTH/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/YoSTEALTH"
    }
}