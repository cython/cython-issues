{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nIf I have 2 extensions in one `setup.py`, and the 2 extensions cimport the same `.pxd` file, an error `TypeError: '<' not supported between instances of 'dict' and 'dict'` will occurs\n\n### Code to reproduce the behaviour:\n\nLet's say we have a dir\r\n```\r\ntest_cython\r\n├── __init__.py\r\n├── __pycache__\r\n├── cpp\r\n│   ├── include\r\n│   │   ├── a.h\r\n│   │   └── b.h\r\n│   └── src\r\n│       ├── a.cpp\r\n│       └── b.cpp\r\n└── cython\r\n    ├── aa.pxd\r\n    ├── aa.pyx\r\n    ├── bb.pxd\r\n    ├── bb.pyx\r\n    ├── share.pxd\r\n    └── share.pyx\r\n```\r\n```cpp\r\n// a.h\r\nclass A {\r\n    int a;\r\npublic:\r\n    int get_a();\r\n};\r\n\r\n// b.h\r\nclass B {\r\n    int b;\r\npublic:\r\n    int get_b();\r\n};\r\n\r\n// a.cpp\r\n#include \"a.h\"\r\nint A::get_a() {\r\n    return a;\r\n}\r\n\r\n// b.cpp\r\n#include \"b.h\"\r\n\r\nint B::get_b() {\r\n    return b;\r\n}\r\n```\r\n\r\n```cython\r\n# aa.pxd\r\ncdef extern from \"a.h\":\r\n    cdef cppclass A:\r\n        A()\r\n        int get_a()\r\n\r\n# bb.pxd\r\ncdef extern from \"b.h\":\r\n    cdef cppclass B:\r\n        B()\r\n        int get_b()\r\n\r\n# share.pxd\r\ncdef class Shrubbery:\r\n    cdef int width\r\n    cdef int length\r\n\r\n# share.pyx\r\n# distutils: language = c++\r\ncdef class Shrubbery:\r\n    def __init__(self, int w, int l):\r\n        self.width = w\r\n        self.length = l\r\n\r\ndef standard_shrubbery():\r\n    return Shrubbery(3, 7)\r\n\r\n# aa.pyx\r\n# distutils: language = c++\r\n\r\nfrom aa cimport A\r\nfrom share cimport Shrubbery\r\nimport share\r\ncdef class PyA:\r\n    cdef A ca\r\n\r\n    def __cinit__(self):\r\n        self.ca = A()\r\n\r\n    def test(self):\r\n        self.ca.get_a()\r\n        cdef Shrubbery sh\r\n        sh = share.standard_shrubbery()\r\n        print(\"Shrubbery size is\", sh.width, 'x', sh.length)\r\n\r\n# bb.pyx\r\n# distutils: language = c++\r\n\r\nfrom bb cimport B\r\nfrom share cimport Shrubbery\r\nimport share\r\ncdef class PyB:\r\n    cdef B ca\r\n\r\n    def __cinit__(self):\r\n        self.cb = B()\r\n\r\n    def test(self):\r\n        self.cb.get_b()\r\n        cdef Shrubbery sh\r\n        sh = share.standard_shrubbery()\r\n        print(\"Shrubbery size is\", sh.width, 'x', sh.length)\r\n```\r\n```python\r\n# setup.py\r\nfrom Cython.Build import cythonize\r\nfrom pathlib import Path\r\nfrom setuptools import Extension, setup\r\n\r\n\r\nPROJ_NAME_A = \"aa\"\r\nPROJ_NAME_B = \"bb\"\r\nPRJ_PATH = Path(__file__).absolute().parent  / \"test_cython\"\r\n\r\nsrcs_A = [\r\n    str(PRJ_PATH / \"cython\" / \"aa.pyx\"),\r\n    str(PRJ_PATH / \"cython\" / \"share.pyx\"),\r\n    str(PRJ_PATH / \"cpp\" / \"src\" / \"a.cpp\"),\r\n]\r\n\r\n\r\nsrcs_B = [\r\n    str(PRJ_PATH / \"cython\" / \"bb.pyx\"),\r\n    str(PRJ_PATH / \"cython\" / \"share.pyx\"),\r\n    str(PRJ_PATH / \"cpp\" / \"src\" / \"b.cpp\"),\r\n]\r\n\r\na_ext = Extension(\r\n    PROJ_NAME_A,\r\n    sources=srcs_A,\r\n    language=\"c++\",\r\n    include_dirs=[str(PRJ_PATH / \"cpp\" / \"include\")],\r\n)\r\n\r\nb_ext = Extension(\r\n    PROJ_NAME_B,\r\n    sources=srcs_B,\r\n    language=\"c++\",\r\n    include_dirs=[str(PRJ_PATH / \"cpp\" / \"include\")],\r\n)\r\n\r\n# extenstions = [a_ext]\r\nexternsions = [a_ext, b_ext]\r\n\r\nsetup(\r\n    ext_modules=cythonize(externsions, language_level=3),\r\n)\r\n```\r\nNote that `setup.py` is in the same layer with `test_cython`\r\n\r\nIf I uncomment `extensions = [a_ext]` and comment `extensions = [a_ext, b_ext]`, and run `python setup.py build_ext`, `.pyd` file will be generated, although it will say `AttributeError: module 'share' has no attribute 'Shrubbery'` when I `from aa import PyA`, but that's Okay, it's not the point I want to focus today.\r\n\r\nNow, in `cython` directory, delete all the `.cpp` files (very important to reproduce the bug), and uncomment `extensions = [a_ext, b_ext]`, and run `python setup.py build_ext`, it will say `TypeError: '<' not supported between instances of 'dict' and 'dict'`\r\n\n\n### Expected behaviour\n\nI read the source code of cython, and found that in `Build/Dependencies.py#line1121`,  there is a `to_compile.sort()`. If there is no `.cpp` files in `cython` directory,  it will send every `.pyx` files to the list `to_compile`. As both `a_ext` and `b_ext` need `share.pyx`, `share.pyx` is sent twice to `to_compile`. In `to_compile`, every element is a tuple, but one item in tuple is a dict.   Because `share.pyx` is sent twice, there are 2 similar elements in `to_compile`, which before that dict they are all the same. Because `to_compile` need to be sorted, and the items before dict are all the same, the 2 dicts should be compared. But dicts can't be compared, then the error occurs. For testing, I commented `to_compile.sort()`, and everything works well.\r\n\r\nI think there are several ways to fix the bug:\r\n- Do we really need to sort `to_compiles`? Finally we will compile all the things in `to_compile` anyway, so delete this phrase would work\r\n- I believe there must be some reasons that `to_compile` need to be sorted, but can we just sort the 1st item `priority` of each element? For example `to_compile.sort(key=lambda x: x[0])` would work\r\n- when sending a `.pyx` file to `to_compile`, check if it has been in `to_compile`, if True, just continue\r\n- jsonfy the dict to a string when sorting\r\n\r\nIt seems that the 3rd way (checking before sending to `to_compile`) is the most reasonable way, but the 2nd way (just compare `priority`) may also be needed.\n\n### OS\n\nWindows\n\n### Python version\n\n3.10.11\n\n### Cython version\n\n3.0.10\n\n### Additional context\n\n_No response_",
    "closed_at": "2024-06-27T19:22:36Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Also it will be appreciated if anyone can tell me why `AttributeError: module 'share' has no attribute 'Shrubbery'` would occur, thank you very much!",
            "created_at": "2024-06-27T15:41:52Z",
            "html_url": "https://github.com/cython/cython/issues/6274#issuecomment-2195048249",
            "id": 2195048249,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6274",
            "node_id": "IC_kwDOABDGAc6C1cc5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2195048249/reactions"
            },
            "updated_at": "2024-06-27T15:41:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2195048249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18521800?v=4",
                "events_url": "https://api.github.com/users/monchin/events{/privacy}",
                "followers_url": "https://api.github.com/users/monchin/followers",
                "following_url": "https://api.github.com/users/monchin/following{/other_user}",
                "gists_url": "https://api.github.com/users/monchin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monchin",
                "id": 18521800,
                "login": "monchin",
                "node_id": "MDQ6VXNlcjE4NTIxODAw",
                "organizations_url": "https://api.github.com/users/monchin/orgs",
                "received_events_url": "https://api.github.com/users/monchin/received_events",
                "repos_url": "https://api.github.com/users/monchin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monchin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monchin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monchin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Compiling multiple Cython files at once should give you a warning:\r\n\r\n```\r\nWarning: Multiple cython sources found for extension ...\r\nSee https://cython.readthedocs.io/en/latest/src/userguide/sharing_declarations.html for sharing declarations among Cython files.\r\n```\r\n\r\nThis is telling you that **compiling multiple Cython sources together at once is a bad idea** for reasons that you're seeing.\r\n\r\nInstead you should compile `share.pyx` as a separate module.\r\n\r\nIf you can't do that then it's probably better to use the (old and still a bad idea) `include` mechanism to reuse share. This will do a textual include, which is probably safer than what you're trying to do.\r\n\r\n-----\r\n\r\n> Also it will be appreciated if anyone can tell me why AttributeError: module 'share' has no attribute 'Shrubbery' would occur, thank you very much!\r\n\r\nDon't know. You're not compiling a module `share` at all, so it should probably be a `ModuleNotFoundError`?",
            "created_at": "2024-06-27T19:22:36Z",
            "html_url": "https://github.com/cython/cython/issues/6274#issuecomment-2195507891",
            "id": 2195507891,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6274",
            "node_id": "IC_kwDOABDGAc6C3Mqz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2195507891/reactions"
            },
            "updated_at": "2024-06-27T19:22:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2195507891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've closed this because there's much better ways to share declarations so I don't think it's worthwhile spending time to sort out all the issues with this really discouraged mechanism.",
            "created_at": "2024-06-27T19:24:10Z",
            "html_url": "https://github.com/cython/cython/issues/6274#issuecomment-2195510429",
            "id": 2195510429,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6274",
            "node_id": "IC_kwDOABDGAc6C3NSd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2195510429/reactions"
            },
            "updated_at": "2024-06-27T19:24:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2195510429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6274/comments",
    "created_at": "2024-06-27T15:40:27Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-27T19:22:36Z",
            "event": "closed",
            "id": 13322555261,
            "node_id": "CE_lADOABDGAc6NxPz7zwAAAAMaFg99",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13322555261"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-27T19:22:48Z",
            "event": "labeled",
            "id": 13322557163,
            "label": {
                "color": "444444",
                "name": "R: wontfix"
            },
            "node_id": "LE_lADOABDGAc6NxPz7zwAAAAMaFhbr",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13322557163"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6274/events",
    "html_url": "https://github.com/cython/cython/issues/6274",
    "id": 2378497275,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557400,
            "name": "R: wontfix",
            "node_id": "MDU6TGFiZWw0MjU1NTc0MDA=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6274/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6NxPz7",
    "number": 6274,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6274/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6274/timeline",
    "title": "[BUG] when multiple .pyx files cimport the same .pxd file, and cythonize these  extensions at the same time, bug occurs",
    "updated_at": "2024-06-27T19:24:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6274",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/18521800?v=4",
        "events_url": "https://api.github.com/users/monchin/events{/privacy}",
        "followers_url": "https://api.github.com/users/monchin/followers",
        "following_url": "https://api.github.com/users/monchin/following{/other_user}",
        "gists_url": "https://api.github.com/users/monchin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/monchin",
        "id": 18521800,
        "login": "monchin",
        "node_id": "MDQ6VXNlcjE4NTIxODAw",
        "organizations_url": "https://api.github.com/users/monchin/orgs",
        "received_events_url": "https://api.github.com/users/monchin/received_events",
        "repos_url": "https://api.github.com/users/monchin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/monchin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/monchin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/monchin"
    }
}