{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\nWhen using `for idx in range(-1, <size_t>)` the following broken code is generated:\r\n\r\n\r\n```cpp\r\n  std::vector<int>  __pyx_v_vec;\r\n  CYTHON_UNUSED std::vector<int> ::size_type __pyx_v_idx;\r\n  PyObject *__pyx_r = NULL;\r\n  __Pyx_RefNannyDeclarations\r\n  std::vector<int> ::size_type __pyx_t_1;\r\n  std::vector<int> ::size_type __pyx_t_2;\r\n  std::vector<int> ::size_type __pyx_t_3;\r\n  __Pyx_RefNannySetupContext(\"find_digit_end\", 0);\r\n\r\n  /* \"test.pyx\":31\r\n *     cdef vector[int] vec\r\n * \r\n *     for idx in range(-1, vec.size()):             # <<<<<<<<<<<<<<\r\n *         pass\r\n *     #for x in vec:\r\n */\r\n  __pyx_t_1 = __pyx_v_vec.size();\r\n  __pyx_t_2 = __pyx_t_1;\r\n  for (__pyx_t_3 = -1L; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {\r\n    __pyx_v_idx = __pyx_t_3;\r\n  }\r\n```\r\nthis initializes `__pyx_t_3` to `(size_t)-1` which can never be smaller than `__pyx_t_2`. Therefore the for loop is skipped.\r\n\r\n\r\n**To Reproduce**\r\nCode to reproduce the behaviour:\r\n```cython\r\ndef example():\r\n    cdef vector[int] vec\r\n\r\n    for idx in range(-1, vec.size()):\r\n        pass\r\n```\r\n\r\n**Expected behavior**\r\nWhen there is a C type, which can cover both negative and positive range it should be used (e.g. `int16_t` for range(-1, <uint8_t>). Otherwise the slower Python implementation should be used, which provides the correct results.\r\n\r\n**Environment (please complete the following information):**\r\n - Cython version: master latest\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Can't look it up right now, but I'm sure there is a ticket for this already. Might be closed.\n",
            "created_at": "2021-04-01T04:55:35Z",
            "html_url": "https://github.com/cython/cython/issues/4075#issuecomment-811637050",
            "id": 811637050,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4075",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTYzNzA1MA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-01T04:55:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/811637050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4075/comments",
    "created_at": "2021-03-31T16:36:34Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4075/events",
    "html_url": "https://github.com/cython/cython/issues/4075",
    "id": 846944057,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4075/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4NDY5NDQwNTc=",
    "number": 4075,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG]  range produces broken code for negative indexes",
    "updated_at": "2021-04-01T04:55:35Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4075",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
        "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
        "followers_url": "https://api.github.com/users/maxbachmann/followers",
        "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
        "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/maxbachmann",
        "id": 44199644,
        "login": "maxbachmann",
        "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
        "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
        "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
        "repos_url": "https://api.github.com/users/maxbachmann/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/maxbachmann"
    }
}