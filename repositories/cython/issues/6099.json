{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\r\n\r\nIn pandas we have a function wrapper that looks like:\r\n\r\n```python\r\ndef _make_error_func(func_name: str, cls):\r\n    def f(*args, **kwargs):\r\n        raise ValueError(f\"NaTType does not support {func_name}\")\r\n\r\n    f.__name__ = func_name\r\n    if isinstance(cls, str):\r\n        # passed the literal docstring directly\r\n        f.__doc__ = cls\r\n    elif cls is not None:\r\n        f.__doc__ = getattr(cls, func_name).__doc__\r\n    return f\r\n```\r\n\r\nThe generated c code looks something like:\r\n\r\n```c\r\nstatic struct __pyx_obj_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func *__pyx_freelist_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func[8];\r\nstatic int __pyx_freecount_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func = 0;\r\n\r\nstatic PyObject *__pyx_tp_new_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {\r\n  PyObject *o;\r\n  #if CYTHON_COMPILING_IN_LIMITED_API\r\n  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);\r\n  o = alloc_func(t, 0);\r\n  #else\r\n  #if CYTHON_COMPILING_IN_CPYTHON\r\n  if (likely((int)(__pyx_freecount_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func)))) {\r\n    o = (PyObject*)__pyx_freelist_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func[--__pyx_freecount_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func];\r\n    memset(o, 0, sizeof(struct __pyx_obj_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func));\r\n    (void) PyObject_INIT(o, t);\r\n  } else\r\n  #endif\r\n  {\r\n    o = (*t->tp_alloc)(t, 0);\r\n    if (unlikely(!o)) return 0;\r\n  }\r\n  #endif\r\n  return o;\r\n}\r\n\r\nstatic void __pyx_tp_dealloc_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func(PyObject *o) {\r\n  struct __pyx_obj_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func *p = (struct __pyx_obj_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func *)o;\r\n  #if CYTHON_USE_TP_FINALIZE\r\n  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {\r\n    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func) {\r\n      if (PyObject_CallFinalizerFromDealloc(o)) return;\r\n    }\r\n  }\r\n  #endif\r\n  Py_CLEAR(p->__pyx_v_func_name);\r\n  #if CYTHON_COMPILING_IN_CPYTHON\r\n  if (((int)(__pyx_freecount_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func)))) {\r\n    __pyx_freelist_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func[__pyx_freecount_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func++] = ((struct __pyx_obj_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func *)o);\r\n  } else\r\n  #endif\r\n  {\r\n    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY\r\n    (*Py_TYPE(o)->tp_free)(o);\r\n    #else\r\n    {\r\n      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);\r\n      if (tp_free) tp_free(o);\r\n    }\r\n    #endif\r\n  }\r\n}\r\n```\r\n\r\nCompiling this with warnings yields `error: ‘__pyx_freecount_6pandas_5_libs_6tslibs_7nattype___pyx_scope_struct___make_error_func’ defined but not used [-Werror=unused-variable]`, which makes sense since the variable is only used when `CYTHON_COMPILING_IN_CPYTHON`\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nSee above\r\n\r\n### Expected behaviour\r\n\r\nNo build warnings\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.11\r\n\r\n### Cython version\r\n\r\n3.0.9\r\n\r\n### Additional context\r\n\r\nExample from pandas CI - https://github.com/pandas-dev/pandas/actions/runs/8348473859/job/22850478362?pr=57895#step:7:281",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6099/comments",
    "created_at": "2024-03-19T19:06:56Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-03-19T21:09:29Z",
            "event": "labeled",
            "id": 12175986220,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "LE_lADOABDGAc6C4NoCzwAAAALVvs4s",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12175986220"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6099/events",
    "html_url": "https://github.com/cython/cython/issues/6099",
    "id": 2195773954,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6099/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6C4NoC",
    "number": 6099,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6099/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6099/timeline",
    "title": "[BUG] Function Wrapper yields unused-variable warning when compiled with pypy",
    "updated_at": "2024-03-19T21:09:29Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6099",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/609873?v=4",
        "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
        "followers_url": "https://api.github.com/users/WillAyd/followers",
        "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
        "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/WillAyd",
        "id": 609873,
        "login": "WillAyd",
        "node_id": "MDQ6VXNlcjYwOTg3Mw==",
        "organizations_url": "https://api.github.com/users/WillAyd/orgs",
        "received_events_url": "https://api.github.com/users/WillAyd/received_events",
        "repos_url": "https://api.github.com/users/WillAyd/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/WillAyd"
    }
}