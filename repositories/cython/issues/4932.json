{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- DO NOT use the bug and feature tracker for general questions and support requests.\r\n  Use the `cython-users` mailing list instead.\r\n  It has a wider audience, so you get more and better answers.\r\n- Did you search for similar issues already?\r\n  Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release?\r\n  It might already have what you want to report.\r\n  Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nI want to write a generic (over numpy array dtypes) function that is able to handle arbitrary shaped numpy arrays to perform simple, element-wise operations. For this, I found the `nditer` example in numpy: \r\nhttps://numpy.org/doc/stable/reference/arrays.nditer.cython.html?highlight=numpy%20nditer%20dtypes\r\nand tried to make it generic by using fused types like this:\r\n\r\n```pyrex\r\n# cython: language_level = 3\r\nimport numpy as np\r\ncimport numpy as np\r\ncimport cython\r\nfrom libc.math cimport isfinite as _isfinite, M_PI\r\nfrom libc.stdint cimport int32_t, int64_t\r\n\r\n\r\nctypedef fused dtype_t:\r\n    int32_t\r\n    int64_t\r\n    float\r\n    double\r\n\r\n\r\ncdef str _get_str_dtype(dtype_t val):\r\n    if dtype_t is int32_t:\r\n        return \"int32\"\r\n    elif dtype_t is int64_t:\r\n        return \"int64\"\r\n    elif dtype_t is float:\r\n        return \"float32\"\r\n    else:\r\n        return \"float64\"\r\n\r\n\r\n@cython.boundscheck(False)\r\n@cython.wraparound(False)\r\n@cython.nonecheck(False)\r\n@cython.cdivision(True)\r\ndef vectorized_generic_operation(array, dtype_t value):\r\n    cdef np.npy_intp size\r\n    cdef np.ndarray[dtype_t] chunk\r\n\r\n    cdef str dtype_name\r\n    dtype_name = _get_str_dtype(value)\r\n    print(dtype_name)\r\n\r\n    it = np.nditer(\r\n        array,\r\n        flags=['reduce_ok', 'external_loop', 'buffered'],\r\n        op_flags=['readwrite'],\r\n        op_dtypes=[dtype_name],\r\n    )\r\n\r\n    with it:\r\n        for arr in it:\r\n            chunk = arr\r\n            size = chunk.shape[0]\r\n            for i in range(size):\r\n                chunk[i] -= value\r\n```\r\n\r\nThis compiles fine using:\r\n\r\n```\r\nCFLAGS=\"-I$(python -c 'import numpy; print(numpy.get_include())')\" cythonize -a -i generic.pyx  \r\n```\r\n\r\n\r\nHowever, for most dtypes, I get a `no matching signature found exception`, e.g. using these simple pytests:\r\n\r\n```python\r\nimport numpy as np\r\nfrom generic import vectorized_generic_operation\r\n\r\n\r\ndef test_float32():\r\n    a = np.array([1, 2, 3]).astype(np.float32)\r\n    vectorized_generic_operation(a, np.float32(5.0))\r\n\r\ndef test_int32():\r\n    a = np.array([1, 2, 3]).astype(np.int32)\r\n    vectorized_generic_operation(a, np.int32(5.0))\r\n\r\n\r\ndef test_float64():\r\n    a = np.array([1, 2, 3]).astype(np.float64)\r\n    vectorized_generic_operation(a, np.float64(5.0))\r\n\r\ndef test_int64():\r\n    a = np.array([1, 2, 3]).astype(np.int64)\r\n    vectorized_generic_operation(a, np.int64(5.0))\r\n```\r\n\r\n```\r\n________________________________________________________________ test_float32 ________________________________________________________________\r\n\r\n    def test_float32():\r\n        a = np.array([1, 2, 3]).astype(np.float32)\r\n>       vectorized_generic_operation(a, np.float32(5.0))\r\n\r\ntest_generic.py:7: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   def vectorized_generic_operation(array, dtype_t value):\r\nE   TypeError: No matching signature found\r\n\r\ngeneric.pyx:31: TypeError\r\n_________________________________________________________________ test_int32 _________________________________________________________________\r\n\r\n    def test_int32():\r\n        a = np.array([1, 2, 3]).astype(np.int32)\r\n>       vectorized_generic_operation(a, np.int32(5.0))\r\n\r\ntest_generic.py:11: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   def vectorized_generic_operation(array, dtype_t value):\r\nE   TypeError: No matching signature found\r\n\r\ngeneric.pyx:31: TypeError\r\n_________________________________________________________________ test_int64 _________________________________________________________________\r\n\r\n    def test_int64():\r\n        a = np.array([1, 2, 3]).astype(np.int64)\r\n>       vectorized_generic_operation(a, np.int64(5.0))\r\n\r\ntest_generic.py:20: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   def vectorized_generic_operation(array, dtype_t value):\r\nE   TypeError: No matching signature found\r\n\r\ngeneric.pyx:31: TypeError\r\n========================================================== short test summary info ===========================================================\r\nFAILED test_generic.py::test_float32 - TypeError: No matching signature found\r\nFAILED test_generic.py::test_int32 - TypeError: No matching signature found\r\nFAILED test_generic.py::test_int64 - TypeError: No matching signature found\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSee above\r\n\r\n**Expected behavior**\r\n\r\nWorks...\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Manjaro\r\n - Python version: 3.9\r\n - Cython version: 0.29.30\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\r\n\r\n\r\nAny help would be appreciated.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "~The fused type `dtype_t` should be a value that coerces to the type `dtype_t`. It *isn't* a Numpy dtype. You're probably better off changing `array` to be typed as `np.ndarray[dtype_t]` and removing `value` entirely.~ (wrong - I misread it)\r\n\r\nClosing as not a bug - if you have further questions on this then the Cython-users mailing list may be helpful https://groups.google.com/forum/#!forum/cython-users",
            "created_at": "2022-07-28T11:38:20Z",
            "html_url": "https://github.com/cython/cython/issues/4932#issuecomment-1198026137",
            "id": 1198026137,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4932",
            "node_id": "IC_kwDOABDGAc5HaG2Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1198026137/reactions"
            },
            "updated_at": "2022-07-28T11:39:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1198026137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah sorry! I misread what you were doing....\r\n\r\n`dtype_t` is a C type. Unfortunately the numpy Python types `np.float64` etc. don't really have anything to indicate that this is the C type they relate to so Cython can't link to two.\r\n\r\nYou probably do want to change `array` to be typed as `np.ndarray[dtype_t]`. That'd make it easiest for Cython to infer the correct fused type.\r\n\r\nFailing that, you can manually select the type by subscripting the function:\r\n\r\n```\r\nvectorized_generic_operation[\"double\"](...)\r\n```",
            "created_at": "2022-07-28T11:43:12Z",
            "html_url": "https://github.com/cython/cython/issues/4932#issuecomment-1198030438",
            "id": 1198030438,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4932",
            "node_id": "IC_kwDOABDGAc5HaH5m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1198030438/reactions"
            },
            "updated_at": "2022-07-28T11:43:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1198030438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You probably do want to change array to be typed as np.ndarray[dtype_t]. \r\n\r\nNo, that defeats the whole point, as that only allows 1d arrays.\r\n\r\n>  Unfortunately the numpy Python types np.float64 this is the C type they relate to so Cython can't link to two.\r\n\r\nI also tried using `np.float64_t` from the c-api, with a slightly different result for float64:\r\n\r\n```\r\n    def test_float64():\r\n        a = np.arange(30).reshape((3, 2, 5)).astype(np.float64)\r\n>       vectorized_generic_operation(a, np.float64(5.0))\r\n\r\ntest_generic.py:16: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   it = np.nditer(\r\nE   TypeError: Iterator operand 0 dtype could not be cast from dtype('float64') to dtype('float32') according to the rule 'safe'\r\n```",
            "created_at": "2022-07-28T12:02:38Z",
            "html_url": "https://github.com/cython/cython/issues/4932#issuecomment-1198050278",
            "id": 1198050278,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4932",
            "node_id": "IC_kwDOABDGAc5HaMvm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1198050278/reactions"
            },
            "updated_at": "2022-07-28T12:02:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1198050278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5488440?v=4",
                "events_url": "https://api.github.com/users/maxnoe/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxnoe/followers",
                "following_url": "https://api.github.com/users/maxnoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxnoe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxnoe",
                "id": 5488440,
                "login": "maxnoe",
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "organizations_url": "https://api.github.com/users/maxnoe/orgs",
                "received_events_url": "https://api.github.com/users/maxnoe/received_events",
                "repos_url": "https://api.github.com/users/maxnoe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxnoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxnoe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxnoe"
            }
        },
        {
            "author_association": "NONE",
            "body": "@da-woods How can this be not a bug or at least a valid feature request if the fused type system is advertised here for exactly this usecase:\r\n\r\nhttps://cython.readthedocs.io/en/latest/src/userguide/numpy_tutorial.html#more-generic-code",
            "created_at": "2022-07-28T12:31:49Z",
            "html_url": "https://github.com/cython/cython/issues/4932#issuecomment-1198078902",
            "id": 1198078902,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4932",
            "node_id": "IC_kwDOABDGAc5HaTu2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1198078902/reactions"
            },
            "updated_at": "2022-07-28T12:31:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1198078902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5488440?v=4",
                "events_url": "https://api.github.com/users/maxnoe/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxnoe/followers",
                "following_url": "https://api.github.com/users/maxnoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxnoe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxnoe",
                "id": 5488440,
                "login": "maxnoe",
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "organizations_url": "https://api.github.com/users/maxnoe/orgs",
                "received_events_url": "https://api.github.com/users/maxnoe/received_events",
                "repos_url": "https://api.github.com/users/maxnoe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxnoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxnoe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxnoe"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah you're probably right - there is a legitimate feature request there. I doubt it's easy to resolve since I don't know if there's an easy way of linking the Numpy python objects to the C type they wrap. But I understand why you want it.\r\n\r\nI'll reopen",
            "created_at": "2022-07-28T14:01:23Z",
            "html_url": "https://github.com/cython/cython/issues/4932#issuecomment-1198184682",
            "id": 1198184682,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4932",
            "node_id": "IC_kwDOABDGAc5Hatjq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1198184682/reactions"
            },
            "updated_at": "2022-07-28T14:01:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1198184682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "In the meantime, I found that implementing the cython function for 1d arrays and using `np.nditer` in python works and already gives a great speedup (especially for contiguous nd-arrays, where nditer just returns a single 1d view), this works for me:\r\n\r\n```\r\n        if data.ndim == 0:\r\n            _wrap_at(data[np.newaxis], wrap_angle, a360)\r\n        elif data.ndim == 1:\r\n            _wrap_at(data, wrap_angle, a360)\r\n        else:\r\n            iter = np.nditer(\r\n                data,\r\n                op_flags=['readwrite'],\r\n                flags=[\"external_loop\"],\r\n            )\r\n            for chunk in iter:\r\n                _wrap_at(chunk, wrap_angle, a360)\r\n```\r\n\r\nwhere `_wrap_at` uses the fused dtype for a typed 1d array.\r\n",
            "created_at": "2022-07-28T14:04:27Z",
            "html_url": "https://github.com/cython/cython/issues/4932#issuecomment-1198188481",
            "id": 1198188481,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4932",
            "node_id": "IC_kwDOABDGAc5HaufB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1198188481/reactions"
            },
            "updated_at": "2022-07-28T14:04:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1198188481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5488440?v=4",
                "events_url": "https://api.github.com/users/maxnoe/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxnoe/followers",
                "following_url": "https://api.github.com/users/maxnoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxnoe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxnoe",
                "id": 5488440,
                "login": "maxnoe",
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "organizations_url": "https://api.github.com/users/maxnoe/orgs",
                "received_events_url": "https://api.github.com/users/maxnoe/received_events",
                "repos_url": "https://api.github.com/users/maxnoe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxnoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxnoe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxnoe"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4932/comments",
    "created_at": "2022-07-28T11:29:39Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-28T11:38:20Z",
            "event": "closed",
            "id": 7080617650,
            "node_id": "CE_lADOABDGAc5Oua4IzwAAAAGmCaay",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7080617650"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-28T11:38:31Z",
            "event": "labeled",
            "id": 7080618984,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "LE_lADOABDGAc5Oua4IzwAAAAGmCavo",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7080618984"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-28T12:31:49Z",
            "event": "mentioned",
            "id": 7080994064,
            "node_id": "MEE_lADOABDGAc5Oua4IzwAAAAGmD2UQ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7080994064"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-28T12:31:49Z",
            "event": "subscribed",
            "id": 7080994072,
            "node_id": "SE_lADOABDGAc5Oua4IzwAAAAGmD2UY",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7080994072"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-28T13:59:46Z",
            "event": "unlabeled",
            "id": 7081706781,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "UNLE_lADOABDGAc5Oua4IzwAAAAGmGkUd",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7081706781"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-28T14:01:23Z",
            "event": "reopened",
            "id": 7081721142,
            "node_id": "REE_lADOABDGAc5Oua4IzwAAAAGmGn02",
            "performed_via_github_app": null,
            "state_reason": "reopened",
            "url": "https://api.github.com/repos/cython/cython/issues/events/7081721142"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4932/events",
    "html_url": "https://github.com/cython/cython/issues/4932",
    "id": 1320791560,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4932/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5Oua4I",
    "number": 4932,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4932/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": "reopened",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4932/timeline",
    "title": "[BUG] No matching signature found when using fused types to write generic numpy code",
    "updated_at": "2022-07-28T14:04:28Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4932",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5488440?v=4",
        "events_url": "https://api.github.com/users/maxnoe/events{/privacy}",
        "followers_url": "https://api.github.com/users/maxnoe/followers",
        "following_url": "https://api.github.com/users/maxnoe/following{/other_user}",
        "gists_url": "https://api.github.com/users/maxnoe/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/maxnoe",
        "id": 5488440,
        "login": "maxnoe",
        "node_id": "MDQ6VXNlcjU0ODg0NDA=",
        "organizations_url": "https://api.github.com/users/maxnoe/orgs",
        "received_events_url": "https://api.github.com/users/maxnoe/received_events",
        "repos_url": "https://api.github.com/users/maxnoe/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/maxnoe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maxnoe/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/maxnoe"
    }
}