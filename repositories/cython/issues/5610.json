{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\r\n\r\nUnder certain circumstances, Cython generates unsafe casts between a Python enum and its mirror Cython enum class. While such casts are the users responsibility to avoid in C/C++ code, and therefore also in typed Cython code, Cython should add checks to prevent such unsafe casts in the auto-generated wrapper functions that translate from a Python wrapper to the mirror Cython type.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n```cython\r\n# definitions.pxd\r\n# distutils: language = c++\r\ncpdef enum class my_enum(int):\r\n    a = 1\r\n    b = 2\r\n\r\ncpdef int f(my_enum x)\r\n```\r\n\r\n```cython\r\n# definitions.pyx\r\n# distutils: language = c++\r\ncpdef int f(my_enum x):\r\n    return <int> x\r\n```\r\n\r\n```cython\r\n# main.pyx\r\n# distutils: language = c++\r\nfrom definitions cimport my_enum\r\nfrom definitions cimport f\r\n# from definitions import f\r\n\r\ndef g():\r\n    print(f(100))\r\n```\r\n\r\nWhen `f` is `cimported` from definitions, I see the following error:\r\n```\r\n    print(f(100))\r\n            ^\r\n\r\nmain.pyx:8:12: Cannot assign type 'long' to 'my_enum'\r\n```\r\n\r\nHowever, if `f` is instead `imported` like pure Python, I see the code compiles and `g()` prints out 100.\r\n\r\nIf I inspect the generated code, I see a strongly typed function generated with the signature\r\n```\r\nstatic int __pyx_f_11definitions_f(__PYX_ENUM_CLASS_DECL __pyx_t_11definitions_my_enum __pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch)\r\n```\r\nThis function is properly typed and I would expect calling it with an integer argument to produce an error. However, the corresponding Python function (`__pyx_pw_11definitions_1f`) includes an unsafe cast:\r\n```\r\n      __pyx_v_x = (__pyx_t_11definitions_my_enum)__Pyx_PyInt_As_int(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 4, __pyx_L3_error)\r\n```\r\nprior to calling \r\n```\r\n    __pyx_r = __pyx_pf_11definitions_f(__pyx_self, __pyx_v_x);\r\n```\r\n\r\nThat cast is allowing the Python function to create enums via an unsafe path. \r\n\r\nI observe the same behavior if I use a C style `cpdef enum` instead of a C++ `enum class`.\r\n\r\n### Expected behaviour\r\n\r\nI would expect to get a similar error in both cases. C++ casting rules do not protect users against casting values that are not among the named enumerated types, so it wouldn't make sense for Cython to try to protect against doing something like\r\n```\r\ncdef my_enum A = <my_enum> 100\r\n```\r\nin Cython code. However, since both normal Python enums and Cython enums prevent initialization from invalid values (`my_enum(100)` should fail in both Python and Cython) Cython should also avoid this unsafe cast.\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.11.4\r\n\r\n### Cython version\r\n\r\n3.0.0\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "CC @shwina ",
            "created_at": "2023-08-10T23:11:38Z",
            "html_url": "https://github.com/cython/cython/issues/5610#issuecomment-1674037496",
            "id": 1674037496,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5610",
            "node_id": "IC_kwDOABDGAc5jx8j4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1674037496/reactions"
            },
            "updated_at": "2023-08-10T23:11:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1674037496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5610/comments",
    "created_at": "2023-08-10T23:10:01Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-08-10T23:11:39Z",
            "event": "mentioned",
            "id": 10064691316,
            "node_id": "MEE_lADOABDGAc5uB8kKzwAAAAJX5wB0",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10064691316"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-08-10T23:11:39Z",
            "event": "subscribed",
            "id": 10064691320,
            "node_id": "SE_lADOABDGAc5uB8kKzwAAAAJX5wB4",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10064691320"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5610/events",
    "html_url": "https://github.com/cython/cython/issues/5610",
    "id": 1846003978,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5610/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5uB8kK",
    "number": 5610,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5610/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5610/timeline",
    "title": "[BUG] Cython generates undefined casts between Python and Cython versions of cpdef enum class",
    "updated_at": "2023-08-10T23:11:38Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5610",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vyasr",
        "id": 1538165,
        "login": "vyasr",
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vyasr"
    }
}