{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nI used Valgrind to track down this segfault happening practically immediately upon program execution, before a single print can be executed (the first lines are just imports and includes).\r\nThe segfault happens in __pyx_convert_string_from_py_std__in_string(_object*).\r\nI tried posting the cpp file generated to pastebin but my browser freezes due to too many lines.\r\n\r\nHere's the code block associated with __pyx_convert_string_from_py_std__in_string(object*):\r\n```c++\r\n/* \"string.from_py\":13\r\n * \r\n * @cname(\"__pyx_convert_string_from_py_std__in_string\")\r\n * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<\r\n *     cdef Py_ssize_t length = 0\r\n *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)\r\n */\r\n\r\nstatic std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {\r\n  Py_ssize_t __pyx_v_length;\r\n  char const *__pyx_v_data;\r\n  std::string __pyx_r;\r\n  __Pyx_RefNannyDeclarations\r\n  char const *__pyx_t_1;\r\n  std::string __pyx_t_2;\r\n  int __pyx_lineno = 0;\r\n  const char *__pyx_filename = NULL;\r\n  int __pyx_clineno = 0;\r\n  __Pyx_RefNannySetupContext(\"__pyx_convert_string_from_py_std__in_string\", 0);\r\n```\r\n\r\nHere's the structs in C++:\r\n```c++\r\nstruct CreatureSummary1 {\r\n  unsigned int cid;\r\n  std::string article;\r\n  std::string name;\r\n};\r\n\r\nstruct Condition {\r\n  long long original;\r\n  long long value;\r\n  CreatureSummary1 actor;\r\n  double end;\r\n};\r\n```\r\n\r\nWithout the CreatureSummary1 actor; line/member the program works fine.\r\nThis is imported into Cython using cdef extern from \"declarations.h\": ...\r\n\r\nI tried reproducing in just a few lines of code, but I couldn't, so there must be some complications going on.\r\n\r\nStandalone.cpp can be downloaded here: https://ufile.io/6p05tdwm\r\nThe crash happens at line 13242.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nCan't reproduce in a few lines of code.\r\n\r\n### Expected behaviour\r\n\r\n_No response_\r\n\r\n### OS\r\n\r\nDebian 11\r\n\r\n### Python version\r\n\r\n3.9.2\r\n\r\n### Cython version\r\n\r\n3.0.0b2\r\n\r\n### Additional context\r\n\r\nAlso happens in Cython version 3.0.0a11.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "It'd probably be most use to post a pyx file that can reproduce the issue. Obviously the C++ files are large and unwieldy, but we can generate those ourselves",
            "created_at": "2023-05-21T20:07:32Z",
            "html_url": "https://github.com/cython/cython/issues/5447#issuecomment-1556279512",
            "id": 1556279512,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5447",
            "node_id": "IC_kwDOABDGAc5cwvDY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1556279512/reactions"
            },
            "updated_at": "2023-05-21T20:07:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1556279512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> It'd probably be most use to post a pyx file that can reproduce the issue. Obviously the C++ files are large and unwieldy, but we can generate those ourselves\r\n\r\nUnfortunately there's like 15'000 lines of code and it's all proprietary code.\r\nI can only post code segments, or I can invite specific members like yourself to the repo with all the code with only the license to read, not write or duplicate code from the repo except very small/modified segments to reproduce the bug isolated from the rest of the code if possible.\r\nBut like I said if I comment out the CreatureSummary1 actor member, then there's no segfault.\r\n\r\nAlso, I'll need to be able to privately message you to invite you to the repo unless the invite pops up for you upon invitation.\r\nThe repo is not under this username. I need my main account not to be associated with your repository, this is why I'm writing under an alt account/pseudonym.",
            "created_at": "2023-05-21T20:30:53Z",
            "html_url": "https://github.com/cython/cython/issues/5447#issuecomment-1556284269",
            "id": 1556284269,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5447",
            "node_id": "IC_kwDOABDGAc5cwwNt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1556284269/reactions"
            },
            "updated_at": "2023-05-21T20:35:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1556284269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130873742?v=4",
                "events_url": "https://api.github.com/users/gamedev33/events{/privacy}",
                "followers_url": "https://api.github.com/users/gamedev33/followers",
                "following_url": "https://api.github.com/users/gamedev33/following{/other_user}",
                "gists_url": "https://api.github.com/users/gamedev33/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gamedev33",
                "id": 130873742,
                "login": "gamedev33",
                "node_id": "U_kgDOB8z5jg",
                "organizations_url": "https://api.github.com/users/gamedev33/orgs",
                "received_events_url": "https://api.github.com/users/gamedev33/received_events",
                "repos_url": "https://api.github.com/users/gamedev33/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gamedev33/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gamedev33/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gamedev33"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think this is something I can reasonably debug so I'm going to take a wild guess:\r\n\r\nYou might have got a global, Cython-defined, c++ class, that causes string conversion to happen in it's constructor.  It's essentially this bug: https://github.com/cython/cython/pull/4228/files#diff-c0209e949522f6c57ec3d884419ba2251e497f6794b705c5384d1a6df9449627 - a lot of Cython code relies on a certain amount of the module to be initialized (e.g. string constants for example), but such a global constructor would end up happening before any of that is initialized.\r\n\r\nI'd say ~50% chance that's your issue. But not in a position to find that out definitively.",
            "created_at": "2023-05-22T17:37:34Z",
            "html_url": "https://github.com/cython/cython/issues/5447#issuecomment-1557632862",
            "id": 1557632862,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5447",
            "node_id": "IC_kwDOABDGAc5c15de",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1557632862/reactions"
            },
            "updated_at": "2023-05-22T17:37:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1557632862",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Here's the code block associated with __pyx_convert_string_from_py_std__in_string(object*):\r\n\r\nWhat you copied is not the complete function but just a boring initial part of it. I doubt that it would be helpful, though, since the function itself is likely ok. The stack trace of the crash would probably be more interesting.",
            "created_at": "2023-05-22T18:36:24Z",
            "html_url": "https://github.com/cython/cython/issues/5447#issuecomment-1557708959",
            "id": 1557708959,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5447",
            "node_id": "IC_kwDOABDGAc5c2MCf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1557708959/reactions"
            },
            "updated_at": "2023-05-22T18:36:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1557708959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I don't think this is something I can reasonably debug so I'm going to take a wild guess:\r\n> \r\n> You might have got a global, Cython-defined, c++ class, that causes string conversion to happen in it's constructor. It's essentially this bug: https://github.com/cython/cython/pull/4228/files#diff-c0209e949522f6c57ec3d884419ba2251e497f6794b705c5384d1a6df9449627 - a lot of Cython code relies on a certain amount of the module to be initialized (e.g. string constants for example), but such a global constructor would end up happening before any of that is initialized.\r\n> \r\n> I'd say ~50% chance that's your issue. But not in a position to find that out definitively.\r\n\r\nYou're right, that's probably the issue. I forgot about this problem.\r\nThank you. I will figure out a temporary solution, like heap allocation or calling that piece of code after the constructor.\r\n\r\n> > Here's the code block associated with __pyx_convert_string_from_py_std__in_string(object*):\r\n> \r\n> What you copied is not the complete function but just a boring initial part of it. I doubt that it would be helpful, though, since the function itself is likely ok. The stack trace of the crash would probably be more interesting.\r\n\r\nUnfortunately that was the entire stack trace. Here's the complete listing in its entirety:\r\n```\r\nProcess terminating with default action of signal 11 (SIGSEGV)\r\n==9998==  Access not within mapped region at address 0x8\r\n==9998==    at 0x158C7B: __pyx_convert_string_from_py_std__in_string(_object*) (standalone.cpp:130597)\r\n==9998==  If you believe this happened as a result of a stack\r\n==9998==  overflow in your program's main thread (unlikely but\r\n==9998==  possible), you can try to increase the size of the\r\n==9998==  main thread stack using the --main-stacksize= flag.\r\n==9998==  The main thread stack size used in this run was 8388608.\r\n==9998==\r\n==9998== Events    : Ir\r\n==9998== Collected : 0\r\n==9998==\r\n==9998== I   refs:      0\r\n```",
            "created_at": "2023-05-23T13:47:05Z",
            "html_url": "https://github.com/cython/cython/issues/5447#issuecomment-1559409221",
            "id": 1559409221,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5447",
            "node_id": "IC_kwDOABDGAc5c8rJF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1559409221/reactions"
            },
            "updated_at": "2023-05-23T13:47:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1559409221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130873742?v=4",
                "events_url": "https://api.github.com/users/gamedev33/events{/privacy}",
                "followers_url": "https://api.github.com/users/gamedev33/followers",
                "following_url": "https://api.github.com/users/gamedev33/following{/other_user}",
                "gists_url": "https://api.github.com/users/gamedev33/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gamedev33",
                "id": 130873742,
                "login": "gamedev33",
                "node_id": "U_kgDOB8z5jg",
                "organizations_url": "https://api.github.com/users/gamedev33/orgs",
                "received_events_url": "https://api.github.com/users/gamedev33/received_events",
                "repos_url": "https://api.github.com/users/gamedev33/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gamedev33/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gamedev33/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gamedev33"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5447/comments",
    "created_at": "2023-05-21T19:55:07Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5447/events",
    "html_url": "https://github.com/cython/cython/issues/5447",
    "id": 1718621248,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5447/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5mcBRA",
    "number": 5447,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5447/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5447/timeline",
    "title": "[BUG] Segfault in __pyx_convert_string_from_py_std__in_string(object*) when making a struct with a struct member whose members are of type unsigned int, string, string.",
    "updated_at": "2023-05-23T13:47:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5447",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/130873742?v=4",
        "events_url": "https://api.github.com/users/gamedev33/events{/privacy}",
        "followers_url": "https://api.github.com/users/gamedev33/followers",
        "following_url": "https://api.github.com/users/gamedev33/following{/other_user}",
        "gists_url": "https://api.github.com/users/gamedev33/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gamedev33",
        "id": 130873742,
        "login": "gamedev33",
        "node_id": "U_kgDOB8z5jg",
        "organizations_url": "https://api.github.com/users/gamedev33/orgs",
        "received_events_url": "https://api.github.com/users/gamedev33/received_events",
        "repos_url": "https://api.github.com/users/gamedev33/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gamedev33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gamedev33/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gamedev33"
    }
}