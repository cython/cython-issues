{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nI found this bug whose flow is described in the title.\r\n\r\nAnother odd behavior of this code that makes it clearly a bug is that if you added a print statement after the exception is raised then the exception IS caught and there's no SystemError raised like the one described below.\r\n\r\nThe exception raised, when not adding a print statement after the method that raises an exception, is:\r\n\r\nException in callback ClientLogin.connection_made(<_SelectorSoc...e, bufsize=0>>)\r\nhandle: <Handle ClientLogin.connection_made(<_SelectorSoc...e, bufsize=0>>)>\r\nTraceback (most recent call last):\r\n  File \"test.pyx\", line 7, in test.mystringError\r\n    raise BufferError()\r\nBufferError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.11/asyncio/events.py\", line 80, in _run\r\n    self._context.run(self._callback, *self._args)\r\nSystemError: <cyfunction ClientLogin.connection_made at 0x7ffac8f057d0> returned a result with an exception set\n\n### Code to reproduce the behaviour:\n\ntest.pyx\r\n```cython\r\nimport asyncio, signal\r\n\r\ncdef:\r\n\textern void mystringError() except *:\r\n\t\traise BufferError()\r\n\r\n\textern from \"mytest.cpp\":\r\n\t\tcppclass test:\r\n\t\t\ttest()\r\n\t\t\tvoid check(unsigned int i)\r\n\r\n\tcdef class ClientLogin:\r\n\t\tcdef:\r\n\t\t\ttest t\r\n\t\t\tcpdef connection_made(self, transport):\r\n\t\t\t\tprint(\"connection_made\")\r\n\t\t\t\ttry:\r\n\t\t\t\t\tself.t = test()\r\n\t\t\t\t\tself.t.check(7)\r\n\t\t\t\t\tprint(\"hello\") # REMEMBER TO DELETE THIS TO GET THE EXCEPTION\r\n\t\t\t\texcept BufferError:\r\n\t\t\t\t\tprint(\"BufferError\")\r\n\r\n\t\t\tcpdef data_received(self, data):\r\n\t\t\t\tprint(\"data_received\", data)\r\n\r\n\t\t\tcpdef connection_lost(self, exc):\r\n\t\t\t\tprint(\"connection_lost\", exc)\r\n\r\n\t\t\tcpdef eof_received(self):\r\n\t\t\t\tprint(\"eof_received\")\r\n\r\nasync def timer():\r\n\tf = loop.create_connection(ClientLogin, \"localhost\", 7171)\r\n\tawait asyncio.shield(f)\r\n\tawait asyncio.sleep(100000000)\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\nloop.add_signal_handler(signal.SIGINT, loop.stop)\r\n\r\ntimertask = loop.create_task(timer())\r\n\r\nloop.run_forever()\r\n```\r\n\r\nmytest.cpp:\r\n```c++\r\nextern void mystringError();\r\n\r\nclass test {\r\npublic:\r\n\tvoid check(unsigned int i) {\r\n\t\tif (i % 2)\r\n\t\t\tmystringError();\r\n\t}\r\n};\r\n\r\n```\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\nLinux\n\n### Python version\n\n3.11.2\n\n### Cython version\n\n3.0.10\n\n### Additional context\n\n_No response_",
    "closed_at": "2024-08-01T05:55:37Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Follow-up: I just realized/noticed that if you add an \"except *\" (NOT except +) to the extern from -> cppclass test -> void check method, then the exception is caught. So although I still believe this is a bug, adding an except * seems to be a workaround for now.",
            "created_at": "2024-08-01T05:40:53Z",
            "html_url": "https://github.com/cython/cython/issues/6316#issuecomment-2262083958",
            "id": 2262083958,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6316",
            "node_id": "IC_kwDOABDGAc6G1Kl2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2262083958/reactions"
            },
            "updated_at": "2024-08-01T05:40:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2262083958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Follow-up: I just realized/noticed that if you add an \"except *\" (NOT except +) to the extern from -> cppclass test -> void check method, then the exception is caught. So although I still believe this is a bug, adding an except * seems to be a workaround for now.\r\n\r\nNo. This is the correct fix.\r\n\r\n`except *` says \"this function may raise a  Python exception\". That's correct for `check`.\r\n\r\n`except +` says \"this function may raise a c++ exception. `check` doesn't do that. \r\n\r\nWithout `except *`, Cython doesn't realise that `check` has raised a Python exception and so continues as if it hasn't (which gives the crash)",
            "created_at": "2024-08-01T05:51:39Z",
            "html_url": "https://github.com/cython/cython/issues/6316#issuecomment-2262095719",
            "id": 2262095719,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6316",
            "node_id": "IC_kwDOABDGAc6G1Ndn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2262095719/reactions"
            },
            "updated_at": "2024-08-01T05:51:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2262095719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > Follow-up: I just realized/noticed that if you add an \"except *\" (NOT except +) to the extern from -> cppclass test -> void check method, then the exception is caught. So although I still believe this is a bug, adding an except * seems to be a workaround for now.\r\n> \r\n> No. This is the correct fix.\r\n> \r\n> `except *` says \"this function may raise a Python exception\". That's correct for `check`.\r\n> \r\n> `except +` says \"this function may raise a c++ exception. `check` doesn't do that.\r\n> \r\n> Without `except *`, Cython doesn't realise that `check` has raised a Python exception and so continues as if it hasn't (which gives the crash)\r\n\r\nOk, thanks for the clarification.",
            "created_at": "2024-08-01T05:55:37Z",
            "html_url": "https://github.com/cython/cython/issues/6316#issuecomment-2262100095",
            "id": 2262100095,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6316",
            "node_id": "IC_kwDOABDGAc6G1Oh_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2262100095/reactions"
            },
            "updated_at": "2024-08-01T05:55:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2262100095",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6316/comments",
    "created_at": "2024-08-01T05:36:01Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-08-01T05:55:37Z",
            "event": "closed",
            "id": 13720116071,
            "node_id": "CE_lADOABDGAc6RhqbrzwAAAAMxyFtn",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/13720116071"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6316/events",
    "html_url": "https://github.com/cython/cython/issues/6316",
    "id": 2441520875,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6316/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6Rhqbr",
    "number": 6316,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6316/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6316/timeline",
    "title": "[BUG] Asyncio create_connection -> call extern C++ method inside try except -> call extern void function -> raise Exception -> SystemError raised instead",
    "updated_at": "2024-08-01T05:55:37Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6316",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
        "events_url": "https://api.github.com/users/Source61/events{/privacy}",
        "followers_url": "https://api.github.com/users/Source61/followers",
        "following_url": "https://api.github.com/users/Source61/following{/other_user}",
        "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Source61",
        "id": 68166790,
        "login": "Source61",
        "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
        "organizations_url": "https://api.github.com/users/Source61/orgs",
        "received_events_url": "https://api.github.com/users/Source61/received_events",
        "repos_url": "https://api.github.com/users/Source61/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Source61"
    }
}