{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm not able to create a minimum reproducible example (can attach a large project with instructions), but I'm experiencing a problem when wrapping C++ code in which if I initialize a `cdef`ed variable inside a function in a `.pyx` file, print it there right after giving it some value, and then pass it to a C++ function, as soon as the C++ function tries to do something with this variable, it will segfault.\r\n\r\nExample:\r\n.pyx file:\r\n```python\r\ncdef extern from \"cppfile.cpp\":\r\n    void a_cpp_function(double a, double b)\r\ndef a_py_function(double p):\r\n    cdef double problematic_var = 10\r\n    print(\"will produce segfault with this: \", problematic_var)\r\n    a_cpp_function(problematic_var, p)\r\n```\r\n.cpp file:\r\n```c++\r\n#include <iostreams>\r\ndouble sum_vals(double a, double b)\r\n{\r\n    std::cout << \"next statement is segfault\" << std::endl;\r\n    return a + b;\r\n}\r\nvoid a_cpp_function(double a, double b)\r\n{\r\n    double temp;\r\n    temp = sum_vals(double a, double b);\r\n    std::cout << \"result is: \" << temp << \"\\n\";\r\n}\r\n```\r\n\r\n(I think this small example will not end up segfaulting, but in a larger function it does)\r\n\r\nRemoving the python `print` statement will eliminate the problem. This seems to only affect variables of type `double`, and these are just lone numbers, not arrays or anything that could cause an out-of-bounds error.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2955/comments",
    "created_at": "2019-05-16T07:58:12Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2955/events",
    "html_url": "https://github.com/cython/cython/issues/2955",
    "id": 444808273,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2955/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0NDQ4MDgyNzM=",
    "number": 2955,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Printing variable in Python causes segfault when accessing it in C++",
    "updated_at": "2019-05-16T08:00:58Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2955",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/11860098?v=4",
        "events_url": "https://api.github.com/users/david-cortes/events{/privacy}",
        "followers_url": "https://api.github.com/users/david-cortes/followers",
        "following_url": "https://api.github.com/users/david-cortes/following{/other_user}",
        "gists_url": "https://api.github.com/users/david-cortes/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/david-cortes",
        "id": 11860098,
        "login": "david-cortes",
        "node_id": "MDQ6VXNlcjExODYwMDk4",
        "organizations_url": "https://api.github.com/users/david-cortes/orgs",
        "received_events_url": "https://api.github.com/users/david-cortes/received_events",
        "repos_url": "https://api.github.com/users/david-cortes/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/david-cortes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/david-cortes/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/david-cortes"
    }
}