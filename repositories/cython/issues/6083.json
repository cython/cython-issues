{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nThis'd probably apply mainly to functions with annotations dictionaries. For example\r\n\r\n```\r\ndef f(a: int, b: float):\r\n    pass\r\n```\r\n\r\ngenerates\r\n\r\n```\r\n__pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_2);\r\n  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_a, __pyx_n_s_int) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\r\n  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_b, __pyx_n_s_float) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\r\n```\r\n\r\nwhich is relatively repetitive (especially for the error handling)\r\n\r\n### Describe the solution you'd like.\r\n\r\nIt might be worth creating a `__Pyx_PyDict_Pack` function for slow code sections that just iterates over variadic arguments to reduce the code size here.\r\n\r\nIn this case:\r\n\r\n```\r\n__Pyx_PyDict_Pack(2, __pyx_n_s_a, __pyx_n_s_int, __pyx_n_s_b, __pyx_n_s_float)\r\n```\r\n\r\n### Describe alternatives you've considered.\r\n\r\nThe main reason not to do it:\r\n* the code generated isn't *that* bad,\r\n* the dictionary generation code in Cython is already pretty complicated and accounts for lots of different cases. Adding another case looked fairly fiddly to me.\r\n\r\n### Additional context\r\n\r\nI'm listing this as an idea. I'm on the fence if it's likely to be worth it.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6083/comments",
    "created_at": "2024-03-16T10:00:23Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6083/events",
    "html_url": "https://github.com/cython/cython/issues/6083",
    "id": 2189891416,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6083/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6ChxdY",
    "number": 6083,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6083/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6083/timeline",
    "title": "[ENH] __Pyx_PyDict_Pack function (for code size)?",
    "updated_at": "2024-03-16T10:01:36Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6083",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}