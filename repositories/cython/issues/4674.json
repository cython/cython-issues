{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "**Describe the bug**\r\nI am trying to compile code that generalizes a function to operate on various structs. I follow [cython docs](https://cython.readthedocs.io/en/latest/src/userguide/fusedtypes.html) to define a fused type.\r\n\r\nThe following is the code line that errors out:\r\n\r\n```\r\n# I have a function that I want to use the fusedtype in\r\ncpdef do_something(...):\r\n      # the following line errors out when compiling\r\n      cdef axis_oblique_record split\r\n\r\n      # do additional functions\r\n```\r\n\r\nThe following is code related to the fusedtype struct I want to setup.\r\n\r\n```cython\r\n# I have two different structs that store sets of similar information\r\ncdef struct ObliqueSplitRecord:\r\n    double test\r\n\r\ncdef struct SplitRecord:\r\n    double testtest\r\n    double test\r\n\r\n# here I define a fusedtype\r\nctypedef fused axis_oblique_record:\r\n    SplitRecord\r\n    ObliqueSplitRecord\r\n```\r\n\r\nThe following is the error message, when I try to compile.\r\n\r\n```\r\n Error compiling Cython file:\r\n  ------------------------------------------------------------\r\n  ...\r\n          cdef SIZE_t parent\r\n          cdef bint is_left\r\n          cdef SIZE_t n_node_samples = splitter.n_samples\r\n          cdef double weighted_n_samples = splitter.weighted_n_samples\r\n          cdef double weighted_n_node_samples\r\n          cdef axis_oblique_record split\r\n              ^\r\n  ------------------------------------------------------------\r\n\r\n  sklearn/tree/_tree.pyx:186:13: Compiler crash in AnalyseDeclarationsTransform\r\n\r\n  ModuleNode.body = StatListNode(_tree.pyx:15:0)\r\n  StatListNode.stats[36] = StatListNode(_tree.pyx:135:5)\r\n  StatListNode.stats[0] = CClassDefNode(_tree.pyx:135:5,\r\n      as_name = 'DepthFirstTreeBuilder',\r\n      class_name = 'DepthFirstTreeBuilder',\r\n      doc = 'Build a decision tree in depth-first fashion.',\r\n      module_name = '',\r\n      visibility = 'private')\r\n  CClassDefNode.body = StatListNode(_tree.pyx:136:4)\r\n  StatListNode.stats[1] = CFuncDefNode(_tree.pyx:147:10,\r\n      args = [...]/6,\r\n      doc = 'Build a decision tree from the training set (X, y).',\r\n      has_fused_arguments = True,\r\n      is_c_class_method = 1,\r\n      modifiers = [...]/0,\r\n      overridable = 1,\r\n      visibility = 'private')\r\n  FusedCFuncDefNode.stats[0] = CFuncDefNode(_tree.pyx:147:10,\r\n      args = [...]/6,\r\n      doc = 'Build a decision tree from the training set (X, y).',\r\n      is_c_class_method = 1,\r\n      modifiers = [...]/0,\r\n      overridable = 1,\r\n      visibility = 'private')\r\n  File 'Nodes.py', line 431, in analyse_declarations: StatListNode(_tree.pyx:147:10)\r\n  File 'Nodes.py', line 431, in analyse_declarations: StatListNode(_tree.pyx:147:10)\r\n  File 'Nodes.py', line 431, in analyse_declarations: StatListNode(_tree.pyx:149:8)\r\n  File 'Nodes.py', line 1329, in analyse_declarations: CVarDefNode(_tree.pyx:186:13,\r\n      modifiers = [...]/0,\r\n      visibility = 'private')\r\n  File 'Nodes.py', line 1033, in analyse: CSimpleBaseTypeNode(_tree.pyx:186:13,\r\n      module_path = [...]/0,\r\n      name = 'axis_oblique_record',\r\n      signed = 1)\r\n\r\n  Compiler crash traceback from this point on:\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/Cython/Compiler/Nodes.py\", line 1033, in analyse\r\n      type = scope.lookup_type(self.name)\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/Cython/Compiler/Symtab.py\", line 898, in lookup_type\r\n      return entry.type.specialize(self.fused_to_specific)\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/Cython/Compiler/PyrexTypes.py\", line 1655, in specialize\r\n      return values[self]\r\n  KeyError: FusedType(name='axis_oblique_record')\r\n  Compiling sklearn/tree/_tree.pyx because it changed.\r\n  [1/1] Cythonizing sklearn/tree/_tree.pyx\r\n  Traceback (most recent call last):\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 363, in <module>\r\n      main()\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 345, in main\r\n      json_out['return_val'] = hook(**hook_input['kwargs'])\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 164, in prepare_metadata_for_build_wheel\r\n      return hook(metadata_directory, config_settings)\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/setuptools/build_meta.py\", line 174, in prepare_metadata_for_build_wheel\r\n      self.run_setup()\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/setuptools/build_meta.py\", line 267, in run_setup\r\n      super(_BuildMetaLegacyBackend,\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/setuptools/build_meta.py\", line 158, in run_setup\r\n      exec(compile(code, __file__, 'exec'), locals())\r\n    File \"setup.py\", line 316, in <module>\r\n      setup_package()\r\n    File \"setup.py\", line 312, in setup_package\r\n      setup(**metadata)\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/numpy/distutils/core.py\", line 135, in setup\r\n      config = configuration()\r\n    File \"setup.py\", line 187, in configuration\r\n      config.add_subpackage(\"sklearn\")\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/numpy/distutils/misc_util.py\", line 1016, in add_subpackage\r\n      config_list = self.get_subpackage(subpackage_name, subpackage_path,\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/numpy/distutils/misc_util.py\", line 982, in get_subpackage\r\n      config = self._get_configuration_from_setup_py(\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/numpy/distutils/misc_util.py\", line 924, in _get_configuration_from_setup_py\r\n      config = setup_module.configuration(*args)\r\n    File \"sklearn/setup.py\", line 85, in configuration\r\n      cythonize_extensions(top_path, config)\r\n    File \"/Users/adam2392/Documents/scikit-learn/sklearn/_build_utils/__init__.py\", line 74, in cythonize_extensions\r\n      config.ext_modules = cythonize(\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/Cython/Build/Dependencies.py\", line 1127, in cythonize\r\n      cythonize_one(*args)\r\n    File \"/Users/adam2392/miniforge3/envs/conda-sklearn-dev38/lib/python3.8/site-packages/Cython/Build/Dependencies.py\", line 1250, in cythonize_one\r\n      raise CompileError(None, pyx_file)\r\n  Cython.Compiler.Errors.CompileError: sklearn/tree/_tree.pyx\r\n```\r\n\r\n**Expected behavior**\r\nI would expect that the bug is more informative then `Compiler crash in AnalyseDeclarationsTransform`. Not sure what's going on here?\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS M1\r\n - Python version 3.8.12\r\n - Cython version 0.29.28\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "Is `axis_oblique_record` a function argument? Because it needs to be.\r\n\r\nObviously it shouldn't crash...",
            "created_at": "2022-03-08T07:02:39Z",
            "html_url": "https://github.com/cython/cython/issues/4674#issuecomment-1061470352",
            "id": 1061470352,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4674",
            "node_id": "IC_kwDOABDGAc4_RMCQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1061470352/reactions"
            },
            "updated_at": "2022-03-08T07:02:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1061470352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "No I want to define a `axis_oblique_record` variable within the function. I don't pass it because it's just an empty struct that's used by the function.\r\n\r\nAre you saying the only way to use a fusedtype with struct is as a function argument? Since it's just a struct storing data used by the the function, I didn't see that as a good practice since it would just be an empty initialized struct.\r\n\r\nIs there a way to dynamically define the struct either, based on a boolean? Say:\r\n```cython\r\nif condition:\r\n    cdef SplitRecord split\r\nelse:\r\n    cdef ObliqueSplitRecord split\r\n```\r\n? ",
            "created_at": "2022-03-08T15:30:22Z",
            "html_url": "https://github.com/cython/cython/issues/4674#issuecomment-1061902774",
            "id": 1061902774,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4674",
            "node_id": "IC_kwDOABDGAc4_S1m2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1061902774/reactions"
            },
            "updated_at": "2022-03-08T15:37:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1061902774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3460267?v=4",
                "events_url": "https://api.github.com/users/adam2392/events{/privacy}",
                "followers_url": "https://api.github.com/users/adam2392/followers",
                "following_url": "https://api.github.com/users/adam2392/following{/other_user}",
                "gists_url": "https://api.github.com/users/adam2392/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/adam2392",
                "id": 3460267,
                "login": "adam2392",
                "node_id": "MDQ6VXNlcjM0NjAyNjc=",
                "organizations_url": "https://api.github.com/users/adam2392/orgs",
                "received_events_url": "https://api.github.com/users/adam2392/received_events",
                "repos_url": "https://api.github.com/users/adam2392/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/adam2392/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adam2392/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/adam2392"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Are you saying the only way to use a fusedtype with struct is as a function argument?\r\n\r\nYes - the way that fused functions work is that it generates multiple versions of a function and selects one based on its arguments. That's arguably a limitation that could be improved, but it's unlikely to be soon. A dummy argument is one way around it.\r\n\r\n> Is there a way to dynamically define the struct either, based on a boolean? Say:\r\n\r\nNo. Although you could define both, and pick which one to access based on a boolean.",
            "created_at": "2022-03-08T19:41:27Z",
            "html_url": "https://github.com/cython/cython/issues/4674#issuecomment-1062136302",
            "id": 1062136302,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4674",
            "node_id": "IC_kwDOABDGAc4_Tunu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1062136302/reactions"
            },
            "updated_at": "2022-03-08T19:41:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1062136302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I see thanks for the explanation!",
            "created_at": "2022-03-09T20:42:49Z",
            "html_url": "https://github.com/cython/cython/issues/4674#issuecomment-1063353000",
            "id": 1063353000,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4674",
            "node_id": "IC_kwDOABDGAc4_YXqo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1063353000/reactions"
            },
            "updated_at": "2022-03-09T20:42:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1063353000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3460267?v=4",
                "events_url": "https://api.github.com/users/adam2392/events{/privacy}",
                "followers_url": "https://api.github.com/users/adam2392/followers",
                "following_url": "https://api.github.com/users/adam2392/following{/other_user}",
                "gists_url": "https://api.github.com/users/adam2392/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/adam2392",
                "id": 3460267,
                "login": "adam2392",
                "node_id": "MDQ6VXNlcjM0NjAyNjc=",
                "organizations_url": "https://api.github.com/users/adam2392/orgs",
                "received_events_url": "https://api.github.com/users/adam2392/received_events",
                "repos_url": "https://api.github.com/users/adam2392/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/adam2392/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adam2392/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/adam2392"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4674/comments",
    "created_at": "2022-03-08T01:46:58Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-03-08T07:02:54Z",
            "event": "labeled",
            "id": 6200288646,
            "label": {
                "color": "444444",
                "name": "Error Reporting"
            },
            "node_id": "LE_lADOABDGAc5FRJVtzwAAAAFxkOWG",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6200288646"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4674/events",
    "html_url": "https://github.com/cython/cython/issues/4674",
    "id": 1162122605,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557478,
            "name": "Error Reporting",
            "node_id": "MDU6TGFiZWw0MjU1NTc0Nzg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Error%20Reporting"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4674/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5FRJVt",
    "number": 4674,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4674/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4674/timeline",
    "title": "[BUG] When trying to compile code with fusedtype of structs?",
    "updated_at": "2022-03-09T20:42:49Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4674",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3460267?v=4",
        "events_url": "https://api.github.com/users/adam2392/events{/privacy}",
        "followers_url": "https://api.github.com/users/adam2392/followers",
        "following_url": "https://api.github.com/users/adam2392/following{/other_user}",
        "gists_url": "https://api.github.com/users/adam2392/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adam2392",
        "id": 3460267,
        "login": "adam2392",
        "node_id": "MDQ6VXNlcjM0NjAyNjc=",
        "organizations_url": "https://api.github.com/users/adam2392/orgs",
        "received_events_url": "https://api.github.com/users/adam2392/received_events",
        "repos_url": "https://api.github.com/users/adam2392/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adam2392/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adam2392/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adam2392"
    }
}