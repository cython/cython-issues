{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The `libc.math` module (cython/Cython/Includes/libc/math.pxd) seems to be missing a bunch of long double functions.  For example, this will error:\r\n\r\n```\r\nfrom libc.math cimport expl\r\n```\r\n\r\nI wasn't sure if that was intentional for portability.  There's a workaround to use the `numpy.math` equivalents (though one may not want a numpy dependency or the non-system implementation).  If it's just an oversight, I can send a PR.\r\n\r\nTangentially related: I also considered a new module corresponding to C99's `<tgmath.h>`, which uses macros that expand into the appropriate function call depending on the type (e.g. `exp(x)` in C will call `expl`, `exp`, `cexp` or `expf` depending on the static type of `x`).  If we did:\r\n```\r\ncdef extern from \"<tgmath.h>\" nogil:\r\n  long double exp(long double x)\r\n\r\ndef foo(float x):\r\n  cdef float y\r\n  y = exp(x)\r\n```\r\nwould that end up generating appropriate C to call `expf` via the macro, or would the Cython declaration cause an upcast to `long double`?  I couldn't find documentation for what assumptions Cython makes about the types relating to extern'd macros.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I wasn't sure if that was intentional for portability.\r\n\r\n.pxd declarations don't really have portability constraints. They only end up in C code if they are actually used in Cython code. PR welcome.\r\n\r\n> `exp(x)` in C will call `expl`, `exp`, `cexp` or `expf` depending on the static type of `x`\r\n\r\nCython can do this, too, at least internally (for C mode) and in C++ mode. We do this for Python's `abs()` function, for example. You can't currently declare overloaded C functions in user code, though. Could be worth adding this as a feature, although it might end up hiding accidental redeclaration bugs. Maybe an explicit '@cython.overload` decorator for such declarations could be used to silence the warning. Could actually be relatively easy to implement.\r\n\r\nThe issue with macros that allow for different return types is that Cython would not understand the logic and would use the (wrong) single declared return type in all cases. The normal way to deal with them is to give different Cython names to the same C macro and then call the right one in the Cython code, but that totally counters the idea of a joined dispatcher macro.",
            "created_at": "2020-05-03T16:40:48Z",
            "html_url": "https://github.com/cython/cython/issues/3570#issuecomment-623139824",
            "id": 623139824,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3570",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzEzOTgyNA==",
            "updated_at": "2020-05-05T14:03:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/623139824",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3570/comments",
    "created_at": "2020-05-03T16:06:47Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-03T16:40:59Z",
            "event": "labeled",
            "id": 3297600451,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyOTc2MDA0NTE=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3297600451"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-03T16:40:59Z",
            "event": "labeled",
            "id": 3297600452,
            "label": {
                "color": "444444",
                "name": "Library"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyOTc2MDA0NTI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3297600452"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3570/events",
    "html_url": "https://github.com/cython/cython/issues/3570",
    "id": 611446560,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425561823,
            "name": "Library",
            "node_id": "MDU6TGFiZWw0MjU1NjE4MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/Library"
        },
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3570/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2MTE0NDY1NjA=",
    "number": 3570,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Add missing long double math functions",
    "updated_at": "2020-05-05T14:03:29Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3570",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/15805?v=4",
        "events_url": "https://api.github.com/users/p00ya/events{/privacy}",
        "followers_url": "https://api.github.com/users/p00ya/followers",
        "following_url": "https://api.github.com/users/p00ya/following{/other_user}",
        "gists_url": "https://api.github.com/users/p00ya/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/p00ya",
        "id": 15805,
        "login": "p00ya",
        "node_id": "MDQ6VXNlcjE1ODA1",
        "organizations_url": "https://api.github.com/users/p00ya/orgs",
        "received_events_url": "https://api.github.com/users/p00ya/received_events",
        "repos_url": "https://api.github.com/users/p00ya/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/p00ya/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/p00ya/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/p00ya"
    }
}