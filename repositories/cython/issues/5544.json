{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nThe compiler crashes when compiling the `test3()` function, see below. (The other two functions compile fine, by the way.)\r\n```bash\r\n$ cythonize -i -3 test_fused.pyx \r\nCompiling /home/leof/dev/cuquantum/python/test_fused.pyx because it changed.\r\n[1/1] Cythonizing /home/leof/dev/cuquantum/python/test_fused.pyx\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    cdef vector[int64_t] x = [20, 21]\r\n    return func[int64_t](x)\r\n\r\ndef test3():\r\n    cdef vector[myT] x = [22, 23]\r\n    return func[myT](x)\r\n               ^\r\n------------------------------------------------------------\r\n\r\ntest_fused.pyx:27:15: Compiler crash in AnalyseExpressionsTransform\r\n\r\nModuleNode.body = StatListNode(test_fused.pyx:3:0)\r\nStatListNode.stats[8] = DefNode(test_fused.pyx:25:0,\r\n    is_cyfunction = True,\r\n    modifiers = [...]/0,\r\n    name = 'test3',\r\n    np_args_idx = [...]/0,\r\n    outer_attrs = [...]/2,\r\n    py_wrapper_required = True,\r\n    reqd_kw_flags_cname = '0',\r\n    used = True)\r\nFile 'Nodes.py', line 397, in analyse_expressions: StatListNode(test_fused.pyx:26:4,\r\n    is_terminator = True)\r\nFile 'Nodes.py', line 6781, in analyse_expressions: ReturnStatNode(test_fused.pyx:27:4,\r\n    is_terminator = True)\r\nFile 'ExprNodes.py', line 6041, in analyse_types: SimpleCallNode(test_fused.pyx:27:20,\r\n    analysed = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 4031, in analyse_types: IndexNode(test_fused.pyx:27:15,\r\n    is_called = 1,\r\n    is_fused_index = True,\r\n    is_subscript = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 4103, in analyse_base_and_index_types: IndexNode(test_fused.pyx:27:15,\r\n    is_called = 1,\r\n    is_fused_index = True,\r\n    is_subscript = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 4211, in analyse_as_c_function: IndexNode(test_fused.pyx:27:15,\r\n    is_called = 1,\r\n    is_fused_index = True,\r\n    is_subscript = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 4409, in parse_indexed_fused_cdef: IndexNode(test_fused.pyx:27:15,\r\n    is_called = 1,\r\n    is_fused_index = True,\r\n    is_subscript = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/home/leof/miniforge3/envs/opt_einsum_dev/lib/python3.8/site-packages/Cython/Compiler/ExprNodes.py\", line 4409, in parse_indexed_fused_cdef\r\n    raise InternalError(\"Couldn't find the right signature\")\r\nInternalError: Internal compiler error: Couldn't find the right signature\r\nTraceback (most recent call last):\r\n  File \"/home/leof/miniforge3/envs/opt_einsum_dev/bin/cythonize\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/leof/miniforge3/envs/opt_einsum_dev/lib/python3.8/site-packages/Cython/Build/Cythonize.py\", line 243, in main\r\n    _cython_compile_files(all_paths, options)\r\n  File \"/home/leof/miniforge3/envs/opt_einsum_dev/lib/python3.8/site-packages/Cython/Build/Cythonize.py\", line 70, in _cython_compile_files\r\n    ext_modules = cythonize(\r\n  File \"/home/leof/miniforge3/envs/opt_einsum_dev/lib/python3.8/site-packages/Cython/Build/Dependencies.py\", line 1134, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/leof/miniforge3/envs/opt_einsum_dev/lib/python3.8/site-packages/Cython/Build/Dependencies.py\", line 1301, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: /home/leof/dev/cuquantum/python/test_fused.pyx\r\n```\n\n### Code to reproduce the behaviour:\n\n```cython\r\n# distutils: language = c++\r\n\r\nfrom libc.stdint cimport int32_t, int64_t\r\nfrom libcpp.vector cimport vector\r\n\r\n\r\nctypedef int64_t myT\r\n\r\nctypedef fused numT:\r\n    int32_t\r\n    int64_t\r\n\r\ncdef int func(vector[numT] x):\r\n    x.push_back(1)\r\n    return 0\r\n\r\ndef test1():\r\n    cdef vector[int32_t] x = [18, 19]\r\n    return func[int32_t](x)\r\n\r\ndef test2():\r\n    cdef vector[int64_t] x = [20, 21]\r\n    return func[int64_t](x)\r\n\r\ndef test3():\r\n    cdef vector[myT] x = [22, 23]\r\n    return func[myT](x)\r\n```\r\n\n\n### Expected behaviour\n\nThe typedef `myT` should be properly recognized as a valid fused type. It actually works fine if I don't use it as the C++ container template type, so for example, something like\r\n```cython\r\ncdef int func(numT x): \r\n    ... \r\n\r\ncdef int a = func[myT](x)\r\n```\r\nwould actually compile and work as expected.\n\n### OS\n\nLinux\n\n### Python version\n\n3.8.13\n\n### Cython version\n\n3.0.0\n\n### Additional context\n\nbtw since I don't have access to the old (0.29.x) docs due to #5535, let I also ask here: Is this new feature that I am trying with fused types only supported since Cython 3.0? I tried with 0.29.24+ and while it didn't crash, it raised an error \"Can only parameterize template functions.\"",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "That looks like a bug I think. I don't think the intended behaviour has changed between 0.29.x and 3.0 so the documentation won't be informative.",
            "created_at": "2023-07-19T06:45:46Z",
            "html_url": "https://github.com/cython/cython/issues/5544#issuecomment-1641510450",
            "id": 1641510450,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5544",
            "node_id": "IC_kwDOABDGAc5h13Yy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1641510450/reactions"
            },
            "updated_at": "2023-07-19T06:45:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1641510450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Tested with the latest Cython (3.0.10) and it still crashed the Cython compiler... ðŸ˜¢ ",
            "created_at": "2024-06-04T04:44:56Z",
            "html_url": "https://github.com/cython/cython/issues/5544#issuecomment-2146601816",
            "id": 2146601816,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5544",
            "node_id": "IC_kwDOABDGAc5_8otY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2146601816/reactions"
            },
            "updated_at": "2024-06-04T04:44:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2146601816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5544/comments",
    "created_at": "2023-07-19T03:21:23Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5544/events",
    "html_url": "https://github.com/cython/cython/issues/5544",
    "id": 1811066074,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5544/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5r8qza",
    "number": 5544,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5544/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5544/timeline",
    "title": "[BUG] typedef'd fused types cannot be used as a C++ template type",
    "updated_at": "2024-06-04T04:44:57Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5544",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
        "events_url": "https://api.github.com/users/leofang/events{/privacy}",
        "followers_url": "https://api.github.com/users/leofang/followers",
        "following_url": "https://api.github.com/users/leofang/following{/other_user}",
        "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/leofang",
        "id": 5534781,
        "login": "leofang",
        "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
        "organizations_url": "https://api.github.com/users/leofang/orgs",
        "received_events_url": "https://api.github.com/users/leofang/received_events",
        "repos_url": "https://api.github.com/users/leofang/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/leofang"
    }
}