{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\nThanks again for fixing #6064.\r\n\r\nThe Cython compiler crashes with the following code using cython.ufunc with multiple, fused return types (single, fused return types work, as do multiple, non-fused return types):\r\n```cython\r\ncimport cython\r\nfrom cython cimport floating\r\n\r\n@cython.ufunc\r\ncdef (floating, floating) add_one(floating x):\r\n    return x, x+1\r\n```\r\n```python-traceback\r\n[1/1] Cythonizing ufunc_fused.pyx\r\nD:\\ufunc\\Cython\\Compiler\\Main.py:373: FutureWarning: Cython directive 'language_level' not set, using '3' (Py3). This has changed from earlier releases! File: D:\\ufunc\\ufunc_fused.pyx\r\n  tree = Parsing.p_module(s, pxd, full_module_name)\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncimport cython\r\nfrom cython cimport floating\r\n\r\n@cython.ufunc\r\ncdef (floating, floating) add_one(floating x):\r\n     ^\r\n------------------------------------------------------------\r\n\r\nufunc_fused.pyx:5:5: Compiler crash in AnalyseDeclarationsTransform\r\n\r\nFile 'ModuleNode.py', line 202, in analyse_declarations: ModuleNode(ufunc_fused.pyx:1:0,\r\n    full_module_name = 'ufunc_fused')\r\nFile 'Nodes.py', line 386, in analyse_declarations: StatListNode(ufunc_fused.pyx:1:0)\r\nFile 'Nodes.py', line 386, in analyse_declarations: StatListNode(ufunc_fused.pyx:5:5)\r\nFile 'Nodes.py', line 328, in analyse_declarations: CompilerDirectivesNode(ufunc_fused.pyx:5:5)\r\nFile 'Nodes.py', line 386, in analyse_declarations: StatListNode(ufunc_fused.pyx:5:5)\r\nFile 'Nodes.py', line 2620, in analyse_declarations: CFuncDefNode(ufunc_fused.pyx:5:5,\r\n    modifiers = [...]/0,\r\n    outer_attrs = [...]/2,\r\n    visibility = 'private')\r\nFile 'Nodes.py', line 1356, in analyse: CTupleBaseTypeNode(ufunc_fused.pyx:5:5)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"D:\\ufunc\\Cython\\Compiler\\Nodes.py\", line 1356, in analyse\r\n    entry = env.declare_tuple_type(self.pos, component_types)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"D:\\ufunc\\Cython\\Compiler\\Symtab.py\", line 1343, in declare_tuple_type\r\n    ttype = self._cached_tuple_types[components] = PyrexTypes.c_tuple_type(components)\r\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"D:\\ufunc\\Cython\\Compiler\\PyrexTypes.py\", line 4652, in c_tuple_type\r\n    cname = Naming.ctuple_type_prefix + type_list_identifier(components)\r\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"D:\\ufunc\\Cython\\Compiler\\PyrexTypes.py\", line 5440, in type_list_identifier\r\n    return cap_length('__and_'.join(type_identifier(type) for type in types))\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"D:\\ufunc\\Cython\\Compiler\\PyrexTypes.py\", line 5440, in <genexpr>\r\n    return cap_length('__and_'.join(type_identifier(type) for type in types))\r\n                                    ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"D:\\ufunc\\Cython\\Compiler\\PyrexTypes.py\", line 5468, in type_identifier\r\n    decl = type.empty_declaration_code(pyrex=pyrex)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"D:\\ufunc\\Cython\\Compiler\\PyrexTypes.py\", line 50, in empty_declaration_code\r\n    self._empty_declaration = self.declaration_code('')\r\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"D:\\ufunc\\Cython\\Compiler\\PyrexTypes.py\", line 1924, in declaration_code\r\n    raise Exception(\"This may never happen, please report a bug\")\r\nException: This may never happen, please report a bug\r\nTraceback (most recent call last):\r\n  File \"D:\\ufunc\\setup.py\", line 4, in <module>\r\n    setup(\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\__init__.py\", line 103, in setup\r\n    return distutils.core.setup(**attrs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\_distutils\\core.py\", line 185, in setup\r\n    return run_commands(dist)\r\n           ^^^^^^^^^^^^^^^^^^\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\_distutils\\core.py\", line 201, in run_commands\r\n    dist.run_commands()\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\_distutils\\dist.py\", line 969, in run_commands\r\n    self.run_command(cmd)\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\dist.py\", line 963, in run_command\r\n    super().run_command(command)\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\_distutils\\dist.py\", line 988, in run_command\r\n    cmd_obj.run()\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\command\\build_ext.py\", line 89, in run\r\n    _build_ext.run(self)\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\_distutils\\command\\build_ext.py\", line 345, in run\r\n    self.build_extensions()\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\_distutils\\command\\build_ext.py\", line 467, in build_extensions\r\n    self._build_extensions_serial()\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\_distutils\\command\\build_ext.py\", line 493, in _build_extensions_serial\r\n    self.build_extension(ext)\r\n  File \"X:\\Python311\\Lib\\site-packages\\setuptools\\command\\build_ext.py\", line 250, in build_extension\r\n    _build_ext.build_extension(self, ext)\r\n  File \"D:\\ufunc\\Cython\\Distutils\\build_ext.py\", line 129, in build_extension\r\n    new_ext = cythonize(\r\n              ^^^^^^^^^^\r\n  File \"D:\\ufunc\\Cython\\Build\\Dependencies.py\", line 1168, in cythonize\r\n    cythonize_one(*args)\r\n  File \"D:\\ufunc\\Cython\\Build\\Dependencies.py\", line 1331, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: ufunc_fused.pyx\r\n```\n\n### Code to reproduce the behaviour:\n\n```cython\r\ncimport cython\r\nfrom cython cimport floating\r\n\r\n@cython.ufunc\r\ncdef (floating, floating) add_one(floating x):\r\n    return x, x+1\r\n```\r\n\n\n### Expected behaviour\n\nNo compiler crash\n\n### OS\n\nWindows 11\n\n### Python version\n\n3.11, 3.12\n\n### Cython version\n\n3.0.9 and current main branch (f3cad15)\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks. I'll try to have a look in the fairly near future. The ufunc stuff is all fairly new so I'm sure there's plenty of bugs there.",
            "created_at": "2024-03-12T18:33:18Z",
            "html_url": "https://github.com/cython/cython/issues/6068#issuecomment-1992304357",
            "id": 1992304357,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6068",
            "node_id": "IC_kwDOABDGAc52wCbl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1992304357/reactions"
            },
            "updated_at": "2024-03-12T18:33:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1992304357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6068/comments",
    "created_at": "2024-03-11T03:29:05Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6068/events",
    "html_url": "https://github.com/cython/cython/issues/6068",
    "id": 2178154227,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6068/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6B0_7z",
    "number": 6068,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6068/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6068/timeline",
    "title": "[BUG] Compiler crash using ufunc with multiple, fused return types",
    "updated_at": "2024-03-12T18:33:20Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6068",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/483428?v=4",
        "events_url": "https://api.github.com/users/cgohlke/events{/privacy}",
        "followers_url": "https://api.github.com/users/cgohlke/followers",
        "following_url": "https://api.github.com/users/cgohlke/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgohlke/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/cgohlke",
        "id": 483428,
        "login": "cgohlke",
        "node_id": "MDQ6VXNlcjQ4MzQyOA==",
        "organizations_url": "https://api.github.com/users/cgohlke/orgs",
        "received_events_url": "https://api.github.com/users/cgohlke/received_events",
        "repos_url": "https://api.github.com/users/cgohlke/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/cgohlke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgohlke/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/cgohlke"
    }
}