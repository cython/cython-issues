{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "When executing following code:\r\n```\r\nclass my_property(property):\r\n    pass\r\n\r\n\r\ncdef class A:\r\n    @my_property\r\n    def x(self):\r\n        pass\r\n\r\n    @x.setter\r\n    def x(self, value):\r\n        pass\r\n\r\n\r\nprint(A.x.fget)\r\nprint(A.x.fset)\r\n```\r\n\r\ngot invalid setter method:\r\n```\r\n<method 'x' of 'sample.A' objects>\r\n<sample.my_property object at 0x7f6931c44048>\r\n```\r\nIt seems that there's some name collision occurs when executing cdef class code.\r\n\r\nCython version 0.28.1\r\nPython version 3.5.1",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You can try giving your setter method a different name, but honestly, I'd stick to using the normal `property` decorator instead of anything else. It's special cased in Cython for cdef classes, and it really needs to be.",
            "created_at": "2018-03-27T17:42:44Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-376612826",
            "id": 376612826,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjYxMjgyNg==",
            "updated_at": "2018-03-27T17:42:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/376612826",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You can try giving your setter method a different name\r\n\r\nIn this case\r\n```\r\ncdef class A:\r\n    @my_property\r\n    def x(self):\r\n        pass\r\n\r\n    @x.setter\r\n    def x_setter(self, value):\r\n        pass\r\n```\r\nwe have incomplete property \"x\", the same as one above, and property \"x_setter\" with correct methods.\r\nSo currently i use a bit ugly workaround:\r\n```\r\ncdef class A:\r\n    def x_getter(self):\r\n        pass\r\n\r\n    def x_setter(self, value):\r\n        pass\r\n\r\n    x = my_property(x_getter, x_setter)\r\n```",
            "created_at": "2018-03-28T10:22:25Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-376837222",
            "id": 376837222,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjgzNzIyMg==",
            "updated_at": "2018-03-28T10:22:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/376837222",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10155461?v=4",
                "events_url": "https://api.github.com/users/almaslov/events{/privacy}",
                "followers_url": "https://api.github.com/users/almaslov/followers",
                "following_url": "https://api.github.com/users/almaslov/following{/other_user}",
                "gists_url": "https://api.github.com/users/almaslov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/almaslov",
                "id": 10155461,
                "login": "almaslov",
                "node_id": "MDQ6VXNlcjEwMTU1NDYx",
                "organizations_url": "https://api.github.com/users/almaslov/orgs",
                "received_events_url": "https://api.github.com/users/almaslov/received_events",
                "repos_url": "https://api.github.com/users/almaslov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/almaslov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/almaslov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/almaslov"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Since `property` is working for extension types, may I ask why do we need to hijack it?  What would be the consequences if we stop doing so?",
            "created_at": "2020-02-21T15:04:55Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-589691739",
            "id": 589691739,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTY5MTczOQ==",
            "updated_at": "2020-02-21T15:04:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/589691739",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think it's just to put the property in [tp_getset](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getset) - it'll give marginally quicker access because you're calling the C function directly rather than calling a method of a property object, which then calls your function (possibly going through the usual layers of wrappers that Cython sets up).",
            "created_at": "2020-02-21T15:22:32Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-589699254",
            "id": 589699254,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTY5OTI1NA==",
            "updated_at": "2020-02-21T15:22:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/589699254",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If so, should there be a compiler flag to turn it off, since it prevents overriding getters/setters?\r\n\r\nEdit: it is because the current implementation does not address the `@SuperClass.name.getter` kind of thing.",
            "created_at": "2020-02-21T15:27:27Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-589701509",
            "id": 589701509,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTcwMTUwOQ==",
            "updated_at": "2020-02-21T15:28:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/589701509",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think it's probably well-known that the property applying system needs some attention (try chaining properties with classmethod/staticmethod for example). But it's also pretty complicated and that's the reason why no-one really wants to touch it.",
            "created_at": "2020-02-21T15:30:48Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-589702966",
            "id": 589702966,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTcwMjk2Ng==",
            "updated_at": "2020-02-21T15:30:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/589702966",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "So would it be wise to add a compiler flag to let users turn the Cython hijack off?  Some chaining will probably work in contrast to not working at all.",
            "created_at": "2020-02-21T15:33:46Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-589704276",
            "id": 589704276,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTcwNDI3Ng==",
            "updated_at": "2020-02-21T15:33:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/589704276",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@McSinyx I don't know - I get the feeling that @Scoder is trying to avoid adding more compiler flags unless they're really necessary. You'd probably need to show some use-case that can't be worked round (maybe `@SuperClass.name.getter` - I'm not sure I understand what you mean by that?).",
            "created_at": "2020-02-21T17:05:11Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-589743935",
            "id": 589743935,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTc0MzkzNQ==",
            "updated_at": "2020-02-21T17:05:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/589743935",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think I figured out the issue with Python builtin `property`: it is not possible to register a read-write property properly (`TypeError: 'property' object is not callable`).\r\n\r\n> `@SuperClass.name.getter` - I'm not sure I understand what you mean by that\r\n\r\nThis is used when the subclass wants to override the abstract (ABC) superclass descriptor, and apparently it is not yet supported by Cython (I imagine that is can be as simple as the support for `@name.getter`, but I'm not sure).\r\n\r\nAnyway, in case it's read-only or write-only property, the builtin decorator works fine.",
            "created_at": "2020-02-22T04:49:05Z",
            "html_url": "https://github.com/cython/cython/issues/2181#issuecomment-589918342",
            "id": 589918342,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2181",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTkxODM0Mg==",
            "updated_at": "2020-02-22T04:49:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/589918342",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2181/comments",
    "created_at": "2018-03-26T18:54:53Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-02-21T17:05:11Z",
            "event": "mentioned",
            "id": 3061231519,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA2MTIzMTUxOQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3061231519"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-02-21T17:05:11Z",
            "event": "subscribed",
            "id": 3061231522,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNjEyMzE1MjI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3061231522"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-02-21T17:05:11Z",
            "event": "mentioned",
            "id": 3061231526,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA2MTIzMTUyNg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3061231526"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-02-21T17:05:11Z",
            "event": "subscribed",
            "id": 3061231527,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNjEyMzE1Mjc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3061231527"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2181/events",
    "html_url": "https://github.com/cython/cython/issues/2181",
    "id": 308693622,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2181/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzMDg2OTM2MjI=",
    "number": 2181,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "property decorator doesn't work when aliased",
    "updated_at": "2020-02-22T04:49:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2181",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10155461?v=4",
        "events_url": "https://api.github.com/users/almaslov/events{/privacy}",
        "followers_url": "https://api.github.com/users/almaslov/followers",
        "following_url": "https://api.github.com/users/almaslov/following{/other_user}",
        "gists_url": "https://api.github.com/users/almaslov/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/almaslov",
        "id": 10155461,
        "login": "almaslov",
        "node_id": "MDQ6VXNlcjEwMTU1NDYx",
        "organizations_url": "https://api.github.com/users/almaslov/orgs",
        "received_events_url": "https://api.github.com/users/almaslov/received_events",
        "repos_url": "https://api.github.com/users/almaslov/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/almaslov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/almaslov/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/almaslov"
    }
}