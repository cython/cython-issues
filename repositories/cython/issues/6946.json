{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Is your feature request related to a problem? Please describe.\n\nIn my code, I would like the following to work\n```cython\nimport cython\n@cython.ccall\ndef callingfunction(a: str) -> None:\n    ...\n```\n\nThe declares the function as always returning None, most often because no explicit value is returned. Note that in general None is a valid type -- it's the type of None aka types.NoneType\n\n### Describe the solution you'd like.\n\n_No response_\n\n### Describe alternatives you've considered.\n\n_No response_\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "When called from C, would you expect them to literally return a Python `None`, or would you expect them to be declared with a C `void`?\n\nI'd probably expect the latter, but there's clearly multiple interpretations and you seem to prefer the former.",
            "created_at": "2025-06-06T18:27:26Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2950103996",
            "id": 2950103996,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6v1wO8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2950103996/reactions"
            },
            "updated_at": "2025-06-06T18:27:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2950103996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The easy approach is to have them return a None, though you could have them return something like an int with some value for exceptions. I would not want them to swallow exceptions so they probably should not be void C functions.",
            "created_at": "2025-06-06T19:27:43Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2950456022",
            "id": 2950456022,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6v3GLW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2950456022/reactions"
            },
            "updated_at": "2025-06-06T19:27:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2950456022",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/234443?v=4",
                "events_url": "https://api.github.com/users/jpe/events{/privacy}",
                "followers_url": "https://api.github.com/users/jpe/followers",
                "following_url": "https://api.github.com/users/jpe/following{/other_user}",
                "gists_url": "https://api.github.com/users/jpe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jpe",
                "id": 234443,
                "login": "jpe",
                "node_id": "MDQ6VXNlcjIzNDQ0Mw==",
                "organizations_url": "https://api.github.com/users/jpe/orgs",
                "received_events_url": "https://api.github.com/users/jpe/received_events",
                "repos_url": "https://api.github.com/users/jpe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jpe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jpe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jpe",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "void functions don't swallow the exception, but they do force an exception check every time which can be less efficient than using the return value as a signal. Not sure whether that should change any opinion here though.",
            "created_at": "2025-06-06T20:09:35Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2950679476",
            "id": 2950679476,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6v38u0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2950679476/reactions"
            },
            "updated_at": "2025-06-06T20:09:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2950679476",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the ambiguity behind this is a striking argument against it. It's unclear whether it means \"returns `void`\" or \"only propagates exceptions\" or \"returns `None`\". I'm sure many users would not assume the latter, although it's explicitly written in their code.\n\nIIRC, you can already write `-> cython.void`, maybe that's what you're after?",
            "created_at": "2025-06-08T02:55:41Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2953460530",
            "id": 2953460530,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6wCjsy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2953460530/reactions"
            },
            "updated_at": "2025-06-08T02:55:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2953460530",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm after being able to write the standard -> hint for a function that doesn't return anything and cython not treating it as an error. The reason why it's often used is that pep 484 recommends that  \"checked functions have annotations for all arguments and the return type\". I want to use it simply for documentation purposes, at least for now.\n\nIf backward compatibility wasn't an issue, I'd probably propose that the C implementation of the function return a C int with -1 for an exception like much of the Python C api. But backward compatibility is probably an issue and just have the function return an object is almost as good. \n\nI'm one who has been burned by exception swallowing a number of times and reflexively writes exception specs when returning a C number or bint. My intuition is that the performance ordering of return conventions from fastest to slowest is (1) returning a C int and checking, (2) returning PyObject*, and (3) using C void as return type and calling PyErr_Occurred(). But I also know that intuition about performance can be wrong.",
            "created_at": "2025-06-09T09:57:21Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2955294958",
            "id": 2955294958,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6wJjju",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2955294958/reactions"
            },
            "updated_at": "2025-06-09T09:57:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2955294958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/234443?v=4",
                "events_url": "https://api.github.com/users/jpe/events{/privacy}",
                "followers_url": "https://api.github.com/users/jpe/followers",
                "following_url": "https://api.github.com/users/jpe/following{/other_user}",
                "gists_url": "https://api.github.com/users/jpe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jpe",
                "id": 234443,
                "login": "jpe",
                "node_id": "MDQ6VXNlcjIzNDQ0Mw==",
                "organizations_url": "https://api.github.com/users/jpe/orgs",
                "received_events_url": "https://api.github.com/users/jpe/received_events",
                "repos_url": "https://api.github.com/users/jpe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jpe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jpe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jpe",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I definitely agree that it shouldn't be treated as an error even if we don't do anything in particular with it (because as a general rule, annotations that we don't understand shouldn't be an error).\n\nI'm not sure backwards compatibility is (yet) a huge issue here - it's only really a concern for things that are shared in pxd files and I don't think that applies here. This does kind of imply that annotations are too ambiguous to ever be used as the source of truth for pxd files, but that's maybe a different argument.\n\nSo the best short-term fix would probably be to accept and ignore the annotation (which practically will become \"returning an unchecked Python object\")",
            "created_at": "2025-06-09T19:52:56Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2956849410",
            "id": 2956849410,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6wPfEC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2956849410/reactions"
            },
            "updated_at": "2025-06-09T19:52:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2956849410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think the ambiguity behind this is a striking argument against it. It's unclear whether it means \"returns `void`\" or \"only propagates exceptions\" or \"returns `None`\". I'm sure many users would not assume the latter, although it's explicitly written in their code.\n\nIf I am not wrong Cython strictly distinguish between `None` and `NULL`, hence to keep thinks consistent function:\n\n```cython\n@cython.cfunc\ndef bar() -> None:\n    ...\n```\n\nshould return `None`. Moreover, philosophy of Cython is \"you get what you write\" hence we should not function with `-> None` optimise to return value as C integer etc...\n\nBut I do support allowing `-> None` in cdef/cpdef functions.",
            "created_at": "2025-06-09T20:00:05Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2956871324",
            "id": 2956871324,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6wPkac",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2956871324/reactions"
            },
            "updated_at": "2025-06-09T20:04:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2956871324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I definitely agree that it shouldn't be treated as an error even if we don't do anything in particular with it (because as a general rule, annotations that we don't understand shouldn't be an error).\n> \n> I'm not sure backwards compatibility is (yet) a huge issue here - it's only really a concern for things that are shared in pxd files and I don't think that applies here. This does kind of imply that annotations are too ambiguous to ever be used as the source of truth for pxd files, but that's maybe a different argument.\n> \n> So the best short-term fix would probably be to accept and ignore the annotation (which practically will become \"returning an unchecked Python object\")\n\nYou're correct that since they've never worked in a .pxd, there's less of a backward compatibility issue. Still, defaulting None to object seems acceptable to me and is easier to implement than special casing this to return an error code or use void. I'll plan to create a PR that does this in the next few days. I'll also check to see if def f(n: None): works if f is a cdef / cpdef, even though I find it hard to come up with a reason to use it in actual code.",
            "created_at": "2025-06-10T09:06:25Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2958296980",
            "id": 2958296980,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6wVAeU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2958296980/reactions"
            },
            "updated_at": "2025-06-10T09:06:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2958296980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/234443?v=4",
                "events_url": "https://api.github.com/users/jpe/events{/privacy}",
                "followers_url": "https://api.github.com/users/jpe/followers",
                "following_url": "https://api.github.com/users/jpe/following{/other_user}",
                "gists_url": "https://api.github.com/users/jpe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jpe",
                "id": 234443,
                "login": "jpe",
                "node_id": "MDQ6VXNlcjIzNDQ0Mw==",
                "organizations_url": "https://api.github.com/users/jpe/orgs",
                "received_events_url": "https://api.github.com/users/jpe/received_events",
                "repos_url": "https://api.github.com/users/jpe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jpe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jpe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jpe",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So the best short-term fix would probably be to accept and ignore the annotation (which practically will become \"returning an unchecked Python object\")\n\nOTOH, given that annotations didn't work before in .pxd files and thus can only be freshly written in the future, why should we blindly accept things that are potentially incorrect in a file format that is completely under our control? As soon as Cython starts understanding these annotations, existing user code that relies on them being incorrect (or not well adapted) will break, or worse, might even silently change its behaviour.",
            "created_at": "2025-06-10T17:13:04Z",
            "html_url": "https://github.com/cython/cython/issues/6946#issuecomment-2960035523",
            "id": 2960035523,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6946",
            "node_id": "IC_kwDOABDGAc6wbo7D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2960035523/reactions"
            },
            "updated_at": "2025-06-10T17:13:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2960035523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6946/comments",
    "created_at": "2025-06-06T14:26:05Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6946/events",
    "html_url": "https://github.com/cython/cython/issues/6946",
    "id": 3124944136,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6946/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc66Qt0I",
    "number": 6946,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 1,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/cython/cython/issues/6946/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6946/timeline",
    "title": "[ENH] Allow -> None in cpdef & cdef signature",
    "type": null,
    "updated_at": "2025-06-10T17:13:04Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6946",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/234443?v=4",
        "events_url": "https://api.github.com/users/jpe/events{/privacy}",
        "followers_url": "https://api.github.com/users/jpe/followers",
        "following_url": "https://api.github.com/users/jpe/following{/other_user}",
        "gists_url": "https://api.github.com/users/jpe/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jpe",
        "id": 234443,
        "login": "jpe",
        "node_id": "MDQ6VXNlcjIzNDQ0Mw==",
        "organizations_url": "https://api.github.com/users/jpe/orgs",
        "received_events_url": "https://api.github.com/users/jpe/received_events",
        "repos_url": "https://api.github.com/users/jpe/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jpe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jpe/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jpe",
        "user_view_type": "public"
    }
}