{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe your issue\n\nAccording to Python docs, `PyType_FromModuleAndSpec`  is part of the Stable ABI since 3.10\nhttps://docs.python.org/3/c-api/type.html#c.PyType_FromModuleAndSpec\n\nHowever, Python headers, since version 3.9 and until today's main branch, mark this API as part of 3.9\nhttps://github.com/python/cpython/blob/main/Include/object.h#L405\n\nFollowing CPython headers, Cython generates code like the following\n```c\n#if __PYX_LIMITED_VERSION_HEX < 0x03090000\n  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))\n  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);\n#else\n  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)\n  #define __Pyx_PyCMethod  PyCMethod\n#endif\n```\nbut then running `abi3audit` on the ext module fails, as this popular tool seems to follow documentation:\n```console\n$ abi3audit -v src/slepc4py/lib/arch-linux-c-debug/SLEPc.abi3.so --assume-minimum-abi3 3.9\n[21:31:53] 👎 : SLEPc.abi3.so uses the Python 3.10 ABI, but is tagged for the Python 3.9 ABI                                                                  \n           ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┓                                                                                                             \n           ┃ Symbol                   ┃ Version ┃                                                                                                             \n           ┡━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━┩                                                                                                             \n           │ PyType_FromModuleAndSpec │ 3.10    │                                                                                                             \n           └──────────────────────────┴─────────┘                                                                                                             \n           💁 SLEPc.abi3.so: 1 extensions scanned; 1 ABI version mismatches and 0 ABI violations fou\n```\n\nAt this point, there are two possible scenarios:\n1. Python documentation is wrong\n2. Python headers are wrong\n\nIn any case, something should be fixed in Python (either docs or headers), and one of Cython or abi3audit should be fixed.\n\nThoughts?",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm fairly sure that abi3audit just reads https://github.com/python/cpython/blob/main/Misc/stable_abi.toml.\n\nThis seems like Cython is probably technically wrong. However I think it's pretty unlikely that we'll get a new version of Python 3.9 specifically to take that function out of the Limited API. Personally I think we should do nothing. It will trigger abi3audit but the modules will work.\n\nHopefully Python won't correct the headers - I think they haven't in other cases where there's mistakes like this, because it's disruptive if anyone is relying on it accidentally for no real benefit.",
            "created_at": "2025-10-02T06:43:36Z",
            "html_url": "https://github.com/cython/cython/issues/7181#issuecomment-3359397282",
            "id": 3359397282,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7181",
            "node_id": "IC_kwDOABDGAc7IPFWi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3359397282/reactions"
            },
            "updated_at": "2025-10-02T06:43:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3359397282",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "After a bit more of investigation, I think Cython may need a fix, ignoring what Python headers say. \n\nThe problem is Windows, where the ABI3 handling is stricter than in Linux and macOS.\n\nI inspected the Python ABI3 DLL on Windows (`python3.dll`). \n\nThis is from the Python 3.10 installation (running bash in a GitHub Actions runner using tmate)\n```console\nrunneradmin@runnervm747y6 MINGW64 /c/hostedtoolcache/windows/Python/3.10.11/x64\n# strings python3.dll | grep PyType_FromModuleAndSpec\nPyType_FromModuleAndSpec\npython310.PyType_FromModuleAndSpec\n```\n\nUsing a Python 3.9 installation, I get no output from `python3.dll`\n```console\nrunneradmin@runnervm747y6 MINGW64 /c/hostedtoolcache/windows/Python/3.9.13/x64\n# strings python3.dll | grep PyType_FromModuleAndSpec\n```\nOf course the symbol is available in `python39.dll` (but that's not what ABI3 builds use)\n```console\nrunneradmin@runnervm747y6 MINGW64 /c/hostedtoolcache/windows/Python/3.9.13/x64\n# strings python39.dll | grep PyType_FromModuleAndSpec                                                                      \nPyType_FromModuleAndSpec\n```\n\nThis means that if users build an extension module asking for `Py_LIMITED_API=3.9`, then Cython will generate code using `PyType_FromModuleAndSpec`. However, this function is not available in `python3.dll` for Python 3.9, and the module will fail to link or load.",
            "created_at": "2025-10-02T08:03:16Z",
            "html_url": "https://github.com/cython/cython/issues/7181#issuecomment-3359732812",
            "id": 3359732812,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7181",
            "node_id": "IC_kwDOABDGAc7IQXRM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3359732812/reactions"
            },
            "updated_at": "2025-10-02T08:03:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3359732812",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Here you have an example of the issue on Windows:\nhttps://github.com/mpi4py/mpi4py/actions/runs/18189344863/job/51780680380#step:14:233\n```\n   Creating library build\\temp.win-amd64-cpython-39\\Release\\src\\mpi4py\\MPI.lib and object build\\temp.win-amd64-cpython-39\\Release\\src\\mpi4py\\MPI.exp\nMPI.obj : error LNK2001: unresolved external symbol __imp_PyType_FromModuleAndSpec\nMPI.obj : error LNK2001: unresolved external symbol __imp_PyInterpreterState_Get\nbuild\\lib.win-amd64-cpython-39\\mpi4py\\MPI.pyd : fatal error LNK1120: 2 unresolved externals\nerror: command 'C:\\\\Program Files\\\\Microsoft Visual Studio\\\\2022\\\\Enterprise\\\\VC\\\\Tools\\\\MSVC\\\\14.44.35207\\\\bin\\\\HostX86\\\\x64\\\\link.exe' failed with exit code 1120\n```\n\nTherefore I would claim that Cython is generating broken code, and therefore we need a fix of that.\n\nEDIT: There seem to be an additional issue with `PyInterpreterState_Get`, but this may be a bug in CPython. \nOh boy... Python 3.9 is becoming EOL in one month, maybe I should just forget about it.\n\n",
            "created_at": "2025-10-02T09:59:03Z",
            "html_url": "https://github.com/cython/cython/issues/7181#issuecomment-3360253538",
            "id": 3360253538,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7181",
            "node_id": "IC_kwDOABDGAc7ISWZi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3360253538/reactions"
            },
            "updated_at": "2025-10-02T10:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3360253538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah I agree it's broken then. We should fix those. In both cases we have alternative implementations so it should be a big problem to fix.\n\nI did actually add an abi3audit option to runtests.py so maybe we should enable that on the CI",
            "created_at": "2025-10-02T16:25:28Z",
            "html_url": "https://github.com/cython/cython/issues/7181#issuecomment-3362075203",
            "id": 3362075203,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7181",
            "node_id": "IC_kwDOABDGAc7IZTJD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3362075203/reactions"
            },
            "updated_at": "2025-10-02T16:25:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3362075203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`PyInterpreterState_Get` is documented as part of the stable ABI in 3.9 but seems to be missing from [the file used to build the Windows dll](https://github.com/python/cpython/blob/3.9/PC/python3.def). That may be a case of special-casing Windows unfortunately.",
            "created_at": "2025-10-02T19:18:51Z",
            "html_url": "https://github.com/cython/cython/issues/7181#issuecomment-3362619232",
            "id": 3362619232,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7181",
            "node_id": "IC_kwDOABDGAc7IbX9g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3362619232/reactions"
            },
            "updated_at": "2025-10-02T19:18:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3362619232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It looks like there might be a longer list of symbols missing on Windows on 3.9 and below https://github.com/python/cpython/issues/87401:\n\n> PyMarshal_WriteObjectToFile, PyThread_allocate_lock, PyObject_GC_IsFinalized, PyThread_ReInitTLS, PyThread_acquire_lock, PyThread_GetInfo, PyDictRevIterValue_Type, PyThread_get_thread_native_id, PyThread_start_new_thread, PyThread_set_stacksize, PyDictRevIterKey_Type, PyOS_AfterFork_Child, PyThread_create_key, PyThread_get_thread_ident, PyOS_BeforeFork, Py_BytesMain, PyThread_get_key_value, PyCodec_Unregister, PyInterpreterState_Get, PyMember_GetOne, PyThread_init_thread, PyInterpreterState_GetDict, PyThread_set_key_value, PyThread_delete_key, PyMarshal_WriteObjectToString, PyOS_AfterFork_Parent, PyThread_delete_key_value, PyObject_GC_IsTracked, PyMarshal_ReadObjectFromString, PyMarshal_WriteLongToFile, PyThread_exit_thread, PyThread_acquire_lock_timed, PyThread_get_stacksize, PyMember_SetOne, PyDictRevIterItem_Type, PyThread_free_lock, PyThread_release_lock\n\nI think we probably use the `PyThread_*_lock` ones and `PyObject_GC_*` ones.  Unfortunately none of those are really possible to replace so we may just have to accept those being broken on Windows for older versions/",
            "created_at": "2025-10-02T19:51:47Z",
            "html_url": "https://github.com/cython/cython/issues/7181#issuecomment-3362712308",
            "id": 3362712308,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7181",
            "node_id": "IC_kwDOABDGAc7Ibur0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3362712308/reactions"
            },
            "updated_at": "2025-10-02T19:51:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3362712308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7181/comments",
    "created_at": "2025-10-01T18:37:18Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-10-02T11:23:48Z",
            "event": "subscribed",
            "id": 20057322348,
            "node_id": "SE_lADOABDGAc7PGzy_zwAAAASrgnNs",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20057322348"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": "23d633240353d6d5a61ef2c4d0fbf803c9832615",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/23d633240353d6d5a61ef2c4d0fbf803c9832615",
            "created_at": "2025-10-02T19:39:04Z",
            "event": "referenced",
            "id": 20067271739,
            "node_id": "REFE_lADOABDGAc7PGzy_zwAAAASsGkQ7",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20067271739"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": "e0e6d814767d9537cfe4b2e4eeba109f4c12b05e",
            "commit_url": "https://api.github.com/repos/da-woods/cython/commits/e0e6d814767d9537cfe4b2e4eeba109f4c12b05e",
            "created_at": "2025-10-02T19:44:17Z",
            "event": "referenced",
            "id": 20067344216,
            "node_id": "REFE_lADOABDGAc7PGzy_zwAAAASsG19Y",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20067344216"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7181/events",
    "html_url": "https://github.com/cython/cython/issues/7181",
    "id": 3474668735,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7181/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7PGzy_",
    "number": 7181,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7181/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7181/timeline",
    "title": "`PyType_FromModuleAndSpec` and the Stable ABI",
    "type": null,
    "updated_at": "2025-10-02T19:51:47Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7181",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
        "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
        "followers_url": "https://api.github.com/users/dalcinl/followers",
        "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
        "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dalcinl",
        "id": 294981,
        "login": "dalcinl",
        "node_id": "MDQ6VXNlcjI5NDk4MQ==",
        "organizations_url": "https://api.github.com/users/dalcinl/orgs",
        "received_events_url": "https://api.github.com/users/dalcinl/received_events",
        "repos_url": "https://api.github.com/users/dalcinl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dalcinl",
        "user_view_type": "public"
    }
}