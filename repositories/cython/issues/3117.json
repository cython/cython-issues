{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Not good practice necessarily but how would one go about writing this if possible at all?\r\n\r\nBasic example:\r\n\r\n```def func() -> list or dict: return []```\r\n\r\n\r\nDebug from a complex example:\r\n\r\n```\r\n\tdef next(self, asObj: bool = False) -> numpy.ndarray or list:\r\n                                            ^\r\n------------------------------------------------------------\r\n\r\nsrc/ipo.py:351:45: Compiler crash in AnalyseExpressionsTransform\r\nFile 'Nodes.py', line 436, in analyse_expressions: StatListNode(ipo.py:2:0)\r\nFile 'Nodes.py', line 436, in analyse_expressions: StatListNode(ipo.py:337:0)\r\nFile 'Nodes.py', line 4578, in analyse_expressions: PyClassDefNode(ipo.py:337:0,\r\n    name = 'Calendar')\r\nFile 'Nodes.py', line 436, in analyse_expressions: StatListNode(ipo.py:338:1)\r\nFile 'Nodes.py', line 5159, in analyse_expressions: SingleAssignmentNode(ipo.py:351:1)\r\nFile 'Nodes.py', line 5279, in analyse_types: SingleAssignmentNode(ipo.py:351:1)\r\nFile 'ExprNodes.py', line 9225, in analyse_types: PyCFunctionNode(ipo.py:351:1,\r\n    binding = True,\r\n    is_temp = 1,\r\n    pymethdef_cname = '__pyx_mdef_9ipo_8Calendar_7next',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 9270, in analyse_default_args: PyCFunctionNode(ipo.py:351:1,\r\n    binding = True,\r\n    is_temp = 1,\r\n    pymethdef_cname = '__pyx_mdef_9ipo_8Calendar_7next',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 9358, in analyse_annotation: PyCFunctionNode(ipo.py:351:1,\r\n    binding = True,\r\n    is_temp = 1,\r\n    pymethdef_cname = '__pyx_mdef_9ipo_8Calendar_7next',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 11858, in analyse_types: BoolBinopNode(ipo.py:351:54,\r\n    is_temp = True,\r\n    operator = 'or',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 664, in analyse_types: BoolBinopResultNode(ipo.py:351:45,\r\n    is_temp = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 462, in not_implemented: BoolBinopResultNode(ipo.py:351:45,\r\n    is_temp = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\n\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/home/misantroop/.local/lib/python3.7/site-packages/Cython/Compiler/ExprNodes.py\", line 462, in not_implemented\r\n    (self.__class__.__name__, method_name))\r\nInternalError: Internal compiler error: BoolBinopResultNode.analyse_types not implemented\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 13, in <module>\r\n    ext_modules = cythonize(\"src/*.py\", language_level=3),\r\n  File \"/home/misantroop/.local/lib/python3.7/site-packages/Cython/Build/Dependencies.py\", line 1096, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/misantroop/.local/lib/python3.7/site-packages/Cython/Build/Dependencies.py\", line 1219, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: src/ipo.py\r\n\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Use `object`. There's nothing in common with those two types at a C-level, so Cython can't do any optimisations here. For parameters, you could potentially use fused types.",
            "created_at": "2019-08-30T01:57:23Z",
            "html_url": "https://github.com/cython/cython/issues/3117#issuecomment-526425125",
            "id": 526425125,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3117",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjQyNTEyNQ==",
            "updated_at": "2019-08-30T01:57:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/526425125",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The correct type to use here would be `typing.Union[list, dict]` (though Cython wouldn't be able to do anything with it). We shouldn't crash, however. ",
            "created_at": "2019-08-30T06:10:24Z",
            "html_url": "https://github.com/cython/cython/issues/3117#issuecomment-526471440",
            "id": 526471440,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3117",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjQ3MTQ0MA==",
            "updated_at": "2019-08-30T06:10:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/526471440",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3117/comments",
    "created_at": "2019-08-30T01:26:47Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-11T16:23:28Z",
            "event": "labeled",
            "id": 3224227272,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyMjQyMjcyNzI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3224227272"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-11T16:23:28Z",
            "event": "labeled",
            "id": 3224227273,
            "label": {
                "color": "444444",
                "name": "Error Reporting"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyMjQyMjcyNzM=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3224227273"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-18T21:03:47Z",
            "event": "renamed",
            "id": 3248393616,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzI0ODM5MzYxNg==",
            "rename": {
                "from": "Type hints with 'or' statements",
                "to": "Crash on type annotations with 'or'"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/3248393616"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3117/events",
    "html_url": "https://github.com/cython/cython/issues/3117",
    "id": 487241657,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425557478,
            "name": "Error Reporting",
            "node_id": "MDU6TGFiZWw0MjU1NTc0Nzg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Error%20Reporting"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3117/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODcyNDE2NTc=",
    "number": 3117,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Crash on type annotations with 'or'",
    "updated_at": "2020-04-18T21:03:47Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3117",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/23288150?v=4",
        "events_url": "https://api.github.com/users/misantroop/events{/privacy}",
        "followers_url": "https://api.github.com/users/misantroop/followers",
        "following_url": "https://api.github.com/users/misantroop/following{/other_user}",
        "gists_url": "https://api.github.com/users/misantroop/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/misantroop",
        "id": 23288150,
        "login": "misantroop",
        "node_id": "MDQ6VXNlcjIzMjg4MTUw",
        "organizations_url": "https://api.github.com/users/misantroop/orgs",
        "received_events_url": "https://api.github.com/users/misantroop/received_events",
        "repos_url": "https://api.github.com/users/misantroop/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/misantroop/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/misantroop/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/misantroop"
    }
}