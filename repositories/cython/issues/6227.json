{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nWe've experienced an issue in production where attempting to write a `folly:IOBuf` with zero-length backing buffers is triggering a SIGSEGV. \r\n\r\nWe're traced this issue to the way Cython is executing zero-length slices on `cmemoryview`, e.g. `view[0:0]`. While this problem was trivially addressed by no-oping zero-length writes to our stream, this behavior represents a divergence from the standard Python behavior where zero-length slice access works as intended.\n\n### Code to reproduce the behaviour:\n\nmain.pyx: Create a struct that wraps a Python `memoryview` and exposes a function to write nothing to an empty slice\r\n```cython\r\nfrom cython.view cimport memoryview as cmemoryview\r\nfrom cpython.buffer cimport PyBUF_C_CONTIGUOUS\r\n\r\ncdef class MemoryViewStream:\r\n  cdef cmemoryview view\r\n\r\n  def __cinit__(self, object view):\r\n    self.view = cmemoryview(view, PyBUF_C_CONTIGUOUS)\r\n\r\n  def write_nothing(self):\r\n    self.view[0:0] = []\r\n```\r\n\r\ntest.py\r\n```python\r\nfrom main import MemoryViewStream\r\n\r\n# empty byte array of len 10\r\ndest_byte_arr = bytearray(10)\r\nmem_view = memoryview(dest_byte_arr)\r\n\r\n# create C struct to represent this stream\r\nstream = MemoryViewStream(mem_view)\r\n\r\n# write zero length bytearray to the stream\r\n# Segfaults here\r\nstream.write_nothing()\r\nprint(\"Completed successfully\")\r\n```\r\n\r\nsetup.py\r\n```python\r\nfrom setuptools import setup\r\nfrom Cython.Build import cythonize\r\n\r\nsetup(\r\n    ext_modules = cythonize(\"main.pyx\")\r\n)\r\n```\r\n\n\n### Expected behaviour\n\nWe expect `python test.py` to execute successfully and print \"Completed successfully\" — however, instead we end up with a SIGSEGV due to an invalid memory access in the C stdlib.\n\n### OS\n\nRepro'd on both Mac and CentOS\n\n### Python version\n\n3.9.6\n\n### Cython version\n\n3.0.10\n\n### Additional context\n\nStack trace on SIGSEGV indicates that C `strlen` is being invoked on a null pointer, and most likely a fix is required in `__pyx_memoryview_assign_item_from_object`\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   libsystem_platform.dylib      \t       0x184d18904 _platform_strlen + 4\r\n1   Python3                       \t       0x104c75e2c PyBytes_FromString + 24\r\n2   main.cpython-39-darwin.so     \t       0x10445a95c __pyx_memoryview_assign_item_from_object + 132 (main.c:8673)\r\n3   main.cpython-39-darwin.so     \t       0x104459e90 __pyx_memoryview_setitem_slice_assign_scalar + 172 (main.c:8149)\r\n4   main.cpython-39-darwin.so     \t       0x104464c50 __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__ + 1044 (main.c:7623) [inlined]\r\n5   main.cpython-39-darwin.so     \t       0x104464c50 __pyx_memoryview___setitem__ + 1044 (main.c:7469) [inlined]\r\n6   main.cpython-39-darwin.so     \t       0x104464c50 __pyx_mp_ass_subscript_memoryview + 1304 (main.c:18513)\r\n7   main.cpython-39-darwin.so     \t       0x10445b5c4 __Pyx_PyObject_SetSlice + 36 (main.c:22955) [inlined]\r\n8   main.cpython-39-darwin.so     \t       0x10445b5c4 __pyx_pf_4main_16MemoryViewStream_2write_nothing + 56 (main.c:17573) [inlined]\r\n9   main.cpython-39-darwin.so     \t       0x10445b5c4 __pyx_pw_4main_16MemoryViewStream_3write_nothing + 88 (main.c:17550)\r\n10  Python3                       \t       0x104d52a38 0x104c40000 + 1124920\r\n11  Python3                       \t       0x104d4fb54 _PyEval_EvalFrameDefault + 22664\r\n12  Python3                       \t       0x104d537ec 0x104c40000 + 1128428\r\n13  Python3                       \t       0x104d4a204 PyEval_EvalCode + 80\r\n14  Python3                       \t       0x104d8e2f0 0x104c40000 + 1368816\r\n15  Python3                       \t       0x104d8e4c4 0x104c40000 + 1369284\r\n16  Python3                       \t       0x104d8c5ec PyRun_SimpleFileExFlags + 820\r\n17  Python3                       \t       0x104da97cc Py_RunMain + 1604\r\n18  Python3                       \t       0x104da9c3c 0x104c40000 + 1481788\r\n19  Python3                       \t       0x104da9cdc Py_BytesMain + 40\r\n20  dyld                          \t       0x1849620e0 start + 2360",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think the problem is that the buffer format is `NULL`.\r\n\r\nIf that's something that Cython controls (e.g. if skips filling in the buffer format for empty slices) then it might be better to change that instead. Otherwise we need a NULL check as you suggest.",
            "created_at": "2024-06-04T06:39:55Z",
            "html_url": "https://github.com/cython/cython/issues/6227#issuecomment-2146727574",
            "id": 2146727574,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6227",
            "node_id": "IC_kwDOABDGAc5_9HaW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2146727574/reactions"
            },
            "updated_at": "2024-06-04T06:39:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2146727574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have a repro via unit tests here: https://github.com/michael99man/cython/tree/memoryview_zero_length_slice_fix\r\n\r\nAm currently working on a fix",
            "created_at": "2024-06-04T19:09:51Z",
            "html_url": "https://github.com/cython/cython/issues/6227#issuecomment-2148220541",
            "id": 2148220541,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6227",
            "node_id": "IC_kwDOABDGAc6ACz59",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2148220541/reactions"
            },
            "updated_at": "2024-06-04T19:09:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2148220541",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3612421?v=4",
                "events_url": "https://api.github.com/users/michael99man/events{/privacy}",
                "followers_url": "https://api.github.com/users/michael99man/followers",
                "following_url": "https://api.github.com/users/michael99man/following{/other_user}",
                "gists_url": "https://api.github.com/users/michael99man/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/michael99man",
                "id": 3612421,
                "login": "michael99man",
                "node_id": "MDQ6VXNlcjM2MTI0MjE=",
                "organizations_url": "https://api.github.com/users/michael99man/orgs",
                "received_events_url": "https://api.github.com/users/michael99man/received_events",
                "repos_url": "https://api.github.com/users/michael99man/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/michael99man/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michael99man/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/michael99man"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I think the problem is that the buffer format is `NULL`.\r\n\r\nInterestingly enough, `view.format == NULL` does not lead to a segfault when executing slice assignment. However, in this case, it was leading to a segfault because we were **incorrectly executing scalar assignment**:\r\n\r\nSpecifically, the lines below from `[MemoryView.pyx](https://github.com/cython/cython/blob/master/Cython/Utility/MemoryView.pyx#L412-L435)` show the logical issue in the fork:\r\n\r\n```\r\n  if have_slices:\r\n      obj = self.is_slice(value)\r\n\r\n      # obj is considered truthy IFF obj != None && len(obj) != 0\r\n      # this means that a zero-length memory view (src buffer) would cause us to execute scalar assignment\r\n      if obj:\r\n          self.setitem_slice_assignment(self[index], obj)\r\n      else:\r\n          self.setitem_slice_assign_scalar(self[index], value)\r\n```\r\n\r\nI think this approach is cleaner than trying to coerce scalar assignment to use a non-NULL format (e.g. ASCII), since logically we should not be executing scalar assignment in this scenario. The linked PR modifies the check to only check whether `obj != None`\r\n\r\n",
            "created_at": "2024-06-04T19:53:28Z",
            "html_url": "https://github.com/cython/cython/issues/6227#issuecomment-2148309779",
            "id": 2148309779,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6227",
            "node_id": "IC_kwDOABDGAc6ADJsT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2148309779/reactions"
            },
            "updated_at": "2024-06-04T19:54:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2148309779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3612421?v=4",
                "events_url": "https://api.github.com/users/michael99man/events{/privacy}",
                "followers_url": "https://api.github.com/users/michael99man/followers",
                "following_url": "https://api.github.com/users/michael99man/following{/other_user}",
                "gists_url": "https://api.github.com/users/michael99man/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/michael99man",
                "id": 3612421,
                "login": "michael99man",
                "node_id": "MDQ6VXNlcjM2MTI0MjE=",
                "organizations_url": "https://api.github.com/users/michael99man/orgs",
                "received_events_url": "https://api.github.com/users/michael99man/received_events",
                "repos_url": "https://api.github.com/users/michael99man/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/michael99man/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michael99man/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/michael99man"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6227/comments",
    "created_at": "2024-06-03T19:26:43Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3612421?v=4",
                "events_url": "https://api.github.com/users/michael99man/events{/privacy}",
                "followers_url": "https://api.github.com/users/michael99man/followers",
                "following_url": "https://api.github.com/users/michael99man/following{/other_user}",
                "gists_url": "https://api.github.com/users/michael99man/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/michael99man",
                "id": 3612421,
                "login": "michael99man",
                "node_id": "MDQ6VXNlcjM2MTI0MjE=",
                "organizations_url": "https://api.github.com/users/michael99man/orgs",
                "received_events_url": "https://api.github.com/users/michael99man/received_events",
                "repos_url": "https://api.github.com/users/michael99man/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/michael99man/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michael99man/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/michael99man"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-06-04T19:42:40Z",
            "event": "renamed",
            "id": 13041103095,
            "node_id": "RTE_lADOABDGAc6K_ayMzwAAAAMJT3D3",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] Segfault on zero-length slice access on cmemoryview",
                "to": "[BUG] Segfault on zero-length slice assignment on memoryview"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/13041103095"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6227/events",
    "html_url": "https://github.com/cython/cython/issues/6227",
    "id": 2331880588,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6227/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6K_ayM",
    "number": 6227,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6227/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6227/timeline",
    "title": "[BUG] Segfault on zero-length slice assignment on memoryview",
    "updated_at": "2024-06-04T19:54:36Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6227",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3612421?v=4",
        "events_url": "https://api.github.com/users/michael99man/events{/privacy}",
        "followers_url": "https://api.github.com/users/michael99man/followers",
        "following_url": "https://api.github.com/users/michael99man/following{/other_user}",
        "gists_url": "https://api.github.com/users/michael99man/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/michael99man",
        "id": 3612421,
        "login": "michael99man",
        "node_id": "MDQ6VXNlcjM2MTI0MjE=",
        "organizations_url": "https://api.github.com/users/michael99man/orgs",
        "received_events_url": "https://api.github.com/users/michael99man/received_events",
        "repos_url": "https://api.github.com/users/michael99man/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/michael99man/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/michael99man/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/michael99man"
    }
}