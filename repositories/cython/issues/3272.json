{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I want to discuss on the support for [the alias template](https://en.cppreference.com/w/cpp/language/type_alias), which was added to C++11.\r\n\r\nCurrently, the type alias (`using identifier = type_id`) is supported using the `ctypedef type_id identiffier` syntax, thanks to the semantic similarity between the two (one source I can find is subsection 2.1, proposal [n1489](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2003/n1489.pdf)).  [C++ attributes](https://en.cppreference.com/w/cpp/language/attributes) is not supported but it doesn't seem to have any meaning in Cython context anyway.\r\n\r\nWhat is missing is an equivalent declaration for C++11's\r\n```cpp\r\ntemplate <template_parameter_list>\r\nusing identifier = type_id; \r\n```\r\nwhich I propose to be `ctypedef type_id = identifier[template_parameter_list]` for consistency with the current C++ class and function template which are currently supported by Cython at the moment.  For example, in `<type_traits>`,\r\n```cpp\r\ntemplate <class T>\r\nusing remove_reference_t = typename remove_reference<T>::type;\r\n```\r\ncould be written in Cython as `ctypedef remove_reference[T].type remove_reference_t[T]`.\r\n\r\nI am unsure how this can be achieved.\r\n\r\nThis issue might be a part of #2130.\r\n\r\nEdit: for extern declaration, would the following be sufficient?\r\n\r\n```cython\r\ncdef extern from '<type_traits>' namespace 'std' nogil:\r\n    cdef cppclass remove_reference_t[T]:\r\n        pass\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "This seems to be needed for more modern C++ code.  It seems that a new form of node that defers evaluation would be needed (as the exact value for this is unknown at the definition of the template class but known at its instantiation).  Rather then trying to replicate the entirety of C++ concepts and templates into cython, it would be better to have an \"escape hatch\" form of using that defines only that there is an identifier but not attempt to check it...\r\n\r\nas an example, a `cusing` is a `using iterator_type = ` which results in a type but who's understanding is ignored and placed out for the C++ compiler to validate.  This allows for the use of complex types without having to fully specify their nature.\r\n\r\nThat said, restriction of a typename to a \"interface\" or series of expected behaviors (such as inheriting a class and having methods, or being a pointer) would probably be enough to make the type useful in cython context\r\n\r\n```\r\n    cdef cppclass reverse_iterator[Iter]:\r\n        cusing iterator_type\r\n```\r\n",
            "created_at": "2023-03-09T03:50:46Z",
            "html_url": "https://github.com/cython/cython/issues/3272#issuecomment-1461229420",
            "id": 1461229420,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3272",
            "node_id": "IC_kwDOABDGAc5XGJds",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1461229420/reactions"
            },
            "updated_at": "2023-03-09T03:50:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1461229420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/125403?v=4",
                "events_url": "https://api.github.com/users/rickmark/events{/privacy}",
                "followers_url": "https://api.github.com/users/rickmark/followers",
                "following_url": "https://api.github.com/users/rickmark/following{/other_user}",
                "gists_url": "https://api.github.com/users/rickmark/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rickmark",
                "id": 125403,
                "login": "rickmark",
                "node_id": "MDQ6VXNlcjEyNTQwMw==",
                "organizations_url": "https://api.github.com/users/rickmark/orgs",
                "received_events_url": "https://api.github.com/users/rickmark/received_events",
                "repos_url": "https://api.github.com/users/rickmark/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rickmark/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rickmark/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rickmark"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3272/comments",
    "created_at": "2019-12-16T11:36:34Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3272/events",
    "html_url": "https://github.com/cython/cython/issues/3272",
    "id": 538357457,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3272/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MzgzNTc0NTc=",
    "number": 3272,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/3272/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/3272/timeline",
    "title": "Support for C++11 alias template",
    "updated_at": "2023-03-09T03:50:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3272",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13689192?v=4",
        "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
        "followers_url": "https://api.github.com/users/McSinyx/followers",
        "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
        "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/McSinyx",
        "id": 13689192,
        "login": "McSinyx",
        "node_id": "MDQ6VXNlcjEzNjg5MTky",
        "organizations_url": "https://api.github.com/users/McSinyx/orgs",
        "received_events_url": "https://api.github.com/users/McSinyx/received_events",
        "repos_url": "https://api.github.com/users/McSinyx/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/McSinyx"
    }
}