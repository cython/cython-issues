{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Hello up there. I'm considering to use Cython instead of Python for all files in my projects. Even though Cython parses and compiles plain .py files just fine, and with [fast C compiler](https://bellard.org/tcc/) the time of  `.c -> .so` phase is not an issue, I've noticed that the time for `.pyx -> .c` phase is _much slower_ compared to C compiler, and also that Cython3.0 brings in **3x** slowdown in compilation speed compared to 0.29x.\r\nPlease find details below:\r\n\r\nLet's consider the following minimal module:\r\n\r\n```pyx\r\n# cython: language_level=2\r\ncdef int myfunc(int x):\r\n    y = x\r\n    return y\r\n```\r\n\r\nOn my computer the time it takes to `.pyx -> .c` it (best of 5) with cython 0.29.19 is **0.23s**, while with cython 3.0a5 it takes **0.63s** for the same operation. With 3.0a5 generated .c file has 3031 lines and with tcc for `.c -> .so` phase it takes only **0.02s** (i.e **_30_ times faster compared to cythonning**) to compile and link it into python module:\r\n\r\n```\r\n$ cython --version\r\nCython version 3.0a5\r\n```\r\n```\r\n$ time cython x.pyx \r\n\r\nreal    0m0,639s\r\nuser    0m0,578s\r\nsys     0m0,059s\r\n```\r\n```\r\n$ wc -l x.c\r\n3031 x.c\r\n```\r\n```\r\n$ head -1 x.c\r\n/* Generated by Cython 3.0a5 */\r\n```\r\n```\r\n$ time tcc -pthread -DNDEBUG -fwrapv -Wall -Wstrict-prototypes -fno-strict-aliasing \\\r\n           -Wdate-time -fPIC -I/usr/include/python2.7  -shared x.c -o x.so\r\n\r\nreal    0m0,020s\r\nuser    0m0,012s\r\nsys     0m0,008s\r\n```\r\n\r\nI've looked around a bit and checked all Cython releases from 2007 regarding compilation time of this simple module and it shows steady increase for Cython release to release with 3x jump at tail for upcoming 3.0 and overall 30x slowdown compared to the point when Cython was originlly forked from Pyrex:\r\n\r\n![Cython2007-2020](https://lab.nexedi.com/kirr/misc/raw/5561198/pyx/cython2007-2020.png)\r\n\r\n<details>\r\n <summary>Compilation time by release</summary>\r\n\r\n| version | date | t(s,5-best) | wc-l | \r\n| --- | --- | --- | --- |\r\n| 0.9.6.5       | 2007.08               | **0.02** |                 213 |\r\n| 0.9.6.10      | 2007.12               | 0.03 |                 472 |\r\n| 0.9.6.14      | 2008.05               | 0.04 |                 482 |\r\n| 0.9.8.1.1     | 2008.08               | 0.06 |                 639 |\r\n| 0.10.3        | 2008.12               | 0.06 |                 676 |\r\n| 0.11.3        | 2009.09               | 0.06 |                1111 |\r\n| 0.12.1        | 2010.02               | 0.07 |                1180 |\r\n| 0.13          | 2010.08               | 0.08 |                1117 |\r\n| 0.14.1        | 2011.02               | 0.08 |                1153 |\r\n| 0.15.1        | 2011.09               | 0.12 |                1207 |\r\n| 0.16          | 2012.04               | 0.12 |                1369 |\r\n| 0.17.4        | 2013.01               | 0.12 |                1361 |\r\n| 0.18          | 2013.01               | 0.12 |                1348 |\r\n| 0.19.2        | 2013.10               | 0.13 |                1731 |\r\n| 0.20.2        | 2014.06               | 0.13 |                1470 |\r\n| 0.21.2        | 2014.12               | 0.13 |                1329 |\r\n| 0.22.1        | 2015.06               | 0.13 |                1376 |\r\n| 0.23.5        | 2016.03               | 0.19 |                1588 |\r\n| 0.24.1        | 2016.07               | 0.20 |                1638 |\r\n| 0.25.2        | 2016.12               | 0.21 |                1797 |\r\n| 0.26.1        | 2017.08               | 0.21 |                1916 |\r\n| 0.27.3        | 2017.11               | 0.22 |                2204 |\r\n| 0.28.6        | 2018.11               | 0.22 |                2382 |\r\n| 0.29.12       | 2019.07               | 0.23 |                2512 |\r\n| 0.29.19       | 2020.05               | 0.23 |                2518 |\r\n| 3.0a1         | 2020.04               |**0.63** |                2948 |\r\n| 3.0a5         | 2020.05               |**0.63** |                3031 |\r\n\r\n</details>\r\n\r\nIt would be good to fix that 3x slowdown regression in upcoming Cython3.0. It would be also good to improve Cython compilation time further so that it goes back to be comparable to the time it takes to compile and link `.c -> .so`.\r\n\r\nFor the record, here is what I currently [get](https://lab.nexedi.com/kirr/cython/commit/562befd3) for [pystone.py](https://github.com/python/cpython/blob/v2.7.18-0-g8d21aa21f2c/Lib/test/pystone.py) translated by Cython and different compilers:\r\n\r\nwc -l pystone.py -> 270 lines\r\nwc -l pystone.c created by cython pystone.py -> 11301 lines\r\n\r\nbenchmarks for compilers (*)\r\n\r\n```\r\nname                 op/s\r\ngcccompile           0.53 ± 0%\r\ngcclink              0.02 ± 0%\r\ngcccompile+link      0.55 ± 0%\r\ngcccompile+linkO2    2.29 ± 0%\r\nclangcompile         0.34 ± 0%\r\nclanglink            0.03 ± 0%\r\nclangcompile+link    0.36 ± 1%\r\nclangcompile+linkO2  2.19 ± 1%\r\ntcccompile           0.03 ± 0%\r\ntcclink              0.00 ± 0%\r\ntcccompile+link      0.03 ± 4%\r\n```\r\n\r\n- tcc is 17.5x faster than \"gcc -O0\" and 12x faster than \"clang -O0\";\r\n- \"gcc -O2\" is 4x slower than \"gcc -O0\";\r\n- \"clang -O2\" is 6x slower than \"clang -O0\".\r\n\r\nBenchmarks for running pystone.py via python interpretation, and via Cython + compilation:\r\n\r\n```\r\nname                 pystone/s\r\npypystone            231k ± 1%\r\ngccpystone           234k ± 2%\r\ngccO2pystone         441k ± 2%\r\nclangpystone         240k ± 2%\r\nclangO2pystone       437k ± 1%\r\ntccpystone           251k ± 6%\r\n```\r\n\r\n- gcc/clang/tcc compiled version run a bit faster than interpreted version;\r\n- tcc compiled version runs a bit faster than \"gcc -O0\" and \"clang -O0\" ones;\r\n- \"gcc -O2\" and \"clang -O2\" bring ~ 2x speedup.\r\n\r\nFor [pystone.pyx](https://lab.nexedi.com/kirr/cython/blob/74daf44d6/t/compilebench/pystone_pyx.pyx) (original pystone.py with added type annotations), even with tcc, I [get](https://lab.nexedi.com/kirr/cython/commit/74daf44d) 8x speedup, which shows that TinyCC could be useful to speedup things while preserving fast edit-try cycle and Python interactivity **_if_** Cython goes back to be fast again. In that case it probably makes sense to use TinyCC for everything besides files with performance bottlenecks. And for performance bottlenecks, we could have a directive in the build system - similar to `# cython: ...` - to use `gcc -O2` instead of `tcc` for that particular file only, because there runtime speed matters very much.\r\n\r\nThanks beforehand,\r\nKirill\r\n\r\n----\r\n\r\n(*) all benchmarks were done with caring about [measurement stability](http://navytux.spb.ru/~kirr/neo.html#measurements-stability).\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This doesn't seem right to me. Using your \"x.pyx\" I get basically identical results for 0.29.19 vs 3.0a5 (checked out from git tags).\r\n\r\nWhat I do see is a 3x speed-up for \"Cython compiled with Cython\" vs \"Cython run from py source\". I'd suggest that your dramatic regression is just comparing compiled and un-compiled Cython (maybe this is a packaging error?).\r\n\r\nThe steady growth sounds more plausible but may just be an inevitable consequence of trying to do more.",
            "created_at": "2020-05-28T17:15:14Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635482168",
            "id": 635482168,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTQ4MjE2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635482168/reactions"
            },
            "updated_at": "2020-05-28T17:15:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635482168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@da-woods, thanks for feedback. I was previously checking by installing releases from pypi. This time, I've also rechecked from Cython git checkout on 0.29.19 vs 3.0a5 tags in a fresh virtualenv with making sure that Cython modules themselves are actually compiled. Maybe I'm doing something wrong, but the result stays close to what I originlly posted: 0.29.19 -> 0.29s, 3.0a5 -> 0.69s. Full log of verification is provided below.\r\n\r\n<details>\r\n<summary>Full log of verification 0.29.19 vs 3.0a5 from Cython.git checkout</summary>\r\n\r\n```\r\nkirr@deco:~/tmp/trashme/cyspeed$ git clone https://github.com/cython/cython.git\r\nКлонирование в «cython»…\r\nremote: Enumerating objects: 56, done.\r\nremote: Counting objects: 100% (56/56), done.\r\nremote: Compressing objects: 100% (38/38), done.\r\nremote: Total 94734 (delta 30), reused 26 (delta 18), pack-reused 94678\r\nПолучение объектов: 100% (94734/94734), 57.37 MiB | 14.81 MiB/s, готово.\r\nОпределение изменений: 100% (66922/66922), готово.\r\nkirr@deco:~/tmp/trashme/cyspeed$ virtualenv 1.venv\r\nRunning virtualenv with interpreter /usr/bin/python2\r\nNew python executable in /home/kirr/tmp/trashme/cyspeed/1.venv/bin/python2\r\nAlso creating executable in /home/kirr/tmp/trashme/cyspeed/1.venv/bin/python\r\nInstalling setuptools, pkg_resources, pip, wheel...done.\r\nkirr@deco:~/tmp/trashme/cyspeed$ . 1.venv/bin/activate\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed$ cd cython/\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ git checkout 0.29.19\r\nПримечание: переход на «0.29.19».\r\n\r\nВы сейчас в состоянии «отделённого HEAD». Вы можете осмотреться, сделать\r\nэкспериментальные изменения и закоммитить их, также вы можете отменить\r\nизменения любых коммитов в этом состоянии не затрагивая любые ветки и\r\nне переходя на них.\r\n\r\nЕсли вы хотите создать новую ветку и сохранить свои коммиты, то вы\r\nможете сделать это (сейчас или позже) вызвав команду checkout снова,\r\nно с параметром -b. Например:\r\n\r\n  git checkout -b <имя-новой-ветки>\r\n\r\nHEAD сейчас на 2c3a8c12b Prepare release of 0.29.19.\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ pip install -e .\r\nDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\r\nObtaining file:///home/kirr/tmp/trashme/cyspeed/cython\r\nInstalling collected packages: Cython\r\n  Running setup.py develop for Cython\r\nSuccessfully installed Cython\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ which cython\r\n/home/kirr/tmp/trashme/cyspeed/1.venv/bin/cython\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ cython --version\r\nCython version 0.29.19\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ cat >x.pyx\r\n# cython: language_level=2\r\ncdef int myfunc(int x):\r\n    y = x\r\n    return y\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx\r\n\r\nreal    0m0,290s\r\nuser    0m0,269s\r\nsys     0m0,020s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx\r\n\r\nreal    0m0,287s\r\nuser    0m0,259s\r\nsys     0m0,028s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx\r\n\r\nreal    0m0,287s\r\nuser    0m0,243s\r\nsys     0m0,044s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx\r\n\r\nreal    0m0,291s\r\nuser    0m0,276s\r\nsys     0m0,014s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx\r\n\r\nreal    0m0,287s\r\nuser    0m0,259s\r\nsys     0m0,028s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ git clean -fdX\r\nУдаление Cython.egg-info/\r\nУдаление Cython/Build/Dependencies.pyc\r\nУдаление Cython/Build/Distutils.pyc\r\nУдаление Cython/Build/__init__.pyc\r\nУдаление Cython/CodeWriter.pyc\r\nУдаление Cython/Compiler/AnalysedTreeTransforms.pyc\r\nУдаление Cython/Compiler/Annotate.pyc\r\nУдаление Cython/Compiler/AutoDocTransforms.pyc\r\nУдаление Cython/Compiler/Buffer.pyc\r\nУдаление Cython/Compiler/Builtin.pyc\r\nУдаление Cython/Compiler/CmdLine.pyc\r\nУдаление Cython/Compiler/Code.pyc\r\nУдаление Cython/Compiler/CodeGeneration.pyc\r\nУдаление Cython/Compiler/CythonScope.pyc\r\nУдаление Cython/Compiler/DebugFlags.pyc\r\nУдаление Cython/Compiler/Errors.pyc\r\nУдаление Cython/Compiler/ExprNodes.pyc\r\nУдаление Cython/Compiler/FlowControl.c\r\nУдаление Cython/Compiler/FlowControl.pyc\r\nУдаление Cython/Compiler/FlowControl.so\r\nУдаление Cython/Compiler/FusedNode.c\r\nУдаление Cython/Compiler/FusedNode.so\r\nУдаление Cython/Compiler/Future.pyc\r\nУдаление Cython/Compiler/Interpreter.pyc\r\nУдаление Cython/Compiler/Lexicon.pyc\r\nУдаление Cython/Compiler/Main.pyc\r\nУдаление Cython/Compiler/MemoryView.pyc\r\nУдаление Cython/Compiler/ModuleNode.pyc\r\nУдаление Cython/Compiler/Naming.pyc\r\nУдаление Cython/Compiler/Nodes.pyc\r\nУдаление Cython/Compiler/Optimize.pyc\r\nУдаление Cython/Compiler/Options.pyc\r\nУдаление Cython/Compiler/ParseTreeTransforms.pyc\r\nУдаление Cython/Compiler/Parsing.pyc\r\nУдаление Cython/Compiler/Pipeline.pyc\r\nУдаление Cython/Compiler/PyrexTypes.pyc\r\nУдаление Cython/Compiler/Pythran.pyc\r\nУдаление Cython/Compiler/Scanning.c\r\nУдаление Cython/Compiler/Scanning.pyc\r\nУдаление Cython/Compiler/Scanning.so\r\nУдаление Cython/Compiler/StringEncoding.pyc\r\nУдаление Cython/Compiler/Symtab.pyc\r\nУдаление Cython/Compiler/TreeFragment.pyc\r\nУдаление Cython/Compiler/TypeInference.pyc\r\nУдаление Cython/Compiler/TypeSlots.pyc\r\nУдаление Cython/Compiler/UtilNodes.pyc\r\nУдаление Cython/Compiler/UtilityCode.pyc\r\nУдаление Cython/Compiler/Version.pyc\r\nУдаление Cython/Compiler/Visitor.c\r\nУдаление Cython/Compiler/Visitor.pyc\r\nУдаление Cython/Compiler/Visitor.so\r\nУдаление Cython/Compiler/__init__.pyc\r\nУдаление Cython/Debugging.pyc\r\nУдаление Cython/Distutils/__init__.pyc\r\nУдаление Cython/Distutils/build_ext.pyc\r\nУдаление Cython/Distutils/extension.pyc\r\nУдаление Cython/Distutils/old_build_ext.pyc\r\nУдаление Cython/Plex/Actions.c\r\nУдаление Cython/Plex/Actions.pyc\r\nУдаление Cython/Plex/Actions.so\r\nУдаление Cython/Plex/DFA.pyc\r\nУдаление Cython/Plex/Errors.pyc\r\nУдаление Cython/Plex/Lexicons.pyc\r\nУдаление Cython/Plex/Machines.pyc\r\nУдаление Cython/Plex/Regexps.pyc\r\nУдаление Cython/Plex/Scanners.c\r\nУдаление Cython/Plex/Scanners.pyc\r\nУдаление Cython/Plex/Scanners.so\r\nУдаление Cython/Plex/Transitions.pyc\r\nУдаление Cython/Plex/__init__.pyc\r\nУдаление Cython/Runtime/refnanny.c\r\nУдаление Cython/Runtime/refnanny.so\r\nУдаление Cython/Shadow.pyc\r\nУдаление Cython/StringIOTree.pyc\r\nУдаление Cython/Tempita/__init__.pyc\r\nУдаление Cython/Tempita/_looper.pyc\r\nУдаление Cython/Tempita/_tempita.c\r\nУдаление Cython/Tempita/_tempita.pyc\r\nУдаление Cython/Tempita/_tempita.so\r\nУдаление Cython/Tempita/compat3.pyc\r\nУдаление Cython/Utility/__init__.pyc\r\nУдаление Cython/Utils.pyc\r\nУдаление Cython/__init__.pyc\r\nУдаление build/\r\nУдаление cython.pyc\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ cython\r\nTraceback (most recent call last):\r\n  File \"/home/kirr/tmp/trashme/cyspeed/1.venv/bin/cython\", line 6, in <module>\r\n    from pkg_resources import load_entry_point\r\n  File \"/home/kirr/tmp/trashme/cyspeed/1.venv/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3191, in <module>\r\n    @_call_aside\r\n  File \"/home/kirr/tmp/trashme/cyspeed/1.venv/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3175, in _call_aside\r\n    f(*args, **kwargs)\r\n  File \"/home/kirr/tmp/trashme/cyspeed/1.venv/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3204, in _initialize_master_working_set\r\n    working_set = WorkingSet._build_master()\r\n  File \"/home/kirr/tmp/trashme/cyspeed/1.venv/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 583, in _build_master\r\n    ws.require(__requires__)\r\n  File \"/home/kirr/tmp/trashme/cyspeed/1.venv/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 900, in require\r\n    needed = self.resolve(parse_requirements(requirements))\r\n  File \"/home/kirr/tmp/trashme/cyspeed/1.venv/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 786, in resolve\r\n    raise DistributionNotFound(req, requirers)\r\npkg_resources.DistributionNotFound: The 'Cython' distribution was not found and is required by the application\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ git checkout 3.0a\r\n3.0a1   3.0a2   3.0a3   3.0a4   3.0a5   \r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ git checkout 3.0a5 \r\nПредыдущая позиция HEAD была 2c3a8c12b Prepare release of 0.29.19.\r\nHEAD сейчас на 2ffcb6a0a Merge branch '0.29.x'\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ pip install -e .\r\nDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\r\nObtaining file:///home/kirr/tmp/trashme/cyspeed/cython\r\nInstalling collected packages: Cython\r\n  Running setup.py develop for Cython\r\nSuccessfully installed Cython\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ which cython\r\n/home/kirr/tmp/trashme/cyspeed/1.venv/bin/cython\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ cython --version\r\nCython version 3.0a5\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx \r\n\r\nreal    0m0,698s\r\nuser    0m0,646s\r\nsys     0m0,052s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx \r\n\r\nreal    0m0,698s\r\nuser    0m0,637s\r\nsys     0m0,060s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx \r\n\r\nreal    0m0,692s\r\nuser    0m0,624s\r\nsys     0m0,068s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx \r\n\r\nreal    0m0,696s\r\nuser    0m0,657s\r\nsys     0m0,039s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ time cython x.pyx \r\n\r\nreal    0m0,697s\r\nuser    0m0,638s\r\nsys     0m0,059s\r\n(1.venv) kirr@deco:~/tmp/trashme/cyspeed/cython$ python\r\nPython 2.7.16 (default, Oct 10 2019, 22:02:15) \r\n[GCC 8.3.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from Cython.Compiler import Visitor\r\n>>> Visitor.__file__\r\n'Cython/Compiler/Visitor.so'\r\n>>> \r\n```\r\n\r\n</details>\r\n\r\nKirill",
            "created_at": "2020-05-28T18:45:50Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635528574",
            "id": 635528574,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTUyODU3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635528574/reactions"
            },
            "updated_at": "2020-05-28T18:45:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635528574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
                "events_url": "https://api.github.com/users/navytux/events{/privacy}",
                "followers_url": "https://api.github.com/users/navytux/followers",
                "following_url": "https://api.github.com/users/navytux/following{/other_user}",
                "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/navytux",
                "id": 1794248,
                "login": "navytux",
                "node_id": "MDQ6VXNlcjE3OTQyNDg=",
                "organizations_url": "https://api.github.com/users/navytux/orgs",
                "received_events_url": "https://api.github.com/users/navytux/received_events",
                "repos_url": "https://api.github.com/users/navytux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/navytux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Actually, yes - I can reproduce it now. It does seem suspicious that the timing is so close to the non-compiled performance though.",
            "created_at": "2020-05-28T20:48:41Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635599626",
            "id": 635599626,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTU5OTYyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635599626/reactions"
            },
            "updated_at": "2020-05-28T20:48:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635599626",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Could you do some profiling to see where the additional time is spent?\n\nAlso, please use a realistic input file for the benchmark. Preferably also different ones. It doesn't help to optimise for code that we will never encounter in practice.\n\nI just tried it with lxml's ~20k lines main Cython module and it gives me ~8 seconds for Cython 0.29.19 and ~9 seconds for Cython 3.0a5. That's pretty close, given that 3.0 does a whole lot of things better. But improvements are always welcome.\n",
            "created_at": "2020-05-28T20:54:44Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635602431",
            "id": 635602431,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTYwMjQzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635602431/reactions"
            },
            "updated_at": "2020-05-28T20:54:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635602431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "```\r\n     7012    0.228    0.000    0.329    0.000 Machines.py:162(add_transitions)\r\n   896404    0.101    0.000    0.101    0.000 {built-in method builtins.chr}\r\n```\r\n\r\nSorted by \"tottime\", Parser/Machines.py `add_transitions\" is right at the top of the list for Cython 3.0a, followed by builtins.chr (which I think is mostly used in the lexer) It doesn't appear anywhere notable in Cython 0.29.x.  Similarly if you look sort by calls you see builtins.chr right at the top for Cython 3.0 but nowhere for Cython 0.29.19. (It's called 6066 times in 0.29.19)\r\n\r\nIn 0.29.19 add_transitions is called 946 times, while in 3.0a5 it's called 7012 times.\r\n\r\n(This is all for the slightly artificial example).\r\n\r\n----------------------------\r\n\r\nTentatively, I think this might be because _someone_ dumped a whole load of unicode characters in Lexicon.py, and this makes it a lot slower to build the lexer?\r\n\r\nAdding Plex/Machines.py to the list of compiled modules recovers a bit of time (although obviously it isn't typed, so the benefit is limited).",
            "created_at": "2020-05-28T21:45:06Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635625046",
            "id": 635625046,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTYyNTA0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635625046/reactions"
            },
            "updated_at": "2020-05-28T21:59:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635625046",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, interesting. Thanks for the investigations.\n\nThe lexicon used to be pickled in Pyrex, which turned out to be a version specific annoyance with very little benefit at the time, so we removed that years ago. Maybe the complexity of today's scanner is a reason to reconsider that decision? We could make it a part of the build to produce that pickle, so that it gets packaged in the binary wheels.\n",
            "created_at": "2020-05-29T04:08:11Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635746238",
            "id": 635746238,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTc0NjIzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635746238/reactions"
            },
            "updated_at": "2020-05-29T04:08:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635746238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/cython/cython/pull/3649 helps but definitely doesn't get back to where it was (just by compiling and adding a little bit of typing to the slow bit).",
            "created_at": "2020-05-29T06:38:02Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635789946",
            "id": 635789946,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTc4OTk0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635789946/reactions"
            },
            "updated_at": "2020-05-29T06:38:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635789946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@da-woods, @scoder, thanks for confirming and trying to get this regression fixed.\r\n\r\nI, of course, noticed the slowdown on real code - for example for pygolang the time for cythonize part (`.pyx -> .c`) is 5.4s (0.29.19) vs 6.8s (3.05a), but the issue shows much more visibly on input that does not have type annotations: for example for pystone.py it is 0.49s (0.29.19) vs 0.96s (3.0a) i.e. a 2x difference. Feeding untyped input **_is exactly the situation when one starts to convert large existing codebase like ERP5 to Cython_**.\r\n\r\nIn addition to what was already noticed, for me it looks like that it would be good to try to have logic to skip doing unneeded work inside Cython compiler.\r\n\r\nThanks again for feedback and for caring about this issue,\r\nKirill\r\n",
            "created_at": "2020-05-29T07:46:01Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635818019",
            "id": 635818019,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTgxODAxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635818019/reactions"
            },
            "updated_at": "2020-05-29T07:46:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635818019",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
                "events_url": "https://api.github.com/users/navytux/events{/privacy}",
                "followers_url": "https://api.github.com/users/navytux/followers",
                "following_url": "https://api.github.com/users/navytux/following{/other_user}",
                "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/navytux",
                "id": 1794248,
                "login": "navytux",
                "node_id": "MDQ6VXNlcjE3OTQyNDg=",
                "organizations_url": "https://api.github.com/users/navytux/orgs",
                "received_events_url": "https://api.github.com/users/navytux/received_events",
                "repos_url": "https://api.github.com/users/navytux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/navytux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I tried pickling the Lexicon, but it turns out that a) the size of the pickle is ~7MB, still ~2MB when gzip compressed, and b) loading the compressed pickle takes just as long as building the lexicon from scratch, so there is nothing to win here. Loading the uncompressed pickle is about 10% faster, but that would still add those compressed 2MB to the wheels. I don't think that's a good idea.\r\n\r\nLet's see if we can make `Machines.py` faster then.",
            "created_at": "2020-05-29T10:12:50Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635892982",
            "id": 635892982,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTg5Mjk4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635892982/reactions"
            },
            "updated_at": "2020-05-29T10:12:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635892982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "447445a should reduce the overhead of the unicode identifiers and makes a `cythonize.py` run of the artificial example ~10% faster for me. Compiling `lxml.etree` is also ~5% faster. Not bad. The compiled `Machines.so` is ~190KB and ~72KB compressed. That's much better than 7/2MB, for about the same win.",
            "created_at": "2020-05-29T11:34:10Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635924260",
            "id": 635924260,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTkyNDI2MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635924260/reactions"
            },
            "updated_at": "2020-05-29T11:34:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635924260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The other thing that might be worthwhile is to be able to (lazily) generate unicode/ascii versions of the lexer. Then each file being compiled could be tested to see if it contains any non-ascii characters and if not then the ascii version of the lexer is used instead.\r\n\r\nObviously that adds a bit of complication, and makes compiling a mixture of ascii/non-ascii files marginally worse. But it looks like supporting unicode characters has a surprisingly big cost that probably isnt used most of the time.\r\n\r\nI'll have a go at some point. Maybe.\r\n\r\n--------------------------\r\n\r\n__Edit:__ This doesn't look easy without reading the entire source file first, which it looks like we try quite hard not to do.",
            "created_at": "2020-05-29T11:49:09Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-635929517",
            "id": 635929517,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTkyOTUxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/635929517/reactions"
            },
            "updated_at": "2020-05-30T11:27:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635929517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (lazily) generate unicode/ascii versions of the lexer\r\n\r\nThat sounds like a lot of effort and complexity, for a rare benefit. Most people don't care about 300 msecs in the startup time of Cython when their C compiler (which is usually not tcc) takes minutes to compile and optimise the generated code. As long as Cython's runtime is not a major portion for the average production build of most packages out there, we should prefer maintenance over tuning.\r\n\r\nJust for comparison, according to the test logs on travis, `gcc -O0` (i.e. with _all_ optimisations turned off, which usually eat most of the compile time) currently takes about 40 minutes to compile the test suite (1036 C tests) and Cython translates the 1220 tests (including error tests etc.) in 12 minutes. Users will have to wait 4x longer on gcc than on Cython, even just for a debug build. And most users will want their production compiler also for debug builds and not switch to `tcc`, in order to avoid chasing ghost bugs.",
            "created_at": "2020-06-04T10:05:24Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-638753159",
            "id": 638753159,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzODc1MzE1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/638753159/reactions"
            },
            "updated_at": "2020-06-04T10:05:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/638753159",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Profiling shows that at least for not so short pieces of code, the translation time is dominated by the transform runs over the AST. I've considered merging some of the transform classes to reduce the overall traversal time (even doing this automatically by introspection), but it's actually not so easy since some of them logically depend on each other and others have overlapping dispatch methods (e.g. `visit_FuncDefNode` versus `visit_DefNode`) that cannot easily be combined into one. But basically, the more transforms we have that independently traverse the tree, the more time is spent in traversing the tree. Many transforms are rather selective and only dispatch on a few tree node types, so the repeated traversals to search those nodes become costly in comparison.",
            "created_at": "2020-06-10T06:51:12Z",
            "html_url": "https://github.com/cython/cython/issues/3646#issuecomment-641768006",
            "id": 641768006,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3646",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTc2ODAwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/641768006/reactions"
            },
            "updated_at": "2020-06-10T06:51:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/641768006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3646/comments",
    "created_at": "2020-05-28T15:53:04Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-28T18:45:50Z",
            "event": "mentioned",
            "id": 3384157327,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzM4NDE1NzMyNw==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3384157327"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-28T18:45:50Z",
            "event": "subscribed",
            "id": 3384157329,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzODQxNTczMjk=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3384157329"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-29T07:46:01Z",
            "event": "mentioned",
            "id": 3386032818,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzM4NjAzMjgxOA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3386032818"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-29T07:46:01Z",
            "event": "subscribed",
            "id": 3386032822,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzODYwMzI4MjI=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3386032822"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-29T07:46:01Z",
            "event": "mentioned",
            "id": 3386032824,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzM4NjAzMjgyNA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3386032824"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-05-29T07:46:01Z",
            "event": "subscribed",
            "id": 3386032826,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzODYwMzI4MjY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3386032826"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "447445a3f4c651c2881bc5b50b8d3a1b3fc6b7a6",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/447445a3f4c651c2881bc5b50b8d3a1b3fc6b7a6",
            "created_at": "2020-05-29T11:04:10Z",
            "event": "referenced",
            "id": 3386708453,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzODY3MDg0NTM=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3386708453"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3646/events",
    "html_url": "https://github.com/cython/cython/issues/3646",
    "id": 626620989,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3646/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2MjY2MjA5ODk=",
    "number": 3646,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/3646/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/3646/timeline",
    "title": "cython3.0: 3x compile-time regression compared to 0.29  ; steady growth of compilation time from release to release",
    "updated_at": "2022-12-22T07:33:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3646",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
        "events_url": "https://api.github.com/users/navytux/events{/privacy}",
        "followers_url": "https://api.github.com/users/navytux/followers",
        "following_url": "https://api.github.com/users/navytux/following{/other_user}",
        "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/navytux",
        "id": 1794248,
        "login": "navytux",
        "node_id": "MDQ6VXNlcjE3OTQyNDg=",
        "organizations_url": "https://api.github.com/users/navytux/orgs",
        "received_events_url": "https://api.github.com/users/navytux/received_events",
        "repos_url": "https://api.github.com/users/navytux/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/navytux"
    }
}