{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "If I have a C++ API such as the following:\r\n```cython\r\ncdef extern from 'arrow/util/compression.h' namespace 'arrow' nogil:\r\n    cdef cppclass CCodec\" arrow::util::Codec\":\r\n        @staticmethod\r\n        CResult[unique_ptr[CCodec]] Create(CompressionType codec)\r\n\r\ncdef extern from \"arrow/result.h\" namespace \"arrow\" nogil:\r\n    cdef cppclass CResult \"arrow::Result\"[T]:\r\n        pass\r\n\r\ncdef extern from \"arrow/python/common.h\" namespace \"arrow::py\" nogil:\r\n    T GetResultValue[T](CResult[T]) except *\r\n```\r\n\r\nThen the following Cython code:\r\n```cython\r\n    cdef:\r\n        CompressionType compression_type = ...\r\n        unique_ptr[CCodec] c_codec\r\n    c_codec = GetResultValue(CCodec.Create(compression_type))\r\n```\r\n\r\ncreates this C++ code:\r\n```c++\r\n  __pyx_t_6 = arrow::py::GetResultValue<std::unique_ptr< arrow::util::Codec> >( arrow::util::Codec::Create(__pyx_v_compression_type)); if (unlikely(PyErr_Occurred())) __PYX_ERR(6, 1203, __pyx_L1_error)\r\n  __pyx_v_codec = __pyx_t_6;\r\n```\r\n\r\nwhich fails compiling because it tries to copy a `unique_ptr`.\r\nCython should instead move the temporary:\r\n```c++\r\n  __pyx_t_6 = arrow::py::GetResultValue<std::unique_ptr< arrow::util::Codec> >( arrow::util::Codec::Create(__pyx_v_compression_type)); if (unlikely(PyErr_Occurred())) __PYX_ERR(6, 1203, __pyx_L1_error)\r\n  __pyx_v_codec = std::move(__pyx_t_6);\r\n```\r\n\r\n(I can add the `move()` call explicitly in the Cython source, but it's a bit surprising, and also it's also inconvenient because of https://github.com/cython/cython/issues/2169)",
    "closed_at": "2020-04-21T04:29:08Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I believe this is a bug in your code: `except *` means \"can raise a __Python__ exception with any return value\". Since you wouldn't expect `__pyx_v_codec` to be assigned if the function raises a Python exception then the code generated is correct.\r\n\r\nYou want `except +` which means \"can raise a C++ exception\" - https://cython.readthedocs.io/en/latest/src/userguide/wrapping_CPlusPlus.html#exceptions",
            "created_at": "2019-11-28T19:35:15Z",
            "html_url": "https://github.com/cython/cython/issues/3253#issuecomment-559590317",
            "id": 559590317,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3253",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTU5MDMxNw==",
            "updated_at": "2019-11-28T19:35:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/559590317",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> You want except + which means \"can raise a C++ exception\" \r\n\r\nNo, I do mean a Python exception.\r\n\r\n> Since you wouldn't expect __pyx_v_codec to be assigned if the function raises a Python exception then the code generated is correct.\r\n\r\nI don't see how that relates. Even if it's not assigned to, then you still can `std::move(it)`.\r\n\r\nMoreover, in the case where the object is copyable, the copying may be expensive, while moving is cheap, so moving is better in every case.",
            "created_at": "2019-11-28T21:17:01Z",
            "html_url": "https://github.com/cython/cython/issues/3253#issuecomment-559604261",
            "id": 559604261,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3253",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYwNDI2MQ==",
            "updated_at": "2019-11-28T21:17:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/559604261",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "OK sorry I misunderstood. The existence of the temporary is right, because it's matching the following Python behaviour:\r\n\r\n```\r\ndef f():\r\n    raise RuntimeError()\r\n\r\ndef g():\r\n    try:\r\n        a = f()\r\n    except:\r\n        # \"a\" shouldn't be assigned here\r\n```\r\n\r\nIf the temporary didn't exist then `a` would be assigned directly exception or not and the behaviour would be incorrect. I think we both agree on this bit, but just making sure.\r\n\r\nI'm not 100% sure what C++ standard Cython targets as a baseline. I'm pretty sure it still targets C89, so on that basis I'd assume it aims for the earliest possible C++ standard, and that `std::move` might not be acceptable for generated code. But I don't know this for certain so I'll stop commenting now.",
            "created_at": "2019-11-28T22:22:54Z",
            "html_url": "https://github.com/cython/cython/issues/3253#issuecomment-559612318",
            "id": 559612318,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3253",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYxMjMxOA==",
            "updated_at": "2019-11-28T22:23:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/559612318",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3253/comments",
    "created_at": "2019-11-28T14:02:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-20T18:29:55Z",
            "event": "milestoned",
            "id": 3253037677,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMyNTMwMzc2Nzc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3253037677"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-20T18:30:13Z",
            "event": "labeled",
            "id": 3253038934,
            "label": {
                "color": "f9d0c4",
                "name": "C++"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNTMwMzg5MzQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3253038934"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-20T18:30:13Z",
            "event": "labeled",
            "id": 3253038936,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNTMwMzg5MzY=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3253038936"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-21T04:29:08Z",
            "event": "closed",
            "id": 3254481586,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzI1NDQ4MTU4Ng==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3254481586"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3253/events",
    "html_url": "https://github.com/cython/cython/issues/3253",
    "id": 529930492,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3253/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 197,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 23,
        "state": "open",
        "title": "3.0",
        "updated_at": "2020-04-21T04:29:08Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU1Mjk5MzA0OTI=",
    "number": 3253,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Spurious temporaries break non-copyable types",
    "updated_at": "2020-04-21T04:29:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3253",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "node_id": "MDQ6VXNlcjE3MjE4MjA=",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou"
    }
}