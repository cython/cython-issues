{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\nTesting whether a `str` is truthy produces 'deprecated-declarations' warnings when compiling the C code.\r\n\r\n**To Reproduce**\r\nCode to reproduce the behaviour:\r\n```cython\r\ndef bug():\r\n    s = 'hello'\r\n    if s:\r\n        print('non-empty')\r\n```\r\n\r\n**Environment**\r\n - OS: Linux\r\n - Python version: 3.9.0\r\n - Cython version 0.29.21\r\n - C compiler: gcc 9.3.0\r\n\r\nI believe the culprit here is Python 3.9, as I do not see the same behavior for 3.8 (but here I've only tested with Cython `0.29.20`).\r\n\r\n**Additional context**\r\nCompiling the C file generated by the simple code above gives the warnings\r\n\r\n> bug.c: In function ‘__pyx_pf_3bug_bug’:\r\nbug.c:1102:3: warning: ‘_PyUnicode_get_wstr_length’ is deprecated [-Wdeprecated-declarations]\r\n 1102 |   __pyx_t_1 = (__Pyx_PyUnicode_IS_TRUE(__pyx_v_s) != 0);\r\n      |   ^~~~~~~~~\r\nIn file included from /home/jmd/concept_installtest/python/include/python3.9/unicodeobject.h:1026,\r\n                 from /home/jmd/concept_installtest/python/include/python3.9/Python.h:97,\r\n                 from bug.c:4:\r\n/home/jmd/concept_installtest/python/include/python3.9/cpython/unicodeobject.h:446:26: note: declared here\r\n  446 | static inline Py_ssize_t _PyUnicode_get_wstr_length(PyObject *op) {\r\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\nbug.c:1102:3: warning: ‘PyUnicode_AsUnicode’ is deprecated [-Wdeprecated-declarations]\r\n 1102 |   __pyx_t_1 = (__Pyx_PyUnicode_IS_TRUE(__pyx_v_s) != 0);\r\n      |   ^~~~~~~~~\r\nIn file included from /home/jmd/concept_installtest/python/include/python3.9/unicodeobject.h:1026,\r\n                 from /home/jmd/concept_installtest/python/include/python3.9/Python.h:97,\r\n                 from bug.c:4:\r\n/home/jmd/concept_installtest/python/include/python3.9/cpython/unicodeobject.h:580:45: note: declared here\r\n  580 | Py_DEPRECATED(3.3) PyAPI_FUNC(Py_UNICODE *) PyUnicode_AsUnicode(\r\n      |                                             ^~~~~~~~~~~~~~~~~~~\r\nbug.c:1102:3: warning: ‘_PyUnicode_get_wstr_length’ is deprecated [-Wdeprecated-declarations]\r\n 1102 |   __pyx_t_1 = (__Pyx_PyUnicode_IS_TRUE(__pyx_v_s) != 0);\r\n      |   ^~~~~~~~~\r\nIn file included from /home/jmd/concept_installtest/python/include/python3.9/unicodeobject.h:1026,\r\n                 from /home/jmd/concept_installtest/python/include/python3.9/Python.h:97,\r\n                 from bug.c:4:\r\n/home/jmd/concept_installtest/python/include/python3.9/cpython/unicodeobject.h:446:26: note: declared here\r\n  446 | static inline Py_ssize_t _PyUnicode_get_wstr_length(PyObject *op) {\r\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nAll three warnings refer to the same line, where `__Pyx_PyUnicode_IS_TRUE` is used. This is defined by\r\n```C\r\n#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)\r\n  // ...\r\n  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)\r\n  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))\r\n  #else\r\n  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))\r\n  #endif\r\n#else\r\n  // ...\r\n  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))\r\n#endif\r\n```\r\nIf I manually replace ` (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))` with ` (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_LENGTH(u)))` (or just ` (0 != PyUnicode_GET_LENGTH(u))`), the warnings go away. Oh, and the code works regardless.\r\n\r\nAs far as I can see, the problem is that  `PyUnicode_IS_READY(u)` returns `0` whereas a `1` is expected. Indeed, `PyUnicode_GET_SIZE` has been deprecated in favor of `PyUnicode_GET_LENGTH` since Python 3.3, which makes the sudden appearance of this issue a bit weird. Furthermore, if I check and print the result of `PyUnicode_IS_READY(__pyx_v_s)` (with `__pyx_v_s` corresponding to by `str` `s`), I do indeed get `1`. On further thought, the warnings appear at compile time, so I guess the value of `u` (i.e. `__pyx_v_s`) has nothing to do with it...\r\n\r\nFinally, the bug can be mitigated by switching to using e.g. `if len(s):`.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Additional discovery: If I cythonize without `-3`, the warnings disappear.",
            "created_at": "2020-12-01T16:13:02Z",
            "html_url": "https://github.com/cython/cython/issues/3924#issuecomment-736653953",
            "id": 736653953,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczNjY1Mzk1Mw==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-01T16:13:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/736653953",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/9202794?v=4",
                "events_url": "https://api.github.com/users/jmd-dk/events{/privacy}",
                "followers_url": "https://api.github.com/users/jmd-dk/followers",
                "following_url": "https://api.github.com/users/jmd-dk/following{/other_user}",
                "gists_url": "https://api.github.com/users/jmd-dk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jmd-dk",
                "id": 9202794,
                "login": "jmd-dk",
                "node_id": "MDQ6VXNlcjkyMDI3OTQ=",
                "organizations_url": "https://api.github.com/users/jmd-dk/orgs",
                "received_events_url": "https://api.github.com/users/jmd-dk/received_events",
                "repos_url": "https://api.github.com/users/jmd-dk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jmd-dk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jmd-dk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jmd-dk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "As `PyUnicode_GET_SIZE` is deprecated, would there be any harm in just always going with\r\n```C\r\n#define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))\r\n```\r\n? Currently the branch containing `PyUnicode_GET_SIZE` is chosen merely because `PyUnicode_GET_SIZE` is defined, even though `PyUnicode_GET_LENGTH` is also defined. Shouldn't the \"new\" `PyUnicode_GET_LENGTH` get priority, as in\r\n```C\r\n#if defined(PyUnicode_GET_LENGTH)\r\n#define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))\r\n#else\r\n#define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))\r\n#endif\r\n```\r\n?",
            "created_at": "2020-12-01T16:20:50Z",
            "html_url": "https://github.com/cython/cython/issues/3924#issuecomment-736658725",
            "id": 736658725,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3924",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczNjY1ODcyNQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-01T16:20:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/736658725",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/9202794?v=4",
                "events_url": "https://api.github.com/users/jmd-dk/events{/privacy}",
                "followers_url": "https://api.github.com/users/jmd-dk/followers",
                "following_url": "https://api.github.com/users/jmd-dk/following{/other_user}",
                "gists_url": "https://api.github.com/users/jmd-dk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jmd-dk",
                "id": 9202794,
                "login": "jmd-dk",
                "node_id": "MDQ6VXNlcjkyMDI3OTQ=",
                "organizations_url": "https://api.github.com/users/jmd-dk/orgs",
                "received_events_url": "https://api.github.com/users/jmd-dk/received_events",
                "repos_url": "https://api.github.com/users/jmd-dk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jmd-dk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jmd-dk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jmd-dk"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3924/comments",
    "created_at": "2020-12-01T16:07:39Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3924/events",
    "html_url": "https://github.com/cython/cython/issues/3924",
    "id": 754525822,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3924/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3NTQ1MjU4MjI=",
    "number": 3924,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] Deprecation warnings about _PyUnicode_get_wstr_length and PyUnicode_AsUnicode",
    "updated_at": "2020-12-01T16:20:50Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3924",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/9202794?v=4",
        "events_url": "https://api.github.com/users/jmd-dk/events{/privacy}",
        "followers_url": "https://api.github.com/users/jmd-dk/followers",
        "following_url": "https://api.github.com/users/jmd-dk/following{/other_user}",
        "gists_url": "https://api.github.com/users/jmd-dk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jmd-dk",
        "id": 9202794,
        "login": "jmd-dk",
        "node_id": "MDQ6VXNlcjkyMDI3OTQ=",
        "organizations_url": "https://api.github.com/users/jmd-dk/orgs",
        "received_events_url": "https://api.github.com/users/jmd-dk/received_events",
        "repos_url": "https://api.github.com/users/jmd-dk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jmd-dk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jmd-dk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jmd-dk"
    }
}