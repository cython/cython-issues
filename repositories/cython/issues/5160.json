{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nCython mandates three argument for the special method __pow__ . My class makes no use of the third argument, but when compiling the code cython forces me to define one without a default value\r\n\r\nThat mean that code using the exponteation operator must have two different implementations depending on whether it is running as compiled code or as interpreted code. I believe this defeats the purpose of pure python, which is one of the goals of cython 3.\n\n### Code to reproduce the behaviour:\n\n```cython\r\n@cython.cclass\r\nclass Pow:\r\n    def __pow__(self, x):\r\n        return x\r\n```\r\n\r\nFails with \r\n\r\n```\r\n(venv311) C:\\Users\\Juan\\cruji-enaire>python setup.py build_ext --inplace\r\nCompiling src/crujisim/cythontests.py because it changed.\r\n[1/1] Cythonizing src/crujisim/cythontests.py\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n@cython.cclass\r\nclass Pow:\r\n    def __pow__(self, x):\r\n    ^\r\n------------------------------------------------------------\r\n\r\nsrc\\crujisim\\cythontests.py:514:4: Special method __pow__ has wrong number of arguments (2 declared, 3 expected)\r\n```\r\n\r\nWhen trying to compile with a default argument,\r\n\r\n```cython\r\n@cython.cclass\r\nclass Pow:\r\n    def __pow__(self, x, m=None):\r\n        return x\r\n```\r\n\r\nNow fails because it won't accept a default value\r\n\r\n```\r\n(venv311) C:\\Users\\Juan\\cruji-enaire>python setup.py build_ext --inplace\r\nCompiling src/crujisim/cythontests.py because it changed.\r\n[1/1] Cythonizing src/crujisim/cythontests.py\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n@cython.cclass\r\nclass Pow:\r\n    def __pow__(self, x, m=None):\r\n                         ^\r\n------------------------------------------------------------\r\n\r\nsrc\\crujisim\\cythontests.py:514:25: This argument cannot have a default value\r\n```\r\n\r\nFinally, the solution that cython will be happy with:\r\n\r\n```cython\r\n@cython.cclass\r\nclass Pow:\r\n    def __pow__(self, x, m):\r\n        return x\r\n```\r\n\r\nfails in interpreted mode because now the third argument is mandatory\r\n\r\n```\r\nIn [1]: from crujisim.cythontests import Pow\r\n\r\nIn [2]: p = Pow()\r\n\r\nIn [3]: p ** 5\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In [3], line 1\r\n----> 1 p ** 5\r\n\r\nTypeError: Pow.__pow__() missing 1 required positional argument: 'm'\r\n```\r\n\r\n\n\n### Expected behaviour\n\nI expect to be able to write a valid python .py file that I can optionally compile with cython to obtain speed advantages, but should work both compiled and interpreted.\r\n\r\nI can work around it using `@cython.compiled`, but I believe  this should not be necessary\n\n### Environment\n\nOS: Windows\r\nPython version 3.11\r\nCython version 3.0.0a11\r\n\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think this would likely be tricky but not impossible (so we probably should do it, but I wouldn't expect it to be soon).\r\n\r\nThe special methods of cclasses map pretty directly onto the C API slots, and in this case the C API slot only defines the 3 argument version.\r\n\r\nIn terms of implementation there's two things we could do:\r\n1. Special-case it to allow a 3rd default argument of `None` (since this is the value that the Python internals use by default). We wouldn't allow any other default values.\r\n2. Convert the two argument version into a small wrapper function that just checks the third argument is `None`.",
            "created_at": "2022-12-03T08:16:41Z",
            "html_url": "https://github.com/cython/cython/issues/5160#issuecomment-1336111624",
            "id": 1336111624,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5160",
            "node_id": "IC_kwDOABDGAc5Po3II",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1336111624/reactions"
            },
            "updated_at": "2022-12-03T08:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1336111624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Python gives a `TypeError` if the 3-argument version is used but not implemented:\r\n```python\r\n>>> class C:\r\n...   def __pow__(self, other): return 5 * other\r\n... \r\n>>> pow(C(), 3)\r\n15\r\n>>> pow(C(), 3, 2)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: __pow__() takes 2 positional arguments but 3 were given\r\n```\r\nI think we need to generate a wrapper slot function here that raises this exception if a third argument is passed. Although, we already *do* generate a wrapper function any way (in `ModuleNode.generate_binop_function()`), so maybe we can fold that special case into it and accept both signatures?",
            "created_at": "2022-12-07T13:55:08Z",
            "html_url": "https://github.com/cython/cython/issues/5160#issuecomment-1341002523",
            "id": 1341002523,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5160",
            "node_id": "IC_kwDOABDGAc5P7hMb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1341002523/reactions"
            },
            "updated_at": "2022-12-07T13:55:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1341002523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "BTW, this doesn't seem specific to Python code. It seems helpful to support this also in Cython code. We should generally allow 2 or 3 arguments for  `__pow__` and let users choose which they prefer to implement.",
            "created_at": "2022-12-07T13:57:38Z",
            "html_url": "https://github.com/cython/cython/issues/5160#issuecomment-1341005861",
            "id": 1341005861,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5160",
            "node_id": "IC_kwDOABDGAc5P7iAl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1341005861/reactions"
            },
            "updated_at": "2022-12-07T13:57:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1341005861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5160/comments",
    "created_at": "2022-12-01T19:07:15Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-12-03T08:08:20Z",
            "event": "labeled",
            "id": 7945795399,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "node_id": "LE_lADOABDGAc5XufGWzwAAAAHZmzdH",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7945795399"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-12-07T14:10:28Z",
            "event": "labeled",
            "id": 7978229873,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc5XufGWzwAAAAHbiiBx",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/7978229873"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5160/events",
    "html_url": "https://github.com/cython/cython/issues/5160",
    "id": 1471803798,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5160/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5XufGW",
    "number": 5160,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5160/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5160/timeline",
    "title": "[BUG] Required number of arguments for __pow__ prevents compiled and interpreted pure python code compatability",
    "updated_at": "2022-12-07T14:10:28Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5160",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7416902?v=4",
        "events_url": "https://api.github.com/users/jtoledo1974/events{/privacy}",
        "followers_url": "https://api.github.com/users/jtoledo1974/followers",
        "following_url": "https://api.github.com/users/jtoledo1974/following{/other_user}",
        "gists_url": "https://api.github.com/users/jtoledo1974/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jtoledo1974",
        "id": 7416902,
        "login": "jtoledo1974",
        "node_id": "MDQ6VXNlcjc0MTY5MDI=",
        "organizations_url": "https://api.github.com/users/jtoledo1974/orgs",
        "received_events_url": "https://api.github.com/users/jtoledo1974/received_events",
        "repos_url": "https://api.github.com/users/jtoledo1974/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jtoledo1974/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jtoledo1974/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jtoledo1974"
    }
}