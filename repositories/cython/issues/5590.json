{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nWhen you use a `# distutils: libraries = foo` comment, `Cython.Build.cythonize` will try to merge this list of libraries with the libraries held as the `Extension.libraries` attribute of a passed in `Extension` object. This merging [removes duplicates](https://github.com/cython/cython/blob/6776c96f66fc799c62be4d6d4022903a5e36cbb2/Cython/Build/Dependencies.py#L274-L276), which is incorrect, since the order in which C libraries occur on the linker command line is significant, and keeping only the first occurrence of a library can cause linking to fail.\n\n### Code to reproduce the behaviour:\n\n```py\r\nfrom Cython.Build import cythonize\r\nfrom setuptools import Extension\r\n\r\nwith open(\"foo.pyx\", \"w\") as f:\r\n    f.write(\"# distutils: libraries = pthread\\n\")\r\n\r\nwith open(\"bar.pyx\", \"w\") as f:\r\n    f.write(\"\\n\")\r\n\r\nfoo = Extension(\"foo\", sources=[\"foo.pyx\"], libraries=[\"a\", \"b\", \"a\"])\r\nbar = Extension(\"bar\", sources=[\"bar.pyx\"], libraries=[\"a\", \"b\", \"a\"])\r\n\r\nkwargs = dict(compiler_directives=dict(language_level=\"3str\"))\r\ncy_foo = cythonize([foo], **kwargs)[0]\r\ncy_bar = cythonize([bar], **kwargs)[0]\r\n\r\nprint(f\"{foo.libraries=}\")\r\nprint(f\"{cy_foo.libraries=}\")\r\n\r\nprint(f\"{bar.libraries=}\")\r\nprint(f\"{cy_bar.libraries=}\")\r\n```\n\n### Expected behaviour\n\nThe output of the above script is:\r\n```text\r\nCompiling foo.pyx because it changed.\r\n[1/1] Cythonizing foo.pyx\r\nCompiling bar.pyx because it changed.\r\n[1/1] Cythonizing bar.pyx\r\nfoo.libraries=['a', 'b', 'a']\r\ncy_foo.libraries=['pthread', 'a', 'b']\r\nbar.libraries=['a', 'b', 'a']\r\ncy_bar.libraries=['a', 'b', 'a']\r\n```\r\n\r\nNotice that `cy_foo.libraries` has `'pthread'` added, as it should, but the `'a'` after the `'b'` was incorrectly removed.\n\n### OS\n\nLinux\n\n### Python version\n\n3.11\n\n### Cython version\n\n3.0.0\n\n### Additional context\n\nI found this because a library available only as a `.a` was listed after each library that depends on it in `libraries=[...]`, and Cythonize removed all but the first, which caused the build to fail.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Good catch. Would it work to keep only the last occurrence rather than the first? I'm not sure why we should allow duplicates here.\n",
            "created_at": "2023-08-05T04:54:21Z",
            "html_url": "https://github.com/cython/cython/issues/5590#issuecomment-1666389499",
            "id": 1666389499,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5590",
            "node_id": "IC_kwDOABDGAc5jUxX7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1666389499/reactions"
            },
            "updated_at": "2023-08-05T04:54:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1666389499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "It would work in _more_ cases to keep the last occurrence rather than the first, but it wouldn't work in all cases. Imagine we've got two archive libraries, each with two objects:\r\n\r\nlibfoo.a contains foo1.o and foo2.o\r\nlibbar.a contains bar1.o and bar2.o\r\n\r\nLet's say each `.o` contains only a symbol of the same name.\r\n\r\nImagine that the Cython module `extmod.o` depends on the symbol `foo1`.\r\n\r\nIf `foo1` depends on `bar1`, and `bar1` depends on `bar2`, and `bar2` depends on `foo2`, then we've got these relationships:\r\n\r\n```mermaid\r\ngraph TD;\r\n    subgraph libfoo.a\r\n    foo1.o\r\n    foo2.o\r\n    end\r\n    subgraph libbar.a\r\n    bar1.o\r\n    bar2.o\r\n    end\r\n    \r\n    extmod.o -.-|foo1| foo1.o\r\n    foo1.o -.-|bar1| bar1.o\r\n    bar1.o -.-|bar2| bar2.o\r\n    bar2.o -.-|foo2| foo2.o\r\n\r\n```\r\n\r\nIn that case, the right link line is `-lfoo -lbar -lfoo`:\r\n\r\n1. Compile Cython module (it has an undef for symbol `foo1`)\r\n2. Link against `libfoo.a` (the `foo1` symbol is resolved, but an undef for `bar1` is added)\r\n3. Link against `libbar.a` (the `bar1` symbol is resolved, but an undef for `foo2` is added)\r\n4. Link against `libfoo.a` (the `foo2` symbol is resolved, no new undefs are added)\r\n5. All symbols have been resolved, success!\r\n\r\nIf you were to keep only the second `-lfoo`, linking with `-lbar -lfoo` would fail:\r\n\r\n1. Compile Cython module (it has an undef for symbol `foo1`)\r\n2. Link against `libbar.a` (no symbols are resolved, we still have an undef for `foo1`)\r\n2. Link against `libfoo.a` (the `foo1` symbol is resolved, but there is now an undef for `bar1`)\r\n3. We finish with an undef for `bar1` that we shouldn't have!\r\n\r\nGranted, circular dependencies between libraries are a code smell, but they do sometimes occur in real world libraries. It seems like a mistake to deduplicate at all here. Duplicated libraries on the link line have well defined behavior and are sometimes necessary to work around poorly factored libraries.",
            "created_at": "2023-08-05T05:43:12Z",
            "html_url": "https://github.com/cython/cython/issues/5590#issuecomment-1666400055",
            "id": 1666400055,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5590",
            "node_id": "IC_kwDOABDGAc5jUz83",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1666400055/reactions"
            },
            "updated_at": "2023-08-05T05:45:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1666400055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29423?v=4",
                "events_url": "https://api.github.com/users/godlygeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/godlygeek/followers",
                "following_url": "https://api.github.com/users/godlygeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/godlygeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/godlygeek",
                "id": 29423,
                "login": "godlygeek",
                "node_id": "MDQ6VXNlcjI5NDIz",
                "organizations_url": "https://api.github.com/users/godlygeek/orgs",
                "received_events_url": "https://api.github.com/users/godlygeek/received_events",
                "repos_url": "https://api.github.com/users/godlygeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/godlygeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/godlygeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/godlygeek"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5590/comments",
    "created_at": "2023-08-04T23:35:37Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29423?v=4",
                "events_url": "https://api.github.com/users/godlygeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/godlygeek/followers",
                "following_url": "https://api.github.com/users/godlygeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/godlygeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/godlygeek",
                "id": 29423,
                "login": "godlygeek",
                "node_id": "MDQ6VXNlcjI5NDIz",
                "organizations_url": "https://api.github.com/users/godlygeek/orgs",
                "received_events_url": "https://api.github.com/users/godlygeek/received_events",
                "repos_url": "https://api.github.com/users/godlygeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/godlygeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/godlygeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/godlygeek"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-08-04T23:39:10Z",
            "event": "renamed",
            "id": 10013729617,
            "node_id": "RTE_lADOABDGAc5thS6ezwAAAAJU3WNR",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] ",
                "to": "[BUG] When adding libraries from `# distutils:` comments, cythonize removes semantically significant duplicate libraries"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/10013729617"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5590/events",
    "html_url": "https://github.com/cython/cython/issues/5590",
    "id": 1837444766,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5590/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5thS6e",
    "number": 5590,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5590/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5590/timeline",
    "title": "[BUG] When adding libraries from `# distutils:` comments, cythonize removes semantically significant duplicate libraries",
    "updated_at": "2023-08-05T05:45:21Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5590",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29423?v=4",
        "events_url": "https://api.github.com/users/godlygeek/events{/privacy}",
        "followers_url": "https://api.github.com/users/godlygeek/followers",
        "following_url": "https://api.github.com/users/godlygeek/following{/other_user}",
        "gists_url": "https://api.github.com/users/godlygeek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/godlygeek",
        "id": 29423,
        "login": "godlygeek",
        "node_id": "MDQ6VXNlcjI5NDIz",
        "organizations_url": "https://api.github.com/users/godlygeek/orgs",
        "received_events_url": "https://api.github.com/users/godlygeek/received_events",
        "repos_url": "https://api.github.com/users/godlygeek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/godlygeek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/godlygeek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/godlygeek"
    }
}