{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "CPython has a specific optimization when concatenating strings - it checks the reference count of the first operand and tries to concatenate in place if possible. This is done in ceval: https://github.com/python/cpython/blob/309d7cc5df4e2bf3086c49eb2b1b56b929554500/Python/ceval.c#L5354. For some specific cases this can make a big performance difference https://stackoverflow.com/questions/35787022/cython-string-concatenation-is-super-slow-what-else-does-it-do-poorly\r\n\r\nI had an initial go at it here: https://github.com/cython/cython/pull/3451. However there's definite failure paths since it can `NULL` out variables that Cython isn't expecting to be `NULL`.\r\n\r\nA couple of possible options:\r\n1. It might be possible to create something with that basically re-implements `PyUnicode_Append` but without clearing operand1. (i.e. remove this line https://github.com/python/cpython/blob/b146568dfcbcd7409c724f8917e4f77433dd56e4/Objects/unicodeobject.c#L11517)\r\n2. (probably easier) ensure that operand1 is always set to something on exit, even if it's a dummy value like an empty string. This could mostly be based on the current PR, but it would ocassionally lead to unexpected behaviour (mostly when exceptions are caught and handled)\r\n\r\n    ```\r\n      cdef unicode val = \"X\"\r\n      try:\r\n           val += \"x\"\r\n      except:\r\n           pass\r\n      return val  # wouldn't crash, but would be an odd placeholder string.\r\n```",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3453/comments",
    "created_at": "2020-03-22T11:19:15Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3453/events",
    "html_url": "https://github.com/cython/cython/issues/3453",
    "id": 585695686,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3453/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1ODU2OTU2ODY=",
    "number": 3453,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Unicode/Bytes concatenation is inefficient",
    "updated_at": "2020-03-22T11:25:14Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3453",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}