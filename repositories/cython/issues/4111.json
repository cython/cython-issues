{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "## Overview\r\n\r\nI recently created the following BPO:\r\n\r\n- https://bugs.python.org/issue43816\r\n\r\nas well as associated PR:\r\n\r\n- https://github.com/python/cpython/pull/25365\r\n\r\nto fix (what I felt was) a bug in (at least) Python 3.8/Python 3.9.\r\n\r\nHowever, I received push-back from at least one commenter on the Python mailing list that the issue was discussing was an \"API misuse\" of `Python.h` (maybe that's true).\r\n\r\nAnyway, since this came about because of Cython, I thought it was worth discussing it here.\r\n\r\n## Actual issue\r\n\r\nIf you Cythonate something like:\r\n\r\n```\r\nfloat(1)\r\n```\r\n\r\nthen you end-up with some code that looks like this in your output:\r\n\r\n```\r\nstatic CYTHON_UNUSED double __Pyx__PyBytes_AsDouble(PyObject *obj, const char* start, Py_ssize_t length) {\r\n    double value;\r\n    Py_ssize_t i, digits;\r\n    const char *last = start + length;\r\n    char *end;\r\n    while (Py_ISSPACE(*start))\r\n        start++;\r\n...\r\n```\r\n\r\nAnd where `Py_ISSPACE` has an expansion like:\r\n\r\n```\r\n#define Py_ISSPACE(c)  (_Py_ctype_table[Py_CHARMASK(c)] & PY_CTF_SPACE)\r\n```\r\n\r\n(in `pyctype.h`)\r\n\r\nand where the variable `_Py_ctype_table` looks like this:\r\n\r\n```\r\nPyAPI_DATA(const unsigned int) _Py_ctype_table[256];\r\n```\r\n\r\nProblematically, the inclusion of (`cpython`) `pyctype.h` in `Python.h` does not guard `_Py_ctype_table` against the case of C++ compilation.\r\n\r\nThis then leads to the following issue:\r\n\r\n1. You use pre-compiled version of Python38 (e.g., on Windows), which has been compiled with a C compiler\r\n2. This means that all symbols are **not** name-managled\r\n3. You Cythonate some code and pull in a C++-only header\r\n4. You then compile your Cythonated code as C++ (e.g., with `/TP` if you're using Visual Studio)\r\n5. Finally, you try to link your Cythonated object code with `Python38.lib`\r\n\r\nThis then falls apart because Python38.lib has a un-name-mangled version of `_Py_ctype_table`, while your Cythonated code has C++-name-managled version of `_Py_ctype_table`, which means the linker cannot resolve the symbol, giving a link time error:\r\n\r\n```\r\ncl /Fe:test.exe /TP /I include cython_output.c test.c /link libs/python39.lib\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\ncython_output.c\r\ntest.c\r\nGenerating Code...\r\nMicrosoft (R) Incremental Linker Version 14.28.29336.0\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n/out:test.exe\r\nlibs/python39.lib\r\ncython_output.obj\r\ntest.obj\r\n   Creating library test.lib and object test.exp\r\ncython_output.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) unsigned int const * const _Py_ctype_table\" (__imp_?_Py_ctype_table@@3QBIB) referenced in function \"double __cdecl __Pyx__PyBytes_AsDouble(struct _object * __ptr64,char const * __ptr64,__int64)\" (?__Pyx__PyBytes_AsDouble@@YANPEAU_object@@PEBD_J@Z)\r\ntest.exe : fatal error LNK1120: 1 unresolved externals\r\n```\r\n\r\n## Resolution\r\n\r\nWithout changing the use of `Py_ISSPACE` within Cython, I feel that the only solution is to change the generated C code to look like this:\r\n\r\n```\r\n#ifdef __cplusplus\r\nextern \"C\" {\r\n#endif\r\n#include <Python.h>\r\n#ifdef __cplusplus\r\n}\r\n#endif\r\n```\r\n\r\nPersonally, given that other files downstream of `Python.h` *do* have `extern \"C\"`, I felt that this really is a Python bug rather than a \"user\" bug.\r\n\r\nHowever, I'm sharing this in here in case my feelings are off-base and, indeed, this is a Cython bug.\r\n\r\nIf this is considered a Cython bug, I'm more than happy to make a PR with the above change.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n",
    "closed_at": "2021-04-13T09:49:01Z",
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "This does look to turn up in our Appveyor CI logs (for Python version 3.7, 3.8, 3.9):\r\n\r\n```\r\n[00:05:13]    Creating library C:\\projects\\cython\\TEST_TMP\\1\\memoryview\\cpp\\numpy_memoryview_readonly\\numpy_memoryview_readonly.cp38-win_amd64.lib and object C:\\projects\\cython\\TEST_TMP\\1\\memoryview\\cpp\\numpy_memoryview_readonly\\numpy_memoryview_readonly.cp38-win_amd64.exp\r\n[00:05:13] numpy_memoryview_readonly.obj : error LNK2001: unresolved external symbol \"__declspec(dllimport) unsigned int const * const _Py_ctype_table\" (__imp_?_Py_ctype_table@@3QBIB)\r\n[00:05:13] C:\\projects\\cython\\TEST_TMP\\1\\memoryview\\cpp\\numpy_memoryview_readonly\\numpy_memoryview_readonly.cp38-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals\r\n```\r\n\r\nIt's only an issue on Windows I think - presumably GCC doesn't mangle this kind of symbol.\r\n\r\nI think whether it's ultimately a Python bug or not, it should be fixed in Cython since there are enough Python versions with this unguarded code in the wild.",
            "created_at": "2021-04-12T19:06:29Z",
            "html_url": "https://github.com/cython/cython/issues/4111#issuecomment-818061686",
            "id": 818061686,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4111",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODA2MTY4Ng==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-12T21:16:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/818061686",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Maybe we should use `Py_UNICODE_ISSPACE` universally rather than just as a workaround?\r\n\r\nhttps://github.com/cython/cython/blob/cd6e29d0251b21d6b1b45f3de8eb452bcfe2cf68/Cython/Utility/ModuleSetupCode.c#L787-L789\r\n\r\nThat has the advantage that it's both documented and in the correct C++ guards",
            "created_at": "2021-04-12T19:16:07Z",
            "html_url": "https://github.com/cython/cython/issues/4111#issuecomment-818067431",
            "id": 818067431,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4111",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODA2NzQzMQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-12T19:16:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/818067431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think whether it's ultimately a Python bug or not, it should be fixed in Cython since there are enough Python versions with this unguarded code in the wild.\r\n>\r\n\r\nOkay, so would you like the `#ifdef __cplusplus` PR?\r\n\r\n> That has the advantage that it's both documented and in the correct C++ guards\r\n>\r\n\r\nWould you like me to take a look at doing this?\r\n\r\nPlus, yes, it does have the correct guards.",
            "created_at": "2021-04-12T19:33:52Z",
            "html_url": "https://github.com/cython/cython/issues/4111#issuecomment-818077834",
            "id": 818077834,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4111",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODA3NzgzNA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-12T19:33:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/818077834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14277540?v=4",
                "events_url": "https://api.github.com/users/andrewvaughanj/events{/privacy}",
                "followers_url": "https://api.github.com/users/andrewvaughanj/followers",
                "following_url": "https://api.github.com/users/andrewvaughanj/following{/other_user}",
                "gists_url": "https://api.github.com/users/andrewvaughanj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andrewvaughanj",
                "id": 14277540,
                "login": "andrewvaughanj",
                "node_id": "MDQ6VXNlcjE0Mjc3NTQw",
                "organizations_url": "https://api.github.com/users/andrewvaughanj/orgs",
                "received_events_url": "https://api.github.com/users/andrewvaughanj/received_events",
                "repos_url": "https://api.github.com/users/andrewvaughanj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andrewvaughanj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andrewvaughanj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andrewvaughanj"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> > That has the advantage that it's both documented and in the correct C++ guards\r\n> \r\n> Would you like me to take a look at doing this?\r\n\r\nTo me the `Py_UNICODE_ISSPACE` fix feels like a more proportionate change, so a PR doing that would be welcome. It's always possible that I'm wrong about this though...\r\n\r\nIt looks like this is already tested on appveyor (https://ci.appveyor.com/project/cython/cython) so I don't think there's any need to add specific tests.",
            "created_at": "2021-04-12T21:02:50Z",
            "html_url": "https://github.com/cython/cython/issues/4111#issuecomment-818235352",
            "id": 818235352,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4111",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODIzNTM1Mg==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-12T21:02:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/818235352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Or possibly don't do anything until a decision has been made on the Python bug...",
            "created_at": "2021-04-12T21:10:33Z",
            "html_url": "https://github.com/cython/cython/issues/4111#issuecomment-818239729",
            "id": 818239729,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4111",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODIzOTcyOQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-12T21:10:33Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/818239729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Or possibly don't do anything until a decision has been made on the Python bug...\r\n>\r\n\r\nOkay, so given my PR got a positive review, it seems this is likely to go in ...\r\n\r\nHowever, we still have:\r\n\r\n> To me the Py_UNICODE_ISSPACE fix feels like a more proportionate change\r\n>\r\n\r\nI can take a look at this\r\n",
            "created_at": "2021-04-13T07:29:10Z",
            "html_url": "https://github.com/cython/cython/issues/4111#issuecomment-818510627",
            "id": 818510627,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4111",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODUxMDYyNw==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-13T07:29:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/818510627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14277540?v=4",
                "events_url": "https://api.github.com/users/andrewvaughanj/events{/privacy}",
                "followers_url": "https://api.github.com/users/andrewvaughanj/followers",
                "following_url": "https://api.github.com/users/andrewvaughanj/following{/other_user}",
                "gists_url": "https://api.github.com/users/andrewvaughanj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andrewvaughanj",
                "id": 14277540,
                "login": "andrewvaughanj",
                "node_id": "MDQ6VXNlcjE0Mjc3NTQw",
                "organizations_url": "https://api.github.com/users/andrewvaughanj/orgs",
                "received_events_url": "https://api.github.com/users/andrewvaughanj/received_events",
                "repos_url": "https://api.github.com/users/andrewvaughanj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andrewvaughanj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andrewvaughanj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andrewvaughanj"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I also searched for other occurrences of the `Py_IS…` macros, but it seems that all we're doing is testing for space characters.\r\n\r\nThe only difference that I can see is that `Py_UNICODE_ISSPACE()` treats `NBSP` (`0xA0`) as space whereas `Py_ISSPACE()` does not since it [only looks at US-ASCII characters](https://github.com/python/cpython/blob/master/Python/pyctype.c). This would mean that parsing floats surrounded by non-breaking spaces from a byte string would work in Cython but not in Python. Seems rather nice to have, but it's not how Python works here.\r\n\r\nGiven that we are talking about either `0x20` or `0x9 … 0xd` as positive matches here, and the number of spaces around a value should be very low on average, I guess that an inline function to test that range should be fast enough. See 7ce24bc7381c83972e5b6d24bbb8e6ab610541fa",
            "created_at": "2021-04-13T09:53:26Z",
            "html_url": "https://github.com/cython/cython/issues/4111#issuecomment-818608848",
            "id": 818608848,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4111",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODYwODg0OA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-13T09:53:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/818608848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4111/comments",
    "created_at": "2021-04-12T16:53:44Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14277540?v=4",
                "events_url": "https://api.github.com/users/andrewvaughanj/events{/privacy}",
                "followers_url": "https://api.github.com/users/andrewvaughanj/followers",
                "following_url": "https://api.github.com/users/andrewvaughanj/following{/other_user}",
                "gists_url": "https://api.github.com/users/andrewvaughanj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andrewvaughanj",
                "id": 14277540,
                "login": "andrewvaughanj",
                "node_id": "MDQ6VXNlcjE0Mjc3NTQw",
                "organizations_url": "https://api.github.com/users/andrewvaughanj/orgs",
                "received_events_url": "https://api.github.com/users/andrewvaughanj/received_events",
                "repos_url": "https://api.github.com/users/andrewvaughanj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andrewvaughanj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andrewvaughanj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andrewvaughanj"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-12T16:55:20Z",
            "event": "renamed",
            "id": 4583494412,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDU4MzQ5NDQxMg==",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] ",
                "to": "[BUG] Link-time issues when Cython output compiled as C++"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/4583494412"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-12T21:06:01Z",
            "event": "labeled",
            "id": 4584592444,
            "label": {
                "color": "f9d0c4",
                "name": "C++"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1ODQ1OTI0NDQ=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4584592444"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14277540?v=4",
                "events_url": "https://api.github.com/users/andrewvaughanj/events{/privacy}",
                "followers_url": "https://api.github.com/users/andrewvaughanj/followers",
                "following_url": "https://api.github.com/users/andrewvaughanj/following{/other_user}",
                "gists_url": "https://api.github.com/users/andrewvaughanj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andrewvaughanj",
                "id": 14277540,
                "login": "andrewvaughanj",
                "node_id": "MDQ6VXNlcjE0Mjc3NTQw",
                "organizations_url": "https://api.github.com/users/andrewvaughanj/orgs",
                "received_events_url": "https://api.github.com/users/andrewvaughanj/received_events",
                "repos_url": "https://api.github.com/users/andrewvaughanj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andrewvaughanj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andrewvaughanj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andrewvaughanj"
            },
            "commit_id": "0f9f6b62ee57f71c22d5f2f0b06ec7be64459002",
            "commit_url": "https://api.github.com/repos/andrewvaughanj/cython/commits/0f9f6b62ee57f71c22d5f2f0b06ec7be64459002",
            "created_at": "2021-04-13T07:31:50Z",
            "event": "referenced",
            "id": 4586313423,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1ODYzMTM0MjM=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4586313423"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "7ce24bc7381c83972e5b6d24bbb8e6ab610541fa",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/7ce24bc7381c83972e5b6d24bbb8e6ab610541fa",
            "created_at": "2021-04-13T09:49:01Z",
            "event": "closed",
            "id": 4587030176,
            "node_id": "MDExOkNsb3NlZEV2ZW50NDU4NzAzMDE3Ng==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4587030176"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-13T09:52:10Z",
            "event": "milestoned",
            "id": 4587045643,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDQ1ODcwNDU2NDM=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4587045643"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-13T09:52:33Z",
            "event": "labeled",
            "id": 4587047567,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1ODcwNDc1Njc=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4587047567"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4111/events",
    "html_url": "https://github.com/cython/cython/issues/4111",
    "id": 856166484,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4111/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 329,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 24,
        "state": "open",
        "title": "3.0",
        "updated_at": "2021-04-13T10:11:46Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU4NTYxNjY0ODQ=",
    "number": 4111,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "[BUG] Link-time issues when Cython output compiled as C++",
    "updated_at": "2021-04-13T09:53:26Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4111",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/14277540?v=4",
        "events_url": "https://api.github.com/users/andrewvaughanj/events{/privacy}",
        "followers_url": "https://api.github.com/users/andrewvaughanj/followers",
        "following_url": "https://api.github.com/users/andrewvaughanj/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewvaughanj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/andrewvaughanj",
        "id": 14277540,
        "login": "andrewvaughanj",
        "node_id": "MDQ6VXNlcjE0Mjc3NTQw",
        "organizations_url": "https://api.github.com/users/andrewvaughanj/orgs",
        "received_events_url": "https://api.github.com/users/andrewvaughanj/received_events",
        "repos_url": "https://api.github.com/users/andrewvaughanj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/andrewvaughanj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewvaughanj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/andrewvaughanj"
    }
}