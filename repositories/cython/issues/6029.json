{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe your issue\n\nOne of the things discussed in https://github.com/cython/cython/issues/4425 was to initialize tuples via a \"tuple table\" in a similar way to the current \"string table\". My belief is that it's quite difficult to do before https://github.com/cython/cython/pull/5323 is merged (because the global `#define varname modulestate->varname` gets in the way of everything) and so is probably only worthwhile as a follow up.\r\n\r\nMy notes on a proposed implementation are below (to help remember them later):\r\n* In general tuples can't be put in a table since they depend on other literals being generated. However the vast majority can. Therefore, split tuples into suitable and unsuitable, and use existing code generation for unsuitable.\r\n  * \"suitable\" can contain:\r\n    * Python constants (`None`, `True`, `False`, `Ellipsis`)\r\n    * integers\r\n    * strings/bytes\r\n    * other suitable tuples\r\n  * \"unsuitable\" is everything else but might contain `frozenset`, `slices`(?)\r\n  * I propose adding anything that needs multiplication to \"unsuitable\" because it's a fairly rare complication\r\n* There's two ways we need to be able to lookup objects:\r\n  * Pointer (for things like `None`, `True`, `False`).\r\n  * Offset into modulestate (for most other things)\r\n\r\nTherefore my proposal is that the tuple table contains:\r\n* size of tuple (with 0 indicating \"stop\")\r\n* file index (to keep existing error reporting)\r\n* line no (to keep existing error reporting)\r\n* `N` bits indicating \"pointer\"/\"offset\"\r\n* Any padding needed\r\n* `N` unions which can be either a `PyObject*` or a `size_t` depending on pointer/offset\r\n\r\nso is really just an array of\r\n\r\n```\r\nunion TableEntry {\r\n    Py_ssize_t tuple_size;\r\n    int file_line_index;\r\n    size_t mode_selectors;\r\n    size_t offset;\r\n    PyObject *object;\r\n};",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Therefore, split tuples into suitable and unsuitable, and use existing code generation for unsuitable.\r\n\r\nDon't we do that already with the `is_literal` and `is_partly_literal` flags?",
            "created_at": "2024-02-24T19:32:04Z",
            "html_url": "https://github.com/cython/cython/issues/6029#issuecomment-1962616591",
            "id": 1962616591,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6029",
            "node_id": "IC_kwDOABDGAc50-ycP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1962616591/reactions"
            },
            "updated_at": "2024-02-24T19:32:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1962616591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Don't we do that already with the `is_literal` and `is_partly_literal` flags?\r\n\r\nPossibly? I think that `is_partly_literal` is about the multiplication factor.\r\n\r\nWhat I was worried about was if you'd managed to make a tuple that contained another literal initialized at the same time (like `slice` for example), which would work now because things are processed in order, but not if we did tuples before slices. I'm not sure it's possible to get a slice literal into a tuple though, but I don't know that it isn't.\r\n\r\nEither way - it's a detail of a rough outline for later",
            "created_at": "2024-02-25T07:54:36Z",
            "html_url": "https://github.com/cython/cython/issues/6029#issuecomment-1962847468",
            "id": 1962847468,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6029",
            "node_id": "IC_kwDOABDGAc50_qzs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1962847468/reactions"
            },
            "updated_at": "2024-02-25T07:54:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1962847468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Slices can hold any object whatsoever, `obj[(1,2):3, 4]` works fine. Though I’ve never heard of that being used for anything, probably better to just bail to regular generated code in those cases. It’d make more sense to do tuples after slices, since `array[1:2, 3:4]` would be common in Numpy etc code.",
            "created_at": "2024-02-25T08:28:25Z",
            "html_url": "https://github.com/cython/cython/issues/6029#issuecomment-1962855645",
            "id": 1962855645,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6029",
            "node_id": "IC_kwDOABDGAc50_szd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1962855645/reactions"
            },
            "updated_at": "2024-02-25T08:28:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1962855645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, you can have tuples with slices and slices with tuples. Difficult to map this to a table then.",
            "created_at": "2024-02-25T11:56:43Z",
            "html_url": "https://github.com/cython/cython/issues/6029#issuecomment-1962910280",
            "id": 1962910280,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6029",
            "node_id": "IC_kwDOABDGAc50_6JI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1962910280/reactions"
            },
            "updated_at": "2024-02-25T11:56:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1962910280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6029/comments",
    "created_at": "2024-02-24T11:41:35Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6029/events",
    "html_url": "https://github.com/cython/cython/issues/6029",
    "id": 2152271739,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6029/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6ASQ97",
    "number": 6029,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6029/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6029/timeline",
    "title": "Notes on \"tuple table\"",
    "updated_at": "2024-02-25T11:56:44Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6029",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}