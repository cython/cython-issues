{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "`cdef extern` gives Cython access to existing C/C++ libraries. To provide Python-level access generally requires the user to write a wrapper in Cython. For functions and enums Cython can automatically do this by defining them as `cpdef`. For C structs and C++ classes that feature doesn't currently exist (although Cython does generate a C struct <-> dict conversion).\r\n\r\nCython has most of the information to generate a basic wrapper - it know what attributes and functions the type has and whether they're convertable to a Python representation. Therefore it seems reasonable for Cython to create this wrapper rather than forcing the user to do it (which is largely just duplicating the existing definition in an extension class, forwarding to `self.obj`).\r\n\r\nThis issue suggests adding that feature.\r\n\r\n[Link to cython-devel thread](https://mail.python.org/pipermail/cython-devel/2020-March/005325.html).\r\n\r\nA few notes:\r\n\r\n- Syntax is up for debate. Some suggestions\r\n  - `cython.autowrap[c_type, **keyword_options]` - probably rejected because the square brackets make it less easily translated into pure-python mode.\r\n  - `cython.autowrap(c_type, **keyword_options)`\r\n  - `@cclass` decorator on struct/c++ class. Disadvantage is that it'd hide the name of the underlying C type (which would be inconvenient for writing Cython code around it). One option might be that `@cython.cclass` hides the name but it could also be used as a call to give a different name, e.g.\r\n    `ext_class_wrapper = cython.cclass(c_type)`\r\n    `ctypedef cython.cclass(c_type) ext_class_wrapper`\r\n  - `cpdef` for consistency with automatic wrapping of functions/structs. Disadvantage is that it hides the name and there isn't an easy workaround.\r\n- It isn't important to handle everything. The user can always inherit from the created extension type to define anything that's missed.\r\n- How to handle C++ functions that return references is always tricky (because the chances are *something* owns it, but who knows what). I'd propose not to handle this, and only deal with \"return by value\".\r\n- I'm not proposing to use these types for automatic coercion between C/C++ objects and Python objects. It'd be an \"opt-in\" feature.\r\n  - partly not to break existing struct<->dict conversion and vector<->list (etc.) conversions.\r\n  - partly because it's probably possible to end up with the generated wrappers not compiling in C++ occasionally, and having them opt-in gives the user a chance of fixing that.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I'm really interested in this. I maintain a Cython library that wraps a C++ library with multiple C++ classes, and I find the code duplication (redefining all the classes of a C++ header file in a `.pxd` file) quite cumbersome. Do you have any tips on how to accomplish it? I wouldn't mind getting my hands dirty",
            "created_at": "2021-10-27T12:17:11Z",
            "html_url": "https://github.com/cython/cython/issues/3434#issuecomment-952865510",
            "id": 952865510,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3434",
            "node_id": "IC_kwDOABDGAc44y5Lm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/952865510/reactions"
            },
            "updated_at": "2021-10-27T12:17:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/952865510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13364471?v=4",
                "events_url": "https://api.github.com/users/ibarrond/events{/privacy}",
                "followers_url": "https://api.github.com/users/ibarrond/followers",
                "following_url": "https://api.github.com/users/ibarrond/following{/other_user}",
                "gists_url": "https://api.github.com/users/ibarrond/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ibarrond",
                "id": 13364471,
                "login": "ibarrond",
                "node_id": "MDQ6VXNlcjEzMzY0NDcx",
                "organizations_url": "https://api.github.com/users/ibarrond/orgs",
                "received_events_url": "https://api.github.com/users/ibarrond/received_events",
                "repos_url": "https://api.github.com/users/ibarrond/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ibarrond/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ibarrond/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ibarrond"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "So I did have a ~75% complete prototype, then there was an accident with `find -delete` and now I don't have a prototype (and I haven't been motivated to pick it up again). That doesn;t help you.\r\n\r\n> I find the code duplication (redefining all the classes of a C++ header file in a .pxd file) quite cumbersome\r\n\r\nThis wasn't what I was proposing doing - I was suggesting that Cython could the .pxd definitions and use them to generate cdef wrapper class. What I think you're looking for involves parsing C++ files. That's a fairly tricky task and not one that's in scope for Cython. If you were looking to do that then I think clang has a fairly good interface for using parsed code.\r\n\r\nThe Cython \".pxd to cdef wrapper\"  prototype turned out to need a couple of passes: you essentially have to declare all the autowrapped classes, and then generate the function definitions once they're all known. There's a bit of a mismatch between C++ overloaded functions and Python functions (where you can have one definition per name). It also hit a bunch of limitations in Cythons pyx utility-code support - getting types to appear in the right scope can be fiddly.\r\n\r\nThere's at least one tool that does what I was proposing: https://github.com/uweschmitt/autowrap. If I were attempting to do it again I'd probably try to integrate this tool rather than writing it from scratch.",
            "created_at": "2021-10-27T17:39:32Z",
            "html_url": "https://github.com/cython/cython/issues/3434#issuecomment-953160181",
            "id": 953160181,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3434",
            "node_id": "IC_kwDOABDGAc440BH1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/953160181/reactions"
            },
            "updated_at": "2021-10-27T17:39:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/953160181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> If you were looking to do that then I think clang has a fairly good interface for using parsed code.\r\n\r\nBut maybe look at https://github.com/earowley/pxdgen (never used it so can't comment on the quality though) or one of the tools discussed here: https://github.com/cython/cython/wiki/AutoPxd",
            "created_at": "2021-10-27T17:40:39Z",
            "html_url": "https://github.com/cython/cython/issues/3434#issuecomment-953161080",
            "id": 953161080,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3434",
            "node_id": "IC_kwDOABDGAc440BV4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/953161080/reactions"
            },
            "updated_at": "2021-10-27T17:43:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/953161080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Off topic and maybe heresy, but @ibarrond you may want to consider using a tool like pybind11, cffi, or cppyy. These start off with a design philosophy built around parsing header files, where in my opinion any tool built on top of Cython, which parses something closer to python code, will eventually have some kind of impedance mismatch.",
            "created_at": "2021-10-28T06:39:14Z",
            "html_url": "https://github.com/cython/cython/issues/3434#issuecomment-953546085",
            "id": 953546085,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3434",
            "node_id": "IC_kwDOABDGAc441fVl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/953546085/reactions"
            },
            "updated_at": "2021-10-28T06:39:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/953546085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "NONE",
            "body": "@da-woods Thanks for the hints! If I'm allowed to dream big, a solution that does the `.h` to `.pxd` conversion (some auto pxd as you pointed out) and then a `.pxd` to `.pyx` wrapper class generation (the original purpose of this Issue) would be just awesome. While the task seems gargantuan, playing a bit with these solutions to come up with a minimal working pipeline would be quite nice indeed.\r\n\r\n@mattip cffi is only for C (no C++ allowed). pybind11 relies heavily on C++land and, to the best of my knowledge, C++ speed for interactions between Python objects is complex to achieve. Now, it is the first time I see `cppyy`, and it looks quite promising!",
            "created_at": "2021-10-28T08:46:58Z",
            "html_url": "https://github.com/cython/cython/issues/3434#issuecomment-953639839",
            "id": 953639839,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3434",
            "node_id": "IC_kwDOABDGAc4412Of",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/953639839/reactions"
            },
            "updated_at": "2021-10-28T08:46:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/953639839",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13364471?v=4",
                "events_url": "https://api.github.com/users/ibarrond/events{/privacy}",
                "followers_url": "https://api.github.com/users/ibarrond/followers",
                "following_url": "https://api.github.com/users/ibarrond/following{/other_user}",
                "gists_url": "https://api.github.com/users/ibarrond/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ibarrond",
                "id": 13364471,
                "login": "ibarrond",
                "node_id": "MDQ6VXNlcjEzMzY0NDcx",
                "organizations_url": "https://api.github.com/users/ibarrond/orgs",
                "received_events_url": "https://api.github.com/users/ibarrond/received_events",
                "repos_url": "https://api.github.com/users/ibarrond/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ibarrond/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ibarrond/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ibarrond"
            }
        },
        {
            "author_association": "NONE",
            "body": "@da-woods I represent OpenMS, who have just taken over the development of Autowrap. We would be very happy to see this tool integrated more deeply into Cython.",
            "created_at": "2022-01-20T11:02:13Z",
            "html_url": "https://github.com/cython/cython/issues/3434#issuecomment-1017373684",
            "id": 1017373684,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3434",
            "node_id": "IC_kwDOABDGAc48o-P0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1017373684/reactions"
            },
            "updated_at": "2022-01-20T11:02:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1017373684",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146827?v=4",
                "events_url": "https://api.github.com/users/poshul/events{/privacy}",
                "followers_url": "https://api.github.com/users/poshul/followers",
                "following_url": "https://api.github.com/users/poshul/following{/other_user}",
                "gists_url": "https://api.github.com/users/poshul/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/poshul",
                "id": 146827,
                "login": "poshul",
                "node_id": "MDQ6VXNlcjE0NjgyNw==",
                "organizations_url": "https://api.github.com/users/poshul/orgs",
                "received_events_url": "https://api.github.com/users/poshul/received_events",
                "repos_url": "https://api.github.com/users/poshul/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/poshul/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/poshul/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/poshul"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "IIUC, `autowrap` uses Cython's own parse tree for the generation, and then generates Cython code for the result.\r\n\r\nThat should make it possible to turn it into a tree transformation, generate Cython utility code, and then merge that into the current module. Tree transforms represent the different steps in the compiler pipeline, and the rest is a similar process to the way the Python wrapper for memory views is currently implemented.\r\n\r\nIt seems ok to leave it as an external tool for now, but I agree that it could tie more into the way Cython works internally. It could just become an optional dependency.",
            "created_at": "2022-01-20T12:03:29Z",
            "html_url": "https://github.com/cython/cython/issues/3434#issuecomment-1017428489",
            "id": 1017428489,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3434",
            "node_id": "IC_kwDOABDGAc48pLoJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1017428489/reactions"
            },
            "updated_at": "2022-01-20T12:03:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1017428489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3434/comments",
    "created_at": "2020-03-15T20:55:38Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13364471?v=4",
                "events_url": "https://api.github.com/users/ibarrond/events{/privacy}",
                "followers_url": "https://api.github.com/users/ibarrond/followers",
                "following_url": "https://api.github.com/users/ibarrond/following{/other_user}",
                "gists_url": "https://api.github.com/users/ibarrond/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ibarrond",
                "id": 13364471,
                "login": "ibarrond",
                "node_id": "MDQ6VXNlcjEzMzY0NDcx",
                "organizations_url": "https://api.github.com/users/ibarrond/orgs",
                "received_events_url": "https://api.github.com/users/ibarrond/received_events",
                "repos_url": "https://api.github.com/users/ibarrond/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ibarrond/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ibarrond/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ibarrond"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T06:39:14Z",
            "event": "mentioned",
            "id": 5531808042,
            "node_id": "MEE_lADOABDGAc4ireikzwAAAAFJuLEq",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5531808042"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13364471?v=4",
                "events_url": "https://api.github.com/users/ibarrond/events{/privacy}",
                "followers_url": "https://api.github.com/users/ibarrond/followers",
                "following_url": "https://api.github.com/users/ibarrond/following{/other_user}",
                "gists_url": "https://api.github.com/users/ibarrond/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ibarrond",
                "id": 13364471,
                "login": "ibarrond",
                "node_id": "MDQ6VXNlcjEzMzY0NDcx",
                "organizations_url": "https://api.github.com/users/ibarrond/orgs",
                "received_events_url": "https://api.github.com/users/ibarrond/received_events",
                "repos_url": "https://api.github.com/users/ibarrond/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ibarrond/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ibarrond/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ibarrond"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T06:39:15Z",
            "event": "subscribed",
            "id": 5531808046,
            "node_id": "SE_lADOABDGAc4ireikzwAAAAFJuLEu",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5531808046"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T08:46:58Z",
            "event": "mentioned",
            "id": 5532525468,
            "node_id": "MEE_lADOABDGAc4ireikzwAAAAFJw6Oc",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5532525468"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T08:46:58Z",
            "event": "subscribed",
            "id": 5532525478,
            "node_id": "SE_lADOABDGAc4ireikzwAAAAFJw6Om",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5532525478"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T08:46:58Z",
            "event": "mentioned",
            "id": 5532525487,
            "node_id": "MEE_lADOABDGAc4ireikzwAAAAFJw6Ov",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5532525487"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-10-28T08:46:58Z",
            "event": "subscribed",
            "id": 5532525495,
            "node_id": "SE_lADOABDGAc4ireikzwAAAAFJw6O3",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5532525495"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-20T11:02:13Z",
            "event": "mentioned",
            "id": 5923945977,
            "node_id": "MEE_lADOABDGAc4ireikzwAAAAFhGD35",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5923945977"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-20T11:02:13Z",
            "event": "subscribed",
            "id": 5923945982,
            "node_id": "SE_lADOABDGAc4ireikzwAAAAFhGD3-",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5923945982"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-20T11:48:31Z",
            "event": "labeled",
            "id": 5924238532,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "LE_lADOABDGAc4ireikzwAAAAFhHLTE",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5924238532"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-01-20T11:48:31Z",
            "event": "labeled",
            "id": 5924238537,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "LE_lADOABDGAc4ireikzwAAAAFhHLTJ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5924238537"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3434/events",
    "html_url": "https://github.com/cython/cython/issues/3434",
    "id": 581822628,
    "labels": [
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3434/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1ODE4MjI2Mjg=",
    "number": 3434,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/cython/cython/issues/3434/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/3434/timeline",
    "title": "Auto-generation of wrappers for C structs/C++ classes",
    "updated_at": "2022-01-20T12:03:30Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3434",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}