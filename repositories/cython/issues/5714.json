{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nIn my code, I would like to import C++ standard-library classes in pure python mode without needing to use Python classes.\r\n\r\n### Describe the solution you'd like.\r\n\r\nFor example, the definition of `pair` is as given in `utility.pxd` is:\r\n\r\n```cython\r\ncdef extern from \"<utility>\" namespace \"std\" nogil:\r\n    cdef cppclass pair[T, U]:\r\n        ctypedef T first_type\r\n        ctypedef U second_type\r\n        T first\r\n        U second\r\n        pair() except +\r\n        pair(pair&) except +\r\n        pair(T&, U&) except +\r\n        bint operator==(pair&, pair&)\r\n        bint operator!=(pair&, pair&)\r\n        bint operator<(pair&, pair&)\r\n        bint operator>(pair&, pair&)\r\n        bint operator<=(pair&, pair&)\r\n        bint operator>=(pair&, pair&)\r\n\r\n```\r\n\r\nThen it's possible to implement that class in Python. Something along the lines of:\r\n\r\n```python\r\n\r\nclass pair(Generic[T, U]):\r\n    \r\n    def __new__(cls, *args, **kwargs):\r\n        if len(args) + len(lkwargs) == 0: ...\r\n        if len(args) == 1 and len(lkwargs) == 0 and isinstance(args[0], pair): ...\r\n\r\n        return super().__new__(cls, *args, **kwargs)\r\n    \r\n    def __init__(self, first: T, second: U, /):\r\n        self.first = first\r\n        self.second = second\r\n        \r\n    def __to_list(self):\r\n        return [self.first, self.second]\r\n\r\n    def __eq__(self, other):\r\n        if type(other) != pair: \r\n            return NotImplemented\r\n        return self.__to_list() == other.__to_list()\r\n\r\n    def __gt__(self, other):\r\n        if type(other) != pair:\r\n            return NotImplemented\r\n        return self.__to_list() > other.__to_list()\r\n\r\n    ... \r\n```\r\n\r\nThis could be done for at least some of the classes such as `vector`, `bool` and `map`.\r\n\r\n### Describe alternatives you've considered.\r\n\r\nUsing Python types such as tuples, lists, dicts...\r\nAnother option is to use `if cython.compiled: ... else: ...` and define just the required class attributes/functions, but this is ugly.\r\nA third option is to use templates/fused-types and automatically create python-wrappers for these classes (like SWIG does). The problem there is that it can't be used when importing from `cython.Shadow`.\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5714/comments",
    "created_at": "2023-09-21T21:17:51Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4324329?v=4",
                "events_url": "https://api.github.com/users/erezinman/events{/privacy}",
                "followers_url": "https://api.github.com/users/erezinman/followers",
                "following_url": "https://api.github.com/users/erezinman/following{/other_user}",
                "gists_url": "https://api.github.com/users/erezinman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/erezinman",
                "id": 4324329,
                "login": "erezinman",
                "node_id": "MDQ6VXNlcjQzMjQzMjk=",
                "organizations_url": "https://api.github.com/users/erezinman/orgs",
                "received_events_url": "https://api.github.com/users/erezinman/received_events",
                "repos_url": "https://api.github.com/users/erezinman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/erezinman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/erezinman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/erezinman"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-09-21T21:25:09Z",
            "event": "renamed",
            "id": 10440523557,
            "node_id": "RTE_lADOABDGAc5xtmcazwAAAAJuTb8l",
            "performed_via_github_app": null,
            "rename": {
                "from": "[ENH] Add `cimport`-compatible python classes",
                "to": "[ENH] Add `cimport`-compatible python classes for Pure Python mode"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/10440523557"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5714/events",
    "html_url": "https://github.com/cython/cython/issues/5714",
    "id": 1907779354,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5714/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5xtmca",
    "number": 5714,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5714/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5714/timeline",
    "title": "[ENH] Add `cimport`-compatible python classes for Pure Python mode",
    "updated_at": "2023-09-21T21:25:09Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5714",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4324329?v=4",
        "events_url": "https://api.github.com/users/erezinman/events{/privacy}",
        "followers_url": "https://api.github.com/users/erezinman/followers",
        "following_url": "https://api.github.com/users/erezinman/following{/other_user}",
        "gists_url": "https://api.github.com/users/erezinman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/erezinman",
        "id": 4324329,
        "login": "erezinman",
        "node_id": "MDQ6VXNlcjQzMjQzMjk=",
        "organizations_url": "https://api.github.com/users/erezinman/orgs",
        "received_events_url": "https://api.github.com/users/erezinman/received_events",
        "repos_url": "https://api.github.com/users/erezinman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/erezinman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/erezinman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/erezinman"
    }
}