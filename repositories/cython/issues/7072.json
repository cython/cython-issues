{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\n\n**Preface**\n\nLeveraging cython to work with python strings from the [current documentation](https://cython.readthedocs.io/en/stable/src/tutorial/strings.html) alone is challenging. Part of the difficulty of documenting cython is addressing multiple audiences. From what I can tell, the documentation, in general, needs to come from several view points:\n\n1. How do i write cython code in cython files (.pyx) and headers (.pxd).\n2. How do i write / use cython code in python files (i.e. pure python mode #4187) (.py).\n3. How do i convert a function originally written in python to cython?\n    1. e.g. adding static typing for low effort modest speed improvements in general.\n4. How do i communicate between cython and python (i.e. due to type differences)?\n5. How do i communicate between cython and C (or C++)?\n6. How do I use / leverage the Cpython C-API to minimize interaction with python overhead for further optimizations / improvements?\n\n\n**Problems with the Current String / Unicode Documentation**\n\n1. The primary examples use a static global variable `hello_world`, already a char* type defined in a cython file, to construct a new string of the same size. This isn't exactly practical if you intend to receive variable length python strings. A more dynamic example would provide more value.\n2. Guidelines on working with Memoryviews with strings could be improved. Specifically demonstrating how to construct mutable and immutable memoryviews from python strings, and what types are used to receive those in cython:\n\n```python\n\n# from python file\ndef immutable_view(s: str) -> memoryview:\n    b: bytes = s.encode(\"utf8\")\n    m = memoryview(b)\n\n    return m\n\n\ndef mutable_view(s: str) -> memoryview:\n    b: bytes = s.encode(\"utf8\")\n    ba = bytearray(b)\n    m = memoryview(ba)\n\n    return m\n\n\n# cython file counterparts\ncpdef void receive_immutable_view(const unsigned char[:] s):\n    ...\n\ncpdef void receive_mutable_view(unsigned char[:] s):\n    ...\n\n```\n3. [Encoding text to bytes section](https://cython.readthedocs.io/en/stable/src/tutorial/strings.html#encoding-text-to-bytes) should not be recommended, or at least come with a giant warning. This section tells us we can implicitly convert a byte string to a c string, somewhat like this:\n```cython\ncpdef receive(str s):\n    cdef:\n        bytes py_byte_string = s.encode(\"utf8\")\n        char* c_string = py_byte_string\n\n```\nHowever, due to a python implementation detail, this can go horribly wrong with single character strings, due to [Cpython string interning](https://github.com/python/cpython/blob/main/InternalDocs/string_interning.md#singletons), where all possible 256 single character values are implemented as singletons.\n\nI learned this the hard way, trying to implement a rather straightforward method to perform complement / reverse complement (for DNA sequences) function, which converts a c string in place. In other words, I was mutating the singletons whenever a single character string was passed, which would also effect a pure python implementation of the same functionality.\n\nNow, this is not a bug. But it certainly is surprising to observe and even more difficult to debug. At minimum, the only way this should ever be used, is as a constant c string (`const char* c_string = py_byte_string`), to avoid mutating interned single character strings.\n\n\n**Next Steps**\n\nI would be willing to help contribute to improve the documentation in regards to using strings in cython. I have written [common helper functions](https://github.com/Spill-Tea/DesignerDNA/blob/main/src/designer_dna/headers/common.pxd) to convert python strings to c strings, that avoids the pesky unsafe cpython interning, and dynamically handles python string objects directly.\n\nLet me know what you think, and I can create a PR.\n\n### Describe the solution you'd like.\n\n_No response_\n\n### Describe alternatives you've considered.\n\n_No response_\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "About point 3: really you should treat _any_ string as immutable, since it's not just single character strings that end up interned by the interpreter.  It'd be hard for Cython to suddenly change that, but we probably should be warning about coercing to a non-const pointer.  If you want to mutate it then you should be using bytearray rather than bytes.\n\nImprovements to the documentation would definitely be welcome - especially around memoryviews (which I think should be most people's first resort). I'd encourage multiple smaller PRs rather than one huge PR just because it's easier for both sides (I'm a hypocrite though and don't always do this myself ;-).\n\nI suspect your `struct StringView` approach wouldn't be what we'd recommend to most people just because it requires a reasonable amount of discipline tracking the ownership. I'd also claim it's misnamed and a \"string view\" shouldn't have ownership of the data.",
            "created_at": "2025-08-04T19:51:19Z",
            "html_url": "https://github.com/cython/cython/issues/7072#issuecomment-3152133556",
            "id": 3152133556,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7072",
            "node_id": "IC_kwDOABDGAc674b20",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3152133556/reactions"
            },
            "updated_at": "2025-08-04T19:51:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3152133556",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you @da-woods . Yeah, I'm not recommending modifications to cpython. String interning is an internal design choice implementation that should inform how we recommend correctly leveraging cython on strings.\n\nI also agree my `struct StringView` is incorrectly named. I could instead make this a cython class, that implements a `__dealloc__` method to automatically handle freeing the memory. That would likely curtail any problems with users more familiar with python.\n\nI guess, I was hoping a portion of the documentation could be less afraid of c / c++  syntax, and explicit control of memory and pointers.\n\n",
            "created_at": "2025-08-04T20:59:06Z",
            "html_url": "https://github.com/cython/cython/issues/7072#issuecomment-3152391841",
            "id": 3152391841,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7072",
            "node_id": "IC_kwDOABDGAc675a6h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3152391841/reactions"
            },
            "updated_at": "2025-08-04T20:59:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3152391841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61038372?v=4",
                "events_url": "https://api.github.com/users/Spill-Tea/events{/privacy}",
                "followers_url": "https://api.github.com/users/Spill-Tea/followers",
                "following_url": "https://api.github.com/users/Spill-Tea/following{/other_user}",
                "gists_url": "https://api.github.com/users/Spill-Tea/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Spill-Tea",
                "id": 61038372,
                "login": "Spill-Tea",
                "node_id": "MDQ6VXNlcjYxMDM4Mzcy",
                "organizations_url": "https://api.github.com/users/Spill-Tea/orgs",
                "received_events_url": "https://api.github.com/users/Spill-Tea/received_events",
                "repos_url": "https://api.github.com/users/Spill-Tea/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Spill-Tea/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Spill-Tea/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Spill-Tea",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7072/comments",
    "created_at": "2025-08-04T08:52:44Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-08-04T20:59:07Z",
            "event": "mentioned",
            "id": 18978394458,
            "node_id": "MEE_lADOABDGAc7EA-UZzwAAAARrM1Fa",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/18978394458"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-08-04T20:59:07Z",
            "event": "subscribed",
            "id": 18978394467,
            "node_id": "SE_lADOABDGAc7EA-UZzwAAAARrM1Fj",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/18978394467"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7072/events",
    "html_url": "https://github.com/cython/cython/issues/7072",
    "id": 3288589593,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7072/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc7EA-UZ",
    "number": 7072,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7072/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7072/timeline",
    "title": "[ENH] Improve Cython Strings/Unicode Documentation",
    "type": null,
    "updated_at": "2025-08-04T20:59:06Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7072",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/61038372?v=4",
        "events_url": "https://api.github.com/users/Spill-Tea/events{/privacy}",
        "followers_url": "https://api.github.com/users/Spill-Tea/followers",
        "following_url": "https://api.github.com/users/Spill-Tea/following{/other_user}",
        "gists_url": "https://api.github.com/users/Spill-Tea/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Spill-Tea",
        "id": 61038372,
        "login": "Spill-Tea",
        "node_id": "MDQ6VXNlcjYxMDM4Mzcy",
        "organizations_url": "https://api.github.com/users/Spill-Tea/orgs",
        "received_events_url": "https://api.github.com/users/Spill-Tea/received_events",
        "repos_url": "https://api.github.com/users/Spill-Tea/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Spill-Tea/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Spill-Tea/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Spill-Tea",
        "user_view_type": "public"
    }
}