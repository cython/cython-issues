{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Some set constants can be replaced by frozensets, e.g. in cases like `x in {1,2,3}`. This would allow them to become global constants, created once at module init time. There is already a framework for merging tuple and string constants, see `TupleNode`. The `ConstantFolding` transformation could detect these cases and set a flag attribute on the `SetNode` instances that would trigger constant frozenset behaviour.\r\n\r\nOther potential candidates:\r\n```python\r\n>>> frozenset((1,2,3)) | {2,3,4}  # imagine one side being non-constant\r\nfrozenset([1, 2, 3, 4])\r\n>>> {3,4,5} | frozenset((1,2,3))\r\nset([1, 2, 3, 4, 5])\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Hi scoder. I'm new to cython and I'm interested in this issue\r\nAs you mentioned, we're already deduping tuple constants.\r\n\r\nFor example. in this case\r\n```\r\ndef f():\r\n    a = (1, 2, 3)\r\n    b = (1, 2, 3)\r\n```\r\nWe're referring to the same object\r\n```\r\n  /* \"tuple.pyx\":2\r\n * def f():\r\n *     a = (1, 2, 3)             # <<<<<<<<<<<<<<\r\n *     b = (1, 2, 3)\r\n * \r\n */\r\n  __Pyx_INCREF(__pyx_tuple_);\r\n  __pyx_v_a = __pyx_tuple_;\r\n\r\n  /* \"tuple.pyx\":3\r\n * def f():\r\n *     a = (1, 2, 3)\r\n *     b = (1, 2, 3)             # <<<<<<<<<<<<<<\r\n * \r\n * #a = {1, 2, 3}\r\n */\r\n  __Pyx_INCREF(__pyx_tuple_);\r\n  __pyx_v_b = __pyx_tuple_;\r\n```\r\n\r\nI'm reading the code for `TupleNode` and I found\r\n```\r\n        if self.is_literal or self.is_partly_literal:\r\n            # The \"mult_factor\" is part of the deduplication if it is also constant, i.e. when\r\n            # we deduplicate the multiplied result.  Otherwise, only deduplicate the constant part.\r\n            dedup_key = make_dedup_key(self.type, [self.mult_factor if self.is_literal else None] + self.args)\r\n            tuple_target = code.get_py_const(py_object_type, 'tuple', cleanup_level=2, dedup_key=dedup_key)\r\n            const_code = code.get_cached_constants_writer(tuple_target)\r\n            if const_code is not None:\r\n                # constant is not yet initialised\r\n                const_code.mark_pos(self.pos)\r\n                self.generate_sequence_packing_code(const_code, tuple_target, plain=not self.is_literal)\r\n                const_code.put_giveref(tuple_target, py_object_type)\r\n```\r\n\r\nIs here the place for deduping tuple. and I should go deeper for code at here?\r\n\r\nThank you!\r\n",
            "created_at": "2021-04-04T14:14:10Z",
            "html_url": "https://github.com/cython/cython/issues/2741#issuecomment-813040488",
            "id": 813040488,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2741",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzA0MDQ4OA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-04T14:14:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/813040488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3221521?v=4",
                "events_url": "https://api.github.com/users/Endle/events{/privacy}",
                "followers_url": "https://api.github.com/users/Endle/followers",
                "following_url": "https://api.github.com/users/Endle/following{/other_user}",
                "gists_url": "https://api.github.com/users/Endle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Endle",
                "id": 3221521,
                "login": "Endle",
                "node_id": "MDQ6VXNlcjMyMjE1MjE=",
                "organizations_url": "https://api.github.com/users/Endle/orgs",
                "received_events_url": "https://api.github.com/users/Endle/received_events",
                "repos_url": "https://api.github.com/users/Endle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Endle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Endle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Endle"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "@Endle That definitely looks right to me. I think the harder part of this issue will be identifying which sets to freeze",
            "created_at": "2021-04-04T15:58:10Z",
            "html_url": "https://github.com/cython/cython/issues/2741#issuecomment-813056668",
            "id": 813056668,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2741",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzA1NjY2OA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-04T15:58:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/813056668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I found an interesting case after my first glance (I'm not sure it if's related to this issue)\r\nSee this code\r\n```\r\ndef f():\r\n    a = (1, 2, 3)\r\n    b = (1, 2, 3)\r\n    c = tuple(1, 2, 3)\r\n```\r\n\r\nWe know `a, b, c` are identical. However, cython result is\r\n```\r\n * def f():\r\n *     a = (1, 2, 3)             # <<<<<<<<<<<<<<\r\n *     b = (1, 2, 3)\r\n *     c = tuple(1, 2, 3)\r\n */\r\n  __Pyx_INCREF(__pyx_tuple_);\r\n  __pyx_v_a = __pyx_tuple_;\r\n\r\n  /* \"tuple.pyx\":3\r\n * def f():\r\n *     a = (1, 2, 3)\r\n *     b = (1, 2, 3)             # <<<<<<<<<<<<<<\r\n *     c = tuple(1, 2, 3)\r\n * \r\n */\r\n  __Pyx_INCREF(__pyx_tuple_);\r\n  __pyx_v_b = __pyx_tuple_;\r\n\r\n  /* \"tuple.pyx\":4\r\n *     a = (1, 2, 3)\r\n *     b = (1, 2, 3)\r\n *     c = tuple(1, 2, 3)             # <<<<<<<<<<<<<<\r\n * \r\n * #a = {1, 2, 3}\r\n */\r\n  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyTuple_Type)), __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_1);\r\n  __pyx_v_c = ((PyObject*)__pyx_t_1);\r\n  __pyx_t_1 = 0;\r\n\r\n```\r\n\r\nIt's making an extra function call. The `tuple` keyword will be considered as \r\n`<Cython.Compiler.ExprNodes.SimpleCallNode object at 0x7f15633615e0>`\r\n\r\n\r\nFor `frozenset`, I think the logic lies in `_handle_simple_function_frozenset` and I would have a deeper look at it\r\n\r\nThank you\r\n\r\n\r\nEdit: I mean `OptimizeBuiltinCalls._handle_simple_function_frozenset`",
            "created_at": "2021-04-05T07:13:02Z",
            "html_url": "https://github.com/cython/cython/issues/2741#issuecomment-813237936",
            "id": 813237936,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2741",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzIzNzkzNg==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-05T07:16:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/813237936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3221521?v=4",
                "events_url": "https://api.github.com/users/Endle/events{/privacy}",
                "followers_url": "https://api.github.com/users/Endle/followers",
                "following_url": "https://api.github.com/users/Endle/following{/other_user}",
                "gists_url": "https://api.github.com/users/Endle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Endle",
                "id": 3221521,
                "login": "Endle",
                "node_id": "MDQ6VXNlcjMyMjE1MjE=",
                "organizations_url": "https://api.github.com/users/Endle/orgs",
                "received_events_url": "https://api.github.com/users/Endle/received_events",
                "repos_url": "https://api.github.com/users/Endle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Endle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Endle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Endle"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `tuple(1, 2, 3)`\r\n\r\nGives me a `TypeError` at runtime, too many arguments. Same in Cython.",
            "created_at": "2021-04-05T07:58:40Z",
            "html_url": "https://github.com/cython/cython/issues/2741#issuecomment-813258465",
            "id": 813258465,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2741",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzI1ODQ2NQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-05T07:58:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/813258465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > `tuple(1, 2, 3)`\r\n> \r\n> Gives me a `TypeError` at runtime, too many arguments. Same in Cython.\r\n\r\nSorry, my bad.\r\n```\r\n  /* \"tuple.pyx\":4\r\n *     a = (1, 2, 3)\r\n *     b = (1, 2, 3)\r\n *     c = tuple((1, 2, 3))             # <<<<<<<<<<<<<<\r\n * \r\n * #a = {1, 2, 3}\r\n */\r\n  __Pyx_INCREF(__pyx_tuple_);\r\n  __pyx_v_c = __pyx_tuple_;\r\n```\r\n\r\nIf I create a tuple correctly, cython will re-use the same tuple object as expected.",
            "created_at": "2021-04-05T10:45:35Z",
            "html_url": "https://github.com/cython/cython/issues/2741#issuecomment-813333148",
            "id": 813333148,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2741",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzMzMzE0OA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-05T10:45:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/813333148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3221521?v=4",
                "events_url": "https://api.github.com/users/Endle/events{/privacy}",
                "followers_url": "https://api.github.com/users/Endle/followers",
                "following_url": "https://api.github.com/users/Endle/following{/other_user}",
                "gists_url": "https://api.github.com/users/Endle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Endle",
                "id": 3221521,
                "login": "Endle",
                "node_id": "MDQ6VXNlcjMyMjE1MjE=",
                "organizations_url": "https://api.github.com/users/Endle/orgs",
                "received_events_url": "https://api.github.com/users/Endle/received_events",
                "repos_url": "https://api.github.com/users/Endle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Endle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Endle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Endle"
            }
        },
        {
            "author_association": "NONE",
            "body": "I created a draft at https://github.com/Endle/cython/pull/1\r\n\r\nWith some ugly hacks, I could let cython share the same frozenset object\r\n\r\n```\r\n/* #### Code section: cached_constants ### */\r\n\r\nstatic CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {\r\n  __Pyx_RefNannyDeclarations\r\n  __Pyx_RefNannySetupContext(\"__Pyx_InitCachedConstants\", 0);\r\n\r\n  /* \"set3.pyx\":2\r\n * a = set((4, 5))\r\n * b = frozenset((4, 5, 6))             # <<<<<<<<<<<<<<\r\n * c = frozenset((4, 5, 6))\r\n * print(b)\r\n */\r\n  __pyx_tuple__2 = PyTuple_Pack(3, __pyx_int_4, __pyx_int_5, __pyx_int_6); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 2, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_tuple__2);\r\n  __Pyx_GIVEREF(__pyx_tuple__2);\r\n  __pyx_frozenset_ = PyFrozenSet_New(__pyx_tuple__2); if (unlikely(!__pyx_frozenset_)) __PYX_ERR(0, 2, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_frozenset_);\r\n  __Pyx_RefNannyFinishContext();\r\n  return 0;\r\n  __pyx_L1_error:;\r\n  __Pyx_RefNannyFinishContext();\r\n  return -1;\r\n}\r\n```\r\nThen\r\n```\r\n  /* \"set3.pyx\":2\r\n * a = set((4, 5))\r\n * b = frozenset((4, 5, 6))             # <<<<<<<<<<<<<<\r\n * c = frozenset((4, 5, 6))\r\n * print(b)\r\n */\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_b, __pyx_frozenset_) < 0) __PYX_ERR(0, 2, __pyx_L1_error)\r\n\r\n  /* \"set3.pyx\":3\r\n * a = set((4, 5))\r\n * b = frozenset((4, 5, 6))\r\n * c = frozenset((4, 5, 6))             # <<<<<<<<<<<<<<\r\n * print(b)\r\n * print(c)\r\n */\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_c, __pyx_frozenset_) < 0) __PYX_ERR(0, 3, __pyx_L1_error)\r\n\r\n```",
            "created_at": "2021-04-06T07:37:15Z",
            "html_url": "https://github.com/cython/cython/issues/2741#issuecomment-813900063",
            "id": 813900063,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2741",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzkwMDA2Mw==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-06T07:37:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/813900063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3221521?v=4",
                "events_url": "https://api.github.com/users/Endle/events{/privacy}",
                "followers_url": "https://api.github.com/users/Endle/followers",
                "following_url": "https://api.github.com/users/Endle/following{/other_user}",
                "gists_url": "https://api.github.com/users/Endle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Endle",
                "id": 3221521,
                "login": "Endle",
                "node_id": "MDQ6VXNlcjMyMjE1MjE=",
                "organizations_url": "https://api.github.com/users/Endle/orgs",
                "received_events_url": "https://api.github.com/users/Endle/received_events",
                "repos_url": "https://api.github.com/users/Endle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Endle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Endle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Endle"
            }
        },
        {
            "author_association": "NONE",
            "body": "I need some time to understand `ref` and other code generation components to clean up my PR ",
            "created_at": "2021-04-06T07:38:48Z",
            "html_url": "https://github.com/cython/cython/issues/2741#issuecomment-813901079",
            "id": 813901079,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2741",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzkwMTA3OQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-06T07:38:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/813901079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3221521?v=4",
                "events_url": "https://api.github.com/users/Endle/events{/privacy}",
                "followers_url": "https://api.github.com/users/Endle/followers",
                "following_url": "https://api.github.com/users/Endle/following{/other_user}",
                "gists_url": "https://api.github.com/users/Endle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Endle",
                "id": 3221521,
                "login": "Endle",
                "node_id": "MDQ6VXNlcjMyMjE1MjE=",
                "organizations_url": "https://api.github.com/users/Endle/orgs",
                "received_events_url": "https://api.github.com/users/Endle/received_events",
                "repos_url": "https://api.github.com/users/Endle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Endle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Endle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Endle"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2741/comments",
    "created_at": "2018-11-30T08:51:53Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-11-30T08:51:53Z",
            "event": "labeled",
            "id": 1997370845,
            "label": {
                "color": "1d76db",
                "name": "good first issue"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE5OTczNzA4NDU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1997370845"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-11-30T08:51:53Z",
            "event": "labeled",
            "id": 1997370846,
            "label": {
                "color": "444444",
                "name": "Optimization"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE5OTczNzA4NDY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1997370846"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-11-30T08:51:53Z",
            "event": "labeled",
            "id": 1997370847,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE5OTczNzA4NDc=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1997370847"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3221521?v=4",
                "events_url": "https://api.github.com/users/Endle/events{/privacy}",
                "followers_url": "https://api.github.com/users/Endle/followers",
                "following_url": "https://api.github.com/users/Endle/following{/other_user}",
                "gists_url": "https://api.github.com/users/Endle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Endle",
                "id": 3221521,
                "login": "Endle",
                "node_id": "MDQ6VXNlcjMyMjE1MjE=",
                "organizations_url": "https://api.github.com/users/Endle/orgs",
                "received_events_url": "https://api.github.com/users/Endle/received_events",
                "repos_url": "https://api.github.com/users/Endle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Endle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Endle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Endle"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-04T15:58:10Z",
            "event": "mentioned",
            "id": 4549249540,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDU0OTI0OTU0MA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4549249540"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3221521?v=4",
                "events_url": "https://api.github.com/users/Endle/events{/privacy}",
                "followers_url": "https://api.github.com/users/Endle/followers",
                "following_url": "https://api.github.com/users/Endle/following{/other_user}",
                "gists_url": "https://api.github.com/users/Endle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Endle",
                "id": 3221521,
                "login": "Endle",
                "node_id": "MDQ6VXNlcjMyMjE1MjE=",
                "organizations_url": "https://api.github.com/users/Endle/orgs",
                "received_events_url": "https://api.github.com/users/Endle/received_events",
                "repos_url": "https://api.github.com/users/Endle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Endle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Endle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Endle"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-04T15:58:10Z",
            "event": "subscribed",
            "id": 4549249541,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1NDkyNDk1NDE=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4549249541"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2741/events",
    "html_url": "https://github.com/cython/cython/issues/2741",
    "id": 386092447,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556272,
            "name": "Optimization",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNzI=",
            "url": "https://api.github.com/repos/cython/cython/labels/Optimization"
        },
        {
            "color": "1d76db",
            "default": true,
            "description": null,
            "id": 414805682,
            "name": "good first issue",
            "node_id": "MDU6TGFiZWw0MTQ4MDU2ODI=",
            "url": "https://api.github.com/repos/cython/cython/labels/good%20first%20issue"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2741/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzODYwOTI0NDc=",
    "number": 2741,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Cache constant frozen-sets",
    "updated_at": "2021-04-06T07:38:48Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2741",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}