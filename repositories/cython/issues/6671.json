{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe the bug\n\npython-dev apparently takes care to not break `#include \"pycore_frame.h\"` any more (thanks for that), but the ABI misuse in the `abitests.srctree` now fails to compile:\n<details>\n\n```\nFAIL: runTest (__mp_main__.EndToEndTest.runTest)\n[4] End-to-end abitests\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/runner/work/cython/cython/runtests.py\", line 2064, in runTest\n    self.assertEqual(0, res, \"non-zero exit status, last output was:\\n%r\\n-- stdout:%s\\n-- stderr:%s\\n\" % (\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        ' '.join(command), out[-1], err[-1]))\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: 0 != 1 : non-zero exit status, last output was:\n'/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/bin/python setup.py build_ext --inplace'\n-- stdout:Compiling debug.pyx because it changed.\nCompiling freethread.pyx because it changed.\nCompiling trace.pyx because it changed.\n[1/3] Cythonizing debug.pyx\n[2/3] Cythonizing freethread.pyx\n[3/3] Cythonizing trace.pyx\nrunning build_ext\nbuilding 'debug' extension\ncreating build/temp.linux-x86_64-cpython-314\ngcc -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O3 -Wall -fPIC -I/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14 -c debug.c -o build/temp.linux-x86_64-cpython-314/debug.o\ncreating build/lib.linux-x86_64-cpython-314\ngcc -shared -Wl,--rpath=/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/lib -Wl,--rpath=/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/lib build/temp.linux-x86_64-cpython-314/debug.o -L/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/lib -o build/lib.linux-x86_64-cpython-314/debug.cpython-314-x86_64-linux-gnu.so\nbuilding 'freethread' extension\ngcc -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O3 -Wall -fPIC -I/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14 -c freethread.c -o build/temp.linux-x86_64-cpython-314/freethread.o\n\n-- stderr:/home/runner/work/cython/cython/Cython/Compiler/Main.py:372: FutureWarning: Cython directive 'language_level' not set, using '3' (Py3). This has changed from earlier releases! File: /home/runner/work/cython/cython/TEST_TMP/4/run/abitests/debug.pyx\n  tree = Parsing.p_module(s, pxd, full_module_name)\n/home/runner/work/cython/cython/Cython/Compiler/Main.py:372: FutureWarning: Cython directive 'language_level' not set, using '3' (Py3). This has changed from earlier releases! File: /home/runner/work/cython/cython/TEST_TMP/4/run/abitests/freethread.pyx\n  tree = Parsing.p_module(s, pxd, full_module_name)\n/home/runner/work/cython/cython/Cython/Compiler/Main.py:372: FutureWarning: Cython directive 'language_level' not set, using '3' (Py3). This has changed from earlier releases! File: /home/runner/work/cython/cython/TEST_TMP/4/run/abitests/trace.pyx\n  tree = Parsing.p_module(s, pxd, full_module_name)\nIn file included from /opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_object_deferred.h:8,\n                 from /opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_stackref.h:14,\n                 from /opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:11,\n                 from /opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_frame.h:13,\n                 from freethread.c:2831:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_gc.h: In function ‘_PyObject_SET_GC_BITS’:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_gc.h:61:53: error: ‘PyObject’ {aka ‘struct _object’} has no member named ‘ob_gc_bits’\n   61 |     uint8_t bits = _Py_atomic_load_uint8_relaxed(&op->ob_gc_bits);\n      |                                                     ^~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_gc.h:62:39: error: ‘PyObject’ {aka ‘struct _object’} has no member named ‘ob_gc_bits’\n   62 |     _Py_atomic_store_uint8_relaxed(&op->ob_gc_bits, bits | new_bits);\n      |                                       ^~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_gc.h: In function ‘_PyObject_HAS_GC_BITS’:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_gc.h:68:46: error: ‘PyObject’ {aka ‘struct _object’} has no member named ‘ob_gc_bits’\n   68 |     return (_Py_atomic_load_uint8_relaxed(&op->ob_gc_bits) & bits) != 0;\n      |                                              ^~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_gc.h: In function ‘_PyObject_CLEAR_GC_BITS’:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_gc.h:74:53: error: ‘PyObject’ {aka ‘struct _object’} has no member named ‘ob_gc_bits’\n   74 |     uint8_t bits = _Py_atomic_load_uint8_relaxed(&op->ob_gc_bits);\n      |                                                     ^~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_gc.h:75:39: error: ‘PyObject’ {aka ‘struct _object’} has no member named ‘ob_gc_bits’\n   75 |     _Py_atomic_store_uint8_relaxed(&op->ob_gc_bits, bits & ~bits_to_clear);\n      |                                       ^~\nIn file included from /opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_frame.h:13,\n                 from freethread.c:2831:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h: At top level:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:614:15: error: unknown type name ‘_PyCodeArray’\n  614 | static inline _PyCodeArray *\n      |               ^~~~~~~~~~~~\nIn file included from /opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/Python.h:63,\n                 from freethread.c:23:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h: In function ‘_PyCode_GetTLBCArray’:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:617:28: error: ‘_PyCodeArray’ undeclared (first use in this function)\n  617 |     return _Py_STATIC_CAST(_PyCodeArray *,\n      |                            ^~~~~~~~~~~~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/pyport.h:34:41: note: in definition of macro ‘_Py_STATIC_CAST’\n   34 | #  define _Py_STATIC_CAST(type, expr) ((type)(expr))\n      |                                         ^~~~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:617:28: note: each undeclared identifier is reported only once for each function it appears in\n  617 |     return _Py_STATIC_CAST(_PyCodeArray *,\n      |                            ^~~~~~~~~~~~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/pyport.h:34:41: note: in definition of macro ‘_Py_STATIC_CAST’\n   34 | #  define _Py_STATIC_CAST(type, expr) ((type)(expr))\n      |                                         ^~~~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/pyport.h:34:45: error: expected expression before ‘)’ token\n   34 | #  define _Py_STATIC_CAST(type, expr) ((type)(expr))\n      |                                             ^\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:617:12: note: in expansion of macro ‘_Py_STATIC_CAST’\n  617 |     return _Py_STATIC_CAST(_PyCodeArray *,\n      |            ^~~~~~~~~~~~~~~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:618:59: error: ‘PyCodeObject’ has no member named ‘co_tlbc’\n  618 |                            _Py_atomic_load_ptr_acquire(&co->co_tlbc));\n      |                                                           ^~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/pyport.h:34:47: note: in definition of macro ‘_Py_STATIC_CAST’\n   34 | #  define _Py_STATIC_CAST(type, expr) ((type)(expr))\n      |                                               ^~~~\nIn file included from /opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_frame.h:13,\n                 from freethread.c:2831:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h: In function ‘_PyCode_GetTLBCFast’:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:626:5: error: unknown type name ‘_PyCodeArray’\n  626 |     _PyCodeArray *code = _PyCode_GetTLBCArray(co);\n      |     ^~~~~~~~~~~~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:628:19: error: request for member ‘size’ in something not a structure or union\n  628 |     if (idx < code->size && code->entries[idx] != NULL) {\n      |                   ^~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:628:33: error: request for member ‘entries’ in something not a structure or union\n  628 |     if (idx < code->size && code->entries[idx] != NULL) {\n      |                                 ^~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_code.h:629:37: error: request for member ‘entries’ in something not a structure or union\n  629 |         return (_Py_CODEUNIT *) code->entries[idx];\n      |                                     ^~\nIn file included from freethread.c:2831:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_frame.h: In function ‘_PyFrame_GetBytecode’:\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_frame.h:97:5: error: unknown type name ‘_PyCodeArray’\n   97 |     _PyCodeArray *tlbc = _PyCode_GetTLBCArray(co);\n      |     ^~~~~~~~~~~~\n/opt/hostedtoolcache/Python/3.14.0-alpha.4/x64/include/python3.14/internal/pycore_frame.h:99:32: error: request for member ‘entries’ in something not a structure or union\n   99 |     return (_Py_CODEUNIT *)tlbc->entries[f->tlbc_index];\n      |                                ^~\nerror: command '/usr/lib/ccache/gcc' failed with exit code 1\n```\n\n</details>\nI'd say it isn't their fault, although it's unfortunate for us.\n\nShould we just stop testing this? Or is there an easy way to keep the test working? It really only tests our internal import detection, so maybe it's enough to test that we *can* import the free-threaded module in a free-threaded Python and accept that we don't see it fail otherwise?\n\nBuilding a proper free-threaded module from a normal GIL-Python probably isn't going to be trivial, at least not over time.\n\n### Code to reproduce the behaviour:\n\nhttps://github.com/cython/cython/blob/b05abc1b4c6672e41ef0c2cf25e917719f6ddc90/tests/run/abitests.srctree\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\n_No response_\n\n### Python version\n\nCPython 3.14.0a4\n\n### Cython version\n\nmaster\n\n### Additional context\n\n_No response_",
    "closed_at": "2025-02-14T20:42:31Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I wanted to get rid of that check https://github.com/cython/cython/pull/6626 (and delete the tests). I'd come to the conclusion that it wasn't actually helping in the cases that I thought that it was so it was just needless complication.",
            "created_at": "2025-02-14T15:03:35Z",
            "html_url": "https://github.com/cython/cython/issues/6671#issuecomment-2659559035",
            "id": 2659559035,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6671",
            "node_id": "IC_kwDOABDGAc6ehaZ7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2659559035/reactions"
            },
            "updated_at": "2025-02-14T15:03:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2659559035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let's remove the tests then. Probably best to just do a revert again on top of current master and push that.",
            "created_at": "2025-02-14T17:56:49Z",
            "html_url": "https://github.com/cython/cython/issues/6671#issuecomment-2659944918",
            "id": 2659944918,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6671",
            "node_id": "IC_kwDOABDGAc6ei4nW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2659944918/reactions"
            },
            "updated_at": "2025-02-14T17:56:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2659944918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6671/comments",
    "created_at": "2025-02-14T14:30:11Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-14T14:30:12Z",
            "event": "labeled",
            "id": 16312671176,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc6qGqO7zwAAAAPMT5vI",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16312671176"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-14T14:30:12Z",
            "event": "labeled",
            "id": 16312671187,
            "label": {
                "color": "444444",
                "name": "Testing"
            },
            "node_id": "LE_lADOABDGAc6qGqO7zwAAAAPMT5vT",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16312671187"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-14T17:50:27Z",
            "event": "connected",
            "id": 16315576814,
            "node_id": "COE_lADOABDGAc6qGqO7zwAAAAPMe_Hu",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16315576814"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": "98ac511d4a09867da1618ba949675c49580ae524",
            "commit_url": "https://api.github.com/repos/scoder/cython/commits/98ac511d4a09867da1618ba949675c49580ae524",
            "created_at": "2025-02-14T20:40:30Z",
            "event": "referenced",
            "id": 16317212718,
            "node_id": "REFE_lADOABDGAc6qGqO7zwAAAAPMlOgu",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16317212718"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": "98ac511d4a09867da1618ba949675c49580ae524",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/98ac511d4a09867da1618ba949675c49580ae524",
            "created_at": "2025-02-14T20:42:31Z",
            "event": "closed",
            "id": 16317228657,
            "node_id": "CE_lADOABDGAc6qGqO7zwAAAAPMlSZx",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16317228657"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-14T20:43:02Z",
            "event": "milestoned",
            "id": 16317232541,
            "milestone": {
                "title": "3.1"
            },
            "node_id": "MIE_lADOABDGAc6qGqO7zwAAAAPMlTWd",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16317232541"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6671/events",
    "html_url": "https://github.com/cython/cython/issues/6671",
    "id": 2853872571,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558326,
            "name": "Testing",
            "node_id": "MDU6TGFiZWw0MjU1NTgzMjY=",
            "url": "https://api.github.com/repos/cython/cython/labels/Testing"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6671/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 338,
        "created_at": "2019-02-24T14:21:23Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder",
            "user_view_type": "public"
        },
        "description": "* Remove code for Python 2 and Python < 3.8.\r\n* Integrate better with Python 3.\r\n* Improve support for the Limited API.\r\n* Start supporting GIL-free Python 3.13.\r\n* Support the Py3.13 `sys.monitoring` API.\r\n* Support and use `am_send` for coroutines.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/65",
        "id": 4082235,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/65/labels",
        "node_id": "MDk6TWlsZXN0b25lNDA4MjIzNQ==",
        "number": 65,
        "open_issues": 19,
        "state": "open",
        "title": "3.1",
        "updated_at": "2025-02-15T12:15:24Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/65"
    },
    "node_id": "I_kwDOABDGAc6qGqO7",
    "number": 6671,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6671/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6671/timeline",
    "title": "[BUG] `abitests.srctree` test is broken in Py3.14",
    "updated_at": "2025-02-14T20:43:02Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6671",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    }
}