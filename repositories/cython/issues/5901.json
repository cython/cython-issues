{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe your issue\n\nI'm trying to work out if this is a problem. It may be a non-issue but I'm not yet sure.\r\n\r\nMemoryviews can be passed between different Cython modules, which are potentially compiled with different compilers, built with different options, or compiled with different versions.\r\n\r\nI think there's a lot of implicit assumptions about the ABI remaining the same when this happens, which may not necessarily be true.\r\n\r\nThere's a few points of customization:\r\n* `buffer_max_dims` - I don't think many people use this, and I suspect that mixing it would produce a C compiler errors so you'd know at an early stage.\r\n* Atomic options - `CYTHON_ATOMICS` toggles between atomic referencing counting and locking. There's then a whole bunch of compiler-dependent choices for the atomic types (posix, msvc, std c, std c++). They probably mostly fall back to the same representation and processor instructions, but we don't know that.\r\n* Different Cython versions. We've tweaked the layout of the `__pyx_memoryview` cdef class in the past, and maybe we shouldn't have. And shouldn't in future.\r\n\r\nIf it is a problem, the question is then: how do we make it safer in future (either by making incompatible definitions incompatible, or by making them actually compatible with each other).",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmm, interesting. I'd say, most of the time, memory views are probably just passed around inside of one module or even live only in a single function. Even larger projects are probably only ever built completely and thus use the same code everywhere, most likely even the same C compiler flags for all of their modules.\r\n\r\nWe keep the shared Cython ABI module version specific, so the memoryview code used is either shared (same version) or probably incompatible when crossing Cython versions. I understand from what you write that even incompatible atomics in the ref-counting code might be a problem? That is something that we don't share but inline. So that seems a real issue. Passing memory views around across libraries then seems to hit the same spot, but might even end up passing them into code from older or newer Cython versions.\r\n\r\nSince passing C-level memoryviews around between installed packages isn't trivial and requires at least a `.pxd` file to export them, I don't think it's a very common thing to do. Passing Python memoryviews around probably isn't an issue at all since any C access would grab a new buffer and create a new memoryview.\r\n\r\nSo â€¦ well. I think you're right that this is an issue, although not a big one in practice and I've never heard anyone complain about it. Which doesn't mean that no-one ever ran into it.\r\n\r\nMaybe it's enough to be aware of this now and otherwise leave the ticket open and not do anything about it for now?",
            "created_at": "2023-12-10T11:45:55Z",
            "html_url": "https://github.com/cython/cython/issues/5901#issuecomment-1848941436",
            "id": 1848941436,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5901",
            "node_id": "IC_kwDOABDGAc5uNJt8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1848941436/reactions"
            },
            "updated_at": "2023-12-10T11:45:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1848941436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We keep the shared Cython ABI module version specific, so the memoryview code used is either shared (same version) or probably incompatible when crossing Cython versions.\r\n\r\nI don't think memoryviews go into the shared Cython ABI module.\r\n\r\n> I understand from what you write that even incompatible atomics in the ref-counting code might be a problem? That is something that we don't share but inline\r\n\r\nI think that's probably the main problem. Even something like a library that compiles a module in C++ and another in C might hit that (although in reality it'd be surprising it was actually a problem)\r\n\r\n> Since passing C-level memoryviews around between installed packages isn't trivial and requires at least a .pxd file to export them, I don't think it's a very common thing to do.\r\n\r\nYes.\r\n\r\n> Passing Python memoryviews around probably isn't an issue at all since any C access would grab a new buffer and create a new memoryview.\r\n\r\nYes - agree. I'm fairly sure this is safe.\r\n\r\n> Maybe it's enough to be aware of this now and otherwise leave the ticket open and not do anything about it for now?\r\n\r\nThat was my plan at the moment.",
            "created_at": "2023-12-10T12:26:35Z",
            "html_url": "https://github.com/cython/cython/issues/5901#issuecomment-1848950814",
            "id": 1848950814,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5901",
            "node_id": "IC_kwDOABDGAc5uNMAe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1848950814/reactions"
            },
            "updated_at": "2023-12-10T12:26:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1848950814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What I think I might do in the short-term is add a bit of testing:\r\n\r\n* A stress-test that mixes simultaneous C and C++ reference counting - that should give us some confidence that they're compatible on our main supported platforms (in practice).\r\n* Some testing for the layout of the main memoryview class - probably just overall size, offset of the atomic, offset of the lock, sizeof the atomic. That needs a bit of thought because we don't really care what it is - we just want it to remain consistent which isn't how we usually test things.",
            "created_at": "2023-12-10T13:00:20Z",
            "html_url": "https://github.com/cython/cython/issues/5901#issuecomment-1848959038",
            "id": 1848959038,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5901",
            "node_id": "IC_kwDOABDGAc5uNOA-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1848959038/reactions"
            },
            "updated_at": "2023-12-10T13:00:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1848959038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5901/comments",
    "created_at": "2023-12-10T10:59:54Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5901/events",
    "html_url": "https://github.com/cython/cython/issues/5901",
    "id": 2034320647,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5901/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc55QUUH",
    "number": 5901,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5901/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5901/timeline",
    "title": "[possible BUG] Memoryview ABI - is it a problem?",
    "updated_at": "2023-12-10T13:00:21Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5901",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}