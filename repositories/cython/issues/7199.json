{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe the bug\n\nThe code generated for `from ... import ...` is redundant. It creates a C array of imported names for the module import but then uses explicit one-at-a-time code to look up the names in the module. It could use a loop over a C array as well, ideally the same C array, to reduce the code overhead and the module size.\n\nGenerated code for the example below:\n<details>\n\n```\n 227752   /* \"tests/run/test_dataclasses.pxi\":10\n 227753  * import pickle\n 227754  * import inspect\n 227755  * from typing import ClassVar, Any, List, Union, Tuple, Dict, Generic, TypeVar, Optional             # <<<<<<<<<<<<<<\n 227756  * from typing import get_type_hints\n 227757  * from collections import deque, OrderedDict, namedtuple\n 227758 */\n 227759   /* __pyx_t_2 allocated (Python object) */\n 227760   {\n 227761     PyObject *__pyx_imported_names[] = {__pyx_mstate_global->__pyx_n_u_ClassVar,__pyx_mstate_global->__pyx_n_u_Any,__pyx_mstate_global->__pyx_n_u_List,__pyx_mstate_global->__pyx_n_u_Union,__pyx_mstate_global->__pyx_n_u_Tuple,__pyx_mstate_global->__pyx_n_u_Dict,__pyx_mstate_global->__pyx_n_u_Generic,__pyx_mstate_global->__pyx_n_u_TypeVar,__pyx_mstate_global->__pyx_n_u_Optional};\n 227762     /* __pyx_t_1 allocated (Python object) */\n 227763     __pyx_t_1 = __Pyx_Import(__pyx_mstate_global->__pyx_n_u_typing, __pyx_imported_names, 9, NULL, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227764   }\n 227765   __pyx_t_2 = __pyx_t_1;\n 227766   /* __pyx_t_1 released */\n 227767   __Pyx_GOTREF(__pyx_t_2);\n 227768   /* __pyx_t_3 allocated (Python object) */\n 227769   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_ClassVar); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227770   __Pyx_GOTREF(__pyx_t_3);\n 227771   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_ClassVar, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227772   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227773   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_Any); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227774   __Pyx_GOTREF(__pyx_t_3);\n 227775   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_Any, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227776   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227777   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_List); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227778   __Pyx_GOTREF(__pyx_t_3);\n 227779   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_List, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227780   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227781   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_Union); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227782   __Pyx_GOTREF(__pyx_t_3);\n 227783   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_Union, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227784   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227785   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_Tuple); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227786   __Pyx_GOTREF(__pyx_t_3);\n 227787   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_Tuple, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227788   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227789   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_Dict); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227790   __Pyx_GOTREF(__pyx_t_3);\n 227791   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_Dict, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227792   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227793   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_Generic); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227794   __Pyx_GOTREF(__pyx_t_3);\n 227795   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_Generic, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227796   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227797   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_TypeVar); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227798   __Pyx_GOTREF(__pyx_t_3);\n 227799   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_TypeVar, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227800   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227801   __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_Optional); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227802   __Pyx_GOTREF(__pyx_t_3);\n 227803   if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_Optional, __pyx_t_3) < (0)) __PYX_ERR(2, 10, __pyx_L1_error)\n 227804   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n 227805   /* __pyx_t_3 released */\n 227806   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n 227807   /* __pyx_t_2 released */\n```\n\n</details>\n\n\n### Code to reproduce the behaviour:\n\n```cython\n# example code\nfrom typing import ClassVar, Any, List, Union, Tuple, Dict, Generic, TypeVar, Optional\n```\n\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\n_No response_\n\n### Python version\n\n_No response_\n\n### Cython version\n\nmaster\n\n### Additional context\n\n_No response_",
    "closed_at": "2025-10-15T10:05:14Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I just noticed that it's not quite that simple. The name assigned to the imported item may not be a simple global Python name but a declared variable at any scope, so the assignment may be different for the different names.",
            "created_at": "2025-10-10T10:17:45Z",
            "html_url": "https://github.com/cython/cython/issues/7199#issuecomment-3389220949",
            "id": 3389220949,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7199",
            "node_id": "IC_kwDOABDGAc7KA2hV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3389220949/reactions"
            },
            "updated_at": "2025-10-10T10:17:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3389220949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I did spot this as a potential improvement when we revised this code, but decided it was too complicated (for me) in the short-term.\n\nIt's definitely duplicating work (since the `hasattr` test that it does while looping over the c array is the same as the `getattr` we do afterwards. \n\nPotentially we could pass an array of `PyObject**` to fill in with the read attributes. Although that assumes that all the attributes are `PyObject` which may not always be true.",
            "created_at": "2025-10-10T13:09:47Z",
            "html_url": "https://github.com/cython/cython/issues/7199#issuecomment-3390005040",
            "id": 3390005040,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/7199",
            "node_id": "IC_kwDOABDGAc7KD18w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3390005040/reactions"
            },
            "updated_at": "2025-10-10T13:09:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3390005040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7199/comments",
    "created_at": "2025-10-10T08:51:28Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-10-10T08:51:30Z",
            "event": "labeled",
            "id": 20201938766,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc7Qu7p_zwAAAAS0IR9O",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20201938766"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-10-10T08:51:30Z",
            "event": "labeled",
            "id": 20201938827,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "LE_lADOABDGAc7Qu7p_zwAAAAS0IR-L",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20201938827"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": "6cd5573dda03bf5fb9ed5bc11d9e8b51c7e2bdc6",
            "commit_url": "https://api.github.com/repos/scoder/cython/commits/6cd5573dda03bf5fb9ed5bc11d9e8b51c7e2bdc6",
            "created_at": "2025-10-10T14:02:55Z",
            "event": "referenced",
            "id": 20208673320,
            "node_id": "REFE_lADOABDGAc7Qu7p_zwAAAAS0h-Io",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20208673320"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-10-10T14:06:12Z",
            "event": "milestoned",
            "id": 20208756686,
            "milestone": {
                "title": "3.2"
            },
            "node_id": "MIE_lADOABDGAc7Qu7p_zwAAAAS0iSfO",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20208756686"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-10-15T10:05:14Z",
            "event": "closed",
            "id": 20290814652,
            "node_id": "CE_lADOABDGAc7Qu7p_zwAAAAS5bUK8",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20290814652"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/in/12910?v=4",
                "events_url": "https://api.github.com/users/pull%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/pull%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/pull%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/pull%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/pull",
                "id": 39814207,
                "login": "pull[bot]",
                "node_id": "MDM6Qm90Mzk4MTQyMDc=",
                "organizations_url": "https://api.github.com/users/pull%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/pull%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/pull%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pull%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pull%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/pull%5Bbot%5D",
                "user_view_type": "public"
            },
            "commit_id": "96db4b7f924949f0030bacf3f7a6199f063a6e84",
            "commit_url": "https://api.github.com/repos/tianhm/cython/commits/96db4b7f924949f0030bacf3f7a6199f063a6e84",
            "created_at": "2025-10-15T11:56:11Z",
            "event": "referenced",
            "id": 20293229296,
            "node_id": "REFE_lADOABDGAc7Qu7p_zwAAAAS5khrw",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/20293229296"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/7199/events",
    "html_url": "https://github.com/cython/cython/issues/7199",
    "id": 3501963903,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/7199/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 142,
        "created_at": "2020-02-09T13:21:48Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder",
            "user_view_type": "public"
        },
        "description": "First feature release after the cleanup releases 3.0 and 3.1.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/75",
        "id": 5085425,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/75/labels",
        "node_id": "MDk6TWlsZXN0b25lNTA4NTQyNQ==",
        "number": 75,
        "open_issues": 18,
        "state": "open",
        "title": "3.2",
        "updated_at": "2025-10-15T10:05:15Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/75"
    },
    "node_id": "I_kwDOABDGAc7Qu7p_",
    "number": 7199,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/7199/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/7199/timeline",
    "title": "[BUG] from-import code is redundant",
    "type": null,
    "updated_at": "2025-10-15T10:05:15Z",
    "url": "https://api.github.com/repos/cython/cython/issues/7199",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    }
}