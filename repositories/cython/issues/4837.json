{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- DO NOT use the bug and feature tracker for general questions and support requests.\r\n  Use the `cython-users` mailing list instead.\r\n  It has a wider audience, so you get more and better answers.\r\n- Did you search for similar issues already?\r\n  Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release?\r\n  It might already have what you want to report.\r\n  Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug & To Reproduce**\r\n\r\nMy code:\r\n```python\r\n# _mytype.py\r\nimport abc\r\n\r\nclass M(metaclass=abc.ABCMeta):\r\n    def __init__(self):\r\n        print(self)\r\n\r\ndef cmp(cls1: type, cls2: type):\r\n    print(cls1.__name__, cls2.__name__)\r\n```\r\n```python\r\n# mytype.py\r\nfrom _mytype import M, cmp\r\n\r\nif __name__ == '__main__':\r\n    cmp(M, M)\r\n```\r\nI built code by run `python -m build _mytype.py` using https://github.com/Lmy0217/PyTorch-Project-Framework/blob/master/build.py.\r\nI run `python -m mytype` and I got the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"xxx/xxx/xxx/mytype.py\", line 5, in <module>\r\n    cmp(M, M)\r\nTypeError: Argument 'cls1' has incorrect type (expected type, got ABCMeta)\r\n```\r\n\r\n**Expected behavior**\r\nNo error.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu\r\n - Python version: 3.8.5\r\n - Cython version: 0.29.28\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Cython treats type annotations for builtin classes as \"must be exactly that type\" rather than \"must be that type or a subclass\". The reason is that \"type or a subclass\" is pretty much useless when it comes to making optimizations (given that it's possible to override basically anything).\r\n\r\nThis obviously deviates a bit from what's specified in the typing module. However what you're seeing is the expected behaviour at the moment.\r\n\r\nYou could turn off the `annotation_typing` option to get it to work. Unfortunately that's currently only available at the module level. Or just omit those specific types.",
            "created_at": "2022-06-14T16:48:43Z",
            "html_url": "https://github.com/cython/cython/issues/4837#issuecomment-1155449569",
            "id": 1155449569,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4837",
            "node_id": "IC_kwDOABDGAc5E3sLh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1155449569/reactions"
            },
            "updated_at": "2022-06-14T16:48:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1155449569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'd encountered a similar concern with some type hints under various metaclass hacks, mainly in regards to a type expression using a TypeVar in the subscript onto `type`, e.g `type[T_specific]` for `T_specific` being a TypeVar bound with a certain class.\r\n\r\nIf there could be any small workaround, it may be possible to provide a conditional representation of the `type[T]` expression, such that the editor tools, the Python interpreter, and Cython would all be able to parse the expression similarly?\r\n\r\nI've tried the following, it seems to work out under some tests:\r\n\r\n```python\r\nfrom abc import ABC\r\nimport cython\r\nfrom typing_extensions import TYPE_CHECKING, Generic\r\n\r\nif TYPE_CHECKING and not cython.compiled:\r\n    class Typed(type[T], ABC, Generic[T]):\r\n        pass\r\nelse:\r\n    class Typed(type, ABC, Generic[T]):\r\n        pass\r\n```\r\n\r\nIn application, approximately:\r\n\r\n```python\r\nfrom typing_extensions import TypeVar\r\n\r\nT_data  = TypeVar(\"T_data\")\r\n\r\nclass DataShim(Generic[T_data]):\r\n    def show_scope(self, scope: Typed[T_data]):\r\n            self._scope = scope\r\n```\r\n\r\nPartial example from another application:\r\n\r\n```python\r\nfrom dataclasses import Field\r\n\r\nclass ProtoField(Field[T], Generic[T_data, T]):\r\n    __slots__ = \"_scope\"\r\n\r\n    if TYPE_CHECKING:\r\n        _scope: type[T_data]\r\n        if cython.compiled:\r\n            type: str\r\n        else:\r\n            type: TypeRef\r\n\r\n    def bind_scope(self, scope: Typed[T_data]):\r\n        self._scope = scope\r\n```\r\n\r\n[updated] the TypeRef definition:\r\n\r\n```python\r\nfrom abc import ABCMeta\r\nfrom typing import (\r\n    TYPE_CHECKING, Any, _SpecialForm\r\n)\r\n\r\nclass TypeRefType(ABCMeta):\r\n    \"\"\"Abstract TypeRef metaclass\"\"\"\r\n    def __instancecheck__(cls, obj: Any) -> bool:\r\n        return isinstance(obj, type) or (isinstance(obj, _SpecialForm) and obj.__name__ == \"TypeAlias\")\r\n\r\nclass TypeRef(ABC, metaclass=TypeRefType):\r\n    \"\"\"Abstract representation of types and type alias objects\r\n\r\n```\r\n\r\n\r\nAfter compiling the unabridged second example, `cytonize -b` was actually able to handle the initial `type[T_data]` subscript. \r\n\r\nMaybe there are some contexts where the subscript `type[...]` expression could not need such a workaround?",
            "created_at": "2024-03-04T19:14:47Z",
            "html_url": "https://github.com/cython/cython/issues/4837#issuecomment-1977283950",
            "id": 1977283950,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4837",
            "node_id": "IC_kwDOABDGAc512vVu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1977283950/reactions"
            },
            "updated_at": "2024-03-04T19:20:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1977283950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1203789?v=4",
                "events_url": "https://api.github.com/users/spchamp/events{/privacy}",
                "followers_url": "https://api.github.com/users/spchamp/followers",
                "following_url": "https://api.github.com/users/spchamp/following{/other_user}",
                "gists_url": "https://api.github.com/users/spchamp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/spchamp",
                "id": 1203789,
                "login": "spchamp",
                "node_id": "MDQ6VXNlcjEyMDM3ODk=",
                "organizations_url": "https://api.github.com/users/spchamp/orgs",
                "received_events_url": "https://api.github.com/users/spchamp/received_events",
                "repos_url": "https://api.github.com/users/spchamp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/spchamp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/spchamp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/spchamp"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The workaround (as I said in the comment above) is just to turn annotation typing off:\r\n\r\n```\r\n# cython: annotation_typing = False\r\n```\r\n\r\nCython will ignore the type annotations and they'll just serve their original \"official\" purpose as documentation of intent.",
            "created_at": "2024-03-04T19:18:20Z",
            "html_url": "https://github.com/cython/cython/issues/4837#issuecomment-1977289845",
            "id": 1977289845,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4837",
            "node_id": "IC_kwDOABDGAc512wx1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1977289845/reactions"
            },
            "updated_at": "2024-03-04T19:18:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1977289845",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well thanks",
            "created_at": "2024-03-04T19:21:17Z",
            "html_url": "https://github.com/cython/cython/issues/4837#issuecomment-1977294268",
            "id": 1977294268,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4837",
            "node_id": "IC_kwDOABDGAc512x28",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1977294268/reactions"
            },
            "updated_at": "2024-03-04T19:21:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1977294268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1203789?v=4",
                "events_url": "https://api.github.com/users/spchamp/events{/privacy}",
                "followers_url": "https://api.github.com/users/spchamp/followers",
                "following_url": "https://api.github.com/users/spchamp/following{/other_user}",
                "gists_url": "https://api.github.com/users/spchamp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/spchamp",
                "id": 1203789,
                "login": "spchamp",
                "node_id": "MDQ6VXNlcjEyMDM3ODk=",
                "organizations_url": "https://api.github.com/users/spchamp/orgs",
                "received_events_url": "https://api.github.com/users/spchamp/received_events",
                "repos_url": "https://api.github.com/users/spchamp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/spchamp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/spchamp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/spchamp"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I know my suggestion seems a little defeatist, but Cython's view of type hints is quite simple (just \"this is a list so we can get an element quickly\") and it looks like you're using them more descriptively, so it's probably best not to spend too much time fighting Cython here.\r\n\r\nYou can now also turn Cython's use of type hints on/off locally (e.g. with a `@cython.annotation_typing(True)` decorator on a function) - so you can pick places where you just want the simple optimization.",
            "created_at": "2024-03-04T19:33:04Z",
            "html_url": "https://github.com/cython/cython/issues/4837#issuecomment-1977315856",
            "id": 1977315856,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4837",
            "node_id": "IC_kwDOABDGAc5123IQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1977315856/reactions"
            },
            "updated_at": "2024-03-04T19:33:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1977315856",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4837/comments",
    "created_at": "2022-06-14T10:17:50Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4837/events",
    "html_url": "https://github.com/cython/cython/issues/4837",
    "id": 1270580815,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4837/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5Lu4ZP",
    "number": 4837,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4837/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4837/timeline",
    "title": "[BUG] Type hint broken for type when using ABCMeta",
    "updated_at": "2024-03-04T19:33:06Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4837",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16065878?v=4",
        "events_url": "https://api.github.com/users/Lmy0217/events{/privacy}",
        "followers_url": "https://api.github.com/users/Lmy0217/followers",
        "following_url": "https://api.github.com/users/Lmy0217/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lmy0217/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Lmy0217",
        "id": 16065878,
        "login": "Lmy0217",
        "node_id": "MDQ6VXNlcjE2MDY1ODc4",
        "organizations_url": "https://api.github.com/users/Lmy0217/orgs",
        "received_events_url": "https://api.github.com/users/Lmy0217/received_events",
        "repos_url": "https://api.github.com/users/Lmy0217/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Lmy0217/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lmy0217/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Lmy0217"
    }
}