{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I am trying to set up code coverage in a Python package `pyarrow` that has Cython modules inside it. The modules compile fine, and the `.cxx` files do include `__Pyx_TraceCall` invocations.\r\n\r\nHowever, when I run `coverage report` after running some tests, I get the following errors:\r\n```\r\n$ coverage report\r\n_parquet.pyx   NoSource: No source for code: '/home/antoine/arrow/python/_parquet.pyx'.\r\nAborting report output, consider using -i.\r\narray.pxi   NoSource: No source for code: '/home/antoine/arrow/python/array.pxi'.\r\nAborting report output, consider using -i.\r\nlib.pxd   NoSource: No source for code: '/home/antoine/arrow/python/lib.pxd'.\r\nAborting report output, consider using -i.\r\nlib.pyx   NoSource: No source for code: '/home/antoine/arrow/python/lib.pyx'.\r\nAborting report output, consider using -i.\r\nmemory.pxi   NoSource: No source for code: '/home/antoine/arrow/python/memory.pxi'.\r\nAborting report output, consider using -i.\r\nplasma.pyx   NoSource: No source for code: '/home/antoine/arrow/python/plasma.pyx'.\r\nAborting report output, consider using -i.\r\npublic-api.pxi   NoSource: No source for code: '/home/antoine/arrow/python/public-api.pxi'.\r\nAborting report output, consider using -i.\r\nscalar.pxi   NoSource: No source for code: '/home/antoine/arrow/python/scalar.pxi'.\r\nAborting report output, consider using -i.\r\nserialization.pxi   NoSource: No source for code: '/home/antoine/arrow/python/serialization.pxi'.\r\nAborting report output, consider using -i.\r\nstringsource   NoSource: No source for code: '/home/antoine/arrow/python/stringsource'.\r\nAborting report output, consider using -i.\r\ntypes.pxi   NoSource: No source for code: '/home/antoine/arrow/python/types.pxi'.\r\nAborting report output, consider using -i.\r\nName                                    Stmts   Miss  Cover\r\n-----------------------------------------------------------\r\npyarrow/__init__.py                        57     32    44%\r\npyarrow/compat.py                         102     60    41%\r\npyarrow/filesystem.py                     136     79    42%\r\npyarrow/hdfs.py                            57     36    37%\r\npyarrow/ipc.py                             35     18    49%\r\npyarrow/pandas_compat.py                  322    286    11%\r\npyarrow/parquet.py                        507    412    19%\r\npyarrow/serialization.py                   86     46    47%\r\npyarrow/tests/__init__.py                   0      0   100%\r\npyarrow/tests/conftest.py                  48     15    69%\r\npyarrow/tests/test_convert_builtin.py     464      2    99%\r\npyarrow/types.py                           83     36    57%\r\npyarrow/util.py                            12      2    83%\r\n-----------------------------------------------------------\r\nTOTAL                                    1909   1024    46%\r\n```\r\n\r\nApparently Cython doesn't pass the right file path in the `__Pyx_TraceCall` calls: it only passes the bare filename (e.g. `lib.pyx`), not the file path from the package root (e.g. `pyarrow/lib.pyx`). The trace calls look like this:\r\n```\r\n  __Pyx_TraceCall(\"set_cpu_count\", __pyx_f[6], 58, 0, __PYX_ERR(6, 58, __pyx_L1_error));\r\n```\r\nand the `__pyx_f` structure is as follows:\r\n```\r\nstatic const char *__pyx_f[] = {\r\n  \"error.pxi\",\r\n  \"scalar.pxi\",\r\n  \"array.pxi\",\r\n  \"types.pxi\",\r\n  \"io.pxi\",\r\n  \"ipc.pxi\",\r\n  \"lib.pyx\",\r\n  \"memory.pxi\",\r\n  \"stringsource\",\r\n  \"lib.pxd\",\r\n  \"builder.pxi\",\r\n  \"table.pxi\",\r\n  \"io-hdfs.pxi\",\r\n  \"feather.pxi\",\r\n  \"serialization.pxi\",\r\n  \"benchmark.pxi\",\r\n  \"public-api.pxi\",\r\n  \"common.pxd\",\r\n  \"type.pxd\",\r\n  \"bool.pxd\",\r\n  \"complex.pxd\",\r\n};\r\n```\r\n\r\nI looked for a Cython or coverage option to workaround this but I can't find any.",
    "closed_at": "2018-05-15T19:21:06Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "A hackish workaround is to run `coverage` from inside the package to help it find the Cython files. But now I hit into issue #1508 (i.e. `NotPython: Couldn't parse '/home/antoine/arrow/python/pyarrow/lib.pyx' as Python source: 'invalid syntax'`).",
            "created_at": "2018-05-11T14:40:25Z",
            "html_url": "https://github.com/cython/cython/issues/2264#issuecomment-388383889",
            "id": 388383889,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2264",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODM4Mzg4OQ==",
            "updated_at": "2018-05-11T14:40:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/388383889",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ok, it seems, this is down to the following assumption in `Cython.Coverage`, in `_find_source_files`:\r\n```\r\n# a module \"pkg/mod.so\" can have a source file \"pkg/pkg.mod.c\"\r\n```\r\n\r\nIn our case, our C file is named `pyarrow/lib.cxx`, not `pyarrow/pyarrow.lib.c[pp]`...\r\n\r\nEdit: not only. The file naming problem and the directory problem are two distinct problems.",
            "created_at": "2018-05-11T15:13:17Z",
            "html_url": "https://github.com/cython/cython/issues/2264#issuecomment-388393714",
            "id": 388393714,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2264",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODM5MzcxNA==",
            "updated_at": "2018-05-11T15:55:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/388393714",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ok, I've found the issue: we are running Cython from inside the disutils build directory (rather than the top of the source tree), so Cython was generating inconsistent or wrong filenames in the generated C++ source. This is fixed by using the `--working` option.",
            "created_at": "2018-05-15T19:21:06Z",
            "html_url": "https://github.com/cython/cython/issues/2264#issuecomment-389283079",
            "id": 389283079,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2264",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTI4MzA3OQ==",
            "updated_at": "2018-05-15T19:21:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/389283079",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think this is similar to what I'm facing: https://github.com/cython/cython/issues/3636. Did you solve it in `setup.py`?",
            "created_at": "2020-05-28T20:44:43Z",
            "html_url": "https://github.com/cython/cython/issues/2264#issuecomment-635597721",
            "id": 635597721,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2264",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTU5NzcyMQ==",
            "updated_at": "2020-05-28T20:44:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/635597721",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4",
                "events_url": "https://api.github.com/users/webknjaz/events{/privacy}",
                "followers_url": "https://api.github.com/users/webknjaz/followers",
                "following_url": "https://api.github.com/users/webknjaz/following{/other_user}",
                "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/webknjaz",
                "id": 578543,
                "login": "webknjaz",
                "node_id": "MDQ6VXNlcjU3ODU0Mw==",
                "organizations_url": "https://api.github.com/users/webknjaz/orgs",
                "received_events_url": "https://api.github.com/users/webknjaz/received_events",
                "repos_url": "https://api.github.com/users/webknjaz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/webknjaz"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2264/comments",
    "created_at": "2018-05-11T14:25:39Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-05-15T19:21:06Z",
            "event": "closed",
            "id": 1628011851,
            "node_id": "MDExOkNsb3NlZEV2ZW50MTYyODAxMTg1MQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1628011851"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2264/events",
    "html_url": "https://github.com/cython/cython/issues/2264",
    "id": 322316461,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2264/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzMjIzMTY0NjE=",
    "number": 2264,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Coverage doesn't work under Python package",
    "updated_at": "2020-05-28T20:44:43Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2264",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "node_id": "MDQ6VXNlcjE3MjE4MjA=",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou"
    }
}