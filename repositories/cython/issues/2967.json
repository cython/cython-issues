{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm using Cython version 0.29.7.\r\n\r\nPart of the error message (full message attached: [output.txt](https://github.com/cython/cython/files/3207113/output.txt)):\r\n```\r\nAA/bug.c:830:57: error: expected identifier or ‘(’ before ‘.’ token\r\n struct __pyx_obj_2AA_3bug___pyx_scope_struct____pyx_base.func;\r\n```\r\n\r\nHere's a quick example to reproduce, including a workaround.\r\n\r\n```\r\n# cython: language_level=3\r\ncdef class FBase():\r\n    def __init__(self):\r\n        pass\r\n        \r\n    def __cinit__(self):\r\n        pass\r\n        \r\n    cdef func(self, whatever):\r\n        pass\r\n        \r\n\r\ncdef class Bug(FBase):\r\n    def __init__(self):\r\n        pass\r\n        \r\n    cdef check(self, x):\r\n        return x\r\n        \r\n    cdef func(self, whatever):\r\n        a = [1, 2, 3]\r\n        min(a, key=lambda x: self.check(x))\r\n\r\n        # This generates correct C, but doesn't work in Python:\r\n        # min(a, key=lambda self, x: self.check(x))\r\n\r\n        # Workaround:\r\n        # import functools\r\n        # min(a, key=functools.partial(lambda self, x: self.check(x), self))\r\n```\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Yeah, that looks wrong. Would you like investigate what Cython thinks it's doing there?",
            "created_at": "2019-06-01T07:27:27Z",
            "html_url": "https://github.com/cython/cython/issues/2967#issuecomment-497921474",
            "id": 497921474,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2967",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzkyMTQ3NA==",
            "updated_at": "2019-06-01T07:27:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/497921474",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It seems that this issue occurs generally whenever there is a closure inside an inherited extension class method.  In `ParseTreeTransforms.py`, `CreateClosureClasses.create_from_class_scope` generates the name for the C struct for the closure.  The name of this struct is set to be a string that contains `node.entry.cname`.  The problem here is that the cname for an inherited extension class method contains a period (eg. `__pyx_base.func` in the example here).  So the generated C code tries to put a '.' into the name of a struct, and we get the error above.\r\n\r\nFor reference, the code that sets the cname for these inherited methods is `Symtab.py`, `CClassScope.declare_inherited_c_attributes`.  The period is introduced in the local function `adapt()`.\r\n\r\nIn the closure struct generation code, if one replaces periods with an allowable string then the example compiles.  See https://github.com/rjtobin/cython/commit/8b1a50c6c18aa0f249cb491a34e9e0f16dfdf4c5 for a fix like this.\r\n\r\nI didn't make a PR for this because I had some reservations:\r\n\r\n1. Can replacing '.' with '__' lead to name collisions?\r\n2. Are there other non-period characters that might occur in cnames that also need to be replaced?\r\n3. Maybe the right change is to modify the cname itself (which would require a few other changes), or some other option I don't see.\r\n4. Also the inline string replace is pretty ugly.\r\n\r\n\r\n\r\n",
            "created_at": "2019-06-01T21:31:09Z",
            "html_url": "https://github.com/cython/cython/issues/2967#issuecomment-497979041",
            "id": 497979041,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2967",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Nzk3OTA0MQ==",
            "updated_at": "2019-06-01T21:31:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/497979041",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5141467?v=4",
                "events_url": "https://api.github.com/users/rjtobin/events{/privacy}",
                "followers_url": "https://api.github.com/users/rjtobin/followers",
                "following_url": "https://api.github.com/users/rjtobin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rjtobin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rjtobin",
                "id": 5141467,
                "login": "rjtobin",
                "node_id": "MDQ6VXNlcjUxNDE0Njc=",
                "organizations_url": "https://api.github.com/users/rjtobin/orgs",
                "received_events_url": "https://api.github.com/users/rjtobin/received_events",
                "repos_url": "https://api.github.com/users/rjtobin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rjtobin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rjtobin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rjtobin"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2967/comments",
    "created_at": "2019-05-22T11:23:23Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-06-01T07:26:14Z",
            "event": "labeled",
            "id": 2382570002,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIzODI1NzAwMDI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2382570002"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-06-01T07:26:14Z",
            "event": "labeled",
            "id": 2382570003,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIzODI1NzAwMDM=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2382570003"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2967/events",
    "html_url": "https://github.com/cython/cython/issues/2967",
    "id": 447079531,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2967/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0NDcwNzk1MzE=",
    "number": 2967,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Generates invalid C when omitting self in lambda",
    "updated_at": "2019-06-01T21:31:09Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2967",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/3822195?v=4",
        "events_url": "https://api.github.com/users/instance01/events{/privacy}",
        "followers_url": "https://api.github.com/users/instance01/followers",
        "following_url": "https://api.github.com/users/instance01/following{/other_user}",
        "gists_url": "https://api.github.com/users/instance01/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/instance01",
        "id": 3822195,
        "login": "instance01",
        "node_id": "MDQ6VXNlcjM4MjIxOTU=",
        "organizations_url": "https://api.github.com/users/instance01/orgs",
        "received_events_url": "https://api.github.com/users/instance01/received_events",
        "repos_url": "https://api.github.com/users/instance01/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/instance01/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/instance01/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/instance01"
    }
}