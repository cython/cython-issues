{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I am trying to debug a strange crash in [scipy's sobel.pyx](https://github.com/scipy/scipy/blob/master/scipy/stats/_sobol.pyx) on pypy. I think (am not 100% sure) that the use of this paradigm is causing problems\r\n```\r\nDEF MAXDIM = 21201  # max number of dimensions\r\nDEF MAXDEG = 18  # max polynomial degree\r\ncdef int poly[MAXDIM]\r\ncdef int vinit[MAXDIM][MAXDEG]\r\n...\r\ndef initialize_direction_numbers():\r\n    global is_initialized, poly, vinit\r\n    if not is_initialized:\r\n        dns = np.load(os.path.join(os.path.dirname(__file__), \"_sobol_direction_numbers.npz\"))\r\n        poly = dns[\"poly\"]\r\n        vinit = dns[\"vinit\"]\r\n        is_initialized = True\r\n```\r\n\r\nThis turns into C code like\r\n```\r\nstatic int __pyx_v_5scipy_5stats_6_sobol_poly[0x52D1];\r\nstatic int __pyx_v_5scipy_5stats_6_sobol_vinit[0x52D1][18];\r\n...\r\n\r\nstatic PyObject *__pyx_pf_5scipy_5stats_6_sobol_initialize_direction_numbers(CYTHON_UNUSED PyObject *__pyx_self) {\r\n  ....\r\n  int __pyx_t_11[0x52D1];\r\n  int __pyx_t_12[0x52D1][18];\r\n ....\r\n    if (unlikely(__Pyx_carray_from_py_int___5b_18_5d_(__pyx_t_2, __pyx_t_12, 0x52D1) < 0)) __PYX_ERR(0, 98, __pyx_L1_error)\r\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n    if (unlikely((0x52D1) != (0x52D1))) {\r\n      PyErr_Format(PyExc_ValueError, \"Assignment to slice of wrong length, expected %\" CYTHON_FORMAT_SSIZE_T \"d, got %\" CYTHON_FORMAT_SSIZE_T \"d\", (Py_ssize_t)(0x52D1), (Py_ssize_t)(0x52D1));\r\n      __PYX_ERR(0, 98, __pyx_L1_error)\r\n    }\r\n    memcpy(&(__pyx_v_5scipy_5stats_6_sobol_vinit[0]), __pyx_t_12, sizeof(__pyx_v_5scipy_5stats_6_sobol_vinit[0]) * (0x52D1));\r\n\r\n\r\n```\r\n\r\nSo at the beginning of the function there is a very large array. Is it reasonable that this is causing a stack overflow? I see very strange phenomenon that point to that direction. Perhaps PyPy's C headers are preventing inlining the static function?\r\n\r\nMaybe this is more applicable to the mailing list, but I am opening it as an issue since one alternative would be to avoid doubly statically allocating  the global 2d-array and memcpying it.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "> Perhaps PyPy's C headers are preventing inlining the static function?\r\n\r\nI don't think a def function implementation would ever be meaningfully inlined (with/without PyPy).\r\n\r\n>  I am opening it as an issue since one alternative would be to avoid doubly statically allocating the global 2d-array and memcpying it.\r\n\r\nThe reason it's being statically allocated then memcpyed is that `__Pyx_carray_from_py_int___5b_18_5d_` might throw (presumably because it's been passed data types that don't match). If it wrote directly into the global then this could leave it in a half-written state.\r\n\r\nI'd think the solution (if we did want to fix it) would be to limit the size of C arrays we were prepared to create on the stack and make the temp an allocated variable instead.",
            "created_at": "2021-07-07T20:01:51Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-875892792",
            "id": 875892792,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTg5Mjc5Mg==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-07T20:01:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/875892792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I suspect there isn't anything special about PyPy here - it's probably on the borderline of overflowing the stack in CPython too, but is just on the right side of the line.",
            "created_at": "2021-07-07T20:04:02Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-875894138",
            "id": 875894138,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTg5NDEzOA==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-07T20:04:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/875894138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> make the temp an allocated variable\r\n\r\nIs there a simply change scipy could make to the code to avoid this problem?",
            "created_at": "2021-07-07T20:27:26Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-875909702",
            "id": 875909702,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTkwOTcwMg==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-07T20:27:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/875909702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Is there a simply change scipy could make to the code to avoid this problem?\r\n\r\nprobably to do the copy element-by-element itself:\r\n\r\n```\r\ndnspoly = dns[\"poly\"]\r\nfor i in range(len(dnspoly)):\r\n    poly[i] = dnspoly[i]\r\n```\r\n(and the same for `vint`)\r\n\r\n```\r\n# or maybe?\r\ncdef int[:] dnspoly = dns[\"poly\"]\r\ncdef int[::1] polyview = poly  # may require a cast?\r\npolyview[:] = dnspoly[:]\r\n```",
            "created_at": "2021-07-07T20:30:19Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-875911472",
            "id": 875911472,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTkxMTQ3Mg==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-07T20:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/875911472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks. Feel free to close this or modify the topic to better suit any changes Cython might need to warn/prevent this.",
            "created_at": "2021-07-07T20:33:58Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-875913664",
            "id": 875913664,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTkxMzY2NA==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-07T20:33:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/875913664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": ">  Feel free to close this or modify the topic to better suit any changes Cython might need to warn/prevent this.\r\n\r\nYeah - I'm not really sure what the right thing to do is. The fact that it's a huge hidden temp that the user has no reason to expect makes me think that it deserves a warning possibly? I think changing the code generation to avoid this error would be too complicated though",
            "created_at": "2021-07-08T07:07:49Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-876188869",
            "id": 876188869,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjE4ODg2OQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-08T07:07:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/876188869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "People tend to ignore warnings. I \"fixed\" the scipy code to avoid it, so I will close this. Thanks for the help.",
            "created_at": "2021-07-08T11:40:32Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-876368140",
            "id": 876368140,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjM2ODE0MA==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-08T11:40:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/876368140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        },
        {
            "author_association": "NONE",
            "body": "Why close this? This bug is silent and results in crashes for reasons that are completely invisible to the Cython code.\r\n\r\nIf managing two versions of codegen would be too difficult then how about having a helper macro that either does stack allocation or `malloc` depending on the size.\r\n```\r\n#define SMALL_SIZE 8192\r\n#define _Pyx_alloc_temp(size) (size <= SMALL_SIZE ? alloca(size) : malloc(size))\r\n#define _Pyx_free_temp(ptr, size) if (size > SMALL_SIZE) { free(ptr); }\r\n\r\nint* tmp = (int*)_Pyx_alloc_temp(0x52D1 * 18 * sizeof(int))\r\nif (!tmp) {\r\n    // Handle error\r\n}\r\n// Use tmp ...\r\n_Pyx_free_temp(tmp, 0x52D1 * 18 * sizeof(int));\r\n```",
            "created_at": "2021-07-08T14:56:08Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-876509296",
            "id": 876509296,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjUwOTI5Ng==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-08T14:56:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/876509296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13238737?v=4",
                "events_url": "https://api.github.com/users/peterbell10/events{/privacy}",
                "followers_url": "https://api.github.com/users/peterbell10/followers",
                "following_url": "https://api.github.com/users/peterbell10/following{/other_user}",
                "gists_url": "https://api.github.com/users/peterbell10/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/peterbell10",
                "id": 13238737,
                "login": "peterbell10",
                "node_id": "MDQ6VXNlcjEzMjM4NzM3",
                "organizations_url": "https://api.github.com/users/peterbell10/orgs",
                "received_events_url": "https://api.github.com/users/peterbell10/received_events",
                "repos_url": "https://api.github.com/users/peterbell10/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/peterbell10/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/peterbell10/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/peterbell10"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree this is a subtle error that would be good to avoid. I think we're allocating the temp to make the reassignment of the global look atomic (it either happens completely, or not at all in case there was a bug). We could keep it open, but I don't know in what timeframe it would be addressed. (It's not just a matter of creating a macro that switches allocation type based on a size parameter, but refactoring the temp generation code to make sure it is always freed correctly and the usages to handle a pointer rather than value. Feasible, possibly easier if isolated to the buffer unpacking code, but nontrivial.)",
            "created_at": "2021-07-08T19:06:42Z",
            "html_url": "https://github.com/cython/cython/issues/4272#issuecomment-876676260",
            "id": 876676260,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4272",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjY3NjI2MA==",
            "performed_via_github_app": null,
            "updated_at": "2021-07-08T19:06:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/876676260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4272/comments",
    "created_at": "2021-07-07T19:36:53Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-08T11:40:32Z",
            "event": "closed",
            "id": 4994418758,
            "node_id": "MDExOkNsb3NlZEV2ZW50NDk5NDQxODc1OA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4994418758"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-07-08T19:06:42Z",
            "event": "reopened",
            "id": 4996728040,
            "node_id": "MDEzOlJlb3BlbmVkRXZlbnQ0OTk2NzI4MDQw",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4996728040"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4272/events",
    "html_url": "https://github.com/cython/cython/issues/4272",
    "id": 939200819,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4272/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MzkyMDA4MTk=",
    "number": 4272,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] `global` can overflow stack?",
    "updated_at": "2021-07-08T19:06:42Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4272",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
        "events_url": "https://api.github.com/users/mattip/events{/privacy}",
        "followers_url": "https://api.github.com/users/mattip/followers",
        "following_url": "https://api.github.com/users/mattip/following{/other_user}",
        "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mattip",
        "id": 823911,
        "login": "mattip",
        "node_id": "MDQ6VXNlcjgyMzkxMQ==",
        "organizations_url": "https://api.github.com/users/mattip/orgs",
        "received_events_url": "https://api.github.com/users/mattip/received_events",
        "repos_url": "https://api.github.com/users/mattip/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mattip"
    }
}