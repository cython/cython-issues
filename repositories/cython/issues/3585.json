{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The min/max reduction operators have been introduced for C/C++ with OpenMP 3.1. As far as I know, in the revision 3.0, only Fortran had those reduction operators.\r\n\r\nHere's an example.\r\n```cython\r\nfrom cython import parallel\r\n\r\ndef test():\r\n    cdef int i, best = 0\r\n    with nogil:\r\n        for i in parallel.prange(10):\r\n            best = max(best, i)\r\n```\r\n\r\nI guess it should be fairly straightforward to implement.\r\n\r\nBTW, I'm open workaround suggestions as I don't see any that work at the moment. I feel like there should be a way to express it like this:\r\n```cython\r\nfrom cython import parallel\r\ndef test():\r\n    cdef int i, threadbest, globalbest = 0\r\n\r\n    with nogil, parallel.parallel():\r\n        # threadbest is thread-local\r\n        threadbest = 0\r\n\r\n        for i in parallel.prange(10):\r\n            threadbest = max(threadbest, i)\r\n\r\n        # This should be in a critical section\r\n        globalbest = max(globalbest, threadbest)\r\n\r\n    return globalbest\r\n```\r\nWhich should probably produce a code that looks like this:\r\n```C\r\nint test(void) {\r\n\tint i, threadbest, globalbest = 0;\r\n\r\n\t#pragma omp parallel private(threadbest, i) shared(globalbest)\r\n\t{\r\n\t\tthreadbest = 0;\r\n\r\n\t\t#pragma omp for\r\n\t\tfor (i = 0; i < 10; i++) {\r\n\t\t\tthreadbest = max(threadbest, i);\r\n\t\t}\r\n\r\n\t\t#pragma omp critical\r\n\t\tglobalbest = max(globalbest, threadbest);\r\n\t}\r\n\r\n\treturn globalbest;\r\n}\r\n```\r\nBut I don't see a way to achieve this with cython at the moment.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "For what it's worth, I found a way to sidestep the analyzer by using pointers and replaced the critical section with an explicit locks.\r\n\r\n```cython\r\nfrom cython import parallel\r\ncimport openmp as omp\r\n\r\ndef main():\r\n    cdef int i, threadbest, globalbest = 0\r\n    cdef int *pthreadbest\r\n    cdef int *pglobalbest\r\n    cdef omp.omp_lock_t mutex\r\n\r\n    pglobalbest = &globalbest\r\n    omp.omp_init_lock(&mutex)\r\n\r\n    with nogil, parallel.parallel():\r\n        # threadbest is thread-local\r\n        threadbest = 0\r\n        pthreadbest = &threadbest\r\n\r\n        for i in parallel.prange(10):\r\n            pthreadbest[0] = max(pthreadbest[0], i)\r\n\r\n        # This should be in a critical section\r\n        omp.omp_set_lock(&mutex)\r\n        pglobalbest[0] = max(pglobalbest[0], threadbest)\r\n        omp.omp_unset_lock(&mutex)\r\n\r\n    omp.omp_destroy_lock(&mutex)\r\n\r\n    return globalbest\r\n```\r\n\r\nI understand cython want to remain easy for beginners, but I don't think it should do so by getting in the way of more advanced users.",
            "created_at": "2020-05-07T14:32:59Z",
            "html_url": "https://github.com/cython/cython/issues/3585#issuecomment-625292054",
            "id": 625292054,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3585",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTI5MjA1NA==",
            "updated_at": "2020-05-07T14:32:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/625292054",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6136274?v=4",
                "events_url": "https://api.github.com/users/Celelibi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Celelibi/followers",
                "following_url": "https://api.github.com/users/Celelibi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Celelibi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Celelibi",
                "id": 6136274,
                "login": "Celelibi",
                "node_id": "MDQ6VXNlcjYxMzYyNzQ=",
                "organizations_url": "https://api.github.com/users/Celelibi/orgs",
                "received_events_url": "https://api.github.com/users/Celelibi/received_events",
                "repos_url": "https://api.github.com/users/Celelibi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Celelibi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Celelibi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Celelibi"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3585/comments",
    "created_at": "2020-05-07T13:08:19Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3585/events",
    "html_url": "https://github.com/cython/cython/issues/3585",
    "id": 614044351,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3585/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2MTQwNDQzNTE=",
    "number": 3585,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Support for OpenMP min/max reduction",
    "updated_at": "2020-05-07T14:32:59Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3585",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/6136274?v=4",
        "events_url": "https://api.github.com/users/Celelibi/events{/privacy}",
        "followers_url": "https://api.github.com/users/Celelibi/followers",
        "following_url": "https://api.github.com/users/Celelibi/following{/other_user}",
        "gists_url": "https://api.github.com/users/Celelibi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Celelibi",
        "id": 6136274,
        "login": "Celelibi",
        "node_id": "MDQ6VXNlcjYxMzYyNzQ=",
        "organizations_url": "https://api.github.com/users/Celelibi/orgs",
        "received_events_url": "https://api.github.com/users/Celelibi/received_events",
        "repos_url": "https://api.github.com/users/Celelibi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Celelibi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Celelibi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Celelibi"
    }
}