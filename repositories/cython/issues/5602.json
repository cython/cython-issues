{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\r\n\r\nI have two enum classes where one of them references members of the other. The Cython compiler crashes when parsing the second enum class definition at the point of the reference to the first, specifically when attempting to access a member.\r\n\r\n### Code to reproduce the behavior:\r\n\r\n```cython\r\n# distutils: language = c++                                                                                                                                                                               \r\n \r\nfrom libcpp cimport bool as cbool\r\nfrom libc.stdint cimport int8_t  # Could also use something simpler like int, which I tried.\r\n \r\ncdef enum class Color(int8_t):\r\n    RED = 1\r\n    GREEN = 2\r\n\r\n\r\ncdef enum class Color2(int8_t):\r\n    RED = (<int8_t> Color.RED)\r\n    GREEN = (<int8_t> Color.GREEN)\r\n```\r\n\r\nThis results in:\r\n```\r\n(test_cython_3) vyasr-dt% cythonize -i example2.pyx\r\nCompiling /home/vyasr/local/testing/cython_cdef_enum/example2.pyx because it changed.\r\n[1/1] Cythonizing ...\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    RED = 1\r\n    GREEN = 2\r\n\r\n\r\ncdef enum class Color2(int8_t):\r\n    RED = (<int8_t> Color.RED)\r\n                         ^\r\n------------------------------------------------------------\r\n\r\nexample2.pyx:13:25: Compiler crash in AnalyseDeclarationsTransform\r\n\r\nFile 'ModuleNode.py', line 203, in analyse_declarations: ModuleNode(example2.pyx:1:0,\r\n    full_module_name = 'example2')\r\nFile 'Nodes.py', line 393, in analyse_declarations: StatListNode(example2.pyx:3:0)\r\nFile 'Nodes.py', line 1728, in analyse_declarations: CEnumDefNode(example2.pyx:12:5,\r\n    name = 'Color2',\r\n    scoped = True,\r\n    visibility = 'private')\r\nFile 'Nodes.py', line 1766, in analyse_enum_declarations: CEnumDefItemNode(example2.pyx:13:4,\r\n    name = 'RED')\r\nFile 'ExprNodes.py', line 628, in analyse_const_expression: TypecastNode(example2.pyx:13:11,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 10936, in analyse_types: TypecastNode(example2.pyx:13:11,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 7323, in analyse_types: AttributeNode(example2.pyx:13:25,\r\n    attribute = 'RED',\r\n    is_attribute = 1,\r\n    needs_none_check = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/home/vyasr/miniconda3/envs/test_cython_3/lib/python3.10/site-packages/Cython/Compiler/ExprNodes.py\", line 7323, in analyse_types\r\n    self.initialized_check = env.directives['initializedcheck']\r\nAttributeError: 'CppScopedEnumScope' object has no attribute 'directives'\r\nTraceback (most recent call last):\r\n  File \"/home/vyasr/miniconda3/envs/test_cython_3/bin/cythonize\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/vyasr/miniconda3/envs/test_cython_3/lib/python3.10/site-packages/Cython/Build/Cythonize.py\", line 243, in main\r\n    _cython_compile_files(all_paths, options)\r\n  File \"/home/vyasr/miniconda3/envs/test_cython_3/lib/python3.10/site-packages/Cython/Build/Cythonize.py\", line 70, in _cython_compile_files\r\n    ext_modules = cythonize(\r\n  File \"/home/vyasr/miniconda3/envs/test_cython_3/lib/python3.10/site-packages/Cython/Build/Dependencies.py\", line 1134, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/vyasr/miniconda3/envs/test_cython_3/lib/python3.10/site-packages/Cython/Build/Dependencies.py\", line 1301, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: /home/vyasr/local/testing/cython_cdef_enum/example2.pyx\r\n\r\n```\r\n\r\n### Expected behaviour\r\n\r\nThis should compile successfully.\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.10.2\r\n\r\n### Cython version\r\n\r\n3.0.0\r\n\r\n### Additional context\r\n\r\nThis particular example is of course a contrived MWE. The practical use case I had in mind is wrapping a `cdef extern` `cdef enum class` corresponding to a C++ enum into a `cpdef enum class` that may be used by Python and Cython consumers of a Cython module. I have made sure that the two enums have the same underlying integral types, and I've included the appropriate casts. The equivalent C++ code (which compiles fine) would be something like:\r\n\r\n```\r\nenum class Color : int {\r\n    RED,\r\n    GREEN\r\n};\r\n\r\nenum class Color2 : int {\r\n    RED = static_cast<int>(Color::RED),\r\n    GREEN = static_cast<int>(Color::GREEN)\r\n};\r\n\r\nint main() {\r\n    auto x = Color2::RED;\r\n}\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> The practical use case I had in mind is wrapping a cdef extern cdef enum class corresponding to a C++ enum into a cpdef enum class that may be used by Python and Cython consumers of a Cython module\r\n\r\nYou can just do this directly by declaring it as `cpdef` in the extern block:\r\n\r\nhttps://github.com/cython/cython/blob/6ad6ca0e9e7d030354b7fe7d7b56c3f6e6a4bc23/tests/run/cpdef_enums.pyx#L61-L65\r\n\r\nThe linked example is for a regular enum rather than an enum class but I don't think that should make a difference.\r\n\r\nWith that said, it's still a real bug, even if I don't think your use-case is necessary",
            "created_at": "2023-08-08T18:11:47Z",
            "html_url": "https://github.com/cython/cython/issues/5602#issuecomment-1670075857",
            "id": 1670075857,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5602",
            "node_id": "IC_kwDOABDGAc5ji1XR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1670075857/reactions"
            },
            "updated_at": "2023-08-08T18:11:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1670075857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yup that is the workaround I went with.",
            "created_at": "2023-08-08T23:03:45Z",
            "html_url": "https://github.com/cython/cython/issues/5602#issuecomment-1670426317",
            "id": 1670426317,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5602",
            "node_id": "IC_kwDOABDGAc5jkK7N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1670426317/reactions"
            },
            "updated_at": "2023-08-08T23:03:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1670426317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5602/comments",
    "created_at": "2023-08-07T21:58:05Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-08-08T18:04:50Z",
            "event": "labeled",
            "id": 10038593511,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc5tsCukzwAAAAJWWMfn",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/10038593511"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5602/events",
    "html_url": "https://github.com/cython/cython/issues/5602",
    "id": 1840262052,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5602/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5tsCuk",
    "number": 5602,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5602/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5602/timeline",
    "title": "[BUG] Compiler crashes when one enum class references another",
    "updated_at": "2023-08-08T23:03:45Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5602",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vyasr",
        "id": 1538165,
        "login": "vyasr",
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vyasr"
    }
}