{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I am trying to change my already heavily typed Python code to run in Cython. For that, it felt useful to put `@cython.ccall` everywhere and see what happens.\r\n\r\nI found out that Cython does not understand the `-> None` function return type annotation as intended. Let's take this dumb function.\r\n\r\n    def do_something(l):\r\n        if len(l) == 0:\r\n            return\r\n        l.append(1)\r\n\r\nThis works fine with the decorator.\r\n\r\n```\r\nimport cython\r\n\r\n@cython.ccall\r\ndef do_something(l):\r\n    if len(l) == 0:\r\n        return\r\n    l.append(1)\r\n```\r\n\r\nIt's type annotation is \r\n\r\n    def do_something(l: List[int]) -> None:\r\n\r\nor\r\n\r\n    def do_something(l: List[int]) -> type(None):\r\n\r\nbut with both these type annotations, Cython complains\r\n\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\nfrom typing import List, NoneType\r\nimport cython\r\n\r\n@cython.ccall\r\ndef do_something(l: List[int]) -> type(None):\r\n                                     ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:5:38: Not a type\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\nimport cython\r\n\r\n@cython.ccall\r\ndef do_something(l: List[int]) -> type(None):\r\n    if len(l) == 0:\r\n        return\r\n       ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:7:8: Return value required\r\n```\r\n\r\nCython should know to treat None return types special.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Right, would be nice to support the `None` case (the `type(None)` case seems excessive for now). PR welcome.",
            "created_at": "2020-04-26T08:38:37Z",
            "html_url": "https://github.com/cython/cython/issues/3553#issuecomment-619510267",
            "id": 619510267,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3553",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTUxMDI2Nw==",
            "updated_at": "2020-04-26T08:38:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/619510267",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am only now diving into Cython head first, having no C experience and only a recent need to speed up some Python. So I have no idea how to start with a PR for this or anything Cython yet. But I will try to stick around and learn the ropes so I can contribute later.",
            "created_at": "2020-04-26T11:11:35Z",
            "html_url": "https://github.com/cython/cython/issues/3553#issuecomment-619531287",
            "id": 619531287,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3553",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTUzMTI4Nw==",
            "updated_at": "2020-04-26T11:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/619531287",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/1579723?v=4",
                "events_url": "https://api.github.com/users/Anaphory/events{/privacy}",
                "followers_url": "https://api.github.com/users/Anaphory/followers",
                "following_url": "https://api.github.com/users/Anaphory/following{/other_user}",
                "gists_url": "https://api.github.com/users/Anaphory/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Anaphory",
                "id": 1579723,
                "login": "Anaphory",
                "node_id": "MDQ6VXNlcjE1Nzk3MjM=",
                "organizations_url": "https://api.github.com/users/Anaphory/orgs",
                "received_events_url": "https://api.github.com/users/Anaphory/received_events",
                "repos_url": "https://api.github.com/users/Anaphory/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Anaphory/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Anaphory/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Anaphory"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Anaphory If you just want to make your code work, you can add `@cython.returns(cython.void)` as a decorator. It'd definitely be nice to infer this from `None` in future though.",
            "created_at": "2020-04-26T11:51:18Z",
            "html_url": "https://github.com/cython/cython/issues/3553#issuecomment-619537026",
            "id": 619537026,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3553",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTUzNzAyNg==",
            "updated_at": "2020-04-26T11:51:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/619537026",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @cython.returns(cython.void) \r\n\r\nNote that that's not the same thing because it disables efficient exception propagation. The `-> None` annotation should return at least an error indicator and not `void`. (There's already some special casing for return type annotations in this case that makes it default to `except *`, but an actual error indicator is still more efficient since it lets the C compiler understand what's going on.)\r\n\r\nSo, it could actually return `None` as an object, or we could change the signature to Cython's internal return code type (which coerces to Python as `None`), as done for builtin functions in `Builtin.py` (marked as `r`).",
            "created_at": "2020-04-26T12:04:52Z",
            "html_url": "https://github.com/cython/cython/issues/3553#issuecomment-619538876",
            "id": 619538876,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3553",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTUzODg3Ng==",
            "updated_at": "2020-04-26T12:08:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/619538876",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3553/comments",
    "created_at": "2020-04-25T16:19:15Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-26T08:38:57Z",
            "event": "labeled",
            "id": 3272701777,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNzI3MDE3Nzc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3272701777"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-26T08:38:57Z",
            "event": "labeled",
            "id": 3272701778,
            "label": {
                "color": "444444",
                "name": "Pure Python Mode"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNzI3MDE3Nzg=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3272701778"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-26T08:38:57Z",
            "event": "labeled",
            "id": 3272701779,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNzI3MDE3Nzk=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3272701779"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/1579723?v=4",
                "events_url": "https://api.github.com/users/Anaphory/events{/privacy}",
                "followers_url": "https://api.github.com/users/Anaphory/followers",
                "following_url": "https://api.github.com/users/Anaphory/following{/other_user}",
                "gists_url": "https://api.github.com/users/Anaphory/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Anaphory",
                "id": 1579723,
                "login": "Anaphory",
                "node_id": "MDQ6VXNlcjE1Nzk3MjM=",
                "organizations_url": "https://api.github.com/users/Anaphory/orgs",
                "received_events_url": "https://api.github.com/users/Anaphory/received_events",
                "repos_url": "https://api.github.com/users/Anaphory/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Anaphory/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Anaphory/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Anaphory"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-26T11:51:18Z",
            "event": "mentioned",
            "id": 3272863238,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI3Mjg2MzIzOA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3272863238"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/1579723?v=4",
                "events_url": "https://api.github.com/users/Anaphory/events{/privacy}",
                "followers_url": "https://api.github.com/users/Anaphory/followers",
                "following_url": "https://api.github.com/users/Anaphory/following{/other_user}",
                "gists_url": "https://api.github.com/users/Anaphory/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Anaphory",
                "id": 1579723,
                "login": "Anaphory",
                "node_id": "MDQ6VXNlcjE1Nzk3MjM=",
                "organizations_url": "https://api.github.com/users/Anaphory/orgs",
                "received_events_url": "https://api.github.com/users/Anaphory/received_events",
                "repos_url": "https://api.github.com/users/Anaphory/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Anaphory/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Anaphory/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Anaphory"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-26T11:51:18Z",
            "event": "subscribed",
            "id": 3272863239,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNzI4NjMyMzk=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3272863239"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3553/events",
    "html_url": "https://github.com/cython/cython/issues/3553",
    "id": 606803854,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558499,
            "name": "Pure Python Mode",
            "node_id": "MDU6TGFiZWw0MjU1NTg0OTk=",
            "url": "https://api.github.com/repos/cython/cython/labels/Pure%20Python%20Mode"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        },
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3553/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2MDY4MDM4NTQ=",
    "number": 3553,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Pure Python mode does not like -> None annotations",
    "updated_at": "2020-04-26T12:08:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3553",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/1579723?v=4",
        "events_url": "https://api.github.com/users/Anaphory/events{/privacy}",
        "followers_url": "https://api.github.com/users/Anaphory/followers",
        "following_url": "https://api.github.com/users/Anaphory/following{/other_user}",
        "gists_url": "https://api.github.com/users/Anaphory/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Anaphory",
        "id": 1579723,
        "login": "Anaphory",
        "node_id": "MDQ6VXNlcjE1Nzk3MjM=",
        "organizations_url": "https://api.github.com/users/Anaphory/orgs",
        "received_events_url": "https://api.github.com/users/Anaphory/received_events",
        "repos_url": "https://api.github.com/users/Anaphory/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Anaphory/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Anaphory/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Anaphory"
    }
}