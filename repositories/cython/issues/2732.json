{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Simplified code:\r\n```\r\ncpdef enum MyEnum:\r\n    MY_VAL=2\r\n\r\ndef my_fn():\r\n    return <MyEnum>2\r\n```\r\n\r\nI'd expect my_fn() to return MyEnum.MY_VAL, but just returns the int value.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Encountered the same thing.\r\n\r\nFWIW this works:\r\n\r\n```cython\r\ncpdef enum MyEnum:\r\n    MY_VAL = 2\r\n\r\ndef my_fn():\r\n    return MyEnum(2)\r\n```\r\n\r\nThat said, would not have expected needing the explicit construction of `MyEnum`.",
            "created_at": "2022-07-07T00:38:59Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1176893773",
            "id": 1176893773,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GJflN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1176893773/reactions"
            },
            "updated_at": "2022-07-07T00:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1176893773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Guessing there would need to be some alternative handling [here]( https://github.com/cython/cython/blob/796fd06da1fa1d5481ce43a6b6c901bc87f0ce9a/Cython/Compiler/PyrexTypes.py#L495 ) to handle `cpdef enum` types conversion. Noting this in part as that code path seems to be used to generate the `int` coercion C code seen with this example.",
            "created_at": "2022-07-07T08:17:18Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1177237084",
            "id": 1177237084,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GKzZc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1177237084/reactions"
            },
            "updated_at": "2022-07-07T08:17:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1177237084",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Maybe this could be done by checking if it is an instance of [`__Pyx_EnumBase`]( https://github.com/cython/cython/blob/efdf996dced075682d86b7e53a12b56b5ebfea38/Cython/Utility/CpdefEnums.pyx#L22 ).\r\n\r\nWhat do you think @scoder? 🙂",
            "created_at": "2022-07-07T08:30:19Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1177249516",
            "id": 1177249516,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GK2bs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1177249516/reactions"
            },
            "updated_at": "2022-07-07T08:30:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1177249516",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It is worth noting that using the construction workaround in comment ( https://github.com/cython/cython/issues/2732#issuecomment-1176893773 ) comes with fairly significant overhead.\r\n\r\n```cython\r\ncpdef enum MyEnum:\r\n    MY_VAL = 2\r\n\r\ndef my_fn1():\r\n    return MyEnum.MY_VAL\r\n\r\ndef my_fn2():\r\n    return MyEnum(MyEnum.MY_VAL)\r\n```\r\n\r\n```python\r\nIn [3]: %timeit my_fn1()\r\n27.6 ns ± 0.394 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\r\n\r\nIn [4]: %timeit my_fn2()\r\n398 ns ± 5.33 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each)\r\n```",
            "created_at": "2022-07-07T23:34:57Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178370689",
            "id": 1178370689,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GPIKB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178370689/reactions"
            },
            "updated_at": "2022-07-07T23:34:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178370689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "A more performant approach might be mapping preexisting `MyEnum` Python objects to `MyEnum` C values like so.\r\n\r\n```cython\r\ncpdef enum MyEnum:\r\n    ZERO = 0\r\n    ONE = 1\r\n\r\n\r\ncdef inline _convert_MyEnum_c_to_py(MyEnum c_enum):\r\n    if c_enum == MyEnum.ZERO:\r\n        return (<object>MyEnum).ZERO\r\n    elif c_enum == MyEnum.ONE:\r\n        return (<object>MyEnum).ONE\r\n    else:\r\n        raise ValueError(f\"Unknown `MyEnum` value: {c_enum}\")\r\n\r\n \r\ndef my_fn1():\r\n    cdef MyEnum c_enum = MyEnum.ONE\r\n    cdef object py_enum = <object>c_enum\r\n    return py_enum\r\n\r\n\r\ndef my_fn2():\r\n    cdef MyEnum c_enum = MyEnum.ONE\r\n    cdef object py_enum = _convert_MyEnum_c_to_py(c_enum)\r\n    return py_enum\r\n```\r\n\r\n```python\r\nIn [3]: %timeit my_fn1()\r\n28.1 ns ± 1.42 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\r\n\r\nIn [4]: %timeit my_fn2()\r\n79.9 ns ± 0.537 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\r\n```\r\n\r\nThis still adds some overhead due to the global lookup for `MyEnum` and attribute access, but it is unclear how this would be avoided given the nature of the check.",
            "created_at": "2022-07-07T23:58:11Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178383584",
            "id": 1178383584,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GPLTg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178383584/reactions"
            },
            "updated_at": "2022-07-08T00:23:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178383584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Guessing there would need to be some alternative handling [here](https://github.com/cython/cython/blob/796fd06da1fa1d5481ce43a6b6c901bc87f0ce9a/Cython/Compiler/PyrexTypes.py#L495) to handle `cpdef enum` types conversion. Noting this in part as that code path seems to be used to generate the `int` coercion C code seen with this example.\r\n\r\nDoesn't look to go through there when I set a breakpoint there. (Although I suspect you're broadly right about where to look)",
            "created_at": "2022-07-08T06:50:54Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178621065",
            "id": 1178621065,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GQFSJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178621065/reactions"
            },
            "updated_at": "2022-07-08T06:50:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178621065",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> A more performant approach might be mapping preexisting MyEnum Python objects to MyEnum C values like so.\r\n\r\nIt looks to me like `__Pyx_EnumBase` tries to do this already so I'm slightly surprised there's so much benefit. Possibly \"ordered_dict\" is the wrong structure?",
            "created_at": "2022-07-08T07:04:01Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178630983",
            "id": 1178630983,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GQHtH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178630983/reactions"
            },
            "updated_at": "2022-07-08T07:04:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178630983",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree that this behaviour should be changed. Returning the corresponding Enum object is the expected result. In the case of an invalid enum integer value, I'd also expect an exception, probably a `ValueError` as shown in https://github.com/cython/cython/issues/2732#issuecomment-1178383584. Cython can probably do something more efficient internally than the generic attribute lookup in `(<object>MyEnum).ZERO`.",
            "created_at": "2022-07-08T07:25:30Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178649228",
            "id": 1178649228,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GQMKM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178649228/reactions"
            },
            "updated_at": "2022-07-08T07:25:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178649228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > Guessing there would need to be some alternative handling [here](https://github.com/cython/cython/blob/796fd06da1fa1d5481ce43a6b6c901bc87f0ce9a/Cython/Compiler/PyrexTypes.py#L495) to handle `cpdef enum` types conversion. Noting this in part as that code path seems to be used to generate the `int` coercion C code seen with this example.\r\n> \r\n> Doesn't look to go through there when I set a breakpoint there. (Although I suspect you're broadly right about where to look)\r\n\r\nInteresting came to that conclusion by looking at the generated C code and comparing. In particular was seeing references to that conversion code when doing `<object>c_enum`\r\n\r\nThat said, using the debugger seems like the more reliable way to go\r\n\r\n> > A more performant approach might be mapping preexisting MyEnum Python objects to MyEnum C values like so.\r\n> \r\n> It looks to me like `__Pyx_EnumBase` tries to do this already so I'm slightly surprised there's so much benefit. Possibly \"ordered_dict\" is the wrong structure?\r\n\r\nYeah was noticing that. Think the tricky thing is we want to lookup by `int` in this case, but the keys are `str`s for each value. Wasn't seeing a mapping that went from `int`s to `IntEnum` values, but may be overlooking something",
            "created_at": "2022-07-08T08:41:50Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178719542",
            "id": 1178719542,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GQdU2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178719542/reactions"
            },
            "updated_at": "2022-07-08T08:41:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178719542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > it looks to me like `__Pyx_EnumBase` tries to do this already so I'm slightly surprised there's so much benefit. Possibly \"ordered_dict\" is the wrong structure?\r\n> \r\n> Yeah was noticing that. Think the tricky thing is we want to lookup by `int` in this case, but the keys are `str`s for each value. Wasn't seeing a mapping that went from `int`s to `IntEnum` values, but may be overlooking something\r\n\r\nSo having looked in more detail, it uses Python's `IntEnum` on most modern versions (not the class that's listed in the utility code). If you look at that's constructor it actually have it's own int -> enum map, but presumably you're just losing time on boxing/unboxing the C int.",
            "created_at": "2022-07-08T08:44:55Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178722472",
            "id": 1178722472,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GQeCo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178722472/reactions"
            },
            "updated_at": "2022-07-08T08:45:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178722472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I agree that this behaviour should be changed. Returning the corresponding Enum object is the expected result. In the case of an invalid enum integer value, I'd also expect an exception, probably a `ValueError` as shown in [#2732 (comment)](https://github.com/cython/cython/issues/2732#issuecomment-1178383584). Cython can probably do something more efficient internally than the generic attribute lookup in `(<object>MyEnum).ZERO`.\r\n\r\nThanks Stefan 🙏\r\n\r\nDo you have a sense of where it would make sense to add conversion code like this?\r\n\r\nAgree there is likely a better way to handle accessing the right `IntEnum` value. Do you have thoughts on what would be the best way to approach this?\r\n\r\nAlso guessing we can do some templating to simplify the branch logic (if that is the right way to go).",
            "created_at": "2022-07-08T08:45:40Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178723136",
            "id": 1178723136,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GQeNA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178723136/reactions"
            },
            "updated_at": "2022-07-08T08:45:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178723136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do you have a sense of where it would make sense to add conversion code like this?\r\n\r\n(Not Stefan but) I have a 50% written change with the conversion code in as a `cdef __Pyx_Enum_{{name}}_to_py(int c_val)` in `CpdefEnum.pyx` (and called from the `PyrexTypes.CEnumType.create_to_py_utility_code` function).\r\n\r\n> Agree there is likely a better way to handle accessing the right IntEnum value. Do you have thoughts on what would be the best way to approach this?\r\n\r\nI'm not sure there's a better way to approach this - Cython doesn't look to have much special knowledge of the Python enum\r\n\r\n> Also guessing we can do some templating to simplify the branch logic (if that is the right way to go).\r\n\r\nyes",
            "created_at": "2022-07-08T08:49:10Z",
            "html_url": "https://github.com/cython/cython/issues/2732#issuecomment-1178726483",
            "id": 1178726483,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2732",
            "node_id": "IC_kwDOABDGAc5GQfBT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1178726483/reactions"
            },
            "updated_at": "2022-07-08T08:49:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1178726483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2732/comments",
    "created_at": "2018-11-25T17:25:38Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-07T08:30:19Z",
            "event": "mentioned",
            "id": 6949492452,
            "node_id": "MEE_lADOABDGAc4W5OQgzwAAAAGeONbk",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6949492452"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-07T08:30:19Z",
            "event": "subscribed",
            "id": 6949492465,
            "node_id": "SE_lADOABDGAc4W5OQgzwAAAAGeONbx",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6949492465"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-08T07:18:25Z",
            "event": "milestoned",
            "id": 6957738119,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MIE_lADOABDGAc4W5OQgzwAAAAGetqiH",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6957738119"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-08T07:18:36Z",
            "event": "labeled",
            "id": 6957739272,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "LE_lADOABDGAc4W5OQgzwAAAAGetq0I",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6957739272"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-07-08T07:18:36Z",
            "event": "labeled",
            "id": 6957739275,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "LE_lADOABDGAc4W5OQgzwAAAAGetq0L",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6957739275"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2732/events",
    "html_url": "https://github.com/cython/cython/issues/2732",
    "id": 384099360,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2732/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 626,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 39,
        "state": "open",
        "title": "3.0",
        "updated_at": "2022-07-08T07:18:25Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWUzODQwOTkzNjA=",
    "number": 2732,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/2732/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/2732/timeline",
    "title": "Casting into to cpdef enum",
    "updated_at": "2022-07-08T08:49:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2732",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2306230?v=4",
        "events_url": "https://api.github.com/users/Xfel/events{/privacy}",
        "followers_url": "https://api.github.com/users/Xfel/followers",
        "following_url": "https://api.github.com/users/Xfel/following{/other_user}",
        "gists_url": "https://api.github.com/users/Xfel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Xfel",
        "id": 2306230,
        "login": "Xfel",
        "node_id": "MDQ6VXNlcjIzMDYyMzA=",
        "organizations_url": "https://api.github.com/users/Xfel/orgs",
        "received_events_url": "https://api.github.com/users/Xfel/received_events",
        "repos_url": "https://api.github.com/users/Xfel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Xfel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Xfel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Xfel"
    }
}