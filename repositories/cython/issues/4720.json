{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- DO NOT use the bug and feature tracker for general questions and support requests.\r\n  Use the `cython-users` mailing list instead.\r\n  It has a wider audience, so you get more and better answers.\r\n- Did you search for similar issues already?\r\n  Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release?\r\n  It might already have what you want to report.\r\n  Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen raising a Python exception in a cdef function marked with `except +`, the exception is not always propagated to the call site. Related to #2603, most likely due to https://github.com/cython/cython/pull/2615#discussion_r219310909. Can it be made safe by replacing `except +` with `except *`?\r\n\r\n**To Reproduce**\r\nThree files are needed to reproduce the behaviour.\r\n\r\nIn `Makefile`:\r\n\r\n```Makefile\r\n.DEFAULT_GOAL := main\r\n%.cpp: %.pyx\r\n\tpython3 -m cython -3 --cplus --directive embedsignature=True --directive binding=True -o $@ $<\r\n%.cpp.o: %.cpp\r\n\tg++ -isystem /usr/include/python3.8 -O3 -g -fPIC -pthread -Wall -Wextra -std=c++14 -o $@ -c $<\r\n%.so: %.cpp.o\r\n\tg++ -fPIC -O3 -g -pthread -shared -Wl,-soname,helloworld.so -o $@ $<\r\nmain.txt: helloworld.so helloworld_utils.so\r\n\ttouch main.txt\r\nmain: main.txt\r\n\tpython3 -c 'import helloworld;helloworld.MyClass(\"string\");helloworld.MyClass(123);print(\"No error was raised!\")'\r\n```\r\n\r\nIn `helloworld_utils.pyx`:\r\n\r\n```cython\r\ndef to_bytes(s):\r\n    if isinstance(s, unicode):\r\n        return ( < unicode > s).encode(\"utf8\")\r\n    return s\r\n```\r\n\r\nIn `helloworld.pyx`:\r\n\r\n```cython\r\nimport helloworld_utils\r\nfrom libcpp.string cimport string\r\nfrom libcpp.unordered_map cimport unordered_map\r\nctypedef unordered_map[string, string] VarMap\r\n\r\ncdef class MyClass:\r\n    def __init__(self, value):\r\n        cdef VarMap converted_value\r\n        converted_value[helloworld_utils.to_bytes(\"value\")] = python_object_to_variant(value)\r\n\r\ncdef string python_object_to_variant(value) except +:\r\n    cdef string out\r\n#    if isinstance(value, str):\r\n#        out = helloworld_utils.to_bytes(value)\r\n#        return out\r\n    raise TypeError(f\"cannot convert type {type(value)} to std::string\")\r\n```\r\n\r\nRunning `make` to build the module and run the python script results in message `\"No error was raised!\"` being printed to stdout.\r\n\r\n**Expected behavior**\r\nThe expected outcome is a `TypeError`, and it can be obtained by doing one of the following actions:\r\n- uncommenting the commented lines in the body of `python_object_to_variant()`\r\n- replacing `helloworld_utils.to_bytes(\"value\")` with `b\"value\"` in `MyClass.__init__()`\r\n- replacing `helloworld_utils.to_bytes(\"value\")` with `to_bytes(\"value\")` in `MyClass.__init__()` and copy-pasting the definition of `to_bytes()` in `helloworld.pyx`\r\n- replacing `except +` with `except *`\r\n\r\nThe following workarounds didn't help:\r\n- replacing `except +` with `except +*` (due to #3065)\r\n- adding `except +` to `U& operator[](T&)` in `Cython/Includes/libcpp/unordered_map.pxd`\r\n- replacing `converted_value[a] = b` by `converted_value.insert(pair[string, string](a, b))`\r\n\r\n**Environment:**\r\nReproducible in 2 environments:\r\n - OS: Ubuntu 20.04 resp. Ubuntu 22.04\r\n - Python version 3.8.10 resp. 3.9.5\r\n - Cython version 0.29.14 resp. 0.29.21\r\n\r\n**Additional context**\r\nThe bug is always reproducible in the minimal working example provided above, however the bug originally surfaced in a larger Cython project where it happened at random and infrequently. According to [Exception handling in cython cdef declarations](https://groups.google.com/g/cython-users/c/C12uFUicH1Y/m/bLWDULvUDAAJ), declaring the cdef function with `except *` seems to be the preferred approach in this situation, although it comes with a small overhead. According to #2603, declaring the cdef function with `except +` shouldn't prevent the propagation of Python exceptions.",
    "closed_at": "2022-04-08T21:37:08Z",
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "It isn't completely obvious from the issues you link, but `except+` only makes sense for `extern` functions. Cython functions _never_ raise c++ exceptions and they should never allow c++ exceptions to propagate through them (they only handle reference counting correctly if the c++ exception is caught and handled/converted immediately).\r\n\r\nThere may be a genuine issue here, but in this case the function should just be `except *`",
            "created_at": "2022-04-07T06:11:15Z",
            "html_url": "https://github.com/cython/cython/issues/4720#issuecomment-1091117768",
            "id": 1091117768,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4720",
            "node_id": "IC_kwDOABDGAc5BCSLI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1091117768/reactions"
            },
            "updated_at": "2022-04-07T06:11:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1091117768",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "@da-woods Thanks for the clarification! It makes sense now. I'll make that change.",
            "created_at": "2022-04-07T15:06:36Z",
            "html_url": "https://github.com/cython/cython/issues/4720#issuecomment-1091855930",
            "id": 1091855930,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4720",
            "node_id": "IC_kwDOABDGAc5BFGY6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1091855930/reactions"
            },
            "updated_at": "2022-04-07T15:06:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1091855930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42201407?v=4",
                "events_url": "https://api.github.com/users/jngrad/events{/privacy}",
                "followers_url": "https://api.github.com/users/jngrad/followers",
                "following_url": "https://api.github.com/users/jngrad/following{/other_user}",
                "gists_url": "https://api.github.com/users/jngrad/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jngrad",
                "id": 42201407,
                "login": "jngrad",
                "node_id": "MDQ6VXNlcjQyMjAxNDA3",
                "organizations_url": "https://api.github.com/users/jngrad/orgs",
                "received_events_url": "https://api.github.com/users/jngrad/received_events",
                "repos_url": "https://api.github.com/users/jngrad/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jngrad/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jngrad/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jngrad"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4720/comments",
    "created_at": "2022-04-07T02:30:45Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-04-07T15:06:36Z",
            "event": "mentioned",
            "id": 6389423201,
            "node_id": "MEE_lADOABDGAc5HQQInzwAAAAF81txh",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6389423201"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-04-07T15:06:36Z",
            "event": "subscribed",
            "id": 6389423213,
            "node_id": "SE_lADOABDGAc5HQQInzwAAAAF81txt",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6389423213"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/in/29196?v=4",
                "events_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/kodiakhq",
                "id": 49736102,
                "login": "kodiakhq[bot]",
                "node_id": "MDM6Qm90NDk3MzYxMDI=",
                "organizations_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kodiakhq%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/kodiakhq%5Bbot%5D"
            },
            "commit_id": "a3cad693e6587dd77b1db5e8372f6d2ef1261d3c",
            "commit_url": "https://api.github.com/repos/espressomd/espresso/commits/a3cad693e6587dd77b1db5e8372f6d2ef1261d3c",
            "created_at": "2022-04-08T13:17:27Z",
            "event": "referenced",
            "id": 6396405077,
            "node_id": "REFE_lADOABDGAc5HQQInzwAAAAF9QWVV",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6396405077"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42201407?v=4",
                "events_url": "https://api.github.com/users/jngrad/events{/privacy}",
                "followers_url": "https://api.github.com/users/jngrad/followers",
                "following_url": "https://api.github.com/users/jngrad/following{/other_user}",
                "gists_url": "https://api.github.com/users/jngrad/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jngrad",
                "id": 42201407,
                "login": "jngrad",
                "node_id": "MDQ6VXNlcjQyMjAxNDA3",
                "organizations_url": "https://api.github.com/users/jngrad/orgs",
                "received_events_url": "https://api.github.com/users/jngrad/received_events",
                "repos_url": "https://api.github.com/users/jngrad/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jngrad/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jngrad/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jngrad"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2022-04-08T21:37:08Z",
            "event": "closed",
            "id": 6399630692,
            "node_id": "CE_lADOABDGAc5HQQInzwAAAAF9cp1k",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/6399630692"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4720/events",
    "html_url": "https://github.com/cython/cython/issues/4720",
    "id": 1195442727,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4720/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5HQQIn",
    "number": 4720,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4720/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4720/timeline",
    "title": "[BUG] Python exceptions don't always propagate from an \"except +\" function in Cython 0.29",
    "updated_at": "2022-04-08T21:37:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4720",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/42201407?v=4",
        "events_url": "https://api.github.com/users/jngrad/events{/privacy}",
        "followers_url": "https://api.github.com/users/jngrad/followers",
        "following_url": "https://api.github.com/users/jngrad/following{/other_user}",
        "gists_url": "https://api.github.com/users/jngrad/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jngrad",
        "id": 42201407,
        "login": "jngrad",
        "node_id": "MDQ6VXNlcjQyMjAxNDA3",
        "organizations_url": "https://api.github.com/users/jngrad/orgs",
        "received_events_url": "https://api.github.com/users/jngrad/received_events",
        "repos_url": "https://api.github.com/users/jngrad/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jngrad/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jngrad/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jngrad"
    }
}