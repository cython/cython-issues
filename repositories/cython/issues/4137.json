{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Code below used to compile in 0.29.21 but fails on master with error\r\n>cpdef void test(const int i) nogil:\r\n    with nogil, parallel(num_threads=i):\r\n        ^\r\nmain.pyx:4:9: Trying to release the GIL while it was previously released. \r\n\r\n```\r\nfrom cython.parallel import parallel\r\n\r\ncpdef void test(const int i) nogil:\r\n    with nogil, parallel(num_threads=i):\r\n        pass\r\n```\r\nThe [documentation](https://cython.readthedocs.io/en/latest/src/userguide/external_C_code.html#declaring-a-function-as-callable-without-the-gil) for `nogil` states:\r\n>The function does not in itself release the GIL if it is held by the caller.\r\n\r\nSo the error looks like a bug.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "That does look like a bug.\r\n\r\nIf you want to investigate, then `git bisect` is often useful for finding out why things have decided to stop working",
            "created_at": "2021-04-27T07:06:46Z",
            "html_url": "https://github.com/cython/cython/issues/4137#issuecomment-827368405",
            "id": 827368405,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4137",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzM2ODQwNQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-27T07:13:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/827368405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Thinking about it more, I'm not sure if it's a bug. I think it depends on whether a `with nogil` block claims the GIL on exit, or if it restores the previous state. I don't know off the top my head.\r\n\r\nIf it claims the GIL on exit then the code was probably dodgy on Cython 0.29.\r\n\r\nI'd it restores the previous state then there's no reason to make nested `with gil` blocks an error.\r\n\r\nSee also https://github.com/cython/cython/issues/3443",
            "created_at": "2021-04-27T07:33:21Z",
            "html_url": "https://github.com/cython/cython/issues/4137#issuecomment-827384584",
            "id": 827384584,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4137",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzM4NDU4NA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-27T07:33:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/827384584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If it restores the previous state then there's no reason to make nested `with gil` blocks an error.\n\nOut of the top of my head, this is how it works. I agree that it should be allowed.\n",
            "created_at": "2021-04-27T10:29:18Z",
            "html_url": "https://github.com/cython/cython/issues/4137#issuecomment-827498707",
            "id": 827498707,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4137",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzQ5ODcwNw==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-27T10:29:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/827498707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "It looks like `with nogil` expands to:\r\n```\r\n#ifdef WITH_THREAD\r\nPyThreadState *_save;\r\nPy_UNBLOCK_THREADS  /* i.e. _save = PyEval_SaveThread() */\r\n__Pyx_FastGIL_Remember();\r\n#endif\r\n```\r\n\r\nthen \r\n\r\n```\r\n#ifdef WITH_THREAD\r\n__Pyx_FastGIL_Forget();\r\nPy_BLOCK_THREADS  /* PyEval_RestoreThread(_save); */\r\n#endif\r\n```\r\n\r\nThe documentation for `PyEval_SaveThread` says\r\n>  If the lock has been created, the current thread must have acquired it.\r\n\r\nand `PyEval_RestoreThread` says\r\n> Acquire the global interpreter lock (if it has been created)\r\n\r\nTherefore, the `with nogil` block can only be used when you genuinely hold the GIL and therefore the code that used to \"work\" in Cython 0.29 was broken.\r\n\r\nPersonally, I think it might be worth changing this since it's quite hard to do the right thing in a function marked `nogil` (where we don't actual know whether it has the GIL or not). `with gil` uses `PyGILState_Ensure/Release` which does allow recursive calls so should be safer (but doesn't work with subinterpretters)",
            "created_at": "2021-04-27T16:42:28Z",
            "html_url": "https://github.com/cython/cython/issues/4137#issuecomment-827751861",
            "id": 827751861,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4137",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzc1MTg2MQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-27T16:44:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/827751861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4137/comments",
    "created_at": "2021-04-26T21:36:01Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4137/events",
    "html_url": "https://github.com/cython/cython/issues/4137",
    "id": 868221954,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4137/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4NjgyMjE5NTQ=",
    "number": 4137,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Error when using nogil in cpdef function that has nogil in signature",
    "updated_at": "2021-04-27T16:44:30Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4137",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8052307?v=4",
        "events_url": "https://api.github.com/users/vladima/events{/privacy}",
        "followers_url": "https://api.github.com/users/vladima/followers",
        "following_url": "https://api.github.com/users/vladima/following{/other_user}",
        "gists_url": "https://api.github.com/users/vladima/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vladima",
        "id": 8052307,
        "login": "vladima",
        "node_id": "MDQ6VXNlcjgwNTIzMDc=",
        "organizations_url": "https://api.github.com/users/vladima/orgs",
        "received_events_url": "https://api.github.com/users/vladima/received_events",
        "repos_url": "https://api.github.com/users/vladima/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vladima/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vladima/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vladima"
    }
}