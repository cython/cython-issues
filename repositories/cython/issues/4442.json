{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n**PLEASE READ THIS FIRST:**\r\n- Do not use the bug and feature tracker for support requests. Use the `cython-users` mailing list instead.\r\n- Did you search for similar issues already? Please do, it helps to save us precious time that we otherwise could not invest into development.\r\n- Did you try the latest master branch or pre-release? It might already have what you want to report. Also see the [Changelog](https://github.com/cython/cython/blob/master/CHANGES.rst) regarding recent changes.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen trying to map a C++ exception type to a specific Python exception, unless there is a mention of the Python exception type in the .pyx file, Cython does not generate the needed type declaration for the Python exception type. This leads to a compilation error:\r\n\r\n```\r\ntest.cpp: In function ‘PyObject* __pyx_f_4test_test()’:\r\ntest.cpp:1104:70: error: ‘__pyx_builtin_IOError’ was not declared in this scope\r\n 1104 |     try { throw; } catch(const std::exception& exn) {PyErr_SetString(__pyx_builtin_IOError, exn.what());} catch(...) { PyErr_SetNone(__pyx_builtin_I\r\nOError); }\r\n```\r\n\r\n**To Reproduce**\r\nCode to reproduce the behaviour:\r\ntest.pyx:\r\n```cython\r\n# distutils: language=c++\r\n\r\nfrom testlib cimport Foo\r\n\r\ncdef test():\r\n    # IOError\r\n    Foo()\r\n```\r\n\r\ntestlib.pxd:\r\n```cython\r\ncdef extern from \"testlib.h\":\r\n    cdef cppclass Foo:\r\n        Foo() except +IOError\r\n```\r\n\r\ntestlib.h:\r\n```c++\r\n#include <stdexcept>\r\n\r\nstruct Foo {\r\n    Foo() {\r\n        throw std::runtime_error(\"fail\");\r\n    }\r\n};\r\n```\r\n\r\n**Expected behavior**\r\nThe needed `__pyx_builtin_IOError` type defined in the generated .cpp file and compilation to succeed.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Fedora 33\r\n - Python version 3.9.7\r\n - Cython version:  b5f81f5e900922356ee7aee and 0.29.24 \r\n\r\n**Additional context**\r\nThe problem here is that if there is no mention of `IOError` in the .pyx file, Cython doesn't generate the following line in the .cpp: `static PyObject *__pyx_builtin_IOError;`. Uncommenting the `IOError` line in the reproducer makes this example compile correctly.\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4442/comments",
    "created_at": "2021-11-03T12:15:08Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4442/events",
    "html_url": "https://github.com/cython/cython/issues/4442",
    "id": 1043492094,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4442/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc4-Mmz-",
    "number": 4442,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4442/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4442/timeline",
    "title": "[BUG] exception mapping does not generate code to bring type into scope",
    "updated_at": "2021-11-03T12:15:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4442",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/791741?v=4",
        "events_url": "https://api.github.com/users/lkollar/events{/privacy}",
        "followers_url": "https://api.github.com/users/lkollar/followers",
        "following_url": "https://api.github.com/users/lkollar/following{/other_user}",
        "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lkollar",
        "id": 791741,
        "login": "lkollar",
        "node_id": "MDQ6VXNlcjc5MTc0MQ==",
        "organizations_url": "https://api.github.com/users/lkollar/orgs",
        "received_events_url": "https://api.github.com/users/lkollar/received_events",
        "repos_url": "https://api.github.com/users/lkollar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lkollar"
    }
}