{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\nThe code path used in `__Pyx_SetPackagePathFromImportLib()` for PyPy3 (implied by `!CYTHON_PEP489_MULTI_PHASE_INIT`) uses deprecated `find_loader()` API that causes warnings that ultimately cause hypothesis' test suite to error out.\r\n\r\n**To Reproduce**\r\nThis is using a venv created with PyPy3.9 7.3.9:\r\n\r\n```\r\n$ pypy3.9 -m venv venv\r\n$ . venv/bin/activate\r\n# cython needs to be installed to activate extensions in pydantic\r\n(venv) $ pip install cython\r\nCollecting cython\r\n  Using cached Cython-0.29.28-py2.py3-none-any.whl (983 kB)\r\nInstalling collected packages: cython\r\nSuccessfully installed cython-0.29.28\r\n# install pydantic with extensions using Cython\r\n(venv) $ git clone -q --depth 1 https://github.com/samuelcolvin/pydantic\r\n(venv) $ pip install ./pydantic\r\nProcessing ./pydantic\r\n  Preparing metadata (setup.py) ... done\r\nCollecting typing-extensions>=3.7.4.3\r\n  Using cached typing_extensions-4.2.0-py3-none-any.whl (24 kB)\r\nUsing legacy 'setup.py install' for pydantic, since package 'wheel' is not installed.\r\nInstalling collected packages: typing-extensions, pydantic\r\n  Running setup.py install for pydantic ... done\r\nSuccessfully installed pydantic-1.9.0 typing-extensions-4.2.0\r\n(venv) $ python -Wdefault -c 'import pydantic'\r\n<string>:1: DeprecationWarning: Deprecated since Python 3.4. Use importlib.util.find_spec() instead.\r\n<frozen importlib._bootstrap>:228: ImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__\r\n<frozen importlib._bootstrap>:228: ImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__\r\n```\r\n\r\n**Expected behavior**\r\nNo warnings.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Gentoo Linux\r\n - Python version: PyPy3.9 7.3.9\r\n - Cython version: 0.29.28 (the code seems to be present on `master` too)\r\n\r\n**Additional context**\r\nThese warnings seem to interact badly with pytest. They affect pydantic, pydantic installs a hypothesis entry point and pytest on hypothesis fails to run because of the warnings while importing:\r\n\r\n```\r\npypy3 -m pytest -vv -ra -l -Wdefault --color=yes -p no:cov -p no:flake8 -p no:flakes -p no:pylint tests/cover tests/pytest tests/quality -n 12\r\nException ignored in: 'pydantic'\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/pypy3.9/importlib/__init__.py\", line 82, in find_loader\r\n    warnings.warn('Deprecated since Python 3.4. '\r\nDeprecationWarning: Deprecated since Python 3.4. Use importlib.util.find_spec() instead.\r\nERROR: while parsing the following warning configuration:\r\n\r\n  ignore::hypothesis.errors.NonInteractiveExampleWarning\r\n\r\nThis error occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/pypy3.9/site-packages/_pytest/config/__init__.py\", line 1638, in parse_warning_filter\r\n    category: Type[Warning] = _resolve_warning_category(category_)\r\n  File \"/usr/lib/pypy3.9/site-packages/_pytest/config/__init__.py\", line 1676, in _resolve_warning_category\r\n    m = __import__(module, None, None, [klass])\r\n  File \"/tmp/portage/dev-python/hypothesis-6.46.1/work/hypothesis-hypothesis-python-6.46.1/hypothesis-python-pypy3/install/usr/lib/pypy3.9/site-packages/hypothesis/__init__.py\", line 56, in <module>\r\n    run()\r\n  File \"/tmp/portage/dev-python/hypothesis-6.46.1/work/hypothesis-hypothesis-python-6.46.1/hypothesis-python-pypy3/install/usr/lib/pypy3.9/site-packages/hypothesis/entry_points.py\", line 63, in run\r\n    hook = entry.load()\r\n  File \"/usr/lib/pypy3.9/importlib/metadata.py\", line 86, in load\r\n    module = import_module(match.group('module'))\r\n  File \"/usr/lib/pypy3.9/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 972, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 666, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 565, in module_from_spec\r\n  File \"<builtin>/frozen importlib._bootstrap_external\", line 1186, in create_module\r\n  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\r\n  File \"pydantic/__init__.py\", line 2, in init pydantic.__init__\r\n    from . import dataclasses\r\nImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think a PR to use `importlib.util.find_spec()` would be welcome (if it works). It'd probably be necessary to keep the old code for Python 2.7 for the moment.",
            "created_at": "2022-05-02T11:30:59Z",
            "html_url": "https://github.com/cython/cython/issues/4763#issuecomment-1114747484",
            "id": 1114747484,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4763",
            "node_id": "IC_kwDOABDGAc5CcbJc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1114747484/reactions"
            },
            "updated_at": "2022-05-02T11:30:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1114747484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It'd probably be necessary to keep the old code for Python 2.7 for the moment.\r\n\r\nThe code path is only hit for python>3. Since cython has already dropped support for [3.0, 3.1, 3.2], only python 3.3 will use the older code path.",
            "created_at": "2022-05-05T02:59:20Z",
            "html_url": "https://github.com/cython/cython/issues/4763#issuecomment-1118118142",
            "id": 1118118142,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4763",
            "node_id": "IC_kwDOABDGAc5CpSD-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1118118142/reactions"
            },
            "updated_at": "2022-05-05T02:59:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1118118142",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "node_id": "MDQ6VXNlcjgyMzkxMQ==",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4763/comments",
    "created_at": "2022-05-01T11:16:00Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4763/events",
    "html_url": "https://github.com/cython/cython/issues/4763",
    "id": 1222121682,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4763/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5I2BjS",
    "number": 4763,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4763/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4763/timeline",
    "title": "[BUG] PyPy (`!CYTHON_PEP489_MULTI_PHASE_INIT`) code path in Cython/Utility/ImportExport.c causes deprecation warnings",
    "updated_at": "2022-05-05T02:59:20Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4763",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/110765?v=4",
        "events_url": "https://api.github.com/users/mgorny/events{/privacy}",
        "followers_url": "https://api.github.com/users/mgorny/followers",
        "following_url": "https://api.github.com/users/mgorny/following{/other_user}",
        "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mgorny",
        "id": 110765,
        "login": "mgorny",
        "node_id": "MDQ6VXNlcjExMDc2NQ==",
        "organizations_url": "https://api.github.com/users/mgorny/orgs",
        "received_events_url": "https://api.github.com/users/mgorny/received_events",
        "repos_url": "https://api.github.com/users/mgorny/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mgorny"
    }
}