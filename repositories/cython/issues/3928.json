{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Describe the bug**\r\n\r\nWhen creating a generator using a typed variable, Cython seems to ignore the type when the generator is directly consumed (like by `sum`). However when this generator is placed in a `list`, the type is respected. Would expect that both cases respect the type, but that doesn't seem to be the case.\r\n\r\n**To Reproduce**\r\n\r\nWorks (though it shouldn't):\r\n\r\n```cython\r\nfrom cython import Py_ssize_t\r\n\r\n\r\ndef func(n: Py_ssize_t) -> double:\r\n    v: double\r\n    return sum(v for v in map(complex, range(n)))\r\n\r\n\r\nfunc(5)\r\n```\r\n\r\nErrors (as expected):\r\n\r\n```cython\r\nfrom cython import Py_ssize_t\r\n\r\n\r\ndef func(n: Py_ssize_t) -> double:\r\n    v: double\r\n    return sum([v for v in map(complex, range(n))])\r\n\r\n\r\nfunc(5)\r\n```\r\n\r\n**Expected behavior**\r\n\r\nWould expect the type specified for the variable is used in the generator code Cython produces.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - Python version: 3.8.6\r\n - Cython version: 0.29.21\r\n\r\n**Additional context**\r\n\r\nNA",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "Does this work in regular mode, with `cdef` rather than annotations?\r\n\r\nI think this is to do with variable scope: `v` inside the generator is a different variable to `v` in the function. This doesn't apply to Py 2 list comprehension (although I suspect it'll fail if you compile it in Py 3 mode).\r\n\r\nI don't know if there's a good way to type a generator-local variable (and there probably should be), but the current behaviour looks correct I think.",
            "created_at": "2020-12-02T08:43:02Z",
            "html_url": "https://github.com/cython/cython/issues/3928#issuecomment-737081992",
            "id": 737081992,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3928",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczNzA4MTk5Mg==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-02T08:43:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/737081992",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Good question. I’ll check in the morning and get back to you.\n\nYeah I’m not sure how we should affect the type then. Are there any alternatives? FWIW this was using the Python 3 `language_level`.\n\nAfter looking at Stack Overflow, this seems to be the annotation style recommended for this situation at least when typing Python code. Though maybe that doesn’t have much relevance here.\n\nWhat I find interesting is this works if we use a `list` compression and not a generator. Wouldn’t we expect the same behavior from both? The variable is local to that expression in either case.",
            "created_at": "2020-12-02T10:36:07Z",
            "html_url": "https://github.com/cython/cython/issues/3928#issuecomment-737143979",
            "id": 737143979,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3928",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczNzE0Mzk3OQ==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-02T10:36:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/737143979",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> What I find interesting is this works if we use a `list` compression and not a generator. Wouldn’t we expect the same behavior from both? The variable is local to that expression in either case.\r\n\r\nIn Python 2 the variable leaks out of the list comprehension scope, but not the generator scope. In Python 3 it doesn't. Cython tries to replicate this behaviour (with the `language_level` setting) but there's definitely small difference in implementation because of this.\r\n\r\n",
            "created_at": "2020-12-02T17:17:28Z",
            "html_url": "https://github.com/cython/cython/issues/3928#issuecomment-737373197",
            "id": 737373197,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3928",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczNzM3MzE5Nw==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-02T17:17:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/737373197",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Got it. Thanks for the context.\r\n\r\nSo using equivalent Cython, we see the issue (no error is raised). \r\n\r\n```cython\r\ndef func(Py_ssize_t n):\r\n    cdef double v\r\n    return sum(v for v in map(complex, range(n)))\r\n\r\n\r\nfunc(5)\r\n```",
            "created_at": "2020-12-02T18:06:51Z",
            "html_url": "https://github.com/cython/cython/issues/3928#issuecomment-737401268",
            "id": 737401268,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3928",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczNzQwMTI2OA==",
            "performed_via_github_app": null,
            "updated_at": "2020-12-02T18:06:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/737401268",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3928/comments",
    "created_at": "2020-12-02T08:25:04Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3928/events",
    "html_url": "https://github.com/cython/cython/issues/3928",
    "id": 755056032,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3928/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3NTUwNTYwMzI=",
    "number": 3928,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] Generator ignores iterated variable's type",
    "updated_at": "2020-12-02T18:06:51Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3928",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jakirkham",
        "id": 3019665,
        "login": "jakirkham",
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jakirkham"
    }
}