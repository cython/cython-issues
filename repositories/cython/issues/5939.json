{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nA C compiler that does not recognize `-fpermissive` and treats incompatible pointer types as type errors fails the `tests/run/cpdef_extern_func.pyx` test with a compiler error:\r\n\r\n```\r\ndistutils.errors.CompileError: command '/usr/bin/gcc' failed with exit code 1\r\nCompiler output:\r\ncc1: warning: command-line option ‘-fpermissive’ is valid for C++/ObjC++ but not\r\n for C\r\ncpdef_extern_func.c: In function ‘__pyx_pymod_exec_cpdef_extern_func’:\r\ncpdef_extern_func.c:3597:144: error: passing argument 1 of ‘__Pyx_CFunc_4274a4__\r\n__const_char__ptr__lParen__const_char__ptr__comma_int__rParennoexcept__etc_to_py\r\n_8haystack_6needle’ from incompatible pointer type\r\n 3597 |     PyObject* wrapped = __Pyx_CFunc_4274a4____const_char__ptr__lParen__c\r\nonst_char__ptr__comma_int__rParennoexcept__etc_to_py_8haystack_6needle(strchr);\r\n      |                                                                         \r\n                                                                       ^~~~~~\r\n      |                                                                         \r\n                                                                       |\r\n      |                                                                         \r\n                                                                       char * (*\r\n)(const char *, int)\r\ncpdef_extern_func.c:2733:151: note: expected ‘const char * (*)(const char *, int\r\n)’ but argument is of type ‘char * (*)(const char *, int)’\r\n 2733 | static PyObject *__Pyx_CFunc_4274a4____const_char__ptr__lParen__const_ch\r\nar__ptr__comma_int__rParennoexcept__etc_to_py_8haystack_6needle(char const *(*__\r\npyx_v_f)(char const *, int)) {\r\n      |                                                                         \r\n                                                                ~~~~~~~~~~~~~~^~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\n\n### Code to reproduce the behaviour:\n\nRun the Cython test suite with a sufficiently strict C compiler.\n\n### Expected behaviour\n\nThe test `tests/run/cpdef_extern_func.pyx` should pass with a C compiler.\n\n### OS\n\n_No response_\n\n### Python version\n\n_No response_\n\n### Cython version\n\n_No response_\n\n### Additional context\n\nI suspect this is a real problem with current Clang builds because it does not recognize `-fpermissive` in C mode. It will not be a problem for GCC 14 because it interprets `-fpermissive` to turn a bunch of type and syntax errors into warnings (just as in GCC 13 and earlier).",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5939/comments",
    "created_at": "2024-01-08T13:38:09Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5939/events",
    "html_url": "https://github.com/cython/cython/issues/5939",
    "id": 2070480641,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5939/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc57aQcB",
    "number": 5939,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5939/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5939/timeline",
    "title": "[BUG] C type error in tests/run/cpdef_extern_func.pyx",
    "updated_at": "2024-01-08T13:38:09Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5939",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/75532728?v=4",
        "events_url": "https://api.github.com/users/fweimer-rh/events{/privacy}",
        "followers_url": "https://api.github.com/users/fweimer-rh/followers",
        "following_url": "https://api.github.com/users/fweimer-rh/following{/other_user}",
        "gists_url": "https://api.github.com/users/fweimer-rh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fweimer-rh",
        "id": 75532728,
        "login": "fweimer-rh",
        "node_id": "MDQ6VXNlcjc1NTMyNzI4",
        "organizations_url": "https://api.github.com/users/fweimer-rh/orgs",
        "received_events_url": "https://api.github.com/users/fweimer-rh/received_events",
        "repos_url": "https://api.github.com/users/fweimer-rh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fweimer-rh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fweimer-rh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fweimer-rh"
    }
}