{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe your issue\r\n\r\nIn #6579 we have a way of acquiring a lock without deadlocking the GIL.  One thing that might be nice to do as a follow-up is expose this to users as a generic utility. It's a pattern that I've seen reproduced user code in a few places, and it might be nice if users didn't have to reproduce it themselves.\r\n\r\nThere's a lot of different lock types in the world and we certainly don't want to wrap them all directly ourselves. But it might be nice if user's could do something like:\r\n\r\n```\r\ncdef int try_lock(some_cpp_mutex_type& mutex) nogil except ?-1:\r\n    return mutex.try_lock()\r\ncdef int lock(some_cpp_mutex_type& lock) nogil except ?-1:\r\n    mutex.lock()\r\n    return 0\r\ncdef int unlock(some_cpp_mutex_type& lock) nogil except ?-1:\r\n   mutex.unlock()\r\n   return 0\r\n\r\ncdef some_cpp_mutex_type m\r\ncython.acquire_lock_gil_safe(m, try_lock, lock, unlock)\r\n```\r\n\r\nIn principle `lock` and `unlock` could be optional - without them we'd just skip the last level of spinlock.\r\n\r\nIn principle it'd also be possible make this work in a `with` block although in that case `unlock` would be required.\r\n\r\nError handling is potentially a bit fiddly though. My proposal above assumes that all the functions can potentially cause errors. Potentially we could adapt to a few different function signatures though.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6609/comments",
    "created_at": "2025-01-11T11:53:03Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6609/events",
    "html_url": "https://github.com/cython/cython/issues/6609",
    "id": 2781790135,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6609/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6lzr-3",
    "number": 6609,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6609/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6609/timeline",
    "title": "[ENH] Generic GIL-safe locking",
    "updated_at": "2025-01-11T11:53:34Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6609",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods",
        "user_view_type": "public"
    }
}