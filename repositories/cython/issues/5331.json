{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nWhat I observe:\r\n1. I run code that uses a Cython module (e.g. `some_native_cython_module.pyx`)\r\n1. The code runs in parallel (with inversion of control; I have no control over the entry point)\r\n1. I import the Cython code via `pyximport.install` for the first time (the `~/.pyxbld` cache is empty)\r\n1. I get an error...\r\n   `ImportError: /{home}/.pyxbld/lib.linux-x86_64-3.7/some_native_cython_module.cpython-37m-x86_64-linux-gnu.so: file too short`\r\n\r\nWhat appears to be happening:\r\n1. The first parallel job sees an empty pyxbld cache and initiates a compilation\r\n3. gcc creates an empty file while the compilation is ongoing\r\n4. The second parallel job sees an `.so` file and tries to load it.\r\n5. The `.so` is empty and the underlying `dlopen` call fails with `file too short`.\r\n\r\nNotes:\r\n- In order for this to happen the `pyx` needs to be non-trivial (so that the compilation takes long enough for the second job to blow up).\r\n- GCC version is 10.2.1\r\n- Someone on StackOverflow [experienced this years ago](https://stackoverflow.com/questions/47626373/pyspark-cython-gets-file-so-too-short). So I'd assume that older versions (all versions?) of GCC are also affected.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n```cython\r\nfrom multiprocessing import Process\r\nimport pyximport\r\npyximport.install()\r\n\r\ndef f():\r\n    import some_native_cython_module\r\n\r\nps = [Process(target=f) for _ in range(2)]\r\n\r\nfor p in ps:\r\n    p.start()\r\n\r\nfor p in ps:\r\n    p.join()\r\n```\r\n\r\n\r\n### Expected behaviour\r\n\r\n#### Option 1 (generally better):\r\n1. Acquire a global named mutex when a compilation is initiated\r\n1. Await it in consecutive compilations\r\n\r\nNote: I've no idea if Python exposes global named mutexes in its standard library.\r\nP.S.: Python seems to expose similar functionality in its `_multiprocessing.SemLock` class, but it's not a public API.\r\n\r\n#### Option 2:\r\n1. Compile in a temporary directory\r\n1. Copy the file to the pyxbld cache when done.\r\n\r\nNote: This will do some extra compilation work. It will also need extra checks on Windows during the `.pyd` copying, since Windows locks its DLLs upon loading.\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.7.9\r\n\r\n### Cython version\r\n\r\n0.29.33\r\n\r\n### Additional context\r\n\r\nGCC 10.2.1",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5331/comments",
    "created_at": "2023-03-21T14:01:55Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5331/events",
    "html_url": "https://github.com/cython/cython/issues/5331",
    "id": 1633994734,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5331/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5hZMfu",
    "number": 5331,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5331/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5331/timeline",
    "title": "[BUG] Parallel pyx compilations fail with \"file too short\"",
    "updated_at": "2023-03-21T16:37:47Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5331",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/221979?v=4",
        "events_url": "https://api.github.com/users/joankaradimov/events{/privacy}",
        "followers_url": "https://api.github.com/users/joankaradimov/followers",
        "following_url": "https://api.github.com/users/joankaradimov/following{/other_user}",
        "gists_url": "https://api.github.com/users/joankaradimov/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/joankaradimov",
        "id": 221979,
        "login": "joankaradimov",
        "node_id": "MDQ6VXNlcjIyMTk3OQ==",
        "organizations_url": "https://api.github.com/users/joankaradimov/orgs",
        "received_events_url": "https://api.github.com/users/joankaradimov/received_events",
        "repos_url": "https://api.github.com/users/joankaradimov/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/joankaradimov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joankaradimov/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/joankaradimov"
    }
}