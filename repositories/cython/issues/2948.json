{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "If I use pyximport with a pyxbld file then setting ```language_level``` in install() gets ignored.  Sometimes you have to use a pyxbld file because the install() options do not provide functionality for some use cases, e.g. setting extra_compile_args.\r\n\r\nMaybe I'm doing something wrong, though I couldn't find anywhere in the docs why this is happening.  I found a workaround by setting ```# cython:``` directives in the header of the pyx files, though as a new user I spent quite a bit of time trying to fix the problem.  I believe if you set something, no matter where you set it as long as it's valid, it should honor the setting.\r\n\r\nRelated to this, I commented in #1288 that as of Cython 0.29.7 I do not see that Cython automatically sets the language_level setting, you have to do it manually.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmmm. I actually consider `pyxbld` files a rather brutal way of configuring the build. Interfering with that by sneaking in some options from the global setup seems fragile, and I'm not sure it would help to make the configuration more obvious overall. Basically, when you say \"I know better\" by providing a low-level `pyxbld` file, then I don't think it's pyximport's job to say \"but you probably meant this\".\r\n\r\nOTOH, I guess it can be argued that the `language_level` is important/special enough to make sure it's always set, and at least inherit it if it's not provided at all in the `Extension` but was set by `pyximport.install()`.\r\n\r\nThen again, the problem should mostly resolve itself with the release of Cython 3 later this year, which will use `language_level=3str` by default, i.e. Python 3 syntax. And a change in pyximport's behaviour wouldn't be released before that either, soâ€¦",
            "created_at": "2019-05-06T15:32:46Z",
            "html_url": "https://github.com/cython/cython/issues/2948#issuecomment-489664772",
            "id": 489664772,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2948",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTY2NDc3Mg==",
            "updated_at": "2019-05-06T15:32:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/489664772",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Hmmm. I actually consider `pyxbld` files a rather brutal way of configuring the build. Interfering with that by sneaking in some options from the global setup seems fragile, and I'm not sure it would help to make the configuration more obvious overall. Basically, when you say \"I know better\" by providing a low-level `pyxbld` file, then I don't think it's pyximport's job to say \"but you probably meant this\".\r\n\r\nI didn't know how to turn off the deprecated numpy 1.7 API warning without using a ``pyxbld`` file and ``Extension`` object ``extra_compile_args`` provided option:\r\n```python\r\nimport numpy as np\r\n\r\ndef make_ext(modname, pyxfilename):\r\n    from distutils.extension import Extension\r\n    return Extension(\r\n        name=modname,\r\n        sources=[pyxfilename],\r\n        include_dirs=[np.get_include()],\r\n        extra_compile_args=['-DNPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION']\r\n    )\r\n```\r\n> OTOH, I guess it can be argued that the `language_level` is important/special enough to make sure it's always set, and at least inherit it if it's not provided at all in the `Extension` but was set by `pyximport.install()`.\r\n\r\n@scoder How do you specify the language_level in the ``Extension`` object?\r\n",
            "created_at": "2019-05-06T20:53:10Z",
            "html_url": "https://github.com/cython/cython/issues/2948#issuecomment-489772370",
            "id": 489772370,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2948",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTc3MjM3MA==",
            "updated_at": "2019-05-07T12:09:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/489772370",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/461066?v=4",
                "events_url": "https://api.github.com/users/hermidalc/events{/privacy}",
                "followers_url": "https://api.github.com/users/hermidalc/followers",
                "following_url": "https://api.github.com/users/hermidalc/following{/other_user}",
                "gists_url": "https://api.github.com/users/hermidalc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hermidalc",
                "id": 461066,
                "login": "hermidalc",
                "node_id": "MDQ6VXNlcjQ2MTA2Ng==",
                "organizations_url": "https://api.github.com/users/hermidalc/orgs",
                "received_events_url": "https://api.github.com/users/hermidalc/received_events",
                "repos_url": "https://api.github.com/users/hermidalc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hermidalc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hermidalc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hermidalc"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2948/comments",
    "created_at": "2019-05-05T12:17:59Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-05-07T12:09:59Z",
            "event": "mentioned",
            "id": 2323974926,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjMyMzk3NDkyNg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2323974926"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-05-07T12:09:59Z",
            "event": "subscribed",
            "id": 2323974931,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIzMjM5NzQ5MzE=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2323974931"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2948/events",
    "html_url": "https://github.com/cython/cython/issues/2948",
    "id": 440438220,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2948/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0NDA0MzgyMjA=",
    "number": 2948,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "pyximport ignores install() language_level setting when using a pyxbld file",
    "updated_at": "2019-05-07T12:09:59Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2948",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/461066?v=4",
        "events_url": "https://api.github.com/users/hermidalc/events{/privacy}",
        "followers_url": "https://api.github.com/users/hermidalc/followers",
        "following_url": "https://api.github.com/users/hermidalc/following{/other_user}",
        "gists_url": "https://api.github.com/users/hermidalc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hermidalc",
        "id": 461066,
        "login": "hermidalc",
        "node_id": "MDQ6VXNlcjQ2MTA2Ng==",
        "organizations_url": "https://api.github.com/users/hermidalc/orgs",
        "received_events_url": "https://api.github.com/users/hermidalc/received_events",
        "repos_url": "https://api.github.com/users/hermidalc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hermidalc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hermidalc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hermidalc"
    }
}