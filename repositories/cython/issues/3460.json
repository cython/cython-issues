{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Cython normally attempts to resolve fused types in order. Therefore\r\n\r\n```\r\ncdef fused FusedType:\r\n    SomeCdefClass\r\n    object\r\n```\r\n\r\nwill pick a specialization for `SomeCdefClass` first, even though `SomeCdefClass` is also an `object. In Pure Python mode this is lost somehow. See test-cases below.\r\n\r\nWorking .pyx version\r\n```\r\nimport cython\r\n\r\ncdef fused FT:\r\n    C  # C should be used in preference\r\n    object\r\n\r\ncdef class C:\r\n    pass\r\n\r\ndef f(FT x):\r\n    \"\"\"\r\n    >>> f(C())  # C picked in preference to object\r\n    C\r\n    \"\"\"\r\n    print(cython.typeof(x))\r\n```\r\n\r\npure version - BROKEN\r\n```\r\nimport cython\r\n\r\n# C appears first so should be used in preference\r\n# \"C\" is a string so it's valid in Python. However, using non-string doesn't change results\r\nFT = cython.fused_type(\"C\", object)\r\nFT2 = cython.fused_type(\"C\", int)\r\n\r\n@cython.cclass\r\nclass C:\r\n    pass\r\n\r\n@cython.locals(x = FT)\r\ndef f(x):\r\n    \"\"\"\r\n    >>> f(C())  # FAILS - returns object\r\n    C\r\n    \"\"\"\r\n    print(cython.typeof(x))\r\n\r\n@cython.locals(x = FT2)\r\ndef g(x):\r\n    \"\"\"\r\n    >>> g(C())  # so C is recognised, just not in preference to object\r\n    C\r\n    \"\"\"\r\n    print(cython.typeof(x))\r\n```\r\n\r\nI don't really know where this is going wrong, but the arguments appear to be passed into the constructor of `PyrexTypes.FusedType` in the right order.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3460/comments",
    "created_at": "2020-03-25T10:24:36Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3460/events",
    "html_url": "https://github.com/cython/cython/issues/3460",
    "id": 587592016,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3460/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1ODc1OTIwMTY=",
    "number": 3460,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Fused types ordering behaves different in pure Python mode",
    "updated_at": "2020-03-25T10:24:36Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3460",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}