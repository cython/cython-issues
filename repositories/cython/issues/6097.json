{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nIn my code, I would like to use the vector database function of redis. I compiled this method using Cython3.0.9 version, but got the following error\r\n\r\nHere is the python code\r\n```python\r\ndef search_documents(\r\n        self,\r\n        query_vector: bytes,\r\n        doc_ids: List[str],\r\n        topk: int = 5,\r\n    ) -> List[Any]:\r\n        \"\"\"\r\n        Searches the redis index using the query vector.\r\n\r\n        Args:\r\n            query_vector (np.ndarray): Embedded query vector.\r\n            doc_ids (List[str]): id of docs, if doc_ids is empty search the whole database\r\n            topk (int, optional): Number of results. Defaults to 5.\r\n\r\n        Returns:\r\n            List[Any]: Search result documents.\r\n        \"\"\"\r\n        if len(doc_ids) == 0:\r\n            return []\r\n        else:\r\n            formatted_doc_ids = \"|\".join(doc_ids)\r\n            q = f\"\"\"(@doc_id:{{{formatted_doc_ids}}})=>[KNN {topk} \\\r\n                    @{self.config.vector_field_name} $vec_param AS vector_score]\"\"\"\r\n\r\n        query = (\r\n            Query(q)\r\n            .sort_by(\"vector_score\")\r\n            .paging(0, topk)\r\n            .return_fields(\r\n                \"chunk_id\",\r\n                \"page_id\",\r\n                \"doc_id\",\r\n                \"vector_score\",\r\n                \"text\",\r\n                \"parents\",\r\n                \"children\",\r\n                \"jump_index\",\r\n                \"links\",\r\n                \"lang\"\r\n            )\r\n            .dialect(2)\r\n        )\r\n        params_dict = {\"vec_param\": query_vector}\r\n        result_documents = self.redis_connection.ft().search(\r\n            query, query_params=params_dict).docs\r\n\r\n        out = list()\r\n        for document in result_documents:\r\n            if getattr(document, \"text\", None) is not None:\r\n                doc_dict = document_to_dict(document)\r\n                doc_dict[\"links\"] = doc_dict[\"links\"].split(\"|\") if \"links\" in doc_dict else []\r\n                out.append(doc_dict)\r\n\r\n        return out\r\n```\r\nThis is the C code transcribed by Cython 3.0.9\r\n```cython\r\n /* \"app/datastore/doc_store.py\":99\r\n *                 document['links'] = '|'.join(document['links'])\r\n *             redis_pipeline.hset(key, mapping=document)\r\n *         redis_pipeline.execute()             # <<<<<<<<<<<<<<\r\n * \r\n *     def search_documents(\r\n */\r\n  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_redis_pipeline, __pyx_n_s_execute); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 99, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_10);\r\n  __pyx_t_9 = NULL;\r\n  __pyx_t_11 = 0;\r\n  #if CYTHON_UNPACK_METHODS\r\n  if (likely(PyMethod_Check(__pyx_t_10))) {\r\n    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_10);\r\n    if (likely(__pyx_t_9)) {\r\n      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);\r\n      __Pyx_INCREF(__pyx_t_9);\r\n      __Pyx_INCREF(function);\r\n      __Pyx_DECREF_SET(__pyx_t_10, function);\r\n      __pyx_t_11 = 1;\r\n    }\r\n  }\r\n  #endif\r\n  {\r\n    PyObject *__pyx_callargs[2] = {__pyx_t_9, NULL};\r\n    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_11, 0+__pyx_t_11);\r\n    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;\r\n    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L1_error)\r\n    __Pyx_GOTREF(__pyx_t_3);\r\n    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;\r\n  }\r\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\r\n\r\n```\r\n\r\n\r\nThe following is the error message\r\n\r\n```\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/anyio/streams/memory.py\", line 81, in receive\r\n    return self.receive_nowait()\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/anyio/streams/memory.py\", line 76, in receive_nowait\r\n    raise WouldBlock\r\nanyio.WouldBlock\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/middleware/base.py\", line 78, in call_next\r\n    message = await recv_stream.receive()\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/anyio/streams/memory.py\", line 101, in receive\r\n    raise EndOfStream\r\nanyio.EndOfStream\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"app/common/loggin_middleware.py\", line 16, in app.common.loggin_middleware.LoggingMiddleware.dispatch\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/middleware/base.py\", line 84, in call_next\r\n    raise app_exc\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/middleware/base.py\", line 70, in coro\r\n    await self.app(scope, receive_or_disconnect, send_no_error)\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/middleware/cors.py\", line 83, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py\", line 20, in __call__\r\n    raise e\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/routing.py\", line 276, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/starlette/routing.py\", line 66, in app\r\n    response = await func(request)\r\n               ^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/fastapi/routing.py\", line 273, in app\r\n    raw_response = await run_endpoint_function(\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/fastapi/routing.py\", line 190, in run_endpoint_function\r\n    return await dependant.call(**values)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"app/query_system/message_api.py\", line 317, in message_docs\r\n  File \"app/datastore/doc_store.py\", line 144, in app.datastore.doc_store.DocDataStore.search_documents\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/redis/commands/search/commands.py\", line 420, in search\r\n    res = self.execute_command(SEARCH_CMD, *args)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/redis/client.py\", line 1269, in execute_command\r\n    return conn.retry.call_with_retry(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/redis/retry.py\", line 46, in call_with_retry\r\n    return do()\r\n           ^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/redis/client.py\", line 1270, in <lambda>\r\n    lambda: self._send_command_parse_response(\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/redis/client.py\", line 1246, in _send_command_parse_response\r\n    return self.parse_response(conn, command_name, **options)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/redis/client.py\", line 1286, in parse_response\r\n    response = connection.read_response()\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/data/miniconda3/lib/python3.11/site-packages/redis/connection.py\", line 905, in read_response\r\n    raise response\r\nredis.exceptions.ResponseError: Syntax error at offset 55 near \\\r\n\r\n^C\r\n```\r\n\r\n\r\n### Describe the solution you'd like.\r\n\r\nCan Cython support the vector database function of redis ?\r\n\r\n### Describe alternatives you've considered.\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "If you want someone to try to fix this then you need to reduce this down to a short reproducible example. There definitely isn't enough information to debug this. It also really isn't clear from the traceback that the error has anything to do with the code you've shown.\r\n\r\nThis also doesn't look like the sort of code that benefits from using Cython, so maybe consider whether it's worth trying to translate it?",
            "created_at": "2024-03-19T18:03:19Z",
            "html_url": "https://github.com/cython/cython/issues/6097#issuecomment-2007819397",
            "id": 2007819397,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6097",
            "node_id": "IC_kwDOABDGAc53rOSF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2007819397/reactions"
            },
            "updated_at": "2024-03-19T18:03:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2007819397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> If you want someone to try to fix this then you need to reduce this down to a short reproducible example. There definitely isn't enough information to debug this. It also really isn't clear from the traceback that the error has anything to do with the code you've shown.\r\n> \r\n> This also doesn't look like the sort of code that benefits from using Cython, so maybe consider whether it's worth trying to translate it?\r\n\r\nI use Cython and want to encrypt python code. I Can benefit from encryption.",
            "created_at": "2024-03-20T02:15:10Z",
            "html_url": "https://github.com/cython/cython/issues/6097#issuecomment-2008568149",
            "id": 2008568149,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6097",
            "node_id": "IC_kwDOABDGAc53uFFV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2008568149/reactions"
            },
            "updated_at": "2024-03-20T02:15:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2008568149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4931801?v=4",
                "events_url": "https://api.github.com/users/winer632/events{/privacy}",
                "followers_url": "https://api.github.com/users/winer632/followers",
                "following_url": "https://api.github.com/users/winer632/following{/other_user}",
                "gists_url": "https://api.github.com/users/winer632/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/winer632",
                "id": 4931801,
                "login": "winer632",
                "node_id": "MDQ6VXNlcjQ5MzE4MDE=",
                "organizations_url": "https://api.github.com/users/winer632/orgs",
                "received_events_url": "https://api.github.com/users/winer632/received_events",
                "repos_url": "https://api.github.com/users/winer632/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/winer632/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/winer632/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/winer632"
            }
        },
        {
            "author_association": "NONE",
            "body": "> If you want someone to try to fix this then you need to reduce this down to a short reproducible example. There definitely isn't enough information to debug this. It also really isn't clear from the traceback that the error has anything to do with the code you've shown.\r\n> \r\n> This also doesn't look like the sort of code that benefits from using Cython, so maybe consider whether it's worth trying to translate it?\r\n\r\nI will try to write a demo to demonstrate the problem I encountered with later when I got time. Thanks for your work! Cython is a great project to keep python project safe!",
            "created_at": "2024-03-20T03:55:06Z",
            "html_url": "https://github.com/cython/cython/issues/6097#issuecomment-2008624678",
            "id": 2008624678,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6097",
            "node_id": "IC_kwDOABDGAc53uS4m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2008624678/reactions"
            },
            "updated_at": "2024-03-20T03:55:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2008624678",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4931801?v=4",
                "events_url": "https://api.github.com/users/winer632/events{/privacy}",
                "followers_url": "https://api.github.com/users/winer632/followers",
                "following_url": "https://api.github.com/users/winer632/following{/other_user}",
                "gists_url": "https://api.github.com/users/winer632/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/winer632",
                "id": 4931801,
                "login": "winer632",
                "node_id": "MDQ6VXNlcjQ5MzE4MDE=",
                "organizations_url": "https://api.github.com/users/winer632/orgs",
                "received_events_url": "https://api.github.com/users/winer632/received_events",
                "repos_url": "https://api.github.com/users/winer632/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/winer632/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/winer632/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/winer632"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6097/comments",
    "created_at": "2024-03-19T15:17:34Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4931801?v=4",
                "events_url": "https://api.github.com/users/winer632/events{/privacy}",
                "followers_url": "https://api.github.com/users/winer632/followers",
                "following_url": "https://api.github.com/users/winer632/following{/other_user}",
                "gists_url": "https://api.github.com/users/winer632/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/winer632",
                "id": 4931801,
                "login": "winer632",
                "node_id": "MDQ6VXNlcjQ5MzE4MDE=",
                "organizations_url": "https://api.github.com/users/winer632/orgs",
                "received_events_url": "https://api.github.com/users/winer632/received_events",
                "repos_url": "https://api.github.com/users/winer632/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/winer632/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/winer632/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/winer632"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-03-19T15:18:37Z",
            "event": "renamed",
            "id": 12171276398,
            "node_id": "RTE_lADOABDGAc6C2QwazwAAAALVdvBu",
            "performed_via_github_app": null,
            "rename": {
                "from": "[ENH] ",
                "to": "[ENH] support the vector database function of redis"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/12171276398"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4931801?v=4",
                "events_url": "https://api.github.com/users/winer632/events{/privacy}",
                "followers_url": "https://api.github.com/users/winer632/followers",
                "following_url": "https://api.github.com/users/winer632/following{/other_user}",
                "gists_url": "https://api.github.com/users/winer632/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/winer632",
                "id": 4931801,
                "login": "winer632",
                "node_id": "MDQ6VXNlcjQ5MzE4MDE=",
                "organizations_url": "https://api.github.com/users/winer632/orgs",
                "received_events_url": "https://api.github.com/users/winer632/received_events",
                "repos_url": "https://api.github.com/users/winer632/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/winer632/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/winer632/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/winer632"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-03-19T15:20:57Z",
            "event": "renamed",
            "id": 12171317564,
            "node_id": "RTE_lADOABDGAc6C2QwazwAAAALVd5E8",
            "performed_via_github_app": null,
            "rename": {
                "from": "[ENH] support the vector database function of redis",
                "to": "[ENH] Can Cython support the vector database function of redis"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/12171317564"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4931801?v=4",
                "events_url": "https://api.github.com/users/winer632/events{/privacy}",
                "followers_url": "https://api.github.com/users/winer632/followers",
                "following_url": "https://api.github.com/users/winer632/following{/other_user}",
                "gists_url": "https://api.github.com/users/winer632/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/winer632",
                "id": 4931801,
                "login": "winer632",
                "node_id": "MDQ6VXNlcjQ5MzE4MDE=",
                "organizations_url": "https://api.github.com/users/winer632/orgs",
                "received_events_url": "https://api.github.com/users/winer632/received_events",
                "repos_url": "https://api.github.com/users/winer632/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/winer632/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/winer632/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/winer632"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-03-19T15:21:02Z",
            "event": "renamed",
            "id": 12171318747,
            "node_id": "RTE_lADOABDGAc6C2QwazwAAAALVd5Xb",
            "performed_via_github_app": null,
            "rename": {
                "from": "[ENH] Can Cython support the vector database function of redis",
                "to": "[ENH] Can Cython support the vector database function of redis?"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/12171318747"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-03-19T17:59:42Z",
            "event": "labeled",
            "id": 12173521710,
            "label": {
                "color": "b60205",
                "name": "unclear"
            },
            "node_id": "LE_lADOABDGAc6C2QwazwAAAALVmTMu",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12173521710"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6097/events",
    "html_url": "https://github.com/cython/cython/issues/6097",
    "id": 2195262490,
    "labels": [
        {
            "color": "b60205",
            "default": false,
            "description": null,
            "id": 414807834,
            "name": "unclear",
            "node_id": "MDU6TGFiZWw0MTQ4MDc4MzQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/unclear"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6097/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6C2Qwa",
    "number": 6097,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6097/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6097/timeline",
    "title": "[ENH] Can Cython support the vector database function of redis?",
    "updated_at": "2024-03-20T03:55:07Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6097",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4931801?v=4",
        "events_url": "https://api.github.com/users/winer632/events{/privacy}",
        "followers_url": "https://api.github.com/users/winer632/followers",
        "following_url": "https://api.github.com/users/winer632/following{/other_user}",
        "gists_url": "https://api.github.com/users/winer632/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/winer632",
        "id": 4931801,
        "login": "winer632",
        "node_id": "MDQ6VXNlcjQ5MzE4MDE=",
        "organizations_url": "https://api.github.com/users/winer632/orgs",
        "received_events_url": "https://api.github.com/users/winer632/received_events",
        "repos_url": "https://api.github.com/users/winer632/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/winer632/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/winer632/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/winer632"
    }
}