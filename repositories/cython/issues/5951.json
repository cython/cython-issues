{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nI think this may be the symptom of another problem.\r\nI have a custom C++ class that inherits from `unordered_map`\r\nWhen trying to erase a `string` from an instance of the class I get the following error when trying to cythonise.\r\n`Cannot assign type 'string' to 'iterator'`\r\n\r\n### Code to reproduce the behaviour:\r\n\r\n```cython\r\n# distutils: language = c++\r\n# distutils: extra_compile_args = -std=c++20 /std:c++20\r\n# distutils: extra_link_args = -std=c++20 /std:c++20\r\n# cython: c_string_type=str, c_string_encoding=utf8\r\n\r\nfrom libcpp.unordered_map cimport unordered_map\r\nfrom libcpp.string cimport string\r\n\r\n\r\ncdef extern from \"*\" nogil:\r\n    # It works if you don't subclass\r\n    ctypedef unordered_map[string, string] WorkingMap1\r\n\r\n    # And it works if you subclass and explicitly define the method\r\n    cdef cppclass WorkingMap2(unordered_map[string, string]):\r\n        WorkingMap2() except +\r\n        WorkingMap2(WorkingMap2 &) except +\r\n        size_t erase(string&)\r\n\r\n    # But if you just subclass the method cannot be found\r\n    cdef cppclass BrokenMap(unordered_map[string, string]):\r\n        BrokenMap() except +\r\n        BrokenMap(BrokenMap &) except +\r\n\r\n    # Note that if you reorder the cython pxd file so that the erase by reference method is on top it works.\r\n    # I don't know if this breaks other things.\r\n\r\n\r\ncdef test_working_map_1():\r\n    cdef WorkingMap1 my_map\r\n    cdef string my_string = b\"test\"\r\n    my_map[my_string] = my_string\r\n    my_map.erase(my_string)\r\n\r\n\r\ncdef test_working_map_2():\r\n    cdef WorkingMap2 my_map\r\n    cdef string my_string = b\"test\"\r\n    my_map[my_string] = my_string\r\n    my_map.erase(my_string)\r\n\r\n\r\ncdef test_broken_map():\r\n    cdef BrokenMap my_map\r\n    cdef string my_string = b\"test\"\r\n    my_map[my_string] = my_string\r\n    my_map.erase(my_string)\r\n```\r\n\r\n\r\n### Expected behaviour\r\n\r\nI would expect to be able to use all the possible variations of the erase method.\r\n\r\n### OS\r\n\r\nWindows\r\n\r\n### Python version\r\n\r\n3.11.4\r\n\r\n### Cython version\r\n\r\n3.0.8\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5951/comments",
    "created_at": "2024-01-18T10:29:35Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5951/events",
    "html_url": "https://github.com/cython/cython/issues/5951",
    "id": 2087984985,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5951/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc58dB9Z",
    "number": 5951,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5951/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5951/timeline",
    "title": "[BUG] C++ unordered_map.erase cannot assign type",
    "updated_at": "2024-01-18T10:30:20Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5951",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11940194?v=4",
        "events_url": "https://api.github.com/users/gentlegiantJGC/events{/privacy}",
        "followers_url": "https://api.github.com/users/gentlegiantJGC/followers",
        "following_url": "https://api.github.com/users/gentlegiantJGC/following{/other_user}",
        "gists_url": "https://api.github.com/users/gentlegiantJGC/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gentlegiantJGC",
        "id": 11940194,
        "login": "gentlegiantJGC",
        "node_id": "MDQ6VXNlcjExOTQwMTk0",
        "organizations_url": "https://api.github.com/users/gentlegiantJGC/orgs",
        "received_events_url": "https://api.github.com/users/gentlegiantJGC/received_events",
        "repos_url": "https://api.github.com/users/gentlegiantJGC/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gentlegiantJGC/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gentlegiantJGC/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gentlegiantJGC"
    }
}