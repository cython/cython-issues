{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nI tried to build pyarrow with the 3.0b1 release of cython.  I received some errors that I do not receive with earlier versions (0.29.x) of cython.\n\n### Code to reproduce the behaviour:\n\n```cython\r\n    @property\r\n    def dim_names(self):\r\n        return tuple(frombytes(x) for x in tuple(self.stp.dim_names()))\r\n```\r\n[(source)](https://github.com/apache/arrow/blob/main/python/pyarrow/tensor.pxi#L554-L556)\r\n\r\n\r\nSupplementary definitions:\r\n\r\n```cython\r\n# self.stp.dim_names() calls this C++ function (defined elsewhere in a pxd):\r\nconst vector[c_string]& dim_names()\r\n```\r\n\r\n`frombytes` is probably not relevant but it converts a C++ string to a python str.\r\n\r\n\n\n### Expected behaviour\n\nI expect the function to build fine and return a list of strings.\n\n### OS\n\nLinux\n\n### Python version\n\n3.11.0\n\n### Cython version\n\n3.0b1\n\n### Additional context\n\nThe generated function is:\r\n\r\n```\r\n\t\t/* \"pyarrow/tensor.pxi\":556                                                                                                                                                                        \r\n *     @property                                                                                                                                                                                                   \r\n *     def dim_names(self):                                                                                                                                                                                        \r\n *         return tuple(frombytes(x) for x in tuple(self.stp.dim_names()))             # <<<<<<<<<<<<<<                                                                                                            \r\n *                                                                                                                                                                                                                 \r\n *     @property                                                                                                                                                                                                   \r\n */\r\n\r\n                static PyObject *__pyx_pf_7pyarrow_3lib_15SparseCOOTensor_9dim_names_7__get___genexpr(CYTHON_UNUSED PyObject *__pyx_self, std::vector<std::string>  const __pyx_genexpr_arg_0) {\r\n                  struct __pyx_obj_7pyarrow_3lib___pyx_scope_struct_15_genexpr *__pyx_cur_scope;\r\n                  PyObject *__pyx_r = NULL;\r\n                  __Pyx_RefNannyDeclarations\r\n                  int __pyx_lineno = 0;\r\n                  const char *__pyx_filename = NULL;\r\n                  int __pyx_clineno = 0;\r\n                  __Pyx_RefNannySetupContext(\"genexpr\", 0);\r\n                  __pyx_cur_scope = (struct __pyx_obj_7pyarrow_3lib___pyx_scope_struct_15_genexpr *)__pyx_tp_new_7pyarrow_3lib___pyx_scope_struct_15_genexpr(__pyx_ptype_7pyarrow_3lib___pyx_scope_struct_15_genexpr, __pyx_empty_tuple, NULL);\r\n                  if (unlikely(!__pyx_cur_scope)) {\r\n                    __pyx_cur_scope = ((struct __pyx_obj_7pyarrow_3lib___pyx_scope_struct_15_genexpr *)Py_None);\r\n                    __Pyx_INCREF(Py_None);\r\n                    __PYX_ERR(6, 556, __pyx_L1_error)\r\n                  } else {\r\n                    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);\r\n                  }\r\n                  __pyx_cur_scope->__pyx_genexpr_arg_0 = __pyx_genexpr_arg_0;\r\n                  {\r\n                    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_7pyarrow_3lib_15SparseCOOTensor_9dim_names_7__get___2generator17, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_SparseCOOTensor___get___locals_g, __pyx_n_s_pyarrow_lib); if (unlikely(!gen)) __PYX_ERR(6, 556, __pyx_L1_error)\r\n                    __Pyx_DECREF(__pyx_cur_scope);\r\n                    __Pyx_RefNannyFinishContext();\r\n```\r\n\r\nThe referenced struct is:\r\n\r\n```\r\n/* \"pyarrow/tensor.pxi\":556                                                                                                                                                                                        \r\n *     @property                                                                                                                                                                                                   \r\n *     def dim_names(self):                                                                                                                                                                                        \r\n *         return tuple(frombytes(x) for x in tuple(self.stp.dim_names()))             # <<<<<<<<<<<<<<                                                                                                            \r\n *                                                                                                                                                                                                                 \r\n *     @property                                                                                                                                                                                                   \r\n */\r\nstruct __pyx_obj_7pyarrow_3lib___pyx_scope_struct_15_genexpr {\r\n  PyObject_HEAD\r\n  std::vector<std::string>  const __pyx_genexpr_arg_0;\r\n  PyObject *__pyx_v_x;\r\n  PyObject *__pyx_t_0;\r\n  Py_ssize_t __pyx_t_1;\r\n};\r\n```\r\n\r\nThe line that fails is:\r\n\r\n```\r\n__pyx_cur_scope->__pyx_genexpr_arg_0 = __pyx_genexpr_arg_0;\r\n```\r\n\r\nThe error is:\r\n\r\n```\r\n/home/pace/dev/arrow/python/build/temp.linux-x86_64-cpython-311/lib.cpp: In function ‘PyObject* __pyx_pf_7pyarrow_3lib_15SparseCOOTensor_9dim_names_7__get___genexpr(PyObject*, std::vector<std::__cxx11::basic_string<char> >)’:\r\n/home/pace/dev/arrow/python/build/temp.linux-x86_64-cpython-311/lib.cpp:161732:58: error: passing ‘const std::vector<std::__cxx11::basic_string<char> >’ as ‘this’ argument discards qualifiers [-fpermissive]\r\n161732 |                   __pyx_cur_scope->__pyx_genexpr_arg_0 = __pyx_genexpr_arg_0;\r\n       |                                                          ^~~~~~~~~~~~~~~~~~~\r\nIn file included from /usr/include/c++/11/vector:72,\r\n                 from /home/pace/miniconda3/envs/conbench3/include/arrow/array/array_base.h:24,\r\n                 from /home/pace/miniconda3/envs/conbench3/include/arrow/array.h:41,\r\n                 from /home/pace/miniconda3/envs/conbench3/include/arrow/pch.h:23,\r\n                 from /home/pace/dev/arrow/python/pyarrow/src/arrow/python/pch.h:23,\r\n                 from /home/pace/dev/arrow/python/build/temp.linux-x86_64-cpython-311/CMakeFiles/lib.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\n/usr/include/c++/11/bits/vector.tcc:198:5: note:   in call to ‘std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’\r\n  198 |     vector<_Tp, _Alloc>::\r\n      |     ^~~~~~~~~~~~~~~~~~~\r\n```",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5333/comments",
    "created_at": "2023-03-21T21:49:58Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1696093?v=4",
                "events_url": "https://api.github.com/users/westonpace/events{/privacy}",
                "followers_url": "https://api.github.com/users/westonpace/followers",
                "following_url": "https://api.github.com/users/westonpace/following{/other_user}",
                "gists_url": "https://api.github.com/users/westonpace/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/westonpace",
                "id": 1696093,
                "login": "westonpace",
                "node_id": "MDQ6VXNlcjE2OTYwOTM=",
                "organizations_url": "https://api.github.com/users/westonpace/orgs",
                "received_events_url": "https://api.github.com/users/westonpace/received_events",
                "repos_url": "https://api.github.com/users/westonpace/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/westonpace/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/westonpace/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/westonpace"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-03-21T21:50:10Z",
            "event": "renamed",
            "id": 8810545787,
            "node_id": "RTE_lADOABDGAc5hcCS_zwAAAAINJkJ7",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] Generated code attempts to modify const vector",
                "to": "[BUG] Generated code attempts to modify const field"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/8810545787"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5333/events",
    "html_url": "https://github.com/cython/cython/issues/5333",
    "id": 1634739391,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5333/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5hcCS_",
    "number": 5333,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5333/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5333/timeline",
    "title": "[BUG] Generated code attempts to modify const field",
    "updated_at": "2023-03-21T21:50:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5333",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1696093?v=4",
        "events_url": "https://api.github.com/users/westonpace/events{/privacy}",
        "followers_url": "https://api.github.com/users/westonpace/followers",
        "following_url": "https://api.github.com/users/westonpace/following{/other_user}",
        "gists_url": "https://api.github.com/users/westonpace/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/westonpace",
        "id": 1696093,
        "login": "westonpace",
        "node_id": "MDQ6VXNlcjE2OTYwOTM=",
        "organizations_url": "https://api.github.com/users/westonpace/orgs",
        "received_events_url": "https://api.github.com/users/westonpace/received_events",
        "repos_url": "https://api.github.com/users/westonpace/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/westonpace/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/westonpace/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/westonpace"
    }
}