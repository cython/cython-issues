{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nIf you have a situation in which files are importing each other, and the initial imports are not in an order that appeases Python, an afflicted Cython module will not have its _cpdef_ methods published to Python.\r\n\r\nIn the example below, A.func1 is found, but A.func2 is not, even from within A.\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nmain.py:\r\n```py\r\nfrom A import A\r\nfrom B import B\r\nfrom C import C\r\n```\r\n\r\nA.pxd:\r\n```cython\r\nfrom C cimport C\r\n\r\ncdef class A:\r\n\r\n    cdef bint func1(self)\r\n    cpdef bint func2(self)\r\n```\r\n\r\nA.pyx:\r\n```cython\r\nfrom C cimport C\r\n\r\ncdef class A:\r\n\r\n    def __init__(self):\r\n        self.func1()\r\n        self.func2()\r\n\r\n    cdef bint func1(self):\r\n        return True\r\n\r\n    cpdef bint func2(self):\r\n        return True\r\n```\r\n\r\nB.py:\r\n```py\r\nfrom A import A\r\n\r\nclass B:\r\n\r\n    def __init__(self):\r\n        a = A()\r\n\r\nB()\r\n```\r\n\r\nC.pyx:\r\n```cython\r\nfrom A cimport A\r\nfrom B import B\r\n\r\ncdef class C:\r\n    pass\r\n```\r\n\r\n### Expected behaviour\r\n\r\nIf you switched the imports around in main.py, so that C is imported first instead of last, it functions as it should. The underlying problem here is understandable, but when you're working with a bigger codebase it can take hours to find out why attributes aren't available to Python, even within the module itself or in a Python subclass of the module. My suggestion is that a compiler warning or error is shown when this can happen, or a clear runtime error if that would be more appropriate.\r\n\r\n### OS\r\n\r\nWindows\r\n\r\n### Python version\r\n\r\n3.9\r\n\r\n### Cython version\r\n\r\nAny\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5680/comments",
    "created_at": "2023-09-04T00:42:04Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5680/events",
    "html_url": "https://github.com/cython/cython/issues/5680",
    "id": 1879311916,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5680/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5wBAYs",
    "number": 5680,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5680/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5680/timeline",
    "title": "[BUG] Unexpected attribute behavior with circular imports",
    "updated_at": "2023-09-04T01:13:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5680",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16440418?v=4",
        "events_url": "https://api.github.com/users/pythonengineer/events{/privacy}",
        "followers_url": "https://api.github.com/users/pythonengineer/followers",
        "following_url": "https://api.github.com/users/pythonengineer/following{/other_user}",
        "gists_url": "https://api.github.com/users/pythonengineer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pythonengineer",
        "id": 16440418,
        "login": "pythonengineer",
        "node_id": "MDQ6VXNlcjE2NDQwNDE4",
        "organizations_url": "https://api.github.com/users/pythonengineer/orgs",
        "received_events_url": "https://api.github.com/users/pythonengineer/received_events",
        "repos_url": "https://api.github.com/users/pythonengineer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pythonengineer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pythonengineer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pythonengineer"
    }
}