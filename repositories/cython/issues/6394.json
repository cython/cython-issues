{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nIn my code, I'd like Sphinx to recognize type annotations for properties on ``cdef`` classes. However, currently, this only appears to work on standard classes.\r\n\r\n## Source\r\n\r\nCython source for two classes that are identical except that A is a ``cdef`` class whilst B is a standard class:\r\n```cython\r\ncdef class A:\r\n    @property\r\n    def x(self) -> int:\r\n        \"Docstring for getter.\"\r\n        return 0\r\nclass B:\r\n    @property\r\n    def x(self) -> int:\r\n        \"Docstring for getter.\"\r\n        return 0\r\n```\r\n\r\nSphinx source for documenting these classes:\r\n```\r\n.. autoclass A:\r\n   :members:\r\n.. autoclass B:\r\n   :members:\r\n```\r\n\r\n## Output\r\n\r\nCurrent Sphinx output:\r\n```\r\nclass A\r\n    x\r\n        Docstring for getter.\r\n\r\nclass B\r\n    property x: int\r\n        Docstring for getter.\r\n```\r\nUnfortunately, class A's documentation is missing a type annotation for ``x``, and does not recognize ``x`` as a property.\r\n\r\n### Describe the solution you'd like.\r\n\r\nIn Sphinx, I'd like A to have the same documentation as B, i.e.\r\n\r\n```\r\nclass A\r\n    property x: int\r\n        Docstring for getter.\r\n\r\nclass B\r\n    property x: int\r\n        Docstring for getter.\r\n```\r\n\r\n### Describe alternatives you've considered.\r\n\r\n## Perfect Solution\r\n\r\nIt appears that the discrepancy in documentation would be solved if:\r\n* ``isinstance(A.x, property)`` returned true, and\r\n* ``A.x.fget.__annotations__`` stored the type annotation of the getter.\r\n\r\n## Partial Solution\r\n\r\nIf ``A.__annotations__[\"x\"]`` stored the type annotation of the getter, then that would presumably result in the following Sphinx output:\r\n\r\n```\r\nclass A\r\n    x: int\r\n        Docstring for getter.\r\n```\r\n\r\nThough not perfect, this is likely also sufficient for documentation purposes.\r\n\r\n### Additional context\r\n\r\nSphinx version tested: 3.0.11.\r\n\r\nI checked the changelog and recent commit history. I don't think this has been implemented yet.\r\n\r\nI've diagnosed the sphinx source code to understand what is missing. Relevant pointers:\r\n\r\n* https://github.com/sphinx-doc/sphinx/blob/04381789db7466d56d9eb29d23d979fc16604acc/sphinx/ext/autodoc/__init__.py#L2791 (fetches the \"getter\" function for the type annotation)\r\n* https://github.com/sphinx-doc/sphinx/blob/04381789db7466d56d9eb29d23d979fc16604acc/sphinx/util/inspect.py#L383 (checks if attribute is a property)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "On a side note, the following is a workaround...\r\n\r\n```\r\ncdef class A:\r\n    __annotations__ = dict(x=int)  # <-- hack to annotate @property x\r\n    @property\r\n    def x(self):\r\n        \"Docstring for getter.\"\r\n        return 0\r\n```",
            "created_at": "2024-09-14T15:01:48Z",
            "html_url": "https://github.com/cython/cython/issues/6394#issuecomment-2351022438",
            "id": 2351022438,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6394",
            "node_id": "IC_kwDOABDGAc6MIcFm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2351022438/reactions"
            },
            "updated_at": "2024-09-14T15:01:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2351022438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/158568?v=4",
                "events_url": "https://api.github.com/users/mcmtroffaes/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcmtroffaes/followers",
                "following_url": "https://api.github.com/users/mcmtroffaes/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcmtroffaes/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcmtroffaes",
                "id": 158568,
                "login": "mcmtroffaes",
                "node_id": "MDQ6VXNlcjE1ODU2OA==",
                "organizations_url": "https://api.github.com/users/mcmtroffaes/orgs",
                "received_events_url": "https://api.github.com/users/mcmtroffaes/received_events",
                "repos_url": "https://api.github.com/users/mcmtroffaes/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcmtroffaes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcmtroffaes/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcmtroffaes"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6394/comments",
    "created_at": "2024-09-14T14:25:29Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-09-14T21:12:00Z",
            "event": "subscribed",
            "id": 14260996052,
            "node_id": "SE_lADOABDGAc6WlowrzwAAAANSBYfU",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14260996052"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6394/events",
    "html_url": "https://github.com/cython/cython/issues/6394",
    "id": 2526448683,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6394/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6Wlowr",
    "number": 6394,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6394/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6394/timeline",
    "title": "[ENH] support @property type annotations for cdef classes",
    "updated_at": "2024-09-14T15:01:49Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6394",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/158568?v=4",
        "events_url": "https://api.github.com/users/mcmtroffaes/events{/privacy}",
        "followers_url": "https://api.github.com/users/mcmtroffaes/followers",
        "following_url": "https://api.github.com/users/mcmtroffaes/following{/other_user}",
        "gists_url": "https://api.github.com/users/mcmtroffaes/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mcmtroffaes",
        "id": 158568,
        "login": "mcmtroffaes",
        "node_id": "MDQ6VXNlcjE1ODU2OA==",
        "organizations_url": "https://api.github.com/users/mcmtroffaes/orgs",
        "received_events_url": "https://api.github.com/users/mcmtroffaes/received_events",
        "repos_url": "https://api.github.com/users/mcmtroffaes/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mcmtroffaes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mcmtroffaes/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mcmtroffaes"
    }
}