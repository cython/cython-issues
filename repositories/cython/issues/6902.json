{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nThe 3.1 update broke the `Optional[bool]` annotation.\n\n### Code to reproduce the behaviour:\n\nTrying to compile the following code will lead to a compilation error  (this error is in a jupyter cell for simplicity, but appeared in my pyx compiled code before)\n```cython\n%%cython\nfrom typing import Optional\nfrom libcpp cimport bool, int, float\ndef stuff(x:Optional[bool] = None):\n    return x\n```\nerror log:\n```\nContent of stderr:\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c: In function '__pyx_pw_78_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b_1stuff':\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:2391:62: warning: passing argument 2 of 'Py_IS_TYPE' from incompatible pointer type [-Wincompatible-pointer-types]\n 2391 |   if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), (((PyObject*)&PyBool_Type)), 1, \"x\", 2))) __PYX_ERR(0, 3, __pyx_L1_error)\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:1296:43: note: in definition of macro 'unlikely'\n 1296 |   #define unlikely(x) __builtin_expect(!!(x), 0)\n      |                                           ^\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:1746:7: note: in expansion of macro 'likely'\n 1746 |     ((likely(__Pyx_IS_TYPE(obj, type) | (none_allowed && (obj == Py_None)))) ? 1 :\\\n      |       ^~~~~~\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:590:35: note: in expansion of macro 'Py_IS_TYPE'\n  590 |   #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)\n      |                                   ^~~~~~~~~~\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:1746:14: note: in expansion of macro '__Pyx_IS_TYPE'\n 1746 |     ((likely(__Pyx_IS_TYPE(obj, type) | (none_allowed && (obj == Py_None)))) ? 1 :\\\n      |              ^~~~~~~~~~~~~\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:2391:17: note: in expansion of macro '__Pyx_ArgTypeTest'\n 2391 |   if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), (((PyObject*)&PyBool_Type)), 1, \"x\", 2))) __PYX_ERR(0, 3, __pyx_L1_error)\n      |                 ^~~~~~~~~~~~~~~~~\nIn file included from /home/dloiseau/micromamba/envs/test/include/python3.12/Python.h:44,\n                 from /home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:24:\n/home/dloiseau/micromamba/envs/test/include/python3.12/object.h:249:58: note: expected 'PyTypeObject *' {aka 'struct _typeobject *'} but argument is of type 'PyObject *' {aka 'struct _object *'}\n  249 | static inline int Py_IS_TYPE(PyObject *ob, PyTypeObject *type) {\n      |                                            ~~~~~~~~~~~~~~^~~~\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:2391:62: warning: passing argument 2 of '__Pyx__ArgTypeTest' from incompatible pointer type [-Wincompatible-pointer-types]\n 2391 |   if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), (((PyObject*)&PyBool_Type)), 1, \"x\", 2))) __PYX_ERR(0, 3, __pyx_L1_error)\n      |                                                            ~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                                              |\n      |                                                              PyObject * {aka struct _object *}\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:1296:43: note: in definition of macro 'unlikely'\n 1296 |   #define unlikely(x) __builtin_expect(!!(x), 0)\n      |                                           ^\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:2391:17: note: in expansion of macro '__Pyx_ArgTypeTest'\n 2391 |   if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), (((PyObject*)&PyBool_Type)), 1, \"x\", 2))) __PYX_ERR(0, 3, __pyx_L1_error)\n      |                 ^~~~~~~~~~~~~~~~~\n/home/dloiseau/.cache/ipython/cython/_cython_magic_94ba2d8eb8e09190817edee68cc1e4401d9e8068037dd33c6f0cd94d61404b0b.c:1748:60: note: expected 'PyTypeObject *' {aka 'struct _typeobject *'} but argument is of type 'PyObject *' {aka 'struct _object *'}\n 1748 | static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);\n      |                                              ~~~~~~~~~~~~~~^~~~\n```\n\n### Expected behaviour\n\nNo compile issue\n\n### OS\n\nLinux Fedora 42\n\n### Python version\n\nconda - 3.12/3.13\n\n### Cython version\n\nlatest conda (cython=3.1.1=py313h5dec8f5_1)\n\n### Additional context\n\nEverything is in conda, I'm compiling with `clang++` and the variables provided by `cxx-compiler`",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6902/comments",
    "created_at": "2025-05-20T16:28:22Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6902/events",
    "html_url": "https://github.com/cython/cython/issues/6902",
    "id": 3077602290,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6902/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc63cHvy",
    "number": 6902,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6902/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6902/timeline",
    "title": "[BUG] Regression: `Optional[bool]` annotation doesn't compile anymore",
    "type": null,
    "updated_at": "2025-05-20T16:28:22Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6902",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15857585?v=4",
        "events_url": "https://api.github.com/users/DavidLapous/events{/privacy}",
        "followers_url": "https://api.github.com/users/DavidLapous/followers",
        "following_url": "https://api.github.com/users/DavidLapous/following{/other_user}",
        "gists_url": "https://api.github.com/users/DavidLapous/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/DavidLapous",
        "id": 15857585,
        "login": "DavidLapous",
        "node_id": "MDQ6VXNlcjE1ODU3NTg1",
        "organizations_url": "https://api.github.com/users/DavidLapous/orgs",
        "received_events_url": "https://api.github.com/users/DavidLapous/received_events",
        "repos_url": "https://api.github.com/users/DavidLapous/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/DavidLapous/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DavidLapous/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/DavidLapous",
        "user_view_type": "public"
    }
}