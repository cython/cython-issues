{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nInterpreterPoolExecutor's are to be introduced in 3.14, and backported to 3.13 https://github.com/python/cpython/pull/124548, [backport](https://pypi.org/project/interpreters-pep-734/). Cython does not support subinterpreters, thus do not work with an InterpreterPoolExecutor. \r\n\r\nImporting in a subinterpreter yields: \"ImportError: module Cython.Utils does not support loading in subinterpreters\". \r\n\r\nIt looks like a lot of work was already done in the past to prepare for subinterpreters, by implementing CYTHON_USE_MODULE_STATE. Is this work ongoing? Is there a roadmap to finalize support for subinterpreters? \r\n\r\nThis impacts downstream packages, such as https://github.com/apache/arrow/issues/42151#issuecomment-2189528499\r\n\r\n----\r\n\r\nIn my code, I would like to use cython functions inside an InterpreterPoolExecutor.\r\n\r\nThe following code will raise: \"ImportError: module Cython.Utils does not support loading in subinterpreters\"\r\n\r\n```cython\r\nfrom interpreters_backport.concurrent.futures.interpreter import InterpreterPoolExecutor\r\n\r\nwith InterpreterPoolExecutor() as executor:\r\n    r=executor.submit(exec, \"import Cython.Utils\")\r\n    r.result()\r\n```\r\n\r\n** This example was using 3.13 with backported version: https://pypi.org/project/interpreters-pep-734/\r\n\r\n### Describe the solution you'd like.\r\n\r\n_No response_\r\n\r\n### Describe alternatives you've considered.\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": "2025-07-11T20:28:56Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
        "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
        "followers_url": "https://api.github.com/users/paultiq/followers",
        "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
        "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/paultiq",
        "id": 104510378,
        "login": "paultiq",
        "node_id": "U_kgDOBjqzqg",
        "organizations_url": "https://api.github.com/users/paultiq/orgs",
        "received_events_url": "https://api.github.com/users/paultiq/received_events",
        "repos_url": "https://api.github.com/users/paultiq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/paultiq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "There was a short discussion on the user's group last week https://groups.google.com/g/cython-users/c/O0nYBTTwb_Y. Only a very small amount has changed since then.\r\n\r\nIn summary, you can run Python in a way where it ignores the modules' declared compatibility. If you build your cython module with the module state flag enabled then its marginally possible that it might work. I don't think we've currently tested it or even put any thought into how to test it.\r\n\r\nI expect there to be some pretty serious limitations even when finished. For example, `with gil:` is something that I expect can never be made to work.",
            "created_at": "2024-10-23T18:32:10Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-2433128293",
            "id": 2433128293,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc6RBpdl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2433128293/reactions"
            },
            "updated_at": "2024-10-23T18:32:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2433128293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for the prompt reply and awesome work. \r\n\r\nI get that user-defined global variables will introduce some indeterminable issues and footguns. That seems inevitable, but also in our control. \r\n\r\nMy question, iiuc, is really about CYTHON_USE_MODULE_STATE and two-phase init. You said it's a \"long term project\"... does that suggest it's a long way from being even testable? \r\n\r\n(and, if this is the wrong forum, I'm happy to just reply in the user group thread)",
            "created_at": "2024-10-23T21:11:58Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-2433472721",
            "id": 2433472721,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc6RC9jR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2433472721/reactions"
            },
            "updated_at": "2024-10-23T21:11:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2433472721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
                "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
                "followers_url": "https://api.github.com/users/paultiq/followers",
                "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
                "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/paultiq",
                "id": 104510378,
                "login": "paultiq",
                "node_id": "U_kgDOBjqzqg",
                "organizations_url": "https://api.github.com/users/paultiq/orgs",
                "received_events_url": "https://api.github.com/users/paultiq/received_events",
                "repos_url": "https://api.github.com/users/paultiq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/paultiq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> CYTHON_USE_MODULE_STATE and two-phase init. \r\n\r\nI don't think you necessarily need that - I think single phase init might well work if you turn off the check that bans it. I certainly wouldn't dismiss trying it in favour of waiting. \r\n\r\nBut in terms of two-phase init, we've done some restructuring so most data (except global `cdef` variables right now) is stored in a \"module state struct\" (in any compilation mode... There's just a single global variable instance of the struct most of the time). But the one thing we haven't done is implemented any of the module lookup mechanisms. \r\n\r\nSo I can absolutely promise that won't work right now.",
            "created_at": "2024-10-23T21:33:30Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-2433504377",
            "id": 2433504377,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc6RDFR5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2433504377/reactions"
            },
            "updated_at": "2024-10-23T21:33:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2433504377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks, did a little testing with a cythonized module to start, and my computer didn't blow up. Just wanted to document the test case here for other people and how to disable the multi_interp_extensions_check.\r\n\r\nAfter recompiling with CYTHON_USE_MODULE_STATE = 1, ran the following code and results were correct.\r\n\r\nBoth fib, and a function using a global variable (a list), worked as expected. The global variable was only updated within the scope of the subinterpreter (each subinterpreter had a separate list).\r\n\r\n#### _override_multi_interp_extensions_check\r\nDefine this in a separate module to disable the multi_interp_extensions_check:\r\n```py\r\ndef disable_multi_interp_extensions_check():\r\n    import _imp\r\n    _imp._override_multi_interp_extensions_check(-1)\r\n```\r\n\r\n#### Test Case, using \r\n```py\r\ntry:\r\n    from concurrent.futures.interpreter import InterpreterPoolExecutor # 3.14+\r\nexcept ModuleNotFoundError:\r\n    from interpreters_backport.concurrent.futures.interpreter import InterpreterPoolExecutor # Backport / https://pypi.org/project/interpreters-pep-734/\r\n\r\nfrom mycythonmodule import fib\r\nfrom mydisablemodule import disable_multi_interp_extensions_check\r\n\r\nwith InterpreterPoolExecutor(max_workers=5, initializer = disable_multi_interp_extensions_check) as executor:\r\n    ipe_r=executor.map(fib, range(100))\r\n    print(list(ipe_r))\r\n```\r\n\r\n#### Fib\r\n```py\r\ndef fib(n: int) -> int:\r\n    a, b = 0, 1 \r\n    while b < n:\r\n        a, b = b, a + b\r\n    return a\r\n```\r\n\r\n#### Uses Global Function\r\n```py\r\nimport _interpreters \r\n\r\nSOMEGLOBAL = []\r\ndef uses_global(x) -> tuple:\r\n    SOMEGLOBAL.append(x)\r\n    return _interpreters.get_current(), len(SOMEGLOBAL)   # returns the subinterpreter id\r\n```",
            "created_at": "2024-10-24T15:42:11Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-2435641357",
            "id": 2435641357,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc6RLPAN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2435641357/reactions"
            },
            "updated_at": "2024-10-24T15:42:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2435641357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
                "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
                "followers_url": "https://api.github.com/users/paultiq/followers",
                "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
                "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/paultiq",
                "id": 104510378,
                "login": "paultiq",
                "node_id": "U_kgDOBjqzqg",
                "organizations_url": "https://api.github.com/users/paultiq/orgs",
                "received_events_url": "https://api.github.com/users/paultiq/received_events",
                "repos_url": "https://api.github.com/users/paultiq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/paultiq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for testing - that's good to know.  It also bodes well for when we do manage to make it work \"properly\" since much of it will remain the same.\r\n\r\nFor what it's worth I think it'd have failed if you'd made `SOMEGLOBAL` a `cdef` variable.\r\n\r\n",
            "created_at": "2024-10-24T20:36:39Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-2436293510",
            "id": 2436293510,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc6RNuOG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2436293510/reactions"
            },
            "updated_at": "2024-10-24T20:36:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2436293510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yah, indeed. The per-subinterpreter consistency goes away with cdefs. \r\n\r\n#### With a `cdef list`\r\n```py\r\ncdef list SOMEGLOBAL5 = []\r\ndef cdef_list_mod(x):\r\n    SOMEGLOBAL5.append(x)\r\n    print(_interpreters.get_current(), SOMEGLOBAL5)\r\n```\r\n\r\nInconsistent result w a cdef list:\r\n** Inconsistent as in: subinterpreters see side effects from other subinterpreters\r\n```\r\n(2, 5) [1]\r\n(2, 5) [1, 2]\r\n(2, 5) [3]\r\n(2, 5) [3, 4]\r\n(2, 5) [3, 4, 5]\r\n(2, 5) [3, 4, 5, 6]\r\n(2, 5) [3, 4, 5, 6, 7]\r\n(2, 5) [3, 4, 5, 6, 7, 9]\r\n(10, 5) [10]\r\n(3, 5) [12]\r\n(6, 5) [12, 13]\r\n(3, 5) [12, 13, 19]\r\n(5, 5) [8]\r\n(9, 5) [14]\r\n(4, 5) [15]\r\n(7, 5) [16]\r\n(8, 5) [17]\r\n```\r\n\r\nSane results w a python list (no cdef):\r\n** What's \"sane\" is that each subinterpreter has a consistent sequence of values... similar to running the same code in processes / a ProcessPoolExecutor.\r\n```\r\n(1, 5) [1]\r\n(1, 5) [1, 5]\r\n(2, 5) [0]\r\n(1, 5) [1, 5, 6]\r\n(2, 5) [0, 8]\r\n(4, 5) [2]\r\n(2, 5) [0, 8, 10]\r\n(5, 5) [3]\r\n(1, 5) [1, 5, 6, 9]\r\n(4, 5) [2, 11]\r\n(1, 5) [1, 5, 6, 9, 14]\r\n(5, 5) [3, 13]\r\n(2, 5) [0, 8, 10, 12]\r\n(4, 5) [2, 11, 15]\r\n(1, 5) [1, 5, 6, 9, 14, 16]\r\n(5, 5) [3, 13, 17]\r\n(2, 5) [0, 8, 10, 12, 18]\r\n(4, 5) [2, 11, 15, 19]\r\n(3, 5) [4]\r\n(6, 5) [7]\r\n```\r\n#### With a `cdef int`\r\n```py\r\ncdef int SOMEGLOBAL4 = 0\r\ndef uses_global_cdef(x):\r\n    global SOMEGLOBAL4\r\n\r\n    SOMEGLOBAL4+=1\r\n    print(_interpreters.get_current(), SOMEGLOBAL4)\r\n```\r\n\r\nResults using `r = executor.map(uses_global_cdef, range(20))` (the first tuple is the subinterpreter id):\r\n```\r\n(3, 5) 1\r\n(3, 5) 2\r\n(3, 5) 3\r\n(3, 5) 4\r\n(2, 5) 1\r\n(1, 5) 1\r\n(3, 5) 2\r\n(2, 5) 3\r\n(1, 5) 4\r\n(3, 5) 5\r\n(2, 5) 6\r\n(1, 5) 7\r\n(3, 5) 8\r\n(2, 5) 9\r\n(1, 5) 10\r\n(3, 5) 11\r\n(9, 5) 1\r\n(4, 5) 1\r\n(7, 5) 1\r\n(5, 5) 2\r\n```\r\n\r\n",
            "created_at": "2024-10-25T00:16:19Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-2436556177",
            "id": 2436556177,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc6ROuWR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2436556177/reactions"
            },
            "updated_at": "2024-10-25T01:17:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2436556177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
                "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
                "followers_url": "https://api.github.com/users/paultiq/followers",
                "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
                "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/paultiq",
                "id": 104510378,
                "login": "paultiq",
                "node_id": "U_kgDOBjqzqg",
                "organizations_url": "https://api.github.com/users/paultiq/orgs",
                "received_events_url": "https://api.github.com/users/paultiq/received_events",
                "repos_url": "https://api.github.com/users/paultiq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/paultiq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Basic question, is it currently possible to use CYTHON_USE_MODULE_STATE? The user group message was\n>The C compiler flag `CYTHON_USE_MODULE_STATE` is a long-term project to enable this.  However, currently that flag only supports single-phase import so it's incompatible in the default config anyway.\n\nBut @paultiq you said you were able to get correct results with it? How are you setting it?",
            "created_at": "2025-05-29T08:35:40Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-2918712064",
            "id": 2918712064,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc6t-AMA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2918712064/reactions"
            },
            "updated_at": "2025-05-29T08:35:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2918712064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/73507369?v=4",
                "events_url": "https://api.github.com/users/a-reich/events{/privacy}",
                "followers_url": "https://api.github.com/users/a-reich/followers",
                "following_url": "https://api.github.com/users/a-reich/following{/other_user}",
                "gists_url": "https://api.github.com/users/a-reich/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/a-reich",
                "id": 73507369,
                "login": "a-reich",
                "node_id": "MDQ6VXNlcjczNTA3MzY5",
                "organizations_url": "https://api.github.com/users/a-reich/orgs",
                "received_events_url": "https://api.github.com/users/a-reich/received_events",
                "repos_url": "https://api.github.com/users/a-reich/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/a-reich/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/a-reich/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/a-reich",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Basic question, is it currently possible to use CYTHON_USE_MODULE_STATE? The user group message was\n> \n> > The C compiler flag `CYTHON_USE_MODULE_STATE` is a long-term project to enable this.  However, currently that flag only supports single-phase import so it's incompatible in the default config anyway.\n> \n> But [@paultiq](https://github.com/paultiq) you said you were able to get correct results with it? How are you setting it?\n\nYes - `CYTHON_USE_MODULE_STATE` now supports multi-phase initialization. That's changed since whenever this was last discussed. \n\nYou set it as a C compile flag. In setuptools that'd be `define_macros` as an argument to `Extension` I think. \n\nBe aware that the implementation probably needs improvement (speed-wise) and there's a few major features that don't work. Mainly `cdef` global variables aren't in the module state, and `with gil` won't work right (because it can't know what interpreter to acquire the GIL in)",
            "created_at": "2025-05-29T11:13:10Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-2919081859",
            "id": 2919081859,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc6t_aeD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2919081859/reactions"
            },
            "updated_at": "2025-05-29T11:13:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2919081859",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think this is closeable / fixed by https://github.com/cython/cython/pull/6513.\n\nI can now build with:\n```\next = Extension(\n    name=\"cytest.mycythonmodule\",\n    sources=[\"cytest/mycythonmodule.pyx\"],\n    define_macros=[(\"CYTHON_USE_MODULE_STATE\", \"1\")]\n)\n```\nwith (in my .pyx):\n\n`# cython: subinterpreters_compatible = own_gil`\n\nmany caveats apply, but this is great and very much appreciated!",
            "created_at": "2025-07-11T20:23:57Z",
            "html_url": "https://github.com/cython/cython/issues/6445#issuecomment-3063716362",
            "id": 3063716362,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6445",
            "node_id": "IC_kwDOABDGAc62nJoK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/3063716362/reactions"
            },
            "updated_at": "2025-07-11T20:29:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/3063716362",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
                "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
                "followers_url": "https://api.github.com/users/paultiq/followers",
                "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
                "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/paultiq",
                "id": 104510378,
                "login": "paultiq",
                "node_id": "U_kgDOBjqzqg",
                "organizations_url": "https://api.github.com/users/paultiq/orgs",
                "received_events_url": "https://api.github.com/users/paultiq/received_events",
                "repos_url": "https://api.github.com/users/paultiq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/paultiq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6445/comments",
    "created_at": "2024-10-23T15:07:15Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53637421?v=4",
                "events_url": "https://api.github.com/users/GalaxySnail/events{/privacy}",
                "followers_url": "https://api.github.com/users/GalaxySnail/followers",
                "following_url": "https://api.github.com/users/GalaxySnail/following{/other_user}",
                "gists_url": "https://api.github.com/users/GalaxySnail/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GalaxySnail",
                "id": 53637421,
                "login": "GalaxySnail",
                "node_id": "MDQ6VXNlcjUzNjM3NDIx",
                "organizations_url": "https://api.github.com/users/GalaxySnail/orgs",
                "received_events_url": "https://api.github.com/users/GalaxySnail/received_events",
                "repos_url": "https://api.github.com/users/GalaxySnail/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GalaxySnail/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GalaxySnail/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GalaxySnail",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-07T19:54:36Z",
            "event": "subscribed",
            "id": 16229685776,
            "node_id": "SE_lADOABDGAc6bgYsTzwAAAAPHXVoQ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16229685776"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4900246?v=4",
                "events_url": "https://api.github.com/users/serjflint/events{/privacy}",
                "followers_url": "https://api.github.com/users/serjflint/followers",
                "following_url": "https://api.github.com/users/serjflint/following{/other_user}",
                "gists_url": "https://api.github.com/users/serjflint/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/serjflint",
                "id": 4900246,
                "login": "serjflint",
                "node_id": "MDQ6VXNlcjQ5MDAyNDY=",
                "organizations_url": "https://api.github.com/users/serjflint/orgs",
                "received_events_url": "https://api.github.com/users/serjflint/received_events",
                "repos_url": "https://api.github.com/users/serjflint/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/serjflint/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/serjflint/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/serjflint",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-02-26T11:51:48Z",
            "event": "subscribed",
            "id": 16478406086,
            "node_id": "SE_lADOABDGAc6bgYsTzwAAAAPWMIXG",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/16478406086"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66480156?v=4",
                "events_url": "https://api.github.com/users/temeddix/events{/privacy}",
                "followers_url": "https://api.github.com/users/temeddix/followers",
                "following_url": "https://api.github.com/users/temeddix/following{/other_user}",
                "gists_url": "https://api.github.com/users/temeddix/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/temeddix",
                "id": 66480156,
                "login": "temeddix",
                "node_id": "MDQ6VXNlcjY2NDgwMTU2",
                "organizations_url": "https://api.github.com/users/temeddix/orgs",
                "received_events_url": "https://api.github.com/users/temeddix/received_events",
                "repos_url": "https://api.github.com/users/temeddix/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/temeddix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/temeddix/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/temeddix",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-04-20T05:14:30Z",
            "event": "subscribed",
            "id": 17330384061,
            "node_id": "SE_lADOABDGAc6bgYsTzwAAAAQI-Ky9",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/17330384061"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3747318?v=4",
                "events_url": "https://api.github.com/users/ruro/events{/privacy}",
                "followers_url": "https://api.github.com/users/ruro/followers",
                "following_url": "https://api.github.com/users/ruro/following{/other_user}",
                "gists_url": "https://api.github.com/users/ruro/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ruro",
                "id": 3747318,
                "login": "ruro",
                "node_id": "MDQ6VXNlcjM3NDczMTg=",
                "organizations_url": "https://api.github.com/users/ruro/orgs",
                "received_events_url": "https://api.github.com/users/ruro/received_events",
                "repos_url": "https://api.github.com/users/ruro/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ruro/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ruro/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ruro",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-04-21T21:32:22Z",
            "event": "subscribed",
            "id": 17343778656,
            "node_id": "SE_lADOABDGAc6bgYsTzwAAAAQJxQ9g",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/17343778656"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
                "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
                "followers_url": "https://api.github.com/users/paultiq/followers",
                "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
                "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/paultiq",
                "id": 104510378,
                "login": "paultiq",
                "node_id": "U_kgDOBjqzqg",
                "organizations_url": "https://api.github.com/users/paultiq/orgs",
                "received_events_url": "https://api.github.com/users/paultiq/received_events",
                "repos_url": "https://api.github.com/users/paultiq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/paultiq",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-05-29T08:35:42Z",
            "event": "mentioned",
            "id": 17864270826,
            "node_id": "MEE_lADOABDGAc6bgYsTzwAAAAQoyyPq",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/17864270826"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
                "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
                "followers_url": "https://api.github.com/users/paultiq/followers",
                "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
                "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/paultiq",
                "id": 104510378,
                "login": "paultiq",
                "node_id": "U_kgDOBjqzqg",
                "organizations_url": "https://api.github.com/users/paultiq/orgs",
                "received_events_url": "https://api.github.com/users/paultiq/received_events",
                "repos_url": "https://api.github.com/users/paultiq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/paultiq",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-05-29T08:35:42Z",
            "event": "subscribed",
            "id": 17864270847,
            "node_id": "SE_lADOABDGAc6bgYsTzwAAAAQoyyP_",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/17864270847"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16805946?v=4",
                "events_url": "https://api.github.com/users/edgarrmondragon/events{/privacy}",
                "followers_url": "https://api.github.com/users/edgarrmondragon/followers",
                "following_url": "https://api.github.com/users/edgarrmondragon/following{/other_user}",
                "gists_url": "https://api.github.com/users/edgarrmondragon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/edgarrmondragon",
                "id": 16805946,
                "login": "edgarrmondragon",
                "node_id": "MDQ6VXNlcjE2ODA1OTQ2",
                "organizations_url": "https://api.github.com/users/edgarrmondragon/orgs",
                "received_events_url": "https://api.github.com/users/edgarrmondragon/received_events",
                "repos_url": "https://api.github.com/users/edgarrmondragon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/edgarrmondragon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/edgarrmondragon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/edgarrmondragon",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-07-08T16:27:22Z",
            "event": "subscribed",
            "id": 18530026595,
            "node_id": "SE_lADOABDGAc6bgYsTzwAAAARQecRj",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/18530026595"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
                "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
                "followers_url": "https://api.github.com/users/paultiq/followers",
                "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
                "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/paultiq",
                "id": 104510378,
                "login": "paultiq",
                "node_id": "U_kgDOBjqzqg",
                "organizations_url": "https://api.github.com/users/paultiq/orgs",
                "received_events_url": "https://api.github.com/users/paultiq/received_events",
                "repos_url": "https://api.github.com/users/paultiq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/paultiq",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2025-07-11T20:28:56Z",
            "event": "closed",
            "id": 18593691757,
            "node_id": "CE_lADOABDGAc6bgYsTzwAAAARURTht",
            "performed_via_github_app": null,
            "state_reason": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/18593691757"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6445/events",
    "html_url": "https://github.com/cython/cython/issues/6445",
    "id": 2608958227,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6445/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6bgYsT",
    "number": 6445,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6445/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6445/timeline",
    "title": "[ENH] Subinterpreter Support and 3.14 / InterpreterPoolExecutors",
    "type": null,
    "updated_at": "2025-07-11T20:29:24Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6445",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/104510378?v=4",
        "events_url": "https://api.github.com/users/paultiq/events{/privacy}",
        "followers_url": "https://api.github.com/users/paultiq/followers",
        "following_url": "https://api.github.com/users/paultiq/following{/other_user}",
        "gists_url": "https://api.github.com/users/paultiq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/paultiq",
        "id": 104510378,
        "login": "paultiq",
        "node_id": "U_kgDOBjqzqg",
        "organizations_url": "https://api.github.com/users/paultiq/orgs",
        "received_events_url": "https://api.github.com/users/paultiq/received_events",
        "repos_url": "https://api.github.com/users/paultiq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/paultiq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paultiq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/paultiq",
        "user_view_type": "public"
    }
}