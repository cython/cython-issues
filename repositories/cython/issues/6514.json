{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nI mentioned this recently in the cython-users group, but just found out the cythonize script, although compiles correctly, fails at runtime, so I now believe this to be a bug.\r\n\r\nI'm not sure if it's intended to allow definitions and calls like cdef extern void fn(), but they are incredibly useful to call Python from C++ from Cython. In other words Cython -> call C++ -> call Python when returning a value is not a solution, for example in an infinite loop, so I hope you don't cancel this feature as potentially \"unintended\"(?).\r\n\r\nI've written a multithreaded epoll Python module that scales almost linearly with the number of CPU threads compared to uvloop.\r\nPerformance comparison: Uvloop = 1x, 1 thread my module = 1.2x, 16 threads = 10x using Cython (8x with Python) thanks to this call with equal performance to Nginx, but I cannot actually make it a module with cython support with the bug described in this issue.\n\n### Code to reproduce the behaviour:\n\na.pyx:\r\n```cython\r\ncdef extern void test():\r\n  print(\"test\")\r\n```\r\na.pxd:\r\n```cython\r\ncdef extern void test()\r\n```\r\nb.pyx:\r\n```cython\r\ncimport a\r\na.test()\r\n```\n\n### Expected behaviour\n\nNo compilation or runtime errors.\n\n### OS\n\nDebian 12 backports\n\n### Python version\n\n3.11.2\n\n### Cython version\n\n3.1.0a1\n\n### Additional context\n\nThe problem specifically happens when adding the pxd for cimport support. Works fine to compile and run without the pxd file.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "```\r\ncdef extern void test():\r\n  print(\"test\")\r\n```\r\n\r\nThat makes little sense to me.\r\n\r\nAt a C level, `extern` is promising that \"a function with this definition definitely exists, somewhere else\". So it doesn't make sense to put `extern` on a definition.\r\n\r\nSince there isn't a definition \"somewhere else\" you get a linking error.\r\n\r\n> I'm not sure if it's intended to allow definitions and calls like cdef extern void fn(), but they are incredibly useful to call Python from C++ from Cython.\r\n\r\nCan you explain this a bit more - I'm  struggling to understand what you mean.",
            "created_at": "2024-11-24T08:48:13Z",
            "html_url": "https://github.com/cython/cython/issues/6514#issuecomment-2495876121",
            "id": 2495876121,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6514",
            "node_id": "IC_kwDOABDGAc6UxAwZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2495876121/reactions"
            },
            "updated_at": "2024-11-24T08:48:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2495876121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> ```\r\n> cdef extern void test():\r\n>   print(\"test\")\r\n> ```\r\n> \r\n> That makes little sense to me.\r\n> \r\n> At a C level, `extern` is promising that \"a function with this definition definitely exists, somewhere else\". So it doesn't make sense to put `extern` on a definition.\r\n> \r\n> Since there isn't a definition \"somewhere else\" you get a linking error.\r\n\r\nIt's a way to make C++ call Cython functions while directly compiling with Cython, not the Python C API, which works, when only using PYX without a PXD, but with a PXD it fails.\r\n\r\n> > I'm not sure if it's intended to allow definitions and calls like cdef extern void fn(), but they are incredibly useful to call Python from C++ from Cython.\r\n> \r\n> Can you explain this a bit more - I'm struggling to understand what you mean.\r\n\r\nYes.\r\nE.g.\r\n```cython\r\ncdef extern from \"file.cpp\":\r\n  void callCpp()\r\ncdef extern void callCy():\r\n  print(\"callCy()\")\r\n\r\ncallCpp() # now this function in C++ has declared extern void callCy(); and calls callCy().\r\n```\r\n\r\nThis resolves and works with only a pyx, but not with a pyx + pxd for cimport support.\r\n\r\nEven if it's not intentional, it's highly useful. I believe you guys have suggested using public instead, but that doesn't work either (same error as described here, undefined reference to funcname).\r\n\r\n**It looks like I may not need to use extern though**, so maybe the use of this is just a bad habit of mine thinking it was necessary because it generally works, without checking if it works without the extern prefix.\r\n\r\nHowever without the extern prefix both in C++ and Cython I still get unresolved symbols/undefined references when compiling, so this still seems like a bug to me.\r\n\r\n\r\n**Edit: Actually you do need to use the extern prefix.** Else you get a runtime error even when using import (not cimport).",
            "created_at": "2024-11-24T13:22:51Z",
            "html_url": "https://github.com/cython/cython/issues/6514#issuecomment-2495999797",
            "id": 2495999797,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6514",
            "node_id": "IC_kwDOABDGAc6Uxe81",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2495999797/reactions"
            },
            "updated_at": "2024-11-25T03:05:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2495999797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm also having issues making cimport work even with Cython docs own examples used in https://cython.readthedocs.io/en/latest/src/userguide/sharing_declarations.html#sharing-c-functions\r\n\r\nThe pxd file is found during compilation, so no compilation errors, but on runtime, even with sys.path.append('.'), I get a ModuleNotFound error.\r\n\r\nNon-function declarations seem to work, like the spam dishes example, but not function declarations in pxd.",
            "created_at": "2024-11-24T15:32:53Z",
            "html_url": "https://github.com/cython/cython/issues/6514#issuecomment-2496065962",
            "id": 2496065962,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6514",
            "node_id": "IC_kwDOABDGAc6UxvGq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2496065962/reactions"
            },
            "updated_at": "2024-11-24T15:32:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2496065962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
                "events_url": "https://api.github.com/users/Source61/events{/privacy}",
                "followers_url": "https://api.github.com/users/Source61/followers",
                "following_url": "https://api.github.com/users/Source61/following{/other_user}",
                "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Source61",
                "id": 68166790,
                "login": "Source61",
                "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
                "organizations_url": "https://api.github.com/users/Source61/orgs",
                "received_events_url": "https://api.github.com/users/Source61/received_events",
                "repos_url": "https://api.github.com/users/Source61/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Source61",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6514/comments",
    "created_at": "2024-11-24T00:07:57Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6514/events",
    "html_url": "https://github.com/cython/cython/issues/6514",
    "id": 2686839325,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6514/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6gJeod",
    "number": 6514,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6514/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6514/timeline",
    "title": "[BUG] Undefined reference to funcname when compiling embedded exec/lib with pxd and with a cdef extern func()",
    "updated_at": "2024-11-25T03:05:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6514",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/68166790?v=4",
        "events_url": "https://api.github.com/users/Source61/events{/privacy}",
        "followers_url": "https://api.github.com/users/Source61/followers",
        "following_url": "https://api.github.com/users/Source61/following{/other_user}",
        "gists_url": "https://api.github.com/users/Source61/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Source61",
        "id": 68166790,
        "login": "Source61",
        "node_id": "MDQ6VXNlcjY4MTY2Nzkw",
        "organizations_url": "https://api.github.com/users/Source61/orgs",
        "received_events_url": "https://api.github.com/users/Source61/received_events",
        "repos_url": "https://api.github.com/users/Source61/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Source61/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Source61/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Source61",
        "user_view_type": "public"
    }
}