{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\nWhen trying to cythonize pyarrow with cython and cpython default branches it fails with:\r\n\r\n```\r\n\r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n              buffer.obj = self\r\n              buffer.shape = self.shape\r\n              buffer.strides = self.strides\r\n              buffer.suboffsets = NULL\r\n\r\n          def __getsegcount__(self, Py_ssize_t *len_out):\r\n                                    ^\r\n      ------------------------------------------------------------\r\n\r\n      pyarrow/io.pxi:1449:30: Cannot convert Python object argument to type 'Py_ssize_t *'\r\n\r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n          def __getsegcount__(self, Py_ssize_t *len_out):\r\n              if len_out != NULL:\r\n                  len_out[0] = <Py_ssize_t>self.size\r\n              return 1\r\n\r\n          def __getreadbuffer__(self, Py_ssize_t idx, void **p):\r\n                                                      ^\r\n      ------------------------------------------------------------\r\n\r\n      pyarrow/io.pxi:1454:48: Cannot convert Python object argument to type 'void **'\r\n\r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n                  raise SystemError(\"accessing nonexistent buffer segment\")\r\n              if p != NULL:\r\n                  p[0] = <void*> self.buffer.get().data()\r\n              return self.size\r\n\r\n          def __getwritebuffer__(self, Py_ssize_t idx, void **p):\r\n                                                       ^\r\n      ------------------------------------------------------------\r\n\r\n      pyarrow/io.pxi:1461:49: Cannot convert Python object argument to type 'void **'\r\n```\r\n\r\nI was able to bisect it to 9a22b49cb8573c5085994d8c9c5da2de6b2b577d being the first bad commit which looks like it removes these methods from  `self.PyBufferProcs`.\r\n\r\nOddly, it does not fail with py312 and I do not have a good theory of why.\n\n### Code to reproduce the behaviour:\n\nhttps://github.com/apache/arrow/blob/22f88fa4a8f5ac7250f1845aace5a78d20006ef2/python/pyarrow/io.pxi#L1449-L1468\r\n\r\n```cython\r\n# example code\r\n    def __getsegcount__(self, Py_ssize_t *len_out):\r\n        if len_out != NULL:\r\n            len_out[0] = <Py_ssize_t>self.size\r\n        return 1\r\n\r\n\r\n    def __getreadbuffer__(self, Py_ssize_t idx, void **p):\r\n        if idx != 0:\r\n            raise SystemError(\"accessing nonexistent buffer segment\")\r\n        if p != NULL:\r\n            p[0] = <void*> self.buffer.get().data()\r\n        return self.size\r\n\r\n\r\n    def __getwritebuffer__(self, Py_ssize_t idx, void **p):\r\n        if not self.buffer.get().is_mutable():\r\n            raise SystemError(\"trying to write an immutable buffer\")\r\n        if idx != 0:\r\n            raise SystemError(\"accessing nonexistent buffer segment\")\r\n        if p != NULL:\r\n            p[0] = <void*> self.buffer.get().data()\r\n        return self.size\r\n```\r\n\n\n### Expected behaviour\n\nCompilation should not fail.\r\n\r\nIf these are going to be removed, then I think it needs to be better advertised and removed from https://cython.readthedocs.io/en/latest/src/userguide/special_methods.html#buffer-interface-legacy-no-python-equivalents-see-note-1\n\n### OS\n\nlinux\n\n### Python version\n\nmain branch\n\n### Cython version\n\ndevelopment branches\n\n### Additional context\n\nFrom searching code I have checked out on my machine I think this may also hit mpi4py.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6174/comments",
    "created_at": "2024-05-01T14:14:01Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6174/events",
    "html_url": "https://github.com/cython/cython/issues/6174",
    "id": 2273586260,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6174/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6HhCxU",
    "number": 6174,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6174/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6174/timeline",
    "title": "[BUG] removal of old-style buffer special methods breaks pyarrow on py313",
    "updated_at": "2024-05-01T14:14:01Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6174",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/199813?v=4",
        "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
        "followers_url": "https://api.github.com/users/tacaswell/followers",
        "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
        "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tacaswell",
        "id": 199813,
        "login": "tacaswell",
        "node_id": "MDQ6VXNlcjE5OTgxMw==",
        "organizations_url": "https://api.github.com/users/tacaswell/orgs",
        "received_events_url": "https://api.github.com/users/tacaswell/received_events",
        "repos_url": "https://api.github.com/users/tacaswell/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tacaswell"
    }
}