{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I have the following definitions:\r\n```cython\r\n\r\ncdef cppclass CCSVInvalidRow\" arrow::csv::InvalidRow\":\r\n    int32_t expected_columns\r\n    int32_t actual_columns\r\n    int64_t number\r\n    c_string text\r\n\r\nctypedef enum CInvalidRowResult\" arrow::csv::InvalidRowResult\":\r\n    CInvalidRowResult_Error\" arrow::csv::InvalidRowResult::Error\"\r\n    CInvalidRowResult_Skip\" arrow::csv::InvalidRowResult::Skip\"\r\n\r\nctypedef CInvalidRowResult PyInvalidRowCallback(object,\r\n                                                const CCSVInvalidRow&)\r\n```\r\n\r\nThen:\r\n```cython\r\n\r\ncdef CInvalidRowResult _handle_invalid_row(\r\n        handler, const CCSVInvalidRow& c_row) except CInvalidRowResult_Error:\r\n    ...\r\n```\r\n\r\nAnd finally:\r\n```cython\r\n        cdef CInvalidRowResult (*cb)(object, const CCSVInvalidRow&)\r\n        cb = _handle_invalid_row\r\n```\r\n\r\n... which fails compiling with this message:\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n        self._invalid_row_handler = value\r\n\r\n        cdef CInvalidRowResult (*cb)(object, const CCSVInvalidRow&)\r\n        cb = _handle_invalid_row\r\n            ^\r\n------------------------------------------------------------\r\n\r\npyarrow/_csv.pyx:430:13: Cannot assign type 'CInvalidRowResult (object, const CCSVInvalidRow &) except  arrow::csv::InvalidRowResult::Error' to 'CInvalidRowResult (*)(object, const CCSVInvalidRow &)'\r\n```\r\n\r\nI tried other possibilities (using `&_handle_invalid_row`, passing the result value as a pointer...) and did not manage to get it to work.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 20.04\r\n - Python version 3.9.7\r\n - Cython version 0.29.26\r\n",
    "closed_at": "2021-12-21T18:46:10Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> ```cython\r\n> ctypedef enum CInvalidRowResult\" arrow::csv::InvalidRowResult\":\r\n>     CInvalidRowResult_Error\" arrow::csv::InvalidRowResult::Error\"\r\n>     CInvalidRowResult_Skip\" arrow::csv::InvalidRowResult::Skip\"\r\n\r\nThese are integers?\r\n\r\nThe following two signatures are actually incompatible due to the `except` return value:\r\n\r\n> ```cython\r\n> cdef CInvalidRowResult _handle_invalid_row(\r\n>         handler, const CCSVInvalidRow& c_row) except CInvalidRowResult_Error:\r\n> ```\r\n> ```cython\r\n>         cdef CInvalidRowResult (*cb)(object, const CCSVInvalidRow&)\r\n>         cb = _handle_invalid_row\r\n> ```\r\n\r\nHere, you are trying to assign a function that returns an exception value to a function pointer that does not declare one. That means that if you call the function through the function pointer, then the caller will not know about the exception value and cannot propagate exceptions. This is a dangerous bug in your code and Cython refuses to let it pass. You need to declare the except value also on the function pointer type, or make use of Cython's type inference to avoid the declaration all together.",
            "created_at": "2021-12-21T18:46:10Z",
            "html_url": "https://github.com/cython/cython/issues/4513#issuecomment-999011680",
            "id": 999011680,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4513",
            "node_id": "IC_kwDOABDGAc47i7Vg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/999011680/reactions"
            },
            "updated_at": "2021-12-21T18:46:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/999011680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is weird as in another part of the code it compiles fine with a similar pattern (mismatching `except`):\r\n```cython\r\n\r\nctypedef c_bool CallbackEquals(object, const CFileSystem&)\r\n\r\ncdef cppclass CPyFileSystemVtable \"arrow::py::fs::PyFileSystemVtable\":\r\n    function[CallbackEquals] equals\r\n\r\ncdef c_bool _cb_equals(handler, const CFileSystem& c_other) except False:\r\n    ...\r\n```\r\n\r\nand then:\r\n```cython\r\n        cdef:\r\n            CPyFileSystemVtable vtable\r\n\r\n        vtable.equals = _cb_equals\r\n```\r\n",
            "created_at": "2021-12-21T18:56:32Z",
            "html_url": "https://github.com/cython/cython/issues/4513#issuecomment-999018094",
            "id": 999018094,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4513",
            "node_id": "IC_kwDOABDGAc47i85u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/999018094/reactions"
            },
            "updated_at": "2021-12-21T18:56:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/999018094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ```cython\r\n> ctypedef c_bool CallbackEquals(object, const CFileSystem&)\r\n> \r\n> cdef cppclass CPyFileSystemVtable \"arrow::py::fs::PyFileSystemVtable\":\r\n>     function[CallbackEquals] equals\r\n> ```\r\n\r\nBut this isn't declaring `equals` with type `CallbackEquals`, it declares it with type `function[CallbackEquals]`, which, from the point of view of Cython, is this C++ type:\r\nhttps://github.com/cython/cython/blob/008bc53c45d1131d0eedf5c1fe276f5808911681/Cython/Includes/libcpp/functional.pxd#L3-L15\r\nNote the wide range of supported assignment types. There's basically no type checking at all going on here. Anything that qualifies as a pointer type will be accepted.\r\n\r\nI'm not saying that that's a good thing. My guess is rather that the original contributor wanted to get the `function` type working with not too many restrictions, because tightening the type checks in Cython always risks rejecting some kind of valid C++ construct. And most incorrect usage will later be rejected by the C++ compiler anyway.\r\n\r\nIn this case, the unfortunate effect is that we allow something that only Cython can (and should) reject, not C++.",
            "created_at": "2021-12-21T19:09:39Z",
            "html_url": "https://github.com/cython/cython/issues/4513#issuecomment-999025803",
            "id": 999025803,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4513",
            "node_id": "IC_kwDOABDGAc47i-yL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/999025803/reactions"
            },
            "updated_at": "2021-12-21T19:09:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/999025803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, I see. Well, I've switched to `function[...]` to fix the assignment issue :-)",
            "created_at": "2021-12-21T19:11:07Z",
            "html_url": "https://github.com/cython/cython/issues/4513#issuecomment-999026653",
            "id": 999026653,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4513",
            "node_id": "IC_kwDOABDGAc47i-_d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/999026653/reactions"
            },
            "updated_at": "2021-12-21T19:11:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/999026653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4513/comments",
    "created_at": "2021-12-21T18:28:22Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-12-21T18:46:08Z",
            "event": "labeled",
            "id": 5800737449,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "LE_lADOABDGAc5AvJoszwAAAAFZwDqp",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5800737449"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-12-21T18:46:10Z",
            "event": "closed",
            "id": 5800737635,
            "node_id": "CE_lADOABDGAc5AvJoszwAAAAFZwDtj",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/5800737635"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-12-21T19:17:50Z",
            "event": "renamed",
            "id": 5800870728,
            "node_id": "RTE_lADOABDGAc5AvJoszwAAAAFZwkNI",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] Function pointer assignment doesn't work",
                "to": "Function pointer assignment with mismatching 'except' clause"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/5800870728"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4513/events",
    "html_url": "https://github.com/cython/cython/issues/4513",
    "id": 1086102060,
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 414800623,
            "name": "support question",
            "node_id": "MDU6TGFiZWw0MTQ4MDA2MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/support%20question"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4513/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5AvJos",
    "number": 4513,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/4513/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/4513/timeline",
    "title": "Function pointer assignment with mismatching 'except' clause",
    "updated_at": "2021-12-21T19:17:50Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4513",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "node_id": "MDQ6VXNlcjE3MjE4MjA=",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou"
    }
}