{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Given the following code:\r\n\r\n```\r\nctypedef bint mybool\r\n\r\ncdef f():\r\n        cdef mybool c\r\n        cdef mybool x\r\n        c = True\r\n        x = True\r\n        x = not x if c else x\r\n        print(x)\r\n```\r\n\r\nResults in this C code:\r\n\r\n```\r\n/* \"test.pyx\":3\r\n * ctypedef bint mybool\r\n * \r\n * cdef f():             # <<<<<<<<<<<<<<\r\n * \tcdef mybool c\r\n * \tcdef mybool x\r\n */\r\n\r\nstatic PyObject *__pyx_f_4test_f(void) {\r\n  __pyx_t_4test_mybool __pyx_v_c;\r\n  __pyx_t_4test_mybool __pyx_v_x;\r\n  PyObject *__pyx_r = NULL;\r\n  __Pyx_RefNannyDeclarations\r\n  PyObject *__pyx_t_1 = NULL;\r\n  PyObject *__pyx_t_2 = NULL;\r\n  __Pyx_RefNannySetupContext(\"f\", 0);\r\n\r\n  /* \"test.pyx\":6\r\n * \tcdef mybool c\r\n * \tcdef mybool x\r\n * \tc = True             # <<<<<<<<<<<<<<\r\n * \tx = True\r\n * \tx = not x if c else x\r\n */\r\n  __pyx_v_c = 1;\r\n\r\n  /* \"test.pyx\":7\r\n * \tcdef mybool x\r\n * \tc = True\r\n * \tx = True             # <<<<<<<<<<<<<<\r\n * \tx = not x if c else x\r\n * \tprint(x)\r\n */\r\n  __pyx_v_x = 1;\r\n\r\n  /* \"test.pyx\":8\r\n * \tc = True\r\n * \tx = True\r\n * \tx = not x if c else x             # <<<<<<<<<<<<<<\r\n * \tprint(x)\r\n */\r\n  if ((__pyx_v_c != 0)) {\r\n    __pyx_t_1 = ((PyObject *)(!(__pyx_v_x != 0)));\r\n  } else {\r\n    __pyx_t_1 = ((PyObject *)__pyx_v_x);\r\n  }\r\n  __pyx_v_x = ((__pyx_t_4test_mybool)__pyx_t_1);\r\n  __pyx_t_1 = 0;\r\n\r\n  /* \"test.pyx\":9\r\n * \tx = True\r\n * \tx = not x if c else x\r\n * \tprint(x)             # <<<<<<<<<<<<<<\r\n */\r\n  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_1);\r\n  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_2);\r\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\r\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n\r\n  /* \"test.pyx\":3\r\n * ctypedef bint mybool\r\n * \r\n * cdef f():             # <<<<<<<<<<<<<<\r\n * \tcdef mybool c\r\n * \tcdef mybool x\r\n */\r\n\r\n  /* function exit code */\r\n  __pyx_r = Py_None; __Pyx_INCREF(Py_None);\r\n  goto __pyx_L0;\r\n  __pyx_L1_error:;\r\n  __Pyx_XDECREF(__pyx_t_1);\r\n  __Pyx_XDECREF(__pyx_t_2);\r\n  __Pyx_AddTraceback(\"test.f\", __pyx_clineno, __pyx_lineno, __pyx_filename);\r\n  __pyx_r = 0;\r\n  __pyx_L0:;\r\n  __Pyx_XGIVEREF(__pyx_r);\r\n  __Pyx_RefNannyFinishContext();\r\n  return __pyx_r;\r\n}\r\n```\r\n\r\nWhich throws these compiler warnings:\r\n\r\n```\r\n$ gcc -shared -pthread -fPIC -fwrapv -O2 -Wall -fno-strict-aliasing -I/usr/include/python3.7 -o test test.c \r\ntest.c: In function ‘__pyx_f_4test_f’:\r\ntest.c:1136:18: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\r\n     __pyx_t_1 = ((PyObject *)(!(__pyx_v_x != 0)));\r\n                  ^\r\ntest.c:1138:18: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\r\n     __pyx_t_1 = ((PyObject *)__pyx_v_x);\r\n                  ^\r\ntest.c:1140:16: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]\r\n   __pyx_v_x = ((__pyx_t_4test_mybool)__pyx_t_1);\r\n```\r\n\r\nThe C boolean variable __pyx_v_x is incorrectly casted to PyObject * and back to bool.\r\n\r\nThis does not happen, if bint is used directly in the cdefs.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3066/comments",
    "created_at": "2019-08-02T19:50:41Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3066/events",
    "html_url": "https://github.com/cython/cython/issues/3066",
    "id": 476331763,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3066/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0NzYzMzE3NjM=",
    "number": 3066,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Cython incorrectly casts with ctypedef and bint",
    "updated_at": "2019-08-02T19:50:41Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3066",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/3619761?v=4",
        "events_url": "https://api.github.com/users/mbuesch/events{/privacy}",
        "followers_url": "https://api.github.com/users/mbuesch/followers",
        "following_url": "https://api.github.com/users/mbuesch/following{/other_user}",
        "gists_url": "https://api.github.com/users/mbuesch/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mbuesch",
        "id": 3619761,
        "login": "mbuesch",
        "node_id": "MDQ6VXNlcjM2MTk3NjE=",
        "organizations_url": "https://api.github.com/users/mbuesch/orgs",
        "received_events_url": "https://api.github.com/users/mbuesch/received_events",
        "repos_url": "https://api.github.com/users/mbuesch/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mbuesch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mbuesch/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mbuesch"
    }
}