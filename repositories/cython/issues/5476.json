{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nWhen recursively creating Cython objects the memory management or garbage collection is bugged.\r\nThe memory address of the first `Node` object is overwritten by later `Node` objects which causes the complete object to be incorrect.\r\n```\r\nCreate node: <binary_trees.Node object at 0x7fe232bb61d0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6590>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68c0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb61d0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6590>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6350>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb61d0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68c0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6350>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6590>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68c0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6350>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68f0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68c0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6590>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb61d0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68c0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68f0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb61d0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68c0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6350>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb61d0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68f0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6350>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68c0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68f0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6350>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb6560>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68f0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb68c0>\r\nCreate node: <binary_trees.Node object at 0x7fe232bb61d0>\r\nCheck node: <binary_trees.Node object at 0x7fe232bb61d0>\r\n```\r\nHere you can see the first object is created at address `0x7fe232bb61d0` and is regularly overwritten by other `Node` objects.\r\n\r\nIf the implementation is adjusted to use a `tuple` instead of a `Node` object everything works fine.\n\n### Code to reproduce the behaviour:\n\nNot working:\r\n```cython\r\ncdef class Node:\r\n    cdef Node left\r\n    cdef Node right\r\n\r\n\r\ncpdef create_tree(int depth):\r\n    if depth > 0:\r\n        node = Node(create_tree(depth - 1), create_tree(depth - 1))\r\n    else:\r\n        node = Node(None, None)\r\n    print(\"Create node: %s\" % node)\r\n    return node\r\n\r\n\r\ncpdef check_tree(Node node):\r\n    print(\"Check node: %s\" % node)\r\n    if node.left is None:\r\n        return 1\r\n    return 1 + check_tree(node.left) + check_tree(node.right)\r\n\r\n\r\ncpdef test():\r\n    assert check_tree(create_tree(4)) == 31\r\n```\r\n\r\nWorking:\r\n```cython\r\ncpdef create_tree(int depth):\r\n    if depth > 0:\r\n        node = create_tree(depth - 1), create_tree(depth - 1)\r\n    else:\r\n        node = None, None\r\n    return node\r\n\r\n\r\ncpdef check_tree(tuple node):\r\n    if node[0] is None:\r\n        return 1\r\n    return 1 + check_tree(node[0]) + check_tree(node[1])\r\n\r\n\r\ncpdef test():\r\n    assert check_tree(create_tree(4)) == 31\r\n```\n\n### Expected behaviour\n\nEvery object is created at a separate memory address and in the end the size of the binary tree is checked to be 31\n\n### OS\n\nLinux\n\n### Python version\n\n3.11.3\n\n### Cython version\n\n3.0.0b3\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5476/comments",
    "created_at": "2023-06-07T10:07:09Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46791457?v=4",
                "events_url": "https://api.github.com/users/loocars/events{/privacy}",
                "followers_url": "https://api.github.com/users/loocars/followers",
                "following_url": "https://api.github.com/users/loocars/following{/other_user}",
                "gists_url": "https://api.github.com/users/loocars/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/loocars",
                "id": 46791457,
                "login": "loocars",
                "node_id": "MDQ6VXNlcjQ2NzkxNDU3",
                "organizations_url": "https://api.github.com/users/loocars/orgs",
                "received_events_url": "https://api.github.com/users/loocars/received_events",
                "repos_url": "https://api.github.com/users/loocars/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/loocars/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/loocars/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/loocars"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2023-06-07T10:07:37Z",
            "event": "renamed",
            "id": 9456851695,
            "node_id": "RTE_lADOABDGAc5oCqRszwAAAAIzrBrv",
            "performed_via_github_app": null,
            "rename": {
                "from": "[BUG] ",
                "to": "[BUG] Memory management of recursively created Cython objects"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/9456851695"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5476/events",
    "html_url": "https://github.com/cython/cython/issues/5476",
    "id": 1745527916,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5476/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5oCqRs",
    "number": 5476,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5476/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5476/timeline",
    "title": "[BUG] Memory management of recursively created Cython objects",
    "updated_at": "2023-06-07T10:07:37Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5476",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/46791457?v=4",
        "events_url": "https://api.github.com/users/loocars/events{/privacy}",
        "followers_url": "https://api.github.com/users/loocars/followers",
        "following_url": "https://api.github.com/users/loocars/following{/other_user}",
        "gists_url": "https://api.github.com/users/loocars/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/loocars",
        "id": 46791457,
        "login": "loocars",
        "node_id": "MDQ6VXNlcjQ2NzkxNDU3",
        "organizations_url": "https://api.github.com/users/loocars/orgs",
        "received_events_url": "https://api.github.com/users/loocars/received_events",
        "repos_url": "https://api.github.com/users/loocars/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/loocars/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/loocars/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/loocars"
    }
}