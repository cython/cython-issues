{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The following tells me that -1 is definitely positive:\r\n\r\n```cython\r\nctypedef fused test_t:\r\n    signed int\r\n    unsigned int\r\n\r\ncdef f(test_t x):\r\n    if test_t is int:\r\n        print(f\"{x} might be negative.\")\r\n    else:\r\n        print(f\"{x} is definitely positive.\")\r\n\r\nf(<signed int> -1)\r\n```\r\n\r\nThe problem is that `signed int is int` evaluates to `False`. The C standard specifies that these must be the same (section 6.7.2).\r\n\r\nAn obvious workaround is to not used the `signed` type qualifier. However, some of the types in the NumPy Cython API use it, making such a workaround awkward.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "`int` is a bit of add odd case because it's also a Python type that can take any integer (including really large ones). So in a lot of cases Cython interprets it as the Python type for safety. That might well be what's happening here (untested guess though)?\r\n\r\nIf that is the case then it probably isn't a bug - just a case where Cython's decided to prioritise Python-compatibility over the C standard.",
            "created_at": "2021-02-22T21:38:51Z",
            "html_url": "https://github.com/cython/cython/issues/4016#issuecomment-783692267",
            "id": 783692267,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4016",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzY5MjI2Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-22T21:41:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/783692267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "If true, that would not be useful behavior. You can't statically test the Python type of a Python object, so it would be equivalent to write `if test_t is object`.",
            "created_at": "2021-02-22T22:51:58Z",
            "html_url": "https://github.com/cython/cython/issues/4016#issuecomment-783734066",
            "id": 783734066,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4016",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzczNDA2Ng==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-22T22:51:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/783734066",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8031433?v=4",
                "events_url": "https://api.github.com/users/kylehofmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylehofmann/followers",
                "following_url": "https://api.github.com/users/kylehofmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylehofmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylehofmann",
                "id": 8031433,
                "login": "kylehofmann",
                "node_id": "MDQ6VXNlcjgwMzE0MzM=",
                "organizations_url": "https://api.github.com/users/kylehofmann/orgs",
                "received_events_url": "https://api.github.com/users/kylehofmann/received_events",
                "repos_url": "https://api.github.com/users/kylehofmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylehofmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylehofmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylehofmann"
            }
        },
        {
            "author_association": "NONE",
            "body": "No, I don't think that's the issue.  Try:\r\n\r\n```cython\r\nctypedef signed int sint\r\nctypedef unsigned int uint\r\n\r\nctypedef fused test_t:\r\n    int\r\n    sint\r\n    uint\r\n    object\r\n\r\ncdef f(test_t x):\r\n    if test_t is int:\r\n        print(f\"{x} is an int, whatever that means.\")\r\n    elif test_t is sint:\r\n        print(f\"{x} is a signed int.\")\r\n    elif test_t is uint:\r\n        print(f\"{x} is an unsigned int.\")\r\n    elif test_t is object:\r\n        print(f\"{x} is a Python object.\")\r\n\r\ncdef g():\r\n    cdef int a = -1\r\n    cdef signed int b = -1\r\n    cdef unsigned int c = -1\r\n    cdef object d = -1\r\n\r\n    f(a)\r\n    f(b)\r\n    f(c)\r\n    f(d)\r\n\r\ng()\r\n```\r\n\r\nI get:\r\n\r\n```\r\n-1 is an int, whatever that means.\r\n-1 is a signed int.\r\n4294967295 is an unsigned int.\r\n-1 is a Python object.\r\n```\r\n\r\nExamining the source reveals that there are indeed four fused functions, one each for int, signed int, unsigned int, and object; and they're being called with objects of the appropriate types. Though curiously, the variable in `g` holding `b` is actually given type `int`.",
            "created_at": "2021-02-22T23:02:16Z",
            "html_url": "https://github.com/cython/cython/issues/4016#issuecomment-783739568",
            "id": 783739568,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4016",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzczOTU2OA==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-22T23:04:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/783739568",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8031433?v=4",
                "events_url": "https://api.github.com/users/kylehofmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylehofmann/followers",
                "following_url": "https://api.github.com/users/kylehofmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylehofmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylehofmann",
                "id": 8031433,
                "login": "kylehofmann",
                "node_id": "MDQ6VXNlcjgwMzE0MzM=",
                "organizations_url": "https://api.github.com/users/kylehofmann/orgs",
                "received_events_url": "https://api.github.com/users/kylehofmann/received_events",
                "repos_url": "https://api.github.com/users/kylehofmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylehofmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylehofmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylehofmann"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We keep these separately mostly due to `char`. E.g. `char` is the same type as either `signed char` or `unsigned char` but we don't know which. Looking at the standard (thanks for the reference) II suppose we could collapse `signed x` and `x` for everything but char. I'm not sure if this would be a breaking change though (e.g. for existing fused types that take both signed and unqualified types). ",
            "created_at": "2021-02-26T06:48:08Z",
            "html_url": "https://github.com/cython/cython/issues/4016#issuecomment-786449997",
            "id": 786449997,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/4016",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjQ0OTk5Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-02-26T06:48:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/786449997",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4016/comments",
    "created_at": "2021-02-22T21:35:01Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/4016/events",
    "html_url": "https://github.com/cython/cython/issues/4016",
    "id": 813883281,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/4016/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4MTM4ODMyODE=",
    "number": 4016,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "[BUG] Static type comparisons misinterpret the signed type qualifier",
    "updated_at": "2021-02-26T06:48:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/4016",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8031433?v=4",
        "events_url": "https://api.github.com/users/kylehofmann/events{/privacy}",
        "followers_url": "https://api.github.com/users/kylehofmann/followers",
        "following_url": "https://api.github.com/users/kylehofmann/following{/other_user}",
        "gists_url": "https://api.github.com/users/kylehofmann/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kylehofmann",
        "id": 8031433,
        "login": "kylehofmann",
        "node_id": "MDQ6VXNlcjgwMzE0MzM=",
        "organizations_url": "https://api.github.com/users/kylehofmann/orgs",
        "received_events_url": "https://api.github.com/users/kylehofmann/received_events",
        "repos_url": "https://api.github.com/users/kylehofmann/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kylehofmann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kylehofmann/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kylehofmann"
    }
}