{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "With Python 3.8.3 on macOS a simple `python setup.py build_ext --inplace` yields the following. On Debian with Python 3.8.3 everything seemed fine\r\n\r\n```python-traceback\r\nUnable to find pgen, not compiling formal grammar.\r\nrunning build_ext\r\nCompiling /Users/willayd/clones/cython/Cython/Plex/Machines.py because it changed.\r\nCompiling /Users/willayd/clones/cython/Cython/Plex/Transitions.py because it changed.\r\nCompiling /Users/willayd/clones/cython/Cython/Plex/DFA.py because it changed.\r\nCompiling /Users/willayd/clones/cython/Cython/Compiler/Scanning.py because it changed.\r\nCompiling /Users/willayd/clones/cython/Cython/Compiler/FlowControl.py because it changed.\r\nCompiling /Users/willayd/clones/cython/Cython/Compiler/FusedNode.py because it changed.\r\nCompiling /Users/willayd/clones/cython/Cython/Tempita/_tempita.py because it changed.\r\n[1/7] Cythonizing /Users/willayd/clones/cython/Cython/Compiler/FlowControl.py\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 299, in <module>\r\n    run_build()\r\n  File \"setup.py\", line 236, in run_build\r\n    setup(\r\n  File \"/Users/willayd/miniconda3/envs/cython-dev/lib/python3.8/site-packages/setuptools/__init__.py\", line 144, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/Users/willayd/miniconda3/envs/cython-dev/lib/python3.8/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/Users/willayd/miniconda3/envs/cython-dev/lib/python3.8/distutils/dist.py\", line 966, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/Users/willayd/miniconda3/envs/cython-dev/lib/python3.8/distutils/dist.py\", line 984, in run_command\r\n    cmd_obj.ensure_finalized()\r\n  File \"/Users/willayd/miniconda3/envs/cython-dev/lib/python3.8/distutils/cmd.py\", line 107, in ensure_finalized\r\n    self.finalize_options()\r\n  File \"/Users/willayd/clones/cython/Cython/Distutils/build_ext.py\", line 20, in finalize_options\r\n    self.distribution.ext_modules[:] = cythonize(\r\n  File \"/Users/willayd/clones/cython/Cython/Build/Dependencies.py\", line 1110, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/Users/willayd/clones/cython/Cython/Build/Dependencies.py\", line 1256, in cythonize_one\r\n    result = compile_single(pyx_file, options, full_module_name=full_module_name)\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/Main.py\", line 575, in compile_single\r\n    return run_pipeline(source, options, full_module_name)\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/Main.py\", line 492, in run_pipeline\r\n    pipeline = Pipeline.create_py_pipeline(context, options, result)\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/Pipeline.py\", line 272, in create_py_pipeline\r\n    return create_pyx_pipeline(context, options, result, py=True)\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/Pipeline.py\", line 252, in create_pyx_pipeline\r\n    create_pipeline(context, mode, exclude_classes=exclude_classes),\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/Pipeline.py\", line 144, in create_pipeline\r\n    from .ParseTreeTransforms import WithTransform, NormalizeTree, PostParse, PxdPostParse\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/ParseTreeTransforms.py\", line 1637, in <module>\r\n    class AnalyseDeclarationsTransform(EnvTransform):\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/ParseTreeTransforms.py\", line 1639, in AnalyseDeclarationsTransform\r\n    basic_property = TreeFragment(u\"\"\"\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/TreeFragment.py\", line 235, in __init__\r\n    mod = t = parse_from_strings(name, fmt_code, fmt_pxds, level=level, initial_pos=initial_pos)\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/TreeFragment.py\", line 74, in parse_from_strings\r\n    scanner = PyrexScanner(buf, code_source, source_encoding = encoding,\r\n  File \"Cython/Compiler/Scanning.py\", line 306, in Cython.Compiler.Scanning.PyrexScanner.__init__\r\n    Scanner.__init__(self, get_lexicon(), file, filename, initial_pos)\r\n  File \"Cython/Compiler/Scanning.py\", line 35, in Cython.Compiler.Scanning.get_lexicon\r\n    lexicon = make_lexicon()\r\n  File \"/Users/willayd/clones/cython/Cython/Compiler/Lexicon.py\", line 87, in make_lexicon\r\n    return Lexicon([\r\n  File \"/Users/willayd/clones/cython/Cython/Plex/Lexicons.py\", line 140, in __init__\r\n    dfa = DFA.nfa_to_dfa(nfa, debug=(debug_flags & 3) == 3 and debug)\r\n  File \"/Users/willayd/clones/cython/Cython/Plex/DFA.py\", line 47, in nfa_to_dfa\r\n    new_machine.add_transitions(new_state, event, state_map.old_to_new(old_states))\r\n  File \"Cython/Plex/Machines.py\", line 169, in Cython.Plex.Machines.FastMachine.add_transitions\r\n    def get_initial_state(self, name):\r\nValueError: chr() arg not in range(0x110000)\r\n```",
    "closed_at": "2020-06-26T17:13:08Z",
    "comment_data": [
        {
            "author_association": "COLLABORATOR",
            "body": "I know there were a few changes to Plex.Machines recently to try to speed it up. Based on the line numbers it looks like the .so and the .pyx file may have got out of sync - i.e. you may have an Machines.so that was built when it was broken?\r\n\r\nThe error isn't coming from a line where it makes sense (but is coming from one nearby). Is there a Machines.so that you can find and delete?",
            "created_at": "2020-06-26T17:06:00Z",
            "html_url": "https://github.com/cython/cython/issues/3710#issuecomment-650290604",
            "id": 650290604,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3710",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDI5MDYwNA==",
            "updated_at": "2020-06-26T17:06:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/650290604",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah OK I did see one. I tried running a `python setup.py clean --all` before hand (should have mentioned in OP) but I guess that doesn't clear them? Is there a standard way to clean all build artifacts?",
            "created_at": "2020-06-26T17:09:16Z",
            "html_url": "https://github.com/cython/cython/issues/3710#issuecomment-650292302",
            "id": 650292302,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3710",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDI5MjMwMg==",
            "updated_at": "2020-06-26T17:09:16Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/650292302",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
                "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
                "followers_url": "https://api.github.com/users/WillAyd/followers",
                "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
                "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WillAyd",
                "id": 609873,
                "login": "WillAyd",
                "node_id": "MDQ6VXNlcjYwOTg3Mw==",
                "organizations_url": "https://api.github.com/users/WillAyd/orgs",
                "received_events_url": "https://api.github.com/users/WillAyd/received_events",
                "repos_url": "https://api.github.com/users/WillAyd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WillAyd"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Looks like running `find . -name \"*.so\" -delete` before the build fixed this, so feel free to close. Thanks for the tip!",
            "created_at": "2020-06-26T17:12:06Z",
            "html_url": "https://github.com/cython/cython/issues/3710#issuecomment-650293956",
            "id": 650293956,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3710",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDI5Mzk1Ng==",
            "updated_at": "2020-06-26T17:12:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/650293956",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
                "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
                "followers_url": "https://api.github.com/users/WillAyd/followers",
                "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
                "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WillAyd",
                "id": 609873,
                "login": "WillAyd",
                "node_id": "MDQ6VXNlcjYwOTg3Mw==",
                "organizations_url": "https://api.github.com/users/WillAyd/orgs",
                "received_events_url": "https://api.github.com/users/WillAyd/received_events",
                "repos_url": "https://api.github.com/users/WillAyd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WillAyd"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Is there a standard way to clean all build artifacts?\r\n\r\nNot sure I'm afraid. I don't usually bother building Cython. I'll close since I think this was just bad luck to have ended up with a broken version.",
            "created_at": "2020-06-26T17:13:08Z",
            "html_url": "https://github.com/cython/cython/issues/3710#issuecomment-650294553",
            "id": 650294553,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3710",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDI5NDU1Mw==",
            "updated_at": "2020-06-26T17:13:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/650294553",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3710/comments",
    "created_at": "2020-06-26T16:56:46Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
                "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
                "followers_url": "https://api.github.com/users/WillAyd/followers",
                "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
                "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WillAyd",
                "id": 609873,
                "login": "WillAyd",
                "node_id": "MDQ6VXNlcjYwOTg3Mw==",
                "organizations_url": "https://api.github.com/users/WillAyd/orgs",
                "received_events_url": "https://api.github.com/users/WillAyd/received_events",
                "repos_url": "https://api.github.com/users/WillAyd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WillAyd"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-06-26T16:56:59Z",
            "event": "renamed",
            "id": 3487391369,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzQ4NzM5MTM2OQ==",
            "rename": {
                "from": "Unable to Compile on macOS - ValueError: chr() arg not in range(",
                "to": "Unable to Compile on macOS - ValueError: chr() arg not in range(0x110000)"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/3487391369"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-06-26T17:13:08Z",
            "event": "closed",
            "id": 3487444412,
            "node_id": "MDExOkNsb3NlZEV2ZW50MzQ4NzQ0NDQxMg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/3487444412"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3710/events",
    "html_url": "https://github.com/cython/cython/issues/3710",
    "id": 646390630,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3710/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2NDYzOTA2MzA=",
    "number": 3710,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Unable to Compile on macOS - ValueError: chr() arg not in range(0x110000)",
    "updated_at": "2020-06-26T17:13:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3710",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
        "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
        "followers_url": "https://api.github.com/users/WillAyd/followers",
        "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
        "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/WillAyd",
        "id": 609873,
        "login": "WillAyd",
        "node_id": "MDQ6VXNlcjYwOTg3Mw==",
        "organizations_url": "https://api.github.com/users/WillAyd/orgs",
        "received_events_url": "https://api.github.com/users/WillAyd/received_events",
        "repos_url": "https://api.github.com/users/WillAyd/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/WillAyd"
    }
}