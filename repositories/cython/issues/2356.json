{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Cython modules tend to be big (see #2102) and certain parts are the same for all modules. Especially in large installations, it would reduce the overall binary size to extract the shareable parts into a dedicated shared library that all modules link against.\r\n\r\nRandom notes:\r\n- Some internal types are already shared across modules, but their code is still duplicated across all modules. The first imported Cython module (of a given Cython version) registers it globally for all others, which will then not use their own implementations.\r\n- Cython can already extract its helpers into dedicated header files to reduce the build overhead. A shared library could be based on that.\r\n- Much of the performance of Cython code comes from inlined (and compile time streamlined) functions. Extracting those into a shared library would probably slow things down visibly, but could be a tradeoff.\r\n- Using a shared library adds quite some complexity. The library could be used globally for a Python installation (in which case it's unclear how to find it and which one to use if there are multiple), or local to an installed package. The latter is probably simpler but still requires some coordination on user side. A global library could come in as a separate package dependency that the Cython project could provide, but would introduce an exact version dependency based on the Cython version that a package was built with.\r\n- It is not entirely clear how to deal with the runtime linking here. A real shared library would have to be loaded together with the Cython module, i.e. there would have to be a way for the shared library loader to find it. It might be easier (and more portable) to use a Python extension module and explicitly import the code from there via capsules, in the same way that Cython currently imports its shared types from the first imported module.\r\n- Such a shared library would have to be complete in order to be usable by all Cython generated modules. It would thus be larger than what most single Cython modules (and even some small sets of Cython modules) actually need.\r\n- The potential gain is unclear. For large installations, there is certainly a gain even if only the shared types are extracted from each of the modules. However, large installations are rare. If a shared library is created on a per-package basis, there will still be a lot of duplication in a given Python installation.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for writing this up @scoder. This is a very useful discussion to have.\r\n\r\nIt sounds like the first two points (internal types and helpers) are a good starting point for this shared library. Inlined functions would probably not be good in a shared library. That said, these should be profiled (if they haven't been already) to make sure inlining happens and is of significant value.\r\n\r\nAs to shared library management (points 4 and 5), the typical way, which I'm sure you know, to deal with this is use a SONAME. However the challenge becomes how do we install this. One option is we actually release a shared library with each Cython version to PyPI and anywhere else that include the SONAME in the package name (e.g. `libcython-0.28`). This makes it possible to install multiple versions and to ensure that code loads a compatible version. Similar strategies already occur in other package managers, which could easily adopt this. Managing this on PyPI may be a bit of a challenge without some improvements.\r\n\r\nIt's hard to reason about things like size without a simple prototype to inform one's intuition. Could you please suggest a few functions that might be reasonable for this sort of thing and/or where to look for them?",
            "created_at": "2018-06-19T23:29:03Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-398577128",
            "id": 398577128,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU3NzEyOA==",
            "performed_via_github_app": null,
            "updated_at": "2018-06-19T23:29:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/398577128",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Much of the utility code in\nhttps://github.com/cython/cython/tree/master/Cython/Utility would be ripe\ncandidates for this sort of thing.\n\nRestricting the scope to a single (monolithically compiled) package would\nbe simpler, and I'd guess the most benefit would be for those packages that\nhave many, many cython modules in them anyways. (There's also been a\nrelated desire to compile multiple modules together in a single shared\nobject library; I wonder if we did this if there are tools for\ndeduplicating .so files that have multiple copies of the same exact\nfunction statically linked in... If there is such a tool I wonder if it\ncould give a ballpark estimate for what potential savings there might be\nfor a given collection of .so files.)\n\nWe could also ship a cython_runtime package, with wheels, on PyPi and allow\nany projects to link against that (either via the C library linking level,\nor, simpler, via the same methods we use for cimport).\n\nOn Tue, Jun 19, 2018 at 4:29 PM, jakirkham <notifications@github.com> wrote:\n\n> Thanks for writing this up @scoder <https://github.com/scoder>. This is a\n> very useful discussion to have.\n>\n> It sounds like the first two points (internal types and helpers) are a\n> good starting point for this shared library. Inlined functions would\n> probably not be good in a shared library. That said, these should be\n> profiled (if they haven't been already) to make sure inlining happens and\n> is of significant value.\n>\n> As to shared library management (points 4 and 5), the typical way, which\n> I'm sure you know, to deal with this is use a SONAME. However the challenge\n> becomes how do we install this. One option is we actually release a shared\n> library with each Cython version to PyPI and anywhere else that include the\n> SONAME in the package name (e.g. libcython-0.28). This makes it possible\n> to install multiple versions and to ensure that code loads a compatible\n> version. Similar strategies already occur in other package managers, which\n> could easily adopt this. Managing this on PyPI may be a bit of a challenge\n> without some improvements.\n>\n> It's hard to reason about things like size without a simple prototype to\n> inform one's intuition. Could you please suggest a few functions that might\n> be reasonable for this sort of thing and/or where to look for them?\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/2356#issuecomment-398577128>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAdqgSNwW4xKZFPA_QXhLpeDUcyQjGxMks5t-YlCgaJpZM4UqFUV>\n> .\n>\n",
            "created_at": "2018-06-20T00:47:26Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-398589160",
            "id": 398589160,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU4OTE2MA==",
            "performed_via_github_app": null,
            "updated_at": "2018-06-20T00:47:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/398589160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I wonder if we did this if there are tools for deduplicating .so files that have multiple copies of the same exact function statically linked in...\r\n\r\nGood question. @mingwandroid, do you know of such a tool?",
            "created_at": "2018-06-23T01:20:00Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-399619800",
            "id": 399619800,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTYxOTgwMA==",
            "performed_via_github_app": null,
            "updated_at": "2018-06-23T01:20:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/399619800",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Here's an initial plan:\r\n- The utility code generation is split into multiple phases to accommodate for C's prototype declarations, macros, implementation part, cleanup, etc. We'll introduce a new stage 'shared' that will simply drop its code right behind the impl by default, but marks utility code blocks that can be shared.\r\n- Split the existing utility code impl sections into an impl part that needs to stay in each module and a shared part that can be reused across modules. Start with `CythonFunction.c`, `Coroutine.c` and `AsyncGen.c`, potentially also the memoryviews support, but that is probably more difficult.\r\n- Add a new option `shared_module` to `cythonize()` that takes the qualified module name of a shared module to generate. For example, the `lxml` package would say something like `shared_module=\"lxml._cython_shared\"`.\r\n- Make Cython generate the shared module on request, by dropping _all_ the shared utility code into it, and also the code that exports them as the Cython ABI module (which already exists, see `ImportExport.c` and the related code snippets in the utility code files named above).\r\n- Make Cython exclude the shared code from all the other modules and instead only use the existing shared importing code (which is used to share types and functions across Cython modules that currently duplicate their implementations).\r\n- Don't forget to put a runtime version check into the sharing code to detect the case where only some of the modules in the package get rebuilt, but with a different Cython version. If the Cython version that generated the shared module does not match the version that generated the module that tries to use it, it should fail on import with a clear error message that the whole package needs to be recompiled with a single Cython version.\r\n\r\nThis is a bit of work, but seems relatively easy to do. Help is welcome.",
            "created_at": "2018-06-24T12:11:11Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-399752159",
            "id": 399752159,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc1MjE1OQ==",
            "performed_via_github_app": null,
            "updated_at": "2018-08-04T09:10:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/399752159",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Noting some prior art in this space: PyQT's SIP support module is designed in such that it preserves its ABI, such that you don't need the *exact* same version of the support library, just a recent enough version that it provides all the required APIs.\r\n\r\nShared module on PyPI: https://pypi.org/project/SIP/",
            "created_at": "2018-12-08T11:54:59Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-445453724",
            "id": 445453724,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQ1MzcyNA==",
            "performed_via_github_app": null,
            "updated_at": "2018-12-08T11:54:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/445453724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1026649?v=4",
                "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ncoghlan/followers",
                "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ncoghlan",
                "id": 1026649,
                "login": "ncoghlan",
                "node_id": "MDQ6VXNlcjEwMjY2NDk=",
                "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
                "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
                "repos_url": "https://api.github.com/users/ncoghlan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ncoghlan"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Very crude estimate of the potential saving, just looking at a compiled version of Cython's visitor.py (defining `CFLAGS=\"-DCYTHON_INLINE=\"` doesn't change all that much)\r\n\r\nIt compiled to ~2MB. `strip` takes it down to ~300kB.\r\n\r\nRunning:\r\n\r\n`nm --print-size --radix=d Cython/Compiler/Visitor.cpython-38-x86_64-linux-gnu.so | grep \"__[pP][yY][xX]\" | grep --invert-match \"6Cython\" | grep --invert-match \"__pyx_[kn]\" | grep --invert-match \"string_tab\" | grep --invert-match \"pymod_exec_Visitor\" > vistor_size.txt`\r\n\r\nThat gets all the symbols starting with `__pyx`. But drops those starting with `6Cython` (because they're user functions), plus some constants, plus the string tab, plus the module init function.\r\n\r\nThat leaves ~19kB of symbols. The majority of those are Cython \"shared code\" (but the filter isn't perfect). My view is that this is heading towards \"not really worth it\"",
            "created_at": "2021-04-05T14:02:18Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-813408770",
            "id": 813408770,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzQwODc3MA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-05T14:02:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/813408770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nice analysis. The true value likely isn't that far off, and the savings here pretty limited (especially compared to the complexity of making this work well). Also, though there are certainly some exceptions, Cython utility code tends towards those things that are either small enough to inline (vs. just calling the Python C API directly, or massaging parameters around a Python C API call) or specialized for the situation (e.g. the conversion operators). \r\n\r\nNote that the sharing of types is so that we can do things like instance (or even equality) checks across modules. \r\n\r\nI do think there may still be value in linking multiple modules into the same shared library, but the space savings do look fairly minimal. ",
            "created_at": "2021-04-08T04:57:12Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-815446027",
            "id": 815446027,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTQ0NjAyNw==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-08T04:57:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/815446027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "NONE",
            "body": "Are you saying that the shared lib only has 19kb worth of shared symbols?\r\n\r\nWhile that doesn't sound like a lot, in our particular case we're generating about 500+ separate cython .so files, so it does add up. I was under the impression that doing this could reduce the size more than that though, so I agree that it might not really be worth it.\r\n\r\n",
            "created_at": "2021-04-08T05:09:09Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-815450597",
            "id": 815450597,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTQ1MDU5Nw==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-08T05:09:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/815450597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/780663?v=4",
                "events_url": "https://api.github.com/users/skaughtx0r/events{/privacy}",
                "followers_url": "https://api.github.com/users/skaughtx0r/followers",
                "following_url": "https://api.github.com/users/skaughtx0r/following{/other_user}",
                "gists_url": "https://api.github.com/users/skaughtx0r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skaughtx0r",
                "id": 780663,
                "login": "skaughtx0r",
                "node_id": "MDQ6VXNlcjc4MDY2Mw==",
                "organizations_url": "https://api.github.com/users/skaughtx0r/orgs",
                "received_events_url": "https://api.github.com/users/skaughtx0r/received_events",
                "repos_url": "https://api.github.com/users/skaughtx0r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skaughtx0r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skaughtx0r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skaughtx0r"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Agreed I think this becomes more noticeable when considering shipping a library or even a large number of packages (containing various libraries)",
            "created_at": "2021-04-08T05:33:18Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-815460170",
            "id": 815460170,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTQ2MDE3MA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-08T05:33:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/815460170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
                "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
                "followers_url": "https://api.github.com/users/jakirkham/followers",
                "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
                "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jakirkham",
                "id": 3019665,
                "login": "jakirkham",
                "node_id": "MDQ6VXNlcjMwMTk2NjU=",
                "organizations_url": "https://api.github.com/users/jakirkham/orgs",
                "received_events_url": "https://api.github.com/users/jakirkham/received_events",
                "repos_url": "https://api.github.com/users/jakirkham/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jakirkham"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Are you saying that the shared lib only has 19kb worth of shared symbols?\r\n\r\nThat was essentially my conclusion. There's two caveats:\r\n1. the example modules I looked at don't use memoryviews so they won't be included in my analysis. They do add a reasonably large block of C code\r\n2. I don't know how debugging data is counted (i.e. are they associated with the functions? Or elsewhere?). It's possible I've failed to count the debugging information for the utility code and there might be a real saving from sharing that.\r\n\r\nI think I've convinced myself that I won't be trying to implement this feature, but that doesn't mean that someone else shouldn't ;)",
            "created_at": "2021-04-08T07:30:52Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-815524332",
            "id": 815524332,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTUyNDMzMg==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-08T07:30:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/815524332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@da-woods, everyone, thanks for checking. I've also tried to repeat the analysis on one of my modules, and the outcome is directly the opposite: in my case the **\"shared part\" takes ~ 60% of the total module size**. My module do use memoryviews though. However, I believe memoryviews are so commonly used with Cython (ex scikit-learn), that their pesense should be assumed to be on by default. And that is _exactly_ one of the reasons to keep Cython utility code in a shared library.\r\n\r\nI might be wrong in my analysis somewhere, but I hope this observation demonstrates that solving this issue would have significant impact on code size, and also it would help to improve the speed of compilation (see also https://github.com/cython/cython/issues/3646 on this).\r\n\r\nPlease find details of my analisys below.\r\n\r\nThanks beforehand,\r\nKirill\r\n\r\n---- 8< ----\r\n\r\nTest module: [mm.pyx](https://lab.nexedi.com/kirr/wendelin.core/blob/36766e1d/wcfs/internal/mm.pyx)\r\nSize of compiled `mm.so` before strip: 445K\r\nSize of `mm.so` after strip: 240K\r\nEstimate for size of shared part: 140K\r\n\r\nThe estimate for shared part was built via:\r\n\r\n```console\r\n$ nm --print-size --radix=d mm.so | grep \"__[pP][yY][xX]\" |  grep --invert-match \"2mm\" | grep --invert-match \"__pyx_[kn]\" | grep --invert-match \"string_tab\" >x.txt\r\n\r\n$ awk '{s+=$2} END {print s}' <x.txt\r\n144069\r\n```\r\n\r\nTop-100 size users from shared part consititute 112K of the 140K total:\r\n\r\n```console\r\n$ sort --reverse -k2 x.txt  |head -100 |awk '{s+=$2} END {print s}'\r\n115506\r\n```\r\n\r\nThose top size users can be seen to be indeed mostly related to memoryview and arrays functionality:\r\n\r\n```console\r\n$ sort --reverse -k2 x.txt  |head -100\r\n0000000000147049 0000000000005918 t __Pyx_InitCachedConstants\r\n0000000000106502 0000000000005883 t __pyx_memview_slice\r\n0000000000052264 0000000000005588 t __pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__\r\n0000000000137972 0000000000003847 t __pyx_format_from_typeinfo\r\n0000000000083749 0000000000003668 t __pyx_memoryview_assign_item_from_object\r\n0000000000080347 0000000000003402 t __pyx_memoryview_convert_item_to_object\r\n0000000000117893 0000000000003275 t __pyx_memoryview_fromslice\r\n0000000000128595 0000000000002844 t __pyx_memoryview_copy_contents\r\n0000000000133527 0000000000002681 t __pyx_pf_15View_dot_MemoryView___pyx_unpickle_Enum\r\n0000000000072766 0000000000002188 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__\r\n0000000000065318 0000000000001852 t __pyx_pf___pyx_MemviewEnum___reduce_cython__\r\n0000000000074954 0000000000001850 t __pyx_memoryview_is_slice\r\n0000000000062709 0000000000001796 t __pyx_array_new\r\n0000000000136208 0000000000001764 t __pyx_unpickle_Enum__set_state\r\n0000000000113693 0000000000001683 t __pyx_pybuffer_index\r\n0000000000050602 0000000000001662 t __pyx_array___cinit__\r\n0000000000078336 0000000000001596 t __pyx_memoryview_setitem_slice_assign_scalar\r\n0000000000196427 0000000000001590 t __pyx_memoryview_copy_new_contig\r\n0000000000076804 0000000000001532 t __pyx_memoryview_setitem_slice_assignment\r\n0000000000187799 0000000000001415 t __Pyx_BufFmt_ProcessTypeChunk\r\n0000000000125968 0000000000001395 t __pyx_memoryview_err_dim\r\n0000000000071328 0000000000001387 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__\r\n0000000000189853 0000000000001371 t __Pyx_BufFmt_CheckString\r\n0000000000198017 0000000000001364 t __Pyx_PyInt_As_int\r\n0000000000112385 0000000000001308 t __pyx_memoryview_slice_memviewslice\r\n0000000000127363 0000000000001232 t __pyx_memoryview_err\r\n0000000000070061 0000000000001214 t __pyx_memoryview_get_item_pointer\r\n0000000000057901 0000000000001180 t __pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__\r\n0000000000153567 0000000000001156 t __Pyx_modinit_type_init_code\r\n0000000000087466 0000000000001138 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__\r\n0000000000194153 0000000000001137 t __Pyx_PyObject_to_MemoryviewSlice_dc_unsigned_char__const__\r\n0000000000195290 0000000000001137 t __Pyx_PyObject_to_MemoryviewSlice_dc_unsigned_char\r\n0000000000180507 0000000000001131 t __Pyx_setup_reduce\r\n0000000000091171 0000000000001048 t __pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__\r\n0000000000124931 0000000000001037 t __pyx_memoryview_err_extents\r\n0000000000171722 0000000000001015 t __Pyx_PyUnicode_Equals\r\n0000000000168548 0000000000001011 t __Pyx_ParseOptionalKeywords\r\n0000000000067753 0000000000000998 t __pyx_memoryview___cinit__\r\n0000000000094673 0000000000000991 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__\r\n0000000000090150 0000000000000979 t __pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__\r\n0000000000132550 0000000000000977 t __pyx_pw_15View_dot_MemoryView_1__pyx_unpickle_Enum\r\n0000000000193187 0000000000000966 t __Pyx_ValidateAndInit_memviewslice\r\n0000000000164874 0000000000000962 t __Pyx_PyFunction_FastCallDict\r\n0000000000098980 0000000000000943 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran\r\n0000000000097991 0000000000000943 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy\r\n0000000000093639 0000000000000894 t __pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__\r\n0000000000100696 0000000000000863 t __pyx_memoryview_new\r\n0000000000095706 0000000000000833 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__\r\n0000000000200908 0000000000000798 t __Pyx_PyInt_As_size_t\r\n0000000000200110 0000000000000798 t __Pyx_PyInt_As_off_t\r\n0000000000201817 0000000000000798 t __Pyx_PyInt_As_long\r\n0000000000068751 0000000000000775 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__\r\n0000000000059632 0000000000000754 t __pyx_array_get_memview\r\n0000000000146307 0000000000000742 t __Pyx_InitCachedBuiltins\r\n0000000000089373 0000000000000735 t __pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__\r\n0000000000175846 0000000000000735 t __Pyx__GetException\r\n0000000000124199 0000000000000732 t __pyx_memoryview_copy_data_to_temp\r\n0000000000199381 0000000000000729 t __Pyx_TypeInfoToFormat\r\n0000000000191224 0000000000000723 t __pyx_typeinfo_cmp\r\n0000000000092915 0000000000000682 t __pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__\r\n0000000000097288 0000000000000657 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig\r\n0000000000096585 0000000000000657 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig\r\n0000000000183144 0000000000000639 t __pyx_insert_code_object\r\n0000000000189214 0000000000000639 t __pyx_buffmt_parse_array\r\n0000000000181638 0000000000000638 t __Pyx_ImportType\r\n0000000000173209 0000000000000634 t __Pyx_GetItemInt_Fast\r\n0000000000178319 0000000000000633 t __Pyx_PyInt_AddObjC\r\n0000000000115376 0000000000000606 t __pyx_memslice_transpose\r\n0000000000170201 0000000000000579 t __Pyx_Raise\r\n0000000000171161 0000000000000561 t __Pyx_PyBytes_Equals\r\n0000000000191947 0000000000000552 t __pyx_check_strides\r\n0000000000166880 0000000000000540 t __Pyx_init_memviewslice\r\n0000000000122364 0000000000000534 t __pyx_memoryview_copy_object_from_slice\r\n0000000000176581 0000000000000532 t __Pyx_Import\r\n0000000000088646 0000000000000528 t __pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__\r\n0000000000069553 0000000000000508 t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__\r\n0000000000064505 0000000000000497 t __pyx_MemviewEnum___init__\r\n0000000000060503 0000000000000492 t __pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getattr__\r\n0000000000061048 0000000000000492 t __pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__getitem__\r\n0000000000183783 0000000000000478 t __Pyx_CreateCodeObjectForTraceback\r\n0000000000116052 0000000000000474 t __pyx_memoryviewslice_convert_item_to_object\r\n0000000000143879 0000000000000452 t __pyx_tp_dealloc_memoryview\r\n0000000000121913 0000000000000451 t __pyx_memoryview_copy_object\r\n0000000000192741 0000000000000446 t __pyx_verify_contig\r\n0000000000144573 0000000000000442 t __pyx_tp_clear_memoryview\r\n0000000000121168 0000000000000438 t __pyx_memoryview_get_slice_from_memoryview\r\n0000000000067223 0000000000000436 t __pyx_pf___pyx_MemviewEnum_2__setstate_cython__\r\n0000000000182276 0000000000000436 t __Pyx_CLineForTraceback\r\n0000000000203860 0000000000000433 t __Pyx_PyIndex_AsSsize_t\r\n0000000000116526 0000000000000431 t __pyx_memoryviewslice_assign_item_from_object\r\n0000000000167885 0000000000000419 t __Pyx_XDEC_MEMVIEW\r\n0000000000079932 0000000000000415 t __pyx_memoryview_setitem_indexed\r\n0000000000164462 0000000000000412 t __Pyx_PyFunction_FastCallNoKw\r\n0000000000143470 0000000000000409 t __pyx_tp_new_memoryview\r\n0000000000203457 0000000000000403 t __Pyx_PyNumber_IntOrLong\r\n0000000000240928 0000000000000400 d __pyx_getsets_memoryview\r\n0000000000240288 0000000000000392 d __pyx_type___pyx_MemviewEnum\r\n0000000000242144 0000000000000392 d __pyx_type___pyx_memoryviewslice\r\n0000000000241536 0000000000000392 d __pyx_type___pyx_memoryview\r\n0000000000239776 0000000000000392 d __pyx_type___pyx_array\r\n```\r\n",
            "created_at": "2021-04-08T08:34:45Z",
            "html_url": "https://github.com/cython/cython/issues/2356#issuecomment-815569325",
            "id": 815569325,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2356",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTU2OTMyNQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-08T08:34:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/815569325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
                "events_url": "https://api.github.com/users/navytux/events{/privacy}",
                "followers_url": "https://api.github.com/users/navytux/followers",
                "following_url": "https://api.github.com/users/navytux/following{/other_user}",
                "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/navytux",
                "id": 1794248,
                "login": "navytux",
                "node_id": "MDQ6VXNlcjE3OTQyNDg=",
                "organizations_url": "https://api.github.com/users/navytux/orgs",
                "received_events_url": "https://api.github.com/users/navytux/received_events",
                "repos_url": "https://api.github.com/users/navytux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/navytux"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2356/comments",
    "created_at": "2018-06-15T20:05:19Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-15T20:06:07Z",
            "event": "labeled",
            "id": 1684177964,
            "label": {
                "color": "b60205",
                "name": "unclear"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE2ODQxNzc5NjQ=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1684177964"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-15T20:06:07Z",
            "event": "labeled",
            "id": 1684177969,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE2ODQxNzc5Njk=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1684177969"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-19T23:29:03Z",
            "event": "mentioned",
            "id": 1689906725,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTY4OTkwNjcyNQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1689906725"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-19T23:29:03Z",
            "event": "subscribed",
            "id": 1689906726,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2ODk5MDY3MjY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1689906726"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-20T00:47:26Z",
            "event": "mentioned",
            "id": 1689987934,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTY4OTk4NzkzNA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1689987934"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-20T00:47:26Z",
            "event": "subscribed",
            "id": 1689987935,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2ODk5ODc5MzU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1689987935"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1042804?v=4",
                "events_url": "https://api.github.com/users/mingwandroid/events{/privacy}",
                "followers_url": "https://api.github.com/users/mingwandroid/followers",
                "following_url": "https://api.github.com/users/mingwandroid/following{/other_user}",
                "gists_url": "https://api.github.com/users/mingwandroid/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mingwandroid",
                "id": 1042804,
                "login": "mingwandroid",
                "node_id": "MDQ6VXNlcjEwNDI4MDQ=",
                "organizations_url": "https://api.github.com/users/mingwandroid/orgs",
                "received_events_url": "https://api.github.com/users/mingwandroid/received_events",
                "repos_url": "https://api.github.com/users/mingwandroid/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mingwandroid/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mingwandroid/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mingwandroid"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-23T01:20:00Z",
            "event": "mentioned",
            "id": 1697042115,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTY5NzA0MjExNQ==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1697042115"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1042804?v=4",
                "events_url": "https://api.github.com/users/mingwandroid/events{/privacy}",
                "followers_url": "https://api.github.com/users/mingwandroid/followers",
                "following_url": "https://api.github.com/users/mingwandroid/following{/other_user}",
                "gists_url": "https://api.github.com/users/mingwandroid/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mingwandroid",
                "id": 1042804,
                "login": "mingwandroid",
                "node_id": "MDQ6VXNlcjEwNDI4MDQ=",
                "organizations_url": "https://api.github.com/users/mingwandroid/orgs",
                "received_events_url": "https://api.github.com/users/mingwandroid/received_events",
                "repos_url": "https://api.github.com/users/mingwandroid/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mingwandroid/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mingwandroid/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mingwandroid"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-23T01:20:00Z",
            "event": "subscribed",
            "id": 1697042117,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2OTcwNDIxMTc=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1697042117"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-24T11:57:50Z",
            "event": "unlabeled",
            "id": 1697573667,
            "label": {
                "color": "b60205",
                "name": "unclear"
            },
            "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTY5NzU3MzY2Nw==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1697573667"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-06-24T12:11:23Z",
            "event": "labeled",
            "id": 1697577328,
            "label": {
                "color": "0e8a16",
                "name": "help wanted"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE2OTc1NzczMjg=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1697577328"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-08T08:34:46Z",
            "event": "mentioned",
            "id": 4567208014,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDU2NzIwODAxNA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4567208014"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-08T08:34:46Z",
            "event": "subscribed",
            "id": 4567208017,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1NjcyMDgwMTc=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4567208017"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2356/events",
    "html_url": "https://github.com/cython/cython/issues/2356",
    "id": 332898688,
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "0e8a16",
            "default": true,
            "description": null,
            "id": 414800879,
            "name": "help wanted",
            "node_id": "MDU6TGFiZWw0MTQ4MDA4Nzk=",
            "url": "https://api.github.com/repos/cython/cython/labels/help%20wanted"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2356/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzMzI4OTg2ODg=",
    "number": 2356,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Use a shared library for shared code",
    "updated_at": "2021-04-08T08:34:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2356",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder"
    }
}