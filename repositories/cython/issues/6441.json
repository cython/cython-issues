{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nThe length of a ctuple is known at compile time, however Cython doesn't optimize len() on a ctuple and instead converts it to a python tuple at runtime. This optimization could also be made for constant python tuples.\r\n\r\nExample:\r\n\r\n```cython\r\ncdef int test((int, int, int) v):\r\n    return len(v)\r\n```\r\n\r\nExample 2:\r\n\r\n```cython\r\ncdef int test(a, b, c):\r\n    return len((a, b, c))\r\n```\r\n\r\nArbitrary access of an element of a ctuple results in it being converted to a python tuple first. A switch statement of all indicies could be used instead.\r\n\r\nExample:\r\n\r\n```cython\r\ncdef int test((int, int, int) v, int i):\r\n    return v[i]\r\n```\r\n\r\n### Describe the solution you'd like.\r\n\r\n_No response_\r\n\r\n### Describe alternatives you've considered.\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I understand that item access should be fast, but len()? What is the use case for calling len() on a ctuple?\n",
            "created_at": "2024-10-22T04:45:57Z",
            "html_url": "https://github.com/cython/cython/issues/6441#issuecomment-2428245055",
            "id": 2428245055,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6441",
            "node_id": "IC_kwDOABDGAc6QvBQ_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2428245055/reactions"
            },
            "updated_at": "2024-10-22T04:45:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2428245055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Presumably things like fused types, where there are a few different possible lengths to deal with so it can't be hard coded?\r\n\r\nArbitrary item access is probably trickier in general because \"ctuple with all items of the same type\" really isn't a typical use case.",
            "created_at": "2024-10-22T07:14:55Z",
            "html_url": "https://github.com/cython/cython/issues/6441#issuecomment-2428442987",
            "id": 2428442987,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6441",
            "node_id": "IC_kwDOABDGAc6Qvxlr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2428442987/reactions"
            },
            "updated_at": "2024-10-22T07:14:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2428442987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I understand that item access should be fast, but len()? What is the use case for calling len() on a ctuple?\r\n\r\nI use a macro to get a random element of a constant tuple. Randint requires the number of elements and thus len().",
            "created_at": "2024-10-22T07:28:52Z",
            "html_url": "https://github.com/cython/cython/issues/6441#issuecomment-2428472520",
            "id": 2428472520,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6441",
            "node_id": "IC_kwDOABDGAc6Qv4zI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2428472520/reactions"
            },
            "updated_at": "2024-10-22T07:28:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2428472520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/138492675?v=4",
                "events_url": "https://api.github.com/users/bbb23exposed/events{/privacy}",
                "followers_url": "https://api.github.com/users/bbb23exposed/followers",
                "following_url": "https://api.github.com/users/bbb23exposed/following{/other_user}",
                "gists_url": "https://api.github.com/users/bbb23exposed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bbb23exposed",
                "id": 138492675,
                "login": "bbb23exposed",
                "node_id": "U_kgDOCEE7Aw",
                "organizations_url": "https://api.github.com/users/bbb23exposed/orgs",
                "received_events_url": "https://api.github.com/users/bbb23exposed/received_events",
                "repos_url": "https://api.github.com/users/bbb23exposed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bbb23exposed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bbb23exposed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bbb23exposed",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6441/comments",
    "created_at": "2024-10-21T22:54:08Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/138492675?v=4",
                "events_url": "https://api.github.com/users/bbb23exposed/events{/privacy}",
                "followers_url": "https://api.github.com/users/bbb23exposed/followers",
                "following_url": "https://api.github.com/users/bbb23exposed/following{/other_user}",
                "gists_url": "https://api.github.com/users/bbb23exposed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bbb23exposed",
                "id": 138492675,
                "login": "bbb23exposed",
                "node_id": "U_kgDOCEE7Aw",
                "organizations_url": "https://api.github.com/users/bbb23exposed/orgs",
                "received_events_url": "https://api.github.com/users/bbb23exposed/received_events",
                "repos_url": "https://api.github.com/users/bbb23exposed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bbb23exposed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bbb23exposed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bbb23exposed",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-10-21T22:54:48Z",
            "event": "renamed",
            "id": 14772405649,
            "node_id": "RTE_lADOABDGAc6bM0xszwAAAANwgQWR",
            "performed_via_github_app": null,
            "rename": {
                "from": "[ENH] Optimize arbitrary accesses and len() on ctuples",
                "to": "[ENH] Optimize arbitrary accesses and len() on ctuples and python tuple constants"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/14772405649"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6129707?v=4",
                "events_url": "https://api.github.com/users/soraros/events{/privacy}",
                "followers_url": "https://api.github.com/users/soraros/followers",
                "following_url": "https://api.github.com/users/soraros/following{/other_user}",
                "gists_url": "https://api.github.com/users/soraros/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/soraros",
                "id": 6129707,
                "login": "soraros",
                "node_id": "MDQ6VXNlcjYxMjk3MDc=",
                "organizations_url": "https://api.github.com/users/soraros/orgs",
                "received_events_url": "https://api.github.com/users/soraros/received_events",
                "repos_url": "https://api.github.com/users/soraros/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/soraros/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soraros/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/soraros",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-10-22T02:13:59Z",
            "event": "unsubscribed",
            "id": 14773973457,
            "node_id": "UE_lADOABDGAc6bM0xszwAAAANwmPHR",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14773973457"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6441/events",
    "html_url": "https://github.com/cython/cython/issues/6441",
    "id": 2603830380,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6441/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6bM0xs",
    "number": 6441,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6441/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6441/timeline",
    "title": "[ENH] Optimize arbitrary accesses and len() on ctuples and python tuple constants",
    "updated_at": "2024-10-22T07:37:21Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6441",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/138492675?v=4",
        "events_url": "https://api.github.com/users/bbb23exposed/events{/privacy}",
        "followers_url": "https://api.github.com/users/bbb23exposed/followers",
        "following_url": "https://api.github.com/users/bbb23exposed/following{/other_user}",
        "gists_url": "https://api.github.com/users/bbb23exposed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bbb23exposed",
        "id": 138492675,
        "login": "bbb23exposed",
        "node_id": "U_kgDOCEE7Aw",
        "organizations_url": "https://api.github.com/users/bbb23exposed/orgs",
        "received_events_url": "https://api.github.com/users/bbb23exposed/received_events",
        "repos_url": "https://api.github.com/users/bbb23exposed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bbb23exposed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bbb23exposed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bbb23exposed",
        "user_view_type": "public"
    }
}