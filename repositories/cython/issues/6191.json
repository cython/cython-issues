{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Describe your issue\n\nhttps://github.com/cython/cython/pull/6178 proposes adjusting `__Pyx_GetItemInt_List_Fast` to ignore `boundscheck` for free-threading Python and use `PyList_GetItemRef` (which does bounds-checking, but has the advantage that the reference counting is thread-safe).\r\n\r\nThat's probably fine as a short-term solution, but it seems reasonable that users might want to override this themselves for better performance.\r\n\r\nThere's a few options:\r\n* We interpret `boundscheck(False)` to mean \"also don't bother with threadsafe reference counting\". That isn't entirely consistent with its meaning since one could easy write something where multiple threads swapped out items from a constant-length list. In this case `boundscheck` should be unnecessary but threadsafe reference counting wouldn't be.\r\n* We ignore `boundscheck(False)` for `list` (and maybe other things) on free-threaded Python (what the PR proposes). It looks like we already ignore it for PyPy here too so it's consistent with the idea what it's an optimization hint and not an order. `boundscheck(False)` would continue to work correctly on memoryviews etc (which is really it's main use).\r\n* we add an extra `threadsafe_reference_counting(False)` directive that gives users the option to go back to the \"fast path\" even on the free-threading build with the understanding that it's their fault when they get it wrong. I think both `boundscheck==False and threadsafe_reference_counting==False` would be needed for the fast path on the free-threading build, but `threadsafe_reference_counting` could be completely ignored on other builds.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Another question, somewhat related to this, is what assumptions should be made under `CYTHON_ASSUME_SAFE_MACROS`? Is it okay to assume that enabling `CYTHON_ASSUME_SAFE_MACROS` means that macros are okay to be used under the free-threading build as well?",
            "created_at": "2024-05-13T14:11:18Z",
            "html_url": "https://github.com/cython/cython/issues/6191#issuecomment-2107682537",
            "id": 2107682537,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6191",
            "node_id": "IC_kwDOABDGAc59oK7p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2107682537/reactions"
            },
            "updated_at": "2024-05-13T14:11:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2107682537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20306270?v=4",
                "events_url": "https://api.github.com/users/lysnikolaou/events{/privacy}",
                "followers_url": "https://api.github.com/users/lysnikolaou/followers",
                "following_url": "https://api.github.com/users/lysnikolaou/following{/other_user}",
                "gists_url": "https://api.github.com/users/lysnikolaou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lysnikolaou",
                "id": 20306270,
                "login": "lysnikolaou",
                "node_id": "MDQ6VXNlcjIwMzA2Mjcw",
                "organizations_url": "https://api.github.com/users/lysnikolaou/orgs",
                "received_events_url": "https://api.github.com/users/lysnikolaou/received_events",
                "repos_url": "https://api.github.com/users/lysnikolaou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lysnikolaou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lysnikolaou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lysnikolaou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> it's an optimization hint and not an order\r\n\r\nThis. The directive allows us to avoid bounds checks where possible. If we need it for correctness, then we can't avoid it and that's it.",
            "created_at": "2024-05-13T15:45:41Z",
            "html_url": "https://github.com/cython/cython/issues/6191#issuecomment-2108066985",
            "id": 2108066985,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6191",
            "node_id": "IC_kwDOABDGAc59poyp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2108066985/reactions"
            },
            "updated_at": "2024-05-13T15:45:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2108066985",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Another question, somewhat related to this, is what assumptions should be made under `CYTHON_ASSUME_SAFE_MACROS`? Is it okay to assume that enabling `CYTHON_ASSUME_SAFE_MACROS` means that macros are okay to be used under the free-threading build as well?\r\n\r\nI think again it's something that we can choose to accept or ignore depending on how we feel (and it doesn't have to be consistent).\r\n\r\nThey're a little different in intent though - the macros aren't really intended to be used by normal users to enable/disable optimizations. They're available so people with an unsupported implementation of Python can attempt to get it working.",
            "created_at": "2024-05-13T17:31:41Z",
            "html_url": "https://github.com/cython/cython/issues/6191#issuecomment-2108357820",
            "id": 2108357820,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6191",
            "node_id": "IC_kwDOABDGAc59qvy8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2108357820/reactions"
            },
            "updated_at": "2024-05-13T17:31:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2108357820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> what assumptions should be made under `CYTHON_ASSUME_SAFE_MACROS`?\r\n\r\nIt means that (certain) macros cannot fail, specifically macros like `Py*_GET_ITEM()` and some others that use simple inlined code. There's a separate macro for `Py*_GET_SIZE()` as well since that tends to be even more safe.\r\n\r\n\r\n> the macros aren't really intended to be used by normal users to enable/disable optimizations. They're available so people with an unsupported implementation of Python can attempt to get it working.\r\n\r\nBoth, I'd say. Sometimes we find bugs, sometimes implementations evolve, and then it's helpful for users to be able to disable these macro options to keep their code working.\r\n\r\n\r\n> it's something that we can choose to accept or ignore depending on how we feel (and it doesn't have to be consistent).\r\n\r\nPretty much at that level, I agree. It's about allowing optimisations, not enforcing behaviour.",
            "created_at": "2024-05-13T18:02:53Z",
            "html_url": "https://github.com/cython/cython/issues/6191#issuecomment-2108469701",
            "id": 2108469701,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6191",
            "node_id": "IC_kwDOABDGAc59rLHF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2108469701/reactions"
            },
            "updated_at": "2024-05-13T18:02:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2108469701",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6191/comments",
    "created_at": "2024-05-09T16:48:09Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-05-09T16:48:09Z",
            "event": "labeled",
            "id": 12759676345,
            "label": {
                "color": "A37CC3",
                "name": "nogil CPython"
            },
            "node_id": "LE_lADOABDGAc6IYT20zwAAAAL4iTW5",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/12759676345"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6191/events",
    "html_url": "https://github.com/cython/cython/issues/6191",
    "id": 2288074164,
    "labels": [
        {
            "color": "A37CC3",
            "default": false,
            "description": "",
            "id": 6871764375,
            "name": "nogil CPython",
            "node_id": "LA_kwDOABDGAc8AAAABmZbNlw",
            "url": "https://api.github.com/repos/cython/cython/labels/nogil%20CPython"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6191/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6IYT20",
    "number": 6191,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6191/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6191/timeline",
    "title": "Handling of Python element access in free-threading Python",
    "updated_at": "2024-05-13T18:02:53Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6191",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}