{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "A common use case when extending Numba is to use an existing Cython extension module to provide access points to the compiled functions contained within. For Numba to do this the `__pyx_capi__` attribute must be queried. Examples and discussion here: https://github.com/numba/numba/issues/3086 and API guide here http://numba.pydata.org/numba-doc/latest/extending/high-level.html#importing-cython-functions.\r\n\r\nRecently work has started on `numba-scipy` to add SciPy support to Numba, this PR https://github.com/numba/numba-scipy/pull/12 notes that `__pyx_capi__` is a Cython internal.\r\n\r\nThe crux of all this is I think a few questions:\r\n\r\n1. Is `__pyx_capi__` sufficiently ingrained in Cython that it can be relied upon being present indefinitely.\r\n2. Is `__pyx_capi__` truly internal? Or are there cases in practice where users are parsing/using it ([pythran does already?!](https://pythran.readthedocs.io/en/latest/examples/Third%20Party%20Libraries.html))?\r\n3. Is the form of `__pyx_capi__` stable/consistent.\r\n\r\nThanks in advance for your help!\r\n\r\n\r\n\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "+1 for all the questions that @stuartarchibald asked. \r\n\r\nWe hit this issue recently because we wanted to have a trampoline module (with an old name/path) to \"re-export\" all Cython symbols from another (new) module to keep a smooth transition to the latter, and it seems a plain `cimport` in the trampoline is not enough, and we need to hack at the `__pyx_capi__` level. ",
            "created_at": "2024-11-05T03:58:53Z",
            "html_url": "https://github.com/cython/cython/issues/3077#issuecomment-2456181198",
            "id": 2456181198,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3077",
            "node_id": "IC_kwDOABDGAc6SZlnO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2456181198/reactions"
            },
            "updated_at": "2024-11-05T03:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2456181198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
                "events_url": "https://api.github.com/users/leofang/events{/privacy}",
                "followers_url": "https://api.github.com/users/leofang/followers",
                "following_url": "https://api.github.com/users/leofang/following{/other_user}",
                "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leofang",
                "id": 5534781,
                "login": "leofang",
                "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
                "organizations_url": "https://api.github.com/users/leofang/orgs",
                "received_events_url": "https://api.github.com/users/leofang/received_events",
                "repos_url": "https://api.github.com/users/leofang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leofang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm reluctant to say it's completely fine to use it. However, we are aware that people are using it. And we've also found in the past that it's really difficult to change it because it's really supposed to match between Cython versions.\r\n\r\nSo it's likely to be stable, but I wouldn't absolutely promise it.",
            "created_at": "2024-11-06T18:00:44Z",
            "html_url": "https://github.com/cython/cython/issues/3077#issuecomment-2460438872",
            "id": 2460438872,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3077",
            "node_id": "IC_kwDOABDGAc6Sp1FY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2460438872/reactions"
            },
            "updated_at": "2024-11-06T18:00:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2460438872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So it's likely to be stable, but I wouldn't absolutely promise it.\r\n\r\nI think that it is already used so we should not change it without proper deprecation & replacement in any case. Also it seems to be important for the clients. So I think it is better to document it. I created an issue for that - #6484.\r\n\r\nFixing #6484 should also close this issue because all questions should be clear from the docs.",
            "created_at": "2024-11-06T19:46:47Z",
            "html_url": "https://github.com/cython/cython/issues/3077#issuecomment-2460637532",
            "id": 2460637532,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3077",
            "node_id": "IC_kwDOABDGAc6Sqllc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2460637532/reactions"
            },
            "updated_at": "2024-11-06T19:46:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2460637532",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I am thinking aloud. As an alternative to providing `__pyx_capi__` as part of API does it make sense to provide function (eg. `cython.cimport()`) which dynamicaly cimports functions similar to numbas?\r\n\r\nhttps://github.com/numba/numba/blob/0f363d1b2dd19f2aa1a8cec5f0a99c3dd95512f8/numba/_helperlib.c#L561",
            "created_at": "2024-11-06T23:10:53Z",
            "html_url": "https://github.com/cython/cython/issues/3077#issuecomment-2460977259",
            "id": 2460977259,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3077",
            "node_id": "IC_kwDOABDGAc6Sr4hr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2460977259/reactions"
            },
            "updated_at": "2024-11-06T23:12:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2460977259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As an alternative to providing `__pyx_capi__` as part of API does it make sense to provide function (eg. cython.cimport()) which dynamicaly cimports functions similar to numbas?\r\n\r\nI think it'd necessarily have to be visible through a Python interface (otherwise people wouldn't be able to access it easily).\r\n\r\nThat limits how we chose to return C function pointers back. It'd either be a `PyCapsule` (in which case it's very similar to `__pyx_capi__`), or a Python int, or maybe a ctypes function pointer?",
            "created_at": "2024-11-07T18:06:46Z",
            "html_url": "https://github.com/cython/cython/issues/3077#issuecomment-2462907698",
            "id": 2462907698,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3077",
            "node_id": "IC_kwDOABDGAc6SzP0y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2462907698/reactions"
            },
            "updated_at": "2024-11-07T18:06:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2462907698",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for taking a look at this issue, I'm glad that `__pyx_capi__` is going to be considered stable and documented through #6484. Numba has been relying on it for quite a while!\r\n\r\nTo the discussion... from Numba's point of view, the JIT compiler part just needs the address of a symbol and a prototype for calling it. The code linked above in `_helperlib.c` is simply there to hide the internal mechanics from the user and expose the address from the retrieved `PyCapsule`. Making an interface Python accessible would be helpful, Numba's PIXIE project is doing something similar, it exposes everything about the compiled C-extension through a module level dictionary in the extension itself. As to returning function pointers, I don't know how easy it is to handle `PyCapsule`s from Python itself, the situation may have changed since I opened the issue/did the original work, but at the time I seem to recall there was very little available to handle them.",
            "created_at": "2024-11-07T22:33:38Z",
            "html_url": "https://github.com/cython/cython/issues/3077#issuecomment-2463360784",
            "id": 2463360784,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3077",
            "node_id": "IC_kwDOABDGAc6S0-cQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2463360784/reactions"
            },
            "updated_at": "2024-11-07T22:33:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2463360784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/907717?v=4",
                "events_url": "https://api.github.com/users/stuartarchibald/events{/privacy}",
                "followers_url": "https://api.github.com/users/stuartarchibald/followers",
                "following_url": "https://api.github.com/users/stuartarchibald/following{/other_user}",
                "gists_url": "https://api.github.com/users/stuartarchibald/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stuartarchibald",
                "id": 907717,
                "login": "stuartarchibald",
                "node_id": "MDQ6VXNlcjkwNzcxNw==",
                "organizations_url": "https://api.github.com/users/stuartarchibald/orgs",
                "received_events_url": "https://api.github.com/users/stuartarchibald/received_events",
                "repos_url": "https://api.github.com/users/stuartarchibald/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stuartarchibald/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stuartarchibald/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stuartarchibald",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I always considered it an implementation detail and I'm not sure whether we should document it publicly. I understand that some projects have come to use it. It's certainly unchanged for a very long time, but only in the sense that no-one cared to actively change anything specifically for it. Changes in the type system or in the C code generation of types can have an impact that we probably won't even notice.\n\nI'm reluctant to make guarantees about the exact signature/ID strings that we use for the capsules, for example. To a certain extent, they expose internals that I would like to be able to change rather freely. There may not be a high chance of them changing any time soon, but considering that a guarantee seems far fetched.\n",
            "created_at": "2024-11-08T07:58:29Z",
            "html_url": "https://github.com/cython/cython/issues/3077#issuecomment-2463991725",
            "id": 2463991725,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3077",
            "node_id": "IC_kwDOABDGAc6S3Yet",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2463991725/reactions"
            },
            "updated_at": "2024-11-08T07:58:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2463991725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm reluctant to make guarantees about the exact signature/ID strings that we use for the capsules, for example. To a certain extent, they expose internals that I would like to be able to change rather freely. There may not be a high chance of them changing any time soon, but considering that a guarantee seems far fetched.\r\n\r\nWe've failed to change them before because changing them would mean that you couldn't cimport a module compiled with a different Cython version.\r\n\r\nThere was an issue (that I can't find right now) where Pandas/scipy/similar wanted to change their function arguments from `int` to `const int` (which is considered identical from a C point-of-view) but they couldn't do it because it changed the `__pyx_capi__` signature, which broke cimports for anyone using the public pxd file.\r\n\r\nWhich to me suggests we're pretty limited in how we can change this ourselves.\r\n\r\n-------------------------------------\r\n\r\nSo while I don't think this mechanism is likely to change soon, I'm not sure we should formally document it. I think we should just tolerate and be a bit considerate of people using it.",
            "created_at": "2024-11-08T08:42:13Z",
            "html_url": "https://github.com/cython/cython/issues/3077#issuecomment-2464137442",
            "id": 2464137442,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3077",
            "node_id": "IC_kwDOABDGAc6S38Di",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2464137442/reactions"
            },
            "updated_at": "2024-11-08T08:42:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2464137442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3077/comments",
    "created_at": "2019-08-13T15:13:48Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/907717?v=4",
                "events_url": "https://api.github.com/users/stuartarchibald/events{/privacy}",
                "followers_url": "https://api.github.com/users/stuartarchibald/followers",
                "following_url": "https://api.github.com/users/stuartarchibald/following{/other_user}",
                "gists_url": "https://api.github.com/users/stuartarchibald/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stuartarchibald",
                "id": 907717,
                "login": "stuartarchibald",
                "node_id": "MDQ6VXNlcjkwNzcxNw==",
                "organizations_url": "https://api.github.com/users/stuartarchibald/orgs",
                "received_events_url": "https://api.github.com/users/stuartarchibald/received_events",
                "repos_url": "https://api.github.com/users/stuartarchibald/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stuartarchibald/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stuartarchibald/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stuartarchibald",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-05T03:58:54Z",
            "event": "mentioned",
            "id": 15113418424,
            "node_id": "MEE_lADOABDGAc4cn36DzwAAAAOE1Ha4",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15113418424"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/907717?v=4",
                "events_url": "https://api.github.com/users/stuartarchibald/events{/privacy}",
                "followers_url": "https://api.github.com/users/stuartarchibald/followers",
                "following_url": "https://api.github.com/users/stuartarchibald/following{/other_user}",
                "gists_url": "https://api.github.com/users/stuartarchibald/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stuartarchibald",
                "id": 907717,
                "login": "stuartarchibald",
                "node_id": "MDQ6VXNlcjkwNzcxNw==",
                "organizations_url": "https://api.github.com/users/stuartarchibald/orgs",
                "received_events_url": "https://api.github.com/users/stuartarchibald/received_events",
                "repos_url": "https://api.github.com/users/stuartarchibald/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stuartarchibald/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stuartarchibald/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stuartarchibald",
                "user_view_type": "public"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-11-05T03:58:54Z",
            "event": "subscribed",
            "id": 15113418428,
            "node_id": "SE_lADOABDGAc4cn36DzwAAAAOE1Ha8",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/15113418428"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3077/events",
    "html_url": "https://github.com/cython/cython/issues/3077",
    "id": 480214659,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3077/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODAyMTQ2NTk=",
    "number": 3077,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/cython/cython/issues/3077/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/3077/timeline",
    "title": "Questions about `__pyx_capi__` use/stability.",
    "updated_at": "2024-11-08T08:42:14Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3077",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/907717?v=4",
        "events_url": "https://api.github.com/users/stuartarchibald/events{/privacy}",
        "followers_url": "https://api.github.com/users/stuartarchibald/followers",
        "following_url": "https://api.github.com/users/stuartarchibald/following{/other_user}",
        "gists_url": "https://api.github.com/users/stuartarchibald/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/stuartarchibald",
        "id": 907717,
        "login": "stuartarchibald",
        "node_id": "MDQ6VXNlcjkwNzcxNw==",
        "organizations_url": "https://api.github.com/users/stuartarchibald/orgs",
        "received_events_url": "https://api.github.com/users/stuartarchibald/received_events",
        "repos_url": "https://api.github.com/users/stuartarchibald/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/stuartarchibald/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stuartarchibald/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/stuartarchibald",
        "user_view_type": "public"
    }
}