{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The following is a standalone example of a problem I've run into trying to accelerate some code:\r\n\r\ngiven allExt.py (takes a set of words and checks if 3rd letter in each is a vowel):\r\n```\r\nclass a3v(object):\r\n    def __init__(self, inset):\r\n        self.myStrSet = inset   # set input word list as an attribute on  class instance\r\n\r\n    def all3Vowels(self):     # test if 3rd letter of each word is a vowel\r\n        vndx = 2                    # local variable for 3rd letter index\r\n        inStrSet = self.myStrSet    # local variable for class instance word list\r\n        if all(\r\n            ltr in (\"a\", \"e\", \"i\", \"o\", \"u\")\r\n            for ltr in (w[vndx] for w in inStrSet)\r\n        ):\r\n            return True\r\n        return False\r\n```\r\nand tst.py:\r\n```\r\n#!/usr/local/bin/python3\r\nimport allExt\r\n\r\na3vL = allExt.a3v([\"the\", \"bright\", \"flower\"])\r\n\r\nif a3vL.all3Vowels():\r\n   print('yes')\r\nelse:\r\n   print('no')\r\n```\r\nThe code runs without issue, and fits with examples I have found in the cython docs.  However, when augmented with allExt.pxd: \r\n```\r\nimport cython\r\n\r\ncdef class a3v:\r\n     cdef public list myStrSet\r\n\r\n     @cython.locals(vndx=int, inStrSet=list, ltr=str)\r\n     cpdef bint all3Vowels(self)\r\n```\r\nUpon compiling as shown I get:\r\n```\r\nrob@nova-370:01 14:45:55 atmNdx $ cythonize -3 -f -i allExt.py allExt.pxd\r\n[1/1] Cythonizing /Users/rob/sync/rgithub/cython/atmNdx/allExt.py\r\nwarning: allExt.py:12:26: local variable 'vndx' referenced before assignment\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    def all3Vowels(self):\r\n        vndx = 2\r\n        inStrSet = self.myStrSet\r\n        if all(\r\n            ltr in (\"a\", \"e\", \"i\", \"o\", \"u\")\r\n            for ltr in (w[vndx] for w in inStrSet)\r\n                                        ^\r\n------------------------------------------------------------\r\n\r\nallExt.py:12:41: local variable 'inStrSet' referenced before assignment\r\nTraceback (most recent call last):\r\n```\r\nOTOH, the equivalent (?) pyx version allExt.pyx:\r\n```\r\nclass a3v(object):\r\n    def __init__(self, inset):\r\n        self.myStrSet = inset\r\n\r\n    def all3Vowels(self):\r\n        cdef int vndx = 2\r\n        cdef list inStrSet = self.myStrSet\r\n        cdef str ltr\r\n        if all(\r\n            ltr in (\"a\", \"e\", \"i\", \"o\", \"u\")\r\n            for ltr in (w[vndx] for w in inStrSet)\r\n        ):\r\n            return True\r\n        return False\r\n```\r\ncompiles and runs without issue.\r\n\r\nHave I missed something in the docs or some other simple issue?\r\nThank you.\r\n",
    "closed_at": "2021-05-11T21:04:22Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. There seems to be something wrong with the nested generator expressions here and the way the type information is applied from the decorator (or maybe _when_ it is applied).\r\n\r\nYou didn't mention which Cython version you were using, so I guess it's a recent release. Could you try the latest master branch, and also PR #3323?\r\n\r\nBTW, you don't need to declare `inStrSet` here because its type should get inferred from the assignment, since the attribute is typed.",
            "created_at": "2020-04-03T07:45:14Z",
            "html_url": "https://github.com/cython/cython/issues/3477#issuecomment-608283260",
            "id": 608283260,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3477",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwODI4MzI2MA==",
            "performed_via_github_app": null,
            "updated_at": "2020-04-03T07:45:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/608283260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the follow up.\nThis was with Cython-0.29.16, but I have now reproduced with both 3.0a0\nmaster and https://github.com/da-woods/cython.git (#3323).\n\n\nOn Fri, Apr 3, 2020 at 8:45 AM Stefan Behnel <notifications@github.com>\nwrote:\n\n> Thanks for the report. There seems to be something wrong with the nested\n> generator expressions here and the way the type information is applied from\n> the decorator (or maybe *when* it is applied).\n>\n> You didn't mention which Cython version you were using, so I guess it's a\n> recent release. Could you try the latest master branch, and also PR #3323\n> <https://github.com/cython/cython/pull/3323>?\n>\n> BTW, you don't need to declare inStrSet here because its type should get\n> inferred from the assignment, since the attribute is typed.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/3477#issuecomment-608283260>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAZW3QDL4WTTE5FOZWIMHALRKWHZRANCNFSM4LY7IUIA>\n> .\n>\n",
            "created_at": "2020-04-03T16:49:51Z",
            "html_url": "https://github.com/cython/cython/issues/3477#issuecomment-608547262",
            "id": 608547262,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3477",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwODU0NzI2Mg==",
            "performed_via_github_app": null,
            "updated_at": "2020-04-03T16:49:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/608547262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3370432?v=4",
                "events_url": "https://api.github.com/users/rob-miller/events{/privacy}",
                "followers_url": "https://api.github.com/users/rob-miller/followers",
                "following_url": "https://api.github.com/users/rob-miller/following{/other_user}",
                "gists_url": "https://api.github.com/users/rob-miller/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rob-miller",
                "id": 3370432,
                "login": "rob-miller",
                "node_id": "MDQ6VXNlcjMzNzA0MzI=",
                "organizations_url": "https://api.github.com/users/rob-miller/orgs",
                "received_events_url": "https://api.github.com/users/rob-miller/received_events",
                "repos_url": "https://api.github.com/users/rob-miller/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rob-miller/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rob-miller/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rob-miller"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have spend several hours investigating the bug and here are my findings.\r\n\r\n## Bug details\r\nThe issue can be easilly reproduced by any construct using `for ... in` (maybe except list and dict comprehension) when .pxd file is used:\r\n```python\r\n$ cat test.py\r\ndef foo():\r\n    a = (x for x in range(5))\r\nfoo()\r\n\r\n$ cat test.pxd\r\ncdef foo()\r\n```\r\nbut also `all()`, `any()`, etc... are causing crashing cython. The example above is crashing with following exception:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/matus/dev/cython39/bin/cythonize\", line 33, in <module>\r\n    sys.exit(load_entry_point('Cython', 'console_scripts', 'cythonize')())\r\n  File \"/home/matus/dev/cython/Cython/Build/Cythonize.py\", line 224, in main\r\n    cython_compile(path, options)\r\n  File \"/home/matus/dev/cython/Cython/Build/Cythonize.py\", line 68, in cython_compile\r\n    ext_modules = cythonize(\r\n  File \"/home/matus/dev/cython/Cython/Build/Dependencies.py\", line 1115, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/matus/dev/cython/Cython/Build/Dependencies.py\", line 1261, in cythonize_one\r\n    result = compile_single(pyx_file, options, full_module_name=full_module_name)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Main.py\", line 575, in compile_single\r\n    return run_pipeline(source, options, full_module_name)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Main.py\", line 503, in run_pipeline\r\n    err, enddata = Pipeline.run_pipeline(pipeline, source)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Pipeline.py\", line 370, in run_pipeline\r\n    data = run(phase, data)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Pipeline.py\", line 350, in run\r\n    return phase(data)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Pipeline.py\", line 52, in generate_pyx_code_stage\r\n    module_node.process_implementation(options, result)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/ModuleNode.py\", line 171, in process_implementation\r\n    self.generate_c_code(env, options, result)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/ModuleNode.py\", line 451, in generate_c_code\r\n    self.body.generate_function_definitions(env, code)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Nodes.py\", line 400, in generate_function_definitions\r\n    stat.generate_function_definitions(env, code)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Nodes.py\", line 1839, in generate_function_definitions\r\n    self.generate_lambda_definitions(lenv, code)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Nodes.py\", line 374, in generate_lambda_definitions\r\n    node.generate_function_definitions(env, code)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Nodes.py\", line 4432, in generate_function_definitions\r\n    super(GeneratorDefNode, self).generate_function_definitions(env, code)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Nodes.py\", line 3341, in generate_function_definitions\r\n    FuncDefNode.generate_function_definitions(self, env, code)\r\n  File \"/home/matus/dev/cython/Cython/Compiler/Nodes.py\", line 1886, in generate_function_definitions\r\n    if self.needs_closure:\r\nAttributeError: 'ClosureScope' object has no attribute 'scope_class'\r\n```\r\n\r\n## The cause of the bug\r\n\r\nI have compared the version above with following .pyx version:\r\n```python\r\ncdef foo():\r\n    a = (x for x in range(5))\r\n\r\nfoo()\r\n```\r\n\r\nIt seems that the problem is in the following part:\r\n```python\r\n> /home/matus/dev/cython/Cython/Compiler/ParseTreeTransforms.py(2879)visit_FuncDefNode()\r\n-> if node.needs_closure or self.path:\r\n(Pdb) l\r\n2874        def visit_FuncDefNode(self, node):\r\n2875            if self.in_lambda:\r\n2876                self.visitchildren(node)\r\n2877                return node\r\n2878            breakpoint()\r\n2879 ->         if node.needs_closure or self.path:\r\n2880                self.create_class_from_scope(node, self.module_scope)\r\n2881                self.path.append(node)\r\n2882                self.visitchildren(node)\r\n2883                self.path.pop()\r\n2884            return node\r\n```\r\nIn working .pyx case node.needs_closure is evaluated as `True` and the block is executed. In broken .py case it is evaluated as `False`, the block is not executed and crash is followed. I did experiment and during breakpoint I have executed following:\r\n```python\r\n(Pdb) l\r\n2874        def visit_FuncDefNode(self, node):\r\n2875            if self.in_lambda:\r\n2876                self.visitchildren(node)\r\n2877                return node\r\n2878            breakpoint()\r\n2879 ->         if node.needs_closure or self.path:\r\n2880                self.create_class_from_scope(node, self.module_scope)\r\n2881                self.path.append(node)\r\n2882                self.visitchildren(node)\r\n2883                self.path.pop()\r\n2884            return node\r\n(Pdb) p node.needs_closure\r\nFalse\r\n(Pdb) node.needs_closure = True\r\n(Pdb) c\r\n```\r\nAfter that the build was finished successfully. Hence, from that point, I focused on investigating `needs_closure`.\r\n\r\n## needs_closure details\r\n\r\nAnd I have found out the following:\r\n**1. case with .pyx file which is not crashing:**\r\n```python\r\n> /home/matus/dev/cython/Cython/Compiler/ParseTreeTransforms.py(2678)visit_FuncDefNode()\r\n-> print('3', self.needs_closure)\r\n(Pdb) l\r\n2673        def visit_FuncDefNode(self, node):\r\n2674            print('2', False)\r\n2675            self.needs_closure = False\r\n2676            self.visitchildren(node)\r\n2677            breakpoint()\r\n2678 ->         print('3', self.needs_closure)\r\n2679            print('3', True)\r\n2680            node.needs_closure = self.needs_closure\r\n2681            self.needs_closure = True\r\n2682\r\n2683            collector = YieldNodeCollector()\r\n(Pdb) p node\r\n<Cython.Compiler.Nodes.DefNode object at 0x7f53cf6a0490>\r\n(Pdb) p self\r\n<Cython.Compiler.ParseTreeTransforms.MarkClosureVisitor object at 0x7f53c8c0f400>\r\n(Pdb) c\r\n3 False\r\n3 True\r\n5 True\r\n5 True\r\n> /home/matus/dev/cython/Cython/Compiler/ParseTreeTransforms.py(2724)visit_CFuncDefNode()\r\n-> print('4', self.needs_closure)\r\n(Pdb) p node\r\n<Cython.Compiler.Nodes.CFuncDefNode object at 0x7f53cf5e4310>                   # Node object Address is 0x7f53cf5e4310\r\n(Pdb) p self\r\n<Cython.Compiler.ParseTreeTransforms.MarkClosureVisitor object at 0x7f53c8c0f400>\r\n(Pdb) c\r\n4 True\r\n4 True\r\n> /home/matus/dev/cython/Cython/Compiler/ParseTreeTransforms.py(2878)visit_FuncDefNode()\r\n-> if node.needs_closure or self.path:\r\n(Pdb) p node\r\n<Cython.Compiler.Nodes.CFuncDefNode object at 0x7f53cf5e4310>                   # Node object Address is 0x7f53cf5e4310\r\n(Pdb)\r\n```\r\nHere can be seen that `node` object has needs_closure is set to True (in the line 2724, both nodes are `CFuncDefNode`) and it was set as displayed above (node objects has same address).\r\n\r\n**2. case with .py file which is crashing:**\r\n```python\r\n> /home/matus/dev/cython/Cython/Compiler/ParseTreeTransforms.py(2678)visit_FuncDefNode()\r\n-> print('3', self.needs_closure)\r\n(Pdb) p node\r\n<Cython.Compiler.Nodes.DefNode object at 0x7f6016a82c10>\r\n(Pdb) p self\r\n<Cython.Compiler.ParseTreeTransforms.MarkClosureVisitor object at 0x7f6016a866a0>\r\n(Pdb) c\r\n3 False\r\n3 True\r\n5 True\r\n5 True\r\n> /home/matus/dev/cython/Cython/Compiler/ParseTreeTransforms.py(2678)visit_FuncDefNode()\r\n-> print('3', self.needs_closure)\r\n<Cython.Compiler.Nodes.DefNode object at 0x7f6016a9e040>\r\n(Pdb) p self\r\n<Cython.Compiler.ParseTreeTransforms.MarkClosureVisitor object at 0x7f6016a866a0>\r\n(Pdb) c\r\n3 True\r\n3 True\r\n> /home/matus/dev/cython/Cython/Compiler/ParseTreeTransforms.py(2878)visit_FuncDefNode()\r\n-> if node.needs_closure or self.path:\r\n(Pdb) p node\r\n<Cython.Compiler.Nodes.CFuncDefNode object at 0x7f600fdfd640>\r\n```\r\nHere can be seen that `node` object has needs_closure is set to False because there is no object with the address `0x7f600fdfd640` - the previous nodes are `DefNode` not `CFuncDefNode`. This is causing that the statement `if node.needs_closure or self.path` is evaluated as false causing later on crash as showed before.\r\n\r\n@scoder I would like to fix this bug, but now I am slightly stuck. Could you give me a point which part should I look into?",
            "created_at": "2021-04-16T20:00:42Z",
            "html_url": "https://github.com/cython/cython/issues/3477#issuecomment-821530103",
            "id": 821530103,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3477",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTUzMDEwMw==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-16T20:05:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/821530103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "@matusvalo The node will be converted into a `CFuncDefNode` in `AlignFunctionDefinitions`\r\n\r\nhttps://github.com/cython/cython/blob/66eb66f2f0c0cfa22942853659d444b6f4ecb799/Cython/Compiler/ParseTreeTransforms.py#L2537.\r\n\r\nIt looks like that gets run just after `MarkClosureTransform`\r\n\r\nhttps://github.com/cython/cython/blob/66eb66f2f0c0cfa22942853659d444b6f4ecb799/Cython/Compiler/Pipeline.py#L191-L192\r\n\r\nYou might be able to get away with just swapping their order. If that doesn't work then you might have to do something cleverer to repair the relevant links in `AlignFunctionDefinitions`.",
            "created_at": "2021-04-16T21:45:51Z",
            "html_url": "https://github.com/cython/cython/issues/3477#issuecomment-821579969",
            "id": 821579969,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3477",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTU3OTk2OQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-16T21:45:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/821579969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thank you @da-woods ",
            "created_at": "2021-04-17T06:41:56Z",
            "html_url": "https://github.com/cython/cython/issues/3477#issuecomment-821777336",
            "id": 821777336,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3477",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTc3NzMzNg==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-17T06:41:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/821777336",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have swapped the order and it works!\r\n```\r\nmatus@L3505101303:~/dev/cython/Cython$ git diff\r\ndiff --git a/Cython/Compiler/Pipeline.py b/Cython/Compiler/Pipeline.py\r\nindex 4e8e98c71..342481c32 100644\r\n--- a/Cython/Compiler/Pipeline.py\r\n+++ b/Cython/Compiler/Pipeline.py\r\n@@ -188,8 +188,8 @@ def create_pipeline(context, mode, exclude_classes=()):\r\n         ParallelRangeTransform(context),\r\n         AdjustDefByDirectives(context),\r\n         WithTransform(context),\r\n-        MarkClosureVisitor(context),\r\n         _align_function_definitions,\r\n+        MarkClosureVisitor(context),\r\n         RemoveUnreachableCode(context),\r\n         ConstantFolding(),\r\n         FlattenInListTransform(),\r\n```\r\n\r\nNow the file is compiling without error:\r\n```\r\n$ rm *.c; cythonize -3ib test.py\r\nrm: cannot remove '*.c': No such file or directory\r\nCompiling /home/matus/dev/test/test.py because it changed.\r\n[1/1] Cythonizing /home/matus/dev/test/test.py\r\nrunning build_ext\r\nbuilding 'test' extension\r\ncreating /home/matus/dev/test/tmp8cp6hu35/home\r\ncreating /home/matus/dev/test/tmp8cp6hu35/home/matus\r\ncreating /home/matus/dev/test/tmp8cp6hu35/home/matus/dev\r\ncreating /home/matus/dev/test/tmp8cp6hu35/home/matus/dev/test\r\nx86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/home/matus/dev/cython39/include -I/usr/include/python3.9 -c /home/matus/dev/test/test.c -o /home/matus/dev/test/tmp8cp6hu35/home/matus/dev/test/test.o\r\nx86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 /home/matus/dev/test/tmp8cp6hu35/home/matus/dev/test/test.o -o /home/matus/dev/test/test.cpython-39-x86_64-linux-gnu.so\r\n```\r\nI have checked also the functionality and the generated library is working correctly (at least for my simple example)!",
            "created_at": "2021-04-17T20:57:58Z",
            "html_url": "https://github.com/cython/cython/issues/3477#issuecomment-821886589",
            "id": 821886589,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3477",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTg4NjU4OQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-17T20:57:58Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/821886589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Good! When you have time feel free to submit it as a PR (with your small example test integrated into https://github.com/cython/cython/blob/master/tests/run/pure_pxd.srctree).\r\n\r\nHopefully it won't break anything else, but the full lot of tests will get run on the PR so we'll find out",
            "created_at": "2021-04-17T21:04:04Z",
            "html_url": "https://github.com/cython/cython/issues/3477#issuecomment-821887331",
            "id": 821887331,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3477",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTg4NzMzMQ==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-17T21:04:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/821887331",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "PR created. I will do further validation in larger code base.",
            "created_at": "2021-04-17T21:50:14Z",
            "html_url": "https://github.com/cython/cython/issues/3477#issuecomment-821892454",
            "id": 821892454,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/3477",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTg5MjQ1NA==",
            "performed_via_github_app": null,
            "updated_at": "2021-04-17T21:50:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/821892454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3477/comments",
    "created_at": "2020-04-01T14:06:57Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-03T07:45:24Z",
            "event": "labeled",
            "id": 3195232994,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMxOTUyMzI5OTQ=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3195232994"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2020-04-03T07:45:24Z",
            "event": "labeled",
            "id": 3195232995,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDMxOTUyMzI5OTU=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/3195232995"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-16T20:00:42Z",
            "event": "mentioned",
            "id": 4606619090,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYwNjYxOTA5MA==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4606619090"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-16T20:00:42Z",
            "event": "subscribed",
            "id": 4606619093,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MDY2MTkwOTM=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4606619093"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-16T21:45:52Z",
            "event": "mentioned",
            "id": 4606967603,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYwNjk2NzYwMw==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4606967603"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-16T21:45:52Z",
            "event": "subscribed",
            "id": 4606967606,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MDY5Njc2MDY=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4606967606"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-17T06:41:56Z",
            "event": "mentioned",
            "id": 4607620676,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYwNzYyMDY3Ng==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4607620676"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-04-17T06:41:56Z",
            "event": "subscribed",
            "id": 4607620677,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MDc2MjA2Nzc=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4607620677"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-11T21:04:22Z",
            "event": "closed",
            "id": 4731518232,
            "node_id": "MDExOkNsb3NlZEV2ZW50NDczMTUxODIzMg==",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4731518232"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "16aba7eb35b2a6f0c88b53da00539a5d875ebfdf",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/16aba7eb35b2a6f0c88b53da00539a5d875ebfdf",
            "created_at": "2021-05-11T21:04:23Z",
            "event": "referenced",
            "id": 4731518341,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3MzE1MTgzNDE=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4731518341"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2021-05-12T10:56:38Z",
            "event": "milestoned",
            "id": 4735540663,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDQ3MzU1NDA2NjM=",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/4735540663"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/3477/events",
    "html_url": "https://github.com/cython/cython/issues/3477",
    "id": 591944504,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/3477/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 364,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\nâ€“ New version scheme: 3.x instead of 0.x.\r\nâ€“ Change default `language_level` from `2` to `3`.\r\nâ€“ Change default for `binding` directive from `False` to `True`.\r\nâ€“ Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 23,
        "state": "open",
        "title": "3.0",
        "updated_at": "2021-05-12T10:56:38Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU1OTE5NDQ1MDQ=",
    "number": 3477,
    "performed_via_github_app": null,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "variable 'referenced before assignment' warning, error in all() with .pxd but not .pyx",
    "updated_at": "2021-05-12T10:56:38Z",
    "url": "https://api.github.com/repos/cython/cython/issues/3477",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3370432?v=4",
        "events_url": "https://api.github.com/users/rob-miller/events{/privacy}",
        "followers_url": "https://api.github.com/users/rob-miller/followers",
        "following_url": "https://api.github.com/users/rob-miller/following{/other_user}",
        "gists_url": "https://api.github.com/users/rob-miller/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rob-miller",
        "id": 3370432,
        "login": "rob-miller",
        "node_id": "MDQ6VXNlcjMzNzA0MzI=",
        "organizations_url": "https://api.github.com/users/rob-miller/orgs",
        "received_events_url": "https://api.github.com/users/rob-miller/received_events",
        "repos_url": "https://api.github.com/users/rob-miller/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rob-miller/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rob-miller/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rob-miller"
    }
}