{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\n\nmy environments is\r\n\r\n  - Cython version 3.0.3\r\n  - Python 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux\r\n  - PyTorch 2.0.1. [torch/serialization.py](https://github.com/pytorch/pytorch/blob/v2.0.1/torch/serialization.py#L1109C26-L1109C26)\r\n  - gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0\r\n\r\nconsider such code shown below. it prints the reference count of `bio`, which passed to `torch.load`. it works fine with `torch.load` in python file(torch/serialization.py). I got an output \r\n\r\n```plain\r\nsys.getrefcount(bio)=2\r\n```\r\n\r\nbut when `torch/serialization.py` was compiled into `serialization.so` by cythonize \r\n\r\n```shell\r\ncythonize -i -3  $(python3 -c 'import torch;print(torch.serialization.__file__)')\r\n```\r\n\r\nI got an output\r\n\r\n```plain\r\nsys.getrefcount(bio)=3\r\n```\r\n\r\n means the `bio`  object  was never destroyed. \n\n### Code to reproduce the behaviour:\n\n```py\r\nimport torch\r\nimport sys\r\nimport io\r\n\r\n# generate a random tensor\r\nmodelpath = \"m.bin\"\r\nmodel = torch.rand(400, 400, 30, dtype=torch.bfloat16)\r\ntorch.save(model, modelpath)\r\ndel model\r\n\r\n# load tensor from file\r\nwith open(modelpath, \"rb\") as f:\r\n    content = f.read()\r\n\r\nbio = io.BytesIO(content)\r\n\r\nmodel = torch.load(bio)\r\ndel model\r\n\r\n# print the refcount of `bio``. it should be 2, \r\n# means refered by \r\n#   - `bio` itself\r\n#   - the real parameter of `sys.getrefcount`\r\nprint(f\"{sys.getrefcount(bio)=}\")\r\n```\r\n\n\n### Expected behaviour\n\n_No response_\n\n### OS\n\n_No response_\n\n### Python version\n\n_No response_\n\n### Cython version\n\n_No response_\n\n### Additional context\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Probably nothing to worry about. My guess is that Cython keeps a temporary reference to the global variable during the call, in order to avoid crashes of the Python variable is modified along the way.\n",
            "created_at": "2023-10-17T14:25:20Z",
            "html_url": "https://github.com/cython/cython/issues/5770#issuecomment-1766530067",
            "id": 1766530067,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5770",
            "node_id": "IC_kwDOABDGAc5pSxwT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1766530067/reactions"
            },
            "updated_at": "2023-10-17T14:25:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1766530067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If I run a simpler version\r\n\r\n```\r\nimport sys\r\nimport io\r\n\r\nbio = io.BytesIO(b\"asbbc\")\r\n\r\nprint(f\"{sys.getrefcount(bio)=}\")\r\n```\r\n\r\nThen I get a refcount of 2. So I don't think it's a temporary reference.\r\n\r\nPersonally I still think it's nothing to worry about - my guess would be there's a circular reference in pytorch somewhere and the difference is that the Python code ends up running the garbage collector and the Cython code doesn't. I'd be surprised if it didn't go away by adding `gc.collect()`",
            "created_at": "2023-10-17T16:27:13Z",
            "html_url": "https://github.com/cython/cython/issues/5770#issuecomment-1766765226",
            "id": 1766765226,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5770",
            "node_id": "IC_kwDOABDGAc5pTrKq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1766765226/reactions"
            },
            "updated_at": "2023-10-17T16:27:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1766765226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "```py\r\nimport torch\r\nimport io\r\nimport os\r\n\r\n# generate a random tensor\r\nmodelpath = \"m.bin\"\r\nmodel = torch.rand(400, 400, 30, dtype=torch.bfloat16)  # almost 9MiB\r\ntorch.save(model, modelpath)\r\ndel model\r\n\r\n\r\ndef load(filepath):\r\n    # load tensor from file\r\n    with open(filepath, \"rb\") as f:\r\n        content = f.read()\r\n\r\n    bio = io.BytesIO(content)\r\n\r\n    model = torch.load(bio)\r\n    del model\r\n\r\n\r\nos.system(f\"cat /proc/{os.getpid()}/status |grep VmRSS\")\r\n\r\nN = 100\r\n\r\nfor _ in range(N):\r\n    load(modelpath)\r\n\r\nos.system(f\"cat /proc/{os.getpid()}/status |grep VmRSS\")\r\n```\r\n\r\nhere is a more intuitive example. the outputs are\r\n\r\nbefore `cythonize`\r\n```plain\r\nVmRSS:    307144 kB\r\nVmRSS:    336236 kB\r\n```\r\n\r\nafter `cythonize`\r\n\r\n```plain\r\nVmRSS:    307380 kB\r\nVmRSS:   2183860 kB\r\n```\r\n\r\n",
            "created_at": "2023-10-18T02:26:06Z",
            "html_url": "https://github.com/cython/cython/issues/5770#issuecomment-1767511831",
            "id": 1767511831,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5770",
            "node_id": "IC_kwDOABDGAc5pWhcX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1767511831/reactions"
            },
            "updated_at": "2023-10-18T02:26:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1767511831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17287711?v=4",
                "events_url": "https://api.github.com/users/wcsjtu/events{/privacy}",
                "followers_url": "https://api.github.com/users/wcsjtu/followers",
                "following_url": "https://api.github.com/users/wcsjtu/following{/other_user}",
                "gists_url": "https://api.github.com/users/wcsjtu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wcsjtu",
                "id": 17287711,
                "login": "wcsjtu",
                "node_id": "MDQ6VXNlcjE3Mjg3NzEx",
                "organizations_url": "https://api.github.com/users/wcsjtu/orgs",
                "received_events_url": "https://api.github.com/users/wcsjtu/received_events",
                "repos_url": "https://api.github.com/users/wcsjtu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wcsjtu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wcsjtu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wcsjtu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Without Cython:\r\n\r\n```\r\nVmRSS:    221596 kB\r\nVmRSS:    232460 kB\r\n```\r\n\r\nWith Cython:\r\n\r\n```\r\nVmRSS:    224200 kB\r\nVmRSS:    234928 kB\r\n```\r\n\r\nThis is Python 3.11.5, PyTorch \"2.1.0+cpu\" (i.e. the CPU only version, because the GPU version seemed to need Gigabytes of extra downloads), current Cython master branch (i.e. 3.0.4)\r\n\r\nSo I can't reproduce it.\r\n\r\nMy best guess is that adding `gc.collect()` will make it go away for you too",
            "created_at": "2023-10-18T20:33:09Z",
            "html_url": "https://github.com/cython/cython/issues/5770#issuecomment-1769277368",
            "id": 1769277368,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5770",
            "node_id": "IC_kwDOABDGAc5pdQe4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1769277368/reactions"
            },
            "updated_at": "2023-10-18T20:33:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1769277368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Without Cython:\r\n> \r\n> ```\r\n> VmRSS:    221596 kB\r\n> VmRSS:    232460 kB\r\n> ```\r\n> \r\n> With Cython:\r\n> \r\n> ```\r\n> VmRSS:    224200 kB\r\n> VmRSS:    234928 kB\r\n> ```\r\n> \r\n> This is Python 3.11.5, PyTorch \"2.1.0+cpu\" (i.e. the CPU only version, because the GPU version seemed to need Gigabytes of extra downloads), current Cython master branch (i.e. 3.0.4)\r\n> \r\n> So I can't reproduce it.\r\n> \r\n> My best guess is that adding `gc.collect()` will make it go away for you too\r\n\r\nI tried \r\n\r\n```py\r\nos.system(f\"cat /proc/{os.getpid()}/status |grep VmRSS\")\r\n\r\nN = 100\r\n\r\nfor _ in range(N):\r\n    load(modelpath)\r\ngc.collect()\r\nos.system(f\"cat /proc/{os.getpid()}/status |grep VmRSS\")\r\n```\r\n\r\nstill got \r\n\r\n```plain\r\nVmRSS:    326684 kB\r\nVmRSS:   2202212 kB\r\n```\r\n\r\nyou can use the cpu version of torch to reproduce it.",
            "created_at": "2023-10-19T06:29:19Z",
            "html_url": "https://github.com/cython/cython/issues/5770#issuecomment-1770146064",
            "id": 1770146064,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5770",
            "node_id": "IC_kwDOABDGAc5pgkkQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1770146064/reactions"
            },
            "updated_at": "2023-10-19T06:29:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1770146064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17287711?v=4",
                "events_url": "https://api.github.com/users/wcsjtu/events{/privacy}",
                "followers_url": "https://api.github.com/users/wcsjtu/followers",
                "following_url": "https://api.github.com/users/wcsjtu/following{/other_user}",
                "gists_url": "https://api.github.com/users/wcsjtu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wcsjtu",
                "id": 17287711,
                "login": "wcsjtu",
                "node_id": "MDQ6VXNlcjE3Mjg3NzEx",
                "organizations_url": "https://api.github.com/users/wcsjtu/orgs",
                "received_events_url": "https://api.github.com/users/wcsjtu/received_events",
                "repos_url": "https://api.github.com/users/wcsjtu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wcsjtu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wcsjtu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wcsjtu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So I can't reproduce it. The reference counting in the generated C code looks OK (although it's possible I've missed something)\r\n\r\nI can find reports of memory leaks in torch.load https://github.com/pytorch/pytorch/issues/111330 https://github.com/pytorch/pytorch/issues/102334 and also reports of memory leaks fixed between torch 2.0 and 2.1.\r\n\r\nI'm not sure what influence Cython is having here, but I'm fairly sure this is a PyTorch issue",
            "created_at": "2023-10-19T06:55:27Z",
            "html_url": "https://github.com/cython/cython/issues/5770#issuecomment-1770176274",
            "id": 1770176274,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5770",
            "node_id": "IC_kwDOABDGAc5pgr8S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1770176274/reactions"
            },
            "updated_at": "2023-10-19T06:55:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1770176274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5770/comments",
    "created_at": "2023-10-17T12:59:46Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5770/events",
    "html_url": "https://github.com/cython/cython/issues/5770",
    "id": 1947370515,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5770/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc50EoQT",
    "number": 5770,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5770/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5770/timeline",
    "title": "[BUG] memory leak of `torch.load` compiled by cython",
    "updated_at": "2023-10-19T06:55:28Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5770",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/17287711?v=4",
        "events_url": "https://api.github.com/users/wcsjtu/events{/privacy}",
        "followers_url": "https://api.github.com/users/wcsjtu/followers",
        "following_url": "https://api.github.com/users/wcsjtu/following{/other_user}",
        "gists_url": "https://api.github.com/users/wcsjtu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wcsjtu",
        "id": 17287711,
        "login": "wcsjtu",
        "node_id": "MDQ6VXNlcjE3Mjg3NzEx",
        "organizations_url": "https://api.github.com/users/wcsjtu/orgs",
        "received_events_url": "https://api.github.com/users/wcsjtu/received_events",
        "repos_url": "https://api.github.com/users/wcsjtu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wcsjtu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wcsjtu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wcsjtu"
    }
}