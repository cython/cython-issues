{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe your issue\n\nHello. Working from the HEAD on the main branch of https://github.com/MatthewRalston/kmerdb\r\n\r\nRelevant files are `kmerdb/cublas_gemm` and `kmerdb/regression.pyx`.\r\n\r\nCould use some help. I'm not able to access cublas functionality. Errors galore and it was some scaffolding I took from ChatGPT.\r\n\r\n\r\n# Issue Type\r\n\r\nCythonization issues with cublas extension and gemm multiplication. Issues consist of type issues, related to casting double-precsision to Python objects. Unclear to me. Pasting below.\r\n\r\n```\r\n      kmerdb/cublas_gemm.pyx:71:15: Cannot convert 'double **' to Python object\r\n      \r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n          cdef double *d_B\r\n          cdef double *d_C\r\n      \r\n          # Allocate device memory\r\n          cudaMalloc(&d_A, m * k * sizeof(double))\r\n          cudaMalloc(&d_B, k * n * sizeof(double))\r\n                     ^\r\n      ------------------------------------------------------------\r\n      \r\n      kmerdb/cublas_gemm.pyx:72:15: Cannot convert 'double **' to Python object\r\n      \r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n          cdef double *d_C\r\n      \r\n          # Allocate device memory\r\n          cudaMalloc(&d_A, m * k * sizeof(double))\r\n          cudaMalloc(&d_B, k * n * sizeof(double))\r\n          cudaMalloc(&d_C, m * n * sizeof(double))\r\n                     ^\r\n      ------------------------------------------------------------\r\n      \r\n      kmerdb/cublas_gemm.pyx:73:15: Cannot convert 'double **' to Python object\r\n      \r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n      \r\n          for i in range(k * n):\r\n              h_B[i] = <double> B[i // B.shape[1], i % B.shape[1]]  # Convert to double\r\n      \r\n          # Copy from host arrays to device\r\n          cudaMemcpy(d_A, int(h_A), m * k * sizeof(double), cudaMemcpyHostToDevice)\r\n                              ^\r\n      ------------------------------------------------------------\r\n      \r\n      kmerdb/cublas_gemm.pyx:87:24: Cannot convert 'double *' to Python object\r\n\r\n     ------------------------------------------------------------\r\n      \r\n      kmerdb/cublas_gemm.pyx:87:15: Cannot convert 'double *' to Python object\r\n      \r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n          for i in range(k * n):\r\n              h_B[i] = <double> B[i // B.shape[1], i % B.shape[1]]  # Convert to double\r\n      \r\n          # Copy from host arrays to device\r\n          cudaMemcpy(d_A, int(h_A), m * k * sizeof(double), cudaMemcpyHostToDevice)\r\n          cudaMemcpy(d_B, int(h_B), k * n * sizeof(double), cudaMemcpyHostToDevice)\r\n                              ^\r\n      ------------------------------------------------------------\r\n      \r\n      kmerdb/cublas_gemm.pyx:88:24: Cannot convert 'double *' to Python object\r\n      \r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n          for i in range(k * n):\r\n              h_B[i] = <double> B[i // B.shape[1], i % B.shape[1]]  # Convert to double\r\n      \r\n          # Copy from host arrays to device\r\n          cudaMemcpy(d_A, int(h_A), m * k * sizeof(double), cudaMemcpyHostToDevice)\r\n          cudaMemcpy(d_B, int(h_B), k * n * sizeof(double), cudaMemcpyHostToDevice)\r\n                     ^\r\n      ------------------------------------------------------------\r\n\r\n\r\n```\r\n\r\n# Other issues\r\n\r\n## Missing Memcpy.pxd file\r\n\r\nThe default paths searched for the Cython memcpy header is missing. Using pipenv for virtualenv management. Source installed 3.12.4 C-Python otherwise.\r\n\r\n\r\n```\r\n  error: subprocess-exited-with-error\r\n  \r\n  × Getting requirements to build wheel did not run successfully.\r\n  │ exit code: 1\r\n  ╰─> [154 lines of output]\r\n      /mnt/tmp/pip-build-env-gd_ak7r8/overlay/lib/python3.12/site-packages/Cython/Compiler/Main.py:381: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /develop/repos/kdb/kmerdb/cublas_gemm.pyx\r\n        tree = Parsing.p_module(s, pxd, full_module_name)\r\n      \r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n      '''\r\n      # cublas_gemm.pyx\r\n      import numpy as np\r\n      cimport numpy as cnp\r\n      from libc.stdlib cimport malloc, free\r\n      from libc.stdlib cimport memcpy\r\n      ^\r\n      ------------------------------------------------------------\r\n      \r\n      kmerdb/cublas_gemm.pyx:22:0: 'libc/stdlib/memcpy.pxd' not found\r\n\r\n```\r\n\r\n\r\n## Missing CudaMemcpyHostToDevice\r\n\r\nAdditional missing cuda commands from ?? Not sure, new Cython programmer.\r\n\r\n\r\n```\r\n      Error compiling Cython file:\r\n      ------------------------------------------------------------\r\n      ...\r\n      \r\n          for i in range(k * n):\r\n              h_B[i] = <double> B[i // B.shape[1], i % B.shape[1]]  # Convert to double\r\n      \r\n          # Copy from host arrays to device\r\n          cudaMemcpy(d_A, int(h_A), m * k * sizeof(double), cudaMemcpyHostToDevice)\r\n                                                            ^\r\n      ------------------------------------------------------------\r\n      \r\n      kmerdb/cublas_gemm.pyx:87:54: undeclared name not builtin: cudaMemcpyHostToDevice\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n",
    "closed_at": "2024-08-27T08:27:50Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This does not look like a Cython bug or feature request to me. Please ask on the cython-users mailing list if you want help with using Cython from a broader audience.",
            "created_at": "2024-08-27T08:27:50Z",
            "html_url": "https://github.com/cython/cython/issues/6367#issuecomment-2311884237",
            "id": 2311884237,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6367",
            "node_id": "IC_kwDOABDGAc6JzI3N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2311884237/reactions"
            },
            "updated_at": "2024-08-27T08:27:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2311884237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The only thing I'd have added before closing this issue is: `memcpy` is in `libc.string`. This is because it's in the `<string.h>` header of the C standard library.",
            "created_at": "2024-08-28T07:22:40Z",
            "html_url": "https://github.com/cython/cython/issues/6367#issuecomment-2314516123",
            "id": 2314516123,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6367",
            "node_id": "IC_kwDOABDGAc6J9Lab",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2314516123/reactions"
            },
            "updated_at": "2024-08-28T07:22:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2314516123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "## Compiler crash??\r\n\r\n@scoder if you wouldnt mind double-tapping this issue to make sure it's closed. This isn't a feature issue or genuine bug report, but an issue about correctly using the compiler and package. My biggest issue has changed from the errors above to consistent Compiler crashes.\r\n\r\nI;ve seen this several times. Relevant code is in a python package\r\n\r\nSome relevant comments on vague/nonspecific Cython compiler error names and few suggestions for how to correctly interpret the error messages when the printed error name (Compiler crash in AnalyseExpressionsTransform) does not make much sense to the layperson. \r\n\r\n\r\n[ [BUG] v3.0.4: Compiler crash in AnalyseExpressionsTransform #5771 ](https://github.com/cython/cython/issues/5771)\r\n\r\n## RE: memcpy\r\n@da-woods could you point me to the relevant page in documentation please? I don't do C, how to import a header\r\n\r\notherwise, is it just \r\n\r\n```c\r\ninclude string #libc? idk please help\r\n\r\n```",
            "created_at": "2024-09-05T17:58:52Z",
            "html_url": "https://github.com/cython/cython/issues/6367#issuecomment-2332331829",
            "id": 2332331829,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6367",
            "node_id": "IC_kwDOABDGAc6LBI81",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2332331829/reactions"
            },
            "updated_at": "2024-09-05T22:11:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2332331829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4308024?v=4",
                "events_url": "https://api.github.com/users/MatthewRalston/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatthewRalston/followers",
                "following_url": "https://api.github.com/users/MatthewRalston/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatthewRalston/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatthewRalston",
                "id": 4308024,
                "login": "MatthewRalston",
                "node_id": "MDQ6VXNlcjQzMDgwMjQ=",
                "organizations_url": "https://api.github.com/users/MatthewRalston/orgs",
                "received_events_url": "https://api.github.com/users/MatthewRalston/received_events",
                "repos_url": "https://api.github.com/users/MatthewRalston/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatthewRalston/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatthewRalston/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatthewRalston"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If you've got a compiler crash then that is a bug so open a new issue with some minimal code to reproduce it (a link to compile some external repository is unlikely to get looked it unless it's a really significant downstream package). The actual compiler crash isn't likely to be intelligible by you, but you should be able to find positions in it e.g.\r\n\r\n```\r\n MemoryViewIndexNode(api.pyx:474:25\r\n```\r\n\r\n(taken from the example you linked). This means the issue likely came from somewhere in \"api.pyx, line 474\". That'll help you isolate the problem to the minimal code needed to reproduce it.\r\n\r\nIt's likely that you're doing something wrong, but in an ideal case Cython would give a good error message rather than a compile crash.\r\n\r\n-------------------------\r\n\r\nI can fairly quickly find working examples of `memcpy` in Cython - https://stackoverflow.com/questions/59788251/how-to-use-memcpy-in-cython",
            "created_at": "2024-09-05T19:16:53Z",
            "html_url": "https://github.com/cython/cython/issues/6367#issuecomment-2332465020",
            "id": 2332465020,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6367",
            "node_id": "IC_kwDOABDGAc6LBpd8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2332465020/reactions"
            },
            "updated_at": "2024-09-05T19:16:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2332465020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here is my code @da-woods. I'm trying to write a Strassen matmul algorithm in Python for fun. \r\n\r\nI'm having trouble with syntax in cdef statements. \r\n\r\n\r\n```\r\n python3 setup.py build_ext --inplace\r\nCompiling kmerdb/strassen_cython.pyx because it changed.\r\n[1/1] Cythonizing kmerdb/strassen_cython.pyx\r\n/home/matt/.local/share/virtualenvs/kdb-A0LvysMk/lib/python3.12/site-packages/Cython/Compiler/Main.py:381: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /develop/repos/kdb/kmerdb/strassen_cython.pyx\r\n  tree = Parsing.p_module(s, pxd, full_module_name)\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    cdef cnp.ndarray[double, ndim=2] temp10 = B11\r\n    \r\n    # Compute the 7 products\r\n    \r\n    temp1 = subtract(B12, B22)\r\n    P1 = strassen(A11, temp1, method=\"numpy\")\r\n    ^\r\n------------------------------------------------------------\r\n\r\nkmerdb/strassen_cython.pyx:100:4: Compiler crash in AnalyseExpressionsTransform\r\n\r\nModuleNode.body = StatListNode(strassen_cython.pyx:22:0)\r\nStatListNode.stats[7] = StatListNode(strassen_cython.pyx:59:5)\r\nStatListNode.stats[0] = CFuncDefNode(strassen_cython.pyx:59:5,\r\n    args = [...]/3,\r\n    modifiers = [...]/0,\r\n    outer_attrs = [...]/2,\r\n    visibility = 'private')\r\nFile 'Nodes.py', line 397, in analyse_expressions: StatListNode(strassen_cython.pyx:61:4,\r\n    is_terminator = True)\r\nFile 'Nodes.py', line 6056, in analyse_expressions: SingleAssignmentNode(strassen_cython.pyx:100:17)\r\nFile 'Nodes.py', line 6195, in analyse_types: SingleAssignmentNode(strassen_cython.pyx:100:17)\r\nFile 'ExprNodes.py', line 2286, in analyse_target_types: NameNode(strassen_cython.pyx:100:4,\r\n    cf_is_null = True,\r\n    cf_maybe_null = True,\r\n    cf_state = [...]/0,\r\n    is_name = True,\r\n    is_target = True,\r\n    name = 'P1',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/home/matt/.local/share/virtualenvs/kdb-A0LvysMk/lib/python3.12/site-packages/Cython/Compiler/ExprNodes.py\", line 2286, in analyse_target_types\r\n    Buffer.used_buffer_aux_vars(entry)\r\n  File \"/home/matt/.local/share/virtualenvs/kdb-A0LvysMk/lib/python3.12/site-packages/Cython/Compiler/Buffer.py\", line 285, in used_buffer_aux_vars\r\n    buffer_aux.buflocal_nd_var.used = True\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'NoneType' object has no attribute 'buflocal_nd_var'\r\nTraceback (most recent call last):\r\n  File \"/develop/repos/kdb/setup.py\", line 201, in <module>\r\n    ext_modules=cythonize(extensions),\r\n                ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matt/.local/share/virtualenvs/kdb-A0LvysMk/lib/python3.12/site-packages/Cython/Build/Dependencies.py\", line 1154, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/matt/.local/share/virtualenvs/kdb-A0LvysMk/lib/python3.12/site-packages/Cython/Build/Dependencies.py\", line 1321, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: kmerdb/strassen_cython.pyx\r\n```\r\n\r\n\r\n```python\r\n'''\r\n   Copyright 2020 Matthew Ralston\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n\r\n'''\r\n# cython: language_level=3\r\n# cython: boundscheck=False\r\n# cython: wraparound=False\r\n\r\n\r\nimport numpy as np\r\ncimport numpy as cnp\r\nfrom libc.stdlib cimport malloc, free\r\nfrom libc.string cimport memcpy\r\n\r\n# Ensure appropriate imports for types\r\nfrom libc.stdint cimport int64_t\r\n\r\n# A simple utility function to add two matrices\r\ncdef cnp.ndarray[double, ndim=2] add(cnp.ndarray[double, ndim=2] A, \r\n                                     cnp.ndarray[double, ndim=2] B):\r\n    cdef int i, j\r\n    cdef int rows = A.shape[0]\r\n    cdef int cols = A.shape[1]\r\n    cdef cnp.ndarray[double, ndim=2] C = np.empty((rows, cols), dtype=cnp.double)\r\n\r\n    for i in range(rows):\r\n        for j in range(cols):\r\n            C[i, j] = A[i, j] + B[i, j]\r\n    \r\n    return C\r\n\r\n# A simple utility function to subtract two matrices\r\ncdef cnp.ndarray[double, ndim=2] subtract(cnp.ndarray[double, ndim=2] A, \r\n                                          cnp.ndarray[double, ndim=2] B):\r\n    cdef int i, j\r\n    cdef int rows = A.shape[0]\r\n    cdef int cols = A.shape[1]\r\n    cdef cnp.ndarray[double, ndim=2] C = np.empty((rows, cols), dtype=cnp.double)\r\n\r\n    for i in range(rows):\r\n        for j in range(cols):\r\n            C[i, j] = A[i, j] - B[i, j]\r\n    \r\n    return C\r\n\r\n# Strassen's algorithm for matrix multiplication\r\ncdef cnp.ndarray[double, ndim=2] strassen(cnp.ndarray[double, ndim=2] A,\r\n                                          cnp.ndarray[double, ndim=2] B, char[:] method=\"numpy\"):\r\n    cdef int n\r\n    n = A.shape[0]\r\n\r\n    if method == \"numpy\":\r\n        return np.dot(A, B)\r\n    if n <= 4:#: and base == \"numpy\"  # Base case\r\n        return np.dot(A, B)\r\n    elif n > 4 and method == \"strassen\":\r\n    \r\n        # Splitting the matrices into quadrants\r\n        half = n // 2\r\n    cdef cnp.ndarray[double, ndim=2] A11 = A[:half, :half]\r\n    cdef cnp.ndarray[double, ndim=2] A12 = A[:half, half:]\r\n    cdef cnp.ndarray[double, ndim=2] A21 = A[half:, :half]\r\n    cdef cnp.ndarray[double, ndim=2] A22 = A[half:, half:]\r\n    \r\n    cdef cnp.ndarray[double, ndim=2] B11 = B[:half, :half]\r\n    cdef cnp.ndarray[double, ndim=2] B12 = B[:half, half:]\r\n    cdef cnp.ndarray[double, ndim=2] B21 = B[half:, :half]\r\n    cdef cnp.ndarray[double, ndim=2] B22 = B[half:, half:]\r\n    \r\n    \r\n    \r\n    cdef cnp.ndarray[double, ndim=2] temp1 = B12\r\n    cdef cnp.ndarray[double, ndim=2] temp2 = A11\r\n    cdef cnp.ndarray[double, ndim=2] temp3 = A21\r\n    cdef cnp.ndarray[double, ndim=2] temp4 = B11\r\n    \r\n    cdef cnp.ndarray[double, ndim=2] temp5 = A11\r\n    cdef cnp.ndarray[double, ndim=2] temp6 = B11\r\n    cdef cnp.ndarray[double, ndim=2] temp7 = A22\r\n    cdef cnp.ndarray[double, ndim=2] temp8 = B22\r\n    \r\n    cdef cnp.ndarray[double, ndim=2] temp9 = A11\r\n    cdef cnp.ndarray[double, ndim=2] temp10 = B11\r\n    \r\n    # Compute the 7 products\r\n    \r\n    temp1 = subtract(B12, B22)\r\n    P1 = strassen(A11, temp1, method=\"numpy\")\r\n    \r\n    temp2 = add(A11, A12)\r\n    P2 = strassen(temp2, B22, method=\"numpy\")\r\n    \r\n    temp3 = add(A21, A22)\r\n    P3 = strassen(temp3, B11, method=\"numpy\")\r\n    \r\n    temp4 = subtract(B21, B11)\r\n    P4 = strassen(A22, temp, method=\"numpy\")\r\n    \r\n    temp5 = add(A11, A22)\r\n    temp6 = add(B11, B22)\r\n    P5 = strassen(temp5, temp6, method=\"numpy\")\r\n    \r\n    temp7 = subtract(A12, A22)\r\n    temp8 = add(B21, B22)\r\n    P6 = strassen(temp7, temp8, method=\"numpy\")\r\n    \r\n    \r\n    temp9 = subtract(A11, A21)\r\n    temp10 = add(B11, B12)\r\n    P7 = strassen(temp9, temp10, method=\"numpy\")\r\n    \r\n    # Combine the products into a single result matrix\r\n    C = np.empty((n, n), dtype=cnp.double)\r\n    \r\n    # C1 =  ((P5 + P4) - P2) + P6) (2 additions, 1 subtraction times exactly proportional to the matrix sizes.\r\n    temp1_1 = np.add(P5, P4) # P5(A12 + A22  x B11 + B22)  ADD+  P4(A22 x B21 - B11)\r\n    temp1_2 = np.subtract(temp1, P2)\r\n    \r\n    C1 = np.add(temp1_2, P6)\r\n    \r\n    \r\n    \r\n    \r\n    # C2 = (A11 + A22)  x (B11 + B22)\r\n    \r\n    temp2_3 = np.add(temp2_1, P6) #  ((A12 +A22) x (B11 + B22)) + P6 [!!]\r\n    \r\n    \r\n    # temp1_2 = (P6 + (P2 + (P4 + P5))) #\r\n    # temp2 = (P6 + (P5+P4))\r\n    \r\n    \r\n    C2 = np.add(P1, P4)\r\n    C3 = np.add(P3, P4)\r\n    \r\n\r\n        \r\n        \r\n        \r\n        \r\n    #             C[:half, :half] = add(subtract(M1, P2), P6)\r\n    #             C[:half, half:] = add(P1, P2)\r\n    #             C[half:, :half] = add(P3, P4)\r\n    #             C[half:, half:] = subtract(add(subtract(add(P5, P1), P3), P7), P6)\r\n        \r\n    return C\r\n\r\n    # End Strassen\r\n\r\n# # Batch processing function for Strassen's algorithm\r\n# cpdef batch_strassen(cnp.ndarray[double, ndim=2] A_batch,\r\n#                      cnp.ndarray[double, ndim=2] B_batch):\r\n#     cdef int batch_size, i\r\n#     batch_size = A_batch.shape[0]\r\n\r\n#     # Result batch initialization\r\n#     result_shape = (batch_size, A_batch.shape[1], A_batch.shape[2])\r\n#     cdef cnp.ndarray[double, ndim=3] C_batch = cnp.ndarray[double, ndim=3] A\r\n\r\n    # for i in range(batch_size):\r\n    #     C_batch[i] = strassen(A_batch[i], B_batch[i])\r\n\r\n    # return C_batch\r\n\r\n```\r\n\r\n",
            "created_at": "2024-09-05T20:13:04Z",
            "html_url": "https://github.com/cython/cython/issues/6367#issuecomment-2332551416",
            "id": 2332551416,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/6367",
            "node_id": "IC_kwDOABDGAc6LB-j4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/2332551416/reactions"
            },
            "updated_at": "2024-09-05T20:13:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/2332551416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4308024?v=4",
                "events_url": "https://api.github.com/users/MatthewRalston/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatthewRalston/followers",
                "following_url": "https://api.github.com/users/MatthewRalston/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatthewRalston/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatthewRalston",
                "id": 4308024,
                "login": "MatthewRalston",
                "node_id": "MDQ6VXNlcjQzMDgwMjQ=",
                "organizations_url": "https://api.github.com/users/MatthewRalston/orgs",
                "received_events_url": "https://api.github.com/users/MatthewRalston/received_events",
                "repos_url": "https://api.github.com/users/MatthewRalston/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatthewRalston/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatthewRalston/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatthewRalston"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6367/comments",
    "created_at": "2024-08-27T02:44:01Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6129707?v=4",
                "events_url": "https://api.github.com/users/soraros/events{/privacy}",
                "followers_url": "https://api.github.com/users/soraros/followers",
                "following_url": "https://api.github.com/users/soraros/following{/other_user}",
                "gists_url": "https://api.github.com/users/soraros/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/soraros",
                "id": 6129707,
                "login": "soraros",
                "node_id": "MDQ6VXNlcjYxMjk3MDc=",
                "organizations_url": "https://api.github.com/users/soraros/orgs",
                "received_events_url": "https://api.github.com/users/soraros/received_events",
                "repos_url": "https://api.github.com/users/soraros/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/soraros/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soraros/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/soraros"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-08-27T05:28:16Z",
            "event": "unsubscribed",
            "id": 14022282483,
            "node_id": "UE_lADOABDGAc6UTfxkzwAAAANDywzz",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14022282483"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-08-27T08:25:33Z",
            "event": "labeled",
            "id": 14024381817,
            "label": {
                "color": "fef2c0",
                "name": "support question"
            },
            "node_id": "LE_lADOABDGAc6UTfxkzwAAAAND6xV5",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14024381817"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-08-27T08:27:50Z",
            "event": "closed",
            "id": 14024416093,
            "node_id": "CE_lADOABDGAc6UTfxkzwAAAAND65td",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "url": "https://api.github.com/repos/cython/cython/issues/events/14024416093"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-09-05T17:58:54Z",
            "event": "mentioned",
            "id": 14151162478,
            "node_id": "MEE_lADOABDGAc6UTfxkzwAAAANLeZpu",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14151162478"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-09-05T17:58:54Z",
            "event": "subscribed",
            "id": 14151162487,
            "node_id": "SE_lADOABDGAc6UTfxkzwAAAANLeZp3",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14151162487"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-09-05T17:58:54Z",
            "event": "mentioned",
            "id": 14151162503,
            "node_id": "MEE_lADOABDGAc6UTfxkzwAAAANLeZqH",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14151162503"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-09-05T17:58:54Z",
            "event": "subscribed",
            "id": 14151162512,
            "node_id": "SE_lADOABDGAc6UTfxkzwAAAANLeZqQ",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14151162512"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-09-05T20:13:05Z",
            "event": "mentioned",
            "id": 14152529030,
            "node_id": "MEE_lADOABDGAc6UTfxkzwAAAANLjnSG",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14152529030"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2024-09-05T20:13:05Z",
            "event": "subscribed",
            "id": 14152529044,
            "node_id": "SE_lADOABDGAc6UTfxkzwAAAANLjnSU",
            "performed_via_github_app": null,
            "url": "https://api.github.com/repos/cython/cython/issues/events/14152529044"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/6367/events",
    "html_url": "https://github.com/cython/cython/issues/6367",
    "id": 2488138852,
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 414800623,
            "name": "support question",
            "node_id": "MDU6TGFiZWw0MTQ4MDA2MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/support%20question"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/6367/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc6UTfxk",
    "number": 6367,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/6367/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/6367/timeline",
    "title": "how do i address a missing \"memcpy\" pxd file when cythonizing my extension",
    "updated_at": "2024-09-05T22:11:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/6367",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4308024?v=4",
        "events_url": "https://api.github.com/users/MatthewRalston/events{/privacy}",
        "followers_url": "https://api.github.com/users/MatthewRalston/followers",
        "following_url": "https://api.github.com/users/MatthewRalston/following{/other_user}",
        "gists_url": "https://api.github.com/users/MatthewRalston/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MatthewRalston",
        "id": 4308024,
        "login": "MatthewRalston",
        "node_id": "MDQ6VXNlcjQzMDgwMjQ=",
        "organizations_url": "https://api.github.com/users/MatthewRalston/orgs",
        "received_events_url": "https://api.github.com/users/MatthewRalston/received_events",
        "repos_url": "https://api.github.com/users/MatthewRalston/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MatthewRalston/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MatthewRalston/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MatthewRalston"
    }
}