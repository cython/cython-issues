{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Describe the bug\r\n\r\nref https://github.com/david-cortes/hpfrec/issues/14\r\n\r\nWith the latest cython==3.0.0, some 'for' loops using `prange` in `.pyx` files are being compiled into something that isn't able to finish the loop (this is about just deterministically-numbered for's), but will work correctly (that is, the program is able to exit from the loop) if switched to regular `range` or if compiled with an older cython version.\r\n\r\nI haven't been able to produce a minimally reproducible example and am not sure what exactly is wrong, nor how to debug it, but I have this particular example here:\r\nhttps://github.com/david-cortes/hpfrec/blob/aac53899f9b93071a1a2267f41f61f603c4a33d9/hpfrec/cython_loops.pxi#L579\r\n\r\nIf adding `printf` lines, I am seeing that the code is able to enter the loop, and at least some individual iterations are able to reach the last line inside the 'for' chunk if I add a printf in each loop iteration, but if adding a `printf` statement right outside of the 'for' indentation, it never reaches that line.\r\n\r\nThe issue happens with both GCC and CLANG.\r\n\r\nAttached is the generated C file in case it helps. The translated chunk starts at L21624 in the C file.\r\n[cython_double_nonwindows.zip](https://github.com/cython/cython/files/12164391/cython_double_nonwindows.zip)\r\n\r\n\r\n### Code to reproduce the behaviour:\r\n\r\nhttps://github.com/david-cortes/hpfrec/blob/aac53899f9b93071a1a2267f41f61f603c4a33d9/hpfrec/cython_loops.pxi#L579\r\n\r\n### Expected behaviour\r\n\r\nThe `prange` loop should reach the end of the execution in the code above, which is deterministic and not dependant on any variable that would get modified inside the loop.\r\n\r\n### OS\r\n\r\nLinux\r\n\r\n### Python version\r\n\r\n3.9\r\n\r\n### Cython version\r\n\r\n3.0.0\r\n\r\n### Additional context\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Are there any instructions saying that we'd need to run the in that example if we wanted to reproduce it?\r\n\r\nMy current theory is that it's re-acquiring the GIL to check if some function has errored and we're ending up with a dead-lock there. You could try marking any functions/function pointers that you use in the loop as `noexcept` to prevent that.\r\n\r\nThat's a complete semi-informed guess though so don't take it too seriously",
            "created_at": "2023-07-26T07:50:48Z",
            "html_url": "https://github.com/cython/cython/issues/5564#issuecomment-1651165046",
            "id": 1651165046,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5564",
            "node_id": "IC_kwDOABDGAc5iasd2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1651165046/reactions"
            },
            "updated_at": "2023-07-26T07:50:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1651165046",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Are there any instructions saying that we'd need to run the in that example if we wanted to reproduce it?\r\n> \r\n> My current theory is that it's re-acquiring the GIL to check if some function has errored and we're ending up with a dead-lock there. You could try marking any functions/function pointers that you use in the loop as `noexcept` to prevent that.\r\n> \r\n> That's a complete semi-informed guess though so don't take it too seriously\r\n\r\nThanks for the hint. It's definitely related as adding compiler directive `legacy_implicit_noexcept=True` makes the problem go away.\r\n\r\nHowever, in this case, the `cdef`'d function that hangs is only calling functions from `libc.math` and `scipy.special.cython_special`, which I understand are declared from \"extern\" and thus should be implicit `noexcept`s according to [the docs](https://cython.readthedocs.io/en/latest/src/userguide/language_basics.html#error-return-values).\r\n\r\n(BTW if `prange` calling a non-`noexcept` function is something that will end up hanging, it'd be nice to turn it into a compilation error intead)\r\n\r\nAs for an example to trigger the bug - sorry, forgot about that part. Steps would be to clone the repository, reset to the commit above, then build the extension, and then execute the example in the readme of the repository. As code:\r\n```shell\r\ngit clone https://github.com/david-cortes/hpfrec.git\r\ncd hpfrec\r\ngit reset --hard aac53899f9b93071a1a2267f41f61f603c4a33d9\r\npython setup.py build_ext --inplace --force\r\n```\r\n\r\nThen launch python and execute the following:\r\n```python\r\nimport numpy as np\r\nfrom scipy.sparse import random as sp_random\r\nfrom hpfrec import HPF\r\n\r\nX = sp_random(100, 100, random_state=123)\r\nHPF().fit(X)\r\n```",
            "created_at": "2023-07-26T14:34:18Z",
            "html_url": "https://github.com/cython/cython/issues/5564#issuecomment-1651934508",
            "id": 1651934508,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/5564",
            "node_id": "IC_kwDOABDGAc5idoUs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/issues/comments/1651934508/reactions"
            },
            "updated_at": "2023-07-26T14:34:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/1651934508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11860098?v=4",
                "events_url": "https://api.github.com/users/david-cortes/events{/privacy}",
                "followers_url": "https://api.github.com/users/david-cortes/followers",
                "following_url": "https://api.github.com/users/david-cortes/following{/other_user}",
                "gists_url": "https://api.github.com/users/david-cortes/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/david-cortes",
                "id": 11860098,
                "login": "david-cortes",
                "node_id": "MDQ6VXNlcjExODYwMDk4",
                "organizations_url": "https://api.github.com/users/david-cortes/orgs",
                "received_events_url": "https://api.github.com/users/david-cortes/received_events",
                "repos_url": "https://api.github.com/users/david-cortes/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/david-cortes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/david-cortes/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/david-cortes"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5564/comments",
    "created_at": "2023-07-25T18:30:24Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/5564/events",
    "html_url": "https://github.com/cython/cython/issues/5564",
    "id": 1820911606,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/5564/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOABDGAc5siOf2",
    "number": 5564,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/cython/cython/issues/5564/reactions"
    },
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/cython/cython/issues/5564/timeline",
    "title": "[BUG] Compiled `prange` loop isn't able to exit section",
    "updated_at": "2023-07-26T14:34:18Z",
    "url": "https://api.github.com/repos/cython/cython/issues/5564",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11860098?v=4",
        "events_url": "https://api.github.com/users/david-cortes/events{/privacy}",
        "followers_url": "https://api.github.com/users/david-cortes/followers",
        "following_url": "https://api.github.com/users/david-cortes/following{/other_user}",
        "gists_url": "https://api.github.com/users/david-cortes/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/david-cortes",
        "id": 11860098,
        "login": "david-cortes",
        "node_id": "MDQ6VXNlcjExODYwMDk4",
        "organizations_url": "https://api.github.com/users/david-cortes/orgs",
        "received_events_url": "https://api.github.com/users/david-cortes/received_events",
        "repos_url": "https://api.github.com/users/david-cortes/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/david-cortes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/david-cortes/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/david-cortes"
    }
}