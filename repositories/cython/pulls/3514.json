{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3514/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3514/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3514"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3514"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3514/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3514"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/b8096835745f36aed534bf138d22f35dbf8c58cf"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1041,
            "forks_count": 1041,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 846,
            "open_issues_count": 846,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-06-25T06:21:48Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 59651,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 5277,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-06-24T23:10:43Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 5277,
            "watchers_count": 5277
        },
        "sha": "a0e10cf604e62b6a08ba26c87e76d735a58988af",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Resolves #3513.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r407978529"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/407978529"
                }
            },
            "author_association": "MEMBER",
            "body": "What? :)",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-04-14T09:01:59Z",
            "diff_hunk": "@@ -247,10 +248,37 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if 'inline' in node.modifiers:\n+            return",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r407978529",
            "id": 407978529,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3ODUyOQ==",
            "original_commit_id": "8e1e586e4b97d3566fd5cc0f9c18322a2f22f805",
            "original_line": 254,
            "original_position": 16,
            "original_start_line": 252,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 392735922,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/407978529",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r407980176"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/407980176"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, you're making an assumption about the node type in `node.base_type` here that I'd like to avoid.\r\nInstead, I think we should change `visit_CSimpleBaseTypeNode()` to not output the trailing space if it's not writing a name.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-04-14T09:04:47Z",
            "diff_hunk": "@@ -247,10 +248,37 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if 'inline' in node.modifiers:\n+            return\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r407980176",
            "id": 407980176,
            "line": 266,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk4MDE3Ng==",
            "original_commit_id": "8e1e586e4b97d3566fd5cc0f9c18322a2f22f805",
            "original_line": 266,
            "original_position": 30,
            "original_start_line": 265,
            "path": "Cython/CodeWriter.py",
            "position": 95,
            "pull_request_review_id": 392735922,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": 264,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/407980176",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r407987936"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/407987936"
                }
            },
            "author_association": "NONE",
            "body": "The first serveral lines are inherieted from `visit_CFuncDefNode` in `PxdWriter`, I'm not sure the aim indeed.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-04-14T09:16:45Z",
            "diff_hunk": "@@ -247,10 +248,37 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if 'inline' in node.modifiers:\n+            return",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r407987936",
            "id": 407987936,
            "in_reply_to_id": 407978529,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk4NzkzNg==",
            "original_commit_id": "8e1e586e4b97d3566fd5cc0f9c18322a2f22f805",
            "original_line": 254,
            "original_position": 16,
            "original_start_line": 252,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 392747085,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/407987936",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r407988513"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/407988513"
                }
            },
            "author_association": "NONE",
            "body": "Agree, but not sure if not printing the trailing space `visit_CSimpleBaseTypeNode()` would causes problems in other parts.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-04-14T09:17:38Z",
            "diff_hunk": "@@ -247,10 +248,37 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if 'inline' in node.modifiers:\n+            return\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r407988513",
            "id": 407988513,
            "in_reply_to_id": 407980176,
            "line": 266,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk4ODUxMw==",
            "original_commit_id": "8e1e586e4b97d3566fd5cc0f9c18322a2f22f805",
            "original_line": 266,
            "original_position": 30,
            "original_start_line": 265,
            "path": "Cython/CodeWriter.py",
            "position": 95,
            "pull_request_review_id": 392747750,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": 264,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/407988513",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r407988913"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/407988913"
                }
            },
            "author_association": "NONE",
            "body": "Will try to revise this.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-04-14T09:18:18Z",
            "diff_hunk": "@@ -247,10 +248,37 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if 'inline' in node.modifiers:\n+            return\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r407988913",
            "id": 407988913,
            "in_reply_to_id": 407980176,
            "line": 266,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk4ODkxMw==",
            "original_commit_id": "8e1e586e4b97d3566fd5cc0f9c18322a2f22f805",
            "original_line": 266,
            "original_position": 30,
            "original_start_line": 265,
            "path": "Cython/CodeWriter.py",
            "position": 95,
            "pull_request_review_id": 392748248,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": 264,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/407988913",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r429631689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429631689"
                }
            },
            "author_association": "MEMBER",
            "body": "My guess is that this is for debugging (like the `print()` calls that you left in), but just in case, since these are user visible messages, we shouldn't leak internal jargon into them.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-05-24T12:31:39Z",
            "diff_hunk": "@@ -661,7 +661,7 @@ def analyse(self, return_type, env, nonempty=0, directive_locals=None, visibilit\n                 type_node = directive_locals[name]\n                 other_type = type_node.analyse_as_type(env)\n                 if other_type is None:\n-                    error(type_node.pos, \"Not a type\")\n+                    error(type_node.pos, \"Not a type in CFuncDeclaratorNode\")",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r429631689",
            "id": 429631689,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYzMTY4OQ==",
            "original_commit_id": "f43c2dba562bcdf2b7e6257c9cc6613bb464374a",
            "original_line": 664,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 417354240,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429631689",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r431651124"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/431651124"
                }
            },
            "author_association": "NONE",
            "body": "Fixed.\r\n\r\nBTW is there any easier way the check which test cases failed on CI from the log on travis ?",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-05-28T07:59:20Z",
            "diff_hunk": "@@ -661,7 +661,7 @@ def analyse(self, return_type, env, nonempty=0, directive_locals=None, visibilit\n                 type_node = directive_locals[name]\n                 other_type = type_node.analyse_as_type(env)\n                 if other_type is None:\n-                    error(type_node.pos, \"Not a type\")\n+                    error(type_node.pos, \"Not a type in CFuncDeclaratorNode\")",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r431651124",
            "id": 431651124,
            "in_reply_to_id": 429631689,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MTEyNA==",
            "original_commit_id": "f43c2dba562bcdf2b7e6257c9cc6613bb464374a",
            "original_line": 664,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 419866034,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/431651124",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r438098443"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438098443"
                }
            },
            "author_association": "MEMBER",
            "body": "> BTW is there any easier way the check which test cases failed on CI from the log on travis ?\r\n\r\nYeah, the tests run in parallel, which makes the output a bit harder to navigate. I usually look up the failing shard number(s) and then search for e.g. `4/7)` to find the result output of shard 4.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-10T12:54:55Z",
            "diff_hunk": "@@ -661,7 +661,7 @@ def analyse(self, return_type, env, nonempty=0, directive_locals=None, visibilit\n                 type_node = directive_locals[name]\n                 other_type = type_node.analyse_as_type(env)\n                 if other_type is None:\n-                    error(type_node.pos, \"Not a type\")\n+                    error(type_node.pos, \"Not a type in CFuncDeclaratorNode\")",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r438098443",
            "id": 438098443,
            "in_reply_to_id": 429631689,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5ODQ0Mw==",
            "original_commit_id": "f43c2dba562bcdf2b7e6257c9cc6613bb464374a",
            "original_line": 664,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 428021695,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438098443",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r438099948"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438099948"
                }
            },
            "author_association": "MEMBER",
            "body": "I think they can go. There is no reason for excluding `inline` functions specifically. (We should show the `inline` modifier for inline functions, though.)\r\n```suggestion\r\n```",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-10T12:57:10Z",
            "diff_hunk": "@@ -247,10 +248,37 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if 'inline' in node.modifiers:\n+            return",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r438099948",
            "id": 438099948,
            "in_reply_to_id": 407978529,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5OTk0OA==",
            "original_commit_id": "8e1e586e4b97d3566fd5cc0f9c18322a2f22f805",
            "original_line": 254,
            "original_position": 16,
            "original_start_line": 252,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 428023579,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438099948",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r438102456"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438102456"
                }
            },
            "author_association": "MEMBER",
            "body": "This looks like a left-over attempt, but IMHO not a correct one. Certainly worth adding a couple of tests for unicode test and byte strings.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-10T13:00:44Z",
            "diff_hunk": "@@ -511,6 +572,13 @@ def visit_BytesNode(self, node):\n     def visit_StringNode(self, node):\n         self.emit_string(node)\n \n+    # def visit_StringNode(self, node):\n+    #     value = node.value\n+    #     unicode_value = node.unicode_value\n+    #     if unicode_value is not None and unicode_value.encoding is not None:\n+    #         value = unicode_value.encode(unicode_value.encoding)\n+    #     self.put(repr(value))\n+",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r438102456",
            "id": 438102456,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMjQ1Ng==",
            "original_commit_id": "169e0d1fdbe5eff587c0391fb8687edc4282c1d0",
            "original_line": 581,
            "original_position": 137,
            "original_start_line": 575,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 428023579,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438102456",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r443918330"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443918330"
                }
            },
            "author_association": "NONE",
            "body": "Removed.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-23T01:58:40Z",
            "diff_hunk": "@@ -511,6 +572,13 @@ def visit_BytesNode(self, node):\n     def visit_StringNode(self, node):\n         self.emit_string(node)\n \n+    # def visit_StringNode(self, node):\n+    #     value = node.value\n+    #     unicode_value = node.unicode_value\n+    #     if unicode_value is not None and unicode_value.encoding is not None:\n+    #         value = unicode_value.encode(unicode_value.encoding)\n+    #     self.put(repr(value))\n+",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r443918330",
            "id": 443918330,
            "in_reply_to_id": 438102456,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxODMzMA==",
            "original_commit_id": "169e0d1fdbe5eff587c0391fb8687edc4282c1d0",
            "original_line": 581,
            "original_position": 137,
            "original_start_line": 575,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 435387694,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443918330",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r443919003"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443919003"
                }
            },
            "author_association": "NONE",
            "body": "`visit_CSimpleBaseTypeNode` is not always needs to print the ` `, otherwise it will break other things.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-23T02:00:57Z",
            "diff_hunk": "@@ -247,10 +248,37 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if 'inline' in node.modifiers:\n+            return\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r443919003",
            "id": 443919003,
            "in_reply_to_id": 407980176,
            "line": 266,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxOTAwMw==",
            "original_commit_id": "8e1e586e4b97d3566fd5cc0f9c18322a2f22f805",
            "original_line": 266,
            "original_position": 30,
            "original_start_line": 265,
            "path": "Cython/CodeWriter.py",
            "position": 95,
            "pull_request_review_id": 435388430,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": 264,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443919003",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r444094387"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/444094387"
                }
            },
            "author_association": "MEMBER",
            "body": "This pattern seems worth wrapping in a `visit_indented()` method.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-23T09:37:04Z",
            "diff_hunk": "@@ -245,10 +249,43 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.modifiers:\n+            self.put(' '.join(node.modifiers))\n+            self.put(' ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')\n+\n+        # visit the CFuncDeclaratorNode, but put a `:` at the end of line\n+        self.visit(node.declarator.base)\n+        self.put(u'(')\n+        self.comma_separated_list(node.declarator.args)\n+        self.endline(u'):')\n+\n+        self.indent()\n+        self.visit(node.body)\n+        self.dedent()",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r444094387",
            "id": 444094387,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5NDM4Nw==",
            "original_commit_id": "f4fff961f5566452db9ec1fcf8b8353b9a40198e",
            "original_line": 279,
            "original_position": 67,
            "original_start_line": 277,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 435612201,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/444094387",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r444096247"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/444096247"
                }
            },
            "author_association": "MEMBER",
            "body": "This is yet another assumption about the internal behaviour of nodes that I would prefer keeping out of the CodeWriter. Can't you just look at `node.declarator.declared_name()`?",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-23T09:40:18Z",
            "diff_hunk": "@@ -245,10 +249,43 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.modifiers:\n+            self.put(' '.join(node.modifiers))\n+            self.put(' ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')\n+\n+        # visit the CFuncDeclaratorNode, but put a `:` at the end of line\n+        self.visit(node.declarator.base)\n+        self.put(u'(')\n+        self.comma_separated_list(node.declarator.args)\n+        self.endline(u'):')\n+\n+        self.indent()\n+        self.visit(node.body)\n+        self.dedent()\n+\n     def visit_CArgDeclNode(self, node):\n         if node.base_type.name is not None:\n             self.visit(node.base_type)\n-            self.put(u\" \")\n+            # a special case: if `node.declarator` is a `CNameDeclaratorNode`,\n+            # its \"name\" might be empty string, for example, for `cdef f(x)`.\n+            if not isinstance(node.declarator, CNameDeclaratorNode) or \\\n+                    node.declarator.name:",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r444096247",
            "id": 444096247,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5NjI0Nw==",
            "original_commit_id": "f4fff961f5566452db9ec1fcf8b8353b9a40198e",
            "original_line": 287,
            "original_position": 76,
            "original_start_line": 284,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 435612201,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/444096247",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r444213144"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/444213144"
                }
            },
            "author_association": "NONE",
            "body": "Done.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-23T13:14:25Z",
            "diff_hunk": "@@ -245,10 +249,43 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.modifiers:\n+            self.put(' '.join(node.modifiers))\n+            self.put(' ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')\n+\n+        # visit the CFuncDeclaratorNode, but put a `:` at the end of line\n+        self.visit(node.declarator.base)\n+        self.put(u'(')\n+        self.comma_separated_list(node.declarator.args)\n+        self.endline(u'):')\n+\n+        self.indent()\n+        self.visit(node.body)\n+        self.dedent()",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r444213144",
            "id": 444213144,
            "in_reply_to_id": 444094387,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIxMzE0NA==",
            "original_commit_id": "f4fff961f5566452db9ec1fcf8b8353b9a40198e",
            "original_line": 279,
            "original_position": 67,
            "original_start_line": 277,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 435767945,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/444213144",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r444218080"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/444218080"
                }
            },
            "author_association": "NONE",
            "body": "But I didn't find `declared_name` the this repo, any hints here?\r\n\r\nThis special case is tricky. If we don't print ` ` here and print a ` ` the visit_\"declarator\", there might be to spaces between type and variable.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-23T13:21:30Z",
            "diff_hunk": "@@ -245,10 +249,43 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.modifiers:\n+            self.put(' '.join(node.modifiers))\n+            self.put(' ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')\n+\n+        # visit the CFuncDeclaratorNode, but put a `:` at the end of line\n+        self.visit(node.declarator.base)\n+        self.put(u'(')\n+        self.comma_separated_list(node.declarator.args)\n+        self.endline(u'):')\n+\n+        self.indent()\n+        self.visit(node.body)\n+        self.dedent()\n+\n     def visit_CArgDeclNode(self, node):\n         if node.base_type.name is not None:\n             self.visit(node.base_type)\n-            self.put(u\" \")\n+            # a special case: if `node.declarator` is a `CNameDeclaratorNode`,\n+            # its \"name\" might be empty string, for example, for `cdef f(x)`.\n+            if not isinstance(node.declarator, CNameDeclaratorNode) or \\\n+                    node.declarator.name:",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r444218080",
            "id": 444218080,
            "in_reply_to_id": 444096247,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIxODA4MA==",
            "original_commit_id": "f4fff961f5566452db9ec1fcf8b8353b9a40198e",
            "original_line": 287,
            "original_position": 76,
            "original_start_line": 284,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 435774487,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/444218080",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r444332489"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/444332489"
                }
            },
            "author_association": "MEMBER",
            "body": "`declared_name` is in master. just merge it in here.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-23T15:56:18Z",
            "diff_hunk": "@@ -245,10 +249,43 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.modifiers:\n+            self.put(' '.join(node.modifiers))\n+            self.put(' ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')\n+\n+        # visit the CFuncDeclaratorNode, but put a `:` at the end of line\n+        self.visit(node.declarator.base)\n+        self.put(u'(')\n+        self.comma_separated_list(node.declarator.args)\n+        self.endline(u'):')\n+\n+        self.indent()\n+        self.visit(node.body)\n+        self.dedent()\n+\n     def visit_CArgDeclNode(self, node):\n         if node.base_type.name is not None:\n             self.visit(node.base_type)\n-            self.put(u\" \")\n+            # a special case: if `node.declarator` is a `CNameDeclaratorNode`,\n+            # its \"name\" might be empty string, for example, for `cdef f(x)`.\n+            if not isinstance(node.declarator, CNameDeclaratorNode) or \\\n+                    node.declarator.name:",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r444332489",
            "id": 444332489,
            "in_reply_to_id": 444096247,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzMjQ4OQ==",
            "original_commit_id": "f4fff961f5566452db9ec1fcf8b8353b9a40198e",
            "original_line": 287,
            "original_position": 76,
            "original_start_line": 284,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 435925902,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:24:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/444332489",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r444609429"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/444609429"
                }
            },
            "author_association": "NONE",
            "body": "Fixed, thanks!\r\n\r\nBut the here the situation is still a bit complicated, since for `CSimpleBaseTypeNode`, it may have `name`, and for other types node, their `.name` is None, but do have something to print, e.g., `TemplatedTypeNode`. I have added a note for the reason in comment.",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-24T02:27:35Z",
            "diff_hunk": "@@ -245,10 +249,43 @@ def visit_FuncDefNode(self, node):\n         self.visit(node.body)\n         self.dedent()\n \n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.modifiers:\n+            self.put(' '.join(node.modifiers))\n+            self.put(' ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')\n+\n+        # visit the CFuncDeclaratorNode, but put a `:` at the end of line\n+        self.visit(node.declarator.base)\n+        self.put(u'(')\n+        self.comma_separated_list(node.declarator.args)\n+        self.endline(u'):')\n+\n+        self.indent()\n+        self.visit(node.body)\n+        self.dedent()\n+\n     def visit_CArgDeclNode(self, node):\n         if node.base_type.name is not None:\n             self.visit(node.base_type)\n-            self.put(u\" \")\n+            # a special case: if `node.declarator` is a `CNameDeclaratorNode`,\n+            # its \"name\" might be empty string, for example, for `cdef f(x)`.\n+            if not isinstance(node.declarator, CNameDeclaratorNode) or \\\n+                    node.declarator.name:",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r444609429",
            "id": 444609429,
            "in_reply_to_id": 444096247,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwOTQyOQ==",
            "original_commit_id": "f4fff961f5566452db9ec1fcf8b8353b9a40198e",
            "original_line": 287,
            "original_position": 76,
            "original_start_line": 284,
            "path": "Cython/CodeWriter.py",
            "position": null,
            "pull_request_review_id": 436282078,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T02:27:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/444609429",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r445131796"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/445131796"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, sorry, my fault. `.visit_*()` is the naming convention for methods that match node types. Just give it a private name then:\r\n```suggestion\r\n    def _visit_indented(self, node):\r\n```",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-24T19:48:19Z",
            "diff_hunk": "@@ -80,6 +80,14 @@ def comma_separated_list(self, items, output_rhs=False):\n                     self.visit(item.default)\n                 self.put(u\", \")\n             self.visit(items[-1])\n+            if output_rhs and items[-1].default is not None:\n+                self.put(u\" = \")\n+                self.visit(items[-1].default)\n+\n+    def visit_indented(self, node):",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r445131796",
            "id": 445131796,
            "line": 87,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzMTc5Ng==",
            "original_commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "original_line": 87,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/CodeWriter.py",
            "position": 24,
            "pull_request_review_id": 436955714,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-24T20:00:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/445131796",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r445132517"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/445132517"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        self.startline(u'cpdef ' if node.overridable else u'cdef ')\r\n```",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-24T19:49:41Z",
            "diff_hunk": "@@ -241,14 +244,49 @@ def visit_FuncDefNode(self, node):\n         self.startline(u\"def %s(\" % node.name)\n         self.comma_separated_list(node.args)\n         self.endline(u\"):\")\n-        self.indent()\n-        self.visit(node.body)\n-        self.dedent()\n+        self.visit_indented(node.body)\n+\n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r445132517",
            "id": 445132517,
            "line": 253,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzMjUxNw==",
            "original_commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "original_line": 253,
            "original_position": 82,
            "original_start_line": 250,
            "path": "Cython/CodeWriter.py",
            "position": 82,
            "pull_request_review_id": 436955714,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": 250,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T20:00:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/445132517",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r445133895"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/445133895"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # For \"CSimpleBaseTypeNode\", the variable type may have been parsed as type.\r\n        # For other node types, the \"name\" is always None.\r\n```",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-24T19:52:17Z",
            "diff_hunk": "@@ -241,14 +244,49 @@ def visit_FuncDefNode(self, node):\n         self.startline(u\"def %s(\" % node.name)\n         self.comma_separated_list(node.args)\n         self.endline(u\"):\")\n-        self.indent()\n-        self.visit(node.body)\n-        self.dedent()\n+        self.visit_indented(node.body)\n+\n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.modifiers:\n+            self.put(' '.join(node.modifiers))\n+            self.put(' ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')\n+\n+        # visit the CFuncDeclaratorNode, but put a `:` at the end of line\n+        self.visit(node.declarator.base)\n+        self.put(u'(')\n+        self.comma_separated_list(node.declarator.args)\n+        self.endline(u'):')\n+\n+        self.visit_indented(node.body)\n \n     def visit_CArgDeclNode(self, node):\n-        if node.base_type.name is not None:\n+        # for `CSimpleBaseTypeNode`, the variable type may been parsed as type.\n+        # for other types node, its `name` is always None.",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r445133895",
            "id": 445133895,
            "line": 278,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzMzg5NQ==",
            "original_commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "original_line": 278,
            "original_position": 108,
            "original_start_line": 277,
            "path": "Cython/CodeWriter.py",
            "position": 108,
            "pull_request_review_id": 436955714,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": 277,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T20:00:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/445133895",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r445136245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/445136245"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            # If we printed something for \"node.base_type\", we may need to print an extra ' '.\r\n            #\r\n            # Special case: if \"node.declarator\" is a \"CNameDeclaratorNode\",\r\n            # its \"name\" might be an empty string, for example, for \"cdef f(x)\".\r\n```",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-24T19:56:51Z",
            "diff_hunk": "@@ -241,14 +244,49 @@ def visit_FuncDefNode(self, node):\n         self.startline(u\"def %s(\" % node.name)\n         self.comma_separated_list(node.args)\n         self.endline(u\"):\")\n-        self.indent()\n-        self.visit(node.body)\n-        self.dedent()\n+        self.visit_indented(node.body)\n+\n+    def visit_CFuncDefNode(self, node):\n+        if node.overridable:\n+            self.startline(u'cpdef ')\n+        else:\n+            self.startline(u'cdef ')\n+        if node.modifiers:\n+            self.put(' '.join(node.modifiers))\n+            self.put(' ')\n+        if node.visibility != 'private':\n+            self.put(node.visibility)\n+            self.put(u' ')\n+        if node.api:\n+            self.put(u'api ')\n+\n+        if node.base_type:\n+            self.visit(node.base_type)\n+            if node.base_type.name is not None:\n+                self.put(u' ')\n+\n+        # visit the CFuncDeclaratorNode, but put a `:` at the end of line\n+        self.visit(node.declarator.base)\n+        self.put(u'(')\n+        self.comma_separated_list(node.declarator.args)\n+        self.endline(u'):')\n+\n+        self.visit_indented(node.body)\n \n     def visit_CArgDeclNode(self, node):\n-        if node.base_type.name is not None:\n+        # for `CSimpleBaseTypeNode`, the variable type may been parsed as type.\n+        # for other types node, its `name` is always None.\n+        if not isinstance(node.base_type, CSimpleBaseTypeNode) or \\\n+                node.base_type.name is not None:\n             self.visit(node.base_type)\n-            self.put(u\" \")\n+\n+            # once we print something for node.base_type, we may need to print\n+            # an extra ` `.\n+            #\n+            # a special case: if `node.declarator` is a `CNameDeclaratorNode`,\n+            # its \"name\" might be empty string, for example, for `cdef f(x)`.",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r445136245",
            "id": 445136245,
            "line": 287,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzNjI0NQ==",
            "original_commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "original_line": 287,
            "original_position": 118,
            "original_start_line": 283,
            "path": "Cython/CodeWriter.py",
            "position": 118,
            "pull_request_review_id": 436955714,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": 283,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T20:00:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/445136245",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3514#discussion_r445137218"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3514"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/445137218"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        self._visit_indented(node.body)\r\n```",
            "commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "created_at": "2020-06-24T19:58:33Z",
            "diff_hunk": "@@ -382,19 +431,15 @@ def visit_WithStatNode(self, node):\n             self.put(u\" as \")\n             self.visit(node.target)\n         self.endline(u\":\")\n-        self.indent()\n-        self.visit(node.body)\n-        self.dedent()\n+        self.visit_indented(node.body)\n \n     def visit_TryFinallyStatNode(self, node):\n         self.line(u\"try:\")\n         self.indent()\n         self.visit(node.body)\n         self.dedent()",
            "html_url": "https://github.com/cython/cython/pull/3514#discussion_r445137218",
            "id": 445137218,
            "line": 440,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzNzIxOA==",
            "original_commit_id": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "original_line": 440,
            "original_position": 169,
            "original_start_line": 438,
            "path": "Cython/CodeWriter.py",
            "position": 169,
            "pull_request_review_id": 436955714,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3514",
            "side": "RIGHT",
            "start_line": 438,
            "start_side": "RIGHT",
            "updated_at": "2020-06-24T20:00:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/445137218",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3514/comments",
    "commit_data": [
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/57fc1bf3ef32b4408b6acb053fc27603adbd3f27/comments",
            "commit": {
                "author": {
                    "date": "2020-04-14T08:20:18Z",
                    "email": "linzhu.ht@alibaba-inc.com",
                    "name": "Tao He"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-23T12:49:22Z",
                    "email": "linzhu.ht@alibaba-inc.com",
                    "name": "Tao He"
                },
                "message": "Fixes CodeWriter for `cdef` functions aka. CFuncDefNode.\n\nSigned-off-by: Tao He <linzhu.ht@alibaba-inc.com>",
                "tree": {
                    "sha": "3c5c5544b247e960509a4e60109662ebbb0df370",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3c5c5544b247e960509a4e60109662ebbb0df370"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/57fc1bf3ef32b4408b6acb053fc27603adbd3f27",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/57fc1bf3ef32b4408b6acb053fc27603adbd3f27",
            "node_id": "MDY6Q29tbWl0MjU1NTQ5MzcwOjU3ZmMxYmYzZWYzMmI0NDA4YjZhY2IwNTNmYzI3NjAzYWRiZDNmMjc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5492c4295ecb97d5d9468cc0fa4a870c32307e53",
                    "sha": "5492c4295ecb97d5d9468cc0fa4a870c32307e53",
                    "url": "https://api.github.com/repos/cython/cython/commits/5492c4295ecb97d5d9468cc0fa4a870c32307e53"
                }
            ],
            "sha": "57fc1bf3ef32b4408b6acb053fc27603adbd3f27",
            "url": "https://api.github.com/repos/cython/cython/commits/57fc1bf3ef32b4408b6acb053fc27603adbd3f27"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d7fd91d5184491dbbe77301f881bc09e787743cd/comments",
            "commit": {
                "author": {
                    "date": "2020-06-23T13:14:02Z",
                    "email": "linzhu.ht@alibaba-inc.com",
                    "name": "Tao He"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-23T13:14:02Z",
                    "email": "linzhu.ht@alibaba-inc.com",
                    "name": "Tao He"
                },
                "message": "Fixes.\n\nSigned-off-by: Tao He <linzhu.ht@alibaba-inc.com>",
                "tree": {
                    "sha": "1192765a5d3ea7e33cfbeb577478250597fb6f57",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1192765a5d3ea7e33cfbeb577478250597fb6f57"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d7fd91d5184491dbbe77301f881bc09e787743cd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/d7fd91d5184491dbbe77301f881bc09e787743cd",
            "node_id": "MDY6Q29tbWl0MjU1NTQ5MzcwOmQ3ZmQ5MWQ1MTg0NDkxZGJiZTc3MzAxZjg4MWJjMDllNzg3NzQzY2Q=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/57fc1bf3ef32b4408b6acb053fc27603adbd3f27",
                    "sha": "57fc1bf3ef32b4408b6acb053fc27603adbd3f27",
                    "url": "https://api.github.com/repos/cython/cython/commits/57fc1bf3ef32b4408b6acb053fc27603adbd3f27"
                }
            ],
            "sha": "d7fd91d5184491dbbe77301f881bc09e787743cd",
            "url": "https://api.github.com/repos/cython/cython/commits/d7fd91d5184491dbbe77301f881bc09e787743cd"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/191f018145777401611c1f8bbc3dc5d47dc4a9af/comments",
            "commit": {
                "author": {
                    "date": "2020-06-24T02:05:26Z",
                    "email": "linzhu.ht@alibaba-inc.com",
                    "name": "Tao He"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-24T02:05:26Z",
                    "email": "linzhu.ht@alibaba-inc.com",
                    "name": "Tao He"
                },
                "message": "Merge remote-tracking branch 'upstream/master' into ht/fix-write-cfunc",
                "tree": {
                    "sha": "6d700e5b4b66afb9ac850254be1430587a726304",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6d700e5b4b66afb9ac850254be1430587a726304"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/191f018145777401611c1f8bbc3dc5d47dc4a9af",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/191f018145777401611c1f8bbc3dc5d47dc4a9af",
            "node_id": "MDY6Q29tbWl0MjU1NTQ5MzcwOjE5MWYwMTgxNDU3Nzc0MDE2MTFjMWY4YmJjM2RjNWQ0N2RjNGE5YWY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d7fd91d5184491dbbe77301f881bc09e787743cd",
                    "sha": "d7fd91d5184491dbbe77301f881bc09e787743cd",
                    "url": "https://api.github.com/repos/cython/cython/commits/d7fd91d5184491dbbe77301f881bc09e787743cd"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/a0e10cf604e62b6a08ba26c87e76d735a58988af",
                    "sha": "a0e10cf604e62b6a08ba26c87e76d735a58988af",
                    "url": "https://api.github.com/repos/cython/cython/commits/a0e10cf604e62b6a08ba26c87e76d735a58988af"
                }
            ],
            "sha": "191f018145777401611c1f8bbc3dc5d47dc4a9af",
            "url": "https://api.github.com/repos/cython/cython/commits/191f018145777401611c1f8bbc3dc5d47dc4a9af"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b8096835745f36aed534bf138d22f35dbf8c58cf/comments",
            "commit": {
                "author": {
                    "date": "2020-06-24T02:24:34Z",
                    "email": "linzhu.ht@alibaba-inc.com",
                    "name": "Tao He"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-24T02:24:34Z",
                    "email": "linzhu.ht@alibaba-inc.com",
                    "name": "Tao He"
                },
                "message": "Fix for the special case for `CSimpleBaseTypeNode` (when name is None).\n\nSigned-off-by: Tao He <linzhu.ht@alibaba-inc.com>",
                "tree": {
                    "sha": "068f9d822bc83eaf146540e8f8ca9cbda3e45ba2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/068f9d822bc83eaf146540e8f8ca9cbda3e45ba2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b8096835745f36aed534bf138d22f35dbf8c58cf",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/b8096835745f36aed534bf138d22f35dbf8c58cf",
            "node_id": "MDY6Q29tbWl0MjU1NTQ5MzcwOmI4MDk2ODM1NzQ1ZjM2YWVkNTM0YmYxMzhkMjJmMzVkYmY4YzU4Y2Y=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/191f018145777401611c1f8bbc3dc5d47dc4a9af",
                    "sha": "191f018145777401611c1f8bbc3dc5d47dc4a9af",
                    "url": "https://api.github.com/repos/cython/cython/commits/191f018145777401611c1f8bbc3dc5d47dc4a9af"
                }
            ],
            "sha": "b8096835745f36aed534bf138d22f35dbf8c58cf",
            "url": "https://api.github.com/repos/cython/cython/commits/b8096835745f36aed534bf138d22f35dbf8c58cf"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3514/commits",
    "created_at": "2020-04-14T08:21:47Z",
    "diff_url": "https://github.com/cython/cython/pull/3514.diff",
    "draft": false,
    "head": {
        "label": "sighingnow:ht/fix-write-cfunc",
        "ref": "ht/fix-write-cfunc",
        "repo": {
            "archive_url": "https://api.github.com/repos/sighingnow/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/sighingnow/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/sighingnow/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/sighingnow/cython/branches{/branch}",
            "clone_url": "https://github.com/sighingnow/cython.git",
            "collaborators_url": "https://api.github.com/repos/sighingnow/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/sighingnow/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/sighingnow/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/sighingnow/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/sighingnow/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/sighingnow/cython/contributors",
            "created_at": "2020-04-14T08:12:42Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/sighingnow/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/sighingnow/cython/downloads",
            "events_url": "https://api.github.com/repos/sighingnow/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/sighingnow/cython/forks",
            "full_name": "sighingnow/cython",
            "git_commits_url": "https://api.github.com/repos/sighingnow/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/sighingnow/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/sighingnow/cython/git/tags{/sha}",
            "git_url": "git://github.com/sighingnow/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/sighingnow/cython/hooks",
            "html_url": "https://github.com/sighingnow/cython",
            "id": 255549370,
            "issue_comment_url": "https://api.github.com/repos/sighingnow/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/sighingnow/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/sighingnow/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/sighingnow/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/sighingnow/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/sighingnow/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/sighingnow/cython/merges",
            "milestones_url": "https://api.github.com/repos/sighingnow/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNTU1NDkzNzA=",
            "notifications_url": "https://api.github.com/repos/sighingnow/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
                "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
                "followers_url": "https://api.github.com/users/sighingnow/followers",
                "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
                "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sighingnow",
                "id": 7144772,
                "login": "sighingnow",
                "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
                "organizations_url": "https://api.github.com/users/sighingnow/orgs",
                "received_events_url": "https://api.github.com/users/sighingnow/received_events",
                "repos_url": "https://api.github.com/users/sighingnow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sighingnow"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/sighingnow/cython/pulls{/number}",
            "pushed_at": "2020-06-24T02:24:51Z",
            "releases_url": "https://api.github.com/repos/sighingnow/cython/releases{/id}",
            "size": 59291,
            "ssh_url": "git@github.com:sighingnow/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/sighingnow/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/sighingnow/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/sighingnow/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/sighingnow/cython/subscription",
            "svn_url": "https://github.com/sighingnow/cython",
            "tags_url": "https://api.github.com/repos/sighingnow/cython/tags",
            "teams_url": "https://api.github.com/repos/sighingnow/cython/teams",
            "trees_url": "https://api.github.com/repos/sighingnow/cython/git/trees{/sha}",
            "updated_at": "2020-04-14T08:12:44Z",
            "url": "https://api.github.com/repos/sighingnow/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "b8096835745f36aed534bf138d22f35dbf8c58cf",
        "user": {
            "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
            "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
            "followers_url": "https://api.github.com/users/sighingnow/followers",
            "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/sighingnow",
            "id": 7144772,
            "login": "sighingnow",
            "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
            "organizations_url": "https://api.github.com/users/sighingnow/orgs",
            "received_events_url": "https://api.github.com/users/sighingnow/received_events",
            "repos_url": "https://api.github.com/users/sighingnow/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/sighingnow"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3514",
    "id": 403039677,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3514",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "d9bcd37fe6cd80f6116b58323a3a9f8cc1781875",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDAzMDM5Njc3",
    "number": 3514,
    "patch_url": "https://github.com/cython/cython/pull/3514.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3514/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/b8096835745f36aed534bf138d22f35dbf8c58cf",
    "title": "Fixes CodeWriter for `cdef` functions aka. CFuncDefNode.",
    "updated_at": "2020-06-24T20:00:24Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3514",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4",
        "events_url": "https://api.github.com/users/sighingnow/events{/privacy}",
        "followers_url": "https://api.github.com/users/sighingnow/followers",
        "following_url": "https://api.github.com/users/sighingnow/following{/other_user}",
        "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sighingnow",
        "id": 7144772,
        "login": "sighingnow",
        "node_id": "MDQ6VXNlcjcxNDQ3NzI=",
        "organizations_url": "https://api.github.com/users/sighingnow/orgs",
        "received_events_url": "https://api.github.com/users/sighingnow/received_events",
        "repos_url": "https://api.github.com/users/sighingnow/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sighingnow"
    }
}