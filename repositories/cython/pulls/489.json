{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/489/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/489/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/489"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/489"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/489/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/489"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/55adbe02b47daf9660e6b36e5043c55b995d3152"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1499,
            "forks_count": 1499,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1403,
            "open_issues_count": 1403,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2025-01-25T09:47:57Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 74985,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 9720,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2025-01-25T14:59:28Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 9720,
            "watchers_count": 9720,
            "web_commit_signoff_required": false
        },
        "sha": "bb05af154a6948c249793ae53b38db6487ff67d8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython",
            "user_view_type": "public"
        }
    },
    "body": "In particular, add C++11 declarations, more const-correctness.\n\nI have added a new file for testing C++11 methods, I think this can be later used to add more tests for container methods and algorithms, which have been added with C++11 and were not tested before, because otherwise these tests will fail on compilers where the default mode is still not C++11.\n",
    "closed_at": "2025-01-22T18:22:21Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1924171319"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1924171319"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Here I noticed that this would break Cython code that previously passed `const_iterator` to `assign`, because Cython is not smart enough about this.\r\n\r\nWhat do you think the strategy should be?\r\n\r\n* Obviously, adding definitions with all possible combinations of `const_iterator` and `iterator` is not feasible.\r\n* Templating as done here leaves the type checking to the compiler, which is not ideal.\r\n\r\nShould I go back and add a test to check that `const_iterator` is accepted here, so it doesn't break in the future?\r\n\r\nWhat about other places where only non-const iterators were accepted, like `erase`, `insert`?\r\n\r\n* Should they be templated?\r\n* Should they be changed to `const_iterator` (possibly breaking older code)?\r\n* Should they be left alone?\r\n",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-21T18:06:52Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1924171319",
            "id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ysIY3",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2565369378,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924171319/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-21T18:06:52Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924171319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1924192542"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1924192542"
                }
            },
            "author_association": "MEMBER",
            "body": "> Templating as done here leaves the type checking to the compiler, which is not ideal.\r\n\r\nI'm somewhat relaxed about passing the type checking to the C++ compiler in general. C++ is complicated and Cython will never end up understanding it as well as the C++ compiler.\r\n\r\nTo me the templated version looks like the right definition (i.e. it matches what the standard says) so we should probably just do that. Because in principle it's any input iterator it takes rather than just vector iterators, right?",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-21T18:25:32Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1924192542",
            "id": 1924192542,
            "in_reply_to_id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ysNke",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2565404616,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924192542/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-21T18:25:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924192542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1924202574"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1924202574"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Because in principle it's any input iterator it takes rather than just vector iterators, right?\r\n\r\nWell, I've actually confounded two problems.\r\n\r\n1. Some overloads are defined as templates, without any further type restrictions:\r\n  ```\r\n  template<class InputIterator>\r\n  basic_string& assign(InputIterator first, InputIterator last);\r\n  ```\r\n  I agree with you here. I would template it in Cython without a second thought.\r\n\r\n2. Some overloads are defined as `const_iterator`, but obviously accept `iterator` as well. Here I'm really not sure what to do (see above):\r\n    1. Leave it as it was defined for whatever reason (?!) - e.g. `const_iterator` just wasn't declared.\r\n    2. Switch everything to `const_iterator` that can accept it, possibly breaking user code\r\n    3. Add templating.",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-21T18:34:39Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1924202574",
            "id": 1924202574,
            "in_reply_to_id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ysQBO",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2565421721,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924202574/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-21T18:34:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924202574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1924227078"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1924227078"
                }
            },
            "author_association": "MEMBER",
            "body": "For the `const_iterator` thing: I think adding templating may cause problems if the function isn't a template function (because Cython insists on generating code like `s.func<SomeIteratorType>(first, second);` which is obviously invalid if `func` isn't a template).\r\n\r\nThe other option which can work is to write the function as `func(...)`, which just says \"the arguments are completely up to the C++ compiler to sort out\". I don't feel too bad about doing this where necessary, but if you do that then Cython can't even help you with the number of arguments. And you often have to define that as the only overload, otherwise Cython treats it as ambiguous.\r\n\r\nIt'd probably help you could could point me at a function where the `iterator`/`const_iterator` is causing problems (since `assign` possibly isn't the best example).",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-21T18:56:46Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1924227078",
            "id": 1924227078,
            "in_reply_to_id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ysWAG",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2565462850,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924227078/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-21T18:56:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924227078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1924259591"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1924259591"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes, let's look at `erase()`. It is now defined as\r\n\r\n```cpp\r\niterator erase(const_iterator position);\r\niterator erase(const_iterator first, const_iterator last);\r\n```\r\n\r\nUp to C++11, it was defined as\r\n\r\n```cpp\r\niterator erase(iterator position);\r\niterator erase(iterator first, iterator last);\r\n```\r\n\r\nwhich is probably where the Cython declaration comes from.\r\n\r\nIf Cython declaration is changed to `const_iterator`, old user code won't compile anymore because Cython won't automatically cast it. If you would leave it as `iterator`, it won't take `const_iterator` :(\r\n\r\nSimilar problem with `insert`, `emplace` (here it was just defined with `const_iterator` as an argument, because it didn't even exist before C++). The same goes for the constructor as well.\r\n",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-21T19:26:40Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1924259591",
            "id": 1924259591,
            "in_reply_to_id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ysd8H",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2565518020,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924259591/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-21T19:26:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924259591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1924261448"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1924261448"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "TODO: if templating - add fake type. Decision pending.",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-21T19:28:19Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1924261448",
            "id": 1924261448,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5yseZI",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 119,
            "original_position": 10,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2565521016,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924261448/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-21T19:28:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924261448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1924860733"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1924860733"
                }
            },
            "author_association": "MEMBER",
            "body": "This should be templated I think because the constructor is for any input iterators rather than just the std::vector ones",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-22T08:04:41Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1924860733",
            "id": 1924860733,
            "in_reply_to_id": 1924261448,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5yuws9",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 119,
            "original_position": 10,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2566446641,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924860733/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-22T08:04:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924860733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1924870360"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1924870360"
                }
            },
            "author_association": "MEMBER",
            "body": "Thanks for the clarification - that makes sense.\r\n\r\nMy feeling is that templates won't work here because of Cython's code generation. I think the most robust way would be to define overloads for both `iterator` and `const_iterator` (but the 2 mixed versions because that seems excessive, and I'm sure people can work it out themselves). That seems reasonable to me in that both definitions have existed in the C++ standard at various times.\r\n\r\nThe other option might be to tell Cython that `iterator` inherits from `const_iterator`. I know that's a lie. But it might catch the idea that you can always pass an `iterator` where it expects a `const_iterator`. I'd be a little nervous that this might have unintended consequences. Especially since it's old code that lots of people are already using. So it might be best not to do this.",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-22T08:12:42Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1924870360",
            "id": 1924870360,
            "in_reply_to_id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5yuzDY",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2566462789,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924870360/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-22T08:12:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1924870360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1925512699"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1925512699"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> My feeling is that templates won't work here because of Cython's code generation. I think the most robust way would be to define overloads for both `iterator` and `const_iterator` (but the 2 mixed versions because that seems excessive, and I'm sure people can work it out themselves). That seems reasonable to me in that both definitions have existed in the C++ standard at various times.\r\n\r\nI've tried templates and they've worked (at least for my limited testing), but it doesn't feel right to me, which is why I brought this up and wanted to get your opinion on it:\r\n\r\n```diff\r\ndiff --git a/Cython/Includes/libcpp/vector.pxd b/Cython/Includes/libcpp/vector.pxd\r\nindex 49444a636..8a2399328 100644\r\n--- a/Cython/Includes/libcpp/vector.pxd\r\n+++ b/Cython/Includes/libcpp/vector.pxd\r\n@@ -139,8 +139,8 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\r\n         iterator end()\r\n         const_iterator const_end \"end\"()\r\n         const_iterator cend()\r\n-        iterator erase(iterator) except +\r\n-        iterator erase(iterator, iterator) except +\r\n+        iterator erase[InputIt](InputIt) except +\r\n+        iterator erase[InputIt](InputIt, InputIt) except +\r\n         T& front()\r\n         iterator insert(iterator, const T&) except +\r\n         iterator insert(iterator, size_type, const T&) except +\r\ndiff --git a/tests/run/cpp_stl_vector.pyx b/tests/run/cpp_stl_vector.pyx\r\nindex 18fffddbd..de7d352e2 100644\r\n--- a/tests/run/cpp_stl_vector.pyx\r\n+++ b/tests/run/cpp_stl_vector.pyx\r\n@@ -63,7 +63,7 @@ def test_modifiers():\r\n     v2.insert(v2.end(), v1.begin(), v1.end())\r\n     v1.clear()\r\n     v2.pop_back()\r\n-    v2.erase(v2.begin())\r\n+    v2.erase(v2.cbegin())\r\n     v2.erase(v2.begin(), v2.end())\r\n     return v1.size(), v2.size()\r\n\r\n```\r\n\r\n> The other option might be to tell Cython that `iterator` inherits from `const_iterator`. I know that's a lie. But it might catch the idea that you can always pass an `iterator` where it expects a `const_iterator`. I'd be a little nervous that this might have unintended consequences. Especially since it's old code that lots of people are already using. So it might be best not to do this.\r\n\r\nYes, this is exactly how it was done when I did my rewrite (0a51a899d691be6ab62d86429e2bd24b69f7c8a7). However, in 169876872f3cb6198971a1db07e5b8a9d12b3dac it has been changed to the current definitions to make everything much stricter/type-safe.\r\n\r\nSo, if I understand you correctly, you would prefer to ship something like this, and that's what you would accept:\r\n\r\n```diff\r\ndiff --git a/Cython/Includes/libcpp/vector.pxd b/Cython/Includes/libcpp/vector.pxd\r\nindex 49444a636..d853270a2 100644\r\n--- a/Cython/Includes/libcpp/vector.pxd\r\n+++ b/Cython/Includes/libcpp/vector.pxd\r\n@@ -141,6 +141,8 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\r\n         const_iterator cend()\r\n         iterator erase(iterator) except +\r\n         iterator erase(iterator, iterator) except +\r\n+        iterator erase(const_iterator) except +\r\n+        iterator erase(const_iterator, const_iterator) except +\r\n         T& front()\r\n         iterator insert(iterator, const T&) except +\r\n         iterator insert(iterator, size_type, const T&) except +\r\n```\r\n\r\nIf that's the case, that's fine with me.",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-22T15:22:42Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1925512699",
            "id": 1925512699,
            "in_reply_to_id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5yxP37",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2567531409,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1925512699/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-22T15:22:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1925512699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1925766342"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1925766342"
                }
            },
            "author_association": "MEMBER",
            "body": "I've double checked the code generation, and it looks like the generated code spells out the template types for free functions but not for methods. (I'm not sure why exactly). So the templated version is fine I think. What I was mostly worried about is the generated code reading `v.erase<std::vector<double>::iterator>(it1, it2)`; but it doesn't do this so no problem",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-22T18:16:06Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1925766342",
            "id": 1925766342,
            "in_reply_to_id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5yyNzG",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2567949910,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1925766342/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-22T18:16:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1925766342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/489#discussion_r1928982653"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/489"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1928982653"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've opened #6631 for `const_iterator` versions. I think that given the number of combinations, the template abuse is not worth it.",
            "commit_id": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "created_at": "2025-01-24T16:57:11Z",
            "diff_hunk": "@@ -113,20 +113,20 @@ cdef extern from \"<vector>\" namespace \"std\" nogil:\n             bint operator>=(const_reverse_iterator)\n \n         vector() except +\n-        vector(vector&) except +\n+        vector(const vector&) except +\n         vector(size_type) except +\n-        vector(size_type, T&) except +\n-        #vector[InputIt](InputIt, InputIt)\n+        vector(size_type, const T&) except +\n+        vector(iterator, iterator) except +\n         T& operator[](size_type)\n         #vector& operator=(vector&)\n-        bint operator==(vector&, vector&)\n-        bint operator!=(vector&, vector&)\n-        bint operator<(vector&, vector&)\n-        bint operator>(vector&, vector&)\n-        bint operator<=(vector&, vector&)\n-        bint operator>=(vector&, vector&)\n+        bint operator==(const vector&, const vector&)\n+        bint operator!=(const vector&, const vector&)\n+        bint operator<(const vector&, const vector&)\n+        bint operator>(const vector&, const vector&)\n+        bint operator<=(const vector&, const vector&)\n+        bint operator>=(const vector&, const vector&)\n         void assign(size_type, const T&)\n-        void assign[InputIt](InputIt, InputIt) except +\n+        void assign(iterator, iterator) except +",
            "html_url": "https://github.com/cython/cython/pull/489#discussion_r1928982653",
            "id": 1928982653,
            "in_reply_to_id": 1924171319,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5y-fB9",
            "original_commit_id": "6c0829b34c7c73c4a0a8030c4b04ba2c8694568e",
            "original_line": 129,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/vector.pxd",
            "position": null,
            "pull_request_review_id": 2573155289,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/489",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1928982653/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-24T16:57:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1928982653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/489/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/55adbe02b47daf9660e6b36e5043c55b995d3152/comments",
            "commit": {
                "author": {
                    "date": "2025-01-21T17:24:06Z",
                    "email": "yury@shurup.com",
                    "name": "Yury V. Zaytsev"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-01-22T15:08:14Z",
                    "email": "yury@shurup.com",
                    "name": "Yury V. Zaytsev"
                },
                "message": "ENH: Extend libcpp.vector and cover API with tests\n\nIn particular, add C++11 declaration, `except +`, and more const-correctness.",
                "tree": {
                    "sha": "558f6a6b18982c5525cd7a17d2bc9271c897a0c2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/558f6a6b18982c5525cd7a17d2bc9271c897a0c2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/55adbe02b47daf9660e6b36e5043c55b995d3152",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/55adbe02b47daf9660e6b36e5043c55b995d3152",
            "node_id": "C_kwDOAHlzttoAKDU1YWRiZTAyYjQ3ZGFmOTY2MGU2YjM2ZTUwNDNjNTViOTk1ZDMxNTI",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bb05af154a6948c249793ae53b38db6487ff67d8",
                    "sha": "bb05af154a6948c249793ae53b38db6487ff67d8",
                    "url": "https://api.github.com/repos/cython/cython/commits/bb05af154a6948c249793ae53b38db6487ff67d8"
                }
            ],
            "sha": "55adbe02b47daf9660e6b36e5043c55b995d3152",
            "url": "https://api.github.com/repos/cython/cython/commits/55adbe02b47daf9660e6b36e5043c55b995d3152"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/489/commits",
    "created_at": "2016-02-15T10:37:44Z",
    "diff_url": "https://github.com/cython/cython/pull/489.diff",
    "draft": false,
    "head": {
        "label": "zyv:libcpp-vector-cpp11",
        "ref": "libcpp-vector-cpp11",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/zyv/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/zyv/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/zyv/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/zyv/cython/branches{/branch}",
            "clone_url": "https://github.com/zyv/cython.git",
            "collaborators_url": "https://api.github.com/repos/zyv/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/zyv/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/zyv/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/zyv/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/zyv/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/zyv/cython/contributors",
            "created_at": "2013-02-01T14:26:53Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/zyv/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/zyv/cython/downloads",
            "events_url": "https://api.github.com/repos/zyv/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/zyv/cython/forks",
            "full_name": "zyv/cython",
            "git_commits_url": "https://api.github.com/repos/zyv/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/zyv/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/zyv/cython/git/tags{/sha}",
            "git_url": "git://github.com/zyv/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/zyv/cython/hooks",
            "html_url": "https://github.com/zyv/cython",
            "id": 7959478,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/zyv/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/zyv/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/zyv/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/zyv/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/zyv/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/zyv/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/zyv/cython/merges",
            "milestones_url": "https://api.github.com/repos/zyv/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnk3OTU5NDc4",
            "notifications_url": "https://api.github.com/repos/zyv/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
                "events_url": "https://api.github.com/users/zyv/events{/privacy}",
                "followers_url": "https://api.github.com/users/zyv/followers",
                "following_url": "https://api.github.com/users/zyv/following{/other_user}",
                "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zyv",
                "id": 607401,
                "login": "zyv",
                "node_id": "MDQ6VXNlcjYwNzQwMQ==",
                "organizations_url": "https://api.github.com/users/zyv/orgs",
                "received_events_url": "https://api.github.com/users/zyv/received_events",
                "repos_url": "https://api.github.com/users/zyv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zyv",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/zyv/cython/pulls{/number}",
            "pushed_at": "2025-01-25T13:41:47Z",
            "releases_url": "https://api.github.com/repos/zyv/cython/releases{/id}",
            "size": 74302,
            "ssh_url": "git@github.com:zyv/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/zyv/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/zyv/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/zyv/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/zyv/cython/subscription",
            "svn_url": "https://github.com/zyv/cython",
            "tags_url": "https://api.github.com/repos/zyv/cython/tags",
            "teams_url": "https://api.github.com/repos/zyv/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/zyv/cython/git/trees{/sha}",
            "updated_at": "2016-02-10T09:10:40Z",
            "url": "https://api.github.com/repos/zyv/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "55adbe02b47daf9660e6b36e5043c55b995d3152",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
            "events_url": "https://api.github.com/users/zyv/events{/privacy}",
            "followers_url": "https://api.github.com/users/zyv/followers",
            "following_url": "https://api.github.com/users/zyv/following{/other_user}",
            "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zyv",
            "id": 607401,
            "login": "zyv",
            "node_id": "MDQ6VXNlcjYwNzQwMQ==",
            "organizations_url": "https://api.github.com/users/zyv/orgs",
            "received_events_url": "https://api.github.com/users/zyv/received_events",
            "repos_url": "https://api.github.com/users/zyv/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zyv",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/489",
    "id": 59346014,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/489",
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425561823,
            "name": "Library",
            "node_id": "MDU6TGFiZWw0MjU1NjE4MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/Library"
        }
    ],
    "locked": false,
    "merge_commit_sha": "d0f4cff1bac256ab37e6667668d73a3990fe6393",
    "merged_at": "2025-01-22T18:22:21Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 321,
        "created_at": "2019-02-24T14:21:23Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder",
            "user_view_type": "public"
        },
        "description": "* Remove code for Python 2 and Python < 3.8.\r\n* Integrate better with Python 3.\r\n* Improve support for the Limited API.\r\n* Start supporting GIL-free Python 3.13.\r\n* Support the Py3.13 `sys.monitoring` API.\r\n* Support and use `am_send` for coroutines.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/65",
        "id": 4082235,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/65/labels",
        "node_id": "MDk6TWlsZXN0b25lNDA4MjIzNQ==",
        "number": 65,
        "open_issues": 19,
        "state": "open",
        "title": "3.1",
        "updated_at": "2025-01-25T09:47:58Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/65"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTkzNDYwMTQ=",
    "number": 489,
    "patch_url": "https://github.com/cython/cython/pull/489.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/489/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/55adbe02b47daf9660e6b36e5043c55b995d3152",
    "title": "ENH: Restructure libcpp.vector and cover API with tests",
    "updated_at": "2025-01-24T16:57:11Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/489",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/607401?v=4",
        "events_url": "https://api.github.com/users/zyv/events{/privacy}",
        "followers_url": "https://api.github.com/users/zyv/followers",
        "following_url": "https://api.github.com/users/zyv/following{/other_user}",
        "gists_url": "https://api.github.com/users/zyv/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zyv",
        "id": 607401,
        "login": "zyv",
        "node_id": "MDQ6VXNlcjYwNzQwMQ==",
        "organizations_url": "https://api.github.com/users/zyv/orgs",
        "received_events_url": "https://api.github.com/users/zyv/received_events",
        "repos_url": "https://api.github.com/users/zyv/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zyv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zyv/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zyv",
        "user_view_type": "public"
    }
}