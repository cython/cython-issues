{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/4005/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4005/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/4005"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/4005"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4005/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4005"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/5c49542d3111fd14c6bee97bfff47df80996541f"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1127,
            "forks_count": 1127,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 963,
            "open_issues_count": 963,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2021-04-01T13:31:00Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 61768,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 5957,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2021-04-01T13:31:05Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 5957,
            "watchers_count": 5957
        },
        "sha": "c2fea5bf4a6e011a039f8764862bb6338a2ae546",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Fixes https://github.com/cython/cython/issues/3537\r\n\r\nBoth the C code and the tests are largely copied from CPython\r\nso hopefully should be pretty reliable.\r\n\r\nThis doesn't backport perfectly so I've hard to disable a few\r\ntests of Python 2 (and may have to on earlier Python 3 versions too).\r\nI think that's OK.\r\n\r\nI haven't applied this at all to cdef classes. Maybe it could be\r\napplied to the second+subsequent bases but I don't think it's\r\nneeded for the initial implementation.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r576426680"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/576426680"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd rather add another underscore to make this name easier to read: `__Pyx_PEP560_update_bases`.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-02-15T21:19:16Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560update_bases(PyObject *bases); /* proto */",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r576426680",
            "id": 576426680,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjQyNjY4MA==",
            "original_commit_id": "66f291a017cf403868968abdeea3dd8a84b7a7d8",
            "original_line": 1029,
            "original_position": 6,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 590757397,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/576426680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r576428259"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/576428259"
                }
            },
            "author_association": "MEMBER",
            "body": "The `CFuncType` looks constant. I'd keep it in the class rather than (re-)building it at need.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-02-15T21:21:24Z",
            "diff_hunk": "@@ -4888,6 +4889,19 @@ def analyse_declarations(self, env):\n         self.class_result.analyse_annotations(cenv)\n \n     def analyse_expressions(self, env):\n+        if self.bases and not (self.bases.is_sequence_constructor and len(self.bases.args)==0):\n+            from .ExprNodes import PythonCapiCallNode, CloneNode\n+            # handle the Python 3.7 __mro_entries__ transformation\n+            orig_bases = self.bases.analyse_expressions(env)\n+            self.bases = PythonCapiCallNode(orig_bases.pos,\n+                function_name = \"__Pyx_PEP560update_bases\",\n+                func_type = PyrexTypes.CFuncType(",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r576428259",
            "id": 576428259,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjQyODI1OQ==",
            "original_commit_id": "66f291a017cf403868968abdeea3dd8a84b7a7d8",
            "original_line": 4898,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 590757397,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/576428259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604410784"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604410784"
                }
            },
            "author_association": "MEMBER",
            "body": "Make sure this doesn't show up in the C files. The comment removal isn't that smart (and shouldn't have to be).\r\n```suggestion\r\n            // If this is a first successful replacement, create new_bases list and\r\n            // copy previously encountered bases.\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:30:56Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */\n+        if (PyType_Check(base)) {\n+            if (new_bases) {\n+                /* If we already have made a replacement, then we append every normal base,\n+                   otherwise just skip it. */\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        /* original code in CPython:\n+         * if (_PyObject_LookupAttrId(base, &PyId___mro_entries__, &meth) < 0) {\n+         */\n+        meth = __Pyx_PyObject_GetAttrStrNoError(base, PYIDENT(\"__mro_entries__\"));\n+        if (!meth && PyErr_Occurred()) {\n+            goto error;\n+        }\n+        if (!meth) {\n+            if (new_bases) {\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        new_base = __Pyx_PyObject_CallOneArg(meth, bases);\n+        Py_DECREF(meth);\n+        if (!new_base) {\n+            goto error;\n+        }\n+        if (!PyTuple_Check(new_base)) {\n+            PyErr_SetString(PyExc_TypeError,\n+                            \"__mro_entries__ must return a tuple\");\n+            Py_DECREF(new_base);\n+            goto error;\n+        }\n+        if (!new_bases) {\n+            /* If this is a first successful replacement, create new_bases list and\n+               copy previously encountered bases. */",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604410784",
            "id": 604410784,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxMDc4NA==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1083,
            "original_position": 60,
            "original_start_line": 1082,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604410784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604411058"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604411058"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                // If we already have made a replacement, then we append every normal base,\r\n                // otherwise just skip it.\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:31:21Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */\n+        if (PyType_Check(base)) {\n+            if (new_bases) {\n+                /* If we already have made a replacement, then we append every normal base,\n+                   otherwise just skip it. */",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604411058",
            "id": 604411058,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxMTA1OA==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1048,
            "original_position": 25,
            "original_start_line": 1047,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604411058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604411303"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604411303"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        // original code in CPython: base  = args[i];\r\n        base  = PyTuple_GET_ITEM(bases, i);\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:31:51Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604411303",
            "id": 604411303,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxMTMwMw==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1044,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604411303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604411859"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604411859"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm aware that this is a trivial macro in CPython, but it may not be in other Pythons, so better copy it into a constant.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:32:46Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604411859",
            "id": 604411859,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxMTg1OQ==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1043,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604411859",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604412114"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604412114"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        // original code in CPython:\r\n        // if (_PyObject_LookupAttrId(base, &PyId___mro_entries__, &meth) < 0) {\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:33:12Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */\n+        if (PyType_Check(base)) {\n+            if (new_bases) {\n+                /* If we already have made a replacement, then we append every normal base,\n+                   otherwise just skip it. */\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        /* original code in CPython:\n+         * if (_PyObject_LookupAttrId(base, &PyId___mro_entries__, &meth) < 0) {\n+         */",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604412114",
            "id": 604412114,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxMjExNA==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1057,
            "original_position": 34,
            "original_start_line": 1055,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604412114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604413368"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604413368"
                }
            },
            "author_association": "MEMBER",
            "body": "This is probably good enough, but note that it's not a perfect replacement. The (non-public) \"Lookup*\" C-API functions really only do a lookup in the type's dict and do not invoke anything further of the attribute lookup machinery.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:35:23Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */\n+        if (PyType_Check(base)) {\n+            if (new_bases) {\n+                /* If we already have made a replacement, then we append every normal base,\n+                   otherwise just skip it. */\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        /* original code in CPython:\n+         * if (_PyObject_LookupAttrId(base, &PyId___mro_entries__, &meth) < 0) {\n+         */\n+        meth = __Pyx_PyObject_GetAttrStrNoError(base, PYIDENT(\"__mro_entries__\"));",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604413368",
            "id": 604413368,
            "line": 1059,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxMzM2OA==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1058,
            "original_position": 35,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 36,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604413368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604413931"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604413931"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                // original code in CPython: base = args[j];\r\n                base = PyTuple_GET_ITEM(bases, j);\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:36:13Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */\n+        if (PyType_Check(base)) {\n+            if (new_bases) {\n+                /* If we already have made a replacement, then we append every normal base,\n+                   otherwise just skip it. */\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        /* original code in CPython:\n+         * if (_PyObject_LookupAttrId(base, &PyId___mro_entries__, &meth) < 0) {\n+         */\n+        meth = __Pyx_PyObject_GetAttrStrNoError(base, PYIDENT(\"__mro_entries__\"));\n+        if (!meth && PyErr_Occurred()) {\n+            goto error;\n+        }\n+        if (!meth) {\n+            if (new_bases) {\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        new_base = __Pyx_PyObject_CallOneArg(meth, bases);\n+        Py_DECREF(meth);\n+        if (!new_base) {\n+            goto error;\n+        }\n+        if (!PyTuple_Check(new_base)) {\n+            PyErr_SetString(PyExc_TypeError,\n+                            \"__mro_entries__ must return a tuple\");\n+            Py_DECREF(new_base);\n+            goto error;\n+        }\n+        if (!new_bases) {\n+            /* If this is a first successful replacement, create new_bases list and\n+               copy previously encountered bases. */\n+            if (!(new_bases = PyList_New(i))) {\n+                goto error;\n+            }\n+            for (j = 0; j < i; j++) {\n+                base = PyTuple_GET_ITEM(bases, j); /* original code in CPython: base = args[j]; */",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604413931",
            "id": 604413931,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxMzkzMQ==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1088,
            "original_position": 65,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604413931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604414165"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604414165"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        // unlike the CPython implementation, always return a new reference\r\n        Py_INCREF(bases);\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:36:38Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */\n+        if (PyType_Check(base)) {\n+            if (new_bases) {\n+                /* If we already have made a replacement, then we append every normal base,\n+                   otherwise just skip it. */\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        /* original code in CPython:\n+         * if (_PyObject_LookupAttrId(base, &PyId___mro_entries__, &meth) < 0) {\n+         */\n+        meth = __Pyx_PyObject_GetAttrStrNoError(base, PYIDENT(\"__mro_entries__\"));\n+        if (!meth && PyErr_Occurred()) {\n+            goto error;\n+        }\n+        if (!meth) {\n+            if (new_bases) {\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        new_base = __Pyx_PyObject_CallOneArg(meth, bases);\n+        Py_DECREF(meth);\n+        if (!new_base) {\n+            goto error;\n+        }\n+        if (!PyTuple_Check(new_base)) {\n+            PyErr_SetString(PyExc_TypeError,\n+                            \"__mro_entries__ must return a tuple\");\n+            Py_DECREF(new_base);\n+            goto error;\n+        }\n+        if (!new_bases) {\n+            /* If this is a first successful replacement, create new_bases list and\n+               copy previously encountered bases. */\n+            if (!(new_bases = PyList_New(i))) {\n+                goto error;\n+            }\n+            for (j = 0; j < i; j++) {\n+                base = PyTuple_GET_ITEM(bases, j); /* original code in CPython: base = args[j]; */\n+                PyList_SET_ITEM(new_bases, j, base);\n+                Py_INCREF(base);\n+            }\n+        }\n+        j = PyList_GET_SIZE(new_bases);\n+        if (PyList_SetSlice(new_bases, j, j, new_base) < 0) {\n+            goto error;\n+        }\n+        Py_DECREF(new_base);\n+    }\n+    if (!new_bases) {\n+        Py_INCREF(bases); /* unlike the CPython implementation, always return a new reference */",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604414165",
            "id": 604414165,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxNDE2NQ==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1100,
            "original_position": 77,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604414165",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604415691"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604415691"
                }
            },
            "author_association": "MEMBER",
            "body": "This needs error handling.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:39:04Z",
            "diff_hunk": "@@ -4910,13 +4926,23 @@ def generate_execution_code(self, code):\n         code.mark_pos(self.pos)\n         code.pyclass_stack.append(self)\n         cenv = self.scope\n+        if self.orig_bases:\n+            self.orig_bases.generate_evaluation_code(code)\n         if self.bases:\n             self.bases.generate_evaluation_code(code)\n         if self.mkw:\n             self.mkw.generate_evaluation_code(code)\n         if self.metaclass:\n             self.metaclass.generate_evaluation_code(code)\n         self.dict.generate_evaluation_code(code)\n+        if self.orig_bases:\n+            # update __orig_bases__ if needed\n+            code.putln(\"if (%s != %s) {\" % (self.bases.result(), self.orig_bases.result()))\n+            code.putln('PyDict_SetItemString(%s, \"__orig_bases__\", %s);' % (\n+                self.dict.result(), self.orig_bases.result()))",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604415691",
            "id": 604415691,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxNTY5MQ==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 4942,
            "original_position": 48,
            "original_start_line": 4941,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604415691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604416713"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604416713"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                function_name=\"__Pyx_PEP560_update_bases\",\r\n                func_type=self.update_bases_functype,\r\n                utility_code=UtilityCode.load_cached('Py3UpdateBases', 'ObjectHandling.c'),\r\n                args=[CloneNode(orig_bases)])\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:40:50Z",
            "diff_hunk": "@@ -4887,7 +4888,22 @@ def analyse_declarations(self, env):\n         self.body.analyse_declarations(cenv)\n         self.class_result.analyse_annotations(cenv)\n \n+    update_bases_functype = PyrexTypes.CFuncType(\n+                    PyrexTypes.py_object_type, [\n+                        PyrexTypes.CFuncTypeArg(\"bases\",  PyrexTypes.py_object_type, None)\n+                        ])\n+\n     def analyse_expressions(self, env):\n+        if self.bases and not (self.bases.is_sequence_constructor and len(self.bases.args)==0):\n+            from .ExprNodes import PythonCapiCallNode, CloneNode\n+            # handle the Python 3.7 __mro_entries__ transformation\n+            orig_bases = self.bases.analyse_expressions(env)\n+            self.bases = PythonCapiCallNode(orig_bases.pos,\n+                function_name = \"__Pyx_PEP560_update_bases\",\n+                func_type = self.update_bases_functype,\n+                utility_code = UtilityCode.load_cached('Py3UpdateBases', 'ObjectHandling.c'),\n+                args=[CloneNode(orig_bases)])",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604416713",
            "id": 604416713,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxNjcxMw==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 4905,
            "original_position": 26,
            "original_start_line": 4902,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604416713",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604417438"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604417438"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    update_bases_functype = PyrexTypes.CFuncType(\r\n        PyrexTypes.py_object_type, [\r\n            PyrexTypes.CFuncTypeArg(\"bases\",  PyrexTypes.py_object_type, None)\r\n        ])\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:42:03Z",
            "diff_hunk": "@@ -4887,7 +4888,22 @@ def analyse_declarations(self, env):\n         self.body.analyse_declarations(cenv)\n         self.class_result.analyse_annotations(cenv)\n \n+    update_bases_functype = PyrexTypes.CFuncType(\n+                    PyrexTypes.py_object_type, [\n+                        PyrexTypes.CFuncTypeArg(\"bases\",  PyrexTypes.py_object_type, None)\n+                        ])",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604417438",
            "id": 604417438,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxNzQzOA==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 4894,
            "original_position": 15,
            "original_start_line": 4891,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604417438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604418149"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604418149"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if self.bases and not (self.bases.is_sequence_constructor and len(self.bases.args) == 0):\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:43:21Z",
            "diff_hunk": "@@ -4887,7 +4888,22 @@ def analyse_declarations(self, env):\n         self.body.analyse_declarations(cenv)\n         self.class_result.analyse_annotations(cenv)\n \n+    update_bases_functype = PyrexTypes.CFuncType(\n+                    PyrexTypes.py_object_type, [\n+                        PyrexTypes.CFuncTypeArg(\"bases\",  PyrexTypes.py_object_type, None)\n+                        ])\n+\n     def analyse_expressions(self, env):\n+        if self.bases and not (self.bases.is_sequence_constructor and len(self.bases.args)==0):",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604418149",
            "id": 604418149,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQxODE0OQ==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 4897,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604418149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604420172"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604420172"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe not for this PR, but I wonder if we need to handle the \"empty tuple\" case at all. Isn't that something we can normalise away?",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-30T20:46:48Z",
            "diff_hunk": "@@ -4887,7 +4888,22 @@ def analyse_declarations(self, env):\n         self.body.analyse_declarations(cenv)\n         self.class_result.analyse_annotations(cenv)\n \n+    update_bases_functype = PyrexTypes.CFuncType(\n+                    PyrexTypes.py_object_type, [\n+                        PyrexTypes.CFuncTypeArg(\"bases\",  PyrexTypes.py_object_type, None)\n+                        ])\n+\n     def analyse_expressions(self, env):\n+        if self.bases and not (self.bases.is_sequence_constructor and len(self.bases.args)==0):",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604420172",
            "id": 604420172,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDQyMDE3Mg==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 4897,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 624677106,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604420172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604650240"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604650240"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "https://github.com/python/cpython/blob/32bd68c839adb7b42af12366ab0892303115d1d1/Objects/object.c#L916 `_PyObject_LookupAttr` does look to call `getattr` and `gettattro` if they exist.\r\n\r\nI'm sure it's not a perfect replacement though. That's mainly why I left the \"original code in CPython\" comments, so we'd stand a better chance of working out what's gone wrong when one of the replacements isn't right.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-31T07:15:09Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */\n+        if (PyType_Check(base)) {\n+            if (new_bases) {\n+                /* If we already have made a replacement, then we append every normal base,\n+                   otherwise just skip it. */\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        /* original code in CPython:\n+         * if (_PyObject_LookupAttrId(base, &PyId___mro_entries__, &meth) < 0) {\n+         */\n+        meth = __Pyx_PyObject_GetAttrStrNoError(base, PYIDENT(\"__mro_entries__\"));",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604650240",
            "id": 604650240,
            "in_reply_to_id": 604413368,
            "line": 1059,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDY1MDI0MA==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1058,
            "original_position": 35,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 36,
            "pull_request_review_id": 624962288,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604650240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604665118"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604665118"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I've not made any changes here.\r\n\r\nAs far as I can tell the `self.bases` check never fails (even for classes with no bases it's always assigned to an empty tuple). Therefore, I think that could go in principle (from both this and from existing code). It's possible I've missed a corner-case where it's useful though.\r\n\r\nExplicitly handling an empty tuple is just a small optimization. We don't need to do it though - there's no issue with passing an empty tuple to `__Pyx_PEP560_update_bases`.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-31T07:39:43Z",
            "diff_hunk": "@@ -4887,7 +4888,22 @@ def analyse_declarations(self, env):\n         self.body.analyse_declarations(cenv)\n         self.class_result.analyse_annotations(cenv)\n \n+    update_bases_functype = PyrexTypes.CFuncType(\n+                    PyrexTypes.py_object_type, [\n+                        PyrexTypes.CFuncTypeArg(\"bases\",  PyrexTypes.py_object_type, None)\n+                        ])\n+\n     def analyse_expressions(self, env):\n+        if self.bases and not (self.bases.is_sequence_constructor and len(self.bases.args)==0):",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604665118",
            "id": 604665118,
            "in_reply_to_id": 604420172,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDY2NTExOA==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 4897,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 624982029,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604665118",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604755188"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604755188"
                }
            },
            "author_association": "MEMBER",
            "body": "The usual method in this case is `error_goto_if_neg()`.\r\n```suggestion\r\n                code.error_goto_if_neg('PyDict_SetItemString(%s, \"__orig_bases__\", %s)' % (\r\n```",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-31T09:49:11Z",
            "diff_hunk": "@@ -4910,13 +4926,26 @@ def generate_execution_code(self, code):\n         code.mark_pos(self.pos)\n         code.pyclass_stack.append(self)\n         cenv = self.scope\n+        if self.orig_bases:\n+            self.orig_bases.generate_evaluation_code(code)\n         if self.bases:\n             self.bases.generate_evaluation_code(code)\n         if self.mkw:\n             self.mkw.generate_evaluation_code(code)\n         if self.metaclass:\n             self.metaclass.generate_evaluation_code(code)\n         self.dict.generate_evaluation_code(code)\n+        if self.orig_bases:\n+            # update __orig_bases__ if needed\n+            code.putln(\"if (%s != %s) {\" % (self.bases.result(), self.orig_bases.result()))\n+            code.putln(\n+                code.error_goto_if('PyDict_SetItemString(%s, \"__orig_bases__\", %s) == -1' % (",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604755188",
            "id": 604755188,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc1NTE4OA==",
            "original_commit_id": "1effa99c7d9787c0dc80e6a81c9d037c430cf6bb",
            "original_line": 4942,
            "original_position": 48,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 625100408,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604755188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r604759001"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/604759001"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, ok, I stand corrected. I was confusing it with `PyType_Lookup()`. I guess the `Lookup` hint just tries to set the name apart from the usual signature that returns the object directly, instead of an error marker as done here.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-03-31T09:54:57Z",
            "diff_hunk": "@@ -1024,6 +1024,91 @@ static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *na\n     return result;\n }\n \n+/////////////// Py3UpdateBases.proto ///////////////\n+\n+static PyObject* __Pyx_PEP560_update_bases(PyObject *bases); /* proto */\n+\n+/////////////// Py3UpdateBases /////////////////////\n+//@requires: PyObjectCallOneArg\n+//@requires: PyObjectGetAttrStrNoError\n+\n+/* Shamelessly adapted from cpython/bltinmodule.c update_bases */\n+static PyObject*\n+__Pyx_PEP560_update_bases(PyObject *bases)\n+{\n+    Py_ssize_t i, j;\n+    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;\n+    /*assert(PyTuple_Check(bases));*/\n+\n+    for (i = 0; i < PyTuple_GET_SIZE(bases); i++) {\n+        base  = PyTuple_GET_ITEM(bases, i); /* original code in CPython: base  = args[i]; */\n+        if (PyType_Check(base)) {\n+            if (new_bases) {\n+                /* If we already have made a replacement, then we append every normal base,\n+                   otherwise just skip it. */\n+                if (PyList_Append(new_bases, base) < 0) {\n+                    goto error;\n+                }\n+            }\n+            continue;\n+        }\n+        /* original code in CPython:\n+         * if (_PyObject_LookupAttrId(base, &PyId___mro_entries__, &meth) < 0) {\n+         */\n+        meth = __Pyx_PyObject_GetAttrStrNoError(base, PYIDENT(\"__mro_entries__\"));",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r604759001",
            "id": 604759001,
            "in_reply_to_id": 604413368,
            "line": 1059,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc1OTAwMQ==",
            "original_commit_id": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "original_line": 1058,
            "original_position": 35,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 36,
            "pull_request_review_id": 625100408,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-31T09:56:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/604759001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4005#discussion_r605558718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4005"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/605558718"
                }
            },
            "author_association": "MEMBER",
            "body": "This also needs to be added to `child_attrs` to make sure it gets properly traversed. `CloneNode` blocks the traversal.\r\nAnd please also document it in the comments above.",
            "commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "created_at": "2021-04-01T10:47:22Z",
            "diff_hunk": "@@ -4762,6 +4762,7 @@ class PyClassDefNode(ClassDefNode):\n     metaclass = None\n     mkw = None\n     doc_node = None\n+    orig_bases = None",
            "html_url": "https://github.com/cython/cython/pull/4005#discussion_r605558718",
            "id": 605558718,
            "line": 4765,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTU1ODcxOA==",
            "original_commit_id": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "original_line": 4765,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": 4,
            "pull_request_review_id": 626133875,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4005",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-01T10:47:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/605558718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4005/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2e2ac2eb67d450065e5b324db3cd1a9bc3087663/comments",
            "commit": {
                "author": {
                    "date": "2021-02-12T18:21:31Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-02-12T18:21:31Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Implement PEP560 inheritance (__mro_entries__)\n\nFixes https://github.com/cython/cython/issues/3537\n\nBoth the C code and the tests are largely copied from CPython\nso hopefully should be pretty reliable.\n\nThis doesn't backport perfectly so I've hard to disable a few\ntests of Python 2 (and may have to on earlier Python 3 versions too).\nI think that's OK.\n\nI haven't applied this at all to cdef classes. Maybe it could be\napplied to the second+subsequent bases but I don't think it's\nneeded for the initial implementation.",
                "tree": {
                    "sha": "542e165b51710883d3eb05f8dd4db1e59d084754",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/542e165b51710883d3eb05f8dd4db1e59d084754"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2e2ac2eb67d450065e5b324db3cd1a9bc3087663",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/2e2ac2eb67d450065e5b324db3cd1a9bc3087663",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MmUyYWMyZWI2N2Q0NTAwNjVlNWIzMjRkYjNjZDFhOWJjMzA4NzY2Mw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/17e03b8658a07b6d6da49300b39b57ed9c59ddb1",
                    "sha": "17e03b8658a07b6d6da49300b39b57ed9c59ddb1",
                    "url": "https://api.github.com/repos/cython/cython/commits/17e03b8658a07b6d6da49300b39b57ed9c59ddb1"
                }
            ],
            "sha": "2e2ac2eb67d450065e5b324db3cd1a9bc3087663",
            "url": "https://api.github.com/repos/cython/cython/commits/2e2ac2eb67d450065e5b324db3cd1a9bc3087663"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8590d41b42f6c2ffce0d54c8595e92a4a57d818d/comments",
            "commit": {
                "author": {
                    "date": "2021-02-12T20:22:21Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-02-12T20:22:21Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed compilercrash with *bases",
                "tree": {
                    "sha": "380bc4c6c603037cd72233998147045d71f80405",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/380bc4c6c603037cd72233998147045d71f80405"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8590d41b42f6c2ffce0d54c8595e92a4a57d818d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/8590d41b42f6c2ffce0d54c8595e92a4a57d818d",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ODU5MGQ0MWI0MmY2YzJmZmNlMGQ1NGM4NTk1ZTkyYTRhNTdkODE4ZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2e2ac2eb67d450065e5b324db3cd1a9bc3087663",
                    "sha": "2e2ac2eb67d450065e5b324db3cd1a9bc3087663",
                    "url": "https://api.github.com/repos/cython/cython/commits/2e2ac2eb67d450065e5b324db3cd1a9bc3087663"
                }
            ],
            "sha": "8590d41b42f6c2ffce0d54c8595e92a4a57d818d",
            "url": "https://api.github.com/repos/cython/cython/commits/8590d41b42f6c2ffce0d54c8595e92a4a57d818d"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/66f291a017cf403868968abdeea3dd8a84b7a7d8/comments",
            "commit": {
                "author": {
                    "date": "2021-02-12T22:19:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-02-12T22:19:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Skipped test where support isn't present in CPython",
                "tree": {
                    "sha": "fb4e4130f6e5ad061a8d37dcfb6ecf254d6920c0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fb4e4130f6e5ad061a8d37dcfb6ecf254d6920c0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/66f291a017cf403868968abdeea3dd8a84b7a7d8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/66f291a017cf403868968abdeea3dd8a84b7a7d8",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjZmMjkxYTAxN2NmNDAzODY4OTY4YWJkZWVhM2RkOGE4NGI3YTdkOA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8590d41b42f6c2ffce0d54c8595e92a4a57d818d",
                    "sha": "8590d41b42f6c2ffce0d54c8595e92a4a57d818d",
                    "url": "https://api.github.com/repos/cython/cython/commits/8590d41b42f6c2ffce0d54c8595e92a4a57d818d"
                }
            ],
            "sha": "66f291a017cf403868968abdeea3dd8a84b7a7d8",
            "url": "https://api.github.com/repos/cython/cython/commits/66f291a017cf403868968abdeea3dd8a84b7a7d8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/efa75bd2bf4faa199fe6d3b35c926664e0d00644/comments",
            "commit": {
                "author": {
                    "date": "2021-02-15T21:51:23Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-02-15T21:51:23Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Changes from review",
                "tree": {
                    "sha": "befc2af9a2bfce647d7e1268c25bf5b781f300d4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/befc2af9a2bfce647d7e1268c25bf5b781f300d4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/efa75bd2bf4faa199fe6d3b35c926664e0d00644",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZWZhNzViZDJiZjRmYWExOTlmZTZkM2IzNWM5MjY2NjRlMGQwMDY0NA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/66f291a017cf403868968abdeea3dd8a84b7a7d8",
                    "sha": "66f291a017cf403868968abdeea3dd8a84b7a7d8",
                    "url": "https://api.github.com/repos/cython/cython/commits/66f291a017cf403868968abdeea3dd8a84b7a7d8"
                }
            ],
            "sha": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
            "url": "https://api.github.com/repos/cython/cython/commits/efa75bd2bf4faa199fe6d3b35c926664e0d00644"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/38d6e7c6691308fffad59b37424650ff51ca87b8/comments",
            "commit": {
                "author": {
                    "date": "2021-03-31T06:53:34Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-03-31T06:53:34Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "f882264145ed89c50ea00b0a630ccac033adb11a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f882264145ed89c50ea00b0a630ccac033adb11a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/38d6e7c6691308fffad59b37424650ff51ca87b8",
                "verification": {
                    "payload": "tree f882264145ed89c50ea00b0a630ccac033adb11a\nparent efa75bd2bf4faa199fe6d3b35c926664e0d00644\nauthor da-woods <dw-git@d-woods.co.uk> 1617173614 +0100\ncommitter GitHub <noreply@github.com> 1617173614 +0100\n\nApply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgZBxuCRBK7hj4Ov3rIwAAdHIIAJWzyGIhbDJRpsfMFXrmWfQX\nQroyeAp0DbbYVH3Q4NIEoc0nNcCX0pJ41pS4TVH+rJjgQ9J77VMIhqjXisdJoaVn\niGqPmjpss2b/t8/yOPBjs4urcg+qcvfB3zzpl65zFBY20zuZOb09IOvz53SJTIWO\ns/qlxiqCndr0dzaiJDfnCwg/Jn4bgLZ6d/AtYmHjv1xoeryLCHy0j1qGlJtuCwPi\n6gC946OdTAMPx7oHw2yxJSooDzffBBHJNC21/60YjIqDBIMM/QmU1LZFk5UFlkzO\nrCMMP8d+Sqy8VTpF8+OinbvPzZi+ILbEogDwgWvYhVLjxp6IiXuk/1x4AadZ0hM=\n=XvOx\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/38d6e7c6691308fffad59b37424650ff51ca87b8",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MzhkNmU3YzY2OTEzMDhmZmZhZDU5YjM3NDI0NjUwZmY1MWNhODdiOA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/efa75bd2bf4faa199fe6d3b35c926664e0d00644",
                    "sha": "efa75bd2bf4faa199fe6d3b35c926664e0d00644",
                    "url": "https://api.github.com/repos/cython/cython/commits/efa75bd2bf4faa199fe6d3b35c926664e0d00644"
                }
            ],
            "sha": "38d6e7c6691308fffad59b37424650ff51ca87b8",
            "url": "https://api.github.com/repos/cython/cython/commits/38d6e7c6691308fffad59b37424650ff51ca87b8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1effa99c7d9787c0dc80e6a81c9d037c430cf6bb/comments",
            "commit": {
                "author": {
                    "date": "2021-03-31T07:34:40Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-03-31T07:34:40Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Error handling and tuple size optimization",
                "tree": {
                    "sha": "01b8c0140de250c681ea6932efef20ae2a846161",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/01b8c0140de250c681ea6932efef20ae2a846161"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1effa99c7d9787c0dc80e6a81c9d037c430cf6bb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/1effa99c7d9787c0dc80e6a81c9d037c430cf6bb",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MWVmZmE5OWM3ZDk3ODdjMGRjODBlNmE4MWM5ZDAzN2M0MzBjZjZiYg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/38d6e7c6691308fffad59b37424650ff51ca87b8",
                    "sha": "38d6e7c6691308fffad59b37424650ff51ca87b8",
                    "url": "https://api.github.com/repos/cython/cython/commits/38d6e7c6691308fffad59b37424650ff51ca87b8"
                }
            ],
            "sha": "1effa99c7d9787c0dc80e6a81c9d037c430cf6bb",
            "url": "https://api.github.com/repos/cython/cython/commits/1effa99c7d9787c0dc80e6a81c9d037c430cf6bb"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5c49542d3111fd14c6bee97bfff47df80996541f/comments",
            "commit": {
                "author": {
                    "date": "2021-03-31T09:55:59Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-03-31T09:55:59Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "minor cleanup",
                "tree": {
                    "sha": "c5e8d89401ff7dbbc218395c1be0fef603adbb9f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c5e8d89401ff7dbbc218395c1be0fef603adbb9f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5c49542d3111fd14c6bee97bfff47df80996541f",
                "verification": {
                    "payload": "tree c5e8d89401ff7dbbc218395c1be0fef603adbb9f\nparent 1effa99c7d9787c0dc80e6a81c9d037c430cf6bb\nauthor scoder <stefan_ml@behnel.de> 1617184559 +0200\ncommitter GitHub <noreply@github.com> 1617184559 +0200\n\nminor cleanup",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgZEcvCRBK7hj4Ov3rIwAAdHIIABDQd0+JE9y1YrYErei9hmAm\nTZB45L9fCJgXGxILv6QDauTep85M5VYMXbl9OlO6pFmbYPsf/O/qdx49wQggvxCp\nwQ2kPcINf6ALTUDiloJ3UlQYdUmr5nnlBT0Ka4obBsulSge8wdLb4/TWylHz7Z2T\nmeMchy/PmDzGvw6ZGI14Bw1vYV01fSV2dpYqlbDG7ckvTl6ULqlDClTU93T82Xf4\nFTsc8HAYV0PLhz0vdiNoL7l195+hd9YJnzAqwA/dbTw5vHJUGF+epPvwxusWd9y0\ngt1zjTp4lZHrymzkNjmc8F1QyL6TbX2NuuzarGdlAMmSEKUI+0cFkI6tWYdBWgA=\n=0hv5\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/5c49542d3111fd14c6bee97bfff47df80996541f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NWM0OTU0MmQzMTExZmQxNGM2YmVlOTdiZmZmNDdkZjgwOTk2NTQxZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1effa99c7d9787c0dc80e6a81c9d037c430cf6bb",
                    "sha": "1effa99c7d9787c0dc80e6a81c9d037c430cf6bb",
                    "url": "https://api.github.com/repos/cython/cython/commits/1effa99c7d9787c0dc80e6a81c9d037c430cf6bb"
                }
            ],
            "sha": "5c49542d3111fd14c6bee97bfff47df80996541f",
            "url": "https://api.github.com/repos/cython/cython/commits/5c49542d3111fd14c6bee97bfff47df80996541f"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/4005/commits",
    "created_at": "2021-02-12T18:28:05Z",
    "diff_url": "https://github.com/cython/cython/pull/4005.diff",
    "draft": false,
    "head": {
        "label": "da-woods:pep560-inherit",
        "ref": "pep560-inherit",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2021-03-31T09:55:59Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 63348,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2021-02-21T09:59:37Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "5c49542d3111fd14c6bee97bfff47df80996541f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/4005",
    "id": 572703791,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/4005",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "locked": false,
    "merge_commit_sha": "af26c45cffb8d08dce016f15aa69622730245d59",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 318,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 26,
        "state": "open",
        "title": "3.0",
        "updated_at": "2021-03-30T20:49:13Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTcyNzAzNzkx",
    "number": 4005,
    "patch_url": "https://github.com/cython/cython/pull/4005.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/4005/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/5c49542d3111fd14c6bee97bfff47df80996541f",
    "title": "Implement PEP560 inheritance (__mro_entries__)",
    "updated_at": "2021-04-01T10:47:23Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/4005",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}