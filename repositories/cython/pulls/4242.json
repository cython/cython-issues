{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/4242/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4242/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/4242"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/4242"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4242/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4242"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/9d71f21c384b7d48714951d9db8834086ebfa571"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1165,
            "forks_count": 1165,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 964,
            "open_issues_count": 964,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2021-06-29T13:34:47Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 62638,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 6186,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2021-06-29T11:46:46Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 6186,
            "watchers_count": 6186
        },
        "sha": "54d949f138284b0c4d3ca58366d934301b8358fb",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This PR is introducing pure python mode in language basics documentation. It is partial fix of https://github.com/cython/cython/issues/4187",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660017136"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660017136"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we can avoid cluttering the example with type declarations when the type is \"obviously\" safe to infer.\r\n```suggestion\r\n    # Note that the variables below are automatically inferred\r\n    # as the correct pointer type that is assigned to them.\r\n    # They do not need to be typed explicitly.\r\n    \r\n    ptr = cython.cast(cython.p_void, python_string)\r\n    adress_in_c = cython.cast(Py_intptr_t, ptr)\r\n    address_from_void = adress_in_c        # address_from_void is a python int\r\n\r\n    ptr2 = cython.cast(cython.pointer(PyObject), python_string)\r\n    address_in_c2 = cython.cast(Py_intptr_t, ptr2)\r\n    address_from_PyObject = address_in_c2  # address_from_PyObject is a python int\r\n```",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:20:33Z",
            "diff_hunk": "@@ -0,0 +1,18 @@\n+from cython.cimports.cpython.ref import PyObject\n+\n+def main():\n+\n+    python_string = \"foo\"\n+\n+    ptr: p_void = cython.cast(cython.p_void, python_string)\n+    adress_in_c: Py_intptr_t= cython.cast(Py_intptr_t, ptr)\n+    address_from_void = adress_in_c        # address_from_void is a python int\n+\n+    ptr2: cython.pointer(PyObject) = cython.cast(cython.pointer(PyObject), python_string)\n+    address_in_c2: Py_intptr_t= cython.cast(Py_intptr_t, ptr2)\n+    address_from_PyObject = address_in_c2  # address_from_PyObject is a python int",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660017136",
            "id": 660017136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAxNzEzNg==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 17,
            "original_position": 13,
            "original_start_line": 7,
            "path": "docs/examples/userguide/language_basics/casting_python.py",
            "position": null,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T18:49:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660017136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660017320"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660017320"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    p = fopen(\"spam.txt\", \"r\")   # The type of \"p\" is \"FILE*\", as returned by fopen().\r\n```",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:20:51Z",
            "diff_hunk": "@@ -0,0 +1,18 @@\n+from cython.cimports.libc.stdio import FILE, fopen\n+from cython.cimports.libc.stdlib import malloc, free\n+from cython.cimports.cpython.exc import PyErr_SetFromErrnoWithFilenameObject\n+\n+def open_file():\n+    p: cython.pointer(FILE) = fopen(\"spam.txt\", \"r\")",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660017320",
            "id": 660017320,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAxNzMyMA==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 6,
            "original_position": 6,
            "original_start_line": null,
            "path": "docs/examples/userguide/language_basics/open_file.py",
            "position": null,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T18:49:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660017320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660018486"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660018486"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    # Note that the type of the variable \"my_array\" is automatically inferred from the assignment.\r\n    my_array = cython.cast(p_double, malloc(number * cython.sizeof(double)))\r\n```",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:22:42Z",
            "diff_hunk": "@@ -0,0 +1,18 @@\n+from cython.cimports.libc.stdio import FILE, fopen\n+from cython.cimports.libc.stdlib import malloc, free\n+from cython.cimports.cpython.exc import PyErr_SetFromErrnoWithFilenameObject\n+\n+def open_file():\n+    p: cython.pointer(FILE) = fopen(\"spam.txt\", \"r\")\n+\n+    if p is cython.NULL:\n+        PyErr_SetFromErrnoWithFilenameObject(OSError, \"spam.txt\")\n+    ...\n+\n+\n+def allocating_memory(number=10):\n+    my_array: cython.p_double = cython.cast(p_double, malloc(number * cython.sizeof(double)))",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660018486",
            "id": 660018486,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAxODQ4Ng==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 14,
            "original_position": 14,
            "original_start_line": null,
            "path": "docs/examples/userguide/language_basics/open_file.py",
            "position": null,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T18:49:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660018486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660019830"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660019830"
                }
            },
            "author_association": "MEMBER",
            "body": "This statement is incorrect for the Python version. Also, since type hints are ignored for global variables, this needs to use the explicit `cython.declare()` command.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:24:58Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660019830",
            "id": 660019830,
            "line": 51,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAxOTgzMA==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 51,
            "original_position": 15,
            "original_start_line": 50,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 15,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 50,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T18:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660019830",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660024966"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660024966"
                }
            },
            "author_association": "MEMBER",
            "body": "Interesting. I wasn't even aware of that. I created https://github.com/cython/cython/issues/4252 to track it.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:33:33Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660024966",
            "id": 660024966,
            "line": 85,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAyNDk2Ng==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 85,
            "original_position": 56,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 54,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T18:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660024966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660025805"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660025805"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think we need that much space here.\r\n```suggestion\r\n```",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:35:04Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.\n \n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n+    .. group-tab:: Cython\n \n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n \n+        See also :ref:`struct-union-enum-styles`\n \n+        .. note::\n \n-There is currently no special syntax for defining a constant, but you can use\n-an anonymous :keyword:`enum` declaration for this purpose, for example,::\n+            Structs can be declared as ``cdef packed struct``, which has\n+            the same effect as the C directive ``#pragma pack(1)``.\n \n-    cdef enum:\n-        tons_of_spam = 3\n+        Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n \n-.. note::\n-    the words ``struct``, ``union`` and ``enum`` are used only when\n-    defining a type, not when referring to it. For example, to declare a variable\n-    pointing to a ``Grail`` you would write::\n+            cpdef enum CheeseState:\n+                hard = 1\n+                soft = 2\n+                runny = 3\n+\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660025805",
            "id": 660025805,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAyNTgwNQ==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 106,
            "original_position": 90,
            "original_start_line": 105,
            "path": "docs/src/userguide/language_basics.rst",
            "position": null,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T18:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660025805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660027167"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660027167"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems missing from the Python version, although it is supported.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:37:11Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.\n \n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n+    .. group-tab:: Cython\n \n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n \n+        See also :ref:`struct-union-enum-styles`\n \n+        .. note::\n \n-There is currently no special syntax for defining a constant, but you can use\n-an anonymous :keyword:`enum` declaration for this purpose, for example,::\n+            Structs can be declared as ``cdef packed struct``, which has\n+            the same effect as the C directive ``#pragma pack(1)``.\n \n-    cdef enum:\n-        tons_of_spam = 3\n+        Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n \n-.. note::\n-    the words ``struct``, ``union`` and ``enum`` are used only when\n-    defining a type, not when referring to it. For example, to declare a variable\n-    pointing to a ``Grail`` you would write::\n+            cpdef enum CheeseState:\n+                hard = 1\n+                soft = 2\n+                runny = 3\n+\n+\n+\n+        There is currently no special syntax for defining a constant, but you can use\n+        an anonymous :keyword:`enum` declaration for this purpose, for example,::\n \n-        cdef Grail *gp\n+            cdef enum:\n+                tons_of_spam = 3\n \n-    and not::\n+        .. note::\n+            the words ``struct``, ``union`` and ``enum`` are used only when\n+            defining a type, not when referring to it. For example, to declare a variable\n+            pointing to a ``Grail`` you would write::\n \n-        cdef struct Grail *gp # WRONG\n+                cdef Grail *gp\n \n-    There is also a ``ctypedef`` statement for giving names to types, e.g.::\n+            and not::\n \n-        ctypedef unsigned long ULong\n+                cdef struct Grail *gp # WRONG\n \n-        ctypedef int* IntPtr\n+            There is also a ``ctypedef`` statement for giving names to types, e.g.::",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660027167",
            "id": 660027167,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAyNzE2Nw==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 124,
            "original_position": 114,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": null,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T18:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660027167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660030894"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660030894"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks like there's no way to do this in Python syntax. I created #4253 to track it.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:43:13Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.\n \n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n+    .. group-tab:: Cython\n \n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n \n+        See also :ref:`struct-union-enum-styles`\n \n+        .. note::\n \n-There is currently no special syntax for defining a constant, but you can use\n-an anonymous :keyword:`enum` declaration for this purpose, for example,::\n+            Structs can be declared as ``cdef packed struct``, which has\n+            the same effect as the C directive ``#pragma pack(1)``.",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660030894",
            "id": 660030894,
            "line": 96,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAzMDg5NA==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 96,
            "original_position": 74,
            "original_start_line": 95,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 68,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 95,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T18:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660030894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660031775"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660031775"
                }
            },
            "author_association": "MEMBER",
            "body": "This is confusing when showing the Python syntax version. Probably also applies to other places.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:44:45Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.\n \n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n+    .. group-tab:: Cython\n \n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n \n+        See also :ref:`struct-union-enum-styles`\n \n+        .. note::\n \n-There is currently no special syntax for defining a constant, but you can use\n-an anonymous :keyword:`enum` declaration for this purpose, for example,::\n+            Structs can be declared as ``cdef packed struct``, which has\n+            the same effect as the C directive ``#pragma pack(1)``.\n \n-    cdef enum:\n-        tons_of_spam = 3\n+        Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n \n-.. note::\n-    the words ``struct``, ``union`` and ``enum`` are used only when\n-    defining a type, not when referring to it. For example, to declare a variable\n-    pointing to a ``Grail`` you would write::\n+            cpdef enum CheeseState:\n+                hard = 1\n+                soft = 2\n+                runny = 3\n+\n+\n+\n+        There is currently no special syntax for defining a constant, but you can use\n+        an anonymous :keyword:`enum` declaration for this purpose, for example,::\n \n-        cdef Grail *gp\n+            cdef enum:\n+                tons_of_spam = 3\n \n-    and not::\n+        .. note::\n+            the words ``struct``, ``union`` and ``enum`` are used only when\n+            defining a type, not when referring to it. For example, to declare a variable\n+            pointing to a ``Grail`` you would write::\n \n-        cdef struct Grail *gp # WRONG\n+                cdef Grail *gp\n \n-    There is also a ``ctypedef`` statement for giving names to types, e.g.::\n+            and not::\n \n-        ctypedef unsigned long ULong\n+                cdef struct Grail *gp # WRONG\n \n-        ctypedef int* IntPtr\n+            There is also a ``ctypedef`` statement for giving names to types, e.g.::\n+\n+                ctypedef unsigned long ULong\n+\n+                ctypedef int* IntPtr\n \n \n It is also possible to declare functions with :keyword:`cdef`, making them c functions.",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660031775",
            "id": 660031775,
            "line": 144,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAzMTc3NQ==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 144,
            "original_position": 121,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 133,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T18:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660031775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660032463"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660032463"
                }
            },
            "author_association": "MEMBER",
            "body": "This should better be wrapped in a function to make it actually do something. (Same below.)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:45:42Z",
            "diff_hunk": "@@ -135,9 +189,21 @@ whereas ``x[0]`` is.\n \n Also, the Python types ``list``, ``dict``, ``tuple``, etc. may be used for\n static typing, as well as any user defined :ref:`extension-types`.\n-For example::\n+For example\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n \n-    cdef list foo = []\n+        .. code-block:: python\n+\n+            foo: list = []",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660032463",
            "id": 660032463,
            "line": 213,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAzMjQ2Mw==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 213,
            "original_position": 176,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 187,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T18:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660032463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660033760"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660033760"
                }
            },
            "author_association": "MEMBER",
            "body": "This needs a function.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T18:47:47Z",
            "diff_hunk": "@@ -562,11 +806,25 @@ leaving ``s`` dangling. Since this code could not possibly work, Cython refuses\n compile it.\n \n The solution is to assign the result of the concatenation to a Python\n-variable, and then obtain the ``char*`` from that, i.e.::\n+variable, and then obtain the ``char*`` from that, i.e.\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            s: cython.p_char\n+            p = pystring1 + pystring2\n+            s = p",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660033760",
            "id": 660033760,
            "line": 832,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAzMzc2MA==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 832,
            "original_position": 556,
            "original_start_line": 817,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 571,
            "pull_request_review_id": 694259168,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 830,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T18:49:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660033760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660081553"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660081553"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "At least, I haven't found any reference to it :-).",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T20:06:01Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660081553",
            "id": 660081553,
            "in_reply_to_id": 660024966,
            "line": 85,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDA4MTU1Mw==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 85,
            "original_position": 56,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 54,
            "pull_request_review_id": 694348298,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T20:06:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660081553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660097092"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660097092"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> this needs to use the explicit `cython.declare()` command.\r\n\r\nIt would be very good to indicate this, for example in a comment or explanation, since this behavior has not yet been documented, although in a good way it belongs [here](https://cython.readthedocs.io/en/latest/src/tutorial/pure.html).",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T20:32:20Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660097092",
            "id": 660097092,
            "in_reply_to_id": 660019830,
            "line": 51,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDA5NzA5Mg==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 51,
            "original_position": 15,
            "original_start_line": 50,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 15,
            "pull_request_review_id": 694368486,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 50,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T20:32:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660097092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660100251"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660100251"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> At least, I haven't found any reference to it :-).\r\n\r\nIt was worth trying to write enum, and what if it's .. `cython.enum` .., but by chance it's just not documented, lol 🙃",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T20:37:31Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660100251",
            "id": 660100251,
            "in_reply_to_id": 660024966,
            "line": 85,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDEwMDI1MQ==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 85,
            "original_position": 56,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 54,
            "pull_request_review_id": 694372522,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T20:37:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660100251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660103656"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660103656"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`cython.typedef`",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T20:43:35Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.\n \n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n+    .. group-tab:: Cython\n \n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n \n+        See also :ref:`struct-union-enum-styles`\n \n+        .. note::\n \n-There is currently no special syntax for defining a constant, but you can use\n-an anonymous :keyword:`enum` declaration for this purpose, for example,::\n+            Structs can be declared as ``cdef packed struct``, which has\n+            the same effect as the C directive ``#pragma pack(1)``.\n \n-    cdef enum:\n-        tons_of_spam = 3\n+        Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n \n-.. note::\n-    the words ``struct``, ``union`` and ``enum`` are used only when\n-    defining a type, not when referring to it. For example, to declare a variable\n-    pointing to a ``Grail`` you would write::\n+            cpdef enum CheeseState:\n+                hard = 1\n+                soft = 2\n+                runny = 3\n+\n+\n+\n+        There is currently no special syntax for defining a constant, but you can use\n+        an anonymous :keyword:`enum` declaration for this purpose, for example,::\n \n-        cdef Grail *gp\n+            cdef enum:\n+                tons_of_spam = 3\n \n-    and not::\n+        .. note::\n+            the words ``struct``, ``union`` and ``enum`` are used only when\n+            defining a type, not when referring to it. For example, to declare a variable\n+            pointing to a ``Grail`` you would write::\n \n-        cdef struct Grail *gp # WRONG\n+                cdef Grail *gp\n \n-    There is also a ``ctypedef`` statement for giving names to types, e.g.::\n+            and not::\n \n-        ctypedef unsigned long ULong\n+                cdef struct Grail *gp # WRONG\n \n-        ctypedef int* IntPtr\n+            There is also a ``ctypedef`` statement for giving names to types, e.g.::",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660103656",
            "id": 660103656,
            "in_reply_to_id": 660027167,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDEwMzY1Ng==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 124,
            "original_position": 114,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": null,
            "pull_request_review_id": 694377087,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T20:43:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660103656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660136709"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660136709"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In addition, you can make the pure python version match the version with `cdef` just with `cython.declare()`.\r\ni.e. `cython.declare(i=cython.int, j=cython.int, k=cython.int)`\r\n\r\nand for alignment reasons, `import cython` is not needed here, especially since it has already been written about in `two-syntax-variants-used`",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T21:43:37Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660136709",
            "id": 660136709,
            "in_reply_to_id": 660019830,
            "line": 51,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDEzNjcwOQ==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 51,
            "original_position": 15,
            "original_start_line": 50,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 15,
            "pull_request_review_id": 694419079,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 50,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T21:43:37Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660136709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660140212"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660140212"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The versions will not align here, it is easier to achieve by moving the code out to the file and adding a space to the line before the `cdef` line.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T21:51:12Z",
            "diff_hunk": "@@ -45,61 +48,102 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.\n \n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n+    .. group-tab:: Cython\n \n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n \n+        See also :ref:`struct-union-enum-styles`\n \n+        .. note::\n \n-There is currently no special syntax for defining a constant, but you can use\n-an anonymous :keyword:`enum` declaration for this purpose, for example,::\n+            Structs can be declared as ``cdef packed struct``, which has\n+            the same effect as the C directive ``#pragma pack(1)``.\n \n-    cdef enum:\n-        tons_of_spam = 3\n+        Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n \n-.. note::\n-    the words ``struct``, ``union`` and ``enum`` are used only when\n-    defining a type, not when referring to it. For example, to declare a variable\n-    pointing to a ``Grail`` you would write::\n+            cpdef enum CheeseState:\n+                hard = 1\n+                soft = 2\n+                runny = 3\n+\n+        There is currently no special syntax for defining a constant, but you can use\n+        an anonymous :keyword:`enum` declaration for this purpose, for example,::\n+\n+            cdef enum:\n+                tons_of_spam = 3\n+\n+        .. note::\n+            the words ``struct``, ``union`` and ``enum`` are used only when\n+            defining a type, not when referring to it. For example, to declare a variable\n+            pointing to a ``Grail`` you would write::\n \n-        cdef Grail *gp\n+                cdef Grail *gp\n \n-    and not::\n+            and not::\n \n-        cdef struct Grail *gp # WRONG\n+                cdef struct Grail *gp # WRONG\n \n-    There is also a ``ctypedef`` statement for giving names to types, e.g.::\n+            There is also a ``ctypedef`` statement for giving names to types, e.g.::\n \n-        ctypedef unsigned long ULong\n+                ctypedef unsigned long ULong\n \n-        ctypedef int* IntPtr\n+                ctypedef int* IntPtr\n \n \n It is also possible to declare functions with :keyword:`cdef`, making them c functions.\n \n-::\n+.. tabs::\n \n-    cdef int eggs(unsigned long l, float f):\n-        ...\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cfunc\n+            def eggs(l: cython.ulong, f: cython.float) -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef int eggs(unsigned long l, float f):\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660140212",
            "id": 660140212,
            "line": 161,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE0MDIxMg==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 161,
            "original_position": 139,
            "original_start_line": 137,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 153,
            "pull_request_review_id": 694423422,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 152,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T21:51:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660140212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660153749"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660153749"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "indentation is missing in pure python",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T22:22:11Z",
            "diff_hunk": "@@ -209,28 +285,78 @@ there is a tiny overhead in calling a :keyword:`cpdef` method from Cython compar\n calling a :keyword:`cdef` method.\n \n Parameters of either type of function can be declared to have C data types,\n-using normal C declaration syntax. For example,::\n+using normal C declaration syntax. For example,\n \n-    def spam(int i, char *s):\n-        ...\n+.. tabs::\n \n-    cdef int eggs(unsigned long l, float f):\n-        ...\n+    .. group-tab:: Pure Python\n \n-``ctuples`` may also be used::\n+        .. code-block:: python\n \n-    cdef (int, float) chips((long, long, double) t):\n-        ...\n+            def spam(i: cython.int, s: cython.p_char):\n+                ...\n+\n+            @cython.cfunc\n+            def eggs(l: cython.ulong, f: cython.float) -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def spam(int i, char *s):\n+                ...\n+\n+\n+            cdef int eggs(unsigned long l, float f):\n+                ...\n+\n+\n+\n+``ctuples`` may also be used\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+         def chips(t: (cython.long, cython.long, cython.double)) -> (cython.int, cython.float)\n+            ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef (int, float) chips((long, long, double) t):\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660153749",
            "id": 660153749,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE1Mzc0OQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 347,
            "original_position": 264,
            "original_start_line": 320,
            "path": "docs/src/userguide/language_basics.rst",
            "position": null,
            "pull_request_review_id": 694440454,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T22:22:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660153749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660155346"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660155346"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "You should check that they are identical after cythonization, because as far as I can remember, you need to use `cython.locals` for this.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T22:26:16Z",
            "diff_hunk": "@@ -209,28 +285,78 @@ there is a tiny overhead in calling a :keyword:`cpdef` method from Cython compar\n calling a :keyword:`cdef` method.\n \n Parameters of either type of function can be declared to have C data types,\n-using normal C declaration syntax. For example,::\n+using normal C declaration syntax. For example,\n \n-    def spam(int i, char *s):\n-        ...\n+.. tabs::\n \n-    cdef int eggs(unsigned long l, float f):\n-        ...\n+    .. group-tab:: Pure Python\n \n-``ctuples`` may also be used::\n+        .. code-block:: python\n \n-    cdef (int, float) chips((long, long, double) t):\n-        ...\n+            def spam(i: cython.int, s: cython.p_char):\n+                ...\n+\n+            @cython.cfunc\n+            def eggs(l: cython.ulong, f: cython.float) -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def spam(int i, char *s):\n+                ...\n+\n+\n+            cdef int eggs(unsigned long l, float f):\n+                ...\n+\n+\n+\n+``ctuples`` may also be used\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+         def chips(t: (cython.long, cython.long, cython.double)) -> (cython.int, cython.float)\n+            ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef (int, float) chips((long, long, double) t):\n+                ...\n \n When a parameter of a Python function is declared to have a C data type, it is\n passed in as a Python object and automatically converted to a C value, if\n possible. In other words, the definition of ``spam`` above is equivalent to\n-writing::\n+writing\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            def spam(python_i, python_s):\n+                i: cython.int = python_i\n+                s: cython.p_char = python_s\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def spam(python_i, python_s):\n+                cdef int i = python_i\n+                cdef char* s = python_s\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660155346",
            "id": 660155346,
            "line": 372,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE1NTM0Ng==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 372,
            "original_position": 290,
            "original_start_line": 345,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 304,
            "pull_request_review_id": 694442482,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 360,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T22:26:17Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660155346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660161942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660161942"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "there are no tabs below",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T22:42:33Z",
            "diff_hunk": "@@ -274,10 +414,24 @@ parameters and a new reference is returned).\n \n The name object can also be used to explicitly declare something as a Python\n object. This can be useful if the name being declared would otherwise be taken\n-as the name of a type, for example,::\n+as the name of a type, for example,\n \n-    cdef ftang(object int):\n-        ...\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cfunc\n+            def ftang(int: object):\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef ftang(object int):\n+                ...\n \n declares a parameter called int which is a Python object. You can also use\n object as the explicit return type of a function, e.g.::",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660161942",
            "id": 660161942,
            "line": 452,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE2MTk0Mg==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 452,
            "original_position": 355,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 369,
            "pull_request_review_id": 694450473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T22:42:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660161942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660165675"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660165675"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "py and pyx must also have captions, as they are in pxd",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T22:52:37Z",
            "diff_hunk": "@@ -315,13 +469,22 @@ the implementation (in ``.pyx`` files).\n \n When in a ``.pyx`` file, the signature is the same as it is in Python itself:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/optional_subclassing.pyx\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/language_basics/optional_subclassing.py\n+\n+    .. group-tab:: Cython\n+\n+        .. literalinclude:: ../../examples/userguide/language_basics/optional_subclassing.pyx\n \n When in a ``.pxd`` file, the signature is different like this example: ``cdef foo(x=*)``.\n This is because the program calling the function just needs to know what signatures are\n possible in C, but doesn't need to know the value of the default arguments.:\n \n .. literalinclude:: ../../examples/userguide/language_basics/optional_subclassing.pxd\n+    :caption: optional_subclassing.pxd",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660165675",
            "id": 660165675,
            "line": 502,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE2NTY3NQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 502,
            "original_position": 376,
            "original_start_line": 472,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 390,
            "pull_request_review_id": 694455158,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 487,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T22:52:37Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660165675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660166358"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660166358"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "same as [this](https://github.com/cython/cython/pull/4242/files#r660140212)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T22:54:41Z",
            "diff_hunk": "@@ -383,10 +546,24 @@ propagating the exception to its caller.\n \n If you want such a C function to be able to propagate exceptions, you need\n to declare an exception return value for it as a contract with the caller.\n-Here is an example::\n+Here is an example\n \n-    cdef int spam() except -1:\n-        ...\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.exceptval(-1)\n+            def spam() -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef int spam() except -1:\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660166358",
            "id": 660166358,
            "line": 581,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE2NjM1OA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 581,
            "original_position": 404,
            "original_start_line": 553,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 418,
            "pull_request_review_id": 694456038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 568,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T22:54:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660166358",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660166896"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660166896"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "same as [this](https://github.com/cython/cython/pull/4242/files#r660140212)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T22:56:15Z",
            "diff_hunk": "@@ -404,20 +581,48 @@ returns small results.\n \n If all possible return values are legal and you\n can't reserve one entirely for signalling errors, you can use an alternative\n-form of exception value declaration::\n+form of exception value declaration\n \n-    cdef int spam() except? -1:\n-        ...\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.exceptval(-1, check=True)\n+            def spam() -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef int spam() except? -1:\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660166896",
            "id": 660166896,
            "line": 616,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE2Njg5Ng==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 616,
            "original_position": 432,
            "original_start_line": 590,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 446,
            "pull_request_review_id": 694456697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 605,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T22:56:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660166896",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660167458"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660167458"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "there should be text about the `check` attribute",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T22:57:44Z",
            "diff_hunk": "@@ -404,20 +581,48 @@ returns small results.\n \n If all possible return values are legal and you\n can't reserve one entirely for signalling errors, you can use an alternative\n-form of exception value declaration::\n+form of exception value declaration\n \n-    cdef int spam() except? -1:\n-        ...\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.exceptval(-1, check=True)\n+            def spam() -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef int spam() except? -1:\n+                ...\n \n The \"?\" indicates that the value ``-1`` only signals a possible error. In this",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660167458",
            "id": 660167458,
            "line": 618,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE2NzQ1OA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 618,
            "original_position": 434,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 448,
            "pull_request_review_id": 694457397,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T22:57:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660167458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660167585"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660167585"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "same as [this](https://github.com/cython/cython/pull/4242/files#r660140212)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T22:58:08Z",
            "diff_hunk": "@@ -404,20 +581,48 @@ returns small results.\n \n If all possible return values are legal and you\n can't reserve one entirely for signalling errors, you can use an alternative\n-form of exception value declaration::\n+form of exception value declaration\n \n-    cdef int spam() except? -1:\n-        ...\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.exceptval(-1, check=True)\n+            def spam() -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef int spam() except? -1:\n+                ...\n \n The \"?\" indicates that the value ``-1`` only signals a possible error. In this\n case, Cython generates a call to :c:func:`PyErr_Occurred` if the exception value\n is returned, to make sure it really received an exception and not just a normal\n result.\n \n-There is also a third form of exception value declaration::\n+There is also a third form of exception value declaration\n \n-    cdef int spam() except *:\n-        ...\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.exceptval(check=True)\n+            def spam() -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef int spam() except *:\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660167585",
            "id": 660167585,
            "line": 640,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE2NzU4NQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 640,
            "original_position": 459,
            "original_start_line": 614,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 473,
            "pull_request_review_id": 694457601,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 629,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T22:58:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660167585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660170813"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660170813"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Pure python text should talk about `cython.cast`",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:07:37Z",
            "diff_hunk": "@@ -581,11 +837,25 @@ be careful what you do.\n Type Casting\n ------------\n \n-Where C uses ``\"(\"`` and ``\")\"``, Cython uses ``\"<\"`` and ``\">\"``. For example::\n+Where C uses ``\"(\"`` and ``\")\"``, Cython uses ``\"<\"`` and ``\">\"``. For example",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660170813",
            "id": 660170813,
            "line": 855,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE3MDgxMw==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 855,
            "original_position": 574,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 588,
            "pull_request_review_id": 694461761,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T23:07:37Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660170813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660170958"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660170958"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "[same](https://github.com/cython/cython/pull/4242/files#r660170813)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:08:04Z",
            "diff_hunk": "@@ -581,11 +837,25 @@ be careful what you do.\n Type Casting\n ------------\n \n-Where C uses ``\"(\"`` and ``\")\"``, Cython uses ``\"<\"`` and ``\">\"``. For example::\n+Where C uses ``\"(\"`` and ``\")\"``, Cython uses ``\"<\"`` and ``\">\"``. For example\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n \n-    cdef char *p\n-    cdef float *q\n-    p = <char*>q\n+        .. code-block:: python\n+\n+            p: cython.p_char\n+            q: cython.p_float\n+            p = cython.cast(cython.p_char, q)\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef char *p\n+            cdef float *q\n+            p = <char*>q\n \n When casting a C value to a Python object type or vice versa,\n Cython will attempt a coercion. Simple examples are casts like ``<int>pyobj``,",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660170958",
            "id": 660170958,
            "line": 876,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE3MDk1OA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 876,
            "original_position": 598,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 612,
            "pull_request_review_id": 694461918,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T23:08:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660170958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660180889"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660180889"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The ugly way to make this work in pure python is to use [numpy initialization](https://github.com/cython/cython/blob/efdf996dced075682d86b7e53a12b56b5ebfea38/Cython/Includes/numpy/__init__.pxd#L28).\r\ni.e. `from numpy cimport Py_intptr_t`\r\n\r\nBut, since this tutorial does not focus on the `extern` syntax, it is not clear what it is and how it works, so we can move this type definition somewhere in `Cython/Includes/cpython`\r\n\r\nWhat do you think @scoder?\r\n",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:35:04Z",
            "diff_hunk": "@@ -0,0 +1,2 @@\n+cdef extern from *:\n+    ctypedef Py_ssize_t Py_intptr_t",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660180889",
            "id": 660180889,
            "line": 2,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE4MDg4OQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 2,
            "original_position": 2,
            "original_start_line": 1,
            "path": "docs/examples/userguide/language_basics/casting_python.pxd",
            "position": 2,
            "pull_request_review_id": 694474787,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 1,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T23:35:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660180889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660181392"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660181392"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Files are not aligned due to comments",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:36:34Z",
            "diff_hunk": "@@ -0,0 +1,22 @@\n+from cython.cimports.cpython.ref import PyObject\n+\n+def main():\n+\n+    python_string = \"foo\"\n+\n+    # Note that the variables below are automatically inferred\n+    # as the correct pointer type that is assigned to them.\n+    # They do not need to be typed explicitly.",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660181392",
            "id": 660181392,
            "line": 9,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE4MTM5Mg==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 9,
            "original_position": 9,
            "original_start_line": 7,
            "path": "docs/examples/userguide/language_basics/casting_python.py",
            "position": 9,
            "pull_request_review_id": 694475386,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 7,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T23:36:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660181392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660181784"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660181784"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I would suggest that you move these comments outside the code. (and add them to the text)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:37:48Z",
            "diff_hunk": "@@ -0,0 +1,22 @@\n+from cython.cimports.cpython.ref import PyObject\n+\n+def main():\n+\n+    python_string = \"foo\"\n+\n+    # Note that the variables below are automatically inferred\n+    # as the correct pointer type that is assigned to them.\n+    # They do not need to be typed explicitly.",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660181784",
            "id": 660181784,
            "in_reply_to_id": 660181392,
            "line": 9,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE4MTc4NA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 9,
            "original_position": 9,
            "original_start_line": 7,
            "path": "docs/examples/userguide/language_basics/casting_python.py",
            "position": 9,
            "pull_request_review_id": 694475877,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 7,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T23:38:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660181784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660182503"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660182503"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "[same](https://github.com/cython/cython/pull/4242/files#r660170813)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:40:06Z",
            "diff_hunk": "@@ -657,10 +939,25 @@ direct equivalent in Python.\n * There is no unary ``*`` operator in Cython. Instead of ``*p``, use ``p[0]``\n * There is an ``&`` operator, with the same semantics as in C.\n * The null C pointer is called ``NULL``, not ``0`` (and ``NULL`` is a reserved word).\n-* Type casts are written ``<type>value`` , for example,::\n+* Type casts are written ``<type>value`` , for example,",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660182503",
            "id": 660182503,
            "line": 957,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE4MjUwMw==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 957,
            "original_position": 625,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 639,
            "pull_request_review_id": 694476766,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T23:40:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660182503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660183378"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660183378"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "take a look [here](https://github.com/cython/cython/pull/4242/files#r660136709)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:42:36Z",
            "diff_hunk": "@@ -657,10 +939,25 @@ direct equivalent in Python.\n * There is no unary ``*`` operator in Cython. Instead of ``*p``, use ``p[0]``\n * There is an ``&`` operator, with the same semantics as in C.\n * The null C pointer is called ``NULL``, not ``0`` (and ``NULL`` is a reserved word).\n-* Type casts are written ``<type>value`` , for example,::\n+* Type casts are written ``<type>value`` , for example,\n+\n+  .. tabs::\n \n-        cdef char* p, float* q\n-        p = <char*>q\n+      .. group-tab:: Pure Python\n+\n+          .. code-block:: python\n+\n+              p: cython.p_char\n+              q: cython.p_float\n+              p = cython.cast(cython.p_char, q)\n+\n+      .. group-tab:: Cython\n+\n+          .. code-block:: cython\n+\n+              cdef char* p, float* q\n+\n+              p = <char*>q",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660183378",
            "id": 660183378,
            "line": 975,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE4MzM3OA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 975,
            "original_position": 645,
            "original_start_line": 950,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 659,
            "pull_request_review_id": 694477712,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 965,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T23:42:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660183378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660186419"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660186419"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "?",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:51:56Z",
            "diff_hunk": "@@ -2,6 +2,8 @@ def f(double x):\n     return x ** 2 - x\n \n \n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660186419",
            "id": 660186419,
            "line": 6,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE4NjQxOQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 6,
            "original_position": 5,
            "original_start_line": 5,
            "path": "docs/examples/quickstart/cythonize/integrate_cy.pyx",
            "position": 5,
            "pull_request_review_id": 694481040,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 5,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T23:51:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660186419",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660189035"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660189035"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Alternatively, you can split `cdef` across two lines.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-28T23:59:59Z",
            "diff_hunk": "@@ -657,10 +939,25 @@ direct equivalent in Python.\n * There is no unary ``*`` operator in Cython. Instead of ``*p``, use ``p[0]``\n * There is an ``&`` operator, with the same semantics as in C.\n * The null C pointer is called ``NULL``, not ``0`` (and ``NULL`` is a reserved word).\n-* Type casts are written ``<type>value`` , for example,::\n+* Type casts are written ``<type>value`` , for example,\n+\n+  .. tabs::\n \n-        cdef char* p, float* q\n-        p = <char*>q\n+      .. group-tab:: Pure Python\n+\n+          .. code-block:: python\n+\n+              p: cython.p_char\n+              q: cython.p_float\n+              p = cython.cast(cython.p_char, q)\n+\n+      .. group-tab:: Cython\n+\n+          .. code-block:: cython\n+\n+              cdef char* p, float* q\n+\n+              p = <char*>q",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660189035",
            "id": 660189035,
            "in_reply_to_id": 660183378,
            "line": 975,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDE4OTAzNQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 975,
            "original_position": 645,
            "original_start_line": 950,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 659,
            "pull_request_review_id": 694483975,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 965,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T23:59:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660189035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660305749"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660305749"
                }
            },
            "author_association": "MEMBER",
            "body": "Why shouldn't annotations work here? They seem to explain the idea well.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T06:05:37Z",
            "diff_hunk": "@@ -209,28 +285,78 @@ there is a tiny overhead in calling a :keyword:`cpdef` method from Cython compar\n calling a :keyword:`cdef` method.\n \n Parameters of either type of function can be declared to have C data types,\n-using normal C declaration syntax. For example,::\n+using normal C declaration syntax. For example,\n \n-    def spam(int i, char *s):\n-        ...\n+.. tabs::\n \n-    cdef int eggs(unsigned long l, float f):\n-        ...\n+    .. group-tab:: Pure Python\n \n-``ctuples`` may also be used::\n+        .. code-block:: python\n \n-    cdef (int, float) chips((long, long, double) t):\n-        ...\n+            def spam(i: cython.int, s: cython.p_char):\n+                ...\n+\n+            @cython.cfunc\n+            def eggs(l: cython.ulong, f: cython.float) -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def spam(int i, char *s):\n+                ...\n+\n+\n+            cdef int eggs(unsigned long l, float f):\n+                ...\n+\n+\n+\n+``ctuples`` may also be used\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+         def chips(t: (cython.long, cython.long, cython.double)) -> (cython.int, cython.float)\n+            ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef (int, float) chips((long, long, double) t):\n+                ...\n \n When a parameter of a Python function is declared to have a C data type, it is\n passed in as a Python object and automatically converted to a C value, if\n possible. In other words, the definition of ``spam`` above is equivalent to\n-writing::\n+writing\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            def spam(python_i, python_s):\n+                i: cython.int = python_i\n+                s: cython.p_char = python_s\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def spam(python_i, python_s):\n+                cdef int i = python_i\n+                cdef char* s = python_s\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660305749",
            "id": 660305749,
            "in_reply_to_id": 660155346,
            "line": 372,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDMwNTc0OQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 372,
            "original_position": 290,
            "original_start_line": 345,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 304,
            "pull_request_review_id": 694620875,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 360,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T06:05:37Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660305749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660306576"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660306576"
                }
            },
            "author_association": "MEMBER",
            "body": " … and the text would best be placed in the tab to make it change with the syntax display.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T06:07:36Z",
            "diff_hunk": "@@ -404,20 +581,48 @@ returns small results.\n \n If all possible return values are legal and you\n can't reserve one entirely for signalling errors, you can use an alternative\n-form of exception value declaration::\n+form of exception value declaration\n \n-    cdef int spam() except? -1:\n-        ...\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.exceptval(-1, check=True)\n+            def spam() -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef int spam() except? -1:\n+                ...\n \n The \"?\" indicates that the value ``-1`` only signals a possible error. In this",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660306576",
            "id": 660306576,
            "in_reply_to_id": 660167458,
            "line": 618,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDMwNjU3Ng==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 618,
            "original_position": 434,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 448,
            "pull_request_review_id": 694621956,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-29T06:07:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660306576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660307104"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660307104"
                }
            },
            "author_association": "MEMBER",
            "body": "Probably makes space for decorators in the Python version?",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T06:08:48Z",
            "diff_hunk": "@@ -2,6 +2,8 @@ def f(double x):\n     return x ** 2 - x\n \n \n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660307104",
            "id": 660307104,
            "in_reply_to_id": 660186419,
            "line": 6,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDMwNzEwNA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 6,
            "original_position": 5,
            "original_start_line": 5,
            "path": "docs/examples/quickstart/cythonize/integrate_cy.pyx",
            "position": 5,
            "pull_request_review_id": 694622643,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 5,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T06:08:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660307104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660308016"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660308016"
                }
            },
            "author_association": "MEMBER",
            "body": "Add it to the includes, definitely.\r\nWe could also add it to the known C types.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T06:10:53Z",
            "diff_hunk": "@@ -0,0 +1,2 @@\n+cdef extern from *:\n+    ctypedef Py_ssize_t Py_intptr_t",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660308016",
            "id": 660308016,
            "in_reply_to_id": 660180889,
            "line": 2,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDMwODAxNg==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 2,
            "original_position": 2,
            "original_start_line": 1,
            "path": "docs/examples/userguide/language_basics/casting_python.pxd",
            "position": 2,
            "pull_request_review_id": 694623792,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 1,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T06:10:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660308016",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660308866"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660308866"
                }
            },
            "author_association": "MEMBER",
            "body": "I also wonder if we should just rely on type inference in both versions. And then really move the comment into the preceding text section.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T06:12:45Z",
            "diff_hunk": "@@ -0,0 +1,22 @@\n+from cython.cimports.cpython.ref import PyObject\n+\n+def main():\n+\n+    python_string = \"foo\"\n+\n+    # Note that the variables below are automatically inferred\n+    # as the correct pointer type that is assigned to them.\n+    # They do not need to be typed explicitly.",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660308866",
            "id": 660308866,
            "in_reply_to_id": 660181392,
            "line": 9,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDMwODg2Ng==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 9,
            "original_position": 9,
            "original_start_line": 7,
            "path": "docs/examples/userguide/language_basics/casting_python.py",
            "position": 9,
            "pull_request_review_id": 694624872,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 7,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T06:12:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660308866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660337449"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660337449"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes I have tried to align the two source code as requested in issue.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T07:06:46Z",
            "diff_hunk": "@@ -2,6 +2,8 @@ def f(double x):\n     return x ** 2 - x\n \n \n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660337449",
            "id": 660337449,
            "in_reply_to_id": 660186419,
            "line": 6,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDMzNzQ0OQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 6,
            "original_position": 5,
            "original_start_line": 5,
            "path": "docs/examples/quickstart/cythonize/integrate_cy.pyx",
            "position": 5,
            "pull_request_review_id": 694661737,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 5,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T07:06:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660337449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660344978"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660344978"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Here are no tabs because there is an issue in cython not allowing moving this code to pure python: #2529. I suppose we need a note there about it.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T07:18:30Z",
            "diff_hunk": "@@ -274,10 +414,24 @@ parameters and a new reference is returned).\n \n The name object can also be used to explicitly declare something as a Python\n object. This can be useful if the name being declared would otherwise be taken\n-as the name of a type, for example,::\n+as the name of a type, for example,\n \n-    cdef ftang(object int):\n-        ...\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cfunc\n+            def ftang(int: object):\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef ftang(object int):\n+                ...\n \n declares a parameter called int which is a Python object. You can also use\n object as the explicit return type of a function, e.g.::",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660344978",
            "id": 660344978,
            "in_reply_to_id": 660161942,
            "line": 452,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDM0NDk3OA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 452,
            "original_position": 355,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 369,
            "pull_request_review_id": 694671891,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-29T07:26:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660344978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660346579"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660346579"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "done, I missed that. Thanks!",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T07:20:59Z",
            "diff_hunk": "@@ -45,61 +48,104 @@ C variable and type definitions\n ===============================\n \n The :keyword:`cdef` statement is used to declare C variables, either local or\n-module-level::\n+module-level\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            import cython\n+\n+            i: cython.int\n+            j: cython.int\n+            k: cython.int\n+            f: cython.float\n+            g: cython.int[42]\n+            h: cython.p_float\n+\n+\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n+            cdef int i, j, k\n+            cdef float f, g[42], *h\n \n and C :keyword:`struct`, :keyword:`union` or :keyword:`enum` types:\n \n-.. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n+.. tabs::\n \n-See also :ref:`struct-union-enum-styles`\n+    .. group-tab:: Pure Python\n \n-.. note::\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.py\n \n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n+        .. NOTE:: Currently, Pure Python mode does not support enums.\n \n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n+    .. group-tab:: Cython\n \n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n+        .. literalinclude:: ../../examples/userguide/language_basics/struct_union_enum.pyx\n \n+        See also :ref:`struct-union-enum-styles`\n \n+        .. note::\n \n-There is currently no special syntax for defining a constant, but you can use\n-an anonymous :keyword:`enum` declaration for this purpose, for example,::\n+            Structs can be declared as ``cdef packed struct``, which has\n+            the same effect as the C directive ``#pragma pack(1)``.\n \n-    cdef enum:\n-        tons_of_spam = 3\n+        Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n \n-.. note::\n-    the words ``struct``, ``union`` and ``enum`` are used only when\n-    defining a type, not when referring to it. For example, to declare a variable\n-    pointing to a ``Grail`` you would write::\n+            cpdef enum CheeseState:\n+                hard = 1\n+                soft = 2\n+                runny = 3\n+\n+\n+\n+        There is currently no special syntax for defining a constant, but you can use\n+        an anonymous :keyword:`enum` declaration for this purpose, for example,::\n \n-        cdef Grail *gp\n+            cdef enum:\n+                tons_of_spam = 3\n \n-    and not::\n+        .. note::\n+            the words ``struct``, ``union`` and ``enum`` are used only when\n+            defining a type, not when referring to it. For example, to declare a variable\n+            pointing to a ``Grail`` you would write::\n \n-        cdef struct Grail *gp # WRONG\n+                cdef Grail *gp\n \n-    There is also a ``ctypedef`` statement for giving names to types, e.g.::\n+            and not::\n \n-        ctypedef unsigned long ULong\n+                cdef struct Grail *gp # WRONG\n \n-        ctypedef int* IntPtr\n+            There is also a ``ctypedef`` statement for giving names to types, e.g.::",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660346579",
            "id": 660346579,
            "in_reply_to_id": 660027167,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDM0NjU3OQ==",
            "original_commit_id": "a9be21d07cccb0ba6e50915b30c044ca23c06177",
            "original_line": 124,
            "original_position": 114,
            "original_start_line": null,
            "path": "docs/src/userguide/language_basics.rst",
            "position": null,
            "pull_request_review_id": 694674031,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-29T07:20:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660346579",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660346880"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660346880"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "done.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T07:21:22Z",
            "diff_hunk": "@@ -209,28 +285,78 @@ there is a tiny overhead in calling a :keyword:`cpdef` method from Cython compar\n calling a :keyword:`cdef` method.\n \n Parameters of either type of function can be declared to have C data types,\n-using normal C declaration syntax. For example,::\n+using normal C declaration syntax. For example,\n \n-    def spam(int i, char *s):\n-        ...\n+.. tabs::\n \n-    cdef int eggs(unsigned long l, float f):\n-        ...\n+    .. group-tab:: Pure Python\n \n-``ctuples`` may also be used::\n+        .. code-block:: python\n \n-    cdef (int, float) chips((long, long, double) t):\n-        ...\n+            def spam(i: cython.int, s: cython.p_char):\n+                ...\n+\n+            @cython.cfunc\n+            def eggs(l: cython.ulong, f: cython.float) -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def spam(int i, char *s):\n+                ...\n+\n+\n+            cdef int eggs(unsigned long l, float f):\n+                ...\n+\n+\n+\n+``ctuples`` may also be used\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+         def chips(t: (cython.long, cython.long, cython.double)) -> (cython.int, cython.float)\n+            ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef (int, float) chips((long, long, double) t):\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660346880",
            "id": 660346880,
            "in_reply_to_id": 660153749,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDM0Njg4MA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 347,
            "original_position": 264,
            "original_start_line": 320,
            "path": "docs/src/userguide/language_basics.rst",
            "position": null,
            "pull_request_review_id": 694674385,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T07:21:22Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660346880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660441450"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660441450"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Why shouldn't annotations work here? They seem to explain the idea well.\r\n\r\nI'm not talking about the idea, I said that in this case the annotations may not work as we want, and therefore I said to check if the cythonizaed versions correspond, if so, then there is nothing to worry about.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T09:26:41Z",
            "diff_hunk": "@@ -209,28 +285,78 @@ there is a tiny overhead in calling a :keyword:`cpdef` method from Cython compar\n calling a :keyword:`cdef` method.\n \n Parameters of either type of function can be declared to have C data types,\n-using normal C declaration syntax. For example,::\n+using normal C declaration syntax. For example,\n \n-    def spam(int i, char *s):\n-        ...\n+.. tabs::\n \n-    cdef int eggs(unsigned long l, float f):\n-        ...\n+    .. group-tab:: Pure Python\n \n-``ctuples`` may also be used::\n+        .. code-block:: python\n \n-    cdef (int, float) chips((long, long, double) t):\n-        ...\n+            def spam(i: cython.int, s: cython.p_char):\n+                ...\n+\n+            @cython.cfunc\n+            def eggs(l: cython.ulong, f: cython.float) -> cython.int:\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def spam(int i, char *s):\n+                ...\n+\n+\n+            cdef int eggs(unsigned long l, float f):\n+                ...\n+\n+\n+\n+``ctuples`` may also be used\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+         def chips(t: (cython.long, cython.long, cython.double)) -> (cython.int, cython.float)\n+            ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef (int, float) chips((long, long, double) t):\n+                ...\n \n When a parameter of a Python function is declared to have a C data type, it is\n passed in as a Python object and automatically converted to a C value, if\n possible. In other words, the definition of ``spam`` above is equivalent to\n-writing::\n+writing\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            def spam(python_i, python_s):\n+                i: cython.int = python_i\n+                s: cython.p_char = python_s\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def spam(python_i, python_s):\n+                cdef int i = python_i\n+                cdef char* s = python_s\n+                ...",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660441450",
            "id": 660441450,
            "in_reply_to_id": 660155346,
            "line": 372,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDQ0MTQ1MA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 372,
            "original_position": 290,
            "original_start_line": 345,
            "path": "docs/src/userguide/language_basics.rst",
            "position": 304,
            "pull_request_review_id": 694800249,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 360,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T09:26:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660441450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660444774"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660444774"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In this case, the pyx version will also need to use the new `cimport`",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T09:30:53Z",
            "diff_hunk": "@@ -0,0 +1,2 @@\n+cdef extern from *:\n+    ctypedef Py_ssize_t Py_intptr_t",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660444774",
            "id": 660444774,
            "in_reply_to_id": 660180889,
            "line": 2,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDQ0NDc3NA==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 2,
            "original_position": 2,
            "original_start_line": 1,
            "path": "docs/examples/userguide/language_basics/casting_python.pxd",
            "position": 2,
            "pull_request_review_id": 694804624,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 1,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T09:30:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660444774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660450321"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660450321"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "hmm it's 1) out of the scope of this tutorial, 2) second file already was aligned, look [here](https://github.com/matusvalo/cython/blob/b1067464260957c69d6756e77a726c71183d2569/docs/examples/quickstart/cythonize/integrate.py) and [here](https://github.com/matusvalo/cython/blob/b1067464260957c69d6756e77a726c71183d2569/docs/examples/quickstart/cythonize/integrate_cy.pyx)",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T09:38:12Z",
            "diff_hunk": "@@ -2,6 +2,8 @@ def f(double x):\n     return x ** 2 - x\n \n \n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660450321",
            "id": 660450321,
            "in_reply_to_id": 660186419,
            "line": 6,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDQ1MDMyMQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 6,
            "original_position": 5,
            "original_start_line": 5,
            "path": "docs/examples/quickstart/cythonize/integrate_cy.pyx",
            "position": 5,
            "pull_request_review_id": 694811932,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 5,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T09:38:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660450321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660450721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660450721"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "so i still don't understand",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T09:38:45Z",
            "diff_hunk": "@@ -2,6 +2,8 @@ def f(double x):\n     return x ** 2 - x\n \n \n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660450721",
            "id": 660450721,
            "in_reply_to_id": 660186419,
            "line": 6,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDQ1MDcyMQ==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 6,
            "original_position": 5,
            "original_start_line": 5,
            "path": "docs/examples/quickstart/cythonize/integrate_cy.pyx",
            "position": 5,
            "pull_request_review_id": 694812449,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 5,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T09:38:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660450721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4242#discussion_r660533912"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4242"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660533912"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder I would generally suggest covering C API path of `Python.h` with type declarations. Not necessarily in this PR, but it will be more pleasant if there are already `ctypedef `s for the cpython.",
            "commit_id": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "created_at": "2021-06-29T11:41:39Z",
            "diff_hunk": "@@ -0,0 +1,2 @@\n+cdef extern from *:\n+    ctypedef Py_ssize_t Py_intptr_t",
            "html_url": "https://github.com/cython/cython/pull/4242#discussion_r660533912",
            "id": 660533912,
            "in_reply_to_id": 660180889,
            "line": 2,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDUzMzkxMg==",
            "original_commit_id": "b1067464260957c69d6756e77a726c71183d2569",
            "original_line": 2,
            "original_position": 2,
            "original_start_line": 1,
            "path": "docs/examples/userguide/language_basics/casting_python.pxd",
            "position": 2,
            "pull_request_review_id": 694922765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4242",
            "side": "RIGHT",
            "start_line": 1,
            "start_side": "RIGHT",
            "updated_at": "2021-06-29T11:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660533912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4242/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1c547417f26c8b3c9c6ed18180e312adf8904d06/comments",
            "commit": {
                "author": {
                    "date": "2021-06-23T09:13:08Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Introduce pure python mode in language basics documentation",
                "tree": {
                    "sha": "a06598ae19f37d2ba045266e946f9032856d2d5a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a06598ae19f37d2ba045266e946f9032856d2d5a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1c547417f26c8b3c9c6ed18180e312adf8904d06",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/1c547417f26c8b3c9c6ed18180e312adf8904d06",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjFjNTQ3NDE3ZjI2YzhiM2M5YzZlZDE4MTgwZTMxMmFkZjg5MDRkMDY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/54d949f138284b0c4d3ca58366d934301b8358fb",
                    "sha": "54d949f138284b0c4d3ca58366d934301b8358fb",
                    "url": "https://api.github.com/repos/cython/cython/commits/54d949f138284b0c4d3ca58366d934301b8358fb"
                }
            ],
            "sha": "1c547417f26c8b3c9c6ed18180e312adf8904d06",
            "url": "https://api.github.com/repos/cython/cython/commits/1c547417f26c8b3c9c6ed18180e312adf8904d06"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2febb21305dff7cb734f128364c0baa9d42d1a37/comments",
            "commit": {
                "author": {
                    "date": "2021-06-24T07:21:11Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Move union documentation to cython tab",
                "tree": {
                    "sha": "972e7cf95feab010f1b31c284956c019e51bd637",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/972e7cf95feab010f1b31c284956c019e51bd637"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2febb21305dff7cb734f128364c0baa9d42d1a37",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/2febb21305dff7cb734f128364c0baa9d42d1a37",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjJmZWJiMjEzMDVkZmY3Y2I3MzRmMTI4MzY0YzBiYWE5ZDQyZDFhMzc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1c547417f26c8b3c9c6ed18180e312adf8904d06",
                    "sha": "1c547417f26c8b3c9c6ed18180e312adf8904d06",
                    "url": "https://api.github.com/repos/cython/cython/commits/1c547417f26c8b3c9c6ed18180e312adf8904d06"
                }
            ],
            "sha": "2febb21305dff7cb734f128364c0baa9d42d1a37",
            "url": "https://api.github.com/repos/cython/cython/commits/2febb21305dff7cb734f128364c0baa9d42d1a37"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/86af1e115715289e5b0322487f82f7e671f9505d/comments",
            "commit": {
                "author": {
                    "date": "2021-06-24T08:38:03Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Added casting_python.py example",
                "tree": {
                    "sha": "e071f8183f8e91a62af3f45b497b31650e92570e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e071f8183f8e91a62af3f45b497b31650e92570e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/86af1e115715289e5b0322487f82f7e671f9505d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/86af1e115715289e5b0322487f82f7e671f9505d",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjg2YWYxZTExNTcxNTI4OWU1YjAzMjI0ODdmODJmN2U2NzFmOTUwNWQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2febb21305dff7cb734f128364c0baa9d42d1a37",
                    "sha": "2febb21305dff7cb734f128364c0baa9d42d1a37",
                    "url": "https://api.github.com/repos/cython/cython/commits/2febb21305dff7cb734f128364c0baa9d42d1a37"
                }
            ],
            "sha": "86af1e115715289e5b0322487f82f7e671f9505d",
            "url": "https://api.github.com/repos/cython/cython/commits/86af1e115715289e5b0322487f82f7e671f9505d"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2b7dc549abce289bca68936189951740e3c9eac6/comments",
            "commit": {
                "author": {
                    "date": "2021-06-24T09:32:03Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Note that DEF/IF/ELIF is not supported by pure python mode",
                "tree": {
                    "sha": "8eff19a3c6bebceffdb231b6db82c47f5444fc46",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8eff19a3c6bebceffdb231b6db82c47f5444fc46"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2b7dc549abce289bca68936189951740e3c9eac6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/2b7dc549abce289bca68936189951740e3c9eac6",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjJiN2RjNTQ5YWJjZTI4OWJjYTY4OTM2MTg5OTUxNzQwZTNjOWVhYzY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/86af1e115715289e5b0322487f82f7e671f9505d",
                    "sha": "86af1e115715289e5b0322487f82f7e671f9505d",
                    "url": "https://api.github.com/repos/cython/cython/commits/86af1e115715289e5b0322487f82f7e671f9505d"
                }
            ],
            "sha": "2b7dc549abce289bca68936189951740e3c9eac6",
            "url": "https://api.github.com/repos/cython/cython/commits/2b7dc549abce289bca68936189951740e3c9eac6"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cee82da9f7e1f7c855ef46f53bc4c99f85fe83a1/comments",
            "commit": {
                "author": {
                    "date": "2021-06-25T19:43:35Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Improve examples, added initial note about pure python",
                "tree": {
                    "sha": "a262f170d0f5a09e0adfa2c2da38073144e71982",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a262f170d0f5a09e0adfa2c2da38073144e71982"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cee82da9f7e1f7c855ef46f53bc4c99f85fe83a1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/cee82da9f7e1f7c855ef46f53bc4c99f85fe83a1",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOmNlZTgyZGE5ZjdlMWY3Yzg1NWVmNDZmNTNiYzRjOTlmODVmZTgzYTE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2b7dc549abce289bca68936189951740e3c9eac6",
                    "sha": "2b7dc549abce289bca68936189951740e3c9eac6",
                    "url": "https://api.github.com/repos/cython/cython/commits/2b7dc549abce289bca68936189951740e3c9eac6"
                }
            ],
            "sha": "cee82da9f7e1f7c855ef46f53bc4c99f85fe83a1",
            "url": "https://api.github.com/repos/cython/cython/commits/cee82da9f7e1f7c855ef46f53bc4c99f85fe83a1"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5def4511a2bb89d80fc466a86f30ed8f8dae4089/comments",
            "commit": {
                "author": {
                    "date": "2021-06-25T20:08:16Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Minor fixes in code examples",
                "tree": {
                    "sha": "6e65390bb8f99c323aa1608155243e26c83535a3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6e65390bb8f99c323aa1608155243e26c83535a3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5def4511a2bb89d80fc466a86f30ed8f8dae4089",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/5def4511a2bb89d80fc466a86f30ed8f8dae4089",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjVkZWY0NTExYTJiYjg5ZDgwZmM0NjZhODZmMzBlZDhmOGRhZTQwODk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cee82da9f7e1f7c855ef46f53bc4c99f85fe83a1",
                    "sha": "cee82da9f7e1f7c855ef46f53bc4c99f85fe83a1",
                    "url": "https://api.github.com/repos/cython/cython/commits/cee82da9f7e1f7c855ef46f53bc4c99f85fe83a1"
                }
            ],
            "sha": "5def4511a2bb89d80fc466a86f30ed8f8dae4089",
            "url": "https://api.github.com/repos/cython/cython/commits/5def4511a2bb89d80fc466a86f30ed8f8dae4089"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e80ce3e3abfe7ea48608a80edb68c01b5ab95733/comments",
            "commit": {
                "author": {
                    "date": "2021-06-28T19:52:50Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Remove redundant empty line\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "57e06d70b1ee9c9cc3c874525d33d713b863f16a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/57e06d70b1ee9c9cc3c874525d33d713b863f16a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e80ce3e3abfe7ea48608a80edb68c01b5ab95733",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/e80ce3e3abfe7ea48608a80edb68c01b5ab95733",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOmU4MGNlM2UzYWJmZTdlYTQ4NjA4YTgwZWRiNjhjMDFiNWFiOTU3MzM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5def4511a2bb89d80fc466a86f30ed8f8dae4089",
                    "sha": "5def4511a2bb89d80fc466a86f30ed8f8dae4089",
                    "url": "https://api.github.com/repos/cython/cython/commits/5def4511a2bb89d80fc466a86f30ed8f8dae4089"
                }
            ],
            "sha": "e80ce3e3abfe7ea48608a80edb68c01b5ab95733",
            "url": "https://api.github.com/repos/cython/cython/commits/e80ce3e3abfe7ea48608a80edb68c01b5ab95733"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7724511c8a1f9dd6992371ff24742750e10b3822/comments",
            "commit": {
                "author": {
                    "date": "2021-06-28T19:56:18Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Don't specify type of variable when type can be automatically inferred.\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "7fcf681e277f012f313889dfc1f97a984db01b02",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7fcf681e277f012f313889dfc1f97a984db01b02"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7724511c8a1f9dd6992371ff24742750e10b3822",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/7724511c8a1f9dd6992371ff24742750e10b3822",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjc3MjQ1MTFjOGExZjlkZDY5OTIzNzFmZjI0NzQyNzUwZTEwYjM4MjI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e80ce3e3abfe7ea48608a80edb68c01b5ab95733",
                    "sha": "e80ce3e3abfe7ea48608a80edb68c01b5ab95733",
                    "url": "https://api.github.com/repos/cython/cython/commits/e80ce3e3abfe7ea48608a80edb68c01b5ab95733"
                }
            ],
            "sha": "7724511c8a1f9dd6992371ff24742750e10b3822",
            "url": "https://api.github.com/repos/cython/cython/commits/7724511c8a1f9dd6992371ff24742750e10b3822"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/77005a9bb215424ba6f952a23c64e9f48d6a703e/comments",
            "commit": {
                "author": {
                    "date": "2021-06-28T20:09:01Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Use automatic type inference in example\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "47e5250c70322de37bf0597944bd7693b1c279b3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/47e5250c70322de37bf0597944bd7693b1c279b3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/77005a9bb215424ba6f952a23c64e9f48d6a703e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/77005a9bb215424ba6f952a23c64e9f48d6a703e",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjc3MDA1YTliYjIxNTQyNGJhNmY5NTJhMjNjNjRlOWY0OGQ2YTcwM2U=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7724511c8a1f9dd6992371ff24742750e10b3822",
                    "sha": "7724511c8a1f9dd6992371ff24742750e10b3822",
                    "url": "https://api.github.com/repos/cython/cython/commits/7724511c8a1f9dd6992371ff24742750e10b3822"
                }
            ],
            "sha": "77005a9bb215424ba6f952a23c64e9f48d6a703e",
            "url": "https://api.github.com/repos/cython/cython/commits/77005a9bb215424ba6f952a23c64e9f48d6a703e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3207e4f96be95154eb2270d6cd930b8b41dcffc6/comments",
            "commit": {
                "author": {
                    "date": "2021-06-28T20:09:20Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Use automatic type inference in example\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "284cf7034349aa6dc4bfc8f30967da263e08cd5a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/284cf7034349aa6dc4bfc8f30967da263e08cd5a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3207e4f96be95154eb2270d6cd930b8b41dcffc6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/3207e4f96be95154eb2270d6cd930b8b41dcffc6",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjMyMDdlNGY5NmJlOTUxNTRlYjIyNzBkNmNkOTMwYjhiNDFkY2ZmYzY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/77005a9bb215424ba6f952a23c64e9f48d6a703e",
                    "sha": "77005a9bb215424ba6f952a23c64e9f48d6a703e",
                    "url": "https://api.github.com/repos/cython/cython/commits/77005a9bb215424ba6f952a23c64e9f48d6a703e"
                }
            ],
            "sha": "3207e4f96be95154eb2270d6cd930b8b41dcffc6",
            "url": "https://api.github.com/repos/cython/cython/commits/3207e4f96be95154eb2270d6cd930b8b41dcffc6"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9d71f21c384b7d48714951d9db8834086ebfa571/comments",
            "commit": {
                "author": {
                    "date": "2021-06-28T14:41:33Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T14:59:09Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Move ctypedef to pure python and minor fixes",
                "tree": {
                    "sha": "d9b99fa9dcbbd84ae6911baf62f5dc58456b3c72",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d9b99fa9dcbbd84ae6911baf62f5dc58456b3c72"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9d71f21c384b7d48714951d9db8834086ebfa571",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/9d71f21c384b7d48714951d9db8834086ebfa571",
            "node_id": "MDY6Q29tbWl0MzQ4MDA5NDQzOjlkNzFmMjFjMzg0YjdkNDg3MTQ5NTFkOWRiODgzNDA4NmViZmE1NzE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3207e4f96be95154eb2270d6cd930b8b41dcffc6",
                    "sha": "3207e4f96be95154eb2270d6cd930b8b41dcffc6",
                    "url": "https://api.github.com/repos/cython/cython/commits/3207e4f96be95154eb2270d6cd930b8b41dcffc6"
                }
            ],
            "sha": "9d71f21c384b7d48714951d9db8834086ebfa571",
            "url": "https://api.github.com/repos/cython/cython/commits/9d71f21c384b7d48714951d9db8834086ebfa571"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/4242/commits",
    "created_at": "2021-06-23T09:17:30Z",
    "diff_url": "https://github.com/cython/cython/pull/4242.diff",
    "draft": false,
    "head": {
        "label": "matusvalo:language_basics_pure_python",
        "ref": "language_basics_pure_python",
        "repo": {
            "archive_url": "https://api.github.com/repos/matusvalo/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/matusvalo/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/matusvalo/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/matusvalo/cython/branches{/branch}",
            "clone_url": "https://github.com/matusvalo/cython.git",
            "collaborators_url": "https://api.github.com/repos/matusvalo/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/matusvalo/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/matusvalo/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/matusvalo/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/matusvalo/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/matusvalo/cython/contributors",
            "created_at": "2021-03-15T14:49:34Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/matusvalo/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/matusvalo/cython/downloads",
            "events_url": "https://api.github.com/repos/matusvalo/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/matusvalo/cython/forks",
            "full_name": "matusvalo/cython",
            "git_commits_url": "https://api.github.com/repos/matusvalo/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/matusvalo/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/matusvalo/cython/git/tags{/sha}",
            "git_url": "git://github.com/matusvalo/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/matusvalo/cython/hooks",
            "html_url": "https://github.com/matusvalo/cython",
            "id": 348009443,
            "issue_comment_url": "https://api.github.com/repos/matusvalo/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/matusvalo/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/matusvalo/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/matusvalo/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/matusvalo/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/matusvalo/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/matusvalo/cython/merges",
            "milestones_url": "https://api.github.com/repos/matusvalo/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNDgwMDk0NDM=",
            "notifications_url": "https://api.github.com/repos/matusvalo/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/matusvalo/cython/pulls{/number}",
            "pushed_at": "2021-06-29T07:38:10Z",
            "releases_url": "https://api.github.com/repos/matusvalo/cython/releases{/id}",
            "size": 63045,
            "ssh_url": "git@github.com:matusvalo/cython.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/matusvalo/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/matusvalo/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/matusvalo/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/matusvalo/cython/subscription",
            "svn_url": "https://github.com/matusvalo/cython",
            "tags_url": "https://api.github.com/repos/matusvalo/cython/tags",
            "teams_url": "https://api.github.com/repos/matusvalo/cython/teams",
            "trees_url": "https://api.github.com/repos/matusvalo/cython/git/trees{/sha}",
            "updated_at": "2021-06-23T12:16:11Z",
            "url": "https://api.github.com/repos/matusvalo/cython",
            "watchers": 2,
            "watchers_count": 2
        },
        "sha": "9d71f21c384b7d48714951d9db8834086ebfa571",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
            "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
            "followers_url": "https://api.github.com/users/matusvalo/followers",
            "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
            "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/matusvalo",
            "id": 827060,
            "login": "matusvalo",
            "node_id": "MDQ6VXNlcjgyNzA2MA==",
            "organizations_url": "https://api.github.com/users/matusvalo/orgs",
            "received_events_url": "https://api.github.com/users/matusvalo/received_events",
            "repos_url": "https://api.github.com/users/matusvalo/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/matusvalo"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/4242",
    "id": 676104138,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/4242",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "4442f4b0adb7cfe7eb6993eee91e89eea9fb0a4b",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njc2MTA0MTM4",
    "number": 4242,
    "patch_url": "https://github.com/cython/cython/pull/4242.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/4242/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/9d71f21c384b7d48714951d9db8834086ebfa571",
    "title": "Introduce pure python mode in language basics documentation",
    "updated_at": "2021-06-29T11:42:24Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/4242",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
        "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
        "followers_url": "https://api.github.com/users/matusvalo/followers",
        "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
        "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/matusvalo",
        "id": 827060,
        "login": "matusvalo",
        "node_id": "MDQ6VXNlcjgyNzA2MA==",
        "organizations_url": "https://api.github.com/users/matusvalo/orgs",
        "received_events_url": "https://api.github.com/users/matusvalo/received_events",
        "repos_url": "https://api.github.com/users/matusvalo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/matusvalo"
    }
}