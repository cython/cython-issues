{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/6353/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6353/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/6353"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/6353"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6353/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6353"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407"
        }
    },
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
        "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
        "followers_url": "https://api.github.com/users/dalcinl/followers",
        "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
        "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dalcinl",
        "id": 294981,
        "login": "dalcinl",
        "node_id": "MDQ6VXNlcjI5NDk4MQ==",
        "organizations_url": "https://api.github.com/users/dalcinl/orgs",
        "received_events_url": "https://api.github.com/users/dalcinl/received_events",
        "repos_url": "https://api.github.com/users/dalcinl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dalcinl"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
            "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
            "followers_url": "https://api.github.com/users/dalcinl/followers",
            "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
            "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dalcinl",
            "id": 294981,
            "login": "dalcinl",
            "node_id": "MDQ6VXNlcjI5NDk4MQ==",
            "organizations_url": "https://api.github.com/users/dalcinl/orgs",
            "received_events_url": "https://api.github.com/users/dalcinl/received_events",
            "repos_url": "https://api.github.com/users/dalcinl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dalcinl"
        }
    ],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1471,
            "forks_count": 1471,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1332,
            "open_issues_count": 1332,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2024-08-27T12:12:31Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 74160,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 9279,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2024-08-27T12:12:36Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 9279,
            "watchers_count": 9279,
            "web_commit_signoff_required": false
        },
        "sha": "20bceea6b19ffc2f65b9fba2e4f737f09e5a2b20",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Any alternative suggestions for the preprocessor guard?",
    "closed_at": "2024-08-25T16:19:54Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1727606198"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1727606198"
                }
            },
            "author_association": "MEMBER",
            "body": "In principle I think we can do better on Limited API >= 3.10:\r\n\r\n```\r\n#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\r\n    // ... your code\r\n#else\r\n    return (PyObject*) __Pyx_PyType_GetSlot((PyTypeObject*)type_obj, tp_new, newfunc)((PyTypeObject*)type_obj, args, kwargs);\r\n#endif\r\n```",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-22T18:11:32Z",
            "diff_hunk": "@@ -2217,7 +2217,16 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *tp_new, *obj;\n+    tp_new = PyObject_GetAttrString(type_obj, \"__new__\");\n+    if (unlikely(!tp_new)) return NULL;\n+    obj = PyObject_Call(tp_new, args, kwargs);\n+    Py_DECREF(tp_new);\n+    return obj;\n+#else\n     return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1727606198",
            "id": 1727606198,
            "line": 2229,
            "node_id": "PRRC_kwDOABDGAc5m-S22",
            "original_commit_id": "23958473eba68fb3f1be17bba62c9a6a72b705d5",
            "original_line": 2229,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 17,
            "pull_request_review_id": 2255339327,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1727606198/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-22T18:11:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1727606198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1727611080"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1727611080"
                }
            },
            "author_association": "MEMBER",
            "body": "Or\r\n\r\n```\r\nPyObject *result = (PyObject*) __Pyx_PyType_TryGetSlot((PyTypeObject*)type_obj, tp_new, newfunc)((PyTypeObject*)type_obj, args, kwargs);\r\n#if (CYTHON_LIMITED_API &&  __PYX_LIMITED_VERSION_HEX < 0x030A0000\r\nif (!result) {\r\n  // Your code\r\n}\r\n#endif\r\nreturn result;\r\n```\r\n\r\nwhich will be faster on heap types on all limited API versions",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-22T18:15:40Z",
            "diff_hunk": "@@ -2217,7 +2217,16 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *tp_new, *obj;\n+    tp_new = PyObject_GetAttrString(type_obj, \"__new__\");\n+    if (unlikely(!tp_new)) return NULL;\n+    obj = PyObject_Call(tp_new, args, kwargs);\n+    Py_DECREF(tp_new);\n+    return obj;\n+#else\n     return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1727611080",
            "id": 1727611080,
            "in_reply_to_id": 1727606198,
            "line": 2229,
            "node_id": "PRRC_kwDOABDGAc5m-UDI",
            "original_commit_id": "23958473eba68fb3f1be17bba62c9a6a72b705d5",
            "original_line": 2229,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 17,
            "pull_request_review_id": 2255347097,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1727611080/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-22T18:15:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1727611080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1727740481"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1727740481"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, that's great! Thanks for the pointer! Actually, what I've done so far does not actually work, getattr \"__new__\" returns a wrapper callable that in the end does not behave as expected and raises `TypeError`.",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-22T20:01:47Z",
            "diff_hunk": "@@ -2217,7 +2217,16 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *tp_new, *obj;\n+    tp_new = PyObject_GetAttrString(type_obj, \"__new__\");\n+    if (unlikely(!tp_new)) return NULL;\n+    obj = PyObject_Call(tp_new, args, kwargs);\n+    Py_DECREF(tp_new);\n+    return obj;\n+#else\n     return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1727740481",
            "id": 1727740481,
            "in_reply_to_id": 1727606198,
            "line": 2229,
            "node_id": "PRRC_kwDOABDGAc5m-zpB",
            "original_commit_id": "23958473eba68fb3f1be17bba62c9a6a72b705d5",
            "original_line": 2229,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 17,
            "pull_request_review_id": 2255544359,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1727740481/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-22T20:01:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1727740481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729406964"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729406964"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\r\n```",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-23T19:05:47Z",
            "diff_hunk": "@@ -2214,10 +2214,39 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n-    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+    newfunc tp_new = __Pyx_PyType_TryGetSlot((PyTypeObject*)type_obj, tp_new, newfunc);\n+#if CYTHON_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729406964",
            "id": 1729406964,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nFKf0",
            "original_commit_id": "7c5455d4b42aa834d0a2fbffdfb48c7fee38c9a6",
            "original_line": 2222,
            "original_position": 10,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2257929556,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729406964/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-23T19:36:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729406964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729412388"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729412388"
                }
            },
            "author_association": "MEMBER",
            "body": "This function is inlined and used to be short, which is the reason why it lived entirely in a `proto` section.\r\n\r\nI suggest moving the fallback code to a separate non-inline function and putting that in the normal impl (no suffix) utility code section, to move it clearly out of the fast paths and after the user code in the C file.",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-23T19:10:51Z",
            "diff_hunk": "@@ -2214,10 +2214,39 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729412388",
            "id": 1729412388,
            "line": 2223,
            "node_id": "PRRC_kwDOABDGAc5nFL0k",
            "original_commit_id": "7c5455d4b42aa834d0a2fbffdfb48c7fee38c9a6",
            "original_line": 2223,
            "original_position": 7,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 10,
            "pull_request_review_id": 2257929556,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729412388/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-24T05:28:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729412388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729430249"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729430249"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it's generally bad style to incref *after* storing an external reference. I understand that it simplifies the error handling here, but it means that there's a short time interval in which the refcounts in a collection are too low. I'd rather try to avoid that – *especially* in code for the Stable ABI. There is no guarantee that future Python implementations won't replace their garbage collector with something more elaborate, for example.\r\n\r\nAnd it's not like we're really risking any failures in this code…",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-23T19:30:58Z",
            "diff_hunk": "@@ -2214,10 +2214,39 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n-    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+    newfunc tp_new = __Pyx_PyType_TryGetSlot((PyTypeObject*)type_obj, tp_new, newfunc);\n+#if CYTHON_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+    if (!tp_new) {\n+        PyObject *new_func = NULL, *new_args = NULL, *obj;\n+        Py_ssize_t i, nargs = PyTuple_Size(args);\n+\n+        if (unlikely(nargs < 0)) goto bad;\n+        new_args = PyTuple_New(nargs + 1);\n+        if (unlikely(!new_args)) goto bad;\n+        for (i = 0; i < nargs + 1; i++) {\n+            PyObject *item = (i == 0) ? type_obj : PyTuple_GetItem(args, i - 1);\n+            if (unlikely(!item)) goto bad;\n+            if (unlikely(PyTuple_SetItem(new_args, i, item)) < 0) goto bad;\n+            Py_INCREF(item);",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729430249",
            "id": 1729430249,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nFQLp",
            "original_commit_id": "7c5455d4b42aa834d0a2fbffdfb48c7fee38c9a6",
            "original_line": 2234,
            "original_position": 22,
            "original_start_line": 2233,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2257929556,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729430249/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-08-23T19:36:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729430249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729934530"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729934530"
                }
            },
            "author_association": "MEMBER",
            "body": "It doesn't actually simplify the reference counting here. `PyTuple_SetItem` steals a reference even if it fails. Therefore this code is actually wrong if it fails because it loses a reference to `item`.\r\n\r\nJust put the incref first and it's right in both cases.",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T10:46:13Z",
            "diff_hunk": "@@ -2214,10 +2214,39 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n-    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+    newfunc tp_new = __Pyx_PyType_TryGetSlot((PyTypeObject*)type_obj, tp_new, newfunc);\n+#if CYTHON_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+    if (!tp_new) {\n+        PyObject *new_func = NULL, *new_args = NULL, *obj;\n+        Py_ssize_t i, nargs = PyTuple_Size(args);\n+\n+        if (unlikely(nargs < 0)) goto bad;\n+        new_args = PyTuple_New(nargs + 1);\n+        if (unlikely(!new_args)) goto bad;\n+        for (i = 0; i < nargs + 1; i++) {\n+            PyObject *item = (i == 0) ? type_obj : PyTuple_GetItem(args, i - 1);\n+            if (unlikely(!item)) goto bad;\n+            if (unlikely(PyTuple_SetItem(new_args, i, item)) < 0) goto bad;\n+            Py_INCREF(item);",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729934530",
            "id": 1729934530,
            "in_reply_to_id": 1729430249,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHLTC",
            "original_commit_id": "7c5455d4b42aa834d0a2fbffdfb48c7fee38c9a6",
            "original_line": 2234,
            "original_position": 22,
            "original_start_line": 2233,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258666449,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729934530/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-08-24T10:46:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729934530",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729935259"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729935259"
                }
            },
            "author_association": "MEMBER",
            "body": "Damn, I should have checked the implementation. Of course, it makes sense to behave like that.",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T10:49:32Z",
            "diff_hunk": "@@ -2214,10 +2214,39 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n-    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+    newfunc tp_new = __Pyx_PyType_TryGetSlot((PyTypeObject*)type_obj, tp_new, newfunc);\n+#if CYTHON_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+    if (!tp_new) {\n+        PyObject *new_func = NULL, *new_args = NULL, *obj;\n+        Py_ssize_t i, nargs = PyTuple_Size(args);\n+\n+        if (unlikely(nargs < 0)) goto bad;\n+        new_args = PyTuple_New(nargs + 1);\n+        if (unlikely(!new_args)) goto bad;\n+        for (i = 0; i < nargs + 1; i++) {\n+            PyObject *item = (i == 0) ? type_obj : PyTuple_GetItem(args, i - 1);\n+            if (unlikely(!item)) goto bad;\n+            if (unlikely(PyTuple_SetItem(new_args, i, item)) < 0) goto bad;\n+            Py_INCREF(item);",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729935259",
            "id": 1729935259,
            "in_reply_to_id": 1729430249,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHLeb",
            "original_commit_id": "7c5455d4b42aa834d0a2fbffdfb48c7fee38c9a6",
            "original_line": 2234,
            "original_position": 22,
            "original_start_line": 2233,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258668130,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729935259/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-08-24T10:49:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729935259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729936103"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729936103"
                }
            },
            "author_association": "MEMBER",
            "body": "@scoder I'm not sure whether my update I captured all what you suggested, please have it a second look.",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T10:54:16Z",
            "diff_hunk": "@@ -2214,10 +2214,39 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n-    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+    newfunc tp_new = __Pyx_PyType_TryGetSlot((PyTypeObject*)type_obj, tp_new, newfunc);\n+#if CYTHON_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+    if (!tp_new) {\n+        PyObject *new_func = NULL, *new_args = NULL, *obj;\n+        Py_ssize_t i, nargs = PyTuple_Size(args);\n+\n+        if (unlikely(nargs < 0)) goto bad;\n+        new_args = PyTuple_New(nargs + 1);\n+        if (unlikely(!new_args)) goto bad;\n+        for (i = 0; i < nargs + 1; i++) {\n+            PyObject *item = (i == 0) ? type_obj : PyTuple_GetItem(args, i - 1);\n+            if (unlikely(!item)) goto bad;\n+            if (unlikely(PyTuple_SetItem(new_args, i, item)) < 0) goto bad;\n+            Py_INCREF(item);",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729936103",
            "id": 1729936103,
            "in_reply_to_id": 1729430249,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHLrn",
            "original_commit_id": "7c5455d4b42aa834d0a2fbffdfb48c7fee38c9a6",
            "original_line": 2234,
            "original_position": 22,
            "original_start_line": 2233,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258669126,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729936103/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-08-24T10:54:16Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729936103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729936687"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729936687"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nstatic PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs); /*proto*/\r\n```\r\n\r\nNot inline.",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T10:56:36Z",
            "diff_hunk": "@@ -2214,12 +2214,52 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n+#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+static CYTHON_INLINE PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs); /*proto*/",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729936687",
            "id": 1729936687,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHL0v",
            "original_commit_id": "4008b49138d76219220a7ca65d4ddab7f5f76268",
            "original_line": 2221,
            "original_position": 8,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258669630,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729936687/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-24T10:56:37Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729936687",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729936822"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729936822"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nstatic PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\r\n```\r\n\r\nalso not inline",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T10:56:58Z",
            "diff_hunk": "@@ -2214,12 +2214,52 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n+#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+static CYTHON_INLINE PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs); /*proto*/\n+#endif\n static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {\n-    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));\n+    newfunc tp_new = __Pyx_PyType_TryGetSlot((PyTypeObject*)type_obj, tp_new, newfunc);\n+#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+    if (!tp_new) return __Pyx_tp_new_fallback(type_obj, args, kwargs);\n+#else\n+    assert(tp_new != NULL);\n+#endif\n+    return tp_new((PyTypeObject*)type_obj, args, kwargs);\n }\n \n+/////////////// tp_new ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+static CYTHON_INLINE PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs) {",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729936822",
            "id": 1729936822,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHL22",
            "original_commit_id": "4008b49138d76219220a7ca65d4ddab7f5f76268",
            "original_line": 2236,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258669814,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729936822/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-24T10:56:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729936822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729937057"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729937057"
                }
            },
            "author_association": "MEMBER",
            "body": "\r\nWhy other function (with split proto and impl) in the exact same file use CYTHON_INLINE then? Look at PyObjectCall, for example? What's the criteria for using or not using CYTHON_INLINE?",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T10:59:20Z",
            "diff_hunk": "@@ -2214,12 +2214,52 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n+#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+static CYTHON_INLINE PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs); /*proto*/",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729937057",
            "id": 1729937057,
            "in_reply_to_id": 1729936687,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHL6h",
            "original_commit_id": "4008b49138d76219220a7ca65d4ddab7f5f76268",
            "original_line": 2221,
            "original_position": 8,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258670037,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729937057/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-24T10:59:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729937057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729937735"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729937735"
                }
            },
            "author_association": "MEMBER",
            "body": "Either will work so it's not a hard suggestion. But if we've moved it out of the proto section specifically because we think it's too bulky to inline then it seems a bit silly to ask the compiler to inline it.",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T11:03:01Z",
            "diff_hunk": "@@ -2214,12 +2214,52 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n+#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+static CYTHON_INLINE PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs); /*proto*/",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729937735",
            "id": 1729937735,
            "in_reply_to_id": 1729936687,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHMFH",
            "original_commit_id": "4008b49138d76219220a7ca65d4ddab7f5f76268",
            "original_line": 2221,
            "original_position": 8,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258670836,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729937735/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-24T11:03:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729937735",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729941549"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729941549"
                }
            },
            "author_association": "MEMBER",
            "body": "As my fallback is used in Py_LIMITED_API, which is already slower that normal mode, I'm not convinced that the proto/impl split requested by @scoder is really that crucial. My last changes with the split had the sole intention to humor him, now I'll remove CYTHON_INLINE to humor you.\r\n\r\nPS: A really large number of functions in `ObjectHandling.c` use CYTHON_INLINE. Some of these functions look more complicated that the silly fallback I implemented. What's the criteria to use or not use CYTHON_INLINE in utility code?",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T11:21:35Z",
            "diff_hunk": "@@ -2214,12 +2214,52 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n+#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+static CYTHON_INLINE PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs); /*proto*/",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729941549",
            "id": 1729941549,
            "in_reply_to_id": 1729936687,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHNAt",
            "original_commit_id": "4008b49138d76219220a7ca65d4ddab7f5f76268",
            "original_line": 2221,
            "original_position": 8,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258674993,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729941549/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-24T11:21:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729941549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6353#discussion_r1729945491"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6353"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1729945491"
                }
            },
            "author_association": "MEMBER",
            "body": "> What's the criteria to use or not use CYTHON_INLINE in utility code?\r\n\r\nThere's more than one. In some cases, we use(d) `CYTHON_INLINE` on functions for which it's difficult to decide whether they will be used or not. As long as they compile down to something simple, the inlining request (which is not a strict command, more of a hint to the C compiler) won't hurt but the C compiler also won't complain that they are unused.\r\n\r\nMore importantly, I broadly used `CYTHON_INLINE` on functions that receive many constant arguments, so that inlining them can strip down their effective binary code considerably. In some extreme cases, a relatively long function can be boiled down to just a few instructions, depending on the usage. And there are several examples where I split up the overall code into multiple functions, only the hottest ones of which are marked as `CYTHON_INLINE`, to lay out the fast path for the C compiler.\r\n\r\nIn this PR, we know when (and that) the function is used and that the fallback function is absolutely not worth inlining, because it's relatively expensive and almost never used in modern CPython runtimes. So, I fail to see any reason to request inlining.",
            "commit_id": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "created_at": "2024-08-24T11:40:21Z",
            "diff_hunk": "@@ -2214,12 +2214,52 @@ static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name\n \n \n /////////////// tp_new.proto ///////////////\n+//@requires: ModuleSetupCode.c::GetRuntimeVersion\n \n #define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)\n+#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030A0000\n+static CYTHON_INLINE PyObject* __Pyx_tp_new_fallback(PyObject* type_obj, PyObject* args, PyObject* kwargs); /*proto*/",
            "html_url": "https://github.com/cython/cython/pull/6353#discussion_r1729945491",
            "id": 1729945491,
            "in_reply_to_id": 1729936687,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5nHN-T",
            "original_commit_id": "4008b49138d76219220a7ca65d4ddab7f5f76268",
            "original_line": 2221,
            "original_position": 8,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 2258679108,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6353",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729945491/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-24T11:40:21Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1729945491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6353/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407/comments",
            "commit": {
                "author": {
                    "date": "2024-08-24T10:08:28Z",
                    "email": "dalcinl@gmail.com",
                    "name": "Lisandro Dalcin"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-08-24T11:51:09Z",
                    "email": "dalcinl@gmail.com",
                    "name": "Lisandro Dalcin"
                },
                "message": "fix: Do not use type->tp_new under Py_LIMITED_API",
                "tree": {
                    "sha": "7a6f8c1f77760a71a2a0d2e09b55777a5068db3f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7a6f8c1f77760a71a2a0d2e09b55777a5068db3f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
                "verification": {
                    "payload": "tree 7a6f8c1f77760a71a2a0d2e09b55777a5068db3f\nparent 20bceea6b19ffc2f65b9fba2e4f737f09e5a2b20\nauthor Lisandro Dalcin <dalcinl@gmail.com> 1724494108 +0300\ncommitter Lisandro Dalcin <dalcinl@gmail.com> 1724500269 +0300\n\nfix: Do not use type->tp_new under Py_LIMITED_API\n",
                    "reason": "valid",
                    "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg4kOCoRjDf8XBKBtusFFt5pxy5c\nklrm4Se4ubIOeFoqwAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQMuDtNyOEJOMRU6CQvwMs9uapizN//38vsJQb/1Ce2cp8vyXB/OkkH0ijLe6Z978wx\nNvusLy8R8vec57QveOuAU=\n-----END SSH SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            },
            "html_url": "https://github.com/cython/cython/commit/eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "node_id": "C_kwDOGVwwYdoAKGViNzdhMzAwYzFiMmEwZjlkZTNjYTY3ZTBkYjlmOGZmY2MxM2Y0MDc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/20bceea6b19ffc2f65b9fba2e4f737f09e5a2b20",
                    "sha": "20bceea6b19ffc2f65b9fba2e4f737f09e5a2b20",
                    "url": "https://api.github.com/repos/cython/cython/commits/20bceea6b19ffc2f65b9fba2e4f737f09e5a2b20"
                }
            ],
            "sha": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
            "url": "https://api.github.com/repos/cython/cython/commits/eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/6353/commits",
    "created_at": "2024-08-22T18:01:37Z",
    "diff_url": "https://github.com/cython/cython/pull/6353.diff",
    "draft": false,
    "head": {
        "label": "dalcinl:bugfix/py-limited-api-tp_new",
        "ref": "bugfix/py-limited-api-tp_new",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dalcinl/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dalcinl/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dalcinl/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dalcinl/cython/branches{/branch}",
            "clone_url": "https://github.com/dalcinl/cython.git",
            "collaborators_url": "https://api.github.com/repos/dalcinl/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dalcinl/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/dalcinl/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dalcinl/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dalcinl/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dalcinl/cython/contributors",
            "created_at": "2021-11-07T10:24:31Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dalcinl/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dalcinl/cython/downloads",
            "events_url": "https://api.github.com/repos/dalcinl/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dalcinl/cython/forks",
            "full_name": "dalcinl/cython",
            "git_commits_url": "https://api.github.com/repos/dalcinl/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dalcinl/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dalcinl/cython/git/tags{/sha}",
            "git_url": "git://github.com/dalcinl/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/dalcinl/cython/hooks",
            "html_url": "https://github.com/dalcinl/cython",
            "id": 425472097,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dalcinl/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dalcinl/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dalcinl/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/dalcinl/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dalcinl/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/dalcinl/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/dalcinl/cython/merges",
            "milestones_url": "https://api.github.com/repos/dalcinl/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "R_kgDOGVwwYQ",
            "notifications_url": "https://api.github.com/repos/dalcinl/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
                "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
                "followers_url": "https://api.github.com/users/dalcinl/followers",
                "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
                "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dalcinl",
                "id": 294981,
                "login": "dalcinl",
                "node_id": "MDQ6VXNlcjI5NDk4MQ==",
                "organizations_url": "https://api.github.com/users/dalcinl/orgs",
                "received_events_url": "https://api.github.com/users/dalcinl/received_events",
                "repos_url": "https://api.github.com/users/dalcinl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dalcinl"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dalcinl/cython/pulls{/number}",
            "pushed_at": "2024-08-27T12:55:40Z",
            "releases_url": "https://api.github.com/repos/dalcinl/cython/releases{/id}",
            "size": 70680,
            "ssh_url": "git@github.com:dalcinl/cython.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/dalcinl/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/dalcinl/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dalcinl/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/dalcinl/cython/subscription",
            "svn_url": "https://github.com/dalcinl/cython",
            "tags_url": "https://api.github.com/repos/dalcinl/cython/tags",
            "teams_url": "https://api.github.com/repos/dalcinl/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dalcinl/cython/git/trees{/sha}",
            "updated_at": "2024-08-22T10:47:28Z",
            "url": "https://api.github.com/repos/dalcinl/cython",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
            "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
            "followers_url": "https://api.github.com/users/dalcinl/followers",
            "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
            "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dalcinl",
            "id": 294981,
            "login": "dalcinl",
            "node_id": "MDQ6VXNlcjI5NDk4MQ==",
            "organizations_url": "https://api.github.com/users/dalcinl/orgs",
            "received_events_url": "https://api.github.com/users/dalcinl/received_events",
            "repos_url": "https://api.github.com/users/dalcinl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dalcinl"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/6353",
    "id": 2032692007,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/6353",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "F5AB5D",
            "default": false,
            "description": "",
            "id": 4210073287,
            "name": "limited api",
            "node_id": "LA_kwDOABDGAc768J7H",
            "url": "https://api.github.com/repos/cython/cython/labels/limited%20api"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b355423c7c6a38e2f7d2e8dc9d711acd533f8e5f",
    "merged_at": "2024-08-25T16:19:54Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 212,
        "created_at": "2019-02-24T14:21:23Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "* Remove code for Python 2 and Python < 3.7.\r\n* Integrate better with Python 3.\r\n* Improve support for the Limited API.\r\n* Start supporting GIL-free Python 3.13.\r\n* Support the Py3.13 `sys.monitoring` API.\r\n* Support and use `am_send` for coroutines.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/65",
        "id": 4082235,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/65/labels",
        "node_id": "MDk6TWlsZXN0b25lNDA4MjIzNQ==",
        "number": 65,
        "open_issues": 17,
        "state": "open",
        "title": "3.1",
        "updated_at": "2024-08-27T12:12:31Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/65"
    },
    "node_id": "PR_kwDOABDGAc55KGsn",
    "number": 6353,
    "patch_url": "https://github.com/cython/cython/pull/6353.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/6353/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/eb77a300c1b2a0f9de3ca67e0db9f8ffcc13f407",
    "title": "fix: Do not use type->tp_new under Py_LIMITED_API",
    "updated_at": "2024-08-26T16:00:11Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/6353",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/294981?v=4",
        "events_url": "https://api.github.com/users/dalcinl/events{/privacy}",
        "followers_url": "https://api.github.com/users/dalcinl/followers",
        "following_url": "https://api.github.com/users/dalcinl/following{/other_user}",
        "gists_url": "https://api.github.com/users/dalcinl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dalcinl",
        "id": 294981,
        "login": "dalcinl",
        "node_id": "MDQ6VXNlcjI5NDk4MQ==",
        "organizations_url": "https://api.github.com/users/dalcinl/orgs",
        "received_events_url": "https://api.github.com/users/dalcinl/received_events",
        "repos_url": "https://api.github.com/users/dalcinl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dalcinl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dalcinl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dalcinl"
    }
}