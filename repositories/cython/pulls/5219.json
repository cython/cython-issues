{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/5219/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5219/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/5219"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/5219"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5219/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5219"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/d2c29bb427554d375c1680d3007f3d3849bd1b39"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1355,
            "forks_count": 1355,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1121,
            "open_issues_count": 1121,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2023-01-25T13:48:50Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 66971,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7617,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2023-01-25T14:49:22Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7617,
            "watchers_count": 7617,
            "web_commit_signoff_required": false
        },
        "sha": "891d4604bcfbed45d1de66d1a4ac988c2b311e11",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Enhance #5075 - use c api insted of evaluating python code\r\n\r\nFrom #5075\r\n> The general optimization for unpacking builtin method calls was breaking bound classmethods (with crashes on Py2 and wrong answers on Py3).\r\n> \r\n> This PR adds code to handle it. The code is unlikely to be very fast, but my judgement is that this is a rare case and thus it's more important just to get it to work rather than to optimize this case.\r\n> \r\n> Fixes #5051\r\n\r\n\r\n",
    "closed_at": "2023-01-24T09:42:36Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1081195134"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1081195134"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If I think about it it seems wrong, `__Pyx_PyObject_GetAttrStr` should have already incremented the refcount so we should be fine then?",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-19T12:25:44Z",
            "diff_hunk": "@@ -2000,15 +2019,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);\n+                return -1;\n+            }\n+            Py_INCREF(method);  // PyCFunction will Py_XDECREF method on destruction",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1081195134",
            "id": 1081195134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Acbp-",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 2065,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1261684984,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1081195134/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-19T12:25:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1081195134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1081655822"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1081655822"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think function pointer->void* is actually portable. I believe function pointer-> other function pointer is allowed though.\r\n\r\nAlso, if we want to keep these they should probably have `__PYX_` names",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-19T18:21:39Z",
            "diff_hunk": "@@ -1992,6 +1992,25 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define CONST_REINTERPRET_CAST(pointer_type, pointer) ((pointer_type)(void *)(pointer))",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1081655822",
            "id": 1081655822,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AeMIO",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 1995,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1262362402,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1081655822/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-19T18:28:17Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1081655822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1081661170"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1081661170"
                }
            },
            "author_association": "MEMBER",
            "body": "`PyCFunction_New` increfs self internally, so it `XDECREF`s its own reference. We want to `Py_DECREF` method on both the error and non-error path after `PyCFunction_New` I think",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-19T18:26:20Z",
            "diff_hunk": "@@ -2000,15 +2019,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);\n+                return -1;\n+            }\n+            Py_INCREF(method);  // PyCFunction will Py_XDECREF method on destruction",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1081661170",
            "id": 1081661170,
            "in_reply_to_id": 1081195134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AeNby",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 2065,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1262362402,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1081661170/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-19T18:28:17Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1081661170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1082746462"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1082746462"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I don't think function pointer->void* is actually portable. I believe function pointer-> other function pointer is allowed though.\r\n\r\nYes, it seems that C11 standard explicitly allows only casts from function pointers to other function pointers\r\nWhen I cast `PyCFunctionWithKeywords` to `PyCFunction` compiler generates a warning, I wanted to escape it\r\n\r\nIt seems like cpython uses a smarter approach of casting to void function for `_PyCFunction_CAST`\r\n```c\r\n// Cast an function to the PyCFunction type to use it with PyMethodDef.\r\n//\r\n// This macro can be used to prevent compiler warnings\r\n// ...\r\n#define _PyCFunction_CAST(func) \\\r\n    _Py_CAST(PyCFunction, _Py_CAST(void(*)(void), (func)))\r\n```\r\n\r\n> Also, if we want to keep these they should probably have `__PYX_` names\r\n\r\nSure! I can see some areas that can benifit from clean up with those macros, if I want to refactor them it should probably be done in another pr\r\n",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-20T16:08:38Z",
            "diff_hunk": "@@ -1992,6 +1992,25 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define CONST_REINTERPRET_CAST(pointer_type, pointer) ((pointer_type)(void *)(pointer))",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1082746462",
            "id": 1082746462,
            "in_reply_to_id": 1081655822,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AiWZe",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 1995,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1263926838,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1082746462/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-20T16:08:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1082746462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1082764645"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1082764645"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Oh yeah, I missed that `Py_XNewRef` for self.\r\nI think you are correct, previosly `method` was not cleaned up on a non-error path\r\n\r\nThis maked me think if we can have some test on how much memory is still occupied before python terminates, it would be nice to catch those kinds of errors, this is likely to be a systematic problem\r\n\r\nAlso I wonder if there is a valgrind test, it still seems like a good idea to have it at least for one platform",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-20T16:19:35Z",
            "diff_hunk": "@@ -2000,15 +2019,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);\n+                return -1;\n+            }\n+            Py_INCREF(method);  // PyCFunction will Py_XDECREF method on destruction",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1082764645",
            "id": 1082764645,
            "in_reply_to_id": 1081195134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Aia1l",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 2065,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1263946152,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1082764645/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-20T16:19:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1082764645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083007477"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083007477"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think Python cleans up after itself perfectly on shutdown anyway so I believe Valgrind is quite hard to interpret.\r\n\r\nWe have refnanny for references in generated code, but not utility code.",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-20T20:15:11Z",
            "diff_hunk": "@@ -2000,15 +2019,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);\n+                return -1;\n+            }\n+            Py_INCREF(method);  // PyCFunction will Py_XDECREF method on destruction",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083007477",
            "id": 1083007477,
            "in_reply_to_id": 1081195134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AjWH1",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 2065,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264280679,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083007477/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-20T20:15:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083007477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083012057"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083012057"
                }
            },
            "author_association": "MEMBER",
            "body": "> > Also, if we want to keep these they should probably have __PYX_ names\r\n\r\n> Sure! I can see some areas that can benifit from clean up with those macros, if I want to refactor them it should probably be done in another pr\r\n\r\nFor now I'm just suggesting changing changing the name to not clash with anything a user/library might have defined. I agree a refactor of elsewhere shouldn't be in this PR",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-20T20:17:47Z",
            "diff_hunk": "@@ -1992,6 +1992,25 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define CONST_REINTERPRET_CAST(pointer_type, pointer) ((pointer_type)(void *)(pointer))",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083012057",
            "id": 1083012057,
            "in_reply_to_id": 1081655822,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AjXPZ",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 1995,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264287749,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083012057/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-20T20:17:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083012057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083431005"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083431005"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    /* .ml_name  = */ \"CythonUnboundCMethod\",\r\n```\r\n\r\nJust proposing this change so if the name does ever accidentally leak it's a little easier to trace to Cython",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T10:57:26Z",
            "diff_hunk": "@@ -1992,6 +1992,26 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n+#define __PYX_REINTERPRET_POINTER(pointer_type, pointer) ((pointer_type)(void *)(pointer))\n+#define __PYX_RUNTIME_REINTERPRET(type, var) (*(type *)(&var))\n+\n+static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {\n+    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));\n+    if (unlikely(!selfless_args)) return NULL;\n+\n+    PyObject *result = PyObject_Call(method, selfless_args, kwargs);\n+    Py_DECREF(selfless_args);\n+    return result;\n+}\n+\n+static PyMethodDef __Pyx_UnboundCMethod_Def = {\n+    /* .ml_name  = */ \"UnboundCMethod\",",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083431005",
            "id": 1083431005,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Ak9hd",
            "original_commit_id": "ce26f399b08901c66817d2650da779fcae1cf221",
            "original_line": 2009,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264749150,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083431005/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-22T11:02:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083431005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083431147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083431147"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    // In PyPy functions are regular methods, so just do\r\n```\r\n\r\nComment was probably from my PR but let's improve it a little",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T10:58:46Z",
            "diff_hunk": "@@ -2000,15 +2020,54 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083431147",
            "id": 1083431147,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Ak9jr",
            "original_commit_id": "ce26f399b08901c66817d2650da779fcae1cf221",
            "original_line": 2038,
            "original_position": 48,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264749150,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083431147/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-22T11:02:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083431147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083431623"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083431623"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\r\n            Py_DECREF(method);  // __Pyx_PyObject_GetAttrStr\r\n            if (unlikely(!unbound_method)) {\r\n                return -1;\r\n            }\r\n            target->method = unbound_method;\r\n        }\r\n    }\r\n```\r\n\r\nSo I think we only want to decref method in the classmethod case. In the normal non-classmethod case where we've just set `target->method = method` then I don't think it should be decrefed.",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T11:02:26Z",
            "diff_hunk": "@@ -2000,15 +2020,54 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            // PyCFunction_New will create and own method reference, no need to worry about it\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);  // __Pyx_PyObject_GetAttrStr\n+                return -1;\n+            }\n+            target->method = unbound_method;\n+        }\n+    }\n+    Py_DECREF(method);  // __Pyx_PyObject_GetAttrStr",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083431623",
            "id": 1083431623,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Ak9rH",
            "original_commit_id": "ce26f399b08901c66817d2650da779fcae1cf221",
            "original_line": 2070,
            "original_position": 80,
            "original_start_line": 2062,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264749150,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083431623/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2023-01-22T11:02:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083431623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083445665"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083445665"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n            // New PyCFunction will own method reference\r\n            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\r\n            Py_DECREF(method);  // __Pyx_PyObject_GetAttrStr\r\n```",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T12:40:14Z",
            "diff_hunk": "@@ -2000,15 +2020,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In PyPy functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            // PyCFunction_New will create and own method reference, no need to worry about it\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            Py_DECREF(method);  // __Pyx_PyObject_GetAttrStr",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083445665",
            "id": 1083445665,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AlBGh",
            "original_commit_id": "710c429fd6ca6e7c686a138b9d1ed906442555ed",
            "original_line": 2063,
            "original_position": 73,
            "original_start_line": 2061,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264762347,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083445665/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2023-01-22T12:40:14Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083445665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083445792"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083445792"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n            if (unlikely(!unbound_method)) return -1;\r\n```",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T12:40:59Z",
            "diff_hunk": "@@ -2000,15 +2020,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In PyPy functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            // New PyCFunction will own method reference\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            Py_DECREF(method);  // __Pyx_PyObject_GetAttrStr\n+            if (unlikely(!unbound_method)) {\n+                return -1;\n+            }",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083445792",
            "id": 1083445792,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AlBIg",
            "original_commit_id": "0bf027444857726183b4d5c9e95a279ff5b3c929",
            "original_line": 2066,
            "original_position": 76,
            "original_start_line": 2064,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264762455,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083445792/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2023-01-22T12:41:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083445792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083446255"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083446255"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\r\n            if (unlikely(!unbound_method)) return -1;\r\n            // New PyCFunction will own method reference, thus decref __Pyx_PyObject_GetAttrStr\r\n            Py_DECREF(method);\r\n```",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T12:44:26Z",
            "diff_hunk": "@@ -2000,15 +2020,51 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In PyPy functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            // New PyCFunction will own method reference\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            Py_DECREF(method);  // __Pyx_PyObject_GetAttrStr\n+            if (unlikely(!unbound_method)) return -1;",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083446255",
            "id": 1083446255,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AlBPv",
            "original_commit_id": "905988a828d4779e116ed8f2e3e3a277967099bc",
            "original_line": 2064,
            "original_position": 74,
            "original_start_line": 2061,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264762981,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083446255/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2023-01-22T12:44:27Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083446255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083448461"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083448461"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I tried to experiment with [cpython/Misc/Readme.valgrind](https://github.com/python/cpython/blob/main/Misc/README.valgrind) and [cpython/Misc/valgrind-python.supp](https://github.com/python/cpython/blob/main/Misc/valgrind-python.supp), but it's not very fruitful \r\nI tried to generate a suppression from the scratch, and I'm getting mixed results",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T12:59:02Z",
            "diff_hunk": "@@ -2000,15 +2019,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);\n+                return -1;\n+            }\n+            Py_INCREF(method);  // PyCFunction will Py_XDECREF method on destruction",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083448461",
            "id": 1083448461,
            "in_reply_to_id": 1081195134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AlByN",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 2065,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264764918,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083448461/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-22T12:59:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083448461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083448653"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083448653"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Actually this is a separate issue, and should probably be discussed elsewhere ",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T13:00:04Z",
            "diff_hunk": "@@ -2000,15 +2019,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);\n+                return -1;\n+            }\n+            Py_INCREF(method);  // PyCFunction will Py_XDECREF method on destruction",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083448653",
            "id": 1083448653,
            "in_reply_to_id": 1081195134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AlB1N",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 2065,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1264765097,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083448653/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-22T13:00:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083448653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083449274"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083449274"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Do I need to use cython versions of those (`PyTuple_GetSlice`, `PyTuple_Size`), if they exist (I didn't really check)?",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T13:03:39Z",
            "diff_hunk": "@@ -1992,6 +1992,26 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n+#define __PYX_REINTERPRET_POINTER(pointer_type, pointer) ((pointer_type)(void *)(pointer))\n+#define __PYX_RUNTIME_REINTERPRET(type, var) (*(type *)(&var))\n+\n+static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {\n+    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083449274",
            "id": 1083449274,
            "line": 1997,
            "node_id": "PRRC_kwDOABDGAc5AlB-6",
            "original_commit_id": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "original_line": 2000,
            "original_position": 9,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 6,
            "pull_request_review_id": 1264765706,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083449274/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-22T13:05:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083449274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083451444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083451444"
                }
            },
            "author_association": "MEMBER",
            "body": "No, I don't think so - they're straight-forward and universally available so there's nothing for Cython to wrap.",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-22T13:16:58Z",
            "diff_hunk": "@@ -1992,6 +1992,26 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n+#define __PYX_REINTERPRET_POINTER(pointer_type, pointer) ((pointer_type)(void *)(pointer))\n+#define __PYX_RUNTIME_REINTERPRET(type, var) (*(type *)(&var))\n+\n+static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {\n+    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083451444",
            "id": 1083451444,
            "in_reply_to_id": 1083449274,
            "line": 1997,
            "node_id": "PRRC_kwDOABDGAc5AlCg0",
            "original_commit_id": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "original_line": 2000,
            "original_position": 9,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 6,
            "pull_request_review_id": 1264767923,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083451444/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-22T13:16:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083451444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083833159"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083833159"
                }
            },
            "author_association": "MEMBER",
            "body": "> We have refnanny for references in generated code, but not utility code.\r\n\r\nNote that you can use it also in utility code, if you put in the required declarations and use the refnanny incref/decref/gotref/giveref macros. We just don't normally do it because it's cumbersome to copy all the boiler plate code together and write refnanny code by hand. If it helps here, it might be worth using. (My guess is that there are quite a number of utility code functions that might benefit from this, especially in `ObjectHandling.c` and `Builtins.c`, which deal a lot with object references.",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-23T09:44:51Z",
            "diff_hunk": "@@ -2000,15 +2019,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);\n+                return -1;\n+            }\n+            Py_INCREF(method);  // PyCFunction will Py_XDECREF method on destruction",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083833159",
            "id": 1083833159,
            "in_reply_to_id": 1081195134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AmftH",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 2065,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1265267784,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083833159/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-23T09:44:52Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083833159",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083837706"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083837706"
                }
            },
            "author_association": "MEMBER",
            "body": "Seems worth using a vectorcall here, if available, rather than creating a new tuple just for the call. (Not sure if that's an optimisation that we need to do right now.)",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-23T09:49:09Z",
            "diff_hunk": "@@ -1992,6 +1992,26 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n+#define __PYX_REINTERPRET_POINTER(pointer_type, pointer) ((pointer_type)(void *)(pointer))\n+#define __PYX_RUNTIME_REINTERPRET(type, var) (*(type *)(&var))\n+\n+static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {\n+    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083837706",
            "id": 1083837706,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Amg0K",
            "original_commit_id": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "original_line": 2000,
            "original_position": 9,
            "original_start_line": 1999,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1265274050,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083837706/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2023-01-23T09:59:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083837706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083839530"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083839530"
                }
            },
            "author_association": "MEMBER",
            "body": "There is some code that already handles this case in the `ClassMethod` section of `CythonFunction.c`. Could be extracted into a reusable `__Pyx_PyMethodDescr_Check()` function (which PyPy supports already).",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-23T09:50:54Z",
            "diff_hunk": "@@ -2000,15 +2020,51 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083839530",
            "id": 1083839530,
            "line": 2026,
            "node_id": "PRRC_kwDOABDGAc5AmhQq",
            "original_commit_id": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "original_line": 2028,
            "original_position": 37,
            "original_start_line": 2025,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 36,
            "pull_request_review_id": 1265274050,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083839530/reactions"
            },
            "side": "RIGHT",
            "start_line": 2023,
            "start_side": "RIGHT",
            "updated_at": "2023-01-23T09:59:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083839530",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1083847484"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1083847484"
                }
            },
            "author_association": "MEMBER",
            "body": "You seem to be using only the first of these three. We shouldn't commit unused code. It's really nice to know about these, though. We could add them to `ModuleSetupCode.c` instead and comment them out with `//`, so that the unused ones don't take any space in the generated C files, but are still available if they start becoming useful. (There are probably places already where they could be applied.)",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-23T09:58:21Z",
            "diff_hunk": "@@ -1992,6 +1992,26 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n+#define __PYX_REINTERPRET_POINTER(pointer_type, pointer) ((pointer_type)(void *)(pointer))\n+#define __PYX_RUNTIME_REINTERPRET(type, var) (*(type *)(&var))",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1083847484",
            "id": 1083847484,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5AmjM8",
            "original_commit_id": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "original_line": 1997,
            "original_position": 6,
            "original_start_line": 1995,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1265274050,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083847484/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2023-01-23T09:59:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1083847484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1084342005"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1084342005"
                }
            },
            "author_association": "MEMBER",
            "body": "This is definitely an obscure corner case so I'd be inclined to keep it simple for now. Much as this feels like a place that vectorcall would be good for",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-23T17:26:39Z",
            "diff_hunk": "@@ -1992,6 +1992,26 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n+#define __PYX_REINTERPRET_POINTER(pointer_type, pointer) ((pointer_type)(void *)(pointer))\n+#define __PYX_RUNTIME_REINTERPRET(type, var) (*(type *)(&var))\n+\n+static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {\n+    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1084342005",
            "id": 1084342005,
            "in_reply_to_id": 1083837706,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Aob71",
            "original_commit_id": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "original_line": 2000,
            "original_position": 9,
            "original_start_line": 1999,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1266029868,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084342005/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2023-01-23T17:26:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084342005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1084563483"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1084563483"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolving in favor of #5224",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-23T21:15:55Z",
            "diff_hunk": "@@ -2000,15 +2019,53 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))\n     #endif\n     {\n         PyMethodDescrObject *descr = (PyMethodDescrObject*) method;\n         target->func = descr->d_method->ml_meth;\n         target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);\n-    }\n+    } else\n+#endif\n+    // bound classmethods need special treatment\n+#if defined(CYTHON_COMPILING_IN_PYPY)\n+    // In these functions are regular methods, so just do\n+    // the self check\n+#elif PY_VERSION_HEX >= 0x03090000\n+    if (PyCFunction_CheckExact(method))\n+#else\n+    if (PyCFunction_Check(method))\n #endif\n+    {\n+        PyObject *self;\n+        int self_found;\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        self = PyObject_GetAttrString(method, \"__self__\");\n+        if (!self) {\n+            PyErr_Clear();\n+        }\n+#else\n+        self = PyCFunction_GET_SELF(method);\n+#endif\n+        self_found = (self && self != Py_None);\n+#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY\n+        Py_XDECREF(self);\n+#endif\n+        if (self_found) {\n+            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);\n+            if (unlikely(!unbound_method)) {\n+                Py_DECREF(method);\n+                return -1;\n+            }\n+            Py_INCREF(method);  // PyCFunction will Py_XDECREF method on destruction",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1084563483",
            "id": 1084563483,
            "in_reply_to_id": 1081195134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ApSAb",
            "original_commit_id": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "original_line": 2065,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1266350189,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084563483/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-23T21:15:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084563483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1084565669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1084565669"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I added a comment with a optimisation note, I think it's sufficient right now ",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-23T21:17:36Z",
            "diff_hunk": "@@ -1992,6 +1992,26 @@ typedef struct {\n /////////////// UnpackUnboundCMethod ///////////////\n //@requires: PyObjectGetAttrStr\n \n+#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n+#define __PYX_REINTERPRET_POINTER(pointer_type, pointer) ((pointer_type)(void *)(pointer))\n+#define __PYX_RUNTIME_REINTERPRET(type, var) (*(type *)(&var))\n+\n+static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {\n+    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1084565669",
            "id": 1084565669,
            "in_reply_to_id": 1083837706,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ApSil",
            "original_commit_id": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "original_line": 2000,
            "original_position": 9,
            "original_start_line": 1999,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1266352054,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084565669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2023-01-23T21:20:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084565669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1084665174"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1084665174"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "IMHO, this fix deserves it's own pr (#5225), it's scope is different from what this pr tries to solve\r\nAlso wrong code was there before this pr",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-23T23:12:24Z",
            "diff_hunk": "@@ -2000,15 +2020,51 @@ static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {\n     target->method = method;\n #if CYTHON_COMPILING_IN_CPYTHON\n     #if PY_MAJOR_VERSION >= 3\n-    // method descriptor type isn't exported in Py2.x, cannot easily check the type there\n     if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))\n+    #else\n+    // method descriptor type isn't exported in Py2.x, cannot easily check the type there.\n+    // Therefore, reverse the check to the most likely alternative\n+    // (which is returned for class methods)\n+    if (likely(!PyCFunction_Check(method)))",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1084665174",
            "id": 1084665174,
            "in_reply_to_id": 1083839530,
            "line": 2026,
            "node_id": "PRRC_kwDOABDGAc5Apq1W",
            "original_commit_id": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "original_line": 2028,
            "original_position": 37,
            "original_start_line": 2025,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 36,
            "pull_request_review_id": 1266570818,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084665174/reactions"
            },
            "side": "RIGHT",
            "start_line": 2023,
            "start_side": "RIGHT",
            "updated_at": "2023-01-23T23:19:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084665174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5219#discussion_r1084888103"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5219"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1084888103"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n\r\n```",
            "commit_id": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "created_at": "2023-01-24T07:26:18Z",
            "diff_hunk": "@@ -541,6 +541,13 @@\n   #endif\n #endif\n \n+// reinterpret\n+\n+// TODO: refactor existing code to use those macros\n+#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n+// #define __PYX_REINTERPRET_POINTER(pointer_type, pointer) ((pointer_type)(void *)(pointer))\n+// #define __PYX_RUNTIME_REINTERPRET(type, var) (*(type *)(&var))\n+",
            "html_url": "https://github.com/cython/cython/pull/5219#discussion_r1084888103",
            "id": 1084888103,
            "line": 550,
            "node_id": "PRRC_kwDOABDGAc5AqhQn",
            "original_commit_id": "39f5cf11d097474720b883abc55379d477166f0c",
            "original_line": 550,
            "original_position": 10,
            "original_start_line": null,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": 10,
            "pull_request_review_id": 1266931461,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5219",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084888103/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2023-01-24T07:26:18Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1084888103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5219/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b831ad89cbacaec26ddd2639bfdfc552fab65d4e/comments",
            "commit": {
                "author": {
                    "date": "2022-10-09T13:50:36Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-10-09T13:50:36Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix builtin bound classmethods\n\nThe general optimization for unpacking builtin method calls\nwas breaking bound classmethods (with crashes on Py2 and wrong\nanswers on Py3).\n\nThis PR adds code to handle it. The code is unlikely to be\nvery fast, but my judgement is that this is a rare case and\nthus it's more important just to get it to work rather than\nto optimize this case.\n\nFixes #5051",
                "tree": {
                    "sha": "65013920accc091c8554b56bdf60b6cdeb6c4f18",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/65013920accc091c8554b56bdf60b6cdeb6c4f18"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b831ad89cbacaec26ddd2639bfdfc552fab65d4e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b831ad89cbacaec26ddd2639bfdfc552fab65d4e",
            "node_id": "C_kwDOFnv_8doAKGI4MzFhZDg5Y2JhY2FlYzI2ZGRkMjYzOWJmZGZjNTUyZmFiNjVkNGU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/33cd7b0cf13313b36107f5d986be68aa9294830e",
                    "sha": "33cd7b0cf13313b36107f5d986be68aa9294830e",
                    "url": "https://api.github.com/repos/cython/cython/commits/33cd7b0cf13313b36107f5d986be68aa9294830e"
                }
            ],
            "sha": "b831ad89cbacaec26ddd2639bfdfc552fab65d4e",
            "url": "https://api.github.com/repos/cython/cython/commits/b831ad89cbacaec26ddd2639bfdfc552fab65d4e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3d42f88de90fe59ccf55ec896eb2949d7d93f887/comments",
            "commit": {
                "author": {
                    "date": "2022-10-09T16:02:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-10-09T16:02:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix availability of PyCFunction_CheckExact",
                "tree": {
                    "sha": "a09fc0c8bb7bd82e8eb01f797cbc8cc5334bf210",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a09fc0c8bb7bd82e8eb01f797cbc8cc5334bf210"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3d42f88de90fe59ccf55ec896eb2949d7d93f887",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/3d42f88de90fe59ccf55ec896eb2949d7d93f887",
            "node_id": "C_kwDOFnv_8doAKDNkNDJmODhkZTkwZmU1OWNjZjU1ZWM4OTZlYjI5NDlkN2Q5M2Y4ODc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b831ad89cbacaec26ddd2639bfdfc552fab65d4e",
                    "sha": "b831ad89cbacaec26ddd2639bfdfc552fab65d4e",
                    "url": "https://api.github.com/repos/cython/cython/commits/b831ad89cbacaec26ddd2639bfdfc552fab65d4e"
                }
            ],
            "sha": "3d42f88de90fe59ccf55ec896eb2949d7d93f887",
            "url": "https://api.github.com/repos/cython/cython/commits/3d42f88de90fe59ccf55ec896eb2949d7d93f887"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c7a46691e9eaa8f88447b3a179d42e4577c3adb2/comments",
            "commit": {
                "author": {
                    "date": "2022-10-09T18:26:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-10-09T18:26:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix for PyPy\n\nclassmethods have a different type for it",
                "tree": {
                    "sha": "5e608fbaed68325b955c69db2a1c3811d50341bf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5e608fbaed68325b955c69db2a1c3811d50341bf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c7a46691e9eaa8f88447b3a179d42e4577c3adb2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c7a46691e9eaa8f88447b3a179d42e4577c3adb2",
            "node_id": "C_kwDOFnv_8doAKGM3YTQ2NjkxZTllYWE4Zjg4NDQ3YjNhMTc5ZDQyZTQ1NzdjM2FkYjI",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3d42f88de90fe59ccf55ec896eb2949d7d93f887",
                    "sha": "3d42f88de90fe59ccf55ec896eb2949d7d93f887",
                    "url": "https://api.github.com/repos/cython/cython/commits/3d42f88de90fe59ccf55ec896eb2949d7d93f887"
                }
            ],
            "sha": "c7a46691e9eaa8f88447b3a179d42e4577c3adb2",
            "url": "https://api.github.com/repos/cython/cython/commits/c7a46691e9eaa8f88447b3a179d42e4577c3adb2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1e3b0090b30c371293a31d73858d111c1ab1b0ae/comments",
            "commit": {
                "author": {
                    "date": "2023-01-18T19:07:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-18T19:07:59Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "e107333822f492c2107d9eda3a1e838f0457b23a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e107333822f492c2107d9eda3a1e838f0457b23a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1e3b0090b30c371293a31d73858d111c1ab1b0ae",
                "verification": {
                    "payload": "tree e107333822f492c2107d9eda3a1e838f0457b23a\nparent c7a46691e9eaa8f88447b3a179d42e4577c3adb2\nauthor da-woods <dw-git@d-woods.co.uk> 1674068879 +0000\ncommitter GitHub <noreply@github.com> 1674068879 +0000\n\nApply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjyEOPCRBK7hj4Ov3rIwAA2cIIAF1g+Ok4sOdTcr1obNH2c2eq\nEAMKUdVhmXPE4oWRR8b12ePgPt1KtWex5bwIpsy+agodTIoSpNJpA4iqprEj8rru\nmYT98/QZqqBza8T03uZV9wK3tFirpSEPDNRZOSRyFA1D7zE5dlcp/6tuAdwEmpkx\nj9G/Hj1OGLCrPxo/5H2AD3uCuWNBiSK3FZ06361jfMek5O35+1JlaZPB1uluGui1\nobJNjX0gNtETH4UagbDPDowVBWuhHP46ely6Q9CDwIqQjAGhBIoF5Q1Lq8oPJg+r\nB28VqwNTG5lcJpj7KxNON62GgKacVWAGtJNBDmzrIF5oFGVmJNRh5RcJ4JbdWLE=\n=vNl/\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/1e3b0090b30c371293a31d73858d111c1ab1b0ae",
            "node_id": "C_kwDOFnv_8doAKDFlM2IwMDkwYjMwYzM3MTI5M2EzMWQ3Mzg1OGQxMTFjMWFiMWIwYWU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c7a46691e9eaa8f88447b3a179d42e4577c3adb2",
                    "sha": "c7a46691e9eaa8f88447b3a179d42e4577c3adb2",
                    "url": "https://api.github.com/repos/cython/cython/commits/c7a46691e9eaa8f88447b3a179d42e4577c3adb2"
                }
            ],
            "sha": "1e3b0090b30c371293a31d73858d111c1ab1b0ae",
            "url": "https://api.github.com/repos/cython/cython/commits/1e3b0090b30c371293a31d73858d111c1ab1b0ae"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b4266bf901c0b6f8fa14c79e8e85336800328185/comments",
            "commit": {
                "author": {
                    "date": "2023-01-18T19:13:19Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-18T19:13:19Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Rename \"ignore\" argument",
                "tree": {
                    "sha": "306f778a4b5e8b0b4ba223c9f8239e53e65b9167",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/306f778a4b5e8b0b4ba223c9f8239e53e65b9167"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b4266bf901c0b6f8fa14c79e8e85336800328185",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b4266bf901c0b6f8fa14c79e8e85336800328185",
            "node_id": "C_kwDOFnv_8doAKGI0MjY2YmY5MDFjMGI2ZjhmYTE0Yzc5ZThlODUzMzY4MDAzMjgxODU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1e3b0090b30c371293a31d73858d111c1ab1b0ae",
                    "sha": "1e3b0090b30c371293a31d73858d111c1ab1b0ae",
                    "url": "https://api.github.com/repos/cython/cython/commits/1e3b0090b30c371293a31d73858d111c1ab1b0ae"
                }
            ],
            "sha": "b4266bf901c0b6f8fa14c79e8e85336800328185",
            "url": "https://api.github.com/repos/cython/cython/commits/b4266bf901c0b6f8fa14c79e8e85336800328185"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/aed3ff9068a809c09261c11342b6d9f381fcef51/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T01:12:13Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T01:12:13Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "First try at implementing __Pyx_SelflessMethodWrapper",
                "tree": {
                    "sha": "3f90c59ad7235a8ee4e0d73345a636d8ef3c4fd1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3f90c59ad7235a8ee4e0d73345a636d8ef3c4fd1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/aed3ff9068a809c09261c11342b6d9f381fcef51",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/aed3ff9068a809c09261c11342b6d9f381fcef51",
            "node_id": "C_kwDOFnv_8doAKGFlZDNmZjkwNjhhODA5YzA5MjYxYzExMzQyYjZkOWYzODFmY2VmNTE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b4266bf901c0b6f8fa14c79e8e85336800328185",
                    "sha": "b4266bf901c0b6f8fa14c79e8e85336800328185",
                    "url": "https://api.github.com/repos/cython/cython/commits/b4266bf901c0b6f8fa14c79e8e85336800328185"
                }
            ],
            "sha": "aed3ff9068a809c09261c11342b6d9f381fcef51",
            "url": "https://api.github.com/repos/cython/cython/commits/aed3ff9068a809c09261c11342b6d9f381fcef51"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/42e423a8def5e9d7e72a732e59665598ede830e8/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T08:33:30Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T08:33:30Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "ObjectHandling.c: fix typecasts and refactor function out",
                "tree": {
                    "sha": "c648b04a10d5f1c3f6f250082fb8fad5ebdceb0f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c648b04a10d5f1c3f6f250082fb8fad5ebdceb0f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/42e423a8def5e9d7e72a732e59665598ede830e8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/42e423a8def5e9d7e72a732e59665598ede830e8",
            "node_id": "C_kwDOFnv_8doAKDQyZTQyM2E4ZGVmNWU5ZDdlNzJhNzMyZTU5NjY1NTk4ZWRlODMwZTg",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/aed3ff9068a809c09261c11342b6d9f381fcef51",
                    "sha": "aed3ff9068a809c09261c11342b6d9f381fcef51",
                    "url": "https://api.github.com/repos/cython/cython/commits/aed3ff9068a809c09261c11342b6d9f381fcef51"
                }
            ],
            "sha": "42e423a8def5e9d7e72a732e59665598ede830e8",
            "url": "https://api.github.com/repos/cython/cython/commits/42e423a8def5e9d7e72a732e59665598ede830e8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e846cf0ac1f94507c17969c3b520b25b1573e60e/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T08:53:52Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T08:53:52Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "ObjectHandling.c: fix const strings and other typecast",
                "tree": {
                    "sha": "4ab61539da367cba1822d28105f4d9d36fff20aa",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4ab61539da367cba1822d28105f4d9d36fff20aa"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e846cf0ac1f94507c17969c3b520b25b1573e60e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/e846cf0ac1f94507c17969c3b520b25b1573e60e",
            "node_id": "C_kwDOFnv_8doAKGU4NDZjZjBhYzFmOTQ1MDdjMTc5NjljM2I1MjBiMjViMTU3M2U2MGU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/42e423a8def5e9d7e72a732e59665598ede830e8",
                    "sha": "42e423a8def5e9d7e72a732e59665598ede830e8",
                    "url": "https://api.github.com/repos/cython/cython/commits/42e423a8def5e9d7e72a732e59665598ede830e8"
                }
            ],
            "sha": "e846cf0ac1f94507c17969c3b520b25b1573e60e",
            "url": "https://api.github.com/repos/cython/cython/commits/e846cf0ac1f94507c17969c3b520b25b1573e60e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1b7b90252d389a1d2e351e3fc4b680d7d7ffdd53/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T09:49:42Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T09:49:42Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "ObjectHandling.c: simplify by having a static global def",
                "tree": {
                    "sha": "1e4aa4ecb0af48ff3b313fac15001c2edc848a96",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1e4aa4ecb0af48ff3b313fac15001c2edc848a96"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1b7b90252d389a1d2e351e3fc4b680d7d7ffdd53",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/1b7b90252d389a1d2e351e3fc4b680d7d7ffdd53",
            "node_id": "C_kwDOFnv_8doAKDFiN2I5MDI1MmQzODlhMWQyZTM1MWUzZmM0YjY4MGQ3ZDdmZmRkNTM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e846cf0ac1f94507c17969c3b520b25b1573e60e",
                    "sha": "e846cf0ac1f94507c17969c3b520b25b1573e60e",
                    "url": "https://api.github.com/repos/cython/cython/commits/e846cf0ac1f94507c17969c3b520b25b1573e60e"
                }
            ],
            "sha": "1b7b90252d389a1d2e351e3fc4b680d7d7ffdd53",
            "url": "https://api.github.com/repos/cython/cython/commits/1b7b90252d389a1d2e351e3fc4b680d7d7ffdd53"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/83499ec852c337686ef17ab3577a7f0904d8d56f/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T10:09:56Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T10:09:56Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "ObjectHandling.c: fix some parts and reference count",
                "tree": {
                    "sha": "8a9f3387f686e578f4c9b524362419d0164e52c7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8a9f3387f686e578f4c9b524362419d0164e52c7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/83499ec852c337686ef17ab3577a7f0904d8d56f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/83499ec852c337686ef17ab3577a7f0904d8d56f",
            "node_id": "C_kwDOFnv_8doAKDgzNDk5ZWM4NTJjMzM3Njg2ZWYxN2FiMzU3N2E3ZjA5MDRkOGQ1NmY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1b7b90252d389a1d2e351e3fc4b680d7d7ffdd53",
                    "sha": "1b7b90252d389a1d2e351e3fc4b680d7d7ffdd53",
                    "url": "https://api.github.com/repos/cython/cython/commits/1b7b90252d389a1d2e351e3fc4b680d7d7ffdd53"
                }
            ],
            "sha": "83499ec852c337686ef17ab3577a7f0904d8d56f",
            "url": "https://api.github.com/repos/cython/cython/commits/83499ec852c337686ef17ab3577a7f0904d8d56f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1820d76ac763360b498ff09314967fbedd3723b6/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T10:39:27Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T10:39:27Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "ObjectHandling.c: fix REINTERPRET_CAST to be constant",
                "tree": {
                    "sha": "8e458933fd9452865c968982f3f87c8170e1c30f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8e458933fd9452865c968982f3f87c8170e1c30f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1820d76ac763360b498ff09314967fbedd3723b6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/1820d76ac763360b498ff09314967fbedd3723b6",
            "node_id": "C_kwDOFnv_8doAKDE4MjBkNzZhYzc2MzM2MGI0OThmZjA5MzE0OTY3ZmJlZGQzNzIzYjY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/83499ec852c337686ef17ab3577a7f0904d8d56f",
                    "sha": "83499ec852c337686ef17ab3577a7f0904d8d56f",
                    "url": "https://api.github.com/repos/cython/cython/commits/83499ec852c337686ef17ab3577a7f0904d8d56f"
                }
            ],
            "sha": "1820d76ac763360b498ff09314967fbedd3723b6",
            "url": "https://api.github.com/repos/cython/cython/commits/1820d76ac763360b498ff09314967fbedd3723b6"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/33ed3a3856c450191749e390619be37e865b175f/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T11:08:28Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T11:08:28Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Merge branch 'main' into replace-evaluation-with-c-api-for-bound-methods",
                "tree": {
                    "sha": "596b935af1bfaa0430a305856019a5d8a390d40f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/596b935af1bfaa0430a305856019a5d8a390d40f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/33ed3a3856c450191749e390619be37e865b175f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/33ed3a3856c450191749e390619be37e865b175f",
            "node_id": "C_kwDOFnv_8doAKDMzZWQzYTM4NTZjNDUwMTkxNzQ5ZTM5MDYxOWJlMzdlODY1YjE3NWY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1820d76ac763360b498ff09314967fbedd3723b6",
                    "sha": "1820d76ac763360b498ff09314967fbedd3723b6",
                    "url": "https://api.github.com/repos/cython/cython/commits/1820d76ac763360b498ff09314967fbedd3723b6"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/891d4604bcfbed45d1de66d1a4ac988c2b311e11",
                    "sha": "891d4604bcfbed45d1de66d1a4ac988c2b311e11",
                    "url": "https://api.github.com/repos/cython/cython/commits/891d4604bcfbed45d1de66d1a4ac988c2b311e11"
                }
            ],
            "sha": "33ed3a3856c450191749e390619be37e865b175f",
            "url": "https://api.github.com/repos/cython/cython/commits/33ed3a3856c450191749e390619be37e865b175f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a5aa98cfaae692bda3f34a6d5a744f59ab65c730/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T11:11:23Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T11:11:23Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "ObjectHandling.c: add CONST_REINTERPRET_CAST",
                "tree": {
                    "sha": "b30e7a33d0f61fadefc24dc55e661f0a81f56a6e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b30e7a33d0f61fadefc24dc55e661f0a81f56a6e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a5aa98cfaae692bda3f34a6d5a744f59ab65c730",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/a5aa98cfaae692bda3f34a6d5a744f59ab65c730",
            "node_id": "C_kwDOFnv_8doAKGE1YWE5OGNmYWFlNjkyYmRhM2YzNGE2ZDVhNzQ0ZjU5YWI2NWM3MzA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/33ed3a3856c450191749e390619be37e865b175f",
                    "sha": "33ed3a3856c450191749e390619be37e865b175f",
                    "url": "https://api.github.com/repos/cython/cython/commits/33ed3a3856c450191749e390619be37e865b175f"
                }
            ],
            "sha": "a5aa98cfaae692bda3f34a6d5a744f59ab65c730",
            "url": "https://api.github.com/repos/cython/cython/commits/a5aa98cfaae692bda3f34a6d5a744f59ab65c730"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/052338db9dd9c8a57a2c492f0275b7520fc4e330/comments",
            "commit": {
                "author": {
                    "date": "2023-01-19T12:05:41Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-19T12:05:41Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "ObjectHandling.c: fix comment alignment\n\n[skip ci]",
                "tree": {
                    "sha": "61b86cf3baa698d72730c902cd756d1af4d9d003",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/61b86cf3baa698d72730c902cd756d1af4d9d003"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/052338db9dd9c8a57a2c492f0275b7520fc4e330",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "node_id": "C_kwDOFnv_8doAKDA1MjMzOGRiOWRkOWM4YTU3YTJjNDkyZjAyNzViNzUyMGZjNGUzMzA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a5aa98cfaae692bda3f34a6d5a744f59ab65c730",
                    "sha": "a5aa98cfaae692bda3f34a6d5a744f59ab65c730",
                    "url": "https://api.github.com/repos/cython/cython/commits/a5aa98cfaae692bda3f34a6d5a744f59ab65c730"
                }
            ],
            "sha": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
            "url": "https://api.github.com/repos/cython/cython/commits/052338db9dd9c8a57a2c492f0275b7520fc4e330"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7120d594f748e1049906ab8e00ff4a06b9a91862/comments",
            "commit": {
                "author": {
                    "date": "2023-01-22T08:46:08Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-22T08:46:08Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "ObjectHandling.c: fix reinterpret macros and `method` refcount",
                "tree": {
                    "sha": "0c9feb429c6f3fe3896a03b9ecf6a4eda8f5acfd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0c9feb429c6f3fe3896a03b9ecf6a4eda8f5acfd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7120d594f748e1049906ab8e00ff4a06b9a91862",
                "verification": {
                    "payload": "tree 0c9feb429c6f3fe3896a03b9ecf6a4eda8f5acfd\nparent 052338db9dd9c8a57a2c492f0275b7520fc4e330\nauthor 0dminnimda <0dminnimda@gmail.com> 1674377168 +0300\ncommitter GitHub <noreply@github.com> 1674377168 +0300\n\nObjectHandling.c: fix reinterpret macros and `method` refcount",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzPfQCRBK7hj4Ov3rIwAAPSAIAKBUTJVAWvxXqGiGiP6odcjP\nTd8p0GTqhgom2SQ26RvxJA/uFV9UUVe2nzbCqeaamk66VXtFOHl4vq2sbt1RnQIx\nsJVfz5y1OXCAhrwKL4pBe0s5lc3RXJ1XOuq70eol+s4HhIj4nyf54y/B0AlsdGFX\ncl4/fmeAC/BMCb5zYr4mWZ6UdkgBH8KTl/vMyNrek+bQH8vFt+ALWndi8RQhhPvC\nwx1EbS/M37Ctrm4ShdO4uOydxQot2UGtl2t9lO3CjdBm7QnjQpNtpxrZsUnFJ6gu\n812t0Ee91+GVkCxSLqJtmTeMegcrBt8o/hhp4VYqsYHquyEmdszMaNwZx2qQ+a0=\n=7Jcd\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/7120d594f748e1049906ab8e00ff4a06b9a91862",
            "node_id": "C_kwDOFnv_8doAKDcxMjBkNTk0Zjc0OGUxMDQ5OTA2YWI4ZTAwZmY0YTA2YjlhOTE4NjI",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/052338db9dd9c8a57a2c492f0275b7520fc4e330",
                    "sha": "052338db9dd9c8a57a2c492f0275b7520fc4e330",
                    "url": "https://api.github.com/repos/cython/cython/commits/052338db9dd9c8a57a2c492f0275b7520fc4e330"
                }
            ],
            "sha": "7120d594f748e1049906ab8e00ff4a06b9a91862",
            "url": "https://api.github.com/repos/cython/cython/commits/7120d594f748e1049906ab8e00ff4a06b9a91862"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ce26f399b08901c66817d2650da779fcae1cf221/comments",
            "commit": {
                "author": {
                    "date": "2023-01-22T08:55:55Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-22T08:55:55Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "ObjectHandling.c: update macro naming",
                "tree": {
                    "sha": "f044cbce6f70bbbd3e9d32e20e5b9eb0ddae84c3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f044cbce6f70bbbd3e9d32e20e5b9eb0ddae84c3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ce26f399b08901c66817d2650da779fcae1cf221",
                "verification": {
                    "payload": "tree f044cbce6f70bbbd3e9d32e20e5b9eb0ddae84c3\nparent 7120d594f748e1049906ab8e00ff4a06b9a91862\nauthor 0dminnimda <0dminnimda@gmail.com> 1674377755 +0300\ncommitter GitHub <noreply@github.com> 1674377755 +0300\n\nObjectHandling.c: update macro naming",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzPobCRBK7hj4Ov3rIwAAnekIAJD5JyZoECeM8jE52gAhK2mN\nJpdOUYk6Y3f8n2KAcOMVt22U4WEaWsQCGXDfmniYH4Pu5kUr93yJDbs5FRJ5rH1B\ndFnZ50t+K+heWx+IZ7SeIKRWI/eZSAE77hfGIAAlujiYfna2ZceFTF95GSp5ER7B\n1pWVZlchOXPfpwD1RC4okULehbHthNfAFttHJAd5fsG16NwJGpxCoLFgXAdY0tWR\nUiDbES474BvV+r/QQ+kxADBwAkEyzG2sH3MrNTW7M9qBI/iZmnW87CNBE8eddSP2\nkL2YTctp/hwGHXYKib6GCNqNQmLK74CJ/dWxn/E9YfbtbVzNRDkm/j4tJDH3JB4=\n=nNuZ\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/ce26f399b08901c66817d2650da779fcae1cf221",
            "node_id": "C_kwDOFnv_8doAKGNlMjZmMzk5YjA4OTAxYzY2ODE3ZDI2NTBkYTc3OWZjYWUxY2YyMjE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7120d594f748e1049906ab8e00ff4a06b9a91862",
                    "sha": "7120d594f748e1049906ab8e00ff4a06b9a91862",
                    "url": "https://api.github.com/repos/cython/cython/commits/7120d594f748e1049906ab8e00ff4a06b9a91862"
                }
            ],
            "sha": "ce26f399b08901c66817d2650da779fcae1cf221",
            "url": "https://api.github.com/repos/cython/cython/commits/ce26f399b08901c66817d2650da779fcae1cf221"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/710c429fd6ca6e7c686a138b9d1ed906442555ed/comments",
            "commit": {
                "author": {
                    "date": "2023-01-22T12:37:40Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-22T12:37:40Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: da-woods <dw-git@d-woods.co.uk>",
                "tree": {
                    "sha": "fec38c5198c41bcf68faa8d35b79b46e6592f9df",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fec38c5198c41bcf68faa8d35b79b46e6592f9df"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/710c429fd6ca6e7c686a138b9d1ed906442555ed",
                "verification": {
                    "payload": "tree fec38c5198c41bcf68faa8d35b79b46e6592f9df\nparent ce26f399b08901c66817d2650da779fcae1cf221\nauthor 0dminnimda <0dminnimda@gmail.com> 1674391060 +0300\ncommitter GitHub <noreply@github.com> 1674391060 +0300\n\nApply suggestions from code review\n\nCo-authored-by: da-woods <dw-git@d-woods.co.uk>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzS4UCRBK7hj4Ov3rIwAAUI4IABZ3S9DXLiMIQLyVUQ51+9e/\n0oLe19Zb1MthVn0QGKteqqovBNPRuAg5zjZDJUISXHQkSLdBWIrPFjE7FsfDsPb2\nri9lcLV2q0aHcmYfrqakIUhbE9x2fI/BEq6foH92ifWy1k9nKKSUxcTwaQDjpBO+\nm45ECKJbnn3+4GyRYX4vjE2p9+MBE6ED6a53LAaocwXFLZDRLKF20brWEFkmfkr2\nhI0PPACy821qeilfk96hA/oDW/YlC24UrIRww3opJ++s+8jy4Cv+Ia32Xr5mb0ya\nGPOiYX9riJuixHTmcmESmQ4I0xsbUKtUsHbH6cckah79PlfKOy8EI4fDiiMUsdo=\n=lHn1\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/710c429fd6ca6e7c686a138b9d1ed906442555ed",
            "node_id": "C_kwDOFnv_8doAKDcxMGM0MjlmZDZjYTZlN2M2ODZhMTM4YjlkMWVkOTA2NDQyNTU1ZWQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ce26f399b08901c66817d2650da779fcae1cf221",
                    "sha": "ce26f399b08901c66817d2650da779fcae1cf221",
                    "url": "https://api.github.com/repos/cython/cython/commits/ce26f399b08901c66817d2650da779fcae1cf221"
                }
            ],
            "sha": "710c429fd6ca6e7c686a138b9d1ed906442555ed",
            "url": "https://api.github.com/repos/cython/cython/commits/710c429fd6ca6e7c686a138b9d1ed906442555ed"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0bf027444857726183b4d5c9e95a279ff5b3c929/comments",
            "commit": {
                "author": {
                    "date": "2023-01-22T12:40:22Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-22T12:40:22Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review",
                "tree": {
                    "sha": "ea14c2724818b6d790e3625e26f12d880c918ea3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ea14c2724818b6d790e3625e26f12d880c918ea3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0bf027444857726183b4d5c9e95a279ff5b3c929",
                "verification": {
                    "payload": "tree ea14c2724818b6d790e3625e26f12d880c918ea3\nparent 710c429fd6ca6e7c686a138b9d1ed906442555ed\nauthor 0dminnimda <0dminnimda@gmail.com> 1674391222 +0300\ncommitter GitHub <noreply@github.com> 1674391222 +0300\n\nApply suggestions from code review",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzS62CRBK7hj4Ov3rIwAAgXwIAFlHkckWxqh/1qb9pKob2GEo\nK+3tK4thFpiyV54Gu14lPnMoxS70E9v3wRHPWzWMawuW+1RwRe4k0SVZ0YiWg422\nv5I+oR8xsDkT3WecyOOZPcEf3V17aehI5aaFB92vh6GuApmafmoILabIq9OlLxMt\n9eTbOU4VZN0sub5x2uoiRH8kNcbEzT09J1m/QidyUd6EiIRZtIbBZ3SZhWIMY/5m\nwgfj2sNi+mW9Jl8nHQeP6WdeTM8QxMEEK8V8wsawikHXHVKQYb+NOeFbbD68fXSB\ntsj3SCvcbM6Y53hjNk+Iqz7UL+dpDkBr2le/Cc6D3O9MMiUHys1ZGhRf1CBoQC8=\n=0u7q\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/0bf027444857726183b4d5c9e95a279ff5b3c929",
            "node_id": "C_kwDOFnv_8doAKDBiZjAyNzQ0NDg1NzcyNjE4M2I0ZDVjOWU5NWEyNzlmZjViM2M5Mjk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/710c429fd6ca6e7c686a138b9d1ed906442555ed",
                    "sha": "710c429fd6ca6e7c686a138b9d1ed906442555ed",
                    "url": "https://api.github.com/repos/cython/cython/commits/710c429fd6ca6e7c686a138b9d1ed906442555ed"
                }
            ],
            "sha": "0bf027444857726183b4d5c9e95a279ff5b3c929",
            "url": "https://api.github.com/repos/cython/cython/commits/0bf027444857726183b4d5c9e95a279ff5b3c929"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/905988a828d4779e116ed8f2e3e3a277967099bc/comments",
            "commit": {
                "author": {
                    "date": "2023-01-22T12:41:04Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-22T12:41:04Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review",
                "tree": {
                    "sha": "604265a99e84d9c175ebeaff03ef279383359141",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/604265a99e84d9c175ebeaff03ef279383359141"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/905988a828d4779e116ed8f2e3e3a277967099bc",
                "verification": {
                    "payload": "tree 604265a99e84d9c175ebeaff03ef279383359141\nparent 0bf027444857726183b4d5c9e95a279ff5b3c929\nauthor 0dminnimda <0dminnimda@gmail.com> 1674391264 +0300\ncommitter GitHub <noreply@github.com> 1674391264 +0300\n\nApply suggestions from code review",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzS7gCRBK7hj4Ov3rIwAAdegIAB/wJugnEnPN+MOIVnueMvY9\nFhJMzgxxJxnZxyuKYZwCi7zczsXmKIlMcG7YiFo1sE0eDUlMuORpMEqWyXd6Xf/C\nlaWxBgO9iijmx4Dt8YtTOeJVzUbG5ikhp/uex0RhO6GPVhVJIks82jg1KYCSKKuP\n5dkt0HhcmC26kZDEeUC3UnXA/vHgiJP9yMOCWMvj+tUglzsUnn+HtY61xUG9624Q\nC7sSx1a0jqP572/mzUAx8ZyWjZUX2qnddOtnWiaMYFfuGnghy5TnspvYPdNX3NRH\nb5mSdFO48U9yXZ8vOuoI4Tb7ZvUtyaDPDmKqSqZHurJmBGjJVIDGHb+ZPyEEhnA=\n=2KDS\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/905988a828d4779e116ed8f2e3e3a277967099bc",
            "node_id": "C_kwDOFnv_8doAKDkwNTk4OGE4MjhkNDc3OWUxMTZlZDhmMmUzZTNhMjc3OTY3MDk5YmM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0bf027444857726183b4d5c9e95a279ff5b3c929",
                    "sha": "0bf027444857726183b4d5c9e95a279ff5b3c929",
                    "url": "https://api.github.com/repos/cython/cython/commits/0bf027444857726183b4d5c9e95a279ff5b3c929"
                }
            ],
            "sha": "905988a828d4779e116ed8f2e3e3a277967099bc",
            "url": "https://api.github.com/repos/cython/cython/commits/905988a828d4779e116ed8f2e3e3a277967099bc"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/985c1e1080c0d9fa3961e9ba71f8b059703d33fe/comments",
            "commit": {
                "author": {
                    "date": "2023-01-22T12:44:54Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-22T12:44:54Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "First check for unbound_method then decref",
                "tree": {
                    "sha": "c0d83600f3c926c35e89a6d4f255c73c0869709f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c0d83600f3c926c35e89a6d4f255c73c0869709f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
                "verification": {
                    "payload": "tree c0d83600f3c926c35e89a6d4f255c73c0869709f\nparent 905988a828d4779e116ed8f2e3e3a277967099bc\nauthor 0dminnimda <0dminnimda@gmail.com> 1674391494 +0300\ncommitter GitHub <noreply@github.com> 1674391494 +0300\n\nFirst check for unbound_method then decref",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzS/GCRBK7hj4Ov3rIwAATaAIAFivYMzKqsmVMISKSKLE2+EM\nwrdhO49djE1nd6S3TcGE0dFRLug9bS1ecX/0Jzz1145pNtjJi6SV05s/tVXYBRN4\n2d8B/GcNzo9+HvidhmfodIotsE5rE5L/2wI8shhruF6dOCHGQNxFu9LPubPs7gt5\nbWBsUHg0gvYigyJ5S1myw9RcM1E9s3vhhD/Nb1zjZuoIXW4sl8tiQhHiOrZF3Enh\n6wNR45zs379KQ802bhcg4D/AGWOEe2x1k8A2nFE5HIJKL3fWuAjqEJN3Xh0jHEYz\nGRvvBLnrvAyJ10gKR1DSYJVdoJmHSggcUPPvoExPjrkRVhb8ok5mLYmr/iHZh9g=\n=QxBK\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "node_id": "C_kwDOFnv_8doAKDk4NWMxZTEwODBjMGQ5ZmEzOTYxZTliYTcxZjhiMDU5NzAzZDMzZmU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/905988a828d4779e116ed8f2e3e3a277967099bc",
                    "sha": "905988a828d4779e116ed8f2e3e3a277967099bc",
                    "url": "https://api.github.com/repos/cython/cython/commits/905988a828d4779e116ed8f2e3e3a277967099bc"
                }
            ],
            "sha": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
            "url": "https://api.github.com/repos/cython/cython/commits/985c1e1080c0d9fa3961e9ba71f8b059703d33fe"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/dc6d0b4a21e02cd240ba1835546419550e66a1a5/comments",
            "commit": {
                "author": {
                    "date": "2023-01-23T20:55:49Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-23T20:55:49Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "ModuleSetupCode.c: add reinterpret macros",
                "tree": {
                    "sha": "4574e066db44aa7b8bca402eeff4d119d0cd0a66",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4574e066db44aa7b8bca402eeff4d119d0cd0a66"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/dc6d0b4a21e02cd240ba1835546419550e66a1a5",
                "verification": {
                    "payload": "tree 4574e066db44aa7b8bca402eeff4d119d0cd0a66\nparent 985c1e1080c0d9fa3961e9ba71f8b059703d33fe\nauthor 0dminnimda <0dminnimda@gmail.com> 1674507349 +0300\ncommitter GitHub <noreply@github.com> 1674507349 +0300\n\nModuleSetupCode.c: add reinterpret macros",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzvRVCRBK7hj4Ov3rIwAAm0cIAGmJFJszP+jsh8IHO9Y544Hs\n8VUCA9+z2gsvnSYpMLh19WSofJ2UT324/zYWaXRu9iE6AIvf+6l6qL+Hg77kERBA\ngDHucXfGMbI+DBwSWzg5r1k4vfW0mTXhDuXEIaaP1cjuZ4rAv4vThyyH3YD+SeB8\nJSVoBVqvBx9FzQLz1WxA5EzQC/5eh+U090WXHr72FFLWiPoZd30l6ppCxHEB9Wpq\nuFwOcfcoWl5Q76/nyQB63TF9F8yWqNZmBqBRF1B/Vt6vUGsIdg3+ZSbb1kdCe3mO\n+rbgupvezbwpdGN61VtNbPKlAN6NVDA68gpjKAnk5wI4za6cH8e+cBHArqdLRrw=\n=xHwD\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/dc6d0b4a21e02cd240ba1835546419550e66a1a5",
            "node_id": "C_kwDOFnv_8doAKGRjNmQwYjRhMjFlMDJjZDI0MGJhMTgzNTU0NjQxOTU1MGU2NmExYTU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
                    "sha": "985c1e1080c0d9fa3961e9ba71f8b059703d33fe",
                    "url": "https://api.github.com/repos/cython/cython/commits/985c1e1080c0d9fa3961e9ba71f8b059703d33fe"
                }
            ],
            "sha": "dc6d0b4a21e02cd240ba1835546419550e66a1a5",
            "url": "https://api.github.com/repos/cython/cython/commits/dc6d0b4a21e02cd240ba1835546419550e66a1a5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9835e0d883100e6e801741487dcfc7a5137dcc07/comments",
            "commit": {
                "author": {
                    "date": "2023-01-23T21:01:32Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-23T21:01:32Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "ObjectHandling.c: remove reinterpret macros & add a note",
                "tree": {
                    "sha": "29d93b726b89490ada305877fcb3155bdcd0fffe",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/29d93b726b89490ada305877fcb3155bdcd0fffe"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9835e0d883100e6e801741487dcfc7a5137dcc07",
                "verification": {
                    "payload": "tree 29d93b726b89490ada305877fcb3155bdcd0fffe\nparent dc6d0b4a21e02cd240ba1835546419550e66a1a5\nauthor 0dminnimda <0dminnimda@gmail.com> 1674507692 +0300\ncommitter GitHub <noreply@github.com> 1674507692 +0300\n\nObjectHandling.c: remove reinterpret macros & add a note",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzvWsCRBK7hj4Ov3rIwAA1l0IAJmuRGa0v0fQkNH2Oj3iarpg\n63F1xsjmREwEN6K6e/Q8SzsrXcfbxiuWQTXVbznsnMpCbXkVeM9JT94OviU4anwn\nYjDD40l2b0GTwyrjregsivZ21t2295fX3VVkE9lU9K2Cw51d4lfhJnBBGXQOmfRW\n6YpBaR6c6sEj6fGdgHOqeV6n5sonvH/WM6zbHV2WAc83RRK56JsNzi979fkZqxCa\ndw1RNKcZ1AgJU20tbX3aGnV1E4j+zsW3qsFVnSoikygSeVqQtiKuAHjWtWtEkv7w\no6juFLNj2i9XqMdZelRUAqstusDW2uquioicihpixd74O2crVETQY/4hbsJo1Sw=\n=d5RP\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/9835e0d883100e6e801741487dcfc7a5137dcc07",
            "node_id": "C_kwDOFnv_8doAKDk4MzVlMGQ4ODMxMDBlNmU4MDE3NDE0ODdkY2ZjN2E1MTM3ZGNjMDc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/dc6d0b4a21e02cd240ba1835546419550e66a1a5",
                    "sha": "dc6d0b4a21e02cd240ba1835546419550e66a1a5",
                    "url": "https://api.github.com/repos/cython/cython/commits/dc6d0b4a21e02cd240ba1835546419550e66a1a5"
                }
            ],
            "sha": "9835e0d883100e6e801741487dcfc7a5137dcc07",
            "url": "https://api.github.com/repos/cython/cython/commits/9835e0d883100e6e801741487dcfc7a5137dcc07"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d8256abe3918b522102ee00238d882bdb04c5578/comments",
            "commit": {
                "author": {
                    "date": "2023-01-23T21:24:09Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-23T21:24:09Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "ModuleSetupCode.c: comment out unused macros",
                "tree": {
                    "sha": "9f83ba3dd1b2263922691a84213678fb61f02d56",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9f83ba3dd1b2263922691a84213678fb61f02d56"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d8256abe3918b522102ee00238d882bdb04c5578",
                "verification": {
                    "payload": "tree 9f83ba3dd1b2263922691a84213678fb61f02d56\nparent 9835e0d883100e6e801741487dcfc7a5137dcc07\nauthor 0dminnimda <0dminnimda@gmail.com> 1674509049 +0300\ncommitter GitHub <noreply@github.com> 1674509049 +0300\n\nModuleSetupCode.c: comment out unused macros",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzvr5CRBK7hj4Ov3rIwAA5+0IAEzO7Bw2MkQEwqX6ejipXzlG\nS37HHChiHSU3EOuM1qHERi7tS8WE0S9p+YAKMTtx4HJA4cF3/ZdR0/43gh0a4qH/\n3MDDikemjFAznCHIsPr56oWeOErXtOFxfizsd6Yri5qd8lpBGuDaT8dqfimxb/kr\nb6MQrjURdq+IgJZkSHWhpX0IJNm3dRT4AERS85iQNQ/7i7ZqOyyTi9gVKwsEiJB0\nHuGssPo+T1YIKL4zuLwN8gfCCSDzb7ruZeOwozIYMiEdnsJP2t/gGGtb6R2MsQKK\nKeUQNQ5xi5dLs91Uov5cTn4iwuXttm8E6CTUNYs3z20fkAT0y0TrT7JkckplVZk=\n=Fq4k\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/d8256abe3918b522102ee00238d882bdb04c5578",
            "node_id": "C_kwDOFnv_8doAKGQ4MjU2YWJlMzkxOGI1MjIxMDJlZTAwMjM4ZDg4MmJkYjA0YzU1Nzg",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9835e0d883100e6e801741487dcfc7a5137dcc07",
                    "sha": "9835e0d883100e6e801741487dcfc7a5137dcc07",
                    "url": "https://api.github.com/repos/cython/cython/commits/9835e0d883100e6e801741487dcfc7a5137dcc07"
                }
            ],
            "sha": "d8256abe3918b522102ee00238d882bdb04c5578",
            "url": "https://api.github.com/repos/cython/cython/commits/d8256abe3918b522102ee00238d882bdb04c5578"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/39f5cf11d097474720b883abc55379d477166f0c/comments",
            "commit": {
                "author": {
                    "date": "2023-01-23T23:15:48Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-23T23:15:48Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "ObjectHandling.c: add comment about CythonFunction.c/ClassMethod\n\n[skip ci]",
                "tree": {
                    "sha": "e7527f358d97ada7541dc261d83db383245f9cdf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e7527f358d97ada7541dc261d83db383245f9cdf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/39f5cf11d097474720b883abc55379d477166f0c",
                "verification": {
                    "payload": "tree e7527f358d97ada7541dc261d83db383245f9cdf\nparent d8256abe3918b522102ee00238d882bdb04c5578\nauthor 0dminnimda <0dminnimda@gmail.com> 1674515748 +0300\ncommitter GitHub <noreply@github.com> 1674515748 +0300\n\nObjectHandling.c: add comment about CythonFunction.c/ClassMethod\n\n[skip ci]",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzxUkCRBK7hj4Ov3rIwAAF0IIACGPOTsmAjxqcuD6HyHZfgU9\n2hF6uo78YOnzqUH/BOSAyuYYYlGqKaN516rOiCgt9gjp94Vbw5MstdyerriTLKk9\nDBgfb0Jrd9e4Qpy3J1tRgR7gj1tMOAGejCfcDf1I91LE4EEpaSjrmA4Cgql4E56C\nKtGS/KTAkgV2iRBes/H/F2+nFSzF9yOTFGy6bbaO7U9FiBAaoa+KoT3CkyhZp9HG\n4gJWPmbEmlcpqgVKLA4OAOuHBxIM+DtuGoX5jAsXsH8B/Z/hGRuKzGv4W025RQSl\ntVEhTDTPJ9FJwtrS8SiQX87iIYBkwzSPU+jQjeQq9VzVZP+fmRwClOZpsxDlFXk=\n=W5bX\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/39f5cf11d097474720b883abc55379d477166f0c",
            "node_id": "C_kwDOFnv_8doAKDM5ZjVjZjExZDA5NzQ3NDcyMGI4ODNhYmM1NTM3OWQ0NzcxNjZmMGM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d8256abe3918b522102ee00238d882bdb04c5578",
                    "sha": "d8256abe3918b522102ee00238d882bdb04c5578",
                    "url": "https://api.github.com/repos/cython/cython/commits/d8256abe3918b522102ee00238d882bdb04c5578"
                }
            ],
            "sha": "39f5cf11d097474720b883abc55379d477166f0c",
            "url": "https://api.github.com/repos/cython/cython/commits/39f5cf11d097474720b883abc55379d477166f0c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d2c29bb427554d375c1680d3007f3d3849bd1b39/comments",
            "commit": {
                "author": {
                    "date": "2023-01-24T07:27:14Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-01-24T07:27:14Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Have two empty lines between different utility code sections.",
                "tree": {
                    "sha": "19601c9210d1f6db88e998262d2d1d219c531d0a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/19601c9210d1f6db88e998262d2d1d219c531d0a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d2c29bb427554d375c1680d3007f3d3849bd1b39",
                "verification": {
                    "payload": "tree 19601c9210d1f6db88e998262d2d1d219c531d0a\nparent 39f5cf11d097474720b883abc55379d477166f0c\nauthor scoder <stefan_ml@behnel.de> 1674545234 +0100\ncommitter GitHub <noreply@github.com> 1674545234 +0100\n\nHave two empty lines between different utility code sections.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjz4hSCRBK7hj4Ov3rIwAAFIQIAEOJ8VfqNMVuo4/gEhK+5w6m\n9QI0txkgT/8dy5K8NByeelZjrwNYCVArI9reK94qQN+c2b3Xh1is4RPGVfQxVTk4\nM+GhffnauGj3ReS/DqA2naviQ8TDAIxkyI4u0C9fzH2e7Z+aWvtvJInfJK4ksAEm\nZf+cohp9P1wHUdrYmoscukGMwnwB1mYb212pnd0CAkJTRH4mDWBNX2Hz6q0xw1WJ\nJZ4xX2hvVqQgN77Hqo51+tm9vZ965CroOwABTHhHgY1RZ8GpBSZFXgHnTvIBXNg0\nT5ewEBKaxE/ZbJerOy6TikCLwsJ+/MugJcbmO+77zWN2gdipQ8Do8WZhahCYxwc=\n=fV6c\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "node_id": "C_kwDOFnv_8doAKGQyYzI5YmI0Mjc1NTRkMzc1YzE2ODBkMzAwN2YzZDM4NDliZDFiMzk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/39f5cf11d097474720b883abc55379d477166f0c",
                    "sha": "39f5cf11d097474720b883abc55379d477166f0c",
                    "url": "https://api.github.com/repos/cython/cython/commits/39f5cf11d097474720b883abc55379d477166f0c"
                }
            ],
            "sha": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
            "url": "https://api.github.com/repos/cython/cython/commits/d2c29bb427554d375c1680d3007f3d3849bd1b39"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/5219/commits",
    "created_at": "2023-01-19T11:31:35Z",
    "diff_url": "https://github.com/cython/cython/pull/5219.diff",
    "draft": false,
    "head": {
        "label": "0dminnimda:replace-evaluation-with-c-api-for-bound-methods",
        "ref": "replace-evaluation-with-c-api-for-bound-methods",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/0dminnimda/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/0dminnimda/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/0dminnimda/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/0dminnimda/cython/branches{/branch}",
            "clone_url": "https://github.com/0dminnimda/cython.git",
            "collaborators_url": "https://api.github.com/repos/0dminnimda/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/0dminnimda/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/0dminnimda/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/0dminnimda/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/0dminnimda/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/0dminnimda/cython/contributors",
            "created_at": "2021-06-15T16:20:06Z",
            "default_branch": "improve-issue-templates",
            "deployments_url": "https://api.github.com/repos/0dminnimda/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/0dminnimda/cython/downloads",
            "events_url": "https://api.github.com/repos/0dminnimda/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/0dminnimda/cython/forks",
            "full_name": "0dminnimda/cython",
            "git_commits_url": "https://api.github.com/repos/0dminnimda/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/0dminnimda/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/0dminnimda/cython/git/tags{/sha}",
            "git_url": "git://github.com/0dminnimda/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/0dminnimda/cython/hooks",
            "html_url": "https://github.com/0dminnimda/cython",
            "id": 377225201,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/0dminnimda/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/0dminnimda/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/0dminnimda/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/0dminnimda/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/0dminnimda/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/0dminnimda/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/0dminnimda/cython/merges",
            "milestones_url": "https://api.github.com/repos/0dminnimda/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzcyMjUyMDE=",
            "notifications_url": "https://api.github.com/repos/0dminnimda/cython/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/0dminnimda/cython/pulls{/number}",
            "pushed_at": "2023-01-24T09:51:36Z",
            "releases_url": "https://api.github.com/repos/0dminnimda/cython/releases{/id}",
            "size": 66709,
            "ssh_url": "git@github.com:0dminnimda/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/0dminnimda/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/0dminnimda/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/0dminnimda/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/0dminnimda/cython/subscription",
            "svn_url": "https://github.com/0dminnimda/cython",
            "tags_url": "https://api.github.com/repos/0dminnimda/cython/tags",
            "teams_url": "https://api.github.com/repos/0dminnimda/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/0dminnimda/cython/git/trees{/sha}",
            "updated_at": "2023-01-20T18:55:44Z",
            "url": "https://api.github.com/repos/0dminnimda/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d2c29bb427554d375c1680d3007f3d3849bd1b39",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
            "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
            "followers_url": "https://api.github.com/users/0dminnimda/followers",
            "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
            "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/0dminnimda",
            "id": 52697657,
            "login": "0dminnimda",
            "node_id": "MDQ6VXNlcjUyNjk3NjU3",
            "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
            "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
            "repos_url": "https://api.github.com/users/0dminnimda/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/0dminnimda"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/5219",
    "id": 1209890278,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/5219",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556272,
            "name": "Optimization",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNzI=",
            "url": "https://api.github.com/repos/cython/cython/labels/Optimization"
        }
    ],
    "locked": false,
    "merge_commit_sha": "685c3bdf066015016bc25a7016ff7d61b1274580",
    "merged_at": "2023-01-24T09:42:36Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 803,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 44,
        "state": "open",
        "title": "3.0",
        "updated_at": "2023-01-25T13:48:53Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "PR_kwDOABDGAc5IHXXm",
    "number": 5219,
    "patch_url": "https://github.com/cython/cython/pull/5219.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/5219/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/d2c29bb427554d375c1680d3007f3d3849bd1b39",
    "title": "Fix bound class methods when unpacking builtin method calls",
    "updated_at": "2023-01-24T09:51:36Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/5219",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
        "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
        "followers_url": "https://api.github.com/users/0dminnimda/followers",
        "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
        "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/0dminnimda",
        "id": 52697657,
        "login": "0dminnimda",
        "node_id": "MDQ6VXNlcjUyNjk3NjU3",
        "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
        "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
        "repos_url": "https://api.github.com/users/0dminnimda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/0dminnimda"
    }
}