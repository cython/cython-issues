{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3691/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3691/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3691"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3691"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3691/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3691"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/d5877c8ab8b5b74278a4616e085ab6ffa98a14a6"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1238,
            "forks_count": 1238,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1031,
            "open_issues_count": 1031,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2022-01-28T12:05:09Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 64119,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 6741,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2022-01-28T00:18:13Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 6741,
            "watchers_count": 6741
        },
        "sha": "44b5b0d14d0f0d91f7826791d142d95906c74643",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Fixes https://github.com/cython/cython/issues/2636\r\n\r\nWith the exception of the the parser changes I don't think this is too bad so I'm marking it as ready.\r\n\r\nIt implements the assignment expression largely as a composite of existing nodes, which I think is a reasonable approach.",
    "closed_at": "2022-01-27T00:34:33Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443158643"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443158643"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, it seems strange to have this logic in `NameNode`.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T20:43:35Z",
            "diff_hunk": "@@ -2032,7 +2033,12 @@ def analyse_as_extension_type(self, env):\n \n     def analyse_target_declaration(self, env):\n         if not self.entry:\n-            self.entry = env.lookup_here(self.name)\n+            lookup_in = env\n+            if self.walrus_target:\n+                while lookup_in.is_genexpr_scope or (lookup_in.is_closure_scope and lookup_in.is_genexpr_closure):\n+                    # This logic possibly should be in the scope?",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443158643",
            "id": 443158643,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1ODY0Mw==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 2039,
            "original_position": 16,
            "original_start_line": 2038,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443158643/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443158643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443158881"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443158881"
                }
            },
            "author_association": "MEMBER",
            "body": "Then call it `AssignmentExpressionNode` :)\r\nAnd it should be a node class, not a function. A later transform can then put in something else, maybe the declarations analysis. Or `PostParse`, but that's fairly early, too.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T20:47:09Z",
            "diff_hunk": "@@ -13755,6 +13761,21 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+def WalrusNode(pos, lhs, rhs, **kwds):\n+    \"\"\"\n+    An assignment expression",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443158881",
            "id": 443158881,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1ODg4MQ==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 13766,
            "original_position": 37,
            "original_start_line": 13764,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443158881/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443158881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443158919"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443158919"
                }
            },
            "author_association": "MEMBER",
            "body": "These things should be created much later, definitely not by the parser.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T20:47:48Z",
            "diff_hunk": "@@ -13755,6 +13761,21 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+def WalrusNode(pos, lhs, rhs, **kwds):\n+    \"\"\"\n+    An assignment expression\n+\n+    Defined as a function that constructs a composite node. However, has an interface designed to\n+    look like a node so it can easily be replaced if needed.\n+    (e.g. for conversion back to Py code.) FIXME!\n+    \"\"\"\n+    from .UtilNodes import TempResultFromStatNode, ResultRefNode\n+    lhs.walrus_target = True\n+    temp = ResultRefNode(pos=pos, expression=rhs)  # assigning expression lets it work out the type\n+                        # (but feels a bit like mixing the two uses of ResultRefNode)\n+    assignment = Nodes.CascadedAssignmentNode(pos=pos, lhs_list=[lhs, temp], rhs=rhs)\n+    return TempResultFromStatNode(result_ref=temp, body=assignment)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443158919",
            "id": 443158919,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1ODkxOQ==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 13777,
            "original_position": 48,
            "original_start_line": 13774,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443158919/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443158919",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443158970"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443158970"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't this be covered by `from_closure`?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T20:48:45Z",
            "diff_hunk": "@@ -588,7 +588,8 @@ def check_definitions(flow, compiler_directives):\n             if not entry.from_closure and len(node.cf_state) == 1:\n                 node.cf_is_null = True\n             if (node.allow_null or entry.from_closure\n-                    or entry.is_pyclass_attr or entry.type.is_error):\n+                    or entry.is_pyclass_attr or entry.type.is_error\n+                    or entry.is_walrus_assigned_in_genexpr):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443158970",
            "id": 443158970,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1ODk3MA==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 592,
            "original_position": 6,
            "original_start_line": null,
            "path": "Cython/Compiler/FlowControl.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443158970/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443158970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443159096"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443159096"
                }
            },
            "author_association": "MEMBER",
            "body": "Whenever I see `s.peek()` called in the parser, it screams for a better way to do it. All binary operators work without peeking, so I'm sure `a := b` would, too.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T20:51:13Z",
            "diff_hunk": "@@ -155,7 +155,20 @@ def p_test_nocond(s):\n     if s.sy == 'lambda':\n         return p_lambdef_nocond(s)\n     else:\n-        return p_or_test(s)\n+        return p_walrus_test(s)\n+\n+# walrurus_test: IDENT := test | or_test\n+\n+def p_walrus_test(s):\n+    if s.peek()[0] == ':=':",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443159096",
            "id": 443159096,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1OTA5Ng==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 163,
            "original_position": 23,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159096/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443159265"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443159265"
                }
            },
            "author_association": "MEMBER",
            "body": "Probably worth looking at how `nonlocal` is implemented, might be similar enough to benefit from.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T20:54:24Z",
            "diff_hunk": "@@ -1940,7 +1945,16 @@ def mangle(self, prefix, name):\n \n     def declare_var(self, name, type, pos,\n                     cname = None, visibility = 'private',\n-                    api = 0, in_pxd = 0, is_cdef = True):\n+                    api = 0, in_pxd = 0, is_cdef = True,\n+                    walrus_target = False):\n+        if walrus_target:\n+            # should be declared in the parent scope instead",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443159265",
            "id": 443159265,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1OTI2NQ==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 1951,
            "original_position": 54,
            "original_start_line": 1950,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159265/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443159580"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443159580"
                }
            },
            "author_association": "MEMBER",
            "body": "In other copied Python tests, I just overwrite `eval()`, `exec()` and/or `compile()`. That reduces the amount of modifications in the test functions below. There _will_ be an update to this test file at some point in the future, and then it's often easier to copy the new file over and undo all local changes, than to copy over the CPython changes one by one.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T21:00:03Z",
            "diff_hunk": "@@ -0,0 +1,485 @@\n+# copied from cpython with minimal modifications (mainly exec->cython.inline, and a exception strings)\n+\n+import os\n+import unittest\n+import cython\n+from Cython.Build.Inline import cython_inline\n+from Cython.Compiler.Main import CompileError\n+\n+if cython.compiled:\n+    def exec_(code, locals_, globals_):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443159580",
            "id": 443159580,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1OTU4MA==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 10,
            "original_position": 10,
            "original_start_line": null,
            "path": "tests/run/test_named_expressions.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159580/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443159620"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443159620"
                }
            },
            "author_association": "MEMBER",
            "body": "Seems to need a `pure38` tag.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T21:00:44Z",
            "diff_hunk": "@@ -0,0 +1,485 @@\n+# copied from cpython with minimal modifications (mainly exec->cython.inline, and a exception strings)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443159620",
            "id": 443159620,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1OTYyMA==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "tests/run/test_named_expressions.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159620/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443159811"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443159811"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure if one `parent_scope` level is enough for nested genexprs.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-20T21:03:41Z",
            "diff_hunk": "@@ -1991,6 +2007,28 @@ def __init__(self, name, scope_name, outer_scope, parent_scope=None):\n     def declare_pyfunction(self, name, pos, allow_redefine=False):\n         return LocalScope.declare_pyfunction(self, name, pos, allow_redefine, visibility='private')\n \n+    def declare_var(self, name, type, pos,\n+                    cname = None, visibility = 'private',\n+                    api = 0, in_pxd = 0, is_cdef = True,\n+                    walrus_target = False):\n+        if walrus_target and self.is_genexpr_closure:\n+            # := assignments go outside the closure\n+            call_from = self.parent_scope",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443159811",
            "id": 443159811,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1OTgxMQ==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 2016,
            "original_position": 88,
            "original_start_line": null,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 434452864,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159811/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443159811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443192821"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443192821"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "It isn't, but the parent scope does that same thing until it's out of the closure (I think)",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-21T07:53:15Z",
            "diff_hunk": "@@ -1991,6 +2007,28 @@ def __init__(self, name, scope_name, outer_scope, parent_scope=None):\n     def declare_pyfunction(self, name, pos, allow_redefine=False):\n         return LocalScope.declare_pyfunction(self, name, pos, allow_redefine, visibility='private')\n \n+    def declare_var(self, name, type, pos,\n+                    cname = None, visibility = 'private',\n+                    api = 0, in_pxd = 0, is_cdef = True,\n+                    walrus_target = False):\n+        if walrus_target and self.is_genexpr_closure:\n+            # := assignments go outside the closure\n+            call_from = self.parent_scope",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443192821",
            "id": 443192821,
            "in_reply_to_id": 443159811,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5MjgyMQ==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 2016,
            "original_position": 88,
            "original_start_line": null,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 434478648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443192821/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443192821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443192918"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443192918"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Yes. It was just Python 2 mode that was causing me problems here (I'd forgotten that `exec` used to be a statement).",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-21T07:54:48Z",
            "diff_hunk": "@@ -0,0 +1,485 @@\n+# copied from cpython with minimal modifications (mainly exec->cython.inline, and a exception strings)\n+\n+import os\n+import unittest\n+import cython\n+from Cython.Build.Inline import cython_inline\n+from Cython.Compiler.Main import CompileError\n+\n+if cython.compiled:\n+    def exec_(code, locals_, globals_):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443192918",
            "id": 443192918,
            "in_reply_to_id": 443159580,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5MjkxOA==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 10,
            "original_position": 10,
            "original_start_line": null,
            "path": "tests/run/test_named_expressions.py",
            "position": null,
            "pull_request_review_id": 434478648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443192918/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443192918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443215324"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443215324"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I've added a `pure38` tag, but it seems to be ignored (possibly because it's not a doctest?)",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-21T12:34:50Z",
            "diff_hunk": "@@ -0,0 +1,485 @@\n+# copied from cpython with minimal modifications (mainly exec->cython.inline, and a exception strings)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443215324",
            "id": 443215324,
            "in_reply_to_id": 443159620,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIxNTMyNA==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "tests/run/test_named_expressions.py",
            "position": null,
            "pull_request_review_id": 434497691,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443215324/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443215324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443230292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443230292"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "This is the fix for comment https://github.com/cython/cython/issues/3699#issuecomment-647134169 (but not the main issue) - I suspect you could do better in principle (e.g. work out if the closure is actually called), however it's hard to reason much about entries in closures.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-21T15:25:36Z",
            "diff_hunk": "@@ -590,7 +590,7 @@ def check_definitions(flow, compiler_directives):\n             if (node.allow_null or entry.from_closure\n                     or entry.is_pyclass_attr or entry.type.is_error):\n                 pass  # Can be uninitialized here\n-            elif node.cf_is_null:\n+            elif node.cf_is_null and not entry.in_closure:",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443230292",
            "id": 443230292,
            "line": 593,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzMDI5Mg==",
            "original_commit_id": "86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2",
            "original_line": 593,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/FlowControl.py",
            "position": 5,
            "pull_request_review_id": 434510656,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443230292/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443230292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443230597"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443230597"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "In the current version they're still created at parser-time but in the constructor of `AssignmentExpressionNode`. If that's a problem then it can be postponed.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-21T15:28:53Z",
            "diff_hunk": "@@ -13755,6 +13761,21 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+def WalrusNode(pos, lhs, rhs, **kwds):\n+    \"\"\"\n+    An assignment expression\n+\n+    Defined as a function that constructs a composite node. However, has an interface designed to\n+    look like a node so it can easily be replaced if needed.\n+    (e.g. for conversion back to Py code.) FIXME!\n+    \"\"\"\n+    from .UtilNodes import TempResultFromStatNode, ResultRefNode\n+    lhs.walrus_target = True\n+    temp = ResultRefNode(pos=pos, expression=rhs)  # assigning expression lets it work out the type\n+                        # (but feels a bit like mixing the two uses of ResultRefNode)\n+    assignment = Nodes.CascadedAssignmentNode(pos=pos, lhs_list=[lhs, temp], rhs=rhs)\n+    return TempResultFromStatNode(result_ref=temp, body=assignment)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443230597",
            "id": 443230597,
            "in_reply_to_id": 443158919,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzMDU5Nw==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 13777,
            "original_position": 48,
            "original_start_line": 13774,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 434510933,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443230597/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443230597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443230669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443230669"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Resolved, although I'm pretty sure whatever I've done to the parser code is a mess in other ways.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-21T15:29:42Z",
            "diff_hunk": "@@ -155,7 +155,20 @@ def p_test_nocond(s):\n     if s.sy == 'lambda':\n         return p_lambdef_nocond(s)\n     else:\n-        return p_or_test(s)\n+        return p_walrus_test(s)\n+\n+# walrurus_test: IDENT := test | or_test\n+\n+def p_walrus_test(s):\n+    if s.peek()[0] == ':=':",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443230669",
            "id": 443230669,
            "in_reply_to_id": 443159096,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzMDY2OQ==",
            "original_commit_id": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "original_line": 163,
            "original_position": 23,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 434510992,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443230669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443230669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443233893"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443233893"
                }
            },
            "author_association": "MEMBER",
            "body": "A keyword argument would help in explaining what `False` means here.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-21T16:08:40Z",
            "diff_hunk": "@@ -120,9 +120,9 @@ def p_lambdef(s, allow_conditional=True):\n             s, terminator=':', annotated=False)\n     s.expect(':')\n     if allow_conditional:\n-        expr = p_test(s)\n+        expr = p_test(s, False)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443233893",
            "id": 443233893,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzMzg5Mw==",
            "original_commit_id": "d2ed9903fb3440a12a9a0715c81f6761ca958099",
            "original_line": 123,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 434513720,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443233893/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443233893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443288275"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443288275"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is there any particular reason for declaring this class inside the method? Creating classes is a fairly expensive operation, and it doesn't seem to need any closure values or otherwise require a different copy for every single node.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-22T02:19:30Z",
            "diff_hunk": "@@ -13755,6 +13769,59 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode\n+    rhs - ExprNode  (not stored as an attribute because it is likely to be heavily transformed)\n+\n+    internally uses\n+    impl - UtilNodes.TempResultFromStatNode\n+    \"\"\"\n+    # unusually, child_attrs and subexprs are deliberately not the same because it's\n+    # sort of a hybrid node\n+    subexprs = [\"impl\"]\n+\n+    impl = None\n+    is_temp = True\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        from .UtilNodes import TempResultFromStatNode, ResultRefNode\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+\n+        class WalrusResultRefNode(ResultRefNode):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443288275",
            "id": 443288275,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI4ODI3NQ==",
            "original_commit_id": "ca53086f2afe67ada8ba464268ef07a8a389f40a",
            "original_line": 13794,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 434566980,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443288275/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443288275",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443331742"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443331742"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "It does capture `self` (which isn't great itself because it isn't hugely obvious).\r\n\r\nIt's also inherits from a local import from `UtilNodes.py` which I don't want to import directly in the main body of `ExprNodes.py` because it'd create a circular dependency.\r\n\r\nI could always move this class to `UtilNodes` and refactor the capture if needed.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-22T05:58:44Z",
            "diff_hunk": "@@ -13755,6 +13769,59 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode\n+    rhs - ExprNode  (not stored as an attribute because it is likely to be heavily transformed)\n+\n+    internally uses\n+    impl - UtilNodes.TempResultFromStatNode\n+    \"\"\"\n+    # unusually, child_attrs and subexprs are deliberately not the same because it's\n+    # sort of a hybrid node\n+    subexprs = [\"impl\"]\n+\n+    impl = None\n+    is_temp = True\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        from .UtilNodes import TempResultFromStatNode, ResultRefNode\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+\n+        class WalrusResultRefNode(ResultRefNode):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443331742",
            "id": 443331742,
            "in_reply_to_id": 443288275,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzMTc0Mg==",
            "original_commit_id": "ca53086f2afe67ada8ba464268ef07a8a389f40a",
            "original_line": 13794,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 434621952,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443331742/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443331742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443355409"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443355409"
                }
            },
            "author_association": "MEMBER",
            "body": "Wasn't the `exec()` implementation in the other test modules (like `test_asyncgen.py` or `test_coroutines_pep492.py`) enough here? Maybe we could extract that into the test runner and inject it into the test module's namespace there (or the builtins) based on a test tag, so that the tests can just call it from there.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-22T07:06:49Z",
            "diff_hunk": "@@ -1,119 +1,169 @@\n # copied from cpython with minimal modifications (mainly exec->cython.inline, and a exception strings)\n+# cython: language_level=3\n \n import os\n import unittest\n import cython\n-from Cython.Build.Inline import cython_inline\n from Cython.Compiler.Main import CompileError\n+from Cython.Build.Inline import cython_inline\n+import sys\n \n if cython.compiled:\n-    def exec_(code, locals_, globals_):\n+    class StdErrHider:\n+        def __enter__(self):\n+            try:\n+                from StringIO import StringIO\n+            except ImportError:\n+                from io import StringIO\n+\n+            self.old_stderr = sys.stderr\n+            self.new_stderr = StringIO()\n+            sys.stderr = self.new_stderr\n+\n+            return self\n+\n+        def __exit__(self, exc_type, exc_value, traceback):\n+            sys.stderr = self.old_stderr\n+\n+        @property\n+        def stderr_contents(self):\n+            return self.new_stderr.getvalue()\n+\n+    def exec(code, globals_=None, locals_=None):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443355409",
            "id": 443355409,
            "line": 37,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1NTQwOQ==",
            "original_commit_id": "d2ed9903fb3440a12a9a0715c81f6761ca958099",
            "original_line": 32,
            "original_position": 34,
            "original_start_line": null,
            "path": "tests/run/test_named_expressions.py",
            "position": 37,
            "pull_request_review_id": 434513720,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443355409/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443355409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r443366758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443366758"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I did start with copying exec from other test modules. (I think I used `test_grammar` as the basis). The issues were:\r\n\r\n* The `cython_inline` runs in the a function scope (`__invoke`) which returns `locals()`, but some of the tests here actually explicitly use `global` so I need to get the real globals out of it too.\r\n* A lot of the tests here are for compilation failures. `cython_inline` raises parser failures as  an exception with the correct error message, but any failure after the parser gets raised with the filename as the error message.\r\n\r\nIt really did need most of the modifications here \r\n\r\nI could see the value of a shared `cython_exec` though that behaves as close to the \"real\" `exec` as is possible (mainly for testing, but it could also be exposed)",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-06-22T07:31:28Z",
            "diff_hunk": "@@ -1,119 +1,169 @@\n # copied from cpython with minimal modifications (mainly exec->cython.inline, and a exception strings)\n+# cython: language_level=3\n \n import os\n import unittest\n import cython\n-from Cython.Build.Inline import cython_inline\n from Cython.Compiler.Main import CompileError\n+from Cython.Build.Inline import cython_inline\n+import sys\n \n if cython.compiled:\n-    def exec_(code, locals_, globals_):\n+    class StdErrHider:\n+        def __enter__(self):\n+            try:\n+                from StringIO import StringIO\n+            except ImportError:\n+                from io import StringIO\n+\n+            self.old_stderr = sys.stderr\n+            self.new_stderr = StringIO()\n+            sys.stderr = self.new_stderr\n+\n+            return self\n+\n+        def __exit__(self, exc_type, exc_value, traceback):\n+            sys.stderr = self.old_stderr\n+\n+        @property\n+        def stderr_contents(self):\n+            return self.new_stderr.getvalue()\n+\n+    def exec(code, globals_=None, locals_=None):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r443366758",
            "id": 443366758,
            "in_reply_to_id": 443355409,
            "line": 37,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2Njc1OA==",
            "original_commit_id": "d2ed9903fb3440a12a9a0715c81f6761ca958099",
            "original_line": 32,
            "original_position": 34,
            "original_start_line": null,
            "path": "tests/run/test_named_expressions.py",
            "position": 37,
            "pull_request_review_id": 434667928,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/443366758/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443366758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r463941636"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/463941636"
                }
            },
            "author_association": "MEMBER",
            "body": "There's a `make_owned_reference()`, but yeah, I guess there would be different cases to handle here.\r\n\r\nIt would generally be nice to have some way to say \"this node inherits its result from another\". There are several cases where this would help, some utility nodes, but also conditional expressions or the `and/or` operator. Maybe some mixin node class and/or a new protocol could simplify this need.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-08-01T08:58:59Z",
            "diff_hunk": "@@ -13755,6 +13769,52 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode\n+    rhs - ExprNode  (not stored as an attribute because it is likely to be heavily transformed)\n+\n+    internally uses\n+    impl - UtilNodes.TempResultFromStatNode\n+    \"\"\"\n+    # unusually, child_attrs and subexprs are deliberately not the same because it's\n+    # sort of a hybrid node\n+    subexprs = [\"impl\"]\n+\n+    impl = None\n+    is_temp = True\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        from .UtilNodes import TempResultFromStatNode, ResultRefWithTypePropertyNode\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+\n+        temp = ResultRefWithTypePropertyNode(pos=pos,\n+                    type_getter = lambda: self.impl.body.stats[0].rhs.type if self.impl else None)\n+        assignment1 = Nodes.SingleAssignmentNode(pos=pos, lhs=temp, rhs=rhs, first=True)\n+        assignment2 = Nodes.SingleAssignmentNode(pos=pos, lhs=lhs, rhs=temp, first=True,\n+                                                 is_assignment_expression=True)\n+\n+        self.impl = TempResultFromStatNode(result_ref=temp, body=Nodes.StatListNode(pos,\n+            stats=[assignment1, assignment2]))\n+\n+    def infer_type(self, env):\n+        return self.impl.infer_type(env)\n+\n+    def analyse_types(self, env):\n+        self.impl = self.impl.analyse_types(env)\n+        self.type = self.impl.type\n+        return self\n+\n+    def generate_result_code(self, code):\n+        # TODO: There's almost certainly some shuffling to be done to take ownership of impl's result\n+        code.putln(\"%s = %s;\" % (\n+            self.result(), self.impl.result()))\n+        code.put_incref(self.result(), self.type)\n+        #self.impl.generate_execution_code(code)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r463941636",
            "id": 463941636,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0MTYzNg==",
            "original_commit_id": "aee84684e30cbd942ad50b036b38ad51c4d63fd4",
            "original_line": 13816,
            "original_position": 97,
            "original_start_line": 13811,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/463941636/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/463941636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r540376066"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/540376066"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "There's a few above in `__test_debug_conversion` to enable once https://github.com/cython/cython/pull/3939/files is in.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2020-12-10T17:51:58Z",
            "diff_hunk": "@@ -1234,11 +1234,9 @@ non-important content\n         # spec of '=10'.\n         self.assertEqual(f'{x:=10}', '        20')\n \n-        \"\"\"",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r540376066",
            "id": 540376066,
            "line": 1244,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3NjA2Ng==",
            "original_commit_id": "8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9",
            "original_line": 1244,
            "original_position": 4,
            "original_start_line": null,
            "path": "tests/run/test_fstring.pyx",
            "position": 22,
            "pull_request_review_id": 549456824,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/540376066/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/540376066",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r625744823"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/625744823"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Pr got merged, might need to rebase and enable the tests :)",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-04T12:39:09Z",
            "diff_hunk": "@@ -1234,11 +1234,9 @@ non-important content\n         # spec of '=10'.\n         self.assertEqual(f'{x:=10}', '        20')\n \n-        \"\"\"",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r625744823",
            "id": 625744823,
            "in_reply_to_id": 540376066,
            "line": 1244,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTc0NDgyMw==",
            "original_commit_id": "8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9",
            "original_line": 1244,
            "original_position": 4,
            "original_start_line": null,
            "path": "tests/run/test_fstring.pyx",
            "position": 22,
            "pull_request_review_id": 651186912,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/625744823/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/625744823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627493334"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627493334"
                }
            },
            "author_association": "MEMBER",
            "body": "Wouldn't `self.is_generator` work here?\r\n```suggestion\r\n                                is_genexpr_closure=self.is_generator)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T14:52:04Z",
            "diff_hunk": "@@ -1807,7 +1807,8 @@ def create_local_scope(self, env):\n             lenv = ClosureScope(name=self.entry.name,\n                                 outer_scope=genv,\n                                 parent_scope=env,\n-                                scope_name=self.entry.cname)\n+                                scope_name=self.entry.cname,\n+                                is_genexpr_closure = isinstance(self, GeneratorDefNode))",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627493334",
            "id": 627493334,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzQ5MzMzNA==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 1811,
            "original_position": 6,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627493334/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627493334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627495160"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627495160"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        _AssignmentExpressionChecker.do_checks(node.loop, scope_is_class=self.scope_type in (\"pyclass\", \"cclass\"))\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T14:54:04Z",
            "diff_hunk": "@@ -201,6 +203,7 @@ def visit_GeneratorExpressionNode(self, node):\n             node.pos, name=node.name, doc=None,\n             args=[], star_arg=None, starstar_arg=None,\n             body=node.loop, is_async_def=collector.has_await)\n+        _AssignmentExpressionChecker.do_checks(node.loop, self.scope_type in (\"pyclass\", \"cclass\"))",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627495160",
            "id": 627495160,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzQ5NTE2MA==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 206,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627495160/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627495160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627495342"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627495342"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        _AssignmentExpressionChecker.do_checks(node.loop, scope_is_class=self.scope_type in (\"pyclass\", \"cclass\"))\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T14:54:16Z",
            "diff_hunk": "@@ -211,6 +214,7 @@ def visit_ComprehensionNode(self, node):\n             collector.visitchildren(node.loop)\n             if collector.has_await:\n                 node.has_local_scope = True\n+        _AssignmentExpressionChecker.do_checks(node.loop, self.scope_type in (\"pyclass\", \"cclass\"))",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627495342",
            "id": 627495342,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzQ5NTM0Mg==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 217,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627495342/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627495342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627502685"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627502685"
                }
            },
            "author_association": "MEMBER",
            "body": "This won't report the right position on later errors.\r\n```suggestion\r\n    if s.sy == ':=':\r\n        position = s.position()\r\n        if not allow_assignment_expression:\r\n            s.error(\"invalid syntax: assignment expression not allowed in this context\")\r\n        elif not lhs.is_name:\r\n            s.error(\"Left-hand side of assignment expression must be an identifier\")\r\n        s.next()\r\n        rhs = p_test(s)\r\n        return ExprNodes.AssignmentExpressionNode(position, lhs=lhs, rhs=rhs)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:01:54Z",
            "diff_hunk": "@@ -151,11 +151,25 @@ def p_test(s):\n \n #test_nocond: or_test | lambdef_nocond\n \n-def p_test_nocond(s):\n+def p_test_nocond(s, allow_assignment_expression=True):\n     if s.sy == 'lambda':\n         return p_lambdef_nocond(s)\n     else:\n-        return p_or_test(s)\n+        return p_walrus_test(s, allow_assignment_expression)\n+\n+# walrurus_test: IDENT := test | or_test\n+\n+def p_walrus_test(s, allow_assignment_expression=True):\n+    lhs = p_or_test(s)\n+    if s.sy == ':=':\n+        if not allow_assignment_expression:\n+            s.error(\"invalid syntax: assignment expression not allowed in this context\")\n+        elif not lhs.is_name:\n+            s.error(\"Left-hand side of assignment expression must be an identifier\")\n+        s.next()\n+        rhs = p_test(s)\n+        return ExprNodes.AssignmentExpressionNode(s.position(), lhs=lhs, rhs=rhs)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627502685",
            "id": 627502685,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUwMjY4NQ==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 171,
            "original_position": 53,
            "original_start_line": 164,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627502685/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627502685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627507703"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627507703"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe?\r\n```suggestion\r\n    def declare_assignment_expression_target(self, name, type, pos):\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:07:43Z",
            "diff_hunk": "@@ -736,6 +736,11 @@ def declare_var(self, name, type, pos,\n             entry.used = 1\n         return entry\n \n+    def declare_var_assignment_expression(self, name, type, pos):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627507703",
            "id": 627507703,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUwNzcwMw==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 739,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627507703/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627507703",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627508357"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627508357"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    def lookup_here_assignment_expression_target(self, name):\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:08:30Z",
            "diff_hunk": "@@ -962,6 +967,11 @@ def lookup_here(self, name):\n     def lookup_here_unmangled(self, name):\n         return self.entries.get(name, None)\n \n+    def lookup_here_assignment_expression(self, name):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627508357",
            "id": 627508357,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUwODM1Nw==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 970,
            "original_position": 16,
            "original_start_line": null,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627508357/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627508357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627509515"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627509515"
                }
            },
            "author_association": "MEMBER",
            "body": "Unrelated change?\r\n```suggestion\r\n                    allow_pyobject=False, allow_memoryview=False):\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:09:49Z",
            "diff_hunk": "@@ -2006,7 +2050,7 @@ def __init__(self, name=\"?\"):\n     def declare_var(self, name, type, pos,\n                     cname = None, visibility = 'private',\n                     api = 0, in_pxd = 0, is_cdef = 0,\n-                    allow_pyobject=False, allow_memoryview=False):\n+                    allow_pyobject=False, allow_memoryview=False,):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627509515",
            "id": 627509515,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUwOTUxNQ==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 2053,
            "original_position": 93,
            "original_start_line": null,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627509515/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627509515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627510648"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627510648"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't understand this comment. What would happen without the `return`?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:11:07Z",
            "diff_hunk": "@@ -147,6 +147,9 @@ def update_expression(self, expression):\n         if type:\n             self.type = type\n \n+    def analyse_target_declaration(self, env):\n+        return  # because it can be the left-hand sides",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627510648",
            "id": 627510648,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUxMDY0OA==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 151,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627510648/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627510648",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627511451"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627511451"
                }
            },
            "author_association": "MEMBER",
            "body": "Seems worth a comment.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:12:06Z",
            "diff_hunk": "@@ -201,7 +204,7 @@ def generate_assignment_code(self, rhs, code, overloaded_assignment=False):\n         if self.type.is_pyobject:\n             rhs.make_owned_reference(code)\n             if not self.lhs_of_first_assignment:\n-                code.put_decref(self.result(), self.ctype())\n+                code.put_xdecref(self.result(), self.ctype())",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627511451",
            "id": 627511451,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUxMTQ1MQ==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 207,
            "original_position": 15,
            "original_start_line": 204,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627511451/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627511451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627519174"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627519174"
                }
            },
            "author_association": "MEMBER",
            "body": "If the RHS gets transformed, then the reference to it should change here. Why is that not enough?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:21:19Z",
            "diff_hunk": "@@ -13878,6 +13892,52 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode\n+    rhs - ExprNode  (not stored as an attribute because it is likely to be heavily transformed)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627519174",
            "id": 627519174,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUxOTE3NA==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 13901,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627519174/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627519174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627525406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627525406"
                }
            },
            "author_association": "MEMBER",
            "body": "Two assignment nodes? It feels like we should try with just one. Maybe the `AssignmentExpressionNode` needs to do more work then, and probably also treated differently in the control flow analyser etc., but it should be possible to pass a single temp value through as the `result_code` *and* do the assignment. You may have to play a bit with the temp disposal, but I faintly recall having done that before in some other node, probably some utility node.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:28:46Z",
            "diff_hunk": "@@ -13878,6 +13892,52 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode\n+    rhs - ExprNode  (not stored as an attribute because it is likely to be heavily transformed)\n+\n+    internally uses\n+    impl - UtilNodes.TempResultFromStatNode\n+    \"\"\"\n+    # unusually, child_attrs and subexprs are deliberately not the same because it's\n+    # sort of a hybrid node\n+    subexprs = [\"impl\"]\n+\n+    impl = None\n+    is_temp = True\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        from .UtilNodes import TempResultFromStatNode, ResultRefWithTypePropertyNode\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+\n+        temp = ResultRefWithTypePropertyNode(pos=pos,\n+                    type_getter = lambda: self.impl.body.stats[0].rhs.type if self.impl else None)\n+        assignment1 = Nodes.SingleAssignmentNode(pos=pos, lhs=temp, rhs=rhs, first=True)\n+        assignment2 = Nodes.SingleAssignmentNode(pos=pos, lhs=lhs, rhs=temp, first=True,\n+                                                 is_assignment_expression=True)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627525406",
            "id": 627525406,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUyNTQwNg==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 13921,
            "original_position": 79,
            "original_start_line": 13919,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627525406/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627525406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627525795"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627525795"
                }
            },
            "author_association": "MEMBER",
            "body": "Keep it! :)",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T15:29:10Z",
            "diff_hunk": "@@ -8392,7 +8407,6 @@ def _generate_vars_cleanup(self, code, py_entries):\n             else:\n                 code.put_var_xdecref_clear(entry)\n \n-",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627525795",
            "id": 627525795,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzUyNTc5NQ==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 8446,
            "original_position": 45,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 459565349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627525795/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627525795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627572412"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627572412"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "`rhs` ends up as a child of the `TempResultFromStatNode` and that's ultimately where it gets transformed. It's fiddly to keep in in sync with `rhs` as an attribute of `AssignmentExpressionNode` (and it isn't *that* useful here). If we want it accessible as an attribute it probably needs to be a property",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T16:16:56Z",
            "diff_hunk": "@@ -13878,6 +13892,52 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode\n+    rhs - ExprNode  (not stored as an attribute because it is likely to be heavily transformed)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627572412",
            "id": 627572412,
            "in_reply_to_id": 627519174,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU3MjQxMg==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 13901,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 653644945,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627572412/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627572412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627578597"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627578597"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "```suggestion\r\n    def declare_var_assignment_expression_target(self, name, type, pos):\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T16:22:51Z",
            "diff_hunk": "@@ -1996,6 +2018,28 @@ def __init__(self, name, scope_name, outer_scope, parent_scope=None):\n     def declare_pyfunction(self, name, pos, allow_redefine=False):\n         return LocalScope.declare_pyfunction(self, name, pos, allow_redefine, visibility='private')\n \n+    def declare_var_assignment_expression(self, name, type, pos):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627578597",
            "id": 627578597,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU3ODU5Nw==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 2021,
            "original_position": 63,
            "original_start_line": null,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 653644945,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627578597/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627578597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627579514"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627579514"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "```suggestion\r\n    def lookup_here_assignment_expression_target(self, name):\r\n        entry = self.lookup_here(name)\r\n        if not entry:\r\n            entry = self.parent_scope.lookup_here_assignment_expression_target(name)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T16:23:30Z",
            "diff_hunk": "@@ -1975,14 +1989,22 @@ def declare_lambda_function(self, func_cname, pos):\n     def add_lambda_def(self, def_node):\n         return self.outer_scope.add_lambda_def(def_node)\n \n+    def lookup_here_assignment_expression(self, name):\n+        entry = self.lookup_here(name)\n+        if not entry:\n+            entry = self.parent_scope.lookup_here_assignment_expression(name)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627579514",
            "id": 627579514,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU3OTUxNA==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 1995,
            "original_position": 42,
            "original_start_line": 1992,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 653644945,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627579514/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627579514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627580103"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627580103"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "```suggestion\r\n    def lookup_here_assignment_expression_target(self, name):\r\n        entry = self.lookup_here(name)\r\n        if not entry and self.is_genexpr_closure:\r\n            entry = self.parent_scope.lookup_here_assignment_expression_target(name)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T16:23:58Z",
            "diff_hunk": "@@ -1996,6 +2018,28 @@ def __init__(self, name, scope_name, outer_scope, parent_scope=None):\n     def declare_pyfunction(self, name, pos, allow_redefine=False):\n         return LocalScope.declare_pyfunction(self, name, pos, allow_redefine, visibility='private')\n \n+    def declare_var_assignment_expression(self, name, type, pos):\n+        if self.is_genexpr_closure:\n+            entry = self.parent_scope.declare_var(name, type, pos)\n+            entry.in_closure = True\n+            inner_entry = InnerEntry(entry, self)\n+            inner_entry.is_variable = True\n+            self.entries[name] = inner_entry\n+            return inner_entry\n+        return self.declare_var(name, type, pos)\n+\n+    def lookup_here_assignment_expression(self, name):\n+        entry = self.lookup_here(name)\n+        if not entry and self.is_genexpr_closure:\n+            entry = self.parent_scope.lookup_here_assignment_expression(name)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627580103",
            "id": 627580103,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU4MDEwMw==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 2034,
            "original_position": 76,
            "original_start_line": 2031,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 653644945,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627580103/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627580103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627583392"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627583392"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I think what the comment referred to the need for the function rather than the need for the `return`. I'll change it to make it clearer",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T16:26:38Z",
            "diff_hunk": "@@ -147,6 +147,9 @@ def update_expression(self, expression):\n         if type:\n             self.type = type\n \n+    def analyse_target_declaration(self, env):\n+        return  # because it can be the left-hand sides",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627583392",
            "id": 627583392,
            "in_reply_to_id": 627510648,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU4MzM5Mg==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 151,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": null,
            "pull_request_review_id": 653644945,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627583392/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627583392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627590045"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627590045"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "```suggestion\r\n    def declare_var_assignment_expression_target(self, name, type, pos):\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T16:32:20Z",
            "diff_hunk": "@@ -1965,6 +1975,10 @@ def declare_var(self, name, type, pos,\n         self.entries[name] = entry\n         return entry\n \n+    def declare_var_assignment_expression(self, name, type, pos):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627590045",
            "id": 627590045,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5MDA0NQ==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 1978,
            "original_position": 28,
            "original_start_line": null,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 653663549,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627590045/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627590045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r627609124"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/627609124"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I'm not quite sure why this was needed (or if it's still needed). It seems to pass the tests without. Possibly suggesting I should have written the comment at the time.\r\n\r\nI've reverted it for now, but it's possible it'll become clear later...",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-06T16:59:52Z",
            "diff_hunk": "@@ -201,7 +204,7 @@ def generate_assignment_code(self, rhs, code, overloaded_assignment=False):\n         if self.type.is_pyobject:\n             rhs.make_owned_reference(code)\n             if not self.lhs_of_first_assignment:\n-                code.put_decref(self.result(), self.ctype())\n+                code.put_xdecref(self.result(), self.ctype())",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r627609124",
            "id": 627609124,
            "in_reply_to_id": 627511451,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzYwOTEyNA==",
            "original_commit_id": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "original_line": 207,
            "original_position": 15,
            "original_start_line": 204,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": null,
            "pull_request_review_id": 653689199,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/627609124/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/627609124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r628053922"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/628053922"
                }
            },
            "author_association": "MEMBER",
            "body": "It was unclear to me at first sight whether \"shared\" referred to the target, the declaration, or something else, until I looked up where it's being called. Also, an argument like \"True\" is incomprehensible without looking up the name of the argument. So just spell that out.\r\n```suggestion\r\n        return self._analyse_target_declaration(env, is_assignment_expression=False)\r\n\r\n    def analyse_assignment_expression_target_declaration(self, env):\r\n        return self._analyse_target_declaration(env, is_assignment_expression=True)\r\n\r\n    def _analyse_target_declaration(self, env, is_assignment_expression):\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-07T09:11:34Z",
            "diff_hunk": "@@ -2056,8 +2059,17 @@ def analyse_as_extension_type(self, env):\n         return None\n \n     def analyse_target_declaration(self, env):\n+        return self.analyse_target_declaration_shared(env, False)\n+\n+    def analyse_assignment_expression_target_declaration(self, env):\n+        return self.analyse_target_declaration_shared(env, True)\n+\n+    def analyse_target_declaration_shared(self, env, is_assignment_expression):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r628053922",
            "id": 628053922,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODA1MzkyMg==",
            "original_commit_id": "273d9684c93a1ac9edd26ffda52e926cf72e736b",
            "original_line": 2067,
            "original_position": 19,
            "original_start_line": 2062,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 654248051,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/628053922/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/628053922",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r628056000"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/628056000"
                }
            },
            "author_association": "MEMBER",
            "body": "Since there is no such lookup without \"here\", should we remove that to make the function name more readable?\r\n```suggestion\r\n                self.entry = env.lookup_assignment_expression_target(self.name)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-07T09:14:39Z",
            "diff_hunk": "@@ -2056,8 +2059,17 @@ def analyse_as_extension_type(self, env):\n         return None\n \n     def analyse_target_declaration(self, env):\n+        return self.analyse_target_declaration_shared(env, False)\n+\n+    def analyse_assignment_expression_target_declaration(self, env):\n+        return self.analyse_target_declaration_shared(env, True)\n+\n+    def analyse_target_declaration_shared(self, env, is_assignment_expression):\n         if not self.entry:\n-            self.entry = env.lookup_here(self.name)\n+            if is_assignment_expression:\n+                self.entry = env.lookup_here_assignment_expression_target(self.name)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r628056000",
            "id": 628056000,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODA1NjAwMA==",
            "original_commit_id": "273d9684c93a1ac9edd26ffda52e926cf72e736b",
            "original_line": 2070,
            "original_position": 23,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 654248051,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/628056000/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/628056000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r628239640"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/628239640"
                }
            },
            "author_association": "MEMBER",
            "body": "Can't the `rhs` of the `SingleAssignmentNode` be a `CloneNode` right from the start? Why does it have to be special? AFAIU, all we need is a non-owned reference to the RHS node, which is in turn owned by the AssExpNode.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-07T14:08:16Z",
            "diff_hunk": "@@ -13878,6 +13893,98 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+\n+class AssignmentExpressionRhsNode(ExprNode):\n+    \"\"\"\n+    A very thin wrapper around an ExprNode. It gets its type and tempness from the right-hand side of\n+    the AssignmentExpressionNode that it's linked to. At the analyse_types stage it converts itself\n+    to a CloneNode\n+\n+    Attribute:\n+    parent_expression  - AssignmentExpressionNode\n+    \"\"\"\n+    subexprs = []\n+\n+    @property\n+    def arg(self):\n+        return self.parent_expression.rhs\n+\n+    @property\n+    def type(self):\n+        return self.arg.type\n+\n+    @property\n+    def is_temp(self):\n+        return self.arg.is_temp\n+\n+    def infer_type(self, env):\n+        return self.arg.infer_type(env)\n+\n+    def analyse_types(self, env):\n+        return CloneNode(self.arg)\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"assignment\", \"rhs\"]\n+\n+    is_temp = False\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, rhs=rhs, **kwds)\n+        assign_expr_rhs = AssignmentExpressionRhsNode(rhs.pos, parent_expression=self)\n+        self.assignment = SingleAssignmentNode(pos=pos, lhs=lhs,\n+                                            rhs=assign_expr_rhs,\n+                                            is_assignment_expression=True)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r628239640",
            "id": 628239640,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODIzOTY0MA==",
            "original_commit_id": "273d9684c93a1ac9edd26ffda52e926cf72e736b",
            "original_line": 13951,
            "original_position": 100,
            "original_start_line": 13946,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 654498582,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/628239640/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/628239640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r628723664"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/628723664"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Done.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-05-08T08:53:14Z",
            "diff_hunk": "@@ -13878,6 +13893,98 @@ def analyse_type_annotation(self, env, assigned_value=None):\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n \n+\n+class AssignmentExpressionRhsNode(ExprNode):\n+    \"\"\"\n+    A very thin wrapper around an ExprNode. It gets its type and tempness from the right-hand side of\n+    the AssignmentExpressionNode that it's linked to. At the analyse_types stage it converts itself\n+    to a CloneNode\n+\n+    Attribute:\n+    parent_expression  - AssignmentExpressionNode\n+    \"\"\"\n+    subexprs = []\n+\n+    @property\n+    def arg(self):\n+        return self.parent_expression.rhs\n+\n+    @property\n+    def type(self):\n+        return self.arg.type\n+\n+    @property\n+    def is_temp(self):\n+        return self.arg.is_temp\n+\n+    def infer_type(self, env):\n+        return self.arg.infer_type(env)\n+\n+    def analyse_types(self, env):\n+        return CloneNode(self.arg)\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"assignment\", \"rhs\"]\n+\n+    is_temp = False\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, rhs=rhs, **kwds)\n+        assign_expr_rhs = AssignmentExpressionRhsNode(rhs.pos, parent_expression=self)\n+        self.assignment = SingleAssignmentNode(pos=pos, lhs=lhs,\n+                                            rhs=assign_expr_rhs,\n+                                            is_assignment_expression=True)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r628723664",
            "id": 628723664,
            "in_reply_to_id": 628239640,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODcyMzY2NA==",
            "original_commit_id": "273d9684c93a1ac9edd26ffda52e926cf72e736b",
            "original_line": 13951,
            "original_position": 100,
            "original_start_line": 13946,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 654974331,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/628723664/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-08T09:07:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/628723664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r733796817"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/733796817"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-10-21T15:26:16Z",
            "diff_hunk": "@@ -13977,3 +13995,109 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    clone_node - CloneNode (or None) - tracks what's inside the assignment\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    _rhs = None\n+    clone_node = None\n+\n+    @property\n+    def rhs(self):\n+        return self._rhs\n+    @rhs.setter\n+    def rhs(self, value):\n+        old_rhs = self._rhs\n+        self._rhs = value\n+        if old_rhs is not value and self.assignment and self.clone_node:\n+            # make sure that the contents of the CloneNode are kept up-to-date\n+            self.clone_node.arg = value\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r733796817",
            "id": 733796817,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4rvNnR",
            "original_commit_id": "15e53a0574659025d1f174b762affa09eff9bd2a",
            "original_line": 14034,
            "original_position": 92,
            "original_start_line": 14033,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 785863095,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/733796817/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-10-21T16:07:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/733796817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r733797966"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/733797966"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        self.assignment = SingleAssignmentNode(\r\n            pos, lhs=lhs, rhs=assign_expr_rhs, is_assignment_expression=True)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-10-21T15:27:24Z",
            "diff_hunk": "@@ -13977,3 +13995,109 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    clone_node - CloneNode (or None) - tracks what's inside the assignment\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    _rhs = None\n+    clone_node = None\n+\n+    @property\n+    def rhs(self):\n+        return self._rhs\n+    @rhs.setter\n+    def rhs(self, value):\n+        old_rhs = self._rhs\n+        self._rhs = value\n+        if old_rhs is not value and self.assignment and self.clone_node:\n+            # make sure that the contents of the CloneNode are kept up-to-date\n+            self.clone_node.arg = value\n+\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = rhs  # separately, because it's a property\n+        self.clone_node = assign_expr_rhs = CloneNode(rhs)\n+        self.assignment = SingleAssignmentNode(pos=pos, lhs=lhs,\n+                                            rhs=assign_expr_rhs,\n+                                            is_assignment_expression=True)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r733797966",
            "id": 733797966,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4rvN5O",
            "original_commit_id": "15e53a0574659025d1f174b762affa09eff9bd2a",
            "original_line": 14041,
            "original_position": 99,
            "original_start_line": 14039,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 785863095,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/733797966/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-10-21T16:07:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/733797966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r733828454"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/733828454"
                }
            },
            "author_association": "MEMBER",
            "body": "IIUC, the sole purpose of this is to hand over the ownership from the RHS node to this node, because we need to delay the cleanup of the RHS node until we clean up the result of this node. Isn't it possible to craft an appropriate pair of `generate_disposal_code()` and `generate_subexpr_disposal_code()` methods? This is something we've needed several times before for nodes that 'forward' the results of child nodes that create them. There could be a special subexpression (name?) attribute that is only cleaned up together with the node itself.\r\n\r\nConditional expressions and binary boolean operators come to mind as another use case, although using two alternative subexpressions. Not sure if this can be solved in the same way.\r\n\r\nIt also feels like there's a relation with `is_temp`. Not sure in which way, whether the forwarding node should always be temp, should never be temp, or should forward the temp status from the child (which seems least desirable)…",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-10-21T16:02:54Z",
            "diff_hunk": "@@ -13977,3 +13995,109 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    clone_node - CloneNode (or None) - tracks what's inside the assignment\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    _rhs = None\n+    clone_node = None\n+\n+    @property\n+    def rhs(self):\n+        return self._rhs\n+    @rhs.setter\n+    def rhs(self, value):\n+        old_rhs = self._rhs\n+        self._rhs = value\n+        if old_rhs is not value and self.assignment and self.clone_node:\n+            # make sure that the contents of the CloneNode are kept up-to-date\n+            self.clone_node.arg = value\n+\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = rhs  # separately, because it's a property\n+        self.clone_node = assign_expr_rhs = CloneNode(rhs)\n+        self.assignment = SingleAssignmentNode(pos=pos, lhs=lhs,\n+                                            rhs=assign_expr_rhs,\n+                                            is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.is_temp:\n+            if not self.rhs.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp\n+                # (it would be tempting to including self.rhs.is_name in here but that can end up\n+                # wrong for assignment expressions run in parallel e.g. `(a := b) + (b := a + c)`)\n+                self.rhs = self.rhs.coerce_to_temp(env)\n+            else:\n+                self.assignment.rhs = copy.copy(self.rhs)\n+                self.clone_node = None",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r733828454",
            "id": 733828454,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4rvVVm",
            "original_commit_id": "15e53a0574659025d1f174b762affa09eff9bd2a",
            "original_line": 14070,
            "original_position": 128,
            "original_start_line": 14062,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 785863095,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/733828454/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-10-21T16:07:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/733828454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r734007152"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/734007152"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I'm still looking at this (and trying to work out why I've did it). The `else` case (effectively `if self.rhs.is_literal`) is there as an optimization so it just subsitutes the literal twice instead of going via a temp. The `if` case (anything else) is a coercion to a temp because `CloneNode` assumes that the `arg` should be a temp.\r\n\r\nA lot of the complication in the class was a bad reinvention of `ProxyNode`. I've got rid of it now by using `ProxyNode`.\r\n\r\nI think you're right that I should be generating custom `generate_disposal_code()` and `generate_subexpr_disposal_code()` to just forward the temp. I think there's an extra INCREF/DECREF pair that I could avoid by doing so. I'll have a look to see how this works in the examples you suggest.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-10-21T20:03:26Z",
            "diff_hunk": "@@ -13977,3 +13995,109 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    clone_node - CloneNode (or None) - tracks what's inside the assignment\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    _rhs = None\n+    clone_node = None\n+\n+    @property\n+    def rhs(self):\n+        return self._rhs\n+    @rhs.setter\n+    def rhs(self, value):\n+        old_rhs = self._rhs\n+        self._rhs = value\n+        if old_rhs is not value and self.assignment and self.clone_node:\n+            # make sure that the contents of the CloneNode are kept up-to-date\n+            self.clone_node.arg = value\n+\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = rhs  # separately, because it's a property\n+        self.clone_node = assign_expr_rhs = CloneNode(rhs)\n+        self.assignment = SingleAssignmentNode(pos=pos, lhs=lhs,\n+                                            rhs=assign_expr_rhs,\n+                                            is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.is_temp:\n+            if not self.rhs.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp\n+                # (it would be tempting to including self.rhs.is_name in here but that can end up\n+                # wrong for assignment expressions run in parallel e.g. `(a := b) + (b := a + c)`)\n+                self.rhs = self.rhs.coerce_to_temp(env)\n+            else:\n+                self.assignment.rhs = copy.copy(self.rhs)\n+                self.clone_node = None",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r734007152",
            "id": 734007152,
            "in_reply_to_id": 733828454,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4rwA9w",
            "original_commit_id": "15e53a0574659025d1f174b762affa09eff9bd2a",
            "original_line": 14070,
            "original_position": 128,
            "original_start_line": 14062,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 786146835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/734007152/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-10-21T20:03:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/734007152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r734938565"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/734938565"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I've updated it to try to add a mechanism for stealing a temp from a subexpression. I think it works and look fairly clean. It isn't absolutely necessary for this PR though (it only eliminates an INCREF/DECREF pair) so can be removed or deferred if it adds too much complication",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2021-10-23T07:43:10Z",
            "diff_hunk": "@@ -13977,3 +13995,109 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    clone_node - CloneNode (or None) - tracks what's inside the assignment\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    _rhs = None\n+    clone_node = None\n+\n+    @property\n+    def rhs(self):\n+        return self._rhs\n+    @rhs.setter\n+    def rhs(self, value):\n+        old_rhs = self._rhs\n+        self._rhs = value\n+        if old_rhs is not value and self.assignment and self.clone_node:\n+            # make sure that the contents of the CloneNode are kept up-to-date\n+            self.clone_node.arg = value\n+\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = rhs  # separately, because it's a property\n+        self.clone_node = assign_expr_rhs = CloneNode(rhs)\n+        self.assignment = SingleAssignmentNode(pos=pos, lhs=lhs,\n+                                            rhs=assign_expr_rhs,\n+                                            is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.is_temp:\n+            if not self.rhs.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp\n+                # (it would be tempting to including self.rhs.is_name in here but that can end up\n+                # wrong for assignment expressions run in parallel e.g. `(a := b) + (b := a + c)`)\n+                self.rhs = self.rhs.coerce_to_temp(env)\n+            else:\n+                self.assignment.rhs = copy.copy(self.rhs)\n+                self.clone_node = None",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r734938565",
            "id": 734938565,
            "in_reply_to_id": 733828454,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4rzkXF",
            "original_commit_id": "15e53a0574659025d1f174b762affa09eff9bd2a",
            "original_line": 14070,
            "original_position": 128,
            "original_start_line": 14062,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 787368837,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/734938565/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-10-23T07:43:18Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/734938565",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r790333821"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/790333821"
                }
            },
            "author_association": "MEMBER",
            "body": "Can this also be achieved with a `TempNode` or something like that? Meaning, by actually assigning the ownership to a shared third node?\r\n\r\nA `temp_stolen_by_parent` flag feels like \"I own this, although, actually not\". Having to look in more than one place to see if `is_temp` really means `is_temp` feels wrong.\r\n\r\nI think we should really move the \"avoid the incref\" optimisation to another PR that cleans things up wherever we do that, and try to find a general mechanism for it.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-23T21:34:47Z",
            "diff_hunk": "@@ -13977,3 +13995,109 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    clone_node - CloneNode (or None) - tracks what's inside the assignment\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    _rhs = None\n+    clone_node = None\n+\n+    @property\n+    def rhs(self):\n+        return self._rhs\n+    @rhs.setter\n+    def rhs(self, value):\n+        old_rhs = self._rhs\n+        self._rhs = value\n+        if old_rhs is not value and self.assignment and self.clone_node:\n+            # make sure that the contents of the CloneNode are kept up-to-date\n+            self.clone_node.arg = value\n+\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = rhs  # separately, because it's a property\n+        self.clone_node = assign_expr_rhs = CloneNode(rhs)\n+        self.assignment = SingleAssignmentNode(pos=pos, lhs=lhs,\n+                                            rhs=assign_expr_rhs,\n+                                            is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.is_temp:\n+            if not self.rhs.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp\n+                # (it would be tempting to including self.rhs.is_name in here but that can end up\n+                # wrong for assignment expressions run in parallel e.g. `(a := b) + (b := a + c)`)\n+                self.rhs = self.rhs.coerce_to_temp(env)\n+            else:\n+                self.assignment.rhs = copy.copy(self.rhs)\n+                self.clone_node = None",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r790333821",
            "id": 790333821,
            "in_reply_to_id": 733828454,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vG4l9",
            "original_commit_id": "15e53a0574659025d1f174b762affa09eff9bd2a",
            "original_line": 14070,
            "original_position": 128,
            "original_start_line": 14062,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 860374558,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/790333821/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-23T21:34:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/790333821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791032240"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791032240"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I've removed it for simplicity (but haven't tried too hard to find an alternative mechanism for it) - for now we can omit the optimization.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T18:19:39Z",
            "diff_hunk": "@@ -13977,3 +13995,109 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    clone_node - CloneNode (or None) - tracks what's inside the assignment\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    _rhs = None\n+    clone_node = None\n+\n+    @property\n+    def rhs(self):\n+        return self._rhs\n+    @rhs.setter\n+    def rhs(self, value):\n+        old_rhs = self._rhs\n+        self._rhs = value\n+        if old_rhs is not value and self.assignment and self.clone_node:\n+            # make sure that the contents of the CloneNode are kept up-to-date\n+            self.clone_node.arg = value\n+\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = rhs  # separately, because it's a property\n+        self.clone_node = assign_expr_rhs = CloneNode(rhs)\n+        self.assignment = SingleAssignmentNode(pos=pos, lhs=lhs,\n+                                            rhs=assign_expr_rhs,\n+                                            is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.is_temp:\n+            if not self.rhs.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp\n+                # (it would be tempting to including self.rhs.is_name in here but that can end up\n+                # wrong for assignment expressions run in parallel e.g. `(a := b) + (b := a + c)`)\n+                self.rhs = self.rhs.coerce_to_temp(env)\n+            else:\n+                self.assignment.rhs = copy.copy(self.rhs)\n+                self.clone_node = None",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791032240",
            "id": 791032240,
            "in_reply_to_id": 733828454,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vJjGw",
            "original_commit_id": "15e53a0574659025d1f174b762affa09eff9bd2a",
            "original_line": 14070,
            "original_position": 128,
            "original_start_line": 14062,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 861353027,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791032240/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T18:19:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791032240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791136782"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791136782"
                }
            },
            "author_association": "MEMBER",
            "body": "Since this seemed worth a comment, it's probably worth a more descriptive name. :)\r\n\r\nBut before we start with the bike shedding – introducing this seems an unrelated refactoring. Can you just leave it out?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T20:45:08Z",
            "diff_hunk": "@@ -2166,13 +2166,17 @@ def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n+    def put_nullify(self, cname, type):\n+        # for a PyObject this means \"set to NULL without reference counting\"",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791136782",
            "id": 791136782,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vJ8oO",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2170,
            "original_position": 5,
            "original_start_line": 2169,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791136782/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T22:58:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791136782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791138244"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791138244"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this used anywhere?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T20:47:18Z",
            "diff_hunk": "@@ -2166,13 +2166,17 @@ def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n+    def put_nullify(self, cname, type):\n+        # for a PyObject this means \"set to NULL without reference counting\"\n+        type.generate_nullify(self, cname)\n+\n     def put_gotref(self, cname, type):\n         type.generate_gotref(self, cname)\n \n-    def put_giveref(self, cname, type):\n+    def put_giveref(self, cname, type, clear=False):\n         type.generate_giveref(self, cname)\n \n-    def put_xgiveref(self, cname, type):\n+    def put_xgiveref(self, cname, type, clear=False):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791138244",
            "id": 791138244,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vJ8_E",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2179,
            "original_position": 16,
            "original_start_line": 2172,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791138244/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-01-24T22:58:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791138244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791147080"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791147080"
                }
            },
            "author_association": "MEMBER",
            "body": "This attribute seems unused. Is it needed, or is it enough to only pass it on into the assignment node?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:00:29Z",
            "diff_hunk": "@@ -13989,3 +14000,94 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791147080",
            "id": 791147080,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vJ_JI",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 14014,
            "original_position": 70,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791147080/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791147080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791148704"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791148704"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we? What about literal tuples? Do those work as well?\r\nIf it's just an optimisation, I'd leave it out for now. Or make sure that all types of literals are covered in the tests.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:02:56Z",
            "diff_hunk": "@@ -13989,3 +14000,94 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    clone_node = None\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = ProxyNode(rhs)\n+        assign_expr_rhs = CloneNode(self.rhs)\n+        self.assignment = SingleAssignmentNode(\n+            pos, lhs=lhs, rhs=assign_expr_rhs, is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.arg.is_temp:\n+            if not self.rhs.arg.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp, because CloneNode requires arg to be a temp\n+                self.rhs.arg = self.rhs.arg.coerce_to_temp(env)\n+            else:\n+                # For literals we can optimize by just using the literal twice",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791148704",
            "id": 791148704,
            "line": 14064,
            "node_id": "PRRC_kwDOABDGAc4vJ_ig",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 14057,
            "original_position": 113,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 124,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791148704/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791148704",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791152301"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791152301"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe rename this to make it an officially usable method? The comment seems strictly required to understand why this is called here. Instead, the name should give it away.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:08:50Z",
            "diff_hunk": "@@ -13989,3 +14000,94 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    clone_node = None\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = ProxyNode(rhs)\n+        assign_expr_rhs = CloneNode(self.rhs)\n+        self.assignment = SingleAssignmentNode(\n+            pos, lhs=lhs, rhs=assign_expr_rhs, is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.arg.is_temp:\n+            if not self.rhs.arg.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp, because CloneNode requires arg to be a temp\n+                self.rhs.arg = self.rhs.arg.coerce_to_temp(env)\n+            else:\n+                # For literals we can optimize by just using the literal twice\n+                # (it would be tempting to including self.rhs.is_name in here but that can end up\n+                # wrong for assignment expressions run in parallel e.g. `(a := b) + (b := a + c)`)\n+                self.assignment.rhs = copy.copy(self.rhs)\n+\n+        # TODO - there's a missed optimization in the code generation stage\n+        # for self.rhs.arg.is_temp: an incref/decref pair can be removed\n+        # (but needs a general mechanism to do that)\n+        self.assignment = self.assignment.analyse_types(env)\n+        return self\n+\n+    def coerce_to(self, dst_type, env):\n+        if dst_type == self.assignment.rhs.type:\n+            # in this quite common case (for example, when both lhs, and self are being coerced to Python)\n+            # we can optimize the coercion out by sharing it between\n+            # this and the assignment\n+            old_rhs_arg = self.rhs.arg\n+            if isinstance(old_rhs_arg, CoerceToTempNode):\n+                old_rhs_arg = old_rhs_arg.arg\n+            rhs_arg = old_rhs_arg.coerce_to(dst_type, env)\n+            if rhs_arg is not old_rhs_arg:\n+                self.rhs.arg = rhs_arg\n+                self.rhs._proxy_type()  # refresh the updated type",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791152301",
            "id": 791152301,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKAat",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 14079,
            "original_position": 135,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791152301/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791152301",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791153146"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791153146"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's just use the screen space that we have.\r\n```suggestion\r\n                msg = \"local variable '%s' might be referenced before assignment\" % entry.name\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:10:05Z",
            "diff_hunk": "@@ -604,10 +604,13 @@ def check_definitions(flow, compiler_directives):\n                         \"local variable '%s' referenced before assignment\"\n                         % entry.name)\n             elif warn_maybe_uninitialized:\n+                msg = (\"local variable '%s' might be referenced before assignment\"\n+                        % entry.name)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791153146",
            "id": 791153146,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKAn6",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 608,
            "original_position": 14,
            "original_start_line": 607,
            "path": "Cython/Compiler/FlowControl.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791153146/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791153146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791159645"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791159645"
                }
            },
            "author_association": "MEMBER",
            "body": "Could this also be an argument to `ClosureScope`? Setting it after the fact would prevent the class from doing anything with that information in the constructor. And it seems like it should know.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:20:23Z",
            "diff_hunk": "@@ -1819,6 +1820,8 @@ def create_local_scope(self, env):\n                                 outer_scope=genv,\n                                 parent_scope=env,\n                                 scope_name=self.entry.cname)\n+            if self.is_generator_expression:\n+                lenv.is_generator_expression_scope = True",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791159645",
            "id": 791159645,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKCNd",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 1824,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791159645/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791159645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791161195"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791161195"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # other targets are possible, but it isn't necessary to investigate them here\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:22:51Z",
            "diff_hunk": "@@ -378,6 +383,103 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but since it isn't necessary to investigate them here",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791161195",
            "id": 791161195,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKClr",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 399,
            "original_position": 45,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791161195/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791161195",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791163644"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791163644"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    @classmethod\r\n    def do_checks(cls, loop_node, scope_is_class):\r\n        checker = cls(loop_node, scope_is_class)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:26:36Z",
            "diff_hunk": "@@ -378,6 +383,103 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but since it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = sum(self.target_names_dict.values(), ())\n+\n+    @staticmethod\n+    def do_checks(loop_node, scope_is_class):\n+        checker = _AssignmentExpressionChecker(loop_node, scope_is_class)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791163644",
            "id": 791163644,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKDL8",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 434,
            "original_position": 80,
            "original_start_line": 432,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791163644/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791163644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791166033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791166033"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            self.visitchildren(node, exclude=(\"iterator\",))\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:30:16Z",
            "diff_hunk": "@@ -378,6 +383,103 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but since it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = sum(self.target_names_dict.values(), ())\n+\n+    @staticmethod\n+    def do_checks(loop_node, scope_is_class):\n+        checker = _AssignmentExpressionChecker(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            self.current_target_names += self.target_names_dict.get(node, None)\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, attrs=[attr for attr in node.child_attrs if attr!=\"iterator\"])",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791166033",
            "id": 791166033,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKDxR",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 447,
            "original_position": 93,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791166033/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791166033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791166340"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791166340"
                }
            },
            "author_association": "MEMBER",
            "body": "`+= None` ?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:30:46Z",
            "diff_hunk": "@@ -378,6 +383,103 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but since it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = sum(self.target_names_dict.values(), ())\n+\n+    @staticmethod\n+    def do_checks(loop_node, scope_is_class):\n+        checker = _AssignmentExpressionChecker(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            self.current_target_names += self.target_names_dict.get(node, None)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791166340",
            "id": 791166340,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKD2E",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 442,
            "original_position": 88,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791166340/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791166340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791167356"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791167356"
                }
            },
            "author_association": "MEMBER",
            "body": "These are unordered, so it's probably worth collecting them into a `set` instead, no?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:32:16Z",
            "diff_hunk": "@@ -378,6 +383,103 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but since it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = sum(self.target_names_dict.values(), ())",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791167356",
            "id": 791167356,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKEF8",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 430,
            "original_position": 76,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791167356/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791167356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791176189"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791176189"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if node.lhs.name in self.current_target_names:\r\n            error(node.pos, \"assignment expression cannot rebind comprehension iteration variable '%s'\" %\r\n                  node.lhs.name)\r\n        elif node.lhs.name in self.all_target_names:\r\n            error(node.pos, \"comprehension inner loop cannot rebind assignment expression target '%s'\" %\r\n                  node.lhs.name)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:45:53Z",
            "diff_hunk": "@@ -378,6 +383,103 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but since it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = sum(self.target_names_dict.values(), ())\n+\n+    @staticmethod\n+    def do_checks(loop_node, scope_is_class):\n+        checker = _AssignmentExpressionChecker(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            self.current_target_names += self.target_names_dict.get(node, None)\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, attrs=[attr for attr in node.child_attrs if attr!=\"iterator\"])\n+\n+            self.current_target_names = current_target_names\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+    def visit_AssignmentExpressionNode(self, node):\n+        if self.in_iterator:\n+            error(node.pos, \"assignment expression cannot be used in a comprehension iterable expression\")\n+        if self.scope_is_class:\n+            error(node.pos, \"assignment expression within a comprehension cannot be used in a class body\")\n+        if node.lhs.name in self.current_target_names:\n+            error(node.pos, \"assignment expression cannot rebind comprehension iteration variable '%s'\" %\n+                    node.lhs.name)\n+        elif node.lhs.name in self.all_target_names:\n+            error(node.pos, \"comprehension inner loop cannot rebind assignment expression target '%s'\" %\n+                    node.lhs.name)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791176189",
            "id": 791176189,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKGP9",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 464,
            "original_position": 110,
            "original_start_line": 459,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791176189/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791176189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791176495"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791176495"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # lambda node `def_node` isn't set up here\r\n        # so we need to recurse into it explicitly\r\n        self.visit(node.result_expr)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:46:20Z",
            "diff_hunk": "@@ -378,6 +383,103 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but since it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = sum(self.target_names_dict.values(), ())\n+\n+    @staticmethod\n+    def do_checks(loop_node, scope_is_class):\n+        checker = _AssignmentExpressionChecker(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            self.current_target_names += self.target_names_dict.get(node, None)\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, attrs=[attr for attr in node.child_attrs if attr!=\"iterator\"])\n+\n+            self.current_target_names = current_target_names\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+    def visit_AssignmentExpressionNode(self, node):\n+        if self.in_iterator:\n+            error(node.pos, \"assignment expression cannot be used in a comprehension iterable expression\")\n+        if self.scope_is_class:\n+            error(node.pos, \"assignment expression within a comprehension cannot be used in a class body\")\n+        if node.lhs.name in self.current_target_names:\n+            error(node.pos, \"assignment expression cannot rebind comprehension iteration variable '%s'\" %\n+                    node.lhs.name)\n+        elif node.lhs.name in self.all_target_names:\n+            error(node.pos, \"comprehension inner loop cannot rebind assignment expression target '%s'\" %\n+                    node.lhs.name)\n+\n+    def visit_LambdaNode(self, node):\n+        self.visit(node.result_expr)  # lambda node `def_node` isn't set up here\n+            # so we need to recurse into it explicitly",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791176495",
            "id": 791176495,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKGUv",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 468,
            "original_position": 114,
            "original_start_line": 467,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791176495/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791176495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791178584"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791178584"
                }
            },
            "author_association": "MEMBER",
            "body": "Non-local references in comments tend to get overlooked on changes.\r\n```suggestion\r\n        # def_node isn't set up yet, so we need to visit the loop directly.\r\n        self.visit(node.loop)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:49:48Z",
            "diff_hunk": "@@ -378,6 +383,103 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but since it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = sum(self.target_names_dict.values(), ())\n+\n+    @staticmethod\n+    def do_checks(loop_node, scope_is_class):\n+        checker = _AssignmentExpressionChecker(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            self.current_target_names += self.target_names_dict.get(node, None)\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, attrs=[attr for attr in node.child_attrs if attr!=\"iterator\"])\n+\n+            self.current_target_names = current_target_names\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+    def visit_AssignmentExpressionNode(self, node):\n+        if self.in_iterator:\n+            error(node.pos, \"assignment expression cannot be used in a comprehension iterable expression\")\n+        if self.scope_is_class:\n+            error(node.pos, \"assignment expression within a comprehension cannot be used in a class body\")\n+        if node.lhs.name in self.current_target_names:\n+            error(node.pos, \"assignment expression cannot rebind comprehension iteration variable '%s'\" %\n+                    node.lhs.name)\n+        elif node.lhs.name in self.all_target_names:\n+            error(node.pos, \"comprehension inner loop cannot rebind assignment expression target '%s'\" %\n+                    node.lhs.name)\n+\n+    def visit_LambdaNode(self, node):\n+        self.visit(node.result_expr)  # lambda node `def_node` isn't set up here\n+            # so we need to recurse into it explicitly\n+\n+    def visit_ComprehensionNode(self, node):\n+        in_nested_generator = self.in_nested_generator\n+        self.in_nested_generator = True\n+        self.visitchildren(node)\n+        self.in_nested_generator = in_nested_generator\n+\n+    def visit_GeneratorExpressionNode(self, node):\n+        in_nested_generator = self.in_nested_generator\n+        self.in_nested_generator = True\n+        self.visit(node.loop)  # like lambda node, this has to be done explicitly because def_node isn't set up",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791178584",
            "id": 791178584,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKG1Y",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 479,
            "original_position": 125,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791178584/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791178584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791181824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791181824"
                }
            },
            "author_association": "MEMBER",
            "body": "There doesn't seem to be a clear consensus in the class whether `analyse_declarations()` is first done or the tree recursion, but some places do it the other way round. Is it relevant here?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:54:39Z",
            "diff_hunk": "@@ -2269,6 +2371,11 @@ def create_Property(self, entry):\n         property.doc = entry.doc\n         return property\n \n+    def visit_AssignmentExpressionNode(self, node):\n+        self.visitchildren(node)\n+        node.analyse_declarations(self.current_env())",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791181824",
            "id": 791181824,
            "line": 2397,
            "node_id": "PRRC_kwDOABDGAc4vKHoA",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2376,
            "original_position": 138,
            "original_start_line": 2375,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 159,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791181824/reactions"
            },
            "side": "RIGHT",
            "start_line": 2396,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791181824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791183031"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791183031"
                }
            },
            "author_association": "MEMBER",
            "body": "What is the \"general rule\"? Whether assignment expressions are allows in the current syntax context or not?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T21:56:30Z",
            "diff_hunk": "@@ -135,14 +135,14 @@ def p_lambdef_nocond(s):\n \n #test: or_test ['if' or_test 'else' test] | lambdef\n \n-def p_test(s):\n+def p_test(s, allow_assignment_expression=True):\n     if s.sy == 'lambda':\n         return p_lambdef(s)\n     pos = s.position()\n-    expr = p_or_test(s)\n+    expr = p_walrus_test(s, allow_assignment_expression)\n     if s.sy == 'if':\n         s.next()\n-        test = p_or_test(s)\n+        test = p_walrus_test(s)  # don't think this should be affected by the general rule",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791183031",
            "id": 791183031,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKH63",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 145,
            "original_position": 26,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791183031/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791183031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791194520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791194520"
                }
            },
            "author_association": "MEMBER",
            "body": "I think some of these parse functions could benefit from being split in two (or otherwise refactored a bit), rather than passing them an option. For example, it's not clear to me what `is_expression=False` means for an expression.\r\n\r\nAt some point, we should also try to come a little closer again to CPython's parser structure. Cython's structure was originally based on the old CPython grammar but has probably diverged over the years. Now that CPython has a new parser overall (generated from [Parser/Python.asdl](https://github.com/python/cpython/blob/main/Parser/Python.asdl) as [Parser/parser.c](https://raw.githubusercontent.com/python/cpython/main/Parser/parser.c)), it's probably worth taking some guidance from that.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T22:14:53Z",
            "diff_hunk": "@@ -1492,9 +1507,9 @@ def p_testlist_star_expr(s):\n \n # testlist_comp: (test|star_expr) ( comp_for | (',' (test|star_expr))* [','] )\n \n-def p_testlist_comp(s):\n+def p_testlist_comp(s, is_expression=False):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791194520",
            "id": 791194520,
            "line": 1512,
            "node_id": "PRRC_kwDOABDGAc4vKKuY",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 1510,
            "original_position": 114,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": 116,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791194520/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791194520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791207677"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791207677"
                }
            },
            "author_association": "MEMBER",
            "body": "This suggests subclassing to me.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T22:37:00Z",
            "diff_hunk": "@@ -2012,6 +2034,28 @@ def __init__(self, name, scope_name, outer_scope, parent_scope=None):\n     def declare_pyfunction(self, name, pos, allow_redefine=False):\n         return LocalScope.declare_pyfunction(self, name, pos, allow_redefine, visibility='private')\n \n+    def declare_assignment_expression_target(self, name, type, pos):\n+        if self.is_generator_expression_scope:\n+            entry = self.parent_scope.declare_var(name, type, pos)\n+            entry.in_closure = True\n+            inner_entry = InnerEntry(entry, self)\n+            inner_entry.is_variable = True\n+            self.entries[name] = inner_entry\n+            return inner_entry\n+        return self.declare_var(name, type, pos)\n+\n+    def lookup_assignment_expression_target(self, name):\n+        entry = self.lookup_here(name)\n+        if not entry and self.is_generator_expression_scope:\n+            entry = self.parent_scope.lookup_assignment_expression_target(name)\n+            if entry:\n+                entry.in_closure = True\n+                inner_entry = InnerEntry(entry, self)\n+                inner_entry.is_variable = True\n+                self.entries[name] = inner_entry\n+                return inner_entry\n+        return entry",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791207677",
            "id": 791207677,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vKN79",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2057,
            "original_position": 88,
            "original_start_line": 2037,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791207677/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791207677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791217601"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791217601"
                }
            },
            "author_association": "MEMBER",
            "body": "`coerce_to_simple()` isn't enough?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-24T22:55:13Z",
            "diff_hunk": "@@ -13989,3 +14000,94 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    clone_node = None\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = ProxyNode(rhs)\n+        assign_expr_rhs = CloneNode(self.rhs)\n+        self.assignment = SingleAssignmentNode(\n+            pos, lhs=lhs, rhs=assign_expr_rhs, is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.arg.is_temp:\n+            if not self.rhs.arg.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp, because CloneNode requires arg to be a temp\n+                self.rhs.arg = self.rhs.arg.coerce_to_temp(env)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791217601",
            "id": 791217601,
            "line": 14062,
            "node_id": "PRRC_kwDOABDGAc4vKQXB",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 14055,
            "original_position": 111,
            "original_start_line": 14053,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 122,
            "pull_request_review_id": 861497919,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791217601/reactions"
            },
            "side": "RIGHT",
            "start_line": 14060,
            "start_side": "RIGHT",
            "updated_at": "2022-01-24T22:58:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791217601",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791432961"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791432961"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "You mean `is_generator_expression_scope` should be linked to a subclass? Or something else?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T07:42:48Z",
            "diff_hunk": "@@ -2012,6 +2034,28 @@ def __init__(self, name, scope_name, outer_scope, parent_scope=None):\n     def declare_pyfunction(self, name, pos, allow_redefine=False):\n         return LocalScope.declare_pyfunction(self, name, pos, allow_redefine, visibility='private')\n \n+    def declare_assignment_expression_target(self, name, type, pos):\n+        if self.is_generator_expression_scope:\n+            entry = self.parent_scope.declare_var(name, type, pos)\n+            entry.in_closure = True\n+            inner_entry = InnerEntry(entry, self)\n+            inner_entry.is_variable = True\n+            self.entries[name] = inner_entry\n+            return inner_entry\n+        return self.declare_var(name, type, pos)\n+\n+    def lookup_assignment_expression_target(self, name):\n+        entry = self.lookup_here(name)\n+        if not entry and self.is_generator_expression_scope:\n+            entry = self.parent_scope.lookup_assignment_expression_target(name)\n+            if entry:\n+                entry.in_closure = True\n+                inner_entry = InnerEntry(entry, self)\n+                inner_entry.is_variable = True\n+                self.entries[name] = inner_entry\n+                return inner_entry\n+        return entry",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791432961",
            "id": 791432961,
            "in_reply_to_id": 791207677,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vLE8B",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2057,
            "original_position": 88,
            "original_start_line": 2037,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 861889989,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791432961/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-25T07:56:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791432961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791436271"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791436271"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "The function was useful for the \"somehow steal ownership of a temp\" code.\r\n\r\nSince that's gone I think this can be removed",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T07:48:16Z",
            "diff_hunk": "@@ -2166,13 +2166,17 @@ def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n+    def put_nullify(self, cname, type):\n+        # for a PyObject this means \"set to NULL without reference counting\"",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791436271",
            "id": 791436271,
            "in_reply_to_id": 791136782,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vLFvv",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2170,
            "original_position": 5,
            "original_start_line": 2169,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 861889989,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791436271/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-25T07:56:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791436271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791439390"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791439390"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I undid this change - `TreeVisitor` doesn't have `exclude` as an argument.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T07:53:06Z",
            "diff_hunk": "@@ -444,7 +444,7 @@ def visit_ForInStatNode(self, node):\n             self.in_iterator = True\n             self.visit(node.iterator)\n             self.in_iterator = False\n-            self.visitchildren(node, attrs=[attr for attr in node.child_attrs if attr!=\"iterator\"])\n+            self.visitchildren(node, exclude=(\"iterator\",))",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791439390",
            "id": 791439390,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vLGge",
            "original_commit_id": "ecd8dca0b2e278b1fd2f6216e555eb524b403da3",
            "original_line": 447,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 861889989,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791439390/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-25T07:56:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791439390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791604353"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791604353"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes. The way you use the flag pretty much cuts these methods into two entirely separate implementations. That is much better represented with a subtype. And a `GeneratorExpressionScope` seems a reasonable type to have.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T11:09:40Z",
            "diff_hunk": "@@ -2012,6 +2034,28 @@ def __init__(self, name, scope_name, outer_scope, parent_scope=None):\n     def declare_pyfunction(self, name, pos, allow_redefine=False):\n         return LocalScope.declare_pyfunction(self, name, pos, allow_redefine, visibility='private')\n \n+    def declare_assignment_expression_target(self, name, type, pos):\n+        if self.is_generator_expression_scope:\n+            entry = self.parent_scope.declare_var(name, type, pos)\n+            entry.in_closure = True\n+            inner_entry = InnerEntry(entry, self)\n+            inner_entry.is_variable = True\n+            self.entries[name] = inner_entry\n+            return inner_entry\n+        return self.declare_var(name, type, pos)\n+\n+    def lookup_assignment_expression_target(self, name):\n+        entry = self.lookup_here(name)\n+        if not entry and self.is_generator_expression_scope:\n+            entry = self.parent_scope.lookup_assignment_expression_target(name)\n+            if entry:\n+                entry.in_closure = True\n+                inner_entry = InnerEntry(entry, self)\n+                inner_entry.is_variable = True\n+                self.entries[name] = inner_entry\n+                return inner_entry\n+        return entry",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791604353",
            "id": 791604353,
            "in_reply_to_id": 791207677,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vLuyB",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2057,
            "original_position": 88,
            "original_start_line": 2037,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 862129827,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791604353/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-25T11:09:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791604353",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r791627995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/791627995"
                }
            },
            "author_association": "MEMBER",
            "body": "Right. I moved the option up to the `TreeVisitor` class in the master branch, because why not.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T11:41:18Z",
            "diff_hunk": "@@ -444,7 +444,7 @@ def visit_ForInStatNode(self, node):\n             self.in_iterator = True\n             self.visit(node.iterator)\n             self.in_iterator = False\n-            self.visitchildren(node, attrs=[attr for attr in node.child_attrs if attr!=\"iterator\"])\n+            self.visitchildren(node, exclude=(\"iterator\",))",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r791627995",
            "id": 791627995,
            "in_reply_to_id": 791439390,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vL0jb",
            "original_commit_id": "ecd8dca0b2e278b1fd2f6216e555eb524b403da3",
            "original_line": 447,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 862162317,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/791627995/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-25T11:41:18Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/791627995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792027494"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792027494"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "It was used in the `_AssignmentExpressionChecker` transform. I've replaced it with a `target_name` property though (since that was the only thing we were interested in)",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T18:56:48Z",
            "diff_hunk": "@@ -13989,3 +14000,94 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792027494",
            "id": 792027494,
            "in_reply_to_id": 791147080,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vNWFm",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 14014,
            "original_position": 70,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 862731035,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792027494/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-25T21:53:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792027494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792051551"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792051551"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I don't think so, because I'm explicitly excluding `NameNode` from this (and `NameNode.is_simple` always returns True).\r\n\r\nHowever, I think that can be revisited with a proper fix to https://github.com/cython/cython/issues/4146 so I've updated the comment.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T19:29:59Z",
            "diff_hunk": "@@ -13989,3 +14000,94 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    clone_node = None\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = ProxyNode(rhs)\n+        assign_expr_rhs = CloneNode(self.rhs)\n+        self.assignment = SingleAssignmentNode(\n+            pos, lhs=lhs, rhs=assign_expr_rhs, is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.arg.is_temp:\n+            if not self.rhs.arg.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp, because CloneNode requires arg to be a temp\n+                self.rhs.arg = self.rhs.arg.coerce_to_temp(env)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792051551",
            "id": 792051551,
            "in_reply_to_id": 791217601,
            "line": 14062,
            "node_id": "PRRC_kwDOABDGAc4vNb9f",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 14055,
            "original_position": 111,
            "original_start_line": 14053,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 122,
            "pull_request_review_id": 862731035,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792051551/reactions"
            },
            "side": "RIGHT",
            "start_line": 14060,
            "start_side": "RIGHT",
            "updated_at": "2022-01-25T21:53:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792051551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792061273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792061273"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I've added extra tests for the literals I can think of.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T19:43:39Z",
            "diff_hunk": "@@ -13989,3 +14000,94 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    clone_node = None\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = ProxyNode(rhs)\n+        assign_expr_rhs = CloneNode(self.rhs)\n+        self.assignment = SingleAssignmentNode(\n+            pos, lhs=lhs, rhs=assign_expr_rhs, is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.arg.is_temp:\n+            if not self.rhs.arg.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp, because CloneNode requires arg to be a temp\n+                self.rhs.arg = self.rhs.arg.coerce_to_temp(env)\n+            else:\n+                # For literals we can optimize by just using the literal twice",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792061273",
            "id": 792061273,
            "in_reply_to_id": 791148704,
            "line": 14064,
            "node_id": "PRRC_kwDOABDGAc4vNeVZ",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 14057,
            "original_position": 113,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 124,
            "pull_request_review_id": 862731035,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792061273/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-25T21:53:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792061273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792062832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792062832"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Now renamed `update_type_and_entry`",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T19:45:55Z",
            "diff_hunk": "@@ -13989,3 +14000,94 @@ def analyse_type_annotation(self, env, assigned_value=None):\n         else:\n             warning(annotation.pos, \"Unknown type declaration in annotation, ignoring\")\n         return base_type, arg_type\n+\n+\n+class AssignmentExpressionNode(ExprNode):\n+    \"\"\"\n+    Also known as a named expression or the walrus operator\n+\n+    Arguments\n+    lhs - NameNode - not stored directly as an attribute of the node\n+    rhs - ExprNode\n+\n+    Attributes\n+    lhs        - ExprNode (really should be a NameNode but this is validated later)\n+    rhs        - ExprNode\n+    assignment - SingleAssignmentNode\n+    \"\"\"\n+    # subexprs and child_attrs are intentionally different here, because the assignment is not an expression\n+    subexprs = [\"rhs\"]\n+    child_attrs = [\"rhs\", \"assignment\"]  # This order is important for control-flow (i.e. xdecref) to be right\n+\n+    is_temp = False\n+    assignment = None\n+    clone_node = None\n+\n+    def __init__(self, pos, lhs, rhs, **kwds):\n+        super(AssignmentExpressionNode, self).__init__(pos, lhs=lhs, **kwds)\n+        self.rhs = ProxyNode(rhs)\n+        assign_expr_rhs = CloneNode(self.rhs)\n+        self.assignment = SingleAssignmentNode(\n+            pos, lhs=lhs, rhs=assign_expr_rhs, is_assignment_expression=True)\n+\n+    @property\n+    def type(self):\n+        return self.rhs.type\n+\n+    def infer_type(self, env):\n+        return self.rhs.infer_type(env)\n+\n+    def analyse_declarations(self, env):\n+        self.assignment.analyse_declarations(env)\n+\n+    def analyse_types(self, env):\n+        # we're trying to generate code that looks roughly like:\n+        #   __pyx_t_1 = rhs\n+        #   lhs = __pyx_t_1\n+        #   __pyx_t_1\n+        # (plus any reference counting that's needed)\n+\n+        self.rhs = self.rhs.analyse_types(env)\n+        if not self.rhs.arg.is_temp:\n+            if not self.rhs.arg.is_literal:\n+                # for anything but the simplest cases (where it can be used directly)\n+                # we convert rhs to a temp, because CloneNode requires arg to be a temp\n+                self.rhs.arg = self.rhs.arg.coerce_to_temp(env)\n+            else:\n+                # For literals we can optimize by just using the literal twice\n+                # (it would be tempting to including self.rhs.is_name in here but that can end up\n+                # wrong for assignment expressions run in parallel e.g. `(a := b) + (b := a + c)`)\n+                self.assignment.rhs = copy.copy(self.rhs)\n+\n+        # TODO - there's a missed optimization in the code generation stage\n+        # for self.rhs.arg.is_temp: an incref/decref pair can be removed\n+        # (but needs a general mechanism to do that)\n+        self.assignment = self.assignment.analyse_types(env)\n+        return self\n+\n+    def coerce_to(self, dst_type, env):\n+        if dst_type == self.assignment.rhs.type:\n+            # in this quite common case (for example, when both lhs, and self are being coerced to Python)\n+            # we can optimize the coercion out by sharing it between\n+            # this and the assignment\n+            old_rhs_arg = self.rhs.arg\n+            if isinstance(old_rhs_arg, CoerceToTempNode):\n+                old_rhs_arg = old_rhs_arg.arg\n+            rhs_arg = old_rhs_arg.coerce_to(dst_type, env)\n+            if rhs_arg is not old_rhs_arg:\n+                self.rhs.arg = rhs_arg\n+                self.rhs._proxy_type()  # refresh the updated type",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792062832",
            "id": 792062832,
            "in_reply_to_id": 791152301,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vNetw",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 14079,
            "original_position": 135,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 862731035,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792062832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-25T21:53:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792062832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792149609"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792149609"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "It doesn't seem to matter for this case as far as I can tell (and I can't work out if there's a good reason to do it one way or the other). Therefore I'll leave it as is.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-25T21:51:39Z",
            "diff_hunk": "@@ -2269,6 +2371,11 @@ def create_Property(self, entry):\n         property.doc = entry.doc\n         return property\n \n+    def visit_AssignmentExpressionNode(self, node):\n+        self.visitchildren(node)\n+        node.analyse_declarations(self.current_env())",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792149609",
            "id": 792149609,
            "in_reply_to_id": 791181824,
            "line": 2397,
            "node_id": "PRRC_kwDOABDGAc4vNz5p",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2376,
            "original_position": 138,
            "original_start_line": 2375,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 159,
            "pull_request_review_id": 862731035,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792149609/reactions"
            },
            "side": "RIGHT",
            "start_line": 2396,
            "start_side": "RIGHT",
            "updated_at": "2022-01-25T21:53:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792149609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792453673"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792453673"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            self.all_target_names.update(names)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T09:33:57Z",
            "diff_hunk": "@@ -427,24 +427,28 @@ def __init__(self, loop_node, scope_is_class):\n         self.in_nested_generator = False\n         self.scope_is_class = scope_is_class\n         self.current_target_names = ()\n-        self.all_target_names = sum(self.target_names_dict.values(), ())\n+        self.all_target_names = set()\n+        for names in self.target_names_dict.values():\n+            self.all_target_names = self.all_target_names.union(names)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792453673",
            "id": 792453673,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vO-Ip",
            "original_commit_id": "f2f9f907ac870ad19188151c5ee069459c00452a",
            "original_line": 432,
            "original_position": 16,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 863295543,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792453673/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T09:43:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792453673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792460816"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792460816"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T09:42:54Z",
            "diff_hunk": "@@ -56,3 +104,4 @@ async def async_func():\n     \"\"\"\n     if variable := 1:\n         pass\n+",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792460816",
            "id": 792460816,
            "line": 107,
            "node_id": "PRRC_kwDOABDGAc4vO_4Q",
            "original_commit_id": "f2f9f907ac870ad19188151c5ee069459c00452a",
            "original_line": 107,
            "original_position": 77,
            "original_start_line": null,
            "path": "tests/run/extra_walrus.py",
            "position": 107,
            "pull_request_review_id": 863295543,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792460816/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T09:43:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792460816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792466872"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792466872"
                }
            },
            "author_association": "MEMBER",
            "body": "Since `TreeVisitor` is a compiled type, it's faster to reuse its methods directly.\r\n```suggestion\r\n    visit_Node = TreeVisitor.visitchildren\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T09:49:46Z",
            "diff_hunk": "@@ -378,6 +383,109 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792466872",
            "id": 792466872,
            "line": 413,
            "node_id": "PRRC_kwDOABDGAc4vPBW4",
            "original_commit_id": "473f8974501b78eaac72b585843f6fc3575961d1",
            "original_line": 413,
            "original_position": 59,
            "original_start_line": 412,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 59,
            "pull_request_review_id": 863313055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792466872/reactions"
            },
            "side": "RIGHT",
            "start_line": 412,
            "start_side": "RIGHT",
            "updated_at": "2022-01-26T09:51:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792466872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792467468"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792467468"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T09:50:28Z",
            "diff_hunk": "@@ -378,6 +383,109 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = set()\n+        for names in self.target_names_dict.values():\n+            self.all_target_names.update(names)\n+\n+    @classmethod\n+    def do_checks(cls, loop_node, scope_is_class):\n+        checker = cls(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            target_name = self.target_names_dict.get(node, None)\n+            if target_name:\n+                self.current_target_names += target_name\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, exclude=(\"iterator\",))\n+\n+            self.current_target_names = current_target_names\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792467468",
            "id": 792467468,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vPBgM",
            "original_commit_id": "473f8974501b78eaac72b585843f6fc3575961d1",
            "original_line": 457,
            "original_position": 103,
            "original_start_line": 455,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 863313055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792467468/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-26T09:51:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792467468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792468107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792468107"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    visit_Node = TreeVisitor.visitchildren\r\n\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T09:51:10Z",
            "diff_hunk": "@@ -378,6 +383,109 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = set()\n+        for names in self.target_names_dict.values():\n+            self.all_target_names.update(names)\n+\n+    @classmethod\n+    def do_checks(cls, loop_node, scope_is_class):\n+        checker = cls(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            target_name = self.target_names_dict.get(node, None)\n+            if target_name:\n+                self.current_target_names += target_name\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, exclude=(\"iterator\",))\n+\n+            self.current_target_names = current_target_names\n+\n+    def visit_Node(self, node):\n+        self.visitchildren(node)\n+\n+    def visit_AssignmentExpressionNode(self, node):\n+        if self.in_iterator:\n+            error(node.pos, \"assignment expression cannot be used in a comprehension iterable expression\")\n+        if self.scope_is_class:\n+            error(node.pos, \"assignment expression within a comprehension cannot be used in a class body\")\n+        if node.target_name in self.current_target_names:\n+            error(node.pos, \"assignment expression cannot rebind comprehension iteration variable '%s'\" %\n+                  node.target_name)\n+        elif node.target_name in self.all_target_names:\n+            error(node.pos, \"comprehension inner loop cannot rebind assignment expression target '%s'\" %\n+                  node.target_name)\n+\n+    def visit_LambdaNode(self, node):\n+        # lambda node `def_node` isn't set up here\n+        # so we need to recurse into it explicitly\n+        self.visit(node.result_expr)\n+\n+    def visit_ComprehensionNode(self, node):\n+        in_nested_generator = self.in_nested_generator\n+        self.in_nested_generator = True\n+        self.visitchildren(node)\n+        self.in_nested_generator = in_nested_generator\n+\n+    def visit_GeneratorExpressionNode(self, node):\n+        in_nested_generator = self.in_nested_generator\n+        self.in_nested_generator = True\n+        # def_node isn't set up yet, so we need to visit the loop directly.\n+        self.visit(node.loop)\n+        self.in_nested_generator = in_nested_generator\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792468107",
            "id": 792468107,
            "line": 503,
            "node_id": "PRRC_kwDOABDGAc4vPBqL",
            "original_commit_id": "473f8974501b78eaac72b585843f6fc3575961d1",
            "original_line": 488,
            "original_position": 134,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 149,
            "pull_request_review_id": 863313055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792468107/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T09:51:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792468107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792488880"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792488880"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't `self.scope_is_class` be reset around this call? And what about the other flags, e.g. `self.in_iterator`?\r\nAlso, shouldn't the arguments to the lambda function override the assignment targets?\r\nMight be worth a test or two.\r\n\r\nFor example, this is rejected by (plain) Python 3.10:\r\n```python\r\n>>> x = [ (y := z) for z in (lambda y: ([y, (a := y + 1)]))(2) ]\r\nSyntaxError: assignment expression cannot be used in a comprehension iterable expression\r\n```\r\nSeems a current limitation that this PR appears to follow.\r\n\r\nOTOH, the following works in Python:\r\n```python\r\n>>> y = 6\r\n>>> x = (lambda y: (y := y + 1) + y)(2) + y\r\n>>> x,y\r\n(12, 6)\r\n>>> class X:\r\n...     x = (lambda y: (y := y + 1) + y)(2) + y\r\n>>> X.x\r\n12\r\n```\r\nAnd I think we'd currently reject it, right?",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T10:15:41Z",
            "diff_hunk": "@@ -378,6 +383,106 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    visit_Node = TreeVisitor.visitchildren\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = set()\n+        for names in self.target_names_dict.values():\n+            self.all_target_names.update(names)\n+\n+    @classmethod\n+    def do_checks(cls, loop_node, scope_is_class):\n+        checker = cls(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            target_name = self.target_names_dict.get(node, None)\n+            if target_name:\n+                self.current_target_names += target_name\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, exclude=(\"iterator\",))\n+\n+            self.current_target_names = current_target_names\n+\n+    def visit_AssignmentExpressionNode(self, node):\n+        if self.in_iterator:\n+            error(node.pos, \"assignment expression cannot be used in a comprehension iterable expression\")\n+        if self.scope_is_class:\n+            error(node.pos, \"assignment expression within a comprehension cannot be used in a class body\")\n+        if node.target_name in self.current_target_names:\n+            error(node.pos, \"assignment expression cannot rebind comprehension iteration variable '%s'\" %\n+                  node.target_name)\n+        elif node.target_name in self.all_target_names:\n+            error(node.pos, \"comprehension inner loop cannot rebind assignment expression target '%s'\" %\n+                  node.target_name)\n+\n+    def visit_LambdaNode(self, node):\n+        # lambda node `def_node` isn't set up here\n+        # so we need to recurse into it explicitly\n+        self.visit(node.result_expr)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792488880",
            "id": 792488880,
            "line": 485,
            "node_id": "PRRC_kwDOABDGAc4vPGuw",
            "original_commit_id": "6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
            "original_line": 469,
            "original_position": 115,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 131,
            "pull_request_review_id": 863342224,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792488880/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T10:17:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792488880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792506837"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792506837"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    def visit_Node(self, node):\r\n        self.visitchildren(node)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T10:38:01Z",
            "diff_hunk": "@@ -378,6 +383,106 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    visit_Node = TreeVisitor.visitchildren",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792506837",
            "id": 792506837,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vPLHV",
            "original_commit_id": "6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
            "original_line": 412,
            "original_position": 58,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 863366078,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792506837/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T10:39:16Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792506837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792507242"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792507242"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    def visit_Node(self, node):\r\n        self.visitchildren(node)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T10:38:34Z",
            "diff_hunk": "@@ -378,6 +383,106 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    visit_Node = TreeVisitor.visitchildren\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = set()\n+        for names in self.target_names_dict.values():\n+            self.all_target_names.update(names)\n+\n+    @classmethod\n+    def do_checks(cls, loop_node, scope_is_class):\n+        checker = cls(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            target_name = self.target_names_dict.get(node, None)\n+            if target_name:\n+                self.current_target_names += target_name\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, exclude=(\"iterator\",))\n+\n+            self.current_target_names = current_target_names\n+\n+    def visit_AssignmentExpressionNode(self, node):\n+        if self.in_iterator:\n+            error(node.pos, \"assignment expression cannot be used in a comprehension iterable expression\")\n+        if self.scope_is_class:\n+            error(node.pos, \"assignment expression within a comprehension cannot be used in a class body\")\n+        if node.target_name in self.current_target_names:\n+            error(node.pos, \"assignment expression cannot rebind comprehension iteration variable '%s'\" %\n+                  node.target_name)\n+        elif node.target_name in self.all_target_names:\n+            error(node.pos, \"comprehension inner loop cannot rebind assignment expression target '%s'\" %\n+                  node.target_name)\n+\n+    def visit_LambdaNode(self, node):\n+        # lambda node `def_node` isn't set up here\n+        # so we need to recurse into it explicitly\n+        self.visit(node.result_expr)\n+\n+    def visit_ComprehensionNode(self, node):\n+        in_nested_generator = self.in_nested_generator\n+        self.in_nested_generator = True\n+        self.visitchildren(node)\n+        self.in_nested_generator = in_nested_generator\n+\n+    def visit_GeneratorExpressionNode(self, node):\n+        in_nested_generator = self.in_nested_generator\n+        self.in_nested_generator = True\n+        # def_node isn't set up yet, so we need to visit the loop directly.\n+        self.visit(node.loop)\n+        self.in_nested_generator = in_nested_generator\n+\n+    visit_Node = TreeVisitor.visitchildren",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792507242",
            "id": 792507242,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vPLNq",
            "original_commit_id": "6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
            "original_line": 484,
            "original_position": 130,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 863366078,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792507242/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T10:39:16Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792507242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792977509"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792977509"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "> ```\r\n>   >>> class X:\r\n>    ...     x = (lambda y: (y := y + 1) + y)(2) + y\r\n>    ```\r\n> And I think we'd currently reject it, right?\r\n\r\nNo - that example works in both Python and Cython.\r\n\r\nThe issue is in assignment expressions in generators expressions in classes. An example of something that's rejected by Cython and accepted by Python is\r\n\r\n```\r\nclass X:\r\n    x = [(lambda y: (y := y + 1) + y)(2) + y for _ in range(2) ]\r\n```\r\n\r\nWhich suggests that `visit_LambdaNode` should reset the flags. The next update will do that and and a few more tests. The tests copied from Python do contain some relevant test-cases too",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T19:28:51Z",
            "diff_hunk": "@@ -378,6 +383,106 @@ def visit_AssertStatNode(self, node):\n         self.visitchildren(node)\n         return node\n \n+class _AssignmentExpressionTargetNameFinder(TreeVisitor):\n+    def __init__(self):\n+        super(_AssignmentExpressionTargetNameFinder, self).__init__()\n+        self.target_names = {}\n+\n+    def find_target_names(self, target):\n+        if target.is_name:\n+            return [target.name]\n+        elif target.is_sequence_constructor:\n+            names = []\n+            for arg in target.args:\n+                names.extend(self.find_target_names(arg))\n+            return names\n+        # other targets are possible, but it isn't necessary to investigate them here\n+        return []\n+\n+    def visit_ForInStatNode(self, node):\n+        self.target_names[node] = tuple(self.find_target_names(node.target))\n+        self.visitchildren(node)\n+\n+    def visit_ComprehensionNode(self, node):\n+        pass  # don't recurse into nested comprehensions\n+\n+    def visit_LambdaNode(self, node):\n+        pass  # don't recurse into nested lambdas/generator expressions\n+\n+    visit_Node = TreeVisitor.visitchildren\n+\n+\n+class _AssignmentExpressionChecker(TreeVisitor):\n+    \"\"\"\n+    Enforces rules on AssignmentExpressions within generator expressions and comprehensions\n+    \"\"\"\n+    def __init__(self, loop_node, scope_is_class):\n+        super(_AssignmentExpressionChecker, self).__init__()\n+\n+        target_name_finder = _AssignmentExpressionTargetNameFinder()\n+        target_name_finder.visit(loop_node)\n+        self.target_names_dict = target_name_finder.target_names\n+\n+        self.in_nested_generator = False\n+        self.scope_is_class = scope_is_class\n+        self.current_target_names = ()\n+        self.all_target_names = set()\n+        for names in self.target_names_dict.values():\n+            self.all_target_names.update(names)\n+\n+    @classmethod\n+    def do_checks(cls, loop_node, scope_is_class):\n+        checker = cls(loop_node, scope_is_class)\n+        checker.visit(loop_node)\n+\n+    def visit_ForInStatNode(self, node):\n+        if self.in_nested_generator:\n+            self.visitchildren(node)  # once nested, don't do anything special\n+        else:\n+            current_target_names = self.current_target_names\n+            target_name = self.target_names_dict.get(node, None)\n+            if target_name:\n+                self.current_target_names += target_name\n+\n+            self.in_iterator = True\n+            self.visit(node.iterator)\n+            self.in_iterator = False\n+            self.visitchildren(node, exclude=(\"iterator\",))\n+\n+            self.current_target_names = current_target_names\n+\n+    def visit_AssignmentExpressionNode(self, node):\n+        if self.in_iterator:\n+            error(node.pos, \"assignment expression cannot be used in a comprehension iterable expression\")\n+        if self.scope_is_class:\n+            error(node.pos, \"assignment expression within a comprehension cannot be used in a class body\")\n+        if node.target_name in self.current_target_names:\n+            error(node.pos, \"assignment expression cannot rebind comprehension iteration variable '%s'\" %\n+                  node.target_name)\n+        elif node.target_name in self.all_target_names:\n+            error(node.pos, \"comprehension inner loop cannot rebind assignment expression target '%s'\" %\n+                  node.target_name)\n+\n+    def visit_LambdaNode(self, node):\n+        # lambda node `def_node` isn't set up here\n+        # so we need to recurse into it explicitly\n+        self.visit(node.result_expr)",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792977509",
            "id": 792977509,
            "in_reply_to_id": 792488880,
            "line": 485,
            "node_id": "PRRC_kwDOABDGAc4vQ-Bl",
            "original_commit_id": "6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
            "original_line": 469,
            "original_position": 115,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 131,
            "pull_request_review_id": 864010991,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792977509/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T19:28:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792977509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792984182"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792984182"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Done",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T19:36:25Z",
            "diff_hunk": "@@ -2012,6 +2034,28 @@ def __init__(self, name, scope_name, outer_scope, parent_scope=None):\n     def declare_pyfunction(self, name, pos, allow_redefine=False):\n         return LocalScope.declare_pyfunction(self, name, pos, allow_redefine, visibility='private')\n \n+    def declare_assignment_expression_target(self, name, type, pos):\n+        if self.is_generator_expression_scope:\n+            entry = self.parent_scope.declare_var(name, type, pos)\n+            entry.in_closure = True\n+            inner_entry = InnerEntry(entry, self)\n+            inner_entry.is_variable = True\n+            self.entries[name] = inner_entry\n+            return inner_entry\n+        return self.declare_var(name, type, pos)\n+\n+    def lookup_assignment_expression_target(self, name):\n+        entry = self.lookup_here(name)\n+        if not entry and self.is_generator_expression_scope:\n+            entry = self.parent_scope.lookup_assignment_expression_target(name)\n+            if entry:\n+                entry.in_closure = True\n+                inner_entry = InnerEntry(entry, self)\n+                inner_entry.is_variable = True\n+                self.entries[name] = inner_entry\n+                return inner_entry\n+        return entry",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792984182",
            "id": 792984182,
            "in_reply_to_id": 791207677,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vQ_p2",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 2057,
            "original_position": 88,
            "original_start_line": 2037,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 864018324,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792984182/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-26T19:41:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792984182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792984695"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792984695"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "It got moved into a subclass instead (as you suggested later)",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T19:37:09Z",
            "diff_hunk": "@@ -1819,6 +1820,8 @@ def create_local_scope(self, env):\n                                 outer_scope=genv,\n                                 parent_scope=env,\n                                 scope_name=self.entry.cname)\n+            if self.is_generator_expression:\n+                lenv.is_generator_expression_scope = True",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792984695",
            "id": 792984695,
            "in_reply_to_id": 791159645,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vQ_x3",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 1824,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 864018324,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792984695/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T19:41:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792984695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r792986664"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/792986664"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I've clarified the comment slightly",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T19:39:51Z",
            "diff_hunk": "@@ -135,14 +135,14 @@ def p_lambdef_nocond(s):\n \n #test: or_test ['if' or_test 'else' test] | lambdef\n \n-def p_test(s):\n+def p_test(s, allow_assignment_expression=True):\n     if s.sy == 'lambda':\n         return p_lambdef(s)\n     pos = s.position()\n-    expr = p_or_test(s)\n+    expr = p_walrus_test(s, allow_assignment_expression)\n     if s.sy == 'if':\n         s.next()\n-        test = p_or_test(s)\n+        test = p_walrus_test(s)  # don't think this should be affected by the general rule",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r792986664",
            "id": 792986664,
            "in_reply_to_id": 791183031,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vRAQo",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 145,
            "original_position": 26,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 864018324,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/792986664/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T19:41:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/792986664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r793123294"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/793123294"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # Assignment expressions are always allowed here\r\n        # even if they wouldn't be allowed in the expression as a whole.\r\n        test = p_walrus_test(s)\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T23:03:30Z",
            "diff_hunk": "@@ -135,14 +135,15 @@ def p_lambdef_nocond(s):\n \n #test: or_test ['if' or_test 'else' test] | lambdef\n \n-def p_test(s):\n+def p_test(s, allow_assignment_expression=True):\n     if s.sy == 'lambda':\n         return p_lambdef(s)\n     pos = s.position()\n-    expr = p_or_test(s)\n+    expr = p_walrus_test(s, allow_assignment_expression)\n     if s.sy == 'if':\n         s.next()\n-        test = p_or_test(s)\n+        test = p_walrus_test(s)  # assignment expressions always allowed here\n+                # even if they wouldn't be allowed in the expression as a whole",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r793123294",
            "id": 793123294,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vRhne",
            "original_commit_id": "5289f82b7d3e0d3d0e7dd825a61be61efeca3178",
            "original_line": 146,
            "original_position": 27,
            "original_start_line": 145,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 864207460,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/793123294/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-01-26T23:03:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/793123294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r793133748"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/793133748"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        = generate_gotref = generate_xgotref = generate_giveref = generate_xgiveref \\\r\n```",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-26T23:24:30Z",
            "diff_hunk": "@@ -366,7 +366,7 @@ def _generate_dummy_refcounting_assignment(self, code, cname, rhs_cname, *ignore\n \n     generate_incref = generate_xincref = generate_decref = generate_xdecref \\\n         = generate_decref_clear = generate_xdecref_clear \\\n-        = generate_gotref = generate_xgotref = generate_giveref = generate_xgiveref \\\n+        = generate_gotref = generate_xgotref = generate_giveref = generate_xgiveref  \\",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r793133748",
            "id": 793133748,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vRkK0",
            "original_commit_id": "220eb77f25cbe9f1f36b9021b12ba0687a7c6613",
            "original_line": 369,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 864221209,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/793133748/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-26T23:24:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/793133748",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3691#discussion_r793157507"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3691"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/793157507"
                }
            },
            "author_association": "MEMBER",
            "body": "I consider this a required refactoring since the addition of these flags really degrades the grammar structure of the parser, but given that the parser already needs a bit of a cleanup, the change would be non-trivial, and this PR isn't a good place to do that, I can accept leaving it as it is now and moving the refactoring to another PR.",
            "commit_id": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "created_at": "2022-01-27T00:22:15Z",
            "diff_hunk": "@@ -1492,9 +1507,9 @@ def p_testlist_star_expr(s):\n \n # testlist_comp: (test|star_expr) ( comp_for | (',' (test|star_expr))* [','] )\n \n-def p_testlist_comp(s):\n+def p_testlist_comp(s, is_expression=False):",
            "html_url": "https://github.com/cython/cython/pull/3691#discussion_r793157507",
            "id": 793157507,
            "in_reply_to_id": 791194520,
            "line": 1512,
            "node_id": "PRRC_kwDOABDGAc4vRp-D",
            "original_commit_id": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "original_line": 1510,
            "original_position": 114,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": 116,
            "pull_request_review_id": 864252270,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3691",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/793157507/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-01-27T00:22:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/793157507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3691/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4d2724e627510c1ba41916fe765a3b67d6ee6b61/comments",
            "commit": {
                "author": {
                    "date": "2020-06-18T21:30:15Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-18T21:33:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Initial attempt at walrus operator/named expressions\n\nWill eventually fix https://github.com/cython/cython/issues/2636\n\nAt the moment I think the parsing is far too lenient and\nthe error cases definitely aren't tested properly.\n\nI also suspect (but don't know) that they don't work in fstrings.\n\nSubmitted mostly to see how much stuff it inadvertently breaks",
                "tree": {
                    "sha": "28717e7d45c65fcc88695606a922801ccff920d4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/28717e7d45c65fcc88695606a922801ccff920d4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4d2724e627510c1ba41916fe765a3b67d6ee6b61",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/4d2724e627510c1ba41916fe765a3b67d6ee6b61",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NGQyNzI0ZTYyNzUxMGMxYmE0MTkxNmZlNzY1YTNiNjdkNmVlNmI2MQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2c7c22f51405299a4e247f78edf52957d30cf71d",
                    "sha": "2c7c22f51405299a4e247f78edf52957d30cf71d",
                    "url": "https://api.github.com/repos/cython/cython/commits/2c7c22f51405299a4e247f78edf52957d30cf71d"
                }
            ],
            "sha": "4d2724e627510c1ba41916fe765a3b67d6ee6b61",
            "url": "https://api.github.com/repos/cython/cython/commits/4d2724e627510c1ba41916fe765a3b67d6ee6b61"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/65a259a555e5b7ba22ce559c2618cb2a254d7054/comments",
            "commit": {
                "author": {
                    "date": "2020-06-19T07:36:00Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-19T07:36:00Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Improved testing (now runs exec tests through Cython)\n\nAlso improved type inference a little",
                "tree": {
                    "sha": "5871b21fa143f7779b50ef990e64f3cb8d9eeecb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5871b21fa143f7779b50ef990e64f3cb8d9eeecb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/65a259a555e5b7ba22ce559c2618cb2a254d7054",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjVhMjU5YTU1NWU1YjdiYTIyY2U1NTljMjYxOGNiMmEyNTRkNzA1NA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4d2724e627510c1ba41916fe765a3b67d6ee6b61",
                    "sha": "4d2724e627510c1ba41916fe765a3b67d6ee6b61",
                    "url": "https://api.github.com/repos/cython/cython/commits/4d2724e627510c1ba41916fe765a3b67d6ee6b61"
                }
            ],
            "sha": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
            "url": "https://api.github.com/repos/cython/cython/commits/65a259a555e5b7ba22ce559c2618cb2a254d7054"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d2ed9903fb3440a12a9a0715c81f6761ca958099/comments",
            "commit": {
                "author": {
                    "date": "2020-06-21T10:09:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-21T10:09:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "A lot more works now\n\nSignificant improvements to testing,\n\nAssignment expression moved to node",
                "tree": {
                    "sha": "a79b84fb3e032f188d35dc8ff581b1a04a61ac58",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a79b84fb3e032f188d35dc8ff581b1a04a61ac58"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d2ed9903fb3440a12a9a0715c81f6761ca958099",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/d2ed9903fb3440a12a9a0715c81f6761ca958099",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZDJlZDk5MDNmYjM0NDBhMTJhOWEwNzE1YzgxZjY3NjFjYTk1ODA5OQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/65a259a555e5b7ba22ce559c2618cb2a254d7054",
                    "sha": "65a259a555e5b7ba22ce559c2618cb2a254d7054",
                    "url": "https://api.github.com/repos/cython/cython/commits/65a259a555e5b7ba22ce559c2618cb2a254d7054"
                }
            ],
            "sha": "d2ed9903fb3440a12a9a0715c81f6761ca958099",
            "url": "https://api.github.com/repos/cython/cython/commits/d2ed9903fb3440a12a9a0715c81f6761ca958099"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/607a635ce9e963c6381a48a6d867911e3651a9fd/comments",
            "commit": {
                "author": {
                    "date": "2020-06-21T12:32:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-21T12:32:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Appears to pass the tests that came with CPython\n\nNeeds a lot of tidying though",
                "tree": {
                    "sha": "5d2210f2614919eddbb1af231d92e9bbc1b9383f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5d2210f2614919eddbb1af231d92e9bbc1b9383f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/607a635ce9e963c6381a48a6d867911e3651a9fd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/607a635ce9e963c6381a48a6d867911e3651a9fd",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjA3YTYzNWNlOWU5NjNjNjM4MWE0OGE2ZDg2NzkxMWUzNjUxYTlmZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d2ed9903fb3440a12a9a0715c81f6761ca958099",
                    "sha": "d2ed9903fb3440a12a9a0715c81f6761ca958099",
                    "url": "https://api.github.com/repos/cython/cython/commits/d2ed9903fb3440a12a9a0715c81f6761ca958099"
                }
            ],
            "sha": "607a635ce9e963c6381a48a6d867911e3651a9fd",
            "url": "https://api.github.com/repos/cython/cython/commits/607a635ce9e963c6381a48a6d867911e3651a9fd"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2/comments",
            "commit": {
                "author": {
                    "date": "2020-06-21T15:20:33Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-21T15:20:33Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "More tidying of assignment expressions\n\nMoved most of the lookup logic into symtab where it fits better",
                "tree": {
                    "sha": "7e87d3900b95ecb1c1ec1d3f86007fbb1caf1032",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7e87d3900b95ecb1c1ec1d3f86007fbb1caf1032"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ODZmMWQyN2RkY2Q3ZTU1ODNkZTdjNGY2MDk4ZDQ1ODdlOGM4OWFhMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/607a635ce9e963c6381a48a6d867911e3651a9fd",
                    "sha": "607a635ce9e963c6381a48a6d867911e3651a9fd",
                    "url": "https://api.github.com/repos/cython/cython/commits/607a635ce9e963c6381a48a6d867911e3651a9fd"
                }
            ],
            "sha": "86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2",
            "url": "https://api.github.com/repos/cython/cython/commits/86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b325c151bb28d7e1f40bf6f0f54742080c61a764/comments",
            "commit": {
                "author": {
                    "date": "2020-06-21T17:44:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-21T17:44:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Worked round missing unittest features for Python 2",
                "tree": {
                    "sha": "de6fd0c58304f7b1a7350dd6ce134dcc21ccd78d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/de6fd0c58304f7b1a7350dd6ce134dcc21ccd78d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b325c151bb28d7e1f40bf6f0f54742080c61a764",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b325c151bb28d7e1f40bf6f0f54742080c61a764",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjMyNWMxNTFiYjI4ZDdlMWY0MGJmNmYwZjU0NzQyMDgwYzYxYTc2NA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2",
                    "sha": "86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2",
                    "url": "https://api.github.com/repos/cython/cython/commits/86f1d27ddcd7e5583de7c4f6098d4587e8c89aa2"
                }
            ],
            "sha": "b325c151bb28d7e1f40bf6f0f54742080c61a764",
            "url": "https://api.github.com/repos/cython/cython/commits/b325c151bb28d7e1f40bf6f0f54742080c61a764"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ca53086f2afe67ada8ba464268ef07a8a389f40a/comments",
            "commit": {
                "author": {
                    "date": "2020-06-21T17:46:09Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-21T17:46:09Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Renamed some parsing parameters",
                "tree": {
                    "sha": "e0c80f36be85bbc27b6a485acc1efade69fdcbb7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e0c80f36be85bbc27b6a485acc1efade69fdcbb7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ca53086f2afe67ada8ba464268ef07a8a389f40a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/ca53086f2afe67ada8ba464268ef07a8a389f40a",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Y2E1MzA4NmYyYWZlNjdhZGE4YmE0NjQyNjhlZjA3YThhMzg5ZjQwYQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b325c151bb28d7e1f40bf6f0f54742080c61a764",
                    "sha": "b325c151bb28d7e1f40bf6f0f54742080c61a764",
                    "url": "https://api.github.com/repos/cython/cython/commits/b325c151bb28d7e1f40bf6f0f54742080c61a764"
                }
            ],
            "sha": "ca53086f2afe67ada8ba464268ef07a8a389f40a",
            "url": "https://api.github.com/repos/cython/cython/commits/ca53086f2afe67ada8ba464268ef07a8a389f40a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fa3b839dfab10ab3d36714253087480af0b902d4/comments",
            "commit": {
                "author": {
                    "date": "2020-06-22T18:09:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-22T18:09:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Use keyword arguments for clarity",
                "tree": {
                    "sha": "54183fa7032073aa9d91f5d223511ea187f888b6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/54183fa7032073aa9d91f5d223511ea187f888b6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fa3b839dfab10ab3d36714253087480af0b902d4",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/fa3b839dfab10ab3d36714253087480af0b902d4",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZmEzYjgzOWRmYWIxMGFiM2QzNjcxNDI1MzA4NzQ4MGFmMGI5MDJkNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ca53086f2afe67ada8ba464268ef07a8a389f40a",
                    "sha": "ca53086f2afe67ada8ba464268ef07a8a389f40a",
                    "url": "https://api.github.com/repos/cython/cython/commits/ca53086f2afe67ada8ba464268ef07a8a389f40a"
                }
            ],
            "sha": "fa3b839dfab10ab3d36714253087480af0b902d4",
            "url": "https://api.github.com/repos/cython/cython/commits/fa3b839dfab10ab3d36714253087480af0b902d4"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/aee84684e30cbd942ad50b036b38ad51c4d63fd4/comments",
            "commit": {
                "author": {
                    "date": "2020-06-22T18:24:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-22T18:24:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed local class definition within __init__",
                "tree": {
                    "sha": "13f4d542a4bef4d70963ba584e0d85603ba9084b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/13f4d542a4bef4d70963ba584e0d85603ba9084b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/aee84684e30cbd942ad50b036b38ad51c4d63fd4",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/aee84684e30cbd942ad50b036b38ad51c4d63fd4",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YWVlODQ2ODRlMzBjYmQ5NDJhZDUwYjAzNmIzOGFkNTFjNGQ2M2ZkNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fa3b839dfab10ab3d36714253087480af0b902d4",
                    "sha": "fa3b839dfab10ab3d36714253087480af0b902d4",
                    "url": "https://api.github.com/repos/cython/cython/commits/fa3b839dfab10ab3d36714253087480af0b902d4"
                }
            ],
            "sha": "aee84684e30cbd942ad50b036b38ad51c4d63fd4",
            "url": "https://api.github.com/repos/cython/cython/commits/aee84684e30cbd942ad50b036b38ad51c4d63fd4"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/be3d64f1f5332f9ad6eb1148ab9e41e8be2b308e/comments",
            "commit": {
                "author": {
                    "date": "2020-08-02T09:10:25Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-08-02T09:10:25Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "fe554ea7fd126b3603387f1525a07d7c40108dbf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fe554ea7fd126b3603387f1525a07d7c40108dbf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/be3d64f1f5332f9ad6eb1148ab9e41e8be2b308e",
                "verification": {
                    "payload": "tree fe554ea7fd126b3603387f1525a07d7c40108dbf\nparent aee84684e30cbd942ad50b036b38ad51c4d63fd4\nparent b270cf36e486fc880e786593a9b374cfbae7e3d1\nauthor da-woods <dw-git@d-woods.co.uk> 1596359425 +0100\ncommitter GitHub <noreply@github.com> 1596359425 +0100\n\nMerge branch 'master' into walrus",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfJoMBCRBK7hj4Ov3rIwAAdHIIAJz2BCDuGdja3FvJ0Wo2/6B2\nPS5w3Ou0L3FHK1xlIdQ9FgGEyCfdBUopkDZmktBhCDthz3Q99I48LjjUbxEEqy7Z\nBuBb42X5T8ba6eQDqALkTVQrizx6B80bPIQaB9atybz+uAI/EpmZw0RkkOyhm63i\n/p/+nJmKLDI76YrymEeu+VVKYoN9S7dlo15msAvWk6qNxi6NmsvT5nxwAIMB3uOM\nJ41cqcg5nu0TAgSMEfpvSUW6d46YcAbGCqG21Zvs8zDLD87YmoDC2x1qUwuRhf0T\nFeupmjvcEyBZhZaHO7beetNn/9PAYOB7MivQ+SmGWzCDkCp9rvIRtCzrx/VG+JM=\n=GfJZ\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/be3d64f1f5332f9ad6eb1148ab9e41e8be2b308e",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YmUzZDY0ZjFmNTMzMmY5YWQ2ZWIxMTQ4YWI5ZTQxZThiZTJiMzA4ZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/aee84684e30cbd942ad50b036b38ad51c4d63fd4",
                    "sha": "aee84684e30cbd942ad50b036b38ad51c4d63fd4",
                    "url": "https://api.github.com/repos/cython/cython/commits/aee84684e30cbd942ad50b036b38ad51c4d63fd4"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/b270cf36e486fc880e786593a9b374cfbae7e3d1",
                    "sha": "b270cf36e486fc880e786593a9b374cfbae7e3d1",
                    "url": "https://api.github.com/repos/cython/cython/commits/b270cf36e486fc880e786593a9b374cfbae7e3d1"
                }
            ],
            "sha": "be3d64f1f5332f9ad6eb1148ab9e41e8be2b308e",
            "url": "https://api.github.com/repos/cython/cython/commits/be3d64f1f5332f9ad6eb1148ab9e41e8be2b308e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e8b6c84357662a26c670271bd44c90581d9847fb/comments",
            "commit": {
                "author": {
                    "date": "2020-08-02T12:38:46Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-08-02T12:38:46Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Whitespace cleanup",
                "tree": {
                    "sha": "2c65a7791e0b430de5950ae759a2d699f9b58846",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2c65a7791e0b430de5950ae759a2d699f9b58846"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e8b6c84357662a26c670271bd44c90581d9847fb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/e8b6c84357662a26c670271bd44c90581d9847fb",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZThiNmM4NDM1NzY2MmEyNmM2NzAyNzFiZDQ0YzkwNTgxZDk4NDdmYg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/be3d64f1f5332f9ad6eb1148ab9e41e8be2b308e",
                    "sha": "be3d64f1f5332f9ad6eb1148ab9e41e8be2b308e",
                    "url": "https://api.github.com/repos/cython/cython/commits/be3d64f1f5332f9ad6eb1148ab9e41e8be2b308e"
                }
            ],
            "sha": "e8b6c84357662a26c670271bd44c90581d9847fb",
            "url": "https://api.github.com/repos/cython/cython/commits/e8b6c84357662a26c670271bd44c90581d9847fb"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ac147a172548e42953290ff6e66c0fdfb82e7482/comments",
            "commit": {
                "author": {
                    "date": "2020-08-28T16:29:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-08-28T16:29:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Code style fix",
                "tree": {
                    "sha": "ccc35b6b7a0e5a9961d0ccb3ea61018f8db394bb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ccc35b6b7a0e5a9961d0ccb3ea61018f8db394bb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ac147a172548e42953290ff6e66c0fdfb82e7482",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/ac147a172548e42953290ff6e66c0fdfb82e7482",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YWMxNDdhMTcyNTQ4ZTQyOTUzMjkwZmY2ZTY2YzBmZGZiODJlNzQ4Mg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e8b6c84357662a26c670271bd44c90581d9847fb",
                    "sha": "e8b6c84357662a26c670271bd44c90581d9847fb",
                    "url": "https://api.github.com/repos/cython/cython/commits/e8b6c84357662a26c670271bd44c90581d9847fb"
                }
            ],
            "sha": "ac147a172548e42953290ff6e66c0fdfb82e7482",
            "url": "https://api.github.com/repos/cython/cython/commits/ac147a172548e42953290ff6e66c0fdfb82e7482"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/713027d955b91ebbcabc2415c3396082dc31bbd2/comments",
            "commit": {
                "author": {
                    "date": "2020-08-29T12:47:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-08-29T12:47:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "2745ed19d09323f1003bed4c43deb8886cd4ebc3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2745ed19d09323f1003bed4c43deb8886cd4ebc3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/713027d955b91ebbcabc2415c3396082dc31bbd2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/713027d955b91ebbcabc2415c3396082dc31bbd2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NzEzMDI3ZDk1NWI5MWViYmNhYmMyNDE1YzMzOTYwODJkYzMxYmJkMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ac147a172548e42953290ff6e66c0fdfb82e7482",
                    "sha": "ac147a172548e42953290ff6e66c0fdfb82e7482",
                    "url": "https://api.github.com/repos/cython/cython/commits/ac147a172548e42953290ff6e66c0fdfb82e7482"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/be43235ba3f4fca32dceda46424b36afb3cb00c9",
                    "sha": "be43235ba3f4fca32dceda46424b36afb3cb00c9",
                    "url": "https://api.github.com/repos/cython/cython/commits/be43235ba3f4fca32dceda46424b36afb3cb00c9"
                }
            ],
            "sha": "713027d955b91ebbcabc2415c3396082dc31bbd2",
            "url": "https://api.github.com/repos/cython/cython/commits/713027d955b91ebbcabc2415c3396082dc31bbd2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b0380d7f36dc6e7d669bad41f54d9b277da9e6b0/comments",
            "commit": {
                "author": {
                    "date": "2020-08-29T12:50:31Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-08-29T12:50:51Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Enabled walrus tests in test_fstring",
                "tree": {
                    "sha": "a77233ba452a975d4036015aafc3e159a618bfe5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a77233ba452a975d4036015aafc3e159a618bfe5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b0380d7f36dc6e7d669bad41f54d9b277da9e6b0",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b0380d7f36dc6e7d669bad41f54d9b277da9e6b0",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjAzODBkN2YzNmRjNmU3ZDY2OWJhZDQxZjU0ZDliMjc3ZGE5ZTZiMA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/713027d955b91ebbcabc2415c3396082dc31bbd2",
                    "sha": "713027d955b91ebbcabc2415c3396082dc31bbd2",
                    "url": "https://api.github.com/repos/cython/cython/commits/713027d955b91ebbcabc2415c3396082dc31bbd2"
                }
            ],
            "sha": "b0380d7f36dc6e7d669bad41f54d9b277da9e6b0",
            "url": "https://api.github.com/repos/cython/cython/commits/b0380d7f36dc6e7d669bad41f54d9b277da9e6b0"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/08fd8facba21515bb7b826305672a4deb0e79801/comments",
            "commit": {
                "author": {
                    "date": "2020-10-04T19:38:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-10-04T19:38:55Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "2b561945e3679b36b3fd5ada4bf9e034c2a1ae09",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2b561945e3679b36b3fd5ada4bf9e034c2a1ae09"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/08fd8facba21515bb7b826305672a4deb0e79801",
                "verification": {
                    "payload": "tree 2b561945e3679b36b3fd5ada4bf9e034c2a1ae09\nparent b0380d7f36dc6e7d669bad41f54d9b277da9e6b0\nparent 883f8f5bd6e2dc095529ad5a33c766f73a9ff413\nauthor da-woods <dw-git@d-woods.co.uk> 1601840335 +0100\ncommitter GitHub <noreply@github.com> 1601840335 +0100\n\nMerge branch 'master' into walrus",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfeiTPCRBK7hj4Ov3rIwAAdHIIAI11scOsbxvDOa8JLAWvDGLO\nn7cZw6Mn6mOIz2VyAIAg46AhJD2maUrES6oZnVWdZIyw8IVO8yhFaC4YSbJF0VfX\nGhfpCowxA79DmxtIML40ujITLtI57lYHzjq1vpDInkdxGonZ0TzOowDDIokhDnkl\nS/fD6DBHbrgQQZUJky8HFfX7GhIlZnsP4qs1b0Kqqo9XFqucrG5XDzCxTA3Ic1RZ\nCkyqrJSJajQc40HDruydHDPc9n5MrnOUYr28lfrEmZ4HH6QTEuFdBqZZrXRdwhDP\n/HvDomSudTKdzpgKbCxWHuKUzdy3MSu+5MYVjSGZon9D2Ct5a7kzcFqqmSHPoo8=\n=mypb\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/08fd8facba21515bb7b826305672a4deb0e79801",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MDhmZDhmYWNiYTIxNTE1YmI3YjgyNjMwNTY3MmE0ZGViMGU3OTgwMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b0380d7f36dc6e7d669bad41f54d9b277da9e6b0",
                    "sha": "b0380d7f36dc6e7d669bad41f54d9b277da9e6b0",
                    "url": "https://api.github.com/repos/cython/cython/commits/b0380d7f36dc6e7d669bad41f54d9b277da9e6b0"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/883f8f5bd6e2dc095529ad5a33c766f73a9ff413",
                    "sha": "883f8f5bd6e2dc095529ad5a33c766f73a9ff413",
                    "url": "https://api.github.com/repos/cython/cython/commits/883f8f5bd6e2dc095529ad5a33c766f73a9ff413"
                }
            ],
            "sha": "08fd8facba21515bb7b826305672a4deb0e79801",
            "url": "https://api.github.com/repos/cython/cython/commits/08fd8facba21515bb7b826305672a4deb0e79801"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9/comments",
            "commit": {
                "author": {
                    "date": "2020-10-26T19:41:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-10-26T19:41:54Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "6f40a13232a87b842e985c20c84526cdf3662967",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6f40a13232a87b842e985c20c84526cdf3662967"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9",
                "verification": {
                    "payload": "tree 6f40a13232a87b842e985c20c84526cdf3662967\nparent 08fd8facba21515bb7b826305672a4deb0e79801\nparent 00e34553343606b7452a515a0ff8b4b7df311423\nauthor da-woods <dw-git@d-woods.co.uk> 1603741314 +0000\ncommitter GitHub <noreply@github.com> 1603741314 +0000\n\nMerge branch 'master' into walrus",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJflyaCCRBK7hj4Ov3rIwAAdHIIAGwgHszrycfq/3/5bFvjGOg3\ncUuB77B0iqGihNK2U7P/xUutDNb5eRlBzBpP8KQmj/QZvqj8AgQHx1A3J0sYRUuo\nUvEDDc+HQq0mn/pYN/+rIE0xrGB2S7wUP5ipD6O9xBc+HYsVaKn1uHitsjwAoQFD\nmSkcYy8b4E2cO0PD5ruEBuvBOe+mVjR8vpzvEdHq6GmuNwK/w9rioGJzn5b7B77b\nO0UwfqJVQpMW4CnDMKVQYqQXkQ86OE1W2ffb2JK/ise/2n792rnsPivUF8H6Lwpq\n1S2JAKzrHzQ3oOy8y1s2QPjW3s194vT8dRu7gPNEC/6vVT+23Fh73Dg7a1R1bjs=\n=UDYu\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OGZjNDIwNDE5NDEwZTRlYjlkNzVjYjJmZTJlNmFhYTcwZDkyNmZiOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/08fd8facba21515bb7b826305672a4deb0e79801",
                    "sha": "08fd8facba21515bb7b826305672a4deb0e79801",
                    "url": "https://api.github.com/repos/cython/cython/commits/08fd8facba21515bb7b826305672a4deb0e79801"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/00e34553343606b7452a515a0ff8b4b7df311423",
                    "sha": "00e34553343606b7452a515a0ff8b4b7df311423",
                    "url": "https://api.github.com/repos/cython/cython/commits/00e34553343606b7452a515a0ff8b4b7df311423"
                }
            ],
            "sha": "8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9",
            "url": "https://api.github.com/repos/cython/cython/commits/8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/78373f36d1283f049a5bcd0e956d8c4c3f036629/comments",
            "commit": {
                "author": {
                    "date": "2021-05-04T18:41:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-04T18:41:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "cb91061f2c28837c05a00e0374b9f93e48983d42",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cb91061f2c28837c05a00e0374b9f93e48983d42"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/78373f36d1283f049a5bcd0e956d8c4c3f036629",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/78373f36d1283f049a5bcd0e956d8c4c3f036629",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NzgzNzNmMzZkMTI4M2YwNDlhNWJjZDBlOTU2ZDhjNGMzZjAzNjYyOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9",
                    "sha": "8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9",
                    "url": "https://api.github.com/repos/cython/cython/commits/8fc420419410e4eb9d75cb2fe2e6aaa70d926fb9"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/0e80efb82480b777057770ce2006a6b46ec46028",
                    "sha": "0e80efb82480b777057770ce2006a6b46ec46028",
                    "url": "https://api.github.com/repos/cython/cython/commits/0e80efb82480b777057770ce2006a6b46ec46028"
                }
            ],
            "sha": "78373f36d1283f049a5bcd0e956d8c4c3f036629",
            "url": "https://api.github.com/repos/cython/cython/commits/78373f36d1283f049a5bcd0e956d8c4c3f036629"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ccc2793755ecca6e2cb0942eaed1f446a4c1443a/comments",
            "commit": {
                "author": {
                    "date": "2021-05-04T18:42:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-04T18:42:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Enabled tests",
                "tree": {
                    "sha": "e1d86ba6da6f5b5f22079ae48ee5249fda232909",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e1d86ba6da6f5b5f22079ae48ee5249fda232909"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Y2NjMjc5Mzc1NWVjY2E2ZTJjYjA5NDJlYWVkMWY0NDZhNGMxNDQzYQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/78373f36d1283f049a5bcd0e956d8c4c3f036629",
                    "sha": "78373f36d1283f049a5bcd0e956d8c4c3f036629",
                    "url": "https://api.github.com/repos/cython/cython/commits/78373f36d1283f049a5bcd0e956d8c4c3f036629"
                }
            ],
            "sha": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
            "url": "https://api.github.com/repos/cython/cython/commits/ccc2793755ecca6e2cb0942eaed1f446a4c1443a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fa57153be8b3cfa517dc2055ff7ebc27ae76d3d7/comments",
            "commit": {
                "author": {
                    "date": "2021-05-06T16:32:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-06T16:32:54Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "408dc92c6abc35749d53fbfeedd800cb659682fb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/408dc92c6abc35749d53fbfeedd800cb659682fb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fa57153be8b3cfa517dc2055ff7ebc27ae76d3d7",
                "verification": {
                    "payload": "tree 408dc92c6abc35749d53fbfeedd800cb659682fb\nparent ccc2793755ecca6e2cb0942eaed1f446a4c1443a\nauthor da-woods <dw-git@d-woods.co.uk> 1620318774 +0100\ncommitter GitHub <noreply@github.com> 1620318774 +0100\n\nApply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglBo2CRBK7hj4Ov3rIwAADNIIAEXTdY1F6hQLjCbeCLopDYUm\n9HmElU52u3mpNFhIdTigiyNxzwf5C/voxRDENsw5rsfEL29piuY3ofOLv5lFRHdj\nRRO4yHJpfXTQz6Yzt8QNYIhpVAQPwMuwohZVG6ayegBG4xodQU/7IAyLFlO775sw\n+zRgxmb4GwtOlZw6fLnLpWnBTMXPdj4tV+gZYj1cKUCSAVe8WDQnxcw5vDrTg8i1\n1NpyFc/23qg/cFX1CdGYdUql3qFvNEhhmi+LNqh0zl9bTpqP9OBhVqIUFZULWetl\nfq9QEKduFpM/BpH1+/s7qf7wmEOr7ysxrvj8EaR/f66f+nN3auGRoZBKvOBmEK4=\n=32eb\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/fa57153be8b3cfa517dc2055ff7ebc27ae76d3d7",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZmE1NzE1M2JlOGIzY2ZhNTE3ZGMyMDU1ZmY3ZWJjMjdhZTc2ZDNkNw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
                    "sha": "ccc2793755ecca6e2cb0942eaed1f446a4c1443a",
                    "url": "https://api.github.com/repos/cython/cython/commits/ccc2793755ecca6e2cb0942eaed1f446a4c1443a"
                }
            ],
            "sha": "fa57153be8b3cfa517dc2055ff7ebc27ae76d3d7",
            "url": "https://api.github.com/repos/cython/cython/commits/fa57153be8b3cfa517dc2055ff7ebc27ae76d3d7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2cee16ab8d246531dd5995d265462fb781a5258f/comments",
            "commit": {
                "author": {
                    "date": "2021-05-06T16:58:27Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-06T16:58:27Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixes following changes from review",
                "tree": {
                    "sha": "49e25c6b83304b46b2e2168ec0922404a29c933d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/49e25c6b83304b46b2e2168ec0922404a29c933d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2cee16ab8d246531dd5995d265462fb781a5258f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/2cee16ab8d246531dd5995d265462fb781a5258f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MmNlZTE2YWI4ZDI0NjUzMWRkNTk5NWQyNjU0NjJmYjc4MWE1MjU4Zg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fa57153be8b3cfa517dc2055ff7ebc27ae76d3d7",
                    "sha": "fa57153be8b3cfa517dc2055ff7ebc27ae76d3d7",
                    "url": "https://api.github.com/repos/cython/cython/commits/fa57153be8b3cfa517dc2055ff7ebc27ae76d3d7"
                }
            ],
            "sha": "2cee16ab8d246531dd5995d265462fb781a5258f",
            "url": "https://api.github.com/repos/cython/cython/commits/2cee16ab8d246531dd5995d265462fb781a5258f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/273d9684c93a1ac9edd26ffda52e926cf72e736b/comments",
            "commit": {
                "author": {
                    "date": "2021-05-07T06:20:34Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-07T06:20:34Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Use CloneNode rather than UtilNodes features",
                "tree": {
                    "sha": "f5565d8453d75513e36e7a620c0e8e246be18b56",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f5565d8453d75513e36e7a620c0e8e246be18b56"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/273d9684c93a1ac9edd26ffda52e926cf72e736b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/273d9684c93a1ac9edd26ffda52e926cf72e736b",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MjczZDk2ODRjOTNhMWFjOWVkZDI2ZmZkYTUyZTkyNmNmNzJlNzM2Yg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2cee16ab8d246531dd5995d265462fb781a5258f",
                    "sha": "2cee16ab8d246531dd5995d265462fb781a5258f",
                    "url": "https://api.github.com/repos/cython/cython/commits/2cee16ab8d246531dd5995d265462fb781a5258f"
                }
            ],
            "sha": "273d9684c93a1ac9edd26ffda52e926cf72e736b",
            "url": "https://api.github.com/repos/cython/cython/commits/273d9684c93a1ac9edd26ffda52e926cf72e736b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/dbdc9aed26503c07b906def16922a8c0ebab2505/comments",
            "commit": {
                "author": {
                    "date": "2021-05-07T17:54:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-07T17:54:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed PyPy plus extra coercion optimization",
                "tree": {
                    "sha": "f2172b605f43a249034f519118ddb4be0d09d6c1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f2172b605f43a249034f519118ddb4be0d09d6c1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/dbdc9aed26503c07b906def16922a8c0ebab2505",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/dbdc9aed26503c07b906def16922a8c0ebab2505",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZGJkYzlhZWQyNjUwM2MwN2I5MDZkZWYxNjkyMmE4YzBlYmFiMjUwNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/273d9684c93a1ac9edd26ffda52e926cf72e736b",
                    "sha": "273d9684c93a1ac9edd26ffda52e926cf72e736b",
                    "url": "https://api.github.com/repos/cython/cython/commits/273d9684c93a1ac9edd26ffda52e926cf72e736b"
                }
            ],
            "sha": "dbdc9aed26503c07b906def16922a8c0ebab2505",
            "url": "https://api.github.com/repos/cython/cython/commits/dbdc9aed26503c07b906def16922a8c0ebab2505"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/df56166aba11c1a802ce583f2b504f75f0b9bdaa/comments",
            "commit": {
                "author": {
                    "date": "2021-05-07T17:59:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-07T18:01:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Changes from review",
                "tree": {
                    "sha": "a463893e29ed0283c3aa57435d0f588c75965fbe",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a463893e29ed0283c3aa57435d0f588c75965fbe"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/df56166aba11c1a802ce583f2b504f75f0b9bdaa",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/df56166aba11c1a802ce583f2b504f75f0b9bdaa",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZGY1NjE2NmFiYTExYzFhODAyY2U1ODNmMmI1MDRmNzVmMGI5YmRhYQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/dbdc9aed26503c07b906def16922a8c0ebab2505",
                    "sha": "dbdc9aed26503c07b906def16922a8c0ebab2505",
                    "url": "https://api.github.com/repos/cython/cython/commits/dbdc9aed26503c07b906def16922a8c0ebab2505"
                }
            ],
            "sha": "df56166aba11c1a802ce583f2b504f75f0b9bdaa",
            "url": "https://api.github.com/repos/cython/cython/commits/df56166aba11c1a802ce583f2b504f75f0b9bdaa"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/28f8ecd91d727bf569e87fcefd77eb6020781aba/comments",
            "commit": {
                "author": {
                    "date": "2021-05-08T08:52:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-08T08:52:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed AssignmentExpressionRhsNode and used CloneNode\n\nAlso added some extra tests",
                "tree": {
                    "sha": "f9338acf5e8c6c6c1594b9f1fa896a97b1ec5994",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f9338acf5e8c6c6c1594b9f1fa896a97b1ec5994"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/28f8ecd91d727bf569e87fcefd77eb6020781aba",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/28f8ecd91d727bf569e87fcefd77eb6020781aba",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MjhmOGVjZDkxZDcyN2JmNTY5ZTg3ZmNlZmQ3N2ViNjAyMDc4MWFiYQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/df56166aba11c1a802ce583f2b504f75f0b9bdaa",
                    "sha": "df56166aba11c1a802ce583f2b504f75f0b9bdaa",
                    "url": "https://api.github.com/repos/cython/cython/commits/df56166aba11c1a802ce583f2b504f75f0b9bdaa"
                }
            ],
            "sha": "28f8ecd91d727bf569e87fcefd77eb6020781aba",
            "url": "https://api.github.com/repos/cython/cython/commits/28f8ecd91d727bf569e87fcefd77eb6020781aba"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/40cee7cb42561127b9a70a89069bcec2a7996736/comments",
            "commit": {
                "author": {
                    "date": "2021-05-08T09:06:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-08T09:06:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Pure test should be Python3.8+",
                "tree": {
                    "sha": "7959e630bc29420a6ada70160b909b625d38f448",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7959e630bc29420a6ada70160b909b625d38f448"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/40cee7cb42561127b9a70a89069bcec2a7996736",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/40cee7cb42561127b9a70a89069bcec2a7996736",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NDBjZWU3Y2I0MjU2MTEyN2I5YTcwYTg5MDY5YmNlYzJhNzk5NjczNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/28f8ecd91d727bf569e87fcefd77eb6020781aba",
                    "sha": "28f8ecd91d727bf569e87fcefd77eb6020781aba",
                    "url": "https://api.github.com/repos/cython/cython/commits/28f8ecd91d727bf569e87fcefd77eb6020781aba"
                }
            ],
            "sha": "40cee7cb42561127b9a70a89069bcec2a7996736",
            "url": "https://api.github.com/repos/cython/cython/commits/40cee7cb42561127b9a70a89069bcec2a7996736"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2f7db215a74557238bf7faf8d731cc1e496d5284/comments",
            "commit": {
                "author": {
                    "date": "2021-06-30T16:40:41Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-30T16:40:41Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "1296fb1c58e930b16ba18651dac17bace595f889",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1296fb1c58e930b16ba18651dac17bace595f889"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2f7db215a74557238bf7faf8d731cc1e496d5284",
                "verification": {
                    "payload": "tree 1296fb1c58e930b16ba18651dac17bace595f889\nparent 40cee7cb42561127b9a70a89069bcec2a7996736\nparent f42b6eeb78e8ffd6c1a01383958381715a5a244a\nauthor da-woods <dw-git@d-woods.co.uk> 1625071241 +0100\ncommitter GitHub <noreply@github.com> 1625071241 +0100\n\nMerge branch 'master' into walrus",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg3J6JCRBK7hj4Ov3rIwAAE+0IACT1mw7cMDpD74WKEPybP5Lf\n+0tuaNxMnOgL0lOVI/XRn3JWotNAUSWngPtdruiRFLeVjqJJMHwdtWRs3XoOcLiI\nR2P4AaCB3WMSjDolbJQ8wscXsAGJEEIo0A/op0fW5U7+vJYo6adDnJVPsFXl3Ptr\nLtoxSWVLEXwcxesOj6uFieN8QORFHEu/EMq8CL1NlY7kBZRaeA4Nb6nI8+kQocIR\nnesMLfwLrv1L8vV/NlUNG1TCrQm1uictVAO7jKCyjxSlqcokyqvBLyS0/WmqTQWN\np8DTs+jIM3+6fLNLE6b2lV1Jo22BvR7Cl3u/xU4ybQVrS4uUC2zTkQ2GS5iGbpE=\n=zyss\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/2f7db215a74557238bf7faf8d731cc1e496d5284",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MmY3ZGIyMTVhNzQ1NTcyMzhiZjdmYWY4ZDczMWNjMWU0OTZkNTI4NA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/40cee7cb42561127b9a70a89069bcec2a7996736",
                    "sha": "40cee7cb42561127b9a70a89069bcec2a7996736",
                    "url": "https://api.github.com/repos/cython/cython/commits/40cee7cb42561127b9a70a89069bcec2a7996736"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/f42b6eeb78e8ffd6c1a01383958381715a5a244a",
                    "sha": "f42b6eeb78e8ffd6c1a01383958381715a5a244a",
                    "url": "https://api.github.com/repos/cython/cython/commits/f42b6eeb78e8ffd6c1a01383958381715a5a244a"
                }
            ],
            "sha": "2f7db215a74557238bf7faf8d731cc1e496d5284",
            "url": "https://api.github.com/repos/cython/cython/commits/2f7db215a74557238bf7faf8d731cc1e496d5284"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/59709698317f51f316179063380451f6be490de7/comments",
            "commit": {
                "author": {
                    "date": "2021-06-30T17:42:16Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-30T17:42:16Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix code style",
                "tree": {
                    "sha": "05440b70f94f027cc8977944dc6639a19ef637b0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/05440b70f94f027cc8977944dc6639a19ef637b0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/59709698317f51f316179063380451f6be490de7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/59709698317f51f316179063380451f6be490de7",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NTk3MDk2OTgzMTdmNTFmMzE2MTc5MDYzMzgwNDUxZjZiZTQ5MGRlNw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2f7db215a74557238bf7faf8d731cc1e496d5284",
                    "sha": "2f7db215a74557238bf7faf8d731cc1e496d5284",
                    "url": "https://api.github.com/repos/cython/cython/commits/2f7db215a74557238bf7faf8d731cc1e496d5284"
                }
            ],
            "sha": "59709698317f51f316179063380451f6be490de7",
            "url": "https://api.github.com/repos/cython/cython/commits/59709698317f51f316179063380451f6be490de7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b68b21d97dadc3061cab433b491719973fa56f31/comments",
            "commit": {
                "author": {
                    "date": "2021-07-11T14:14:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-11T14:14:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed breakage when used in async functions",
                "tree": {
                    "sha": "1e2ff3ed70c1ec237c5cd502f43301b94ca39a56",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1e2ff3ed70c1ec237c5cd502f43301b94ca39a56"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b68b21d97dadc3061cab433b491719973fa56f31",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b68b21d97dadc3061cab433b491719973fa56f31",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjY4YjIxZDk3ZGFkYzMwNjFjYWI0MzNiNDkxNzE5OTczZmE1NmYzMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/59709698317f51f316179063380451f6be490de7",
                    "sha": "59709698317f51f316179063380451f6be490de7",
                    "url": "https://api.github.com/repos/cython/cython/commits/59709698317f51f316179063380451f6be490de7"
                }
            ],
            "sha": "b68b21d97dadc3061cab433b491719973fa56f31",
            "url": "https://api.github.com/repos/cython/cython/commits/b68b21d97dadc3061cab433b491719973fa56f31"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a118db8e5fa2682e440abb650a154c388a80ec05/comments",
            "commit": {
                "author": {
                    "date": "2021-07-17T11:51:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-17T11:51:26Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "aa944c105af451983b775b4e44c8196dd8db57c4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/aa944c105af451983b775b4e44c8196dd8db57c4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a118db8e5fa2682e440abb650a154c388a80ec05",
                "verification": {
                    "payload": "tree aa944c105af451983b775b4e44c8196dd8db57c4\nparent b68b21d97dadc3061cab433b491719973fa56f31\nparent 5bf5aa63d6b6742144071a2af896067c21b3752a\nauthor da-woods <dw-git@d-woods.co.uk> 1626522686 +0100\ncommitter GitHub <noreply@github.com> 1626522686 +0100\n\nMerge branch 'master' into walrus",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg8sQ+CRBK7hj4Ov3rIwAAAkMIAGByZvgyZp2QAgKFH2PibFhT\n8aw1cFZ918oDG2Mf+nMb12UT5k5aE+xAkyfmkfdT84q5JxXAnyiTXf5eu1Do0134\nyE5zQdWz3KbiB0vkKMIUvCBoE9pkSpX2GaDkFi3QMxJ/y7B+RD0OTRo5uGO3krFX\nhUcybjGQ0y2KTsp9sTSrhfIKKIraTBMrzd2zUjyEPqde1YJpWhMf13yoCr5eg05p\nxXXFukk53BTckG+AKgWbpp8kwMnumCm/dTKEfjtx29aX4dz+iR4Pmov0cOf3fNTz\n1DkHmD+iUqZsEh5dstDHl/MEY3u1C/MX54bvQYKFwrzCZzpPbOwsjpONS8QlnYU=\n=jykR\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/a118db8e5fa2682e440abb650a154c388a80ec05",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTExOGRiOGU1ZmEyNjgyZTQ0MGFiYjY1MGExNTRjMzg4YTgwZWMwNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b68b21d97dadc3061cab433b491719973fa56f31",
                    "sha": "b68b21d97dadc3061cab433b491719973fa56f31",
                    "url": "https://api.github.com/repos/cython/cython/commits/b68b21d97dadc3061cab433b491719973fa56f31"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/5bf5aa63d6b6742144071a2af896067c21b3752a",
                    "sha": "5bf5aa63d6b6742144071a2af896067c21b3752a",
                    "url": "https://api.github.com/repos/cython/cython/commits/5bf5aa63d6b6742144071a2af896067c21b3752a"
                }
            ],
            "sha": "a118db8e5fa2682e440abb650a154c388a80ec05",
            "url": "https://api.github.com/repos/cython/cython/commits/a118db8e5fa2682e440abb650a154c388a80ec05"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/15e53a0574659025d1f174b762affa09eff9bd2a/comments",
            "commit": {
                "author": {
                    "date": "2021-07-20T06:59:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-20T06:59:03Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "c20182336c5fd5e35874c13967472d2b182785f6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c20182336c5fd5e35874c13967472d2b182785f6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/15e53a0574659025d1f174b762affa09eff9bd2a",
                "verification": {
                    "payload": "tree c20182336c5fd5e35874c13967472d2b182785f6\nparent a118db8e5fa2682e440abb650a154c388a80ec05\nparent 12d17bb0e68e238fbd6c27189025782fd26e8d47\nauthor da-woods <dw-git@d-woods.co.uk> 1626764343 +0100\ncommitter GitHub <noreply@github.com> 1626764343 +0100\n\nMerge branch 'master' into walrus",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg9nQ3CRBK7hj4Ov3rIwAADpQIAINFLmgJLh5+Cx/6AHQczygK\n1gwg2Fkyu3QelApj6M64GiCntBd1KEqSaMCHRi1212nexIzWqN6bLsE2xqzxNKzl\nC4qTEw2rAyJOTdJw0RiYVZs5T3MqEUWd0WcVTfQow0qpf0dAzCKPgjMxFhjvkkR0\nynEYastRXY0SQBIxkQ71iOA8P/jIOGsL7HR9m8gA6fzdaYoUMfLho0JTpjj2C/0H\nqzIwlUdFDSedLDTUNh2rI7rKz5mN/pp1O+CDaqETKO2I+khEe7GYCFZm00g/whEF\nIAkz+qp+WDuNyjz0vB5ErAwZZms5bSGikExcLQixSwAPlh4a18hQBLsDzvFYsp4=\n=1Iho\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/15e53a0574659025d1f174b762affa09eff9bd2a",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MTVlNTNhMDU3NDY1OTAyNWQxZjE3NGI3NjJhZmZhMDllZmY5YmQyYQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a118db8e5fa2682e440abb650a154c388a80ec05",
                    "sha": "a118db8e5fa2682e440abb650a154c388a80ec05",
                    "url": "https://api.github.com/repos/cython/cython/commits/a118db8e5fa2682e440abb650a154c388a80ec05"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/12d17bb0e68e238fbd6c27189025782fd26e8d47",
                    "sha": "12d17bb0e68e238fbd6c27189025782fd26e8d47",
                    "url": "https://api.github.com/repos/cython/cython/commits/12d17bb0e68e238fbd6c27189025782fd26e8d47"
                }
            ],
            "sha": "15e53a0574659025d1f174b762affa09eff9bd2a",
            "url": "https://api.github.com/repos/cython/cython/commits/15e53a0574659025d1f174b762affa09eff9bd2a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6363b4a79e5f94872c03493ef26dfcc8304aacfd/comments",
            "commit": {
                "author": {
                    "date": "2021-10-21T16:50:27Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-10-21T16:50:27Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Minor code cleanup.",
                "tree": {
                    "sha": "1a289241a9fc63785fd088778fbe0268481d91d1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1a289241a9fc63785fd088778fbe0268481d91d1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6363b4a79e5f94872c03493ef26dfcc8304aacfd",
                "verification": {
                    "payload": "tree 1a289241a9fc63785fd088778fbe0268481d91d1\nparent 15e53a0574659025d1f174b762affa09eff9bd2a\nauthor scoder <stefan_ml@behnel.de> 1634835027 +0200\ncommitter GitHub <noreply@github.com> 1634835027 +0200\n\nMinor code cleanup.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhcZpTCRBK7hj4Ov3rIwAANmMIAHQEowYUyrxP91H99WE3FMLO\nWS7mAzvVaY8Nb0pR23WEUowhIHG8c7COvbDDGpiv3QTVNn3Td3Qz7H8hJWgI59pk\n3VlsCnUNp8G/UD8I8MJ7lKuS4OHWjf+G2Bdma63MOYT0rX/ka94xny3PdHBxE+O+\nGWV3F1CkOWm2NFwWwjGeWnWgPwk4oQY/HcfBPYnvmFLg4me5uLsvx6QeUlr8eDsX\nNoHX7WPsfGIIdzFhfpRBxN61RKD8Ce1EvnmVnGMnJCrTf0kZFf+cSTfFZ/kb27l5\nyOM07eAVqzkZFIRIzqzf+dKZzgVzmZN+6pTwJa+MGRdWWCC7wD417ykBrSHunEQ=\n=+uG6\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/6363b4a79e5f94872c03493ef26dfcc8304aacfd",
            "node_id": "C_kwDOAhr4b9oAKDYzNjNiNGE3OWU1Zjk0ODcyYzAzNDkzZWYyNmRmY2M4MzA0YWFjZmQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/15e53a0574659025d1f174b762affa09eff9bd2a",
                    "sha": "15e53a0574659025d1f174b762affa09eff9bd2a",
                    "url": "https://api.github.com/repos/cython/cython/commits/15e53a0574659025d1f174b762affa09eff9bd2a"
                }
            ],
            "sha": "6363b4a79e5f94872c03493ef26dfcc8304aacfd",
            "url": "https://api.github.com/repos/cython/cython/commits/6363b4a79e5f94872c03493ef26dfcc8304aacfd"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/20b180cf81f66ea8ac6234d2050e6ff8dfb3b919/comments",
            "commit": {
                "author": {
                    "date": "2021-10-21T17:21:09Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-10-21T17:21:09Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "95d64ce1a95a3a9a1eba6bf08395edbed8999722",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/95d64ce1a95a3a9a1eba6bf08395edbed8999722"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/20b180cf81f66ea8ac6234d2050e6ff8dfb3b919",
                "verification": {
                    "payload": "tree 95d64ce1a95a3a9a1eba6bf08395edbed8999722\nparent 6363b4a79e5f94872c03493ef26dfcc8304aacfd\nparent c8c9a12e3c1edb39ed6ee2c62f7d1c71165045ec\nauthor da-woods <dw-git@d-woods.co.uk> 1634836869 +0100\ncommitter GitHub <noreply@github.com> 1634836869 +0100\n\nMerge branch 'master' into walrus",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhcaGFCRBK7hj4Ov3rIwAAoNQIAFWIVqrZyAfV2bUoFswx8KqR\npuarGfkxUYZJDPqUmvYOCxZy4OnlixpJg5EnBtGyOuqubFQmQWh3xnqYbkcl4NpA\npvZ6mE50Ah473gU78Qs36fiSUBRMsxDNpaMWC2wcqPdvO8w8M8zYAOSbD4DIbFZz\ns+Umj+HiISufSkDEETpXkUAyAzH87CcSDxAxqXyXDK4m4qvhT+e+Q3KGlm6FTDnF\n5GK1rjcaLJOvt9FjgFTzU3pgg6kxkSM+2fnWgmskppQl8ef5Qls7cI7QEokPXQNr\nrZWa7HeYRBLVBlL+xe9mVD7ZemXmH+WQGqQnCItmgO+gymUXg7SdoXrqopkv4Js=\n=0YIU\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/20b180cf81f66ea8ac6234d2050e6ff8dfb3b919",
            "node_id": "C_kwDOAhr4b9oAKDIwYjE4MGNmODFmNjZlYThhYzYyMzRkMjA1MGU2ZmY4ZGZiM2I5MTk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6363b4a79e5f94872c03493ef26dfcc8304aacfd",
                    "sha": "6363b4a79e5f94872c03493ef26dfcc8304aacfd",
                    "url": "https://api.github.com/repos/cython/cython/commits/6363b4a79e5f94872c03493ef26dfcc8304aacfd"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/c8c9a12e3c1edb39ed6ee2c62f7d1c71165045ec",
                    "sha": "c8c9a12e3c1edb39ed6ee2c62f7d1c71165045ec",
                    "url": "https://api.github.com/repos/cython/cython/commits/c8c9a12e3c1edb39ed6ee2c62f7d1c71165045ec"
                }
            ],
            "sha": "20b180cf81f66ea8ac6234d2050e6ff8dfb3b919",
            "url": "https://api.github.com/repos/cython/cython/commits/20b180cf81f66ea8ac6234d2050e6ff8dfb3b919"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/65e59f7e9c2afbcd228fe3123d7b1d045dbb5d59/comments",
            "commit": {
                "author": {
                    "date": "2021-10-21T19:52:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-10-21T19:52:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Use ProxyNode in CloneNode\n\ninstead of a complicated system of properties",
                "tree": {
                    "sha": "d1495d59eff9551e0d1f6b375534b97315e355c7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d1495d59eff9551e0d1f6b375534b97315e355c7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/65e59f7e9c2afbcd228fe3123d7b1d045dbb5d59",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/65e59f7e9c2afbcd228fe3123d7b1d045dbb5d59",
            "node_id": "C_kwDOAhr4b9oAKDY1ZTU5ZjdlOWMyYWZiY2QyMjhmZTMxMjNkN2IxZDA0NWRiYjVkNTk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/20b180cf81f66ea8ac6234d2050e6ff8dfb3b919",
                    "sha": "20b180cf81f66ea8ac6234d2050e6ff8dfb3b919",
                    "url": "https://api.github.com/repos/cython/cython/commits/20b180cf81f66ea8ac6234d2050e6ff8dfb3b919"
                }
            ],
            "sha": "65e59f7e9c2afbcd228fe3123d7b1d045dbb5d59",
            "url": "https://api.github.com/repos/cython/cython/commits/65e59f7e9c2afbcd228fe3123d7b1d045dbb5d59"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1b9fbe662456d0ac3e63b04c51c019ce602839b5/comments",
            "commit": {
                "author": {
                    "date": "2021-10-22T18:11:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-10-22T18:11:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Attempt to directly take ownership of refturned ref",
                "tree": {
                    "sha": "6f75acbe15cc8ac948219d9d69850d4afcd685ba",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6f75acbe15cc8ac948219d9d69850d4afcd685ba"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1b9fbe662456d0ac3e63b04c51c019ce602839b5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/1b9fbe662456d0ac3e63b04c51c019ce602839b5",
            "node_id": "C_kwDOAhr4b9oAKDFiOWZiZTY2MjQ1NmQwYWMzZTYzYjA0YzUxYzAxOWNlNjAyODM5YjU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/65e59f7e9c2afbcd228fe3123d7b1d045dbb5d59",
                    "sha": "65e59f7e9c2afbcd228fe3123d7b1d045dbb5d59",
                    "url": "https://api.github.com/repos/cython/cython/commits/65e59f7e9c2afbcd228fe3123d7b1d045dbb5d59"
                }
            ],
            "sha": "1b9fbe662456d0ac3e63b04c51c019ce602839b5",
            "url": "https://api.github.com/repos/cython/cython/commits/1b9fbe662456d0ac3e63b04c51c019ce602839b5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7177e02fb8b35f9909bca67653db9f64fa5c75d7/comments",
            "commit": {
                "author": {
                    "date": "2021-10-23T07:37:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-10-23T07:37:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Used new \"put_nullify\"",
                "tree": {
                    "sha": "66e5dc49946431c28056eb12f00ab71e460d75c0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/66e5dc49946431c28056eb12f00ab71e460d75c0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7177e02fb8b35f9909bca67653db9f64fa5c75d7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7177e02fb8b35f9909bca67653db9f64fa5c75d7",
            "node_id": "C_kwDOAhr4b9oAKDcxNzdlMDJmYjhiMzVmOTkwOWJjYTY3NjUzZGI5ZjY0ZmE1Yzc1ZDc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1b9fbe662456d0ac3e63b04c51c019ce602839b5",
                    "sha": "1b9fbe662456d0ac3e63b04c51c019ce602839b5",
                    "url": "https://api.github.com/repos/cython/cython/commits/1b9fbe662456d0ac3e63b04c51c019ce602839b5"
                }
            ],
            "sha": "7177e02fb8b35f9909bca67653db9f64fa5c75d7",
            "url": "https://api.github.com/repos/cython/cython/commits/7177e02fb8b35f9909bca67653db9f64fa5c75d7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/92c1ddcb81963c332a52b1186770aba0e784de22/comments",
            "commit": {
                "author": {
                    "date": "2021-10-23T07:44:27Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-10-23T07:44:27Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Code style",
                "tree": {
                    "sha": "a19d6327f3a21d364c8e5aece509202dad44f09a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a19d6327f3a21d364c8e5aece509202dad44f09a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/92c1ddcb81963c332a52b1186770aba0e784de22",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/92c1ddcb81963c332a52b1186770aba0e784de22",
            "node_id": "C_kwDOAhr4b9oAKDkyYzFkZGNiODE5NjNjMzMyYTUyYjExODY3NzBhYmEwZTc4NGRlMjI",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7177e02fb8b35f9909bca67653db9f64fa5c75d7",
                    "sha": "7177e02fb8b35f9909bca67653db9f64fa5c75d7",
                    "url": "https://api.github.com/repos/cython/cython/commits/7177e02fb8b35f9909bca67653db9f64fa5c75d7"
                }
            ],
            "sha": "92c1ddcb81963c332a52b1186770aba0e784de22",
            "url": "https://api.github.com/repos/cython/cython/commits/92c1ddcb81963c332a52b1186770aba0e784de22"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/67e8535894855daa85fe4e84a1c202d8b1f471bf/comments",
            "commit": {
                "author": {
                    "date": "2022-01-24T18:01:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-24T18:01:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into walrus",
                "tree": {
                    "sha": "a582a5309e1fb7938c8bbae1459defb595d5c4b2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a582a5309e1fb7938c8bbae1459defb595d5c4b2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/67e8535894855daa85fe4e84a1c202d8b1f471bf",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/67e8535894855daa85fe4e84a1c202d8b1f471bf",
            "node_id": "C_kwDOAhr4b9oAKDY3ZTg1MzU4OTQ4NTVkYWE4NWZlNGU4NGExYzIwMmQ4YjFmNDcxYmY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/92c1ddcb81963c332a52b1186770aba0e784de22",
                    "sha": "92c1ddcb81963c332a52b1186770aba0e784de22",
                    "url": "https://api.github.com/repos/cython/cython/commits/92c1ddcb81963c332a52b1186770aba0e784de22"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/776957022d062ed24edea192b719720118ee3576",
                    "sha": "776957022d062ed24edea192b719720118ee3576",
                    "url": "https://api.github.com/repos/cython/cython/commits/776957022d062ed24edea192b719720118ee3576"
                }
            ],
            "sha": "67e8535894855daa85fe4e84a1c202d8b1f471bf",
            "url": "https://api.github.com/repos/cython/cython/commits/67e8535894855daa85fe4e84a1c202d8b1f471bf"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fa53cf76a656250e8aa9021a00b1ccdbeff01fe2/comments",
            "commit": {
                "author": {
                    "date": "2022-01-24T18:17:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-24T18:17:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Remove temp_stolen_by_parent",
                "tree": {
                    "sha": "2c4997078c458eccc8576abe191e51338ad639aa",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2c4997078c458eccc8576abe191e51338ad639aa"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fa53cf76a656250e8aa9021a00b1ccdbeff01fe2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/fa53cf76a656250e8aa9021a00b1ccdbeff01fe2",
            "node_id": "C_kwDOAhr4b9oAKGZhNTNjZjc2YTY1NjI1MGU4YWE5MDIxYTAwYjFjY2RiZWZmMDFmZTI",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/67e8535894855daa85fe4e84a1c202d8b1f471bf",
                    "sha": "67e8535894855daa85fe4e84a1c202d8b1f471bf",
                    "url": "https://api.github.com/repos/cython/cython/commits/67e8535894855daa85fe4e84a1c202d8b1f471bf"
                }
            ],
            "sha": "fa53cf76a656250e8aa9021a00b1ccdbeff01fe2",
            "url": "https://api.github.com/repos/cython/cython/commits/fa53cf76a656250e8aa9021a00b1ccdbeff01fe2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/abe00f212d62ba41e074408e26f8fc2c0e432d00/comments",
            "commit": {
                "author": {
                    "date": "2022-01-24T18:44:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-24T18:44:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Code style",
                "tree": {
                    "sha": "0d3c9852c312c768b232df9ca91e0d2418062b76",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0d3c9852c312c768b232df9ca91e0d2418062b76"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/abe00f212d62ba41e074408e26f8fc2c0e432d00",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "node_id": "C_kwDOAhr4b9oAKGFiZTAwZjIxMmQ2MmJhNDFlMDc0NDA4ZTI2ZjhmYzJjMGU0MzJkMDA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fa53cf76a656250e8aa9021a00b1ccdbeff01fe2",
                    "sha": "fa53cf76a656250e8aa9021a00b1ccdbeff01fe2",
                    "url": "https://api.github.com/repos/cython/cython/commits/fa53cf76a656250e8aa9021a00b1ccdbeff01fe2"
                }
            ],
            "sha": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
            "url": "https://api.github.com/repos/cython/cython/commits/abe00f212d62ba41e074408e26f8fc2c0e432d00"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ecd8dca0b2e278b1fd2f6216e555eb524b403da3/comments",
            "commit": {
                "author": {
                    "date": "2022-01-25T07:43:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-25T07:43:12Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "7a65b4dec69e12c96225e3600443715c01ead1dd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7a65b4dec69e12c96225e3600443715c01ead1dd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ecd8dca0b2e278b1fd2f6216e555eb524b403da3",
                "verification": {
                    "payload": "tree 7a65b4dec69e12c96225e3600443715c01ead1dd\nparent abe00f212d62ba41e074408e26f8fc2c0e432d00\nauthor da-woods <dw-git@d-woods.co.uk> 1643096592 +0000\ncommitter GitHub <noreply@github.com> 1643096592 +0000\n\nApply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh76oQCRBK7hj4Ov3rIwAA29kIABjKlNVf7KbL26HX7cuda88a\nKx2MoqdSs00Y6yntKxO8dPbbwjJOAmv4Toav/TC5VQKC+bQLZZvB5waACdBslbx2\nAF6QXYQD+gLvTRUGQLdbNaKfL3KZ8dwOL/34/ksqAmvmWXGpKQZ4hYzxsq4i9oni\ngQVSrgmzVy1QQ5rCUi8zpvozBrV28KTesbpdjGhn/24CsHU1eaI5RDyAjR3iNexM\nlZqAwOvL/SHUXbKp9CHsGiP4TlO/Qzd576/CTaxsUupNs6NrpCLrW2zayuHK1hgj\nByZNISBD9De+3GHVWUzE389ALmymkgjUUmZ5CHHxuwgC1POXXT0SRt67G2hEWK4=\n=Lob+\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/ecd8dca0b2e278b1fd2f6216e555eb524b403da3",
            "node_id": "C_kwDOAhr4b9oAKGVjZDhkY2EwYjJlMjc4YjFmZDJmNjIxNmU1NTVlYjUyNGI0MDNkYTM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/abe00f212d62ba41e074408e26f8fc2c0e432d00",
                    "sha": "abe00f212d62ba41e074408e26f8fc2c0e432d00",
                    "url": "https://api.github.com/repos/cython/cython/commits/abe00f212d62ba41e074408e26f8fc2c0e432d00"
                }
            ],
            "sha": "ecd8dca0b2e278b1fd2f6216e555eb524b403da3",
            "url": "https://api.github.com/repos/cython/cython/commits/ecd8dca0b2e278b1fd2f6216e555eb524b403da3"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7e6616275273ad27308a5533db7ca739b3b89c3e/comments",
            "commit": {
                "author": {
                    "date": "2022-01-25T07:54:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-25T07:54:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Undid \"exclude\" change",
                "tree": {
                    "sha": "b093cc87367fe149bf67c97d67ee21e8d47362e3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b093cc87367fe149bf67c97d67ee21e8d47362e3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7e6616275273ad27308a5533db7ca739b3b89c3e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7e6616275273ad27308a5533db7ca739b3b89c3e",
            "node_id": "C_kwDOAhr4b9oAKDdlNjYxNjI3NTI3M2FkMjczMDhhNTUzM2RiN2NhNzM5YjNiODljM2U",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ecd8dca0b2e278b1fd2f6216e555eb524b403da3",
                    "sha": "ecd8dca0b2e278b1fd2f6216e555eb524b403da3",
                    "url": "https://api.github.com/repos/cython/cython/commits/ecd8dca0b2e278b1fd2f6216e555eb524b403da3"
                }
            ],
            "sha": "7e6616275273ad27308a5533db7ca739b3b89c3e",
            "url": "https://api.github.com/repos/cython/cython/commits/7e6616275273ad27308a5533db7ca739b3b89c3e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0cf503aaaedb2d4bd512190a90b5e06261d38bac/comments",
            "commit": {
                "author": {
                    "date": "2022-01-25T07:54:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-25T07:54:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed generate_nullify refactoring",
                "tree": {
                    "sha": "1f59520922b9a768462a6df7e3b0f9a5ac521915",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1f59520922b9a768462a6df7e3b0f9a5ac521915"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0cf503aaaedb2d4bd512190a90b5e06261d38bac",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/0cf503aaaedb2d4bd512190a90b5e06261d38bac",
            "node_id": "C_kwDOAhr4b9oAKDBjZjUwM2FhYWVkYjJkNGJkNTEyMTkwYTkwYjVlMDYyNjFkMzhiYWM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7e6616275273ad27308a5533db7ca739b3b89c3e",
                    "sha": "7e6616275273ad27308a5533db7ca739b3b89c3e",
                    "url": "https://api.github.com/repos/cython/cython/commits/7e6616275273ad27308a5533db7ca739b3b89c3e"
                }
            ],
            "sha": "0cf503aaaedb2d4bd512190a90b5e06261d38bac",
            "url": "https://api.github.com/repos/cython/cython/commits/0cf503aaaedb2d4bd512190a90b5e06261d38bac"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/86237ec015e4913976cd042ed0383fab2cc63473/comments",
            "commit": {
                "author": {
                    "date": "2022-01-25T18:46:37Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-25T18:46:37Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Revert \"Undid \"exclude\" change\"\n\nThis reverts commit 7e6616275273ad27308a5533db7ca739b3b89c3e.",
                "tree": {
                    "sha": "113079085ff93f402ad9b0cf474beaa57671219f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/113079085ff93f402ad9b0cf474beaa57671219f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/86237ec015e4913976cd042ed0383fab2cc63473",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/86237ec015e4913976cd042ed0383fab2cc63473",
            "node_id": "C_kwDOAhr4b9oAKDg2MjM3ZWMwMTVlNDkxMzk3NmNkMDQyZWQwMzgzZmFiMmNjNjM0NzM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0cf503aaaedb2d4bd512190a90b5e06261d38bac",
                    "sha": "0cf503aaaedb2d4bd512190a90b5e06261d38bac",
                    "url": "https://api.github.com/repos/cython/cython/commits/0cf503aaaedb2d4bd512190a90b5e06261d38bac"
                }
            ],
            "sha": "86237ec015e4913976cd042ed0383fab2cc63473",
            "url": "https://api.github.com/repos/cython/cython/commits/86237ec015e4913976cd042ed0383fab2cc63473"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/906c08a4c0d62291e5cfc70fca7177ad20c46a6a/comments",
            "commit": {
                "author": {
                    "date": "2022-01-25T18:46:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-25T18:46:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge remote-tracking branch 'real_origin/master' into walrus",
                "tree": {
                    "sha": "cedeac034405e849c6c30d111c71bfcfdbae783e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cedeac034405e849c6c30d111c71bfcfdbae783e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/906c08a4c0d62291e5cfc70fca7177ad20c46a6a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/906c08a4c0d62291e5cfc70fca7177ad20c46a6a",
            "node_id": "C_kwDOAhr4b9oAKDkwNmMwOGE0YzBkNjIyOTFlNWNmYzcwZmNhNzE3N2FkMjBjNDZhNmE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/86237ec015e4913976cd042ed0383fab2cc63473",
                    "sha": "86237ec015e4913976cd042ed0383fab2cc63473",
                    "url": "https://api.github.com/repos/cython/cython/commits/86237ec015e4913976cd042ed0383fab2cc63473"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/44b5b0d14d0f0d91f7826791d142d95906c74643",
                    "sha": "44b5b0d14d0f0d91f7826791d142d95906c74643",
                    "url": "https://api.github.com/repos/cython/cython/commits/44b5b0d14d0f0d91f7826791d142d95906c74643"
                }
            ],
            "sha": "906c08a4c0d62291e5cfc70fca7177ad20c46a6a",
            "url": "https://api.github.com/repos/cython/cython/commits/906c08a4c0d62291e5cfc70fca7177ad20c46a6a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/715b4b46778c5fccbbb97a548554f8c4cc4d05e1/comments",
            "commit": {
                "author": {
                    "date": "2022-01-25T18:55:44Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-25T18:55:44Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed AssignmentExpressionNode.lhs",
                "tree": {
                    "sha": "5aba8ee28a3412251fa0fb943f48d32f481b5770",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5aba8ee28a3412251fa0fb943f48d32f481b5770"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/715b4b46778c5fccbbb97a548554f8c4cc4d05e1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/715b4b46778c5fccbbb97a548554f8c4cc4d05e1",
            "node_id": "C_kwDOAhr4b9oAKDcxNWI0YjQ2Nzc4YzVmY2NiYmI5N2E1NDg1NTRmOGM0Y2M0ZDA1ZTE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/906c08a4c0d62291e5cfc70fca7177ad20c46a6a",
                    "sha": "906c08a4c0d62291e5cfc70fca7177ad20c46a6a",
                    "url": "https://api.github.com/repos/cython/cython/commits/906c08a4c0d62291e5cfc70fca7177ad20c46a6a"
                }
            ],
            "sha": "715b4b46778c5fccbbb97a548554f8c4cc4d05e1",
            "url": "https://api.github.com/repos/cython/cython/commits/715b4b46778c5fccbbb97a548554f8c4cc4d05e1"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bcd4f9095d799b7d5d925a6c1c4b316b26495ec4/comments",
            "commit": {
                "author": {
                    "date": "2022-01-25T19:43:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-25T19:43:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added tests for literals",
                "tree": {
                    "sha": "f2a0b6ef6c94727c766cce56e4b61ec373ad54c0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f2a0b6ef6c94727c766cce56e4b61ec373ad54c0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bcd4f9095d799b7d5d925a6c1c4b316b26495ec4",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/bcd4f9095d799b7d5d925a6c1c4b316b26495ec4",
            "node_id": "C_kwDOAhr4b9oAKGJjZDRmOTA5NWQ3OTliN2Q1ZDkyNWE2YzFjNGIzMTZiMjY0OTVlYzQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/715b4b46778c5fccbbb97a548554f8c4cc4d05e1",
                    "sha": "715b4b46778c5fccbbb97a548554f8c4cc4d05e1",
                    "url": "https://api.github.com/repos/cython/cython/commits/715b4b46778c5fccbbb97a548554f8c4cc4d05e1"
                }
            ],
            "sha": "bcd4f9095d799b7d5d925a6c1c4b316b26495ec4",
            "url": "https://api.github.com/repos/cython/cython/commits/bcd4f9095d799b7d5d925a6c1c4b316b26495ec4"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f2f9f907ac870ad19188151c5ee069459c00452a/comments",
            "commit": {
                "author": {
                    "date": "2022-01-25T21:52:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-25T21:52:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Small cleanups from review",
                "tree": {
                    "sha": "6be164baa39f209448ebb295f83edfbc85e70765",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6be164baa39f209448ebb295f83edfbc85e70765"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f2f9f907ac870ad19188151c5ee069459c00452a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f2f9f907ac870ad19188151c5ee069459c00452a",
            "node_id": "C_kwDOAhr4b9oAKGYyZjlmOTA3YWM4NzBhZDE5MTg4MTUxYzVlZTA2OTQ1OWMwMDQ1MmE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bcd4f9095d799b7d5d925a6c1c4b316b26495ec4",
                    "sha": "bcd4f9095d799b7d5d925a6c1c4b316b26495ec4",
                    "url": "https://api.github.com/repos/cython/cython/commits/bcd4f9095d799b7d5d925a6c1c4b316b26495ec4"
                }
            ],
            "sha": "f2f9f907ac870ad19188151c5ee069459c00452a",
            "url": "https://api.github.com/repos/cython/cython/commits/f2f9f907ac870ad19188151c5ee069459c00452a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/473f8974501b78eaac72b585843f6fc3575961d1/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T09:44:13Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T09:44:13Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review",
                "tree": {
                    "sha": "d526a9e5c70e346d2634e25ebdaf510b057b1e90",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d526a9e5c70e346d2634e25ebdaf510b057b1e90"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/473f8974501b78eaac72b585843f6fc3575961d1",
                "verification": {
                    "payload": "tree d526a9e5c70e346d2634e25ebdaf510b057b1e90\nparent f2f9f907ac870ad19188151c5ee069459c00452a\nauthor scoder <stefan_ml@behnel.de> 1643190253 +0100\ncommitter GitHub <noreply@github.com> 1643190253 +0100\n\nApply suggestions from code review",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8RftCRBK7hj4Ov3rIwAAkwsIAANb1wag+j+NL5X3YTbF2SWB\nxW+SDu6IZvffA6oLkmjIiVagoaDzNF0zKA7B51+V+8e8wUQRs74h0ofCynuzj4hK\nWGTZ/COQcwOkIHo+Ojl4dS8lNhFhXX/P3FlgTMse9/1RDOJYLsMWEF7p80HWYQUX\ncGHAEADzTkscmVINW9pzE7KEAr6VGACpWTJmF1393DCtu96o1jTd4mYlrwTR2HPm\nXZknFT2RmmUX5QMOXtXbZVuCqV7d8FTu17RdlgmPx93Uyh3WhsDX4oa9OMNQvf7p\nUtD4+/SokR/8b9MrN1i3m8/Er8D8Lhrs+TdIrEdboWZszpsM/Oj/pfinE5aFlMI=\n=LkE7\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/473f8974501b78eaac72b585843f6fc3575961d1",
            "node_id": "C_kwDOAhr4b9oAKDQ3M2Y4OTc0NTAxYjc4ZWFhYzcyYjU4NTg0M2Y2ZmMzNTc1OTYxZDE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f2f9f907ac870ad19188151c5ee069459c00452a",
                    "sha": "f2f9f907ac870ad19188151c5ee069459c00452a",
                    "url": "https://api.github.com/repos/cython/cython/commits/f2f9f907ac870ad19188151c5ee069459c00452a"
                }
            ],
            "sha": "473f8974501b78eaac72b585843f6fc3575961d1",
            "url": "https://api.github.com/repos/cython/cython/commits/473f8974501b78eaac72b585843f6fc3575961d1"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6c5c0506a746dda1a4ac06ed19b70ce1d5122db9/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T09:52:52Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T09:52:52Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Reuse TreeVisitor methods",
                "tree": {
                    "sha": "9307478e3e339d6d43d3b82e3c7e3f166e4d01c9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9307478e3e339d6d43d3b82e3c7e3f166e4d01c9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
                "verification": {
                    "payload": "tree 9307478e3e339d6d43d3b82e3c7e3f166e4d01c9\nparent 473f8974501b78eaac72b585843f6fc3575961d1\nauthor scoder <stefan_ml@behnel.de> 1643190772 +0100\ncommitter GitHub <noreply@github.com> 1643190772 +0100\n\nReuse TreeVisitor methods",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8Rn0CRBK7hj4Ov3rIwAAUQAIAAR/L9MLCYwWVnaCEJ7ALgqp\nAsxNvBQKhx9Qf2GaxvbmiGXrGMyvAcWk1CfFDh5Qvss3poDQidfTDF5W7tkJWwdd\nSPkKHotYXPzzCzuhmlH6oWIIAMVIniyEoAzy88ecQ+AzGI0EpX2CrvWrTgtDlnx+\njNlltd1p1OhFjJ20BETeCtgs7qwjEb0EB2Mmo1SjuPvY//kmA4WtP6gCPnVjZQqV\nOUJBRBOzmMQ1FMODhH5xCQEPA5tXeci+6ob0oktwMpNXPgJnIvbYa1e8MqV9s44N\nw7g55WLgx/EE/1RgI2KcOsXM2K8bLe8fkY6dEVKRMIgRkWMjaNAx8TdFs2KyLjE=\n=L4lZ\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
            "node_id": "C_kwDOAhr4b9oAKDZjNWMwNTA2YTc0NmRkYTFhNGFjMDZlZDE5YjcwY2UxZDUxMjJkYjk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/473f8974501b78eaac72b585843f6fc3575961d1",
                    "sha": "473f8974501b78eaac72b585843f6fc3575961d1",
                    "url": "https://api.github.com/repos/cython/cython/commits/473f8974501b78eaac72b585843f6fc3575961d1"
                }
            ],
            "sha": "6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
            "url": "https://api.github.com/repos/cython/cython/commits/6c5c0506a746dda1a4ac06ed19b70ce1d5122db9"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c99deef1201f6ac0cee9aab61855d92436001c27/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T10:40:06Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T10:40:06Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Reverting TreeVisitor method usage.",
                "tree": {
                    "sha": "86223987afc334fb13dcee66cc43b975c1708337",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/86223987afc334fb13dcee66cc43b975c1708337"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c99deef1201f6ac0cee9aab61855d92436001c27",
                "verification": {
                    "payload": "tree 86223987afc334fb13dcee66cc43b975c1708337\nparent 6c5c0506a746dda1a4ac06ed19b70ce1d5122db9\nauthor scoder <stefan_ml@behnel.de> 1643193606 +0100\ncommitter GitHub <noreply@github.com> 1643193606 +0100\n\nReverting TreeVisitor method usage.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8SUGCRBK7hj4Ov3rIwAAZG4IAEUcYvtlanNqjqv2vzBjDwRo\nm3AjEMnBgiUATSbx0Alcbe3ggZxeBltWQhWDmT1plfENUQ0rwxCZ8UV14qufMYUD\nlUJbOLQCCEyMWrh6hVW7Ig9QYk7UVIoMw67o3LxN/0v7zkTJn3iiTHtmgwmYIq+0\nyCY6CkjKYHYiijXf4vuiPauVcc9oZR9ymz6d88PkPEqwK30lSwvMzvAVi9twGiW2\n5OCxSCFpN712B+oxL8PHbmvTy1H1GNiQlMdqwF7gjseNT6ekklgTHI3j46mXMthO\nf6aFJZ3X/dBorv/XDERM7j4KmF5nERJTPxG1sIp7+1bH6cznHFXjZgPlnHJci6k=\n=TUH2\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/c99deef1201f6ac0cee9aab61855d92436001c27",
            "node_id": "C_kwDOAhr4b9oAKGM5OWRlZWYxMjAxZjZhYzBjZWU5YWFiNjE4NTVkOTI0MzYwMDFjMjc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
                    "sha": "6c5c0506a746dda1a4ac06ed19b70ce1d5122db9",
                    "url": "https://api.github.com/repos/cython/cython/commits/6c5c0506a746dda1a4ac06ed19b70ce1d5122db9"
                }
            ],
            "sha": "c99deef1201f6ac0cee9aab61855d92436001c27",
            "url": "https://api.github.com/repos/cython/cython/commits/c99deef1201f6ac0cee9aab61855d92436001c27"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9b32124afed239b563a715b402ef077eeabc635c/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T19:29:42Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T19:29:42Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Allow assignment within lambda within generator/class",
                "tree": {
                    "sha": "b607b505a9498d93dbd6e99ac34a7cb1ada4c8f9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b607b505a9498d93dbd6e99ac34a7cb1ada4c8f9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9b32124afed239b563a715b402ef077eeabc635c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9b32124afed239b563a715b402ef077eeabc635c",
            "node_id": "C_kwDOAhr4b9oAKDliMzIxMjRhZmVkMjM5YjU2M2E3MTViNDAyZWYwNzdlZWFiYzYzNWM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c99deef1201f6ac0cee9aab61855d92436001c27",
                    "sha": "c99deef1201f6ac0cee9aab61855d92436001c27",
                    "url": "https://api.github.com/repos/cython/cython/commits/c99deef1201f6ac0cee9aab61855d92436001c27"
                }
            ],
            "sha": "9b32124afed239b563a715b402ef077eeabc635c",
            "url": "https://api.github.com/repos/cython/cython/commits/9b32124afed239b563a715b402ef077eeabc635c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2c2e794f368e9e63a45d19ecbdacd844463a8e79/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T19:36:00Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T19:36:00Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Make GeneratorExpressionScope subclass",
                "tree": {
                    "sha": "c8c406a2845aad14e092067676d66dda19490902",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c8c406a2845aad14e092067676d66dda19490902"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2c2e794f368e9e63a45d19ecbdacd844463a8e79",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/2c2e794f368e9e63a45d19ecbdacd844463a8e79",
            "node_id": "C_kwDOAhr4b9oAKDJjMmU3OTRmMzY4ZTllNjNhNDVkMTllY2JkYWNkODQ0NDYzYThlNzk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9b32124afed239b563a715b402ef077eeabc635c",
                    "sha": "9b32124afed239b563a715b402ef077eeabc635c",
                    "url": "https://api.github.com/repos/cython/cython/commits/9b32124afed239b563a715b402ef077eeabc635c"
                }
            ],
            "sha": "2c2e794f368e9e63a45d19ecbdacd844463a8e79",
            "url": "https://api.github.com/repos/cython/cython/commits/2c2e794f368e9e63a45d19ecbdacd844463a8e79"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b1516d14068379cfe2fa0494612db78b6260c71f/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T19:39:32Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T19:39:32Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed comment",
                "tree": {
                    "sha": "fb8398edbcbfef42a463578f92efb25cbcf40b3f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fb8398edbcbfef42a463578f92efb25cbcf40b3f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b1516d14068379cfe2fa0494612db78b6260c71f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b1516d14068379cfe2fa0494612db78b6260c71f",
            "node_id": "C_kwDOAhr4b9oAKGIxNTE2ZDE0MDY4Mzc5Y2ZlMmZhMDQ5NDYxMmRiNzhiNjI2MGM3MWY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2c2e794f368e9e63a45d19ecbdacd844463a8e79",
                    "sha": "2c2e794f368e9e63a45d19ecbdacd844463a8e79",
                    "url": "https://api.github.com/repos/cython/cython/commits/2c2e794f368e9e63a45d19ecbdacd844463a8e79"
                }
            ],
            "sha": "b1516d14068379cfe2fa0494612db78b6260c71f",
            "url": "https://api.github.com/repos/cython/cython/commits/b1516d14068379cfe2fa0494612db78b6260c71f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5289f82b7d3e0d3d0e7dd825a61be61efeca3178/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T23:01:49Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T23:01:49Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Refactor the state handling in _AssignmentExpressionChecker to reduce the verbosity",
                "tree": {
                    "sha": "657ff5818d7ae2b8cb48f21bebce91fc074b41e6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/657ff5818d7ae2b8cb48f21bebce91fc074b41e6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5289f82b7d3e0d3d0e7dd825a61be61efeca3178",
                "verification": {
                    "payload": "tree 657ff5818d7ae2b8cb48f21bebce91fc074b41e6\nparent b1516d14068379cfe2fa0494612db78b6260c71f\nauthor scoder <stefan_ml@behnel.de> 1643238109 +0100\ncommitter GitHub <noreply@github.com> 1643238109 +0100\n\nRefactor the state handling in _AssignmentExpressionChecker to reduce the verbosity",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8dLdCRBK7hj4Ov3rIwAAVm4IAGzfSbmdpIv3PDFig4YMCdtp\nrt35LJWfplTO0l0DHisr8uiha8oA7Efh+UIjKAusWDhKGUxE6ZdVgIis/DAI1nSQ\nxmfoUNA5f7b+7FwsihcbyRWjM9Cm9h+aHTfEHOgaaJnvU6jwFmove2G5YKF9L2jW\n0cYicVIwQhePaBmXQpMe3bWzzfErzxZCyQyovprLRKjILU/cR+4pQxR76VZV2urx\nLAMN3c8yT7yeKIVPG9JGQW745r3D7J0xTiGn79xv5eaisQVM3YVqHBs3RCCEqY5E\nh95JWeqmVwc0+XAndK9dU/LUL6Rzk4XQ9dUtGDZY6nLGGl8GPNBolyIWFzSFh3A=\n=kh2R\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/5289f82b7d3e0d3d0e7dd825a61be61efeca3178",
            "node_id": "C_kwDOAhr4b9oAKDUyODlmODJiN2QzZTBkM2QwZTdkZDgyNWE2MWJlNjFlZmVjYTMxNzg",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b1516d14068379cfe2fa0494612db78b6260c71f",
                    "sha": "b1516d14068379cfe2fa0494612db78b6260c71f",
                    "url": "https://api.github.com/repos/cython/cython/commits/b1516d14068379cfe2fa0494612db78b6260c71f"
                }
            ],
            "sha": "5289f82b7d3e0d3d0e7dd825a61be61efeca3178",
            "url": "https://api.github.com/repos/cython/cython/commits/5289f82b7d3e0d3d0e7dd825a61be61efeca3178"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/926e2650dc049ff2bdc46c1dfb5d76b9372a56f7/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T23:04:27Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T23:04:27Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Avoid hanging comment to make it easier to read.",
                "tree": {
                    "sha": "375c547334721fe1b1c60936e1bd9d1e8262894c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/375c547334721fe1b1c60936e1bd9d1e8262894c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/926e2650dc049ff2bdc46c1dfb5d76b9372a56f7",
                "verification": {
                    "payload": "tree 375c547334721fe1b1c60936e1bd9d1e8262894c\nparent 5289f82b7d3e0d3d0e7dd825a61be61efeca3178\nauthor scoder <stefan_ml@behnel.de> 1643238267 +0100\ncommitter GitHub <noreply@github.com> 1643238267 +0100\n\nAvoid hanging comment to make it easier to read.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8dN7CRBK7hj4Ov3rIwAAr7YIAHC12nWGIvb4MMZVYH7kJB4T\nIqGQHbD58Ntl1ZJ2tO54JBMLDFYJNToNiPO/A8ZoxLpp+CPWh2gDp7EndhKURGCP\nScLjiGmFzVk74jMqxGMhM2VlTruDbkREcor52WHIIASGH4poQyXySRNH/REvN7/w\nsBd+WDBPDcWFbqmz2T5PDfWWiE9zkWWTpO6utijbBML3ix32vLR9aFzfxLCIbMIQ\n5aW07NXfn66NfMeZQeTbOQbZHastCPQfldAWGrADINOD1XnzVYI5bpO9F+KsI1W3\nxHIq/BA3Tpw+HLTyEXCGAVPeEUJYyggNXd3oNnlolfEX7oc6zDhYZ8SiaUgREmM=\n=XSZl\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/926e2650dc049ff2bdc46c1dfb5d76b9372a56f7",
            "node_id": "C_kwDOAhr4b9oAKDkyNmUyNjUwZGMwNDlmZjJiZGM0NmMxZGZiNWQ3NmI5MzcyYTU2Zjc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5289f82b7d3e0d3d0e7dd825a61be61efeca3178",
                    "sha": "5289f82b7d3e0d3d0e7dd825a61be61efeca3178",
                    "url": "https://api.github.com/repos/cython/cython/commits/5289f82b7d3e0d3d0e7dd825a61be61efeca3178"
                }
            ],
            "sha": "926e2650dc049ff2bdc46c1dfb5d76b9372a56f7",
            "url": "https://api.github.com/repos/cython/cython/commits/926e2650dc049ff2bdc46c1dfb5d76b9372a56f7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/220eb77f25cbe9f1f36b9021b12ba0687a7c6613/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T23:21:13Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T23:21:13Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Initialise attributes before accessing them 8o)",
                "tree": {
                    "sha": "150b0084f71b0075076b6148f2713b20f0b93243",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/150b0084f71b0075076b6148f2713b20f0b93243"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/220eb77f25cbe9f1f36b9021b12ba0687a7c6613",
                "verification": {
                    "payload": "tree 150b0084f71b0075076b6148f2713b20f0b93243\nparent 926e2650dc049ff2bdc46c1dfb5d76b9372a56f7\nauthor scoder <stefan_ml@behnel.de> 1643239273 +0100\ncommitter GitHub <noreply@github.com> 1643239273 +0100\n\nInitialise attributes before accessing them 8o)",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8ddpCRBK7hj4Ov3rIwAAWrYIACzekfHNUdFJ2lfwk5+KjCp8\noIWq5Nb0ZskYMdIhP6FhpH2gJtToKQfJSbj929S75gh653N5hOxlQWLlP/ZRC87o\n+T+r9boL3vCQn7O7xp1c+gBozPdRfU1ee856XOAITyd6kBlt8Nugxh/U7c6RZmLl\n4knwUKX/5YeNNqKSpaV9QfPVX7hl6DLu1+ZOmCibBMIdXFjw0yu+goaSnDrGVMgb\nYLXNo0iSxnVjDTbwgnJsRfJtwrV7NVjxm+dQWBy3S8GJY2Pqv5z3T91HbrS7skkS\njVKpvveddXf9OLVEqt43WlhnPrqAz2YS0F6Qr0e79qCgySaNwE7hDp/byvfWUfg=\n=0Jvq\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/220eb77f25cbe9f1f36b9021b12ba0687a7c6613",
            "node_id": "C_kwDOAhr4b9oAKDIyMGViNzdmMjVjYmU5ZjFmMzZiOTAyMWIxMmJhMDY4N2E3YzY2MTM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/926e2650dc049ff2bdc46c1dfb5d76b9372a56f7",
                    "sha": "926e2650dc049ff2bdc46c1dfb5d76b9372a56f7",
                    "url": "https://api.github.com/repos/cython/cython/commits/926e2650dc049ff2bdc46c1dfb5d76b9372a56f7"
                }
            ],
            "sha": "220eb77f25cbe9f1f36b9021b12ba0687a7c6613",
            "url": "https://api.github.com/repos/cython/cython/commits/220eb77f25cbe9f1f36b9021b12ba0687a7c6613"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e5050c55c46e0df950c8373045a80b9533e16f36/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T23:25:24Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T23:25:24Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Undo whitespace change",
                "tree": {
                    "sha": "8ac63b730b7c4db54de21cf14ef848e1610e5bd0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8ac63b730b7c4db54de21cf14ef848e1610e5bd0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e5050c55c46e0df950c8373045a80b9533e16f36",
                "verification": {
                    "payload": "tree 8ac63b730b7c4db54de21cf14ef848e1610e5bd0\nparent 220eb77f25cbe9f1f36b9021b12ba0687a7c6613\nauthor scoder <stefan_ml@behnel.de> 1643239524 +0100\ncommitter GitHub <noreply@github.com> 1643239524 +0100\n\nUndo whitespace change",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8dhkCRBK7hj4Ov3rIwAAk9cIADvNed/FwosNqq4IGtsvW1Bx\nWlHB62SgOdPjbWj9fFQ3o7ta28Q48yqrKR/Ju8BbbyqjfefVUy60qHNaax21OvKe\n20XzV+JvOy8bqQois6T3L150cNmWJ1fiZBKU39Cri6pyHaX7Nu8zaGAuGrxFg9na\nPUS7mu5cVt6QvQfpiBP3g6EUVVga2UDeaKX8n9Z2EoecJEUkZV+wZKBK84/YL6Vy\n45OBZdbJXyvoboeHK0UAfkq4/lAYd+L+6Cr7kuSGLJDV1UVAg0iQtmPOln1AmpMM\nLHfpzAyCC5xl8g1MuTSDd720WIryqcN1Dc6PPtQk70V8kbrwb83CABUkBsAnmDY=\n=6qhH\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/e5050c55c46e0df950c8373045a80b9533e16f36",
            "node_id": "C_kwDOAhr4b9oAKGU1MDUwYzU1YzQ2ZTBkZjk1MGM4MzczMDQ1YTgwYjk1MzNlMTZmMzY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/220eb77f25cbe9f1f36b9021b12ba0687a7c6613",
                    "sha": "220eb77f25cbe9f1f36b9021b12ba0687a7c6613",
                    "url": "https://api.github.com/repos/cython/cython/commits/220eb77f25cbe9f1f36b9021b12ba0687a7c6613"
                }
            ],
            "sha": "e5050c55c46e0df950c8373045a80b9533e16f36",
            "url": "https://api.github.com/repos/cython/cython/commits/e5050c55c46e0df950c8373045a80b9533e16f36"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/072f991a1783b8363791ec1d1b3acb4b444e6540/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T23:35:04Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T23:35:04Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Refactor InnerEntry creation to reduce redundancy and future human errors.",
                "tree": {
                    "sha": "b1cd2a3b3e94ba1331e79defd38f4e2e0d44419b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b1cd2a3b3e94ba1331e79defd38f4e2e0d44419b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/072f991a1783b8363791ec1d1b3acb4b444e6540",
                "verification": {
                    "payload": "tree b1cd2a3b3e94ba1331e79defd38f4e2e0d44419b\nparent e5050c55c46e0df950c8373045a80b9533e16f36\nauthor scoder <stefan_ml@behnel.de> 1643240104 +0100\ncommitter GitHub <noreply@github.com> 1643240104 +0100\n\nRefactor InnerEntry creation to reduce redundancy and future human errors.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8dqoCRBK7hj4Ov3rIwAAs98IADz5wF5iRrnm11HwbM2rIMt8\nGfZSCVpnu4Lf+5zlO2UaQBKHWZTyMP9ixO9A1Z5BJiZeyEQFrQASq1m+Qnctq5vA\nh4nr7kzMeYr2Qwk/gvFobgToxuqGjfX29URSwVw9AIz5WtNe7+LgTyvyBtq2tvyy\nZyjkzS9dKn92pGJilY1fECAUgs7xqf5J01rsmfbwYL2LR6URvuP7KMel3pTzfYqS\n9jcXKELW2tdk3HdfU8q8l/VTPXkdLv3LksbE1iIjqG4LlNRK+58p25D6FNZrmHZ2\nKkuqeMDDn1znXVGhqvQKr3GXF8SCVm8qNoyG7cA1+o8slkAX1UorMh4nsJTyQH0=\n=lE53\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/072f991a1783b8363791ec1d1b3acb4b444e6540",
            "node_id": "C_kwDOAhr4b9oAKDA3MmY5OTFhMTc4M2I4MzYzNzkxZWMxZDFiM2FjYjRiNDQ0ZTY1NDA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e5050c55c46e0df950c8373045a80b9533e16f36",
                    "sha": "e5050c55c46e0df950c8373045a80b9533e16f36",
                    "url": "https://api.github.com/repos/cython/cython/commits/e5050c55c46e0df950c8373045a80b9533e16f36"
                }
            ],
            "sha": "072f991a1783b8363791ec1d1b3acb4b444e6540",
            "url": "https://api.github.com/repos/cython/cython/commits/072f991a1783b8363791ec1d1b3acb4b444e6540"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d5877c8ab8b5b74278a4616e085ab6ffa98a14a6/comments",
            "commit": {
                "author": {
                    "date": "2022-01-26T23:47:55Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-01-26T23:47:55Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix refactoring.",
                "tree": {
                    "sha": "a7331bc5e749696c51b3ae2421379259350fb7ae",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a7331bc5e749696c51b3ae2421379259350fb7ae"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
                "verification": {
                    "payload": "tree a7331bc5e749696c51b3ae2421379259350fb7ae\nparent 072f991a1783b8363791ec1d1b3acb4b444e6540\nauthor scoder <stefan_ml@behnel.de> 1643240875 +0100\ncommitter GitHub <noreply@github.com> 1643240875 +0100\n\nFix refactoring.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh8d2rCRBK7hj4Ov3rIwAANosIAJZKpRJ0Gct25Jyx4AWoKen1\nrUy7JoJ64j/a7DbV+V9wtq7QW5b4PT6jwJW5u7q3TH+irP+gEi5vUG6LhsI+sDG/\nwG4Q43J+Zx3xJlAo2XEc4PwGlvAemCihCPEG3j9IDdcDu83HjKCtSWNGoYOmbm9u\n3kAlydeEEZ2Qkki7LnhyElRdv+m2XvzIKXAfPj0hOg+djiAyLixl12R5LSj9my7T\nAUwzImO2AAxlHlLmHNrjHmgjcihD1/z5sivQFfdR64fJWHf/ZMu1IdOCRu2fYp17\npZrUXiNSyLAUEg5NzqsQETSYf6nZyRiVXSKCIxLl0Xvpajjfr7h6ic4XivFgAfM=\n=xure\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "node_id": "C_kwDOAhr4b9oAKGQ1ODc3YzhhYjhiNWI3NDI3OGE0NjE2ZTA4NWFiNmZmYTk4YTE0YTY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/072f991a1783b8363791ec1d1b3acb4b444e6540",
                    "sha": "072f991a1783b8363791ec1d1b3acb4b444e6540",
                    "url": "https://api.github.com/repos/cython/cython/commits/072f991a1783b8363791ec1d1b3acb4b444e6540"
                }
            ],
            "sha": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
            "url": "https://api.github.com/repos/cython/cython/commits/d5877c8ab8b5b74278a4616e085ab6ffa98a14a6"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3691/commits",
    "created_at": "2020-06-18T21:35:44Z",
    "diff_url": "https://github.com/cython/cython/pull/3691.diff",
    "draft": false,
    "head": {
        "label": "da-woods:walrus",
        "ref": "walrus",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2022-01-27T22:43:59Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 66672,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2021-09-15T16:26:05Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2
        },
        "sha": "d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3691",
    "id": 436775089,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3691",
    "labels": [
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        }
    ],
    "locked": false,
    "merge_commit_sha": "fe0eeeb3806e3e70670779b8fb3c7bc4f340e0b1",
    "merged_at": "2022-01-27T00:34:33Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 548,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 37,
        "state": "open",
        "title": "3.0",
        "updated_at": "2022-01-28T11:52:06Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM2Nzc1MDg5",
    "number": 3691,
    "patch_url": "https://github.com/cython/cython/pull/3691.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3691/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/d5877c8ab8b5b74278a4616e085ab6ffa98a14a6",
    "title": "walrus operator/named expressions",
    "updated_at": "2022-01-27T09:14:26Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3691",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}