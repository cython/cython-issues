{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3372/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3372/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3372"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3372"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3372/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3372"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 989,
            "forks_count": 989,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 800,
            "open_issues_count": 800,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-02-20T20:04:50Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56319,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4909,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-02-21T08:57:08Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4909,
            "watchers_count": 4909
        },
        "sha": "3a7fafdb07831e61752963a6d46b2be41513d637",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "I hope that this solves #3369.  Speaking from experience (of maintaining widgets fetching data from command-line programs), quoting shell is a huge pain, that's why I'm favoring imputing commands via lists.\r\n\r\nIf any change is too excessive, feel free to tell me to undo it.",
    "closed_at": "2020-02-20T15:15:06Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381894165"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381894165"
                }
            },
            "author_association": "MEMBER",
            "body": "Seems more readable in two separate lines.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T09:56:34Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}\n+\n+    if workdir is None: workdir = tempfile.mkdtemp()",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381894165",
            "id": 381894165,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NDE2NQ==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 49,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 361767394,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381894165",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381895745"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381895745"
                }
            },
            "author_association": "MEMBER",
            "body": "Future editing and readability would benefit from this spelling:\r\n```python\r\n    programs = {\r\n        'PYTHON': [sys.executable],\r\n        'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\r\n        'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')],\r\n    }\r\n```",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T09:59:20Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381895745",
            "id": 381895745,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NTc0NQ==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 47,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 361767394,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381895745",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381898320"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381898320"
                }
            },
            "author_association": "MEMBER",
            "body": "Why this change?",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T10:04:03Z",
            "diff_hunk": "@@ -1713,9 +1713,9 @@ def __init__(self, treefile, workdir, cleanup_workdir=True, stats=None,\n         self.cleanup_workdir = cleanup_workdir\n         self.stats = stats\n         self.capture = capture\n-        cython_syspath = [self.cython_root]\n+        cython_syspath = [EndToEndTest.cython_root]",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381898320",
            "id": 381898320,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5ODMyMA==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 5,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 361767394,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381898320",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381899112"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381899112"
                }
            },
            "author_association": "MEMBER",
            "body": "`command` is a list now, right? Shouldn't this option be removed then? (Same below)",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T10:05:32Z",
            "diff_hunk": "@@ -1766,21 +1762,19 @@ def runTest(self):\n         cmd = []\n         out = []\n         err = []\n-        for command_no, command in enumerate(filter(None, commands.splitlines()), 1):\n+        for command_no, command in enumerate(self.commands, 1):\n             with self.stats.time('%s(%d)' % (self.name, command_no), 'c',\n-                                 'etoe-build' if ' setup.py ' in command else 'etoe-run'):\n+                                 'etoe-build' if 'setup.py' in command else 'etoe-run'):\n                 if self.capture:\n                     p = subprocess.Popen(command,\n-                                     stderr=subprocess.PIPE,\n-                                     stdout=subprocess.PIPE,\n-                                     shell=True,\n-                                     env=env)\n+                                         stderr=subprocess.PIPE,\n+                                         stdout=subprocess.PIPE,\n+                                         shell=True,",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381899112",
            "id": 381899112,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5OTExMg==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 49,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 361767394,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381899112",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381899738"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381899738"
                }
            },
            "author_association": "MEMBER",
            "body": "Separate lines.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T10:06:41Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}\n+\n+    if workdir is None: workdir = tempfile.mkdtemp()\n+    header, cur_file = [], None\n+    with open(tree_file) as f:\n+        try:\n+            for line in f:\n+                if line.startswith('#####'):\n+                    filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n+                    path = os.path.join(workdir, filename)\n+                    if not os.path.exists(os.path.dirname(path)):\n+                        os.makedirs(os.path.dirname(path))\n+                    cur_file.close()\n+                    cur_file = open(path, 'w')\n+                elif not getattr(cur_file, 'closed', True):\n+                    cur_file.write(line)\n+                elif line.strip() and not line.lstrip().startswith('#'):\n+                    if line.strip() not in ('\"\"\"', \"'''\"):\n+                        command = shlex.split(line)\n+                        if not command: continue\n+                        # In Python 3: prog, *args = command\n+                        prog, args = command[0], command[1:]\n+                        try:\n+                            header.append(programs[prog]+args)\n+                        except KeyError:\n+                            header.append(command)\n+        finally:\n+            if not getattr(cur_file, 'closed', True): cur_file.close()",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381899738",
            "id": 381899738,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5OTczOA==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 74,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 361767394,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381899738",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381900354"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381900354"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not keep the much simpler `is None`? (Same below) This change makes the unnecessary assumption that whatever `open()` returns has a `closed` attribute that changes with a call to `.close()`. I don't see a need for that assumption.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T10:07:45Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}\n+\n+    if workdir is None: workdir = tempfile.mkdtemp()\n+    header, cur_file = [], None\n+    with open(tree_file) as f:\n+        try:\n+            for line in f:\n+                if line.startswith('#####'):\n+                    filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n+                    path = os.path.join(workdir, filename)\n+                    if not os.path.exists(os.path.dirname(path)):\n+                        os.makedirs(os.path.dirname(path))\n+                    cur_file.close()\n+                    cur_file = open(path, 'w')\n+                elif not getattr(cur_file, 'closed', True):",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381900354",
            "id": 381900354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMDM1NA==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 61,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 361767394,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381900354",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381921260"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381921260"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is to clarify `cython_root` is class attribute.  I think it'd fit since this commit touches the attribute, but I can undo it if it creates blame noise.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T10:46:23Z",
            "diff_hunk": "@@ -1713,9 +1713,9 @@ def __init__(self, treefile, workdir, cleanup_workdir=True, stats=None,\n         self.cleanup_workdir = cleanup_workdir\n         self.stats = stats\n         self.capture = capture\n-        cython_syspath = [self.cython_root]\n+        cython_syspath = [EndToEndTest.cython_root]",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381921260",
            "id": 381921260,
            "in_reply_to_id": 381898320,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMTI2MA==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 5,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 361801943,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381921260",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381929286"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381929286"
                }
            },
            "author_association": "MEMBER",
            "body": "`self.xyz` is just fine for attributes defined in the class, but additionally works for subclasses and instances. I do not see a need to make this code less generic than it is.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T11:01:40Z",
            "diff_hunk": "@@ -1713,9 +1713,9 @@ def __init__(self, treefile, workdir, cleanup_workdir=True, stats=None,\n         self.cleanup_workdir = cleanup_workdir\n         self.stats = stats\n         self.capture = capture\n-        cython_syspath = [self.cython_root]\n+        cython_syspath = [EndToEndTest.cython_root]",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381929286",
            "id": 381929286,
            "in_reply_to_id": 381898320,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyOTI4Ng==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 5,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 361811967,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381929286",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381931752"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381931752"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Why not keep the much simpler `is None`?\r\n\r\nYou're right, for this case it's only to guard against the case when no output file has ever been opened.\r\n\r\n> Same below\r\n\r\nIn the `finally` clause, we're guarding against two cases:\r\n* No output file has ever been opened: checking for None works fine\r\n* `cur_file` is assigned to a currently opening file by the first `if`: if the statement is reached because an exception is raised, it should try to close the file.  I'm not in favor of a `try` that big, but I'm not capable of making it any more explicit.\r\n\r\n> This change makes the unnecessary assumption that whatever `open()` returns has a `closed` attribute that changes with a call to `.close()`.\r\n\r\nNo assumption is made, [since what ever `open` returns is based on `IOBase`, which define the attribute `closed`](https://docs.python.org/2/library/io.html#io.IOBase.closed).",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T11:06:56Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}\n+\n+    if workdir is None: workdir = tempfile.mkdtemp()\n+    header, cur_file = [], None\n+    with open(tree_file) as f:\n+        try:\n+            for line in f:\n+                if line.startswith('#####'):\n+                    filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n+                    path = os.path.join(workdir, filename)\n+                    if not os.path.exists(os.path.dirname(path)):\n+                        os.makedirs(os.path.dirname(path))\n+                    cur_file.close()\n+                    cur_file = open(path, 'w')\n+                elif not getattr(cur_file, 'closed', True):",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381931752",
            "id": 381931752,
            "in_reply_to_id": 381900354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkzMTc1Mg==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 61,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 361815144,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381931752",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381932237"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381932237"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think so.  Let me try if it works.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T11:08:03Z",
            "diff_hunk": "@@ -1766,21 +1762,19 @@ def runTest(self):\n         cmd = []\n         out = []\n         err = []\n-        for command_no, command in enumerate(filter(None, commands.splitlines()), 1):\n+        for command_no, command in enumerate(self.commands, 1):\n             with self.stats.time('%s(%d)' % (self.name, command_no), 'c',\n-                                 'etoe-build' if ' setup.py ' in command else 'etoe-run'):\n+                                 'etoe-build' if 'setup.py' in command else 'etoe-run'):\n                 if self.capture:\n                     p = subprocess.Popen(command,\n-                                     stderr=subprocess.PIPE,\n-                                     stdout=subprocess.PIPE,\n-                                     shell=True,\n-                                     env=env)\n+                                         stderr=subprocess.PIPE,\n+                                         stdout=subprocess.PIPE,\n+                                         shell=True,",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381932237",
            "id": 381932237,
            "in_reply_to_id": 381899112,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkzMjIzNw==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 49,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 361815778,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381932237",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381933439"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381933439"
                }
            },
            "author_association": "MEMBER",
            "body": "There used to be this code, which maps all cases back to `None`, and which I think is fairly explicit:\r\n```python\r\n               if cur_file is not None:\r\n                    f, cur_file = cur_file, None\r\n                    f.close()\r\n```",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T11:10:38Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}\n+\n+    if workdir is None: workdir = tempfile.mkdtemp()\n+    header, cur_file = [], None\n+    with open(tree_file) as f:\n+        try:\n+            for line in f:\n+                if line.startswith('#####'):\n+                    filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n+                    path = os.path.join(workdir, filename)\n+                    if not os.path.exists(os.path.dirname(path)):\n+                        os.makedirs(os.path.dirname(path))\n+                    cur_file.close()\n+                    cur_file = open(path, 'w')\n+                elif not getattr(cur_file, 'closed', True):",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381933439",
            "id": 381933439,
            "in_reply_to_id": 381900354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkzMzQzOQ==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 61,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 361817253,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:19:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381933439",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381976461"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381976461"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I understand, I'll revert to the previous code (edit: you already did it, thanks).  I made the change after unable to search for `self.cython_root` anywhere and thought a search to `EndToEndTest` would be faster to locate the variable's value.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T12:46:28Z",
            "diff_hunk": "@@ -1713,9 +1713,9 @@ def __init__(self, treefile, workdir, cleanup_workdir=True, stats=None,\n         self.cleanup_workdir = cleanup_workdir\n         self.stats = stats\n         self.capture = capture\n-        cython_syspath = [self.cython_root]\n+        cython_syspath = [EndToEndTest.cython_root]",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381976461",
            "id": 381976461,
            "in_reply_to_id": 381898320,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3NjQ2MQ==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 5,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 361872044,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:57:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381976461",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381977516"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381977516"
                }
            },
            "author_association": "MEMBER",
            "body": "No need, I already updated your branch.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T12:48:30Z",
            "diff_hunk": "@@ -1713,9 +1713,9 @@ def __init__(self, treefile, workdir, cleanup_workdir=True, stats=None,\n         self.cleanup_workdir = cleanup_workdir\n         self.stats = stats\n         self.capture = capture\n-        cython_syspath = [self.cython_root]\n+        cython_syspath = [EndToEndTest.cython_root]",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381977516",
            "id": 381977516,
            "in_reply_to_id": 381898320,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3NzUxNg==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 5,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 361873346,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:48:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381977516",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r381982342"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381982342"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Although I don't like the way this is handled, I think I'm OK with it if it's safer this way.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T12:59:01Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}\n+\n+    if workdir is None: workdir = tempfile.mkdtemp()\n+    header, cur_file = [], None\n+    with open(tree_file) as f:\n+        try:\n+            for line in f:\n+                if line.startswith('#####'):\n+                    filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n+                    path = os.path.join(workdir, filename)\n+                    if not os.path.exists(os.path.dirname(path)):\n+                        os.makedirs(os.path.dirname(path))\n+                    cur_file.close()\n+                    cur_file = open(path, 'w')\n+                elif not getattr(cur_file, 'closed', True):",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r381982342",
            "id": 381982342,
            "in_reply_to_id": 381900354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4MjM0Mg==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 61,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 361879614,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T12:59:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381982342",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r382061610"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382061610"
                }
            },
            "author_association": "MEMBER",
            "body": "It's ok to disagree on solutions. Here's why I chose the original code over your proposal.\r\n\r\nIMHO (!), `getattr()` has two use cases. The good one is to read an attribute by string name. And the smelly one is to check for an attribute and read it if it's there. It feels smelly because it's fairly broad – there may be many reasons why such an attribute does not exist, and some of them may be bugs or at least unintended. And for the innocent reader, it's difficult to understand what the originally considered and correctly covered reasons were.\r\n\r\nIn your case, I assume that you were only expecting `None` to hit the \"no such attribute\" case. That may be so – as long as things really work as expected and no-one replaces the builtin `open`, for example (fine, that's probably acceptable). For a future reader, however, it may take a while to understand that this is the only intended case, and that changing this code will not lead to unintended bugs due to other, not so obvious cases.\r\n\r\nIf, instead, I write `is not None`, then it's immediately clear that this is the only intended case. And looking at the other usages will somewhat quickly make it clear in which cases `None` can appear. For me, that's a reason to prefer the original version.",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-20T15:11:56Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}\n+\n+    if workdir is None: workdir = tempfile.mkdtemp()\n+    header, cur_file = [], None\n+    with open(tree_file) as f:\n+        try:\n+            for line in f:\n+                if line.startswith('#####'):\n+                    filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n+                    path = os.path.join(workdir, filename)\n+                    if not os.path.exists(os.path.dirname(path)):\n+                        os.makedirs(os.path.dirname(path))\n+                    cur_file.close()\n+                    cur_file = open(path, 'w')\n+                elif not getattr(cur_file, 'closed', True):",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r382061610",
            "id": 382061610,
            "in_reply_to_id": 381900354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MTYxMA==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 61,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 361981731,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-20T15:11:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382061610",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3372#discussion_r382448278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3372"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382448278"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the insight, especially the forward-compatibility/gotchas!",
            "commit_id": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "created_at": "2020-02-21T08:18:05Z",
            "diff_hunk": "@@ -184,34 +186,35 @@ def visit_CompilerDirectivesNode(self, node):\n     visit_Node = VisitorTransform.recurse_to_children\n \n \n-def unpack_source_tree(tree_file, dir=None):\n-    if dir is None:\n-        dir = tempfile.mkdtemp()\n-    header = []\n-    cur_file = None\n-    f = open(tree_file)\n-    try:\n-        lines = f.readlines()\n-    finally:\n-        f.close()\n-    del f\n-    try:\n-        for line in lines:\n-            if line[:5] == '#####':\n-                filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n-                path = os.path.join(dir, filename)\n-                if not os.path.exists(os.path.dirname(path)):\n-                    os.makedirs(os.path.dirname(path))\n-                if cur_file is not None:\n-                    f, cur_file = cur_file, None\n-                    f.close()\n-                cur_file = open(path, 'w')\n-            elif cur_file is not None:\n-                cur_file.write(line)\n-            elif line.strip() and not line.lstrip().startswith('#'):\n-                if line.strip() not in ('\"\"\"', \"'''\"):\n-                    header.append(line)\n-    finally:\n-        if cur_file is not None:\n-            cur_file.close()\n-    return dir, ''.join(header)\n+def unpack_source_tree(tree_file, workdir, cython_root):\n+    programs = {'PYTHON': [sys.executable],\n+                'CYTHON': [sys.executable, os.path.join(cython_root, 'cython.py')],\n+                'CYTHONIZE': [sys.executable, os.path.join(cython_root, 'cythonize.py')]}\n+\n+    if workdir is None: workdir = tempfile.mkdtemp()\n+    header, cur_file = [], None\n+    with open(tree_file) as f:\n+        try:\n+            for line in f:\n+                if line.startswith('#####'):\n+                    filename = line.strip().strip('#').strip().replace('/', os.path.sep)\n+                    path = os.path.join(workdir, filename)\n+                    if not os.path.exists(os.path.dirname(path)):\n+                        os.makedirs(os.path.dirname(path))\n+                    cur_file.close()\n+                    cur_file = open(path, 'w')\n+                elif not getattr(cur_file, 'closed', True):",
            "html_url": "https://github.com/cython/cython/pull/3372#discussion_r382448278",
            "id": 382448278,
            "in_reply_to_id": 381900354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0ODI3OA==",
            "original_commit_id": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "original_position": 61,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 362459963,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3372",
            "updated_at": "2020-02-21T08:18:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382448278",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3372/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6677f384a77944c8fcb796a624bb0ca8304c423b/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T09:34:54Z",
                    "email": "vn.mcsinyx@gmail.com",
                    "name": "Nguyễn Gia Phong"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T09:34:54Z",
                    "email": "vn.mcsinyx@gmail.com",
                    "name": "Nguyễn Gia Phong"
                },
                "message": "Let tests run when Python executable path contains whitespace",
                "tree": {
                    "sha": "c8fd7dbd7ac7b34476e3331c275c8af018180a0b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c8fd7dbd7ac7b34476e3331c275c8af018180a0b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6677f384a77944c8fcb796a624bb0ca8304c423b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            },
            "html_url": "https://github.com/cython/cython/commit/6677f384a77944c8fcb796a624bb0ca8304c423b",
            "node_id": "MDY6Q29tbWl0MjQxODQ0NjE4OjY2NzdmMzg0YTc3OTQ0YzhmY2I3OTZhNjI0YmIwY2E4MzA0YzQyM2I=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3a7fafdb07831e61752963a6d46b2be41513d637",
                    "sha": "3a7fafdb07831e61752963a6d46b2be41513d637",
                    "url": "https://api.github.com/repos/cython/cython/commits/3a7fafdb07831e61752963a6d46b2be41513d637"
                }
            ],
            "sha": "6677f384a77944c8fcb796a624bb0ca8304c423b",
            "url": "https://api.github.com/repos/cython/cython/commits/6677f384a77944c8fcb796a624bb0ca8304c423b"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T11:09:36Z",
                    "email": "vn.mcsinyx@gmail.com",
                    "name": "Nguyễn Gia Phong"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T11:09:36Z",
                    "email": "vn.mcsinyx@gmail.com",
                    "name": "Nguyễn Gia Phong"
                },
                "message": "Follow suggested changes (to be squashed with above)",
                "tree": {
                    "sha": "ace7e4f91a53d713976e5b7c0e088dc445c617e7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ace7e4f91a53d713976e5b7c0e088dc445c617e7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            },
            "html_url": "https://github.com/cython/cython/commit/10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8",
            "node_id": "MDY6Q29tbWl0MjQxODQ0NjE4OjEwYzI4MWIyYTdkNjk3YzRhNjg0ZjdkOWM3MjdhMWQzYjQyYzViYjg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6677f384a77944c8fcb796a624bb0ca8304c423b",
                    "sha": "6677f384a77944c8fcb796a624bb0ca8304c423b",
                    "url": "https://api.github.com/repos/cython/cython/commits/6677f384a77944c8fcb796a624bb0ca8304c423b"
                }
            ],
            "sha": "10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8",
            "url": "https://api.github.com/repos/cython/cython/commits/10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4a3e9b84c00b3444372a40e98c3d8bf8868e55eb/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T12:15:21Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "Stefan Behnel"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T12:15:21Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Avoid an unspecific \"getattr()\" in faviour of explicit close() handling",
                "tree": {
                    "sha": "e71a16bdb91752537d6772a28bd728597e84825b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e71a16bdb91752537d6772a28bd728597e84825b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4a3e9b84c00b3444372a40e98c3d8bf8868e55eb",
                "verification": {
                    "payload": "tree e71a16bdb91752537d6772a28bd728597e84825b\nparent 10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8\nauthor Stefan Behnel <stefan_ml@behnel.de> 1582200921 +0100\ncommitter GitHub <noreply@github.com> 1582200921 +0100\n\nAvoid an unspecific \"getattr()\" in faviour of explicit close() handling",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeTnhZCRBK7hj4Ov3rIwAAdHIIABe1TaPXjTGD0bh5sDN//vAO\nTEMExNScpujhbomxBRnlOie3wg4pbNMuoV+gYlLq79nCIb8W+AkGoLYalGn9GwbP\nxZTNzibKzw8Qo/bnLVH2W0xP1Cwvn8ehB3PoD76OObwMEt7AS3RBMzTToWUpsXJ6\n+efhmhDLlSZ/QeDV9ypbO68rtaRnZcQql+EzQJpna2oCRUO4/e/uTZAO6UNSEpYm\nCJk7x2dath9g1zKOt7b9RGzr7tIV5V3g0SW0ZB6xoYHlFNwHmZiO1Vm0DC7hKOwY\nx7TMao/tQsxGoOBw7vqYUJX9TtBx2h63BdovSxIC3rInswxJPgbywwxGyrW0hjg=\n=OsMB\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/4a3e9b84c00b3444372a40e98c3d8bf8868e55eb",
            "node_id": "MDY6Q29tbWl0MjQxODQ0NjE4OjRhM2U5Yjg0YzAwYjM0NDQzNzJhNDBlOThjM2Q4YmY4ODY4ZTU1ZWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8",
                    "sha": "10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8",
                    "url": "https://api.github.com/repos/cython/cython/commits/10c281b2a7d697c4a684f7d9c727a1d3b42c5bb8"
                }
            ],
            "sha": "4a3e9b84c00b3444372a40e98c3d8bf8868e55eb",
            "url": "https://api.github.com/repos/cython/cython/commits/4a3e9b84c00b3444372a40e98c3d8bf8868e55eb"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/463669276438e68e15a2b6197ace33a13761f2dc/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T12:17:40Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "Stefan Behnel"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T12:17:40Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Revert class-name dependency",
                "tree": {
                    "sha": "efff7022f51b9aeeceb3a3e5700f6e0ad9ee08f1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/efff7022f51b9aeeceb3a3e5700f6e0ad9ee08f1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/463669276438e68e15a2b6197ace33a13761f2dc",
                "verification": {
                    "payload": "tree efff7022f51b9aeeceb3a3e5700f6e0ad9ee08f1\nparent 4a3e9b84c00b3444372a40e98c3d8bf8868e55eb\nauthor Stefan Behnel <stefan_ml@behnel.de> 1582201060 +0100\ncommitter GitHub <noreply@github.com> 1582201060 +0100\n\nRevert class-name dependency",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeTnjkCRBK7hj4Ov3rIwAAdHIIAKphB2V4eYRY/ebOSE02UV82\nHH9ZoZypAt1dSmnNGVXQeLLnkhpgiK5An3HXx9ZFJtb6x+GmTnL+K6WUTjvvOwfN\nQHyKm6fd5Hz23uX+97KEka5YRDibETHiFbBi5w7Hq7R0lJLjDD5tVAo2Qbd1+1wO\nnitpE9oGeA/7n0Gxq1jKJqUQcQfYxuYhnlU1TkrPvgEkMAF4A8Oppk4QGsY1Jkm4\nyBa+DG1Z3Vz0QEB4VLVsf9KAdNFZhr2AACQ5eRU0eBa5yp5hZ+kg/lEShaNCaMJ9\nHQod9vSRUdsReIoQZtZXu7Po7N7o/1JRxl7AGp+bZZJiq5CXtoXYQiiB+3mQUhs=\n=qwVQ\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/463669276438e68e15a2b6197ace33a13761f2dc",
            "node_id": "MDY6Q29tbWl0MjQxODQ0NjE4OjQ2MzY2OTI3NjQzOGU2OGUxNWEyYjYxOTdhY2UzM2ExMzc2MWYyZGM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4a3e9b84c00b3444372a40e98c3d8bf8868e55eb",
                    "sha": "4a3e9b84c00b3444372a40e98c3d8bf8868e55eb",
                    "url": "https://api.github.com/repos/cython/cython/commits/4a3e9b84c00b3444372a40e98c3d8bf8868e55eb"
                }
            ],
            "sha": "463669276438e68e15a2b6197ace33a13761f2dc",
            "url": "https://api.github.com/repos/cython/cython/commits/463669276438e68e15a2b6197ace33a13761f2dc"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T12:19:19Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "Stefan Behnel"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T12:19:19Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Avoid variable name collision",
                "tree": {
                    "sha": "1e94e1ec9d9d553418b152f1e6657340a417a0a7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1e94e1ec9d9d553418b152f1e6657340a417a0a7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
                "verification": {
                    "payload": "tree 1e94e1ec9d9d553418b152f1e6657340a417a0a7\nparent 463669276438e68e15a2b6197ace33a13761f2dc\nauthor Stefan Behnel <stefan_ml@behnel.de> 1582201159 +0100\ncommitter GitHub <noreply@github.com> 1582201159 +0100\n\nAvoid variable name collision",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeTnlHCRBK7hj4Ov3rIwAAdHIIAGKbekTya6OOUaDjKLJS0Qy0\nLfcWMKeVmIWK2LPOPL1zpbOWDWMdljREKGDAE9rLzPCX9OSLZTuHBq699wsxL5Vh\nBTtFyIaMrgmQDcGcAVnHpGjcg2FwdbHFarBgXX9TUdRutzEJbaa8NtP8GxjZR7p1\ntXbCBpVJJcHOH6LkMIC6hrFHQWCE1QKSceKJQAzyonG69QvPsvb6A/SbjfFJrakO\nmoBgMcIG7rS1BubtXfh1cCgiePvgahFXlStTa4HUSYNccUOf3LMYRQN5xpAGezdO\nFST++bnMJkNNmMSuvw35zqhpv2TteVQN0Sxi96tWtH1hZQCn/xBO1MqGcTJxm3I=\n=SQSL\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "node_id": "MDY6Q29tbWl0MjQxODQ0NjE4OmE3ZTljZjU2Y2EzZTU5MjNkYjRjZGViMGQzN2RhNDNiYzRhODU4MzE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/463669276438e68e15a2b6197ace33a13761f2dc",
                    "sha": "463669276438e68e15a2b6197ace33a13761f2dc",
                    "url": "https://api.github.com/repos/cython/cython/commits/463669276438e68e15a2b6197ace33a13761f2dc"
                }
            ],
            "sha": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
            "url": "https://api.github.com/repos/cython/cython/commits/a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3372/commits",
    "created_at": "2020-02-20T09:40:32Z",
    "diff_url": "https://github.com/cython/cython/pull/3372.diff",
    "head": {
        "label": "McSinyx:test-proc",
        "ref": "test-proc",
        "repo": {
            "archive_url": "https://api.github.com/repos/McSinyx/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/McSinyx/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/McSinyx/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/McSinyx/cython/branches{/branch}",
            "clone_url": "https://github.com/McSinyx/cython.git",
            "collaborators_url": "https://api.github.com/repos/McSinyx/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/McSinyx/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/McSinyx/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/McSinyx/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/McSinyx/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/McSinyx/cython/contributors",
            "created_at": "2020-02-20T09:33:57Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/McSinyx/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/McSinyx/cython/downloads",
            "events_url": "https://api.github.com/repos/McSinyx/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/McSinyx/cython/forks",
            "full_name": "McSinyx/cython",
            "git_commits_url": "https://api.github.com/repos/McSinyx/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/McSinyx/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/McSinyx/cython/git/tags{/sha}",
            "git_url": "git://github.com/McSinyx/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/McSinyx/cython/hooks",
            "html_url": "https://github.com/McSinyx/cython",
            "id": 241844618,
            "issue_comment_url": "https://api.github.com/repos/McSinyx/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/McSinyx/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/McSinyx/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/McSinyx/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/McSinyx/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/McSinyx/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/McSinyx/cython/merges",
            "milestones_url": "https://api.github.com/repos/McSinyx/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNDE4NDQ2MTg=",
            "notifications_url": "https://api.github.com/repos/McSinyx/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/McSinyx/cython/pulls{/number}",
            "pushed_at": "2020-02-20T12:19:21Z",
            "releases_url": "https://api.github.com/repos/McSinyx/cython/releases{/id}",
            "size": 56548,
            "ssh_url": "git@github.com:McSinyx/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/McSinyx/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/McSinyx/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/McSinyx/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/McSinyx/cython/subscription",
            "svn_url": "https://github.com/McSinyx/cython",
            "tags_url": "https://api.github.com/repos/McSinyx/cython/tags",
            "teams_url": "https://api.github.com/repos/McSinyx/cython/teams",
            "trees_url": "https://api.github.com/repos/McSinyx/cython/git/trees{/sha}",
            "updated_at": "2020-02-20T09:33:59Z",
            "url": "https://api.github.com/repos/McSinyx/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
        "user": {
            "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
            "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
            "followers_url": "https://api.github.com/users/McSinyx/followers",
            "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
            "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/McSinyx",
            "id": 13689192,
            "login": "McSinyx",
            "node_id": "MDQ6VXNlcjEzNjg5MTky",
            "organizations_url": "https://api.github.com/users/McSinyx/orgs",
            "received_events_url": "https://api.github.com/users/McSinyx/received_events",
            "repos_url": "https://api.github.com/users/McSinyx/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/McSinyx"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3372",
    "id": 377649094,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3372",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "4eafb11a4b939c8f18baa19e45554b6411eb5120",
    "merged_at": "2020-02-20T15:15:06Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc3NjQ5MDk0",
    "number": 3372,
    "patch_url": "https://github.com/cython/cython/pull/3372.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3372/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/a7e9cf56ca3e5923db4cdeb0d37da43bc4a85831",
    "title": "Let tests run when Python executable path contains whitespace",
    "updated_at": "2020-02-21T08:18:06Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3372",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
        "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
        "followers_url": "https://api.github.com/users/McSinyx/followers",
        "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
        "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/McSinyx",
        "id": 13689192,
        "login": "McSinyx",
        "node_id": "MDQ6VXNlcjEzNjg5MTky",
        "organizations_url": "https://api.github.com/users/McSinyx/orgs",
        "received_events_url": "https://api.github.com/users/McSinyx/received_events",
        "repos_url": "https://api.github.com/users/McSinyx/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/McSinyx"
    }
}