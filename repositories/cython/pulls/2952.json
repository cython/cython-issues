{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/2952/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2952/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/2952"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/2952"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2952/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2952"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/c99a123dc948e43af5fee84f0bc4b409c71e292d"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 838,
            "forks_count": 838,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 642,
            "open_issues_count": 642,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2019-05-20T18:36:59Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 54721,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4086,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2019-05-21T10:04:13Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4086,
            "watchers_count": 4086
        },
        "sha": "652f061d47128a64fed793f8d54d352620ba934a",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Right now there are at least three different option/arguments parser:\r\n\r\n    1. parser for cython.py (uses no external libraries)\r\n    2. parser for cythonize.py (uses optparse)\r\n    3. parser for IPython-magic (based on argparse)\r\n\r\nFor adding/changing new options one has to understand all 3 way, there are also some discrepancies - for example `-3str` option is missed in IPython-magic's command line.\r\n\r\nSince Cython no longer supports Python2.6 it is possible to use `argparse` and drop deprecated `optparse`.\r\n\r\nThe only behavior chance of this PR is a slightly different help message.",
    "closed_at": "2019-05-20T18:25:30Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285390636"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285390636"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think this needs to be a `CythonTest` (which is more for running the compiler and capturing errors etc.). A simple `unittest.TestCase` should be enough.",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T17:51:06Z",
            "diff_hunk": "@@ -0,0 +1,268 @@\n+from Cython.Build.Cythonize import create_args_parser, parse_args_raw, parse_args\n+from Cython.TestUtils import CythonTest\n+\n+\n+class TestCythonizeArgsParser(CythonTest):",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285390636",
            "id": 285390636,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5MDYzNg==",
            "original_commit_id": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "original_position": 5,
            "path": "Cython/Build/Tests/TestCythonizeArgsParser.py",
            "position": null,
            "pull_request_review_id": 239247892,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285390636",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285390832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285390832"
                }
            },
            "author_association": "MEMBER",
            "body": "> really?\r\n\r\nHmm, no, certainly not, totally worth fixing. Thanks for testing it. :)",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T17:56:29Z",
            "diff_hunk": "@@ -0,0 +1,268 @@\n+from Cython.Build.Cythonize import create_args_parser, parse_args_raw, parse_args\n+from Cython.TestUtils import CythonTest\n+\n+\n+class TestCythonizeArgsParser(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.parse_args = lambda x, parser=create_args_parser() : parse_args_raw(parser, x)\n+\n+\n+    def are_default(self, options, skip):\n+        # empty containers\n+        empty_containers = ['directives', 'compile_time_env', 'options', 'excludes']\n+        are_none = ['language_level', 'annotate', 'build', 'build_inplace', 'force', 'quiet', 'lenient', 'keep_going', 'no_docstrings']\n+        for opt_name in empty_containers:\n+            if len(getattr(options, opt_name))!=0 and (not opt_name in skip):\n+                self.assertEqual(opt_name,\"\")\n+                return False\n+        for opt_name in are_none:\n+            if (getattr(options, opt_name) is not None) and (not opt_name in skip):\n+                self.assertEqual(opt_name,\"\")\n+                return False\n+        if options.parallel!=3 and (not 'parallel' in skip):\n+            return False\n+        return True\n+\n+    def test_directive_short(self):\n+        options, args =  self.parse_args(['-X', 'cdivision=True'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+\n+    def test_directive_long(self):\n+        options, args =  self.parse_args(['--directive', 'cdivision=True'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+\n+    def test_directive_multiple(self):\n+        options, args =  self.parse_args(['-X', 'cdivision=True', '-X', 'c_string_type=bytes'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+        self.assertEqual(options.directives['c_string_type'], 'bytes')\n+\n+    def test_directive_multiple_v2(self):\n+        options, args =  self.parse_args(['-X', 'cdivision=True,c_string_type=bytes'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+        self.assertEqual(options.directives['c_string_type'], 'bytes')\n+\n+    def test_compile_time_env_short(self):\n+        options, args =  self.parse_args(['-E', 'MYSIZE=10'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['compile_time_env']))\n+        self.assertEqual(options.compile_time_env['MYSIZE'], 10)\n+\n+    def test_compile_time_env_long(self):\n+        options, args =  self.parse_args(['--compile-time-env', 'MYSIZE=10'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['compile_time_env']))\n+        self.assertEqual(options.compile_time_env['MYSIZE'], 10)\n+\n+    def test_compile_time_env_multiple(self):\n+        options, args =  self.parse_args(['-E', 'MYSIZE=10', '-E', 'ARRSIZE=11'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['compile_time_env']))\n+        self.assertEqual(options.compile_time_env['MYSIZE'], 10)\n+        self.assertEqual(options.compile_time_env['ARRSIZE'], 11)\n+\n+    def test_compile_time_env_multiple_v2(self):\n+        options, args =  self.parse_args(['-E', 'MYSIZE=10,ARRSIZE=11'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['compile_time_env']))\n+        self.assertEqual(options.compile_time_env['MYSIZE'], 10)\n+        self.assertEqual(options.compile_time_env['ARRSIZE'], 11)\n+\n+    def test_option_short(self):\n+        options, args =  self.parse_args(['-s', 'docstrings=True'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['options']))\n+        self.assertEqual(options.options['docstrings'], True)\n+\n+    def test_option_long(self):\n+        options, args =  self.parse_args(['--option', 'docstrings=True'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['options']))\n+        self.assertEqual(options.options['docstrings'], True)\n+\n+    def test_option_multiple(self):\n+        options, args =  self.parse_args(['-s', 'docstrings=True', '-s', 'buffer_max_dims=8'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['options']))\n+        self.assertEqual(options.options['docstrings'], True)\n+        self.assertEqual(options.options['buffer_max_dims'], True) #  really?",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285390832",
            "id": 285390832,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5MDgzMg==",
            "original_commit_id": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "original_position": 97,
            "path": "Cython/Build/Tests/TestCythonizeArgsParser.py",
            "position": 157,
            "pull_request_review_id": 239247892,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285390832",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285390901"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285390901"
                }
            },
            "author_association": "MEMBER",
            "body": "A couple of error tests for the value validation would be nice.",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T17:58:24Z",
            "diff_hunk": "@@ -0,0 +1,268 @@\n+from Cython.Build.Cythonize import create_args_parser, parse_args_raw, parse_args\n+from Cython.TestUtils import CythonTest\n+\n+\n+class TestCythonizeArgsParser(CythonTest):",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285390901",
            "id": 285390901,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5MDkwMQ==",
            "original_commit_id": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "original_position": 5,
            "path": "Cython/Build/Tests/TestCythonizeArgsParser.py",
            "position": null,
            "pull_request_review_id": 239247892,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285390901",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285391001"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285391001"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe make use of the option `type` here? That could solve the `buffer_max_ndims` problem.",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T18:01:15Z",
            "diff_hunk": "@@ -148,56 +119,93 @@ def run_distutils(args):\n                 shutil.rmtree(temp_dir)\n \n \n-def parse_args(args):\n-    from optparse import OptionParser\n-    parser = OptionParser(usage='%prog [options] [sources and packages]+')\n+def create_args_parser():\n+    from argparse import ArgumentParser, Action\n+\n+    class ParseDirectivesAction(Action):\n+        def __call__(self, parser, namespace, values, option_string=None):\n+            old_directives = dict(getattr(namespace, self.dest,\n+                                          Options.get_directive_defaults()))\n+            directives = Options.parse_directive_list(\n+                values, relaxed_bool=True, current_settings=old_directives)\n+            setattr(namespace, self.dest, directives)\n+\n+    class ParseOptionsAction(Action):\n+        def __call__(self, parser, namespace, values, option_string=None):",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285391001",
            "id": 285391001,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5MTAwMQ==",
            "original_commit_id": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "original_position": 55,
            "path": "Cython/Build/Cythonize.py",
            "position": 55,
            "pull_request_review_id": 239247892,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285391001",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285398610"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285398610"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done.",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T21:35:13Z",
            "diff_hunk": "@@ -0,0 +1,268 @@\n+from Cython.Build.Cythonize import create_args_parser, parse_args_raw, parse_args\n+from Cython.TestUtils import CythonTest\n+\n+\n+class TestCythonizeArgsParser(CythonTest):",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285398610",
            "id": 285398610,
            "in_reply_to_id": 285390636,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5ODYxMA==",
            "original_commit_id": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "original_position": 5,
            "path": "Cython/Build/Tests/TestCythonizeArgsParser.py",
            "position": null,
            "pull_request_review_id": 239256257,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285398610",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285398870"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285398870"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ok, here I got confused. Because `--options` are not for Compiler-options  (which `buffer_max_dims` is, see https://cython.readthedocs.io/en/latest/src/userguide/source_files_and_compilation.html#compiler-options), but then it is not really documented (or I have missed this part) what those options are. They seems to accept any keyword (https://github.com/cython/cython/pull/2952/commits/fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146#diff-04f8641896f9a54d3de3abf279f486c4R208) but it can be only true or false.",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T21:43:33Z",
            "diff_hunk": "@@ -0,0 +1,268 @@\n+from Cython.Build.Cythonize import create_args_parser, parse_args_raw, parse_args\n+from Cython.TestUtils import CythonTest\n+\n+\n+class TestCythonizeArgsParser(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.parse_args = lambda x, parser=create_args_parser() : parse_args_raw(parser, x)\n+\n+\n+    def are_default(self, options, skip):\n+        # empty containers\n+        empty_containers = ['directives', 'compile_time_env', 'options', 'excludes']\n+        are_none = ['language_level', 'annotate', 'build', 'build_inplace', 'force', 'quiet', 'lenient', 'keep_going', 'no_docstrings']\n+        for opt_name in empty_containers:\n+            if len(getattr(options, opt_name))!=0 and (not opt_name in skip):\n+                self.assertEqual(opt_name,\"\")\n+                return False\n+        for opt_name in are_none:\n+            if (getattr(options, opt_name) is not None) and (not opt_name in skip):\n+                self.assertEqual(opt_name,\"\")\n+                return False\n+        if options.parallel!=3 and (not 'parallel' in skip):\n+            return False\n+        return True\n+\n+    def test_directive_short(self):\n+        options, args =  self.parse_args(['-X', 'cdivision=True'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+\n+    def test_directive_long(self):\n+        options, args =  self.parse_args(['--directive', 'cdivision=True'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+\n+    def test_directive_multiple(self):\n+        options, args =  self.parse_args(['-X', 'cdivision=True', '-X', 'c_string_type=bytes'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+        self.assertEqual(options.directives['c_string_type'], 'bytes')\n+\n+    def test_directive_multiple_v2(self):\n+        options, args =  self.parse_args(['-X', 'cdivision=True,c_string_type=bytes'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+        self.assertEqual(options.directives['c_string_type'], 'bytes')\n+\n+    def test_compile_time_env_short(self):\n+        options, args =  self.parse_args(['-E', 'MYSIZE=10'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['compile_time_env']))\n+        self.assertEqual(options.compile_time_env['MYSIZE'], 10)\n+\n+    def test_compile_time_env_long(self):\n+        options, args =  self.parse_args(['--compile-time-env', 'MYSIZE=10'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['compile_time_env']))\n+        self.assertEqual(options.compile_time_env['MYSIZE'], 10)\n+\n+    def test_compile_time_env_multiple(self):\n+        options, args =  self.parse_args(['-E', 'MYSIZE=10', '-E', 'ARRSIZE=11'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['compile_time_env']))\n+        self.assertEqual(options.compile_time_env['MYSIZE'], 10)\n+        self.assertEqual(options.compile_time_env['ARRSIZE'], 11)\n+\n+    def test_compile_time_env_multiple_v2(self):\n+        options, args =  self.parse_args(['-E', 'MYSIZE=10,ARRSIZE=11'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['compile_time_env']))\n+        self.assertEqual(options.compile_time_env['MYSIZE'], 10)\n+        self.assertEqual(options.compile_time_env['ARRSIZE'], 11)\n+\n+    def test_option_short(self):\n+        options, args =  self.parse_args(['-s', 'docstrings=True'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['options']))\n+        self.assertEqual(options.options['docstrings'], True)\n+\n+    def test_option_long(self):\n+        options, args =  self.parse_args(['--option', 'docstrings=True'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['options']))\n+        self.assertEqual(options.options['docstrings'], True)\n+\n+    def test_option_multiple(self):\n+        options, args =  self.parse_args(['-s', 'docstrings=True', '-s', 'buffer_max_dims=8'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['options']))\n+        self.assertEqual(options.options['docstrings'], True)\n+        self.assertEqual(options.options['buffer_max_dims'], True) #  really?",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285398870",
            "id": 285398870,
            "in_reply_to_id": 285390832,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5ODg3MA==",
            "original_commit_id": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "original_position": 97,
            "path": "Cython/Build/Tests/TestCythonizeArgsParser.py",
            "position": 157,
            "pull_request_review_id": 239256540,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285398870",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285398894"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285398894"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Not sure I understood what you mean, but I have added some more tests testing the behavior of parse_directives and parse_options.",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T21:44:26Z",
            "diff_hunk": "@@ -0,0 +1,268 @@\n+from Cython.Build.Cythonize import create_args_parser, parse_args_raw, parse_args\n+from Cython.TestUtils import CythonTest\n+\n+\n+class TestCythonizeArgsParser(CythonTest):",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285398894",
            "id": 285398894,
            "in_reply_to_id": 285390901,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5ODg5NA==",
            "original_commit_id": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "original_position": 5,
            "path": "Cython/Build/Tests/TestCythonizeArgsParser.py",
            "position": null,
            "pull_request_review_id": 239256565,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285398894",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285398995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285398995"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I would like to keep this PR without behavioral changes (also because I think it could become a bigger thing as one might expect, see also https://github.com/cython/cython/pull/2952#discussion_r285398870). So not sure about this. ",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T21:47:22Z",
            "diff_hunk": "@@ -148,56 +119,93 @@ def run_distutils(args):\n                 shutil.rmtree(temp_dir)\n \n \n-def parse_args(args):\n-    from optparse import OptionParser\n-    parser = OptionParser(usage='%prog [options] [sources and packages]+')\n+def create_args_parser():\n+    from argparse import ArgumentParser, Action\n+\n+    class ParseDirectivesAction(Action):\n+        def __call__(self, parser, namespace, values, option_string=None):\n+            old_directives = dict(getattr(namespace, self.dest,\n+                                          Options.get_directive_defaults()))\n+            directives = Options.parse_directive_list(\n+                values, relaxed_bool=True, current_settings=old_directives)\n+            setattr(namespace, self.dest, directives)\n+\n+    class ParseOptionsAction(Action):\n+        def __call__(self, parser, namespace, values, option_string=None):",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285398995",
            "id": 285398995,
            "in_reply_to_id": 285391001,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5ODk5NQ==",
            "original_commit_id": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "original_position": 55,
            "path": "Cython/Build/Cythonize.py",
            "position": 55,
            "pull_request_review_id": 239256675,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285398995",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2952#discussion_r285399109"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2952"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/285399109"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I would expect the parser to raise  an error for `-X  language_level=4` but it doesn't currently.",
            "commit_id": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "created_at": "2019-05-19T21:50:25Z",
            "diff_hunk": "@@ -51,6 +52,64 @@ def test_directive_multiple_v2(self):\n         self.assertEqual(options.directives['cdivision'], True)\n         self.assertEqual(options.directives['c_string_type'], 'bytes')\n \n+    def test_directive_value_yes(self):\n+        options, args =  self.parse_args(['-X', 'cdivision=YeS'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], True)\n+\n+    def test_directive_value_no(self):\n+        options, args =  self.parse_args(['-X', 'cdivision=no'])\n+        self.assertFalse(args)\n+        self.assertTrue(self.are_default(options, ['directives']))\n+        self.assertEqual(options.directives['cdivision'], False)\n+\n+    def test_directive_value_invalid(self):\n+        with self.assertRaises(ValueError) as context:\n+            options, args =  self.parse_args(['-X', 'cdivision=sadfasd'])\n+\n+    def test_directive_key_invalid(self):\n+        with self.assertRaises(ValueError) as context:\n+            options, args =  self.parse_args(['-X', 'abracadabra'])\n+\n+    def test_directive_no_value(self):\n+        with self.assertRaises(ValueError) as context:\n+            options, args =  self.parse_args(['-X', 'cdivision'])\n+\n+    def test_directives_types(self):\n+        directives = { \n+                'auto_pickle': True,    \n+                'c_string_type': 'bytearray',\n+                'c_string_type': 'bytes',\n+                'c_string_type': 'str',\n+                'c_string_type': 'bytearray',\n+                'c_string_type': 'unicode',\n+                'c_string_encoding' : 'ascii', \n+                'language_level' : 2,\n+                'language_level' : 3,\n+                'language_level' : '3str',\n+                'set_initial_path' : 'my_initial_path',\n+        }\n+        for key, value in directives.items():\n+            cmd = '{key}={value}'.format(key=key, value=str(value))\n+            options, args =  self.parse_args(['-X', cmd])\n+            self.assertFalse(args)\n+            self.assertTrue(self.are_default(options, ['directives']), msg = \"Error for option: \"+cmd)\n+            self.assertEqual(options.directives[key], value, msg = \"Error for option: \"+cmd)\n+\n+    def test_directives_wrong(self):\n+        directives = { \n+                'auto_pickle': 42,       # for bool type\n+                'auto_pickle': 'NONONO', # for bool type   \n+                'c_string_type': 'bites',\n+                #'c_string_encoding' : 'a',  \n+                #'language_level' : 4,",
            "html_url": "https://github.com/cython/cython/pull/2952#discussion_r285399109",
            "id": 285399109,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTM5OTEwOQ==",
            "original_commit_id": "fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146",
            "original_position": 63,
            "path": "Cython/Build/Tests/TestCythonizeArgsParser.py",
            "position": 106,
            "pull_request_review_id": 239256781,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2952",
            "updated_at": "2019-05-20T06:05:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/285399109",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2952/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cec82f45113fe23481e2b4cd4124811a9f322c0a/comments",
            "commit": {
                "author": {
                    "date": "2019-05-14T21:51:39Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-05-15T00:06:58Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "message": "extract create_args_parser(), add hook parse_args_raw and add unit-tests",
                "tree": {
                    "sha": "aa15a540ec6bd485a1696fe58160016531b7f047",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/aa15a540ec6bd485a1696fe58160016531b7f047"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cec82f45113fe23481e2b4cd4124811a9f322c0a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "html_url": "https://github.com/cython/cython/commit/cec82f45113fe23481e2b4cd4124811a9f322c0a",
            "node_id": "MDY6Q29tbWl0MTM5MDk4NTI0OmNlYzgyZjQ1MTEzZmUyMzQ4MWUyYjRjZDQxMjQ4MTFhOWYzMjJjMGE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/652f061d47128a64fed793f8d54d352620ba934a",
                    "sha": "652f061d47128a64fed793f8d54d352620ba934a",
                    "url": "https://api.github.com/repos/cython/cython/commits/652f061d47128a64fed793f8d54d352620ba934a"
                }
            ],
            "sha": "cec82f45113fe23481e2b4cd4124811a9f322c0a",
            "url": "https://api.github.com/repos/cython/cython/commits/cec82f45113fe23481e2b4cd4124811a9f322c0a"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/80e05d827d891b49fee554fa89e92cd0d3693f91/comments",
            "commit": {
                "author": {
                    "date": "2019-05-14T22:54:33Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-05-15T00:07:15Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "message": "using argparse instead of optparse",
                "tree": {
                    "sha": "711b84e7ff3423bba50879e36e50e06e428a0e86",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/711b84e7ff3423bba50879e36e50e06e428a0e86"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/80e05d827d891b49fee554fa89e92cd0d3693f91",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "html_url": "https://github.com/cython/cython/commit/80e05d827d891b49fee554fa89e92cd0d3693f91",
            "node_id": "MDY6Q29tbWl0MTM5MDk4NTI0OjgwZTA1ZDgyN2Q4OTFiNDlmZWU1NTRmYTg5ZTkyY2QwZDM2OTNmOTE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cec82f45113fe23481e2b4cd4124811a9f322c0a",
                    "sha": "cec82f45113fe23481e2b4cd4124811a9f322c0a",
                    "url": "https://api.github.com/repos/cython/cython/commits/cec82f45113fe23481e2b4cd4124811a9f322c0a"
                }
            ],
            "sha": "80e05d827d891b49fee554fa89e92cd0d3693f91",
            "url": "https://api.github.com/repos/cython/cython/commits/80e05d827d891b49fee554fa89e92cd0d3693f91"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58/comments",
            "commit": {
                "author": {
                    "date": "2019-05-15T00:08:04Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-05-15T00:08:04Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "message": "using default usage-message",
                "tree": {
                    "sha": "e016ea5e76b0a310bec0ecbef93274f7e67e64e5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e016ea5e76b0a310bec0ecbef93274f7e67e64e5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "html_url": "https://github.com/cython/cython/commit/3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "node_id": "MDY6Q29tbWl0MTM5MDk4NTI0OjNiNDAzZWI2Njk2ZjBmMDhjZDJlYWViOWQ4OTZiNWJiYzZhYzNkNTg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/80e05d827d891b49fee554fa89e92cd0d3693f91",
                    "sha": "80e05d827d891b49fee554fa89e92cd0d3693f91",
                    "url": "https://api.github.com/repos/cython/cython/commits/80e05d827d891b49fee554fa89e92cd0d3693f91"
                }
            ],
            "sha": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
            "url": "https://api.github.com/repos/cython/cython/commits/3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/774924bfd2215ab3011127f7ef069ce0c898350b/comments",
            "commit": {
                "author": {
                    "date": "2019-05-19T19:59:47Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-05-19T19:59:47Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "message": "using unittest.TestCase rather than CythonTest",
                "tree": {
                    "sha": "f8a920fe4a5f5bb1305ea3f571a9253fc09b3afa",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f8a920fe4a5f5bb1305ea3f571a9253fc09b3afa"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/774924bfd2215ab3011127f7ef069ce0c898350b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "html_url": "https://github.com/cython/cython/commit/774924bfd2215ab3011127f7ef069ce0c898350b",
            "node_id": "MDY6Q29tbWl0MTM5MDk4NTI0Ojc3NDkyNGJmZDIyMTVhYjMwMTExMjdmN2VmMDY5Y2UwYzg5ODM1MGI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
                    "sha": "3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58",
                    "url": "https://api.github.com/repos/cython/cython/commits/3b403eb6696f0f08cd2eaeb9d896b5bbc6ac3d58"
                }
            ],
            "sha": "774924bfd2215ab3011127f7ef069ce0c898350b",
            "url": "https://api.github.com/repos/cython/cython/commits/774924bfd2215ab3011127f7ef069ce0c898350b"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146/comments",
            "commit": {
                "author": {
                    "date": "2019-05-19T21:07:42Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-05-19T21:33:26Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "Egor Dranischnikow"
                },
                "message": "adding further test cases, testing the behavior of parse_directives and parse_options",
                "tree": {
                    "sha": "3eff7de983a2422d163a4d83fa5e8bbf1608e35d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3eff7de983a2422d163a4d83fa5e8bbf1608e35d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "html_url": "https://github.com/cython/cython/commit/fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146",
            "node_id": "MDY6Q29tbWl0MTM5MDk4NTI0OmZlN2VmZmQ1MWE5M2Q1ZDJlNzNjM2JmMmM2MmZlMGI4N2FjNTkxNDY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/774924bfd2215ab3011127f7ef069ce0c898350b",
                    "sha": "774924bfd2215ab3011127f7ef069ce0c898350b",
                    "url": "https://api.github.com/repos/cython/cython/commits/774924bfd2215ab3011127f7ef069ce0c898350b"
                }
            ],
            "sha": "fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146",
            "url": "https://api.github.com/repos/cython/cython/commits/fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c99a123dc948e43af5fee84f0bc4b409c71e292d/comments",
            "commit": {
                "author": {
                    "date": "2019-05-20T06:05:11Z",
                    "email": "egor.dranischnikow@googlemail.com",
                    "name": "realead"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-05-20T06:05:11Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "removing trailing white spaces",
                "tree": {
                    "sha": "520a58798b938d933ecabddb5bb1f28b34f77be1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/520a58798b938d933ecabddb5bb1f28b34f77be1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c99a123dc948e43af5fee84f0bc4b409c71e292d",
                "verification": {
                    "payload": "tree 520a58798b938d933ecabddb5bb1f28b34f77be1\nparent fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146\nauthor realead <egor.dranischnikow@googlemail.com> 1558332311 +0200\ncommitter GitHub <noreply@github.com> 1558332311 +0200\n\nremoving trailing white spaces",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc4kOXCRBK7hj4Ov3rIwAAdHIIAEntk5arTIalaTTsXbh3/Mt2\n0rZolz1tY5x/oVSh3EPPxymYt/yM5J4aK6/wsWugodzMZi0P4MVJLJLqgmGu4mU3\nzBGi0kkwmZZRkEPQJXuvrXo6I8GIorG+FMNnSdNxC0BvXPbb7Dqz1/cHF5kqJl9b\nrS3tQM6OY+koYKQ8SQfRk1FQheiknQgIn466YP4zA3X5agSXrSJWv+Xf9IDPg6Mi\nejz4VAq54S8KpQBioytrAuG9v1QfqrFUi0YIi9636jquYm+ZH+oOC8AXOkwl/LCW\nOpm7C5ga6QZS3mA+tEu+ShA/oPh8zBLf5rDUkghREPLFwIvv8+SfvGjyGmgDaEI=\n=Y1W3\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "node_id": "MDY6Q29tbWl0MTM5MDk4NTI0OmM5OWExMjNkYzk0OGU0M2FmNWZlZTg0ZjBiYzRiNDA5YzcxZTI5MmQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146",
                    "sha": "fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146",
                    "url": "https://api.github.com/repos/cython/cython/commits/fe7effd51a93d5d2e73c3bf2c62fe0b87ac59146"
                }
            ],
            "sha": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
            "url": "https://api.github.com/repos/cython/cython/commits/c99a123dc948e43af5fee84f0bc4b409c71e292d"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/2952/commits",
    "created_at": "2019-05-15T05:43:34Z",
    "diff_url": "https://github.com/cython/cython/pull/2952.diff",
    "head": {
        "label": "realead:replace_optparse_by_argparse",
        "ref": "replace_optparse_by_argparse",
        "repo": {
            "archive_url": "https://api.github.com/repos/realead/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/realead/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/realead/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/realead/cython/branches{/branch}",
            "clone_url": "https://github.com/realead/cython.git",
            "collaborators_url": "https://api.github.com/repos/realead/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/realead/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/realead/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/realead/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/realead/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/realead/cython/contributors",
            "created_at": "2018-06-29T03:53:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/realead/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/realead/cython/downloads",
            "events_url": "https://api.github.com/repos/realead/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/realead/cython/forks",
            "full_name": "realead/cython",
            "git_commits_url": "https://api.github.com/repos/realead/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/realead/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/realead/cython/git/tags{/sha}",
            "git_url": "git://github.com/realead/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/realead/cython/hooks",
            "html_url": "https://github.com/realead/cython",
            "id": 139098524,
            "issue_comment_url": "https://api.github.com/repos/realead/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/realead/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/realead/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/realead/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/realead/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/realead/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/realead/cython/merges",
            "milestones_url": "https://api.github.com/repos/realead/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMzkwOTg1MjQ=",
            "notifications_url": "https://api.github.com/repos/realead/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
                "events_url": "https://api.github.com/users/realead/events{/privacy}",
                "followers_url": "https://api.github.com/users/realead/followers",
                "following_url": "https://api.github.com/users/realead/following{/other_user}",
                "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/realead",
                "id": 17513912,
                "login": "realead",
                "node_id": "MDQ6VXNlcjE3NTEzOTEy",
                "organizations_url": "https://api.github.com/users/realead/orgs",
                "received_events_url": "https://api.github.com/users/realead/received_events",
                "repos_url": "https://api.github.com/users/realead/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/realead"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/realead/cython/pulls{/number}",
            "pushed_at": "2019-05-20T06:05:11Z",
            "releases_url": "https://api.github.com/repos/realead/cython/releases{/id}",
            "size": 54739,
            "ssh_url": "git@github.com:realead/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/realead/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/realead/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/realead/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/realead/cython/subscription",
            "svn_url": "https://github.com/realead/cython",
            "tags_url": "https://api.github.com/repos/realead/cython/tags",
            "teams_url": "https://api.github.com/repos/realead/cython/teams",
            "trees_url": "https://api.github.com/repos/realead/cython/git/trees{/sha}",
            "updated_at": "2019-05-15T05:31:35Z",
            "url": "https://api.github.com/repos/realead/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "c99a123dc948e43af5fee84f0bc4b409c71e292d",
        "user": {
            "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
            "events_url": "https://api.github.com/users/realead/events{/privacy}",
            "followers_url": "https://api.github.com/users/realead/followers",
            "following_url": "https://api.github.com/users/realead/following{/other_user}",
            "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/realead",
            "id": 17513912,
            "login": "realead",
            "node_id": "MDQ6VXNlcjE3NTEzOTEy",
            "organizations_url": "https://api.github.com/users/realead/orgs",
            "received_events_url": "https://api.github.com/users/realead/received_events",
            "repos_url": "https://api.github.com/users/realead/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/realead"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/2952",
    "id": 278944705,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/2952",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425556353,
            "name": "Build System",
            "node_id": "MDU6TGFiZWw0MjU1NTYzNTM=",
            "url": "https://api.github.com/repos/cython/cython/labels/Build%20System"
        },
        {
            "color": "444444",
            "default": true,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "locked": false,
    "merge_commit_sha": "2a1ec5e7dc5ccc3170c54f6bfb8156b8a80d644a",
    "merged_at": "2019-05-20T18:25:30Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 68,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 24,
        "state": "open",
        "title": "3.0",
        "updated_at": "2019-05-20T18:40:50Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc4OTQ0NzA1",
    "number": 2952,
    "patch_url": "https://github.com/cython/cython/pull/2952.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/2952/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/c99a123dc948e43af5fee84f0bc4b409c71e292d",
    "title": "Replace optparse by argparse",
    "updated_at": "2019-05-20T18:56:24Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/2952",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/17513912?v=4",
        "events_url": "https://api.github.com/users/realead/events{/privacy}",
        "followers_url": "https://api.github.com/users/realead/followers",
        "following_url": "https://api.github.com/users/realead/following{/other_user}",
        "gists_url": "https://api.github.com/users/realead/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/realead",
        "id": 17513912,
        "login": "realead",
        "node_id": "MDQ6VXNlcjE3NTEzOTEy",
        "organizations_url": "https://api.github.com/users/realead/orgs",
        "received_events_url": "https://api.github.com/users/realead/received_events",
        "repos_url": "https://api.github.com/users/realead/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/realead/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/realead/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/realead"
    }
}