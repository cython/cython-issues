{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3393/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3393/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3393"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3393"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3393/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3393"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/1f82f1c9c5b5112547afa474661f0ecbb552b701"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 991,
            "forks_count": 991,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 814,
            "open_issues_count": 814,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-03-05T14:58:04Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56394,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4939,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-03-05T13:08:04Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4939,
            "watchers_count": 4939
        },
        "sha": "a8cb127df0cb970b00a8f58797740ef571dc8817",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "The comments are taken from the C API documentation\r\n(https://docs.python.org/3.8/c-api/contextvars.html).",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3393#discussion_r388235826"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3393"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/388235826"
                }
            },
            "author_association": "MEMBER",
            "body": "A file comment would be nice that states the minimum CPython version for this, just in case.",
            "commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "created_at": "2020-03-05T11:29:34Z",
            "diff_hunk": "@@ -0,0 +1,63 @@\n+from .object cimport PyObject",
            "html_url": "https://github.com/cython/cython/pull/3393#discussion_r388235826",
            "id": 388235826,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzNTgyNg==",
            "original_commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "original_position": 1,
            "path": "Cython/Includes/cpython/context.pxd",
            "position": 1,
            "pull_request_review_id": 369493388,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3393",
            "updated_at": "2020-03-05T11:41:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/388235826",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3393#discussion_r388235979"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3393"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/388235979"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    int PyContext_Enter(object ctx) except -1\r\n```",
            "commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "created_at": "2020-03-05T11:29:55Z",
            "diff_hunk": "@@ -0,0 +1,63 @@\n+from .object cimport PyObject\n+\n+cdef extern from \"Python.h\":\n+\n+    ###########################################################################\n+    # Context Variables Objects\n+    ###########################################################################\n+\n+    bint PyContext_CheckExact(object o)\n+    bint PyContextVar_CheckExact(object o)\n+    bint PyContextToken_CheckExact(object o)\n+\n+    object PyContext_New()\n+    # Return value: New reference.\n+    # Create a new empty context object. Returns NULL if an error has occurred.\n+\n+    object PyContext_Copy(object ctx)\n+    # Return value: New reference.\n+    # Create a shallow copy of the passed ctx context object. Returns NULL if\n+    # an error has occurred.\n+\n+    object PyContext_CopyCurrent()\n+    # Return value: New reference.\n+    # Create a shallow copy of the current thread context. Returns NULL if an\n+    # error has occurred.\n+\n+    int PyContext_Enter(object ctx)",
            "html_url": "https://github.com/cython/cython/pull/3393#discussion_r388235979",
            "id": 388235979,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzNTk3OQ==",
            "original_commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "original_position": 27,
            "path": "Cython/Includes/cpython/context.pxd",
            "position": 27,
            "pull_request_review_id": 369493388,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3393",
            "updated_at": "2020-03-05T11:41:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/388235979",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3393#discussion_r388236057"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3393"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/388236057"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    int PyContext_Exit(object ctx) except -1\r\n```",
            "commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "created_at": "2020-03-05T11:30:06Z",
            "diff_hunk": "@@ -0,0 +1,63 @@\n+from .object cimport PyObject\n+\n+cdef extern from \"Python.h\":\n+\n+    ###########################################################################\n+    # Context Variables Objects\n+    ###########################################################################\n+\n+    bint PyContext_CheckExact(object o)\n+    bint PyContextVar_CheckExact(object o)\n+    bint PyContextToken_CheckExact(object o)\n+\n+    object PyContext_New()\n+    # Return value: New reference.\n+    # Create a new empty context object. Returns NULL if an error has occurred.\n+\n+    object PyContext_Copy(object ctx)\n+    # Return value: New reference.\n+    # Create a shallow copy of the passed ctx context object. Returns NULL if\n+    # an error has occurred.\n+\n+    object PyContext_CopyCurrent()\n+    # Return value: New reference.\n+    # Create a shallow copy of the current thread context. Returns NULL if an\n+    # error has occurred.\n+\n+    int PyContext_Enter(object ctx)\n+    # Set ctx as the current context for the current thread. Returns 0 on\n+    # success, and -1 on error.\n+\n+    int PyContext_Exit(object ctx)",
            "html_url": "https://github.com/cython/cython/pull/3393#discussion_r388236057",
            "id": 388236057,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzNjA1Nw==",
            "original_commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "original_position": 31,
            "path": "Cython/Includes/cpython/context.pxd",
            "position": 31,
            "pull_request_review_id": 369493388,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3393",
            "updated_at": "2020-03-05T11:41:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/388236057",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3393#discussion_r388236582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3393"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/388236582"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    int PyContextVar_Get(object var, object default_value, PyObject **value) except -1\r\n```",
            "commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "created_at": "2020-03-05T11:31:05Z",
            "diff_hunk": "@@ -0,0 +1,63 @@\n+from .object cimport PyObject\n+\n+cdef extern from \"Python.h\":\n+\n+    ###########################################################################\n+    # Context Variables Objects\n+    ###########################################################################\n+\n+    bint PyContext_CheckExact(object o)\n+    bint PyContextVar_CheckExact(object o)\n+    bint PyContextToken_CheckExact(object o)\n+\n+    object PyContext_New()\n+    # Return value: New reference.\n+    # Create a new empty context object. Returns NULL if an error has occurred.\n+\n+    object PyContext_Copy(object ctx)\n+    # Return value: New reference.\n+    # Create a shallow copy of the passed ctx context object. Returns NULL if\n+    # an error has occurred.\n+\n+    object PyContext_CopyCurrent()\n+    # Return value: New reference.\n+    # Create a shallow copy of the current thread context. Returns NULL if an\n+    # error has occurred.\n+\n+    int PyContext_Enter(object ctx)\n+    # Set ctx as the current context for the current thread. Returns 0 on\n+    # success, and -1 on error.\n+\n+    int PyContext_Exit(object ctx)\n+    # Deactivate the ctx context and restore the previous context as the\n+    # current context for the current thread. Returns 0 on success, and -1 on\n+    # error.\n+\n+    int PyContext_ClearFreeList()\n+    # Clear the context variable free list. Return the total number of freed\n+    # items. This function always succeeds.\n+\n+    object PyContextVar_New(const char *name, object default)\n+    # Return value: New reference.\n+    # Create a new ContextVar object. The name parameter is used for\n+    # introspection and debug purposes. The default parameter may optionally\n+    # specify the default value for the context variable. If an error has\n+    # occurred, this function returns NULL.\n+\n+    int PyContextVar_Get(object var, object default_value, PyObject **value)",
            "html_url": "https://github.com/cython/cython/pull/3393#discussion_r388236582",
            "id": 388236582,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzNjU4Mg==",
            "original_commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "original_position": 47,
            "path": "Cython/Includes/cpython/context.pxd",
            "position": 47,
            "pull_request_review_id": 369493388,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3393",
            "updated_at": "2020-03-05T11:41:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/388236582",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3393#discussion_r388236697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3393"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/388236697"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    int PyContextVar_Reset(object var, object token) except -1\r\n```",
            "commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "created_at": "2020-03-05T11:31:21Z",
            "diff_hunk": "@@ -0,0 +1,63 @@\n+from .object cimport PyObject\n+\n+cdef extern from \"Python.h\":\n+\n+    ###########################################################################\n+    # Context Variables Objects\n+    ###########################################################################\n+\n+    bint PyContext_CheckExact(object o)\n+    bint PyContextVar_CheckExact(object o)\n+    bint PyContextToken_CheckExact(object o)\n+\n+    object PyContext_New()\n+    # Return value: New reference.\n+    # Create a new empty context object. Returns NULL if an error has occurred.\n+\n+    object PyContext_Copy(object ctx)\n+    # Return value: New reference.\n+    # Create a shallow copy of the passed ctx context object. Returns NULL if\n+    # an error has occurred.\n+\n+    object PyContext_CopyCurrent()\n+    # Return value: New reference.\n+    # Create a shallow copy of the current thread context. Returns NULL if an\n+    # error has occurred.\n+\n+    int PyContext_Enter(object ctx)\n+    # Set ctx as the current context for the current thread. Returns 0 on\n+    # success, and -1 on error.\n+\n+    int PyContext_Exit(object ctx)\n+    # Deactivate the ctx context and restore the previous context as the\n+    # current context for the current thread. Returns 0 on success, and -1 on\n+    # error.\n+\n+    int PyContext_ClearFreeList()\n+    # Clear the context variable free list. Return the total number of freed\n+    # items. This function always succeeds.\n+\n+    object PyContextVar_New(const char *name, object default)\n+    # Return value: New reference.\n+    # Create a new ContextVar object. The name parameter is used for\n+    # introspection and debug purposes. The default parameter may optionally\n+    # specify the default value for the context variable. If an error has\n+    # occurred, this function returns NULL.\n+\n+    int PyContextVar_Get(object var, object default_value, PyObject **value)\n+    # Get the value of a context variable. Returns -1 if an error has occurred\n+    # during lookup, and 0 if no error occurred, whether or not a value was\n+    # found. If the context variable was found, value will be a pointer to it.\n+    # If the context variable was not found, value will point to default_value\n+    # (if not NULL), the default value of var (if not NULL), or NULL.\n+    # If the value was found, the function will create a new reference to it.\n+\n+    object PyContextVar_Set(object var, object value)\n+    # Return value: New reference.\n+    # Set the value of var to value in the current context. Returns a pointer\n+    # to a PyObject object, or NULL if an error has occurred.\n+\n+    int PyContextVar_Reset(object var, object token)",
            "html_url": "https://github.com/cython/cython/pull/3393#discussion_r388236697",
            "id": 388236697,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzNjY5Nw==",
            "original_commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "original_position": 60,
            "path": "Cython/Includes/cpython/context.pxd",
            "position": 60,
            "pull_request_review_id": 369493388,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3393",
            "updated_at": "2020-03-05T11:41:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/388236697",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3393#discussion_r388240828"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3393"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/388240828"
                }
            },
            "author_association": "MEMBER",
            "body": "This is a bit of a tricky function, because it allows `NULL` arguments for object parameters, and passing those will actually be a common use case. Thus, `object` is not the right type here, but `PyObject*` (which would allow `NULL`) is annoying because it requires users to cast their object values first.\r\n\r\nWhat about defining macro aliases (as a C code docstring to this `cdef extern` block), e.g.\r\n```C\r\n#define __Pyx_PyContextVar_GetNoDefault(object var, PyObject **value) PyContextVar_Get(var, NULL, value)\r\n```\r\nand then declare it to Cython as\r\n```cython\r\nint PyContextVar_GetNoDefault \"__Pyx_PyContextVar_GetNoDefault\"(object var, PyObject **value) except -1 \r\n```",
            "commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "created_at": "2020-03-05T11:40:39Z",
            "diff_hunk": "@@ -0,0 +1,63 @@\n+from .object cimport PyObject\n+\n+cdef extern from \"Python.h\":\n+\n+    ###########################################################################\n+    # Context Variables Objects\n+    ###########################################################################\n+\n+    bint PyContext_CheckExact(object o)\n+    bint PyContextVar_CheckExact(object o)\n+    bint PyContextToken_CheckExact(object o)\n+\n+    object PyContext_New()\n+    # Return value: New reference.\n+    # Create a new empty context object. Returns NULL if an error has occurred.\n+\n+    object PyContext_Copy(object ctx)\n+    # Return value: New reference.\n+    # Create a shallow copy of the passed ctx context object. Returns NULL if\n+    # an error has occurred.\n+\n+    object PyContext_CopyCurrent()\n+    # Return value: New reference.\n+    # Create a shallow copy of the current thread context. Returns NULL if an\n+    # error has occurred.\n+\n+    int PyContext_Enter(object ctx)\n+    # Set ctx as the current context for the current thread. Returns 0 on\n+    # success, and -1 on error.\n+\n+    int PyContext_Exit(object ctx)\n+    # Deactivate the ctx context and restore the previous context as the\n+    # current context for the current thread. Returns 0 on success, and -1 on\n+    # error.\n+\n+    int PyContext_ClearFreeList()\n+    # Clear the context variable free list. Return the total number of freed\n+    # items. This function always succeeds.\n+\n+    object PyContextVar_New(const char *name, object default)\n+    # Return value: New reference.\n+    # Create a new ContextVar object. The name parameter is used for\n+    # introspection and debug purposes. The default parameter may optionally\n+    # specify the default value for the context variable. If an error has\n+    # occurred, this function returns NULL.\n+\n+    int PyContextVar_Get(object var, object default_value, PyObject **value)",
            "html_url": "https://github.com/cython/cython/pull/3393#discussion_r388240828",
            "id": 388240828,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0MDgyOA==",
            "original_commit_id": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "original_position": 47,
            "path": "Cython/Includes/cpython/context.pxd",
            "position": 47,
            "pull_request_review_id": 369493388,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3393",
            "updated_at": "2020-03-05T11:41:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/388240828",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3393/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/25091963?v=4",
                "events_url": "https://api.github.com/users/ZackerySpytz/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZackerySpytz/followers",
                "following_url": "https://api.github.com/users/ZackerySpytz/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZackerySpytz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZackerySpytz",
                "id": 25091963,
                "login": "ZackerySpytz",
                "node_id": "MDQ6VXNlcjI1MDkxOTYz",
                "organizations_url": "https://api.github.com/users/ZackerySpytz/orgs",
                "received_events_url": "https://api.github.com/users/ZackerySpytz/received_events",
                "repos_url": "https://api.github.com/users/ZackerySpytz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZackerySpytz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZackerySpytz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZackerySpytz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2ec6076f61eb895f76fb88cd4018f38ed243ff36/comments",
            "commit": {
                "author": {
                    "date": "2020-03-04T10:59:24Z",
                    "email": "zspytz@gmail.com",
                    "name": "Zackery Spytz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-04T10:59:24Z",
                    "email": "zspytz@gmail.com",
                    "name": "Zackery Spytz"
                },
                "message": "Add context.pxd\n\nThe comments are taken from the C API documentation\n(https://docs.python.org/3.8/c-api/contextvars.html).",
                "tree": {
                    "sha": "725aba00e1d330d60c9a6ebcef44a4efe94ba3c0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/725aba00e1d330d60c9a6ebcef44a4efe94ba3c0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2ec6076f61eb895f76fb88cd4018f38ed243ff36",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/25091963?v=4",
                "events_url": "https://api.github.com/users/ZackerySpytz/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZackerySpytz/followers",
                "following_url": "https://api.github.com/users/ZackerySpytz/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZackerySpytz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZackerySpytz",
                "id": 25091963,
                "login": "ZackerySpytz",
                "node_id": "MDQ6VXNlcjI1MDkxOTYz",
                "organizations_url": "https://api.github.com/users/ZackerySpytz/orgs",
                "received_events_url": "https://api.github.com/users/ZackerySpytz/received_events",
                "repos_url": "https://api.github.com/users/ZackerySpytz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZackerySpytz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZackerySpytz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZackerySpytz"
            },
            "html_url": "https://github.com/cython/cython/commit/2ec6076f61eb895f76fb88cd4018f38ed243ff36",
            "node_id": "MDY6Q29tbWl0MTgzMTUzMDQ2OjJlYzYwNzZmNjFlYjg5NWY3NmZiODhjZDQwMThmMzhlZDI0M2ZmMzY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f6bf6aa9c7d2414b54e7289639ae5f43b15ede05",
                    "sha": "f6bf6aa9c7d2414b54e7289639ae5f43b15ede05",
                    "url": "https://api.github.com/repos/cython/cython/commits/f6bf6aa9c7d2414b54e7289639ae5f43b15ede05"
                }
            ],
            "sha": "2ec6076f61eb895f76fb88cd4018f38ed243ff36",
            "url": "https://api.github.com/repos/cython/cython/commits/2ec6076f61eb895f76fb88cd4018f38ed243ff36"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/25091963?v=4",
                "events_url": "https://api.github.com/users/ZackerySpytz/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZackerySpytz/followers",
                "following_url": "https://api.github.com/users/ZackerySpytz/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZackerySpytz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZackerySpytz",
                "id": 25091963,
                "login": "ZackerySpytz",
                "node_id": "MDQ6VXNlcjI1MDkxOTYz",
                "organizations_url": "https://api.github.com/users/ZackerySpytz/orgs",
                "received_events_url": "https://api.github.com/users/ZackerySpytz/received_events",
                "repos_url": "https://api.github.com/users/ZackerySpytz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZackerySpytz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZackerySpytz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZackerySpytz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1f82f1c9c5b5112547afa474661f0ecbb552b701/comments",
            "commit": {
                "author": {
                    "date": "2020-03-04T15:24:43Z",
                    "email": "zspytz@gmail.com",
                    "name": "Zackery Spytz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-04T15:24:43Z",
                    "email": "zspytz@gmail.com",
                    "name": "Zackery Spytz"
                },
                "message": "def -> default",
                "tree": {
                    "sha": "639db3c064b1895c651c3515045b7d7e747792ef",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/639db3c064b1895c651c3515045b7d7e747792ef"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1f82f1c9c5b5112547afa474661f0ecbb552b701",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/25091963?v=4",
                "events_url": "https://api.github.com/users/ZackerySpytz/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZackerySpytz/followers",
                "following_url": "https://api.github.com/users/ZackerySpytz/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZackerySpytz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZackerySpytz",
                "id": 25091963,
                "login": "ZackerySpytz",
                "node_id": "MDQ6VXNlcjI1MDkxOTYz",
                "organizations_url": "https://api.github.com/users/ZackerySpytz/orgs",
                "received_events_url": "https://api.github.com/users/ZackerySpytz/received_events",
                "repos_url": "https://api.github.com/users/ZackerySpytz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZackerySpytz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZackerySpytz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZackerySpytz"
            },
            "html_url": "https://github.com/cython/cython/commit/1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "node_id": "MDY6Q29tbWl0MTgzMTUzMDQ2OjFmODJmMWM5YzViNTExMjU0N2FmYTQ3NDY2MWYwZWNiYjU1MmI3MDE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2ec6076f61eb895f76fb88cd4018f38ed243ff36",
                    "sha": "2ec6076f61eb895f76fb88cd4018f38ed243ff36",
                    "url": "https://api.github.com/repos/cython/cython/commits/2ec6076f61eb895f76fb88cd4018f38ed243ff36"
                }
            ],
            "sha": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
            "url": "https://api.github.com/repos/cython/cython/commits/1f82f1c9c5b5112547afa474661f0ecbb552b701"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3393/commits",
    "created_at": "2020-03-04T11:00:56Z",
    "diff_url": "https://github.com/cython/cython/pull/3393.diff",
    "head": {
        "label": "ZackerySpytz:contextvars",
        "ref": "contextvars",
        "repo": {
            "archive_url": "https://api.github.com/repos/ZackerySpytz/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ZackerySpytz/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ZackerySpytz/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ZackerySpytz/cython/branches{/branch}",
            "clone_url": "https://github.com/ZackerySpytz/cython.git",
            "collaborators_url": "https://api.github.com/repos/ZackerySpytz/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ZackerySpytz/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/ZackerySpytz/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ZackerySpytz/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ZackerySpytz/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ZackerySpytz/cython/contributors",
            "created_at": "2019-04-24T05:16:25Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ZackerySpytz/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ZackerySpytz/cython/downloads",
            "events_url": "https://api.github.com/repos/ZackerySpytz/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ZackerySpytz/cython/forks",
            "full_name": "ZackerySpytz/cython",
            "git_commits_url": "https://api.github.com/repos/ZackerySpytz/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ZackerySpytz/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ZackerySpytz/cython/git/tags{/sha}",
            "git_url": "git://github.com/ZackerySpytz/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/ZackerySpytz/cython/hooks",
            "html_url": "https://github.com/ZackerySpytz/cython",
            "id": 183153046,
            "issue_comment_url": "https://api.github.com/repos/ZackerySpytz/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ZackerySpytz/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ZackerySpytz/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/ZackerySpytz/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ZackerySpytz/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/ZackerySpytz/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ZackerySpytz/cython/merges",
            "milestones_url": "https://api.github.com/repos/ZackerySpytz/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxODMxNTMwNDY=",
            "notifications_url": "https://api.github.com/repos/ZackerySpytz/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/25091963?v=4",
                "events_url": "https://api.github.com/users/ZackerySpytz/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZackerySpytz/followers",
                "following_url": "https://api.github.com/users/ZackerySpytz/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZackerySpytz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZackerySpytz",
                "id": 25091963,
                "login": "ZackerySpytz",
                "node_id": "MDQ6VXNlcjI1MDkxOTYz",
                "organizations_url": "https://api.github.com/users/ZackerySpytz/orgs",
                "received_events_url": "https://api.github.com/users/ZackerySpytz/received_events",
                "repos_url": "https://api.github.com/users/ZackerySpytz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZackerySpytz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZackerySpytz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZackerySpytz"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ZackerySpytz/cython/pulls{/number}",
            "pushed_at": "2020-03-04T15:25:06Z",
            "releases_url": "https://api.github.com/repos/ZackerySpytz/cython/releases{/id}",
            "size": 56352,
            "ssh_url": "git@github.com:ZackerySpytz/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ZackerySpytz/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/ZackerySpytz/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ZackerySpytz/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/ZackerySpytz/cython/subscription",
            "svn_url": "https://github.com/ZackerySpytz/cython",
            "tags_url": "https://api.github.com/repos/ZackerySpytz/cython/tags",
            "teams_url": "https://api.github.com/repos/ZackerySpytz/cython/teams",
            "trees_url": "https://api.github.com/repos/ZackerySpytz/cython/git/trees{/sha}",
            "updated_at": "2020-03-01T09:24:41Z",
            "url": "https://api.github.com/repos/ZackerySpytz/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "1f82f1c9c5b5112547afa474661f0ecbb552b701",
        "user": {
            "avatar_url": "https://avatars2.githubusercontent.com/u/25091963?v=4",
            "events_url": "https://api.github.com/users/ZackerySpytz/events{/privacy}",
            "followers_url": "https://api.github.com/users/ZackerySpytz/followers",
            "following_url": "https://api.github.com/users/ZackerySpytz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZackerySpytz/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ZackerySpytz",
            "id": 25091963,
            "login": "ZackerySpytz",
            "node_id": "MDQ6VXNlcjI1MDkxOTYz",
            "organizations_url": "https://api.github.com/users/ZackerySpytz/orgs",
            "received_events_url": "https://api.github.com/users/ZackerySpytz/received_events",
            "repos_url": "https://api.github.com/users/ZackerySpytz/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ZackerySpytz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZackerySpytz/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ZackerySpytz"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3393",
    "id": 383481530,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3393",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425561823,
            "name": "Library",
            "node_id": "MDU6TGFiZWw0MjU1NjE4MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/Library"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "locked": false,
    "merge_commit_sha": "ce4d6c06db60404c993a3b3747b339b39f23635d",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzNDgxNTMw",
    "number": 3393,
    "patch_url": "https://github.com/cython/cython/pull/3393.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3393/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/1f82f1c9c5b5112547afa474661f0ecbb552b701",
    "title": "Add context.pxd",
    "updated_at": "2020-03-05T11:41:34Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3393",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/25091963?v=4",
        "events_url": "https://api.github.com/users/ZackerySpytz/events{/privacy}",
        "followers_url": "https://api.github.com/users/ZackerySpytz/followers",
        "following_url": "https://api.github.com/users/ZackerySpytz/following{/other_user}",
        "gists_url": "https://api.github.com/users/ZackerySpytz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ZackerySpytz",
        "id": 25091963,
        "login": "ZackerySpytz",
        "node_id": "MDQ6VXNlcjI1MDkxOTYz",
        "organizations_url": "https://api.github.com/users/ZackerySpytz/orgs",
        "received_events_url": "https://api.github.com/users/ZackerySpytz/received_events",
        "repos_url": "https://api.github.com/users/ZackerySpytz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ZackerySpytz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ZackerySpytz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ZackerySpytz"
    }
}