{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/5804/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5804/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/5804"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/5804"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5804/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5804"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/5df97d023f7a27d41ef1aa59912c2590c5d4d4e3"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1516,
            "forks_count": 1516,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1262,
            "open_issues_count": 1262,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2024-01-15T00:48:05Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 71691,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 8640,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2024-01-15T15:32:13Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 8640,
            "watchers_count": 8640,
            "web_commit_signoff_required": false
        },
        "sha": "02ddde36567db52ecfb5004039221db8e2bec60c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "f(a, b) goes to vectorcall (as before)\r\nf(a, b, **kwds) now goes to \"vectorcall_dict\r\nf(a, b, c=c) now goes to vectorcall with kwnames\r\n\r\nWill eventually fix https://github.com/cython/cython/issues/5784",
    "closed_at": "2024-01-14T09:34:42Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1384546682"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1384546682"
                }
            },
            "author_association": "MEMBER",
            "body": "The intention is that this can also be used by utility code. So something like the limited API `int.from_bytes` or `code.update` can be done efficiently by vectorcall when supported",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2023-11-07T08:30:53Z",
            "diff_hunk": "@@ -2352,6 +2352,65 @@ static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObj\n     #endif\n }\n \n+/////////////// PyObjectFastCallCopyKwds.proto ///////////\n+\n+// Like __Pyx_PyObject_FastCallDict, but copies the kwargs dict in cases where we can't use PyObject_VectorcallDict\n+// (to make sure that kwargs is not changed by the function call).\n+// PyObject_VectorcallDict itself always ends up copying the dictionary.\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict_CopyKwds(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs); /*proto*/\n+\n+/////////////// PyObjectFastCallCopyKwds ///////////\n+//@requires: PyObjectFastCall\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict_CopyKwds(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {\n+    PyObject *result;\n+    #if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API\n+    if (kwargs) {\n+        kwargs = PyDict_Copy(kwargs);\n+        if (!kwargs) return NULL;\n+    }\n+    #endif\n+    result = __Pyx_PyObject_FastCallDict(func, args, nargs, kwargs);\n+    #if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API\n+    Py_XDECREF(kwargs);\n+    #endif\n+    return result;\n+}\n+\n+/////////////// PyObjectVectorCallKwBuilder.proto ////////////////\n+//@requires: PyObjectFastCall",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1384546682",
            "id": 1384546682,
            "line": 2049,
            "node_id": "PRRC_kwDOABDGAc5ShoF6",
            "original_commit_id": "a723c9fafec8c9ef62eb8d28b557581d68a89a23",
            "original_line": 2356,
            "original_position": 39,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 14,
            "pull_request_review_id": 1717092618,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1384546682/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-07T22:12:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1384546682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1416984586"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1416984586"
                }
            },
            "author_association": "MEMBER",
            "body": "I know, this is just copying an existing comment, but I don't see the \"fused types\" part of it being done here. Seems outdated and worth removing.",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2023-12-06T09:25:53Z",
            "diff_hunk": "@@ -5984,6 +5984,17 @@ def analyse_as_type_constructor(self, env):\n             self.type = type\n             return True\n \n+    def function_type(self):\n+        # Return the type of the function being called, coercing a function\n+        # pointer to a function if necessary. If the function has fused\n+        # arguments, return the specific type.",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1416984586",
            "id": 1416984586,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5UdXgK",
            "original_commit_id": "050036fee25be848d4466165a865604665ee9147",
            "original_line": 5990,
            "original_position": 7,
            "original_start_line": 5989,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1767080681,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1416984586/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-06T10:18:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1416984586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1416985910"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1416985910"
                }
            },
            "author_association": "MEMBER",
            "body": "You probably meant to write `None` here, right?\r\n```suggestion\r\n    # kwdict      ExprNode or None  keyword dictionary (if present)\r\n```",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2023-12-06T09:26:59Z",
            "diff_hunk": "@@ -6525,15 +6525,18 @@ def generate_evaluation_code(self, code):\n             \", \".join(a.pythran_result() for a in args)))\n \n \n-class PyMethodCallNode(SimpleCallNode):\n+class PyMethodCallNode(CallNode):\n     # Specialised call to a (potential) PyMethodObject with non-constant argument tuple.\n     # Allows the self argument to be injected directly instead of repacking a tuple for it.\n     #\n     # function    ExprNode      the function/method object to call\n     # arg_tuple   TupleNode     the arguments for the args tuple\n+    # kwdict      ExprNode or Node  keyword dictionary (if present)",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1416985910",
            "id": 1416985910,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5UdX02",
            "original_commit_id": "050036fee25be848d4466165a865604665ee9147",
            "original_line": 6534,
            "original_position": 47,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1767080681,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1416985910/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-06T10:18:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1416985910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1416996108"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1416996108"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's use the helper macro that we already have for this.\r\n```suggestion\r\n    if (unlikely(__Pyx_PyTuple_SET_ITEM(builder, n, key))) return -1;\r\n```",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2023-12-06T09:33:53Z",
            "diff_hunk": "@@ -2045,6 +2045,74 @@ static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObj\n     #endif\n }\n \n+/////////////// PyObjectVectorCallKwBuilder.proto ////////////////\n+//@requires: PyObjectFastCall\n+// For versions that define PyObject_Vectorcall, use PyObject_Vectorcall and define functions to build a kwnames tuple and add arguments to args.\n+// For versions that don't, use __Pyx_PyObject_FastCallDict and functions to build a keyword dictionary\n+\n+CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n); /* proto */\n+\n+#if CYTHON_VECTORCALL\n+#if __Pyx > 0x03080000\n+#define __Pyx_Object_Vectorcall_CallFromBuilder PyObject_Vectorcall\n+#else\n+#define __Pyx_Object_Vectorcall_CallFromBuilder _PyObject_Vectorcall\n+#endif\n+\n+#define __Pyx_MakeVectorcallBuilderKwds(n) PyTuple_New(n)\n+\n+static int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n); /* proto */\n+static int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n); /* proto */\n+#else\n+#define __Pyx_Object_Vectorcall_CallFromBuilder __Pyx_PyObject_FastCallDict\n+\n+#define __Pyx_MakeVectorcallBuilderKwds(n) PyDict_New()\n+\n+#define __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n) PyDict_SetItem(builder, key, value)\n+#define __Pyx_VectorcallBuilder_AddArgStr(key, value, builder, args, n) PyDict_SetItemString(builder, key, value)\n+#endif\n+\n+\n+\n+/////////////// PyObjectVectorCallKwBuilder ////////////////\n+\n+#if CYTHON_VECTORCALL\n+static int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {\n+    (void)__Pyx_PyObject_FastCallDict;\n+\n+#if CYTHON_ASSUME_SAFE_MACROS\n+    PyTuple_SET_ITEM(builder, n, key);\n+#else\n+    if (unlikely(PyTuple_SetItem(builder, n, key))) return -1;\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1416996108",
            "id": 1416996108,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5UdaUM",
            "original_commit_id": "050036fee25be848d4466165a865604665ee9147",
            "original_line": 2087,
            "original_position": 52,
            "original_start_line": 2083,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 1767080681,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1416996108/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-06T10:18:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1416996108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1417022781"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1417022781"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems worth cleaning up along the way.",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2023-12-06T09:53:16Z",
            "diff_hunk": "@@ -6582,49 +6592,109 @@ def attribute_is_likely_method(attr):\n         else:\n             likely_method = 'unlikely'\n \n-        code.putln(\"#if CYTHON_UNPACK_METHODS\")\n-        code.putln(\"if (%s(PyMethod_Check(%s))) {\" % (likely_method, function))\n-        code.putln(\"%s = PyMethod_GET_SELF(%s);\" % (self_arg, function))\n-        # the following is always true in Py3 (kept only for safety),\n-        # but is false for unbound methods in Py2\n-        code.putln(\"if (likely(%s)) {\" % self_arg)\n-        code.putln(\"PyObject* function = PyMethod_GET_FUNCTION(%s);\" % function)\n-        code.put_incref(self_arg, py_object_type)\n-        code.put_incref(\"function\", py_object_type)\n-        # free method object as early to possible to enable reuse from CPython's freelist\n-        code.put_decref_set(function, py_object_type, \"function\")\n-        code.putln(\"%s = 1;\" % arg_offset_cname)\n-        code.putln(\"}\")\n-        code.putln(\"}\")\n-        code.putln(\"#endif\")  # CYTHON_UNPACK_METHODS\n-        # TODO may need to deal with unused variables in the #else case\n+        if self.unpack:\n+            # unpack is ultimately governed by optimize.unpack_method_calls\n+            # and is a separate decision to whether we want vectorcall-type behaviour\n+            code.putln(\"#if CYTHON_UNPACK_METHODS\")\n+            code.putln(\"if (%s(PyMethod_Check(%s))) {\" % (likely_method, function))\n+            code.putln(\"%s = PyMethod_GET_SELF(%s);\" % (self_arg, function))\n+            # the following is always true in Py3 (kept only for safety),\n+            # but is false for unbound methods in Py2",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1417022781",
            "id": 1417022781,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Udg09",
            "original_commit_id": "050036fee25be848d4466165a865604665ee9147",
            "original_line": 6602,
            "original_position": 100,
            "original_start_line": 6601,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1767080681,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1417022781/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-06T10:18:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1417022781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1417030537"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1417030537"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's define this variable unconditionally to avoid confusing static analysers.\r\n```suggestion\r\n        kwnames_temp = None\r\n        if use_kwnames:\r\n```",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2023-12-06T09:58:38Z",
            "diff_hunk": "@@ -6582,49 +6592,109 @@ def attribute_is_likely_method(attr):\n         else:\n             likely_method = 'unlikely'\n \n-        code.putln(\"#if CYTHON_UNPACK_METHODS\")\n-        code.putln(\"if (%s(PyMethod_Check(%s))) {\" % (likely_method, function))\n-        code.putln(\"%s = PyMethod_GET_SELF(%s);\" % (self_arg, function))\n-        # the following is always true in Py3 (kept only for safety),\n-        # but is false for unbound methods in Py2\n-        code.putln(\"if (likely(%s)) {\" % self_arg)\n-        code.putln(\"PyObject* function = PyMethod_GET_FUNCTION(%s);\" % function)\n-        code.put_incref(self_arg, py_object_type)\n-        code.put_incref(\"function\", py_object_type)\n-        # free method object as early to possible to enable reuse from CPython's freelist\n-        code.put_decref_set(function, py_object_type, \"function\")\n-        code.putln(\"%s = 1;\" % arg_offset_cname)\n-        code.putln(\"}\")\n-        code.putln(\"}\")\n-        code.putln(\"#endif\")  # CYTHON_UNPACK_METHODS\n-        # TODO may need to deal with unused variables in the #else case\n+        if self.unpack:\n+            # unpack is ultimately governed by optimize.unpack_method_calls\n+            # and is a separate decision to whether we want vectorcall-type behaviour\n+            code.putln(\"#if CYTHON_UNPACK_METHODS\")\n+            code.putln(\"if (%s(PyMethod_Check(%s))) {\" % (likely_method, function))\n+            code.putln(\"%s = PyMethod_GET_SELF(%s);\" % (self_arg, function))\n+            # the following is always true in Py3 (kept only for safety),\n+            # but is false for unbound methods in Py2\n+            code.putln(\"if (likely(%s)) {\" % self_arg)\n+            code.putln(\"PyObject* function = PyMethod_GET_FUNCTION(%s);\" % function)\n+            code.put_incref(self_arg, py_object_type)\n+            code.put_incref(\"function\", py_object_type)\n+            # free method object as early to possible to enable reuse from CPython's freelist\n+            code.put_decref_set(function, py_object_type, \"function\")\n+            code.putln(\"%s = 1;\" % arg_offset_cname)\n+            code.putln(\"}\")\n+            code.putln(\"}\")\n+            code.putln(\"#endif\")  # CYTHON_UNPACK_METHODS\n+            # TODO may need to deal with unused variables in the #else case\n \n+        if use_kwnames:",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1417030537",
            "id": 1417030537,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5UdiuJ",
            "original_commit_id": "050036fee25be848d4466165a865604665ee9147",
            "original_line": 6615,
            "original_position": 113,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1767080681,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1417030537/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-06T10:18:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1417030537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1417039717"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1417039717"
                }
            },
            "author_association": "MEMBER",
            "body": "1) The comment you provide makes a good method name:\r\n```suggestion\r\n    def _should_use_PyMethodCallNode(self, positional_args):\r\n```\r\n2) This seems more like a helper function than a method.\r\n3) Consider moving it to `PyMethodCallNode` as a static method, e.g. `PyMethodCallNode.can_be_used_for_posargs(posargs)`.",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2023-12-06T10:05:53Z",
            "diff_hunk": "@@ -5048,6 +5048,38 @@ def visit_SingleAssignmentNode(self, node):\n             lhs.lhs_of_first_assignment = True\n         return node\n \n+    def _check_optimize_method_calls(self, node):\n+        function = node.function\n+        return (node.is_temp and function.type.is_pyobject and self.current_directives.get(\n+                \"optimize.unpack_method_calls_in_pyinit\"\n+                if not self.in_loop and self.current_env().is_module_scope\n+                else \"optimize.unpack_method_calls\"))\n+\n+    def _check_positional_args_for_method_call(self, positional_args):\n+        # Do the positional args imply we can substitute a PyMethodCallNode",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1417039717",
            "id": 1417039717,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Udk9l",
            "original_commit_id": "050036fee25be848d4466165a865604665ee9147",
            "original_line": 5059,
            "original_position": 12,
            "original_start_line": 5058,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 1767080681,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1417039717/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-06T10:18:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1417039717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1417040720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1417040720"
                }
            },
            "author_association": "MEMBER",
            "body": "This could also just be a static method in `PyMethodCallNode`.",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2023-12-06T10:06:43Z",
            "diff_hunk": "@@ -5048,6 +5048,38 @@ def visit_SingleAssignmentNode(self, node):\n             lhs.lhs_of_first_assignment = True\n         return node\n \n+    def _check_optimize_method_calls(self, node):\n+        function = node.function\n+        return (node.is_temp and function.type.is_pyobject and self.current_directives.get(\n+                \"optimize.unpack_method_calls_in_pyinit\"\n+                if not self.in_loop and self.current_env().is_module_scope\n+                else \"optimize.unpack_method_calls\"))\n+\n+    def _check_positional_args_for_method_call(self, positional_args):\n+        # Do the positional args imply we can substitute a PyMethodCallNode\n+        return isinstance(positional_args, ExprNodes.TupleNode) and not (\n+            positional_args.mult_factor or (positional_args.is_literal and len(positional_args.args) > 1))\n+\n+    def _check_function_may_be_method_call(self, function):",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1417040720",
            "id": 1417040720,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5UdlNQ",
            "original_commit_id": "050036fee25be848d4466165a865604665ee9147",
            "original_line": 5063,
            "original_position": 16,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 1767080681,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1417040720/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-06T10:18:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1417040720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1448956885"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1448956885"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2024-01-11T14:35:43Z",
            "diff_hunk": "@@ -728,19 +729,19 @@ static CYTHON_INLINE PyObject* {{TO_PY_FUNCTION}}({{TYPE}} value) {\n         // to ever run so it seems a pessimization mostly.\n         order_str = PyUnicode_FromString(little ? \"little\" : \"big\");\n         if (!order_str) goto limited_bad;\n-        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);\n-        if (!arg_tuple) goto limited_bad;\n-        if (!is_unsigned) {\n-            // default is signed=False\n-            kwds = PyDict_New();\n-            if (!kwds) goto limited_bad;\n-            if (PyDict_SetItemString(kwds, \"signed\", __Pyx_NewRef(Py_True))) goto limited_bad;\n+        {\n+",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1448956885",
            "id": 1448956885,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5WXVPV",
            "original_commit_id": "955886c31364e7d4084e410ca1c5b44e13f46f74",
            "original_line": 733,
            "original_position": 31,
            "original_start_line": null,
            "path": "Cython/Utility/TypeConversion.c",
            "position": null,
            "pull_request_review_id": 1815745625,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448956885/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-11T15:03:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448956885",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1448963427"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1448963427"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems simple enough to just use f-strings.\r\n```suggestion\r\n        if kwnames_temp:\r\n            keyword_variable = f\", {kwnames_temp}\"\r\n        elif self.kwdict:\r\n            keyword_variable = f\", {self.kwdict.result()}\"\r\n        else:\r\n            keyword_variable = \"\"\r\n```",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2024-01-11T14:40:30Z",
            "diff_hunk": "@@ -6582,49 +6591,108 @@ def attribute_is_likely_method(attr):\n         else:\n             likely_method = 'unlikely'\n \n-        code.putln(\"#if CYTHON_UNPACK_METHODS\")\n-        code.putln(\"if (%s(PyMethod_Check(%s))) {\" % (likely_method, function))\n-        code.putln(\"%s = PyMethod_GET_SELF(%s);\" % (self_arg, function))\n-        # the following is always true in Py3 (kept only for safety),\n-        # but is false for unbound methods in Py2\n-        code.putln(\"if (likely(%s)) {\" % self_arg)\n-        code.putln(\"PyObject* function = PyMethod_GET_FUNCTION(%s);\" % function)\n-        code.put_incref(self_arg, py_object_type)\n-        code.put_incref(\"function\", py_object_type)\n-        # free method object as early to possible to enable reuse from CPython's freelist\n-        code.put_decref_set(function, py_object_type, \"function\")\n-        code.putln(\"%s = 1;\" % arg_offset_cname)\n-        code.putln(\"}\")\n-        code.putln(\"}\")\n-        code.putln(\"#endif\")  # CYTHON_UNPACK_METHODS\n-        # TODO may need to deal with unused variables in the #else case\n+        if self.unpack:\n+            # unpack is ultimately governed by optimize.unpack_method_calls\n+            # and is a separate decision to whether we want vectorcall-type behaviour\n+            code.putln(\"#if CYTHON_UNPACK_METHODS\")\n+            code.putln(\"if (%s(PyMethod_Check(%s))) {\" % (likely_method, function))\n+            code.putln(\"%s = PyMethod_GET_SELF(%s);\" % (self_arg, function))\n+            # the result of PyMethod_GET_SELF is always true in Py3.\n+            code.putln(f\"assert({self_arg});\")\n+            code.putln(\"PyObject* function = PyMethod_GET_FUNCTION(%s);\" % function)\n+            code.put_incref(self_arg, py_object_type)\n+            code.put_incref(\"function\", py_object_type)\n+            # free method object as early to possible to enable reuse from CPython's freelist\n+            code.put_decref_set(function, py_object_type, \"function\")\n+            code.putln(\"%s = 1;\" % arg_offset_cname)\n+            code.putln(\"}\")\n+            code.putln(\"#endif\")  # CYTHON_UNPACK_METHODS\n+            # TODO may need to deal with unused variables in the #else case\n \n+        kwnames_temp = None\n+        if use_kwnames:\n+            code.globalstate.use_utility_code(\n+                UtilityCode.load_cached(\"PyObjectVectorCallKwBuilder\", \"ObjectHandling.c\"))\n+            function_caller = \"__Pyx_Object_Vectorcall_CallFromBuilder\"\n+            kwnames_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+            code.putln(\"%s = __Pyx_MakeVectorcallBuilderKwds(%s); %s\" % (\n+                kwnames_temp, len(self.kwdict.key_value_pairs),\n+                code.error_goto_if_null(kwnames_temp, self.pos)\n+            ))\n+            code.put_gotref(kwnames_temp, py_object_type)\n+        elif self.kwdict:\n+            code.globalstate.use_utility_code(\n+                    UtilityCode.load_cached(\"PyObjectFastCall\", \"ObjectHandling.c\"))\n+            function_caller = \"__Pyx_PyObject_FastCallDict\"\n+        else:\n+            code.globalstate.use_utility_code(\n+                UtilityCode.load_cached(\"PyObjectFastCall\", \"ObjectHandling.c\"))\n+            function_caller = \"__Pyx_PyObject_FastCall\"\n         # actually call the function\n-        code.globalstate.use_utility_code(\n-            UtilityCode.load_cached(\"PyObjectFastCall\", \"ObjectHandling.c\"))\n+\n \n         code.putln(\"{\")\n+        extra_keyword_args = \"\"\n+        if use_kwnames:\n+            extra_keyword_args = (\"+ ((CYTHON_VECTORCALL) ? %d : 0)\" %\n+                len(self.kwdict.key_value_pairs))\n         # To avoid passing an out-of-bounds argument pointer in the no-args case,\n         # we need at least two entries, so we pad with NULL and point to that.\n         # See https://github.com/cython/cython/issues/5668\n-        code.putln(\"PyObject *__pyx_callargs[%d] = {%s, %s};\" % (\n+        code.putln(\"PyObject *__pyx_callargs[%d%s] = {%s, %s};\" % (\n             (len(args) + 1) if args else 2,\n+            extra_keyword_args,\n             self_arg,\n             ', '.join(arg.py_result() for arg in args) if args else \"NULL\",\n         ))\n-        code.putln(\"%s = __Pyx_PyObject_FastCall(%s, __pyx_callargs+1-%s, %d+%s);\" % (\n+        if use_kwnames:\n+            for n, keyvalue in enumerate(self.kwdict.key_value_pairs):\n+                key_is_str = (\n+                    (keyvalue.key.type is Builtin.str_type or keyvalue.key.type is Builtin.unicode_type)\n+                    and not keyvalue.key.may_be_none()\n+                )\n+                code.put_error_if_neg(\n+                    self.pos,\n+                    \"__Pyx_VectorcallBuilder_AddArg%s(%s, %s, %s, __pyx_callargs+%d, %d)\" % (\n+                        \"\" if key_is_str else \"_Check\",\n+                        keyvalue.key.py_result(),\n+                        keyvalue.value.py_result(),\n+                        kwnames_temp,\n+                        len(args) + 1,\n+                        n\n+                ))\n+\n+        keyword_variable = \"\"\n+        if use_kwnames:\n+            keyword_variable = kwnames_temp\n+        elif self.kwdict:\n+            keyword_variable = self.kwdict.result()\n+        if keyword_variable:\n+            keyword_variable = \", %s\" % keyword_variable",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1448963427",
            "id": 1448963427,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5WXW1j",
            "original_commit_id": "955886c31364e7d4084e410ca1c5b44e13f46f74",
            "original_line": 6671,
            "original_position": 173,
            "original_start_line": 6665,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1815745625,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448963427/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-11T15:04:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448963427",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1448967202"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1448967202"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure, but these two cases might become a little simpler below if you store the `key_value_pairs` in a variable (maybe just `kwargs`?) instead of using a separate flag for the distinction.",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2024-01-11T14:43:19Z",
            "diff_hunk": "@@ -6542,8 +6544,15 @@ def generate_evaluation_code(self, code):\n         self.function.generate_evaluation_code(code)\n         assert self.arg_tuple.mult_factor is None\n         args = self.arg_tuple.args\n+        use_kwnames = False\n         for arg in args:\n             arg.generate_evaluation_code(code)\n+        if isinstance(self.kwdict, DictNode):\n+            use_kwnames = True\n+            for keyvalue in self.kwdict.key_value_pairs:\n+                keyvalue.generate_evaluation_code(code)\n+        elif self.kwdict:\n+            self.kwdict.generate_evaluation_code(code)",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1448967202",
            "id": 1448967202,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5WXXwi",
            "original_commit_id": "955886c31364e7d4084e410ca1c5b44e13f46f74",
            "original_line": 6555,
            "original_position": 68,
            "original_start_line": 6547,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1815745625,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448967202/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-11T15:03:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448967202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1448973391"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1448973391"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks like a candidate for an f-string to me.",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2024-01-11T14:47:50Z",
            "diff_hunk": "@@ -6582,49 +6591,108 @@ def attribute_is_likely_method(attr):\n         else:\n             likely_method = 'unlikely'\n \n-        code.putln(\"#if CYTHON_UNPACK_METHODS\")\n-        code.putln(\"if (%s(PyMethod_Check(%s))) {\" % (likely_method, function))\n-        code.putln(\"%s = PyMethod_GET_SELF(%s);\" % (self_arg, function))\n-        # the following is always true in Py3 (kept only for safety),\n-        # but is false for unbound methods in Py2\n-        code.putln(\"if (likely(%s)) {\" % self_arg)\n-        code.putln(\"PyObject* function = PyMethod_GET_FUNCTION(%s);\" % function)\n-        code.put_incref(self_arg, py_object_type)\n-        code.put_incref(\"function\", py_object_type)\n-        # free method object as early to possible to enable reuse from CPython's freelist\n-        code.put_decref_set(function, py_object_type, \"function\")\n-        code.putln(\"%s = 1;\" % arg_offset_cname)\n-        code.putln(\"}\")\n-        code.putln(\"}\")\n-        code.putln(\"#endif\")  # CYTHON_UNPACK_METHODS\n-        # TODO may need to deal with unused variables in the #else case\n+        if self.unpack:\n+            # unpack is ultimately governed by optimize.unpack_method_calls\n+            # and is a separate decision to whether we want vectorcall-type behaviour\n+            code.putln(\"#if CYTHON_UNPACK_METHODS\")\n+            code.putln(\"if (%s(PyMethod_Check(%s))) {\" % (likely_method, function))\n+            code.putln(\"%s = PyMethod_GET_SELF(%s);\" % (self_arg, function))\n+            # the result of PyMethod_GET_SELF is always true in Py3.\n+            code.putln(f\"assert({self_arg});\")\n+            code.putln(\"PyObject* function = PyMethod_GET_FUNCTION(%s);\" % function)\n+            code.put_incref(self_arg, py_object_type)\n+            code.put_incref(\"function\", py_object_type)\n+            # free method object as early to possible to enable reuse from CPython's freelist\n+            code.put_decref_set(function, py_object_type, \"function\")\n+            code.putln(\"%s = 1;\" % arg_offset_cname)\n+            code.putln(\"}\")\n+            code.putln(\"#endif\")  # CYTHON_UNPACK_METHODS\n+            # TODO may need to deal with unused variables in the #else case\n \n+        kwnames_temp = None\n+        if use_kwnames:\n+            code.globalstate.use_utility_code(\n+                UtilityCode.load_cached(\"PyObjectVectorCallKwBuilder\", \"ObjectHandling.c\"))\n+            function_caller = \"__Pyx_Object_Vectorcall_CallFromBuilder\"\n+            kwnames_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+            code.putln(\"%s = __Pyx_MakeVectorcallBuilderKwds(%s); %s\" % (\n+                kwnames_temp, len(self.kwdict.key_value_pairs),\n+                code.error_goto_if_null(kwnames_temp, self.pos)\n+            ))\n+            code.put_gotref(kwnames_temp, py_object_type)\n+        elif self.kwdict:\n+            code.globalstate.use_utility_code(\n+                    UtilityCode.load_cached(\"PyObjectFastCall\", \"ObjectHandling.c\"))\n+            function_caller = \"__Pyx_PyObject_FastCallDict\"\n+        else:\n+            code.globalstate.use_utility_code(\n+                UtilityCode.load_cached(\"PyObjectFastCall\", \"ObjectHandling.c\"))\n+            function_caller = \"__Pyx_PyObject_FastCall\"\n         # actually call the function\n-        code.globalstate.use_utility_code(\n-            UtilityCode.load_cached(\"PyObjectFastCall\", \"ObjectHandling.c\"))\n+\n \n         code.putln(\"{\")\n+        extra_keyword_args = \"\"\n+        if use_kwnames:\n+            extra_keyword_args = (\"+ ((CYTHON_VECTORCALL) ? %d : 0)\" %\n+                len(self.kwdict.key_value_pairs))",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1448973391",
            "id": 1448973391,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5WXZRP",
            "original_commit_id": "955886c31364e7d4084e410ca1c5b44e13f46f74",
            "original_line": 6638,
            "original_position": 138,
            "original_start_line": 6635,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1815745625,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448973391/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-11T15:03:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448973391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1448991273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1448991273"
                }
            },
            "author_association": "MEMBER",
            "body": "It seems that the two `can_be_…` functions are always called before calling `from_node()`. That seems redundant. Why not let a `PyMethodCallNode` classmethod try to optimise the call (thus, maybe `try_to_optimise_call()`), and if it can't, return the original node unchanged?\r\n\r\nFeel free to add a `if node is (not) replacement` short-cut to the `replace()` method to simplify this further.",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2024-01-11T15:00:28Z",
            "diff_hunk": "@@ -5064,38 +5071,37 @@ def visit_SimpleCallNode(self, node):\n                     function.type = function.entry.type\n                     PyTypeObjectPtr = PyrexTypes.CPtrType(cython_scope.lookup('PyTypeObject').type)\n                     node.args[1] = ExprNodes.CastNode(node.args[1], PyTypeObjectPtr)\n-        elif (node.is_temp and function.type.is_pyobject and self.current_directives.get(\n-                \"optimize.unpack_method_calls_in_pyinit\"\n-                if not self.in_loop and self.current_env().is_module_scope\n-                else \"optimize.unpack_method_calls\")):\n+        else:\n             # optimise simple Python methods calls\n-            if isinstance(node.arg_tuple, ExprNodes.TupleNode) and not (\n-                    node.arg_tuple.mult_factor or (node.arg_tuple.is_literal and len(node.arg_tuple.args) > 1)):\n+            if ExprNodes.PyMethodCallNode.can_be_used_for_posargs(node.arg_tuple, has_kwargs=False):\n                 # simple call, now exclude calls to objects that are definitely not methods\n-                may_be_a_method = True\n-                if function.type is Builtin.type_type:\n-                    may_be_a_method = False\n-                elif function.is_attribute:\n-                    if function.entry and function.entry.type.is_cfunction:\n-                        # optimised builtin method\n-                        may_be_a_method = False\n-                elif function.is_name:\n-                    entry = function.entry\n-                    if entry.is_builtin or entry.type.is_cfunction:\n-                        may_be_a_method = False\n-                    elif entry.cf_assignments:\n-                        # local functions/classes are definitely not methods\n-                        non_method_nodes = (ExprNodes.PyCFunctionNode, ExprNodes.ClassNode, ExprNodes.Py3ClassNode)\n-                        may_be_a_method = any(\n-                            assignment.rhs and not isinstance(assignment.rhs, non_method_nodes)\n-                            for assignment in entry.cf_assignments)\n-                if may_be_a_method:\n+                if ExprNodes.PyMethodCallNode.can_be_used_for_function(function):\n                     if (node.self and function.is_attribute and\n                             isinstance(function.obj, ExprNodes.CloneNode) and function.obj.arg is node.self):\n                         # function self object was moved into a CloneNode => undo\n                         function.obj = function.obj.arg\n                     node = self.replace(node, ExprNodes.PyMethodCallNode.from_node(\n-                        node, function=function, arg_tuple=node.arg_tuple, type=node.type))\n+                        node, function=function, arg_tuple=node.arg_tuple, type=node.type,\n+                        unpack=self._check_optimize_method_calls(node)))\n+        return node\n+\n+    def visit_GeneralCallNode(self, node):\n+        \"\"\"\n+        Replace likely Python method calls by a specialised PyMethodCallNode.\n+        \"\"\"\n+        self.visitchildren(node)\n+        has_kwargs = bool(node.keyword_args)\n+        kwds_is_dict_node = isinstance(node.keyword_args, ExprNodes.DictNode)\n+        if not ExprNodes.PyMethodCallNode.can_be_used_for_posargs(\n+                node.positional_args, has_kwargs=has_kwargs, kwds_is_dict_node=kwds_is_dict_node):\n+            return node\n+        function = node.function\n+        if not ExprNodes.PyMethodCallNode.can_be_used_for_function(function):\n+            return node\n+\n+        node = self.replace(node, ExprNodes.PyMethodCallNode.from_node(",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1448991273",
            "id": 1448991273,
            "line": 5102,
            "node_id": "PRRC_kwDOABDGAc5WXdop",
            "original_commit_id": "955886c31364e7d4084e410ca1c5b44e13f46f74",
            "original_line": 5102,
            "original_position": 71,
            "original_start_line": 5095,
            "path": "Cython/Compiler/Optimize.py",
            "position": 71,
            "pull_request_review_id": 1815745625,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448991273/reactions"
            },
            "side": "RIGHT",
            "start_line": 5095,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-11T15:03:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1448991273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5804#discussion_r1451403136"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5804"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1451403136"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm disagreeing with this for now.\r\n\r\nThere's a good chunk of duplication between `SimpleCallNode` and `GeneralCallNode`, but there there's also significant differences (a `CloneNode` check, the name of the attribute used for the positional arguments, handling of keyword arguments).\r\n\r\nSo I think the logic need to be duplicated either way, either here or with an `isinstance` check in `PyMethodCallNode`. I think it's slightly better here (where the visitor has found the classes for us).\r\n\r\nI don't have a hugely strong opinion - it just doesn't look like a significant improvement to me.",
            "commit_id": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "created_at": "2024-01-13T09:01:03Z",
            "diff_hunk": "@@ -5064,38 +5071,37 @@ def visit_SimpleCallNode(self, node):\n                     function.type = function.entry.type\n                     PyTypeObjectPtr = PyrexTypes.CPtrType(cython_scope.lookup('PyTypeObject').type)\n                     node.args[1] = ExprNodes.CastNode(node.args[1], PyTypeObjectPtr)\n-        elif (node.is_temp and function.type.is_pyobject and self.current_directives.get(\n-                \"optimize.unpack_method_calls_in_pyinit\"\n-                if not self.in_loop and self.current_env().is_module_scope\n-                else \"optimize.unpack_method_calls\")):\n+        else:\n             # optimise simple Python methods calls\n-            if isinstance(node.arg_tuple, ExprNodes.TupleNode) and not (\n-                    node.arg_tuple.mult_factor or (node.arg_tuple.is_literal and len(node.arg_tuple.args) > 1)):\n+            if ExprNodes.PyMethodCallNode.can_be_used_for_posargs(node.arg_tuple, has_kwargs=False):\n                 # simple call, now exclude calls to objects that are definitely not methods\n-                may_be_a_method = True\n-                if function.type is Builtin.type_type:\n-                    may_be_a_method = False\n-                elif function.is_attribute:\n-                    if function.entry and function.entry.type.is_cfunction:\n-                        # optimised builtin method\n-                        may_be_a_method = False\n-                elif function.is_name:\n-                    entry = function.entry\n-                    if entry.is_builtin or entry.type.is_cfunction:\n-                        may_be_a_method = False\n-                    elif entry.cf_assignments:\n-                        # local functions/classes are definitely not methods\n-                        non_method_nodes = (ExprNodes.PyCFunctionNode, ExprNodes.ClassNode, ExprNodes.Py3ClassNode)\n-                        may_be_a_method = any(\n-                            assignment.rhs and not isinstance(assignment.rhs, non_method_nodes)\n-                            for assignment in entry.cf_assignments)\n-                if may_be_a_method:\n+                if ExprNodes.PyMethodCallNode.can_be_used_for_function(function):\n                     if (node.self and function.is_attribute and\n                             isinstance(function.obj, ExprNodes.CloneNode) and function.obj.arg is node.self):\n                         # function self object was moved into a CloneNode => undo\n                         function.obj = function.obj.arg\n                     node = self.replace(node, ExprNodes.PyMethodCallNode.from_node(\n-                        node, function=function, arg_tuple=node.arg_tuple, type=node.type))\n+                        node, function=function, arg_tuple=node.arg_tuple, type=node.type,\n+                        unpack=self._check_optimize_method_calls(node)))\n+        return node\n+\n+    def visit_GeneralCallNode(self, node):\n+        \"\"\"\n+        Replace likely Python method calls by a specialised PyMethodCallNode.\n+        \"\"\"\n+        self.visitchildren(node)\n+        has_kwargs = bool(node.keyword_args)\n+        kwds_is_dict_node = isinstance(node.keyword_args, ExprNodes.DictNode)\n+        if not ExprNodes.PyMethodCallNode.can_be_used_for_posargs(\n+                node.positional_args, has_kwargs=has_kwargs, kwds_is_dict_node=kwds_is_dict_node):\n+            return node\n+        function = node.function\n+        if not ExprNodes.PyMethodCallNode.can_be_used_for_function(function):\n+            return node\n+\n+        node = self.replace(node, ExprNodes.PyMethodCallNode.from_node(",
            "html_url": "https://github.com/cython/cython/pull/5804#discussion_r1451403136",
            "id": 1451403136,
            "in_reply_to_id": 1448991273,
            "line": 5102,
            "node_id": "PRRC_kwDOABDGAc5WgqeA",
            "original_commit_id": "955886c31364e7d4084e410ca1c5b44e13f46f74",
            "original_line": 5102,
            "original_position": 71,
            "original_start_line": 5095,
            "path": "Cython/Compiler/Optimize.py",
            "position": 71,
            "pull_request_review_id": 1819945667,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5804",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1451403136/reactions"
            },
            "side": "RIGHT",
            "start_line": 5095,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T09:01:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1451403136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5804/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/513bf17c27968f3d9e6efb7065dd183ea5c1af00/comments",
            "commit": {
                "author": {
                    "date": "2023-11-07T06:55:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-07T20:01:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "(WIP) use vectorcall by default\n\nf(a, b) goes to vectorcall (as before)\nf(a, b, **kwds) now goes to \"vectorcall_dict\nf(a, b, c=c) now goes to vectorcall with kwnames\n\nI'm fairly sure this is still a bit liable to crash.",
                "tree": {
                    "sha": "99cf41a51bcb3bac0fd92b297ffe6168686fbb19",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/99cf41a51bcb3bac0fd92b297ffe6168686fbb19"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/513bf17c27968f3d9e6efb7065dd183ea5c1af00",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/513bf17c27968f3d9e6efb7065dd183ea5c1af00",
            "node_id": "C_kwDOAhr4b9oAKDUxM2JmMTdjMjc5NjhmM2Q5ZTZlZmI3MDY1ZGQxODNlYTVjMWFmMDA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ff9e68a206ec24a497690259957bbfad097295de",
                    "sha": "ff9e68a206ec24a497690259957bbfad097295de",
                    "url": "https://api.github.com/repos/cython/cython/commits/ff9e68a206ec24a497690259957bbfad097295de"
                }
            ],
            "sha": "513bf17c27968f3d9e6efb7065dd183ea5c1af00",
            "url": "https://api.github.com/repos/cython/cython/commits/513bf17c27968f3d9e6efb7065dd183ea5c1af00"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e41072216bc1a20e249c2e9ff057db9b96f60722/comments",
            "commit": {
                "author": {
                    "date": "2023-11-07T20:29:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-07T20:29:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Apply to \"int.from_bytes\"",
                "tree": {
                    "sha": "016925f8411b9e3ed1a271e484ab33067cf1a5a2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/016925f8411b9e3ed1a271e484ab33067cf1a5a2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e41072216bc1a20e249c2e9ff057db9b96f60722",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/e41072216bc1a20e249c2e9ff057db9b96f60722",
            "node_id": "C_kwDOAhr4b9oAKGU0MTA3MjIxNmJjMWEyMGUyNDljMmU5ZmYwNTdkYjliOTZmNjA3MjI",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/513bf17c27968f3d9e6efb7065dd183ea5c1af00",
                    "sha": "513bf17c27968f3d9e6efb7065dd183ea5c1af00",
                    "url": "https://api.github.com/repos/cython/cython/commits/513bf17c27968f3d9e6efb7065dd183ea5c1af00"
                }
            ],
            "sha": "e41072216bc1a20e249c2e9ff057db9b96f60722",
            "url": "https://api.github.com/repos/cython/cython/commits/e41072216bc1a20e249c2e9ff057db9b96f60722"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7464ed785387b2adde329654223ec304afb37066/comments",
            "commit": {
                "author": {
                    "date": "2023-11-07T20:33:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-07T20:33:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Detach decision to use vectorcall from unpack methods\n\nI'm working on the basis that vectorcall is usually worthwhile\nbut unpacking methods is a choosable optimization",
                "tree": {
                    "sha": "451578b3bafd588ba048823509d24b7b79bf0c55",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/451578b3bafd588ba048823509d24b7b79bf0c55"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7464ed785387b2adde329654223ec304afb37066",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7464ed785387b2adde329654223ec304afb37066",
            "node_id": "C_kwDOAhr4b9oAKDc0NjRlZDc4NTM4N2IyYWRkZTMyOTY1NDIyM2VjMzA0YWZiMzcwNjY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e41072216bc1a20e249c2e9ff057db9b96f60722",
                    "sha": "e41072216bc1a20e249c2e9ff057db9b96f60722",
                    "url": "https://api.github.com/repos/cython/cython/commits/e41072216bc1a20e249c2e9ff057db9b96f60722"
                }
            ],
            "sha": "7464ed785387b2adde329654223ec304afb37066",
            "url": "https://api.github.com/repos/cython/cython/commits/7464ed785387b2adde329654223ec304afb37066"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/22951174e320ca3141a279114df7b07f0cc22009/comments",
            "commit": {
                "author": {
                    "date": "2023-11-07T21:40:46Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-07T21:40:46Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Small fixes",
                "tree": {
                    "sha": "69538829be44ff5e1d1afa7968afa9102f37489d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/69538829be44ff5e1d1afa7968afa9102f37489d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/22951174e320ca3141a279114df7b07f0cc22009",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/22951174e320ca3141a279114df7b07f0cc22009",
            "node_id": "C_kwDOAhr4b9oAKDIyOTUxMTc0ZTMyMGNhMzE0MWEyNzkxMTRkZjdiMDdmMGNjMjIwMDk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7464ed785387b2adde329654223ec304afb37066",
                    "sha": "7464ed785387b2adde329654223ec304afb37066",
                    "url": "https://api.github.com/repos/cython/cython/commits/7464ed785387b2adde329654223ec304afb37066"
                }
            ],
            "sha": "22951174e320ca3141a279114df7b07f0cc22009",
            "url": "https://api.github.com/repos/cython/cython/commits/22951174e320ca3141a279114df7b07f0cc22009"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b5bf08036630abf327072335957d7e3627a75d30/comments",
            "commit": {
                "author": {
                    "date": "2023-11-09T19:55:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-09T19:55:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Add gotref and string check",
                "tree": {
                    "sha": "9af26883f5a2e8018272b1c53a7546405a5be044",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9af26883f5a2e8018272b1c53a7546405a5be044"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b5bf08036630abf327072335957d7e3627a75d30",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b5bf08036630abf327072335957d7e3627a75d30",
            "node_id": "C_kwDOAhr4b9oAKGI1YmYwODAzNjYzMGFiZjMyNzA3MjMzNTk1N2Q3ZTM2MjdhNzVkMzA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/22951174e320ca3141a279114df7b07f0cc22009",
                    "sha": "22951174e320ca3141a279114df7b07f0cc22009",
                    "url": "https://api.github.com/repos/cython/cython/commits/22951174e320ca3141a279114df7b07f0cc22009"
                }
            ],
            "sha": "b5bf08036630abf327072335957d7e3627a75d30",
            "url": "https://api.github.com/repos/cython/cython/commits/b5bf08036630abf327072335957d7e3627a75d30"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ad0772734ba9a48fc58d8ced18b54759385b5bfd/comments",
            "commit": {
                "author": {
                    "date": "2023-11-10T08:01:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-10T08:01:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge remote-tracking branch 'real_origin/master' into vectorcall-everywhere",
                "tree": {
                    "sha": "da83121a23d20c48e6f338feb89c7dca30741093",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/da83121a23d20c48e6f338feb89c7dca30741093"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ad0772734ba9a48fc58d8ced18b54759385b5bfd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/ad0772734ba9a48fc58d8ced18b54759385b5bfd",
            "node_id": "C_kwDOAhr4b9oAKGFkMDc3MjczNGJhOWE0OGZjNThkOGNlZDE4YjU0NzU5Mzg1YjViZmQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b5bf08036630abf327072335957d7e3627a75d30",
                    "sha": "b5bf08036630abf327072335957d7e3627a75d30",
                    "url": "https://api.github.com/repos/cython/cython/commits/b5bf08036630abf327072335957d7e3627a75d30"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/f940f222cb340bde53ac6b09666b580646ad09e3",
                    "sha": "f940f222cb340bde53ac6b09666b580646ad09e3",
                    "url": "https://api.github.com/repos/cython/cython/commits/f940f222cb340bde53ac6b09666b580646ad09e3"
                }
            ],
            "sha": "ad0772734ba9a48fc58d8ced18b54759385b5bfd",
            "url": "https://api.github.com/repos/cython/cython/commits/ad0772734ba9a48fc58d8ced18b54759385b5bfd"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7d673347b2ac776045274464bc80fcb5190745d8/comments",
            "commit": {
                "author": {
                    "date": "2023-11-12T19:21:04Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-12T19:21:04Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Avoid some unnecessary checks",
                "tree": {
                    "sha": "659fb7c81e0eab0f3c90e2cfb14985a372e84182",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/659fb7c81e0eab0f3c90e2cfb14985a372e84182"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7d673347b2ac776045274464bc80fcb5190745d8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7d673347b2ac776045274464bc80fcb5190745d8",
            "node_id": "C_kwDOAhr4b9oAKDdkNjczMzQ3YjJhYzc3NjA0NTI3NDQ2NGJjODBmY2I1MTkwNzQ1ZDg",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ad0772734ba9a48fc58d8ced18b54759385b5bfd",
                    "sha": "ad0772734ba9a48fc58d8ced18b54759385b5bfd",
                    "url": "https://api.github.com/repos/cython/cython/commits/ad0772734ba9a48fc58d8ced18b54759385b5bfd"
                }
            ],
            "sha": "7d673347b2ac776045274464bc80fcb5190745d8",
            "url": "https://api.github.com/repos/cython/cython/commits/7d673347b2ac776045274464bc80fcb5190745d8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0d83a7091d926374c3936ba03d4ff2724a1dee66/comments",
            "commit": {
                "author": {
                    "date": "2023-11-12T19:32:08Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-12T19:33:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Add a no-copy shortcut to merged dict node",
                "tree": {
                    "sha": "8c865f628acf83339d22c7af189ff418047b8adf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8c865f628acf83339d22c7af189ff418047b8adf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0d83a7091d926374c3936ba03d4ff2724a1dee66",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/0d83a7091d926374c3936ba03d4ff2724a1dee66",
            "node_id": "C_kwDOAhr4b9oAKDBkODNhNzA5MWQ5MjYzNzRjMzkzNmJhMDNkNGZmMjcyNGExZGVlNjY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7d673347b2ac776045274464bc80fcb5190745d8",
                    "sha": "7d673347b2ac776045274464bc80fcb5190745d8",
                    "url": "https://api.github.com/repos/cython/cython/commits/7d673347b2ac776045274464bc80fcb5190745d8"
                }
            ],
            "sha": "0d83a7091d926374c3936ba03d4ff2724a1dee66",
            "url": "https://api.github.com/repos/cython/cython/commits/0d83a7091d926374c3936ba03d4ff2724a1dee66"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/eec7bfebef9c530e0809b534f1f94747f888a915/comments",
            "commit": {
                "author": {
                    "date": "2023-11-12T20:03:17Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-12T20:03:17Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix simplecallnode optimization",
                "tree": {
                    "sha": "efa194de63ffd187ab6ce5141f4537182e3f05fe",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/efa194de63ffd187ab6ce5141f4537182e3f05fe"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/eec7bfebef9c530e0809b534f1f94747f888a915",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/eec7bfebef9c530e0809b534f1f94747f888a915",
            "node_id": "C_kwDOAhr4b9oAKGVlYzdiZmViZWY5YzUzMGUwODA5YjUzNGYxZjk0NzQ3Zjg4OGE5MTU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0d83a7091d926374c3936ba03d4ff2724a1dee66",
                    "sha": "0d83a7091d926374c3936ba03d4ff2724a1dee66",
                    "url": "https://api.github.com/repos/cython/cython/commits/0d83a7091d926374c3936ba03d4ff2724a1dee66"
                }
            ],
            "sha": "eec7bfebef9c530e0809b534f1f94747f888a915",
            "url": "https://api.github.com/repos/cython/cython/commits/eec7bfebef9c530e0809b534f1f94747f888a915"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/38e701cc49306f3dbab4b25cb9cb6cbd705fefb8/comments",
            "commit": {
                "author": {
                    "date": "2023-11-12T20:36:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-12T20:36:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Use old name appropriately",
                "tree": {
                    "sha": "5a3bc4b994fa39dda61d71b073c3c7338abad782",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5a3bc4b994fa39dda61d71b073c3c7338abad782"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/38e701cc49306f3dbab4b25cb9cb6cbd705fefb8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/38e701cc49306f3dbab4b25cb9cb6cbd705fefb8",
            "node_id": "C_kwDOAhr4b9oAKDM4ZTcwMWNjNDkzMDZmM2RiYWI0YjI1Y2I5Y2I2Y2JkNzA1ZmVmYjg",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/eec7bfebef9c530e0809b534f1f94747f888a915",
                    "sha": "eec7bfebef9c530e0809b534f1f94747f888a915",
                    "url": "https://api.github.com/repos/cython/cython/commits/eec7bfebef9c530e0809b534f1f94747f888a915"
                }
            ],
            "sha": "38e701cc49306f3dbab4b25cb9cb6cbd705fefb8",
            "url": "https://api.github.com/repos/cython/cython/commits/38e701cc49306f3dbab4b25cb9cb6cbd705fefb8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1f37586c46a7d95722ddf69ac323a048cde53377/comments",
            "commit": {
                "author": {
                    "date": "2023-11-12T21:03:13Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-12T21:03:13Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix self-build",
                "tree": {
                    "sha": "49df7d199b5b2acd8f4ec53a8ac7fee306085977",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/49df7d199b5b2acd8f4ec53a8ac7fee306085977"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1f37586c46a7d95722ddf69ac323a048cde53377",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/1f37586c46a7d95722ddf69ac323a048cde53377",
            "node_id": "C_kwDOAhr4b9oAKDFmMzc1ODZjNDZhN2Q5NTcyMmRkZjY5YWMzMjNhMDQ4Y2RlNTMzNzc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/38e701cc49306f3dbab4b25cb9cb6cbd705fefb8",
                    "sha": "38e701cc49306f3dbab4b25cb9cb6cbd705fefb8",
                    "url": "https://api.github.com/repos/cython/cython/commits/38e701cc49306f3dbab4b25cb9cb6cbd705fefb8"
                }
            ],
            "sha": "1f37586c46a7d95722ddf69ac323a048cde53377",
            "url": "https://api.github.com/repos/cython/cython/commits/1f37586c46a7d95722ddf69ac323a048cde53377"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f80394e3e5b4a07c857e9e7f0cdac609ceefc33f/comments",
            "commit": {
                "author": {
                    "date": "2023-11-12T21:31:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-11-12T21:31:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Move function_type",
                "tree": {
                    "sha": "bbe5b3535783000665961e6bd1fb1d96fbf76e47",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/bbe5b3535783000665961e6bd1fb1d96fbf76e47"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f80394e3e5b4a07c857e9e7f0cdac609ceefc33f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f80394e3e5b4a07c857e9e7f0cdac609ceefc33f",
            "node_id": "C_kwDOAhr4b9oAKGY4MDM5NGUzZTViNGEwN2M4NTdlOWU3ZjBjZGFjNjA5Y2VlZmMzM2Y",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1f37586c46a7d95722ddf69ac323a048cde53377",
                    "sha": "1f37586c46a7d95722ddf69ac323a048cde53377",
                    "url": "https://api.github.com/repos/cython/cython/commits/1f37586c46a7d95722ddf69ac323a048cde53377"
                }
            ],
            "sha": "f80394e3e5b4a07c857e9e7f0cdac609ceefc33f",
            "url": "https://api.github.com/repos/cython/cython/commits/f80394e3e5b4a07c857e9e7f0cdac609ceefc33f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/050036fee25be848d4466165a865604665ee9147/comments",
            "commit": {
                "author": {
                    "date": "2023-12-04T20:21:45Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-12-04T20:21:45Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into vectorcall-everywhere",
                "tree": {
                    "sha": "29e454ab274ff9779e297ea67f67f2af17083e88",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/29e454ab274ff9779e297ea67f67f2af17083e88"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/050036fee25be848d4466165a865604665ee9147",
                "verification": {
                    "payload": "tree 29e454ab274ff9779e297ea67f67f2af17083e88\nparent f80394e3e5b4a07c857e9e7f0cdac609ceefc33f\nparent 02ddde36567db52ecfb5004039221db8e2bec60c\nauthor scoder <stefan_ml@behnel.de> 1701721305 +0100\ncommitter GitHub <noreply@github.com> 1701721305 +0100\n\nMerge branch 'master' into vectorcall-everywhere",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlbjTZCRBK7hj4Ov3rIwAAGLQIABBu2uYpHvL3jtNTCAfgRI+M\niF6f7dJc1GbH7EhuIPagI+O8nJ4J4O1noLvR0JwJTJvu+ThNGQEkl/5xby7LQNt2\nBHi8OlH7NhIE+aihKKxZ5+uniPmFsaZrgIj4UftSwp5jyGItXQ5UY7OLACh0Ajgn\nUxIuJPyGr6MmMR8lNE8p/kGEzvmOXNPtUr5kRNMyUAFqz94F+WFUt2Lg814OGtEl\nnXzl2xm1Qj/K9OjFlAqG3mBYNC7wbv1bnTOi8tNdTkiZ/6/lEvuR6cECzgO2WtCU\nfLxUsePF3m8GeV0jqIhpsrsywNYXmCBFHw/2bOpJyrj/2jb9GrH+pkaA1EfVck8=\n=wjAP\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/050036fee25be848d4466165a865604665ee9147",
            "node_id": "C_kwDOAhr4b9oAKDA1MDAzNmZlZTI1YmU4NDhkNDQ2NjE2NWE4NjU2MDQ2NjVlZTkxNDc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f80394e3e5b4a07c857e9e7f0cdac609ceefc33f",
                    "sha": "f80394e3e5b4a07c857e9e7f0cdac609ceefc33f",
                    "url": "https://api.github.com/repos/cython/cython/commits/f80394e3e5b4a07c857e9e7f0cdac609ceefc33f"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/02ddde36567db52ecfb5004039221db8e2bec60c",
                    "sha": "02ddde36567db52ecfb5004039221db8e2bec60c",
                    "url": "https://api.github.com/repos/cython/cython/commits/02ddde36567db52ecfb5004039221db8e2bec60c"
                }
            ],
            "sha": "050036fee25be848d4466165a865604665ee9147",
            "url": "https://api.github.com/repos/cython/cython/commits/050036fee25be848d4466165a865604665ee9147"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4c5ea026d2deb93f781802663056251a741f75fd/comments",
            "commit": {
                "author": {
                    "date": "2023-12-09T10:44:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-12-09T10:56:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Comments from review",
                "tree": {
                    "sha": "fcecf8220cf3d5219fb816b7ccea863d48e06470",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fcecf8220cf3d5219fb816b7ccea863d48e06470"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4c5ea026d2deb93f781802663056251a741f75fd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/4c5ea026d2deb93f781802663056251a741f75fd",
            "node_id": "C_kwDOAhr4b9oAKDRjNWVhMDI2ZDJkZWI5M2Y3ODE4MDI2NjMwNTYyNTFhNzQxZjc1ZmQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/050036fee25be848d4466165a865604665ee9147",
                    "sha": "050036fee25be848d4466165a865604665ee9147",
                    "url": "https://api.github.com/repos/cython/cython/commits/050036fee25be848d4466165a865604665ee9147"
                }
            ],
            "sha": "4c5ea026d2deb93f781802663056251a741f75fd",
            "url": "https://api.github.com/repos/cython/cython/commits/4c5ea026d2deb93f781802663056251a741f75fd"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/955886c31364e7d4084e410ca1c5b44e13f46f74/comments",
            "commit": {
                "author": {
                    "date": "2023-12-09T11:53:13Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-12-09T11:53:13Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Add tests\n\nand tweak choices about when to optimize a little",
                "tree": {
                    "sha": "b1dbf38dde0eca8cd2b9529c959011a798abb041",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b1dbf38dde0eca8cd2b9529c959011a798abb041"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/955886c31364e7d4084e410ca1c5b44e13f46f74",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/955886c31364e7d4084e410ca1c5b44e13f46f74",
            "node_id": "C_kwDOAhr4b9oAKDk1NTg4NmMzMTM2NGU3ZDQwODRlNDEwY2ExYzViNDRlMTNmNDZmNzQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4c5ea026d2deb93f781802663056251a741f75fd",
                    "sha": "4c5ea026d2deb93f781802663056251a741f75fd",
                    "url": "https://api.github.com/repos/cython/cython/commits/4c5ea026d2deb93f781802663056251a741f75fd"
                }
            ],
            "sha": "955886c31364e7d4084e410ca1c5b44e13f46f74",
            "url": "https://api.github.com/repos/cython/cython/commits/955886c31364e7d4084e410ca1c5b44e13f46f74"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0dde3c98d4d7952f5aae18a88529c8859ef3de5a/comments",
            "commit": {
                "author": {
                    "date": "2024-01-13T08:55:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-01-13T08:55:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Comments from review",
                "tree": {
                    "sha": "c5f7d9e9c5670c2a7e4268adbefaf64b4208af4c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c5f7d9e9c5670c2a7e4268adbefaf64b4208af4c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0dde3c98d4d7952f5aae18a88529c8859ef3de5a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/0dde3c98d4d7952f5aae18a88529c8859ef3de5a",
            "node_id": "C_kwDOAhr4b9oAKDBkZGUzYzk4ZDRkNzk1MmY1YWFlMThhODg1MjljODg1OWVmM2RlNWE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/955886c31364e7d4084e410ca1c5b44e13f46f74",
                    "sha": "955886c31364e7d4084e410ca1c5b44e13f46f74",
                    "url": "https://api.github.com/repos/cython/cython/commits/955886c31364e7d4084e410ca1c5b44e13f46f74"
                }
            ],
            "sha": "0dde3c98d4d7952f5aae18a88529c8859ef3de5a",
            "url": "https://api.github.com/repos/cython/cython/commits/0dde3c98d4d7952f5aae18a88529c8859ef3de5a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5df97d023f7a27d41ef1aa59912c2590c5d4d4e3/comments",
            "commit": {
                "author": {
                    "date": "2024-01-13T19:09:02Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-01-13T19:09:02Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Replace two more occurrences of self.kwargs.key_value_pairs",
                "tree": {
                    "sha": "29b89be1d219fa5ffe9d1341604ddc65edee87d9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/29b89be1d219fa5ffe9d1341604ddc65edee87d9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
                "verification": {
                    "payload": "tree 29b89be1d219fa5ffe9d1341604ddc65edee87d9\nparent 0dde3c98d4d7952f5aae18a88529c8859ef3de5a\nauthor scoder <stefan_ml@behnel.de> 1705172942 +0100\ncommitter GitHub <noreply@github.com> 1705172942 +0100\n\nReplace two more occurrences of self.kwargs.key_value_pairs",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlot/OCRBK7hj4Ov3rIwAAU9YIAC9UotsL5m9wXbQo7mmORSOT\nIV3xWVTNpb1485ZVko6t+I0WKo5TNmmPuI/9I60fQlLZRIvsWjZiv9NUHUrxfBde\nyrcmUHAEzgq3OE11FidoqMqpFk/48Gg22oArE9EgpbYdEFwrX14P3aBYtoaNliCF\ni8ku7Ve7vI6hU2xsRSMme072wPpqH9q49/cwhoWsd/uUkmKGu0bFBAWBrfaBTxPz\nlQ3Gtq3B597X/bViDJYd9R5+3cBOwt9O4CSsoI5eSO5TH2DaZZSFH3m1mybBZylw\nwZEtapGp8VytNd8Cm2l5cgLvlmaKevKcTzkBCrmiKrpkwyO2JD5RyJQJPSxpDTM=\n=9Vhn\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "node_id": "C_kwDOAhr4b9oAKDVkZjk3ZDAyM2Y3YTI3ZDQxZWYxYWE1OTkxMmMyNTkwYzVkNGQ0ZTM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0dde3c98d4d7952f5aae18a88529c8859ef3de5a",
                    "sha": "0dde3c98d4d7952f5aae18a88529c8859ef3de5a",
                    "url": "https://api.github.com/repos/cython/cython/commits/0dde3c98d4d7952f5aae18a88529c8859ef3de5a"
                }
            ],
            "sha": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
            "url": "https://api.github.com/repos/cython/cython/commits/5df97d023f7a27d41ef1aa59912c2590c5d4d4e3"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/5804/commits",
    "created_at": "2023-11-07T08:28:43Z",
    "diff_url": "https://github.com/cython/cython/pull/5804.diff",
    "draft": false,
    "head": {
        "label": "da-woods:vectorcall-everywhere",
        "ref": "vectorcall-everywhere",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2024-01-14T15:51:18Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 74991,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2022-08-11T09:03:48Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/5804",
    "id": 1590099875,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/5804",
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "locked": false,
    "merge_commit_sha": "7b8ad1c65bf27dc558e19a9191f09eac7749f490",
    "merged_at": "2024-01-14T09:34:42Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 60,
        "created_at": "2019-02-24T14:21:23Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Remove support for Python 2 and Python < 3.8.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/65",
        "id": 4082235,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/65/labels",
        "node_id": "MDk6TWlsZXN0b25lNDA4MjIzNQ==",
        "number": 65,
        "open_issues": 20,
        "state": "open",
        "title": "3.1",
        "updated_at": "2024-01-14T18:40:41Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/65"
    },
    "node_id": "PR_kwDOABDGAc5exv-j",
    "number": 5804,
    "patch_url": "https://github.com/cython/cython/pull/5804.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/5804/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/5df97d023f7a27d41ef1aa59912c2590c5d4d4e3",
    "title": "Use vectorcall by default",
    "updated_at": "2024-01-14T09:34:46Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/5804",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}