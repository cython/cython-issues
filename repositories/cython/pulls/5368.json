{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/5368/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5368/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/5368"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/5368"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5368/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5368"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/e534eb92c5f9add3dc9a8d88fd5408077f5ac12a"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1376,
            "forks_count": 1376,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1158,
            "open_issues_count": 1158,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2023-04-12T08:05:58Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 68090,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7837,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2023-04-12T04:28:24Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7837,
            "watchers_count": 7837,
            "web_commit_signoff_required": false
        },
        "sha": "d0bbecb7fba10f8a992972ea824b55a851646938",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Fixes #5346.\r\n\r\nI've written a potentially slightly inefficient helper function to inspect the signature of dataclasses.field and\r\ndataclasses._DataclassParams and drop any arguments that are unsupported (i.e. ones that we're passing because they apply to later Python versions).",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5368#discussion_r1162363055"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5368"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1162363055"
                }
            },
            "author_association": "MEMBER",
            "body": "We shouldn't mix `> 2` with `< 3` in the same utility code. Just stick to `>= 3` and `< 3`.",
            "commit_id": "e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
            "created_at": "2023-04-11T06:40:08Z",
            "diff_hunk": "@@ -76,3 +76,108 @@ static PyObject* __Pyx_Load_{{cname}}_Module(void); /* proto */\n static PyObject* __Pyx_Load_{{cname}}_Module(void) {\n     return __Pyx_LoadInternalModule(\"{{cname}}\", {{py_code}});\n }\n+\n+//////////////////// DataclassesCallHelper.proto ////////////////////////\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds); /* proto */\n+\n+//////////////////// DataclassesCallHelper ////////////////////////\n+//@substitute: naming\n+\n+// The signature of a few of the dataclasses module functions has\n+// been expanded over the years. Cython always passes the full set\n+// of arguments from the most recent version we know of, so needs\n+// to remove any arguments that don't exist on earlier versions.\n+\n+#if PY_MAJOR_VERSION > 2",
            "html_url": "https://github.com/cython/cython/pull/5368#discussion_r1162363055",
            "id": 1162363055,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5FSECv",
            "original_commit_id": "80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
            "original_line": 92,
            "original_position": 17,
            "original_start_line": null,
            "path": "Cython/Utility/Dataclasses.c",
            "position": null,
            "pull_request_review_id": 1378541038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5368",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1162363055/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-04-11T08:11:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1162363055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5368#discussion_r1162366663"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5368"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1162366663"
                }
            },
            "author_association": "MEMBER",
            "body": "Labels are usually dedented in our code base. Also, this is commonly called `bad:`, but I do understand that it's both the bad and the normal case coming back together here. (Still, even that case uses `bad:` in most places.)\r\n```suggestion\r\nend:\r\n```",
            "commit_id": "e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
            "created_at": "2023-04-11T06:44:46Z",
            "diff_hunk": "@@ -76,3 +76,108 @@ static PyObject* __Pyx_Load_{{cname}}_Module(void); /* proto */\n static PyObject* __Pyx_Load_{{cname}}_Module(void) {\n     return __Pyx_LoadInternalModule(\"{{cname}}\", {{py_code}});\n }\n+\n+//////////////////// DataclassesCallHelper.proto ////////////////////////\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds); /* proto */\n+\n+//////////////////// DataclassesCallHelper ////////////////////////\n+//@substitute: naming\n+\n+// The signature of a few of the dataclasses module functions has\n+// been expanded over the years. Cython always passes the full set\n+// of arguments from the most recent version we know of, so needs\n+// to remove any arguments that don't exist on earlier versions.\n+\n+#if PY_MAJOR_VERSION > 2\n+static int __Pyx_DataclassesCallHelper_FilterToDict(PyObject *callable, PyObject *kwds, PyObject *new_kwds, PyObject *args_list, int is_kwonly) {\n+    Py_ssize_t size, i;\n+    size = PySequence_Size(args_list);\n+    if (size == -1) return -1;\n+\n+    for (i=0; i<size; ++i) {\n+        PyObject *key, *value;\n+        int setitem_result;\n+        key = PySequence_GetItem(args_list, i);\n+        if (!key) return -1;\n+\n+        if (PyUnicode_Check(key) && (\n+                PyUnicode_CompareWithASCIIString(key, \"self\") == 0 ||\n+                // namedtuple constructor in fallback code\n+                PyUnicode_CompareWithASCIIString(key, \"_cls\") == 0)) {\n+            Py_DECREF(key);\n+            continue;\n+        }\n+\n+        value = PyDict_GetItem(kwds, key);\n+        if (!value) {\n+            if (is_kwonly) {\n+                Py_DECREF(key);\n+                continue;\n+            } else {\n+                // The most likely reason for this is that Cython\n+                // hasn't kept up to date with the Python dataclasses module.\n+                // To be nice to our users, try not to fail, but ask them\n+                // to report a bug so we can keep up to date.\n+                value = Py_None;\n+                if (PyErr_WarnFormat(\n+                        PyExc_RuntimeWarning, 1,\n+                        \"Argument %S not passed to %R. This is likely a bug in Cython so please report it.\",\n+                        key, callable) == -1) {\n+                    Py_DECREF(key);\n+                    return -1;\n+                }\n+            }\n+        }\n+        Py_INCREF(value);\n+        setitem_result = PyDict_SetItem(new_kwds, key, value);\n+        Py_DECREF(key);\n+        Py_DECREF(value);\n+        if (setitem_result == -1) return -1;\n+    }\n+    return 0;\n+}\n+#endif\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds) {\n+    PyObject *new_kwds=NULL, *result=NULL;\n+#if PY_MAJOR_VERSION < 3\n+    // We're falling back to our full replacement anyway\n+    new_kwds = kwds;\n+#else\n+    PyObject *inspect, *getfullargspec;\n+    PyObject *args_list=NULL, *kwonly_args_list=NULL, *getfullargspec_result=NULL;\n+\n+    // Going via inspect to work out what arguments to pass is unlikely to be the\n+    // fastest thing ever. However, it is compatible, and only happens once\n+    // at module-import time.\n+    inspect = PyImport_ImportModule(\"inspect\");\n+    if (!inspect) goto end;\n+    getfullargspec = PyObject_GetAttrString(inspect, \"getfullargspec\");\n+    Py_DECREF(inspect);\n+    if (!getfullargspec) goto end;\n+    getfullargspec_result = PyObject_CallFunctionObjArgs(getfullargspec, callable, NULL);\n+    Py_DECREF(getfullargspec);\n+    if (!getfullargspec_result) goto end;\n+    args_list = PyObject_GetAttrString(getfullargspec_result, \"args\");\n+    if (!args_list) goto end;\n+    kwonly_args_list = PyObject_GetAttrString(getfullargspec_result, \"kwonlyargs\");\n+    if (!kwonly_args_list) goto end;\n+\n+    new_kwds = PyDict_New();\n+    if (!new_kwds) goto end;\n+\n+    // copy over only those arguments that are in the specification\n+    if (__Pyx_DataclassesCallHelper_FilterToDict(callable, kwds, new_kwds, args_list, 0) == -1) goto end;\n+    if (__Pyx_DataclassesCallHelper_FilterToDict(callable, kwds, new_kwds, kwonly_args_list, 1) == -1) goto end;\n+#endif\n+    result = PyObject_Call(callable, $empty_tuple, new_kwds);\n+#if PY_MAJOR_VERSION > 2\n+    end:",
            "html_url": "https://github.com/cython/cython/pull/5368#discussion_r1162366663",
            "id": 1162366663,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5FSE7H",
            "original_commit_id": "80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
            "original_line": 176,
            "original_position": 101,
            "original_start_line": null,
            "path": "Cython/Utility/Dataclasses.c",
            "position": null,
            "pull_request_review_id": 1378541038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5368",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1162366663/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-04-11T08:11:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1162366663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5368#discussion_r1162368393"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5368"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1162368393"
                }
            },
            "author_association": "MEMBER",
            "body": "Since the Py2 case is entirely different from the Py3 case, I'd spell it out here completely and just write\r\n```c\r\n    return PyObject_Call(callable, $empty_tuple, kwds);\r\n```\r\nso that the Py3 case stays together as a whole to make it easier to read.",
            "commit_id": "e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
            "created_at": "2023-04-11T06:47:00Z",
            "diff_hunk": "@@ -76,3 +76,108 @@ static PyObject* __Pyx_Load_{{cname}}_Module(void); /* proto */\n static PyObject* __Pyx_Load_{{cname}}_Module(void) {\n     return __Pyx_LoadInternalModule(\"{{cname}}\", {{py_code}});\n }\n+\n+//////////////////// DataclassesCallHelper.proto ////////////////////////\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds); /* proto */\n+\n+//////////////////// DataclassesCallHelper ////////////////////////\n+//@substitute: naming\n+\n+// The signature of a few of the dataclasses module functions has\n+// been expanded over the years. Cython always passes the full set\n+// of arguments from the most recent version we know of, so needs\n+// to remove any arguments that don't exist on earlier versions.\n+\n+#if PY_MAJOR_VERSION > 2\n+static int __Pyx_DataclassesCallHelper_FilterToDict(PyObject *callable, PyObject *kwds, PyObject *new_kwds, PyObject *args_list, int is_kwonly) {\n+    Py_ssize_t size, i;\n+    size = PySequence_Size(args_list);\n+    if (size == -1) return -1;\n+\n+    for (i=0; i<size; ++i) {\n+        PyObject *key, *value;\n+        int setitem_result;\n+        key = PySequence_GetItem(args_list, i);\n+        if (!key) return -1;\n+\n+        if (PyUnicode_Check(key) && (\n+                PyUnicode_CompareWithASCIIString(key, \"self\") == 0 ||\n+                // namedtuple constructor in fallback code\n+                PyUnicode_CompareWithASCIIString(key, \"_cls\") == 0)) {\n+            Py_DECREF(key);\n+            continue;\n+        }\n+\n+        value = PyDict_GetItem(kwds, key);\n+        if (!value) {\n+            if (is_kwonly) {\n+                Py_DECREF(key);\n+                continue;\n+            } else {\n+                // The most likely reason for this is that Cython\n+                // hasn't kept up to date with the Python dataclasses module.\n+                // To be nice to our users, try not to fail, but ask them\n+                // to report a bug so we can keep up to date.\n+                value = Py_None;\n+                if (PyErr_WarnFormat(\n+                        PyExc_RuntimeWarning, 1,\n+                        \"Argument %S not passed to %R. This is likely a bug in Cython so please report it.\",\n+                        key, callable) == -1) {\n+                    Py_DECREF(key);\n+                    return -1;\n+                }\n+            }\n+        }\n+        Py_INCREF(value);\n+        setitem_result = PyDict_SetItem(new_kwds, key, value);\n+        Py_DECREF(key);\n+        Py_DECREF(value);\n+        if (setitem_result == -1) return -1;\n+    }\n+    return 0;\n+}\n+#endif\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds) {\n+    PyObject *new_kwds=NULL, *result=NULL;\n+#if PY_MAJOR_VERSION < 3\n+    // We're falling back to our full replacement anyway\n+    new_kwds = kwds;\n+#else",
            "html_url": "https://github.com/cython/cython/pull/5368#discussion_r1162368393",
            "id": 1162368393,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5FSFWJ",
            "original_commit_id": "80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
            "original_line": 147,
            "original_position": 72,
            "original_start_line": 143,
            "path": "Cython/Utility/Dataclasses.c",
            "position": null,
            "pull_request_review_id": 1378541038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5368",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1162368393/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-11T08:11:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1162368393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5368#discussion_r1162419267"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5368"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1162419267"
                }
            },
            "author_association": "MEMBER",
            "body": "This would probably work as well and reduce the amount of code on our side a little.\r\n```suggestion\r\n    getfullargspec_result = PyObject_CallMethodObjArgs(inspect, PYUNICODE(\"getfullargspec\"), callable, NULL);\r\n    Py_DECREF(inspect);\r\n```",
            "commit_id": "e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
            "created_at": "2023-04-11T07:40:21Z",
            "diff_hunk": "@@ -76,3 +76,108 @@ static PyObject* __Pyx_Load_{{cname}}_Module(void); /* proto */\n static PyObject* __Pyx_Load_{{cname}}_Module(void) {\n     return __Pyx_LoadInternalModule(\"{{cname}}\", {{py_code}});\n }\n+\n+//////////////////// DataclassesCallHelper.proto ////////////////////////\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds); /* proto */\n+\n+//////////////////// DataclassesCallHelper ////////////////////////\n+//@substitute: naming\n+\n+// The signature of a few of the dataclasses module functions has\n+// been expanded over the years. Cython always passes the full set\n+// of arguments from the most recent version we know of, so needs\n+// to remove any arguments that don't exist on earlier versions.\n+\n+#if PY_MAJOR_VERSION > 2\n+static int __Pyx_DataclassesCallHelper_FilterToDict(PyObject *callable, PyObject *kwds, PyObject *new_kwds, PyObject *args_list, int is_kwonly) {\n+    Py_ssize_t size, i;\n+    size = PySequence_Size(args_list);\n+    if (size == -1) return -1;\n+\n+    for (i=0; i<size; ++i) {\n+        PyObject *key, *value;\n+        int setitem_result;\n+        key = PySequence_GetItem(args_list, i);\n+        if (!key) return -1;\n+\n+        if (PyUnicode_Check(key) && (\n+                PyUnicode_CompareWithASCIIString(key, \"self\") == 0 ||\n+                // namedtuple constructor in fallback code\n+                PyUnicode_CompareWithASCIIString(key, \"_cls\") == 0)) {\n+            Py_DECREF(key);\n+            continue;\n+        }\n+\n+        value = PyDict_GetItem(kwds, key);\n+        if (!value) {\n+            if (is_kwonly) {\n+                Py_DECREF(key);\n+                continue;\n+            } else {\n+                // The most likely reason for this is that Cython\n+                // hasn't kept up to date with the Python dataclasses module.\n+                // To be nice to our users, try not to fail, but ask them\n+                // to report a bug so we can keep up to date.\n+                value = Py_None;\n+                if (PyErr_WarnFormat(\n+                        PyExc_RuntimeWarning, 1,\n+                        \"Argument %S not passed to %R. This is likely a bug in Cython so please report it.\",\n+                        key, callable) == -1) {\n+                    Py_DECREF(key);\n+                    return -1;\n+                }\n+            }\n+        }\n+        Py_INCREF(value);\n+        setitem_result = PyDict_SetItem(new_kwds, key, value);\n+        Py_DECREF(key);\n+        Py_DECREF(value);\n+        if (setitem_result == -1) return -1;\n+    }\n+    return 0;\n+}\n+#endif\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds) {\n+    PyObject *new_kwds=NULL, *result=NULL;\n+#if PY_MAJOR_VERSION < 3\n+    // We're falling back to our full replacement anyway\n+    new_kwds = kwds;\n+#else\n+    PyObject *inspect, *getfullargspec;\n+    PyObject *args_list=NULL, *kwonly_args_list=NULL, *getfullargspec_result=NULL;\n+\n+    // Going via inspect to work out what arguments to pass is unlikely to be the\n+    // fastest thing ever. However, it is compatible, and only happens once\n+    // at module-import time.\n+    inspect = PyImport_ImportModule(\"inspect\");\n+    if (!inspect) goto end;\n+    getfullargspec = PyObject_GetAttrString(inspect, \"getfullargspec\");\n+    Py_DECREF(inspect);\n+    if (!getfullargspec) goto end;\n+    getfullargspec_result = PyObject_CallFunctionObjArgs(getfullargspec, callable, NULL);\n+    Py_DECREF(getfullargspec);",
            "html_url": "https://github.com/cython/cython/pull/5368#discussion_r1162419267",
            "id": 1162419267,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5FSRxD",
            "original_commit_id": "80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
            "original_line": 160,
            "original_position": 85,
            "original_start_line": 156,
            "path": "Cython/Utility/Dataclasses.c",
            "position": null,
            "pull_request_review_id": 1378541038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5368",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1162419267/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-11T08:11:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1162419267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5368#discussion_r1163750763"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5368"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1163750763"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    return result;\r\n#endif\r\n```",
            "commit_id": "e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
            "created_at": "2023-04-12T07:44:41Z",
            "diff_hunk": "@@ -76,3 +76,103 @@ static PyObject* __Pyx_Load_{{cname}}_Module(void); /* proto */\n static PyObject* __Pyx_Load_{{cname}}_Module(void) {\n     return __Pyx_LoadInternalModule(\"{{cname}}\", {{py_code}});\n }\n+\n+//////////////////// DataclassesCallHelper.proto ////////////////////////\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds); /* proto */\n+\n+//////////////////// DataclassesCallHelper ////////////////////////\n+//@substitute: naming\n+\n+// The signature of a few of the dataclasses module functions has\n+// been expanded over the years. Cython always passes the full set\n+// of arguments from the most recent version we know of, so needs\n+// to remove any arguments that don't exist on earlier versions.\n+\n+#if PY_MAJOR_VERSION >= 3\n+static int __Pyx_DataclassesCallHelper_FilterToDict(PyObject *callable, PyObject *kwds, PyObject *new_kwds, PyObject *args_list, int is_kwonly) {\n+    Py_ssize_t size, i;\n+    size = PySequence_Size(args_list);\n+    if (size == -1) return -1;\n+\n+    for (i=0; i<size; ++i) {\n+        PyObject *key, *value;\n+        int setitem_result;\n+        key = PySequence_GetItem(args_list, i);\n+        if (!key) return -1;\n+\n+        if (PyUnicode_Check(key) && (\n+                PyUnicode_CompareWithASCIIString(key, \"self\") == 0 ||\n+                // namedtuple constructor in fallback code\n+                PyUnicode_CompareWithASCIIString(key, \"_cls\") == 0)) {\n+            Py_DECREF(key);\n+            continue;\n+        }\n+\n+        value = PyDict_GetItem(kwds, key);\n+        if (!value) {\n+            if (is_kwonly) {\n+                Py_DECREF(key);\n+                continue;\n+            } else {\n+                // The most likely reason for this is that Cython\n+                // hasn't kept up to date with the Python dataclasses module.\n+                // To be nice to our users, try not to fail, but ask them\n+                // to report a bug so we can keep up to date.\n+                value = Py_None;\n+                if (PyErr_WarnFormat(\n+                        PyExc_RuntimeWarning, 1,\n+                        \"Argument %S not passed to %R. This is likely a bug in Cython so please report it.\",\n+                        key, callable) == -1) {\n+                    Py_DECREF(key);\n+                    return -1;\n+                }\n+            }\n+        }\n+        Py_INCREF(value);\n+        setitem_result = PyDict_SetItem(new_kwds, key, value);\n+        Py_DECREF(key);\n+        Py_DECREF(value);\n+        if (setitem_result == -1) return -1;\n+    }\n+    return 0;\n+}\n+#endif\n+\n+static PyObject* __Pyx_DataclassesCallHelper(PyObject *callable, PyObject *kwds) {\n+#if PY_MAJOR_VERSION < 3\n+    // We're falling back to our full replacement anyway\n+    return PyObject_Call(callable, $empty_tuple, kwds);\n+#else\n+    PyObject *new_kwds=NULL, *result=NULL;\n+    PyObject *inspect;\n+    PyObject *args_list=NULL, *kwonly_args_list=NULL, *getfullargspec_result=NULL;\n+\n+    // Going via inspect to work out what arguments to pass is unlikely to be the\n+    // fastest thing ever. However, it is compatible, and only happens once\n+    // at module-import time.\n+    inspect = PyImport_ImportModule(\"inspect\");\n+    if (!inspect) goto bad;\n+    getfullargspec_result = PyObject_CallMethodObjArgs(inspect, PYUNICODE(\"getfullargspec\"), callable, NULL);\n+    Py_DECREF(inspect);\n+    if (!getfullargspec_result) goto bad;\n+    args_list = PyObject_GetAttrString(getfullargspec_result, \"args\");\n+    if (!args_list) goto bad;\n+    kwonly_args_list = PyObject_GetAttrString(getfullargspec_result, \"kwonlyargs\");\n+    if (!kwonly_args_list) goto bad;\n+\n+    new_kwds = PyDict_New();\n+    if (!new_kwds) goto bad;\n+\n+    // copy over only those arguments that are in the specification\n+    if (__Pyx_DataclassesCallHelper_FilterToDict(callable, kwds, new_kwds, args_list, 0) == -1) goto bad;\n+    if (__Pyx_DataclassesCallHelper_FilterToDict(callable, kwds, new_kwds, kwonly_args_list, 1) == -1) goto bad;\n+    result = PyObject_Call(callable, $empty_tuple, new_kwds);\n+bad:\n+    Py_XDECREF(getfullargspec_result);\n+    Py_XDECREF(args_list);\n+    Py_XDECREF(kwonly_args_list);\n+    Py_XDECREF(new_kwds);\n+#endif\n+    return result;",
            "html_url": "https://github.com/cython/cython/pull/5368#discussion_r1163750763",
            "id": 1163750763,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5FXW1r",
            "original_commit_id": "c351a28f5b70e7642645570ab11a4a15f2c2a6a1",
            "original_line": 177,
            "original_position": 102,
            "original_start_line": 176,
            "path": "Cython/Utility/Dataclasses.c",
            "position": null,
            "pull_request_review_id": 1380719557,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5368",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1163750763/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-12T07:44:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1163750763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5368/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8f14ad4fd762accd3539b7922d5aac1833cbc07f/comments",
            "commit": {
                "author": {
                    "date": "2023-04-10T12:41:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-04-10T12:41:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Handle additions to signatures in Py3.12 dataclasses\n\nFixes #5346.\n\nI've written a potentially slightly inefficient helper function\nto inspect the signature of dataclasses.field and\ndataclasses._DataclassParams and drop any arguments that are\nunsupported (i.e. ones that we're passing because they apply to\nlater Python versions).",
                "tree": {
                    "sha": "22c5a9b40dd22cff5b4cf971932539ea17307d4a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/22c5a9b40dd22cff5b4cf971932539ea17307d4a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8f14ad4fd762accd3539b7922d5aac1833cbc07f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/8f14ad4fd762accd3539b7922d5aac1833cbc07f",
            "node_id": "C_kwDOAhr4b9oAKDhmMTRhZDRmZDc2MmFjY2QzNTM5Yjc5MjJkNWFhYzE4MzNjYmMwN2Y",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d0bbecb7fba10f8a992972ea824b55a851646938",
                    "sha": "d0bbecb7fba10f8a992972ea824b55a851646938",
                    "url": "https://api.github.com/repos/cython/cython/commits/d0bbecb7fba10f8a992972ea824b55a851646938"
                }
            ],
            "sha": "8f14ad4fd762accd3539b7922d5aac1833cbc07f",
            "url": "https://api.github.com/repos/cython/cython/commits/8f14ad4fd762accd3539b7922d5aac1833cbc07f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cc9747b3a6c6ff64b22734a7498036c4c3e598f7/comments",
            "commit": {
                "author": {
                    "date": "2023-04-10T15:51:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-04-10T15:51:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix when using fallback code",
                "tree": {
                    "sha": "a49346f04871f9d2e022c6af41d2cb3f8ebe0d1f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a49346f04871f9d2e022c6af41d2cb3f8ebe0d1f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cc9747b3a6c6ff64b22734a7498036c4c3e598f7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/cc9747b3a6c6ff64b22734a7498036c4c3e598f7",
            "node_id": "C_kwDOAhr4b9oAKGNjOTc0N2IzYTZjNmZmNjRiMjI3MzRhNzQ5ODAzNmM0YzNlNTk4Zjc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8f14ad4fd762accd3539b7922d5aac1833cbc07f",
                    "sha": "8f14ad4fd762accd3539b7922d5aac1833cbc07f",
                    "url": "https://api.github.com/repos/cython/cython/commits/8f14ad4fd762accd3539b7922d5aac1833cbc07f"
                }
            ],
            "sha": "cc9747b3a6c6ff64b22734a7498036c4c3e598f7",
            "url": "https://api.github.com/repos/cython/cython/commits/cc9747b3a6c6ff64b22734a7498036c4c3e598f7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/83362b9c6e3b4f2e6c39221a19b4abb9ec7f4a7c/comments",
            "commit": {
                "author": {
                    "date": "2023-04-10T16:15:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-04-10T16:15:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix fix",
                "tree": {
                    "sha": "c128537bdacd0f7fe9abba82786e03cc976327da",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c128537bdacd0f7fe9abba82786e03cc976327da"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/83362b9c6e3b4f2e6c39221a19b4abb9ec7f4a7c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/83362b9c6e3b4f2e6c39221a19b4abb9ec7f4a7c",
            "node_id": "C_kwDOAhr4b9oAKDgzMzYyYjljNmUzYjRmMmU2YzM5MjIxYTE5YjRhYmI5ZWM3ZjRhN2M",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cc9747b3a6c6ff64b22734a7498036c4c3e598f7",
                    "sha": "cc9747b3a6c6ff64b22734a7498036c4c3e598f7",
                    "url": "https://api.github.com/repos/cython/cython/commits/cc9747b3a6c6ff64b22734a7498036c4c3e598f7"
                }
            ],
            "sha": "83362b9c6e3b4f2e6c39221a19b4abb9ec7f4a7c",
            "url": "https://api.github.com/repos/cython/cython/commits/83362b9c6e3b4f2e6c39221a19b4abb9ec7f4a7c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/80dec22d1a15ac3a6e649f05a66ad790a7873d0c/comments",
            "commit": {
                "author": {
                    "date": "2023-04-10T16:47:38Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-04-10T16:47:38Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Code style",
                "tree": {
                    "sha": "536ba4efb2afd2e3994a047f91ea897f6de06129",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/536ba4efb2afd2e3994a047f91ea897f6de06129"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
            "node_id": "C_kwDOAhr4b9oAKDgwZGVjMjJkMWExNWFjM2E2ZTY0OWYwNWE2NmFkNzkwYTc4NzNkMGM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/83362b9c6e3b4f2e6c39221a19b4abb9ec7f4a7c",
                    "sha": "83362b9c6e3b4f2e6c39221a19b4abb9ec7f4a7c",
                    "url": "https://api.github.com/repos/cython/cython/commits/83362b9c6e3b4f2e6c39221a19b4abb9ec7f4a7c"
                }
            ],
            "sha": "80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
            "url": "https://api.github.com/repos/cython/cython/commits/80dec22d1a15ac3a6e649f05a66ad790a7873d0c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c351a28f5b70e7642645570ab11a4a15f2c2a6a1/comments",
            "commit": {
                "author": {
                    "date": "2023-04-11T17:21:46Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-04-11T17:21:46Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Comments from review",
                "tree": {
                    "sha": "e0ba1304e4412f3386582a653d0bdd97324d840a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e0ba1304e4412f3386582a653d0bdd97324d840a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c351a28f5b70e7642645570ab11a4a15f2c2a6a1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c351a28f5b70e7642645570ab11a4a15f2c2a6a1",
            "node_id": "C_kwDOAhr4b9oAKGMzNTFhMjhmNWI3MGU3NjQyNjQ1NTcwYWIxMWE0YTE1ZjJjMmE2YTE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
                    "sha": "80dec22d1a15ac3a6e649f05a66ad790a7873d0c",
                    "url": "https://api.github.com/repos/cython/cython/commits/80dec22d1a15ac3a6e649f05a66ad790a7873d0c"
                }
            ],
            "sha": "c351a28f5b70e7642645570ab11a4a15f2c2a6a1",
            "url": "https://api.github.com/repos/cython/cython/commits/c351a28f5b70e7642645570ab11a4a15f2c2a6a1"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e534eb92c5f9add3dc9a8d88fd5408077f5ac12a/comments",
            "commit": {
                "author": {
                    "date": "2023-04-12T07:44:58Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-04-12T07:44:58Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix compilation in Py2.",
                "tree": {
                    "sha": "2602d7522df560f55805a7412a719d558ad6104b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2602d7522df560f55805a7412a719d558ad6104b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
                "verification": {
                    "payload": "tree 2602d7522df560f55805a7412a719d558ad6104b\nparent c351a28f5b70e7642645570ab11a4a15f2c2a6a1\nauthor scoder <stefan_ml@behnel.de> 1681285498 +0200\ncommitter GitHub <noreply@github.com> 1681285498 +0200\n\nFix compilation in Py2.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkNmF6CRBK7hj4Ov3rIwAA+SgIAK7qOX8QugiXOPYAtgISH/3s\n9bJ0jqXoE645Z+ev73m7RxwAvc9UTO0IbulQSV/5mGzfXiCmXinrmeZgUf92WEE+\n0bYPFF+7/pZqap1QhJ8TByj6PrbVANu0LNSkdNxORtucCVLbyn+L/LO49vqayhhC\ns2emN7kSYNfMJQOkwbV0R0R3RDI4xeO3eQlAvN2U/7Gy5IHWj2/LTSD3xOF0Cvgg\n4g4WaPf8JRBUTtMIPEmK5NS7KLLG9u9aYRxOYCC+9DIerm1CiVri9YwNRfTTew/l\nvAFBoOFWmOJJ1UE99D6B9oRsTcEkzSWsm1i/DznnfHYfvV/JOEeeNN5pPTbQmI4=\n=tTq/\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
            "node_id": "C_kwDOAhr4b9oAKGU1MzRlYjkyYzVmOWFkZDNkYzlhOGQ4OGZkNTQwODA3N2Y1YWMxMmE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c351a28f5b70e7642645570ab11a4a15f2c2a6a1",
                    "sha": "c351a28f5b70e7642645570ab11a4a15f2c2a6a1",
                    "url": "https://api.github.com/repos/cython/cython/commits/c351a28f5b70e7642645570ab11a4a15f2c2a6a1"
                }
            ],
            "sha": "e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
            "url": "https://api.github.com/repos/cython/cython/commits/e534eb92c5f9add3dc9a8d88fd5408077f5ac12a"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/5368/commits",
    "created_at": "2023-04-10T12:44:08Z",
    "diff_url": "https://github.com/cython/cython/pull/5368.diff",
    "draft": false,
    "head": {
        "label": "da-woods:handle-dataclass-signature-changes",
        "ref": "handle-dataclass-signature-changes",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2023-04-12T07:44:58Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 70445,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2022-08-11T09:03:48Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/5368",
    "id": 1307482413,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/5368",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b1abcf9d11fc02159b89223b25e27a405f10a657",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 868,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 52,
        "state": "open",
        "title": "3.0",
        "updated_at": "2023-04-12T07:52:09Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "PR_kwDOABDGAc5N7pkt",
    "number": 5368,
    "patch_url": "https://github.com/cython/cython/pull/5368.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/5368/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/e534eb92c5f9add3dc9a8d88fd5408077f5ac12a",
    "title": "Handle additions to signatures in Py3.12 dataclasses",
    "updated_at": "2023-04-12T07:44:59Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/5368",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}