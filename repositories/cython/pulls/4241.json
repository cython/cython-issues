{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/4241/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4241/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/4241"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/4241"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4241/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4241"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1183,
            "forks_count": 1183,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 973,
            "open_issues_count": 973,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2021-08-13T00:55:09Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 62622,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 6295,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2021-08-13T08:52:14Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 6295,
            "watchers_count": 6295
        },
        "sha": "fae33cf7d42559384deb7a9949f47b0881b0a29b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This PR changes #4063 to make the tests work and be more complete.\r\nThe correctness of the compiler behavior is checked if:\r\n1) the `pxd` changes when there is a `py` / `pyx` with the same name\r\n2) `pxd` is created (before this was compiled without) when there is a `py` / `pyx` with the same name\r\n3) the `pxd` changes with the same name as the `py` / `pyx` script that was imported in another `py` / `pyx` script (for simplicity, the import takes place in the second `pxd` file)\r\n\r\n---\r\n\r\nThis PR at least serves as a check that all tests are working.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656399831"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656399831"
                }
            },
            "author_association": "MEMBER",
            "body": "I found it difficult to understand the meaning of the `creating_pxd` argument. Two suggestions:\r\n1) Rename it to \"create_module_pxd\" and make it create a module pxd file if `True`.\r\n2) Pass it as keyword argument. `do_something(with_abc=True)` is understandable whereas `do_something(True)` is not.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:40:51Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656399831",
            "id": 656399831,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjM5OTgzMQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656399831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656401739"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656401739"
                }
            },
            "author_association": "MEMBER",
            "body": "ISTM that these could be called in `setUp()`. And preferably also in `tearDown()`.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:43:21Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656401739",
            "id": 656401739,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQwMTczOQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 37,
            "original_position": 37,
            "original_start_line": 36,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656401739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656402657"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656402657"
                }
            },
            "author_association": "MEMBER",
            "body": "`.pyd` is an extension that can always be ignored, not just here.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:44:24Z",
            "diff_hunk": "@@ -10,9 +10,13 @@ __pycache__\n *venv*/\n \n Cython/Compiler/*.c\n+Cython/Compiler/*.pyd\n Cython/Plex/*.c\n+Cython/Plex/*.pyd\n Cython/Runtime/refnanny.c\n+Cython/Runtime/refnanny.*.pyd\n Cython/Tempita/*.c\n+Cython/Tempita/*.pyd",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656402657",
            "id": 656402657,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQwMjY1Nw==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 19,
            "original_position": 10,
            "original_start_line": 13,
            "path": ".gitignore",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656402657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656404476"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656404476"
                }
            },
            "author_association": "MEMBER",
            "body": "If this variable had a more descriptive name, e.g. `generated_c_file` then several comments would become unnecessary.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:46:40Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):\n+        a_pxd = os.path.join(self.src_dir, 'a.pxd')  # will be changed\n+        a_source = os.path.join(self.src_dir, 'a' + ext)\n+        a_c = os.path.join(self.src_dir, 'a.c')  # change check",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656404476",
            "id": 656404476,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQwNDQ3Ng==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 72,
            "original_position": 72,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656404476",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656406773"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656406773"
                }
            },
            "author_association": "MEMBER",
            "body": "All usages below seem to be joining the lines. Why not do it here?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:49:42Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656406773",
            "id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQwNjc3Mw==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656406773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656408462"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656408462"
                }
            },
            "author_association": "MEMBER",
            "body": "`CODE_POSITION_COMMENT`, maybe? `LINE_1` doesn't tell me anything about the content of that line.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:51:55Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656408462",
            "id": 656408462,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQwODQ2Mg==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656408462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656409650"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656409650"
                }
            },
            "author_association": "MEMBER",
            "body": "`INCORRECT` doesn't fell too long to copy&paste. ;-)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:53:31Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656409650",
            "id": 656409650,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQwOTY1MA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 12,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656409650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656411071"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656411071"
                }
            },
            "author_association": "MEMBER",
            "body": "This could be a class variable.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:55:25Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656411071",
            "id": 656411071,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQxMTA3MQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 29,
            "original_position": 29,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656411071",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656411754"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656411754"
                }
            },
            "author_association": "MEMBER",
            "body": "Since `self.temp_dir` is already a temp directory, `mkdir()` seems enough here.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:56:20Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656411754",
            "id": 656411754,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQxMTc1NA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 27,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656411754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656413693"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656413693"
                }
            },
            "author_association": "MEMBER",
            "body": "This is done so often that it seems worth a helper function, e.g. `write_file(path, content)`.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T16:58:58Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):\n+        a_pxd = os.path.join(self.src_dir, 'a.pxd')  # will be changed\n+        a_source = os.path.join(self.src_dir, 'a' + ext)\n+        a_c = os.path.join(self.src_dir, 'a.c')  # change check\n+\n+        a_line_1 = LINE_1.format(name=\"a\", ext=ext)\n+\n+        if not creating_pxd:\n+            with open(a_pxd, 'w') as f:\n+                f.write('cdef int x\\n')\n+\n+        with open(a_source, 'w') as f:\n+            f.write('x = 1\\n')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656413693",
            "id": 656413693,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjQxMzY5Mw==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 81,
            "original_position": 81,
            "original_start_line": 80,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689756835,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-22T18:02:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656413693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656543191"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656543191"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, I didn't even think about it\r\nBy the way, I'm not sure if it is worth testing for two cases, with level = 2 and 3",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T20:07:45Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656543191",
            "id": 656543191,
            "in_reply_to_id": 656411071,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjU0MzE5MQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 29,
            "original_position": 29,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689949312,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T22:38:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656543191",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656562514"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656562514"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Rename it to \"create_module_pxd\" and make it create a module pxd file if True.\r\n\r\nIn general, this name of the argument is not very specific about the behavior, since in both cases pxd is created. I will try to reflect the behavior more clearly in resolution.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T20:39:06Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656562514",
            "id": 656562514,
            "in_reply_to_id": 656399831,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjU2MjUxNA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689974258,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T20:39:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656562514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656574772"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656574772"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't have any serious arguments against it, it's just a way to make it possible not to change the code if you need to have access to individual lines.\r\nBut if you think that way, in the context of this test case, such functionality will probably not be needed.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T20:57:55Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656574772",
            "id": 656574772,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjU3NDc3Mg==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689989372,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T20:57:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656574772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656576786"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656576786"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In addition, by the name of the function, we should receive lines as an iterable, in the same format as the input `lines`.\r\nTherefore, if you combine all this, then the names of the functions will become larger, that is, `relative_joined_lines`, `relative_joined_lines_from_file`.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T21:00:59Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656576786",
            "id": 656576786,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjU3Njc4Ng==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 689991953,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T21:00:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656576786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656600320"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656600320"
                }
            },
            "author_association": "MEMBER",
            "body": "Or `read_code_from(start_code, offset, line_count)`.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T21:39:57Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656600320",
            "id": 656600320,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjYwMDMyMA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690023429,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T21:39:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656600320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656638533"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656638533"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I solved the problem by adding `join` with the default: `relative_lines_from_file(self, path, line, start, end, join=True)`\r\nI'm in the process of solving everything, then I will push all the commits at once so as not to strain CI.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:03:13Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656638533",
            "id": 656638533,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjYzODUzMw==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690067368,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T23:03:14Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656638533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656641227"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656641227"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Or `read_code_from(start_code, offset, line_count)`\r\n\r\nRather `read_lines_from(start_line, offset, line_count)` and `read_file` will store the lines in `self.last_read_lines` from where `self.read_lines_from` will have access to them.\r\n\r\nQuite confusing, even though we end up writing a little less code, I don't really like this approach.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:10:07Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656641227",
            "id": 656641227,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY0MTIyNw==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690070516,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T23:10:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656641227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656655249"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656655249"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Should i replace `lines[ind-10: ind-1]` with `\"\".join(lines[ind-10: ind-1])`?\r\n\r\nAnd therefore `{1}` to `{1!r}`",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:47:33Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656655249",
            "id": 656655249,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1NTI0OQ==",
            "original_commit_id": "5df40b48373a0ce11fb8f783e9ba71724adbbd14",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": 66,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690086223,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-22T23:47:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656655249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656655758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656655758"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/f4f7ff218123afcc493dcbc8ffacd1b0ea563bea)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:49:03Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656655758",
            "id": 656655758,
            "in_reply_to_id": 656409650,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1NTc1OA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 12,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690086763,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T23:49:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656655758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656657107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656657107"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/9ccd7d3889f551107450acc8854630b00d68aa1f) and [here](https://github.com/cython/cython/pull/4241/commits/3b011a943c3b1da6fd6399946f4e6856c387820f)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:52:48Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656657107",
            "id": 656657107,
            "in_reply_to_id": 656411071,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1NzEwNw==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 29,
            "original_position": 29,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690088176,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T23:52:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656657107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656657306"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656657306"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/11c64cdc54600c724c5323213087bd263c55be33)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:53:22Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656657306",
            "id": 656657306,
            "in_reply_to_id": 656411754,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1NzMwNg==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 27,
            "original_position": 27,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690088416,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T23:53:22Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656657306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656657558"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656657558"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/5df40b48373a0ce11fb8f783e9ba71724adbbd14)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:54:09Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):\n+        a_pxd = os.path.join(self.src_dir, 'a.pxd')  # will be changed\n+        a_source = os.path.join(self.src_dir, 'a' + ext)\n+        a_c = os.path.join(self.src_dir, 'a.c')  # change check\n+\n+        a_line_1 = LINE_1.format(name=\"a\", ext=ext)\n+\n+        if not creating_pxd:\n+            with open(a_pxd, 'w') as f:\n+                f.write('cdef int x\\n')\n+\n+        with open(a_source, 'w') as f:\n+            f.write('x = 1\\n')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656657558",
            "id": 656657558,
            "in_reply_to_id": 656413693,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1NzU1OA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 81,
            "original_position": 81,
            "original_start_line": 80,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690088688,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-22T23:54:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656657558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656657893"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656657893"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/7cedb626075795239ee0ea7375315fd78e41d5e7)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:55:03Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656657893",
            "id": 656657893,
            "in_reply_to_id": 656408462,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1Nzg5Mw==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690089052,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T23:55:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656657893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656658780"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656658780"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder if you are satisfied with the implementation from [here](https://github.com/cython/cython/pull/4241/commits/a049908de6a1f023dd46a09eb462eb963a3ee2aa), then you can resolve the conversation",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:57:08Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656658780",
            "id": 656658780,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1ODc4MA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690089888,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T23:57:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656658780",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656659219"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656659219"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/1f24ca2aba09f3106752a8ff732932f8cf5c7e47)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:58:12Z",
            "diff_hunk": "@@ -10,9 +10,13 @@ __pycache__\n *venv*/\n \n Cython/Compiler/*.c\n+Cython/Compiler/*.pyd\n Cython/Plex/*.c\n+Cython/Plex/*.pyd\n Cython/Runtime/refnanny.c\n+Cython/Runtime/refnanny.*.pyd\n Cython/Tempita/*.c\n+Cython/Tempita/*.pyd",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656659219",
            "id": 656659219,
            "in_reply_to_id": 656402657,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1OTIxOQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 19,
            "original_position": 10,
            "original_start_line": 13,
            "path": ".gitignore",
            "position": null,
            "pull_request_review_id": 690090316,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-22T23:58:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656659219",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656659584"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656659584"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/059a5f883d787a5b2664dcd79e43fe12a7730d29)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-22T23:59:18Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656659584",
            "id": 656659584,
            "in_reply_to_id": 656399831,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY1OTU4NA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690090742,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-22T23:59:18Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656659584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656660352"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656660352"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm not completely sure that I understood you correctly, but if you are satisfied with the [implementation](https://github.com/cython/cython/pull/4241/commits/f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816), resolve the conversation",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T00:01:25Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656660352",
            "id": 656660352,
            "in_reply_to_id": 656401739,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY2MDM1Mg==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 37,
            "original_position": 37,
            "original_start_line": 36,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690091575,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T00:01:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656660352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656661762"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656661762"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "partially resolved [here](https://github.com/cython/cython/pull/4241/commits/3dbf753badb8cd1481bebc355b13e4443c67801c), [here](https://github.com/cython/cython/pull/4241/commits/0c9f5640e171849ca26dc82175b997a3d9a5936c) and in other commits. And [here](https://github.com/cython/cython/pull/4241/commits/27973ce592d11533ae6e4bcdae78163b7358195c) it seemed to me that such a name is still very big.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T00:05:56Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):\n+        a_pxd = os.path.join(self.src_dir, 'a.pxd')  # will be changed\n+        a_source = os.path.join(self.src_dir, 'a' + ext)\n+        a_c = os.path.join(self.src_dir, 'a.c')  # change check",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656661762",
            "id": 656661762,
            "in_reply_to_id": 656404476,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY2MTc2Mg==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 72,
            "original_position": 72,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690093341,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-23T00:05:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656661762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r656662254"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/656662254"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder If you agree to leave [these](https://github.com/cython/cython/pull/4241/commits/27973ce592d11533ae6e4bcdae78163b7358195c) (shorten very large variable names) changes, you can resolve the conversation",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T00:07:38Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):\n+        a_pxd = os.path.join(self.src_dir, 'a.pxd')  # will be changed\n+        a_source = os.path.join(self.src_dir, 'a' + ext)\n+        a_c = os.path.join(self.src_dir, 'a.c')  # change check",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r656662254",
            "id": 656662254,
            "in_reply_to_id": 656404476,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjY2MjI1NA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 72,
            "original_position": 72,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690093977,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-23T00:07:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/656662254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657000305"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657000305"
                }
            },
            "author_association": "MEMBER",
            "body": "> I solved the problem by adding `join` with the default: `relative_lines_from_file(self, path, line, start, end, join=True)`\r\n\r\nYAGNI ?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T11:21:55Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657000305",
            "id": 657000305,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAwMDMwNQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690523066,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-23T11:21:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657000305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657003319"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657003319"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> YAGNI ?\r\n\r\n`¯\\_(ツ)_/¯` idk, but it looks like this",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T11:26:43Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657003319",
            "id": 657003319,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAwMzMxOQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690527120,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-23T11:26:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657003319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657004020"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657004020"
                }
            },
            "author_association": "MEMBER",
            "body": "I would still suggest `generated_c_file` (because it's not C, it's a file). And then maybe `dep_c_file` and `module_c_file` ?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T11:27:47Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):\n+        a_pxd = os.path.join(self.src_dir, 'a.pxd')  # will be changed\n+        a_source = os.path.join(self.src_dir, 'a' + ext)\n+        a_c = os.path.join(self.src_dir, 'a.c')  # change check",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657004020",
            "id": 657004020,
            "in_reply_to_id": 656404476,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAwNDAyMA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 72,
            "original_position": 72,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690528013,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-23T11:27:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657004020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657005102"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657005102"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, that's better.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T11:29:26Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657005102",
            "id": 657005102,
            "in_reply_to_id": 656401739,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAwNTEwMg==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 37,
            "original_position": 37,
            "original_start_line": 36,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690529307,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T11:29:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657005102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657006944"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657006944"
                }
            },
            "author_association": "MEMBER",
            "body": "Sounds better to have a string, but I haven't seen the output. Whatever you think is clearer when the test fails.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T11:32:24Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657006944",
            "id": 657006944,
            "in_reply_to_id": 656655249,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAwNjk0NA==",
            "original_commit_id": "5df40b48373a0ce11fb8f783e9ba71724adbbd14",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": 66,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690531677,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T11:32:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657006944",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657015275"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657015275"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Example:\r\njoin + {1}:\r\n```python\r\nValueError: '  /* \"a.pyx\":1\\n-' was not found, presumably in\r\n  /* \"a.pyx\":1\r\n * x = 1             # <<<<<<<<<<<<<<\r\n */\r\n  __pyx_v_1a_x = 1.0;\r\n  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_1);\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\r\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\r\n```\r\n\r\njoin + {1!r}:\r\n```python\r\nValueError: '  /* \"a.pyx\":1\\n-' was not found, presumably in '\\n  /* \"a.pyx\":1\\n * x = 1             # <<<<<<<<<<<<<<\\n */\\n  __pyx_v_1a_x = 1.0;\\n  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)\\n  __Pyx_GOTREF(__pyx_t_1);\\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\\n'   \r\n```\r\n\r\nno join + {1}/{1!r}:\r\n```python\r\nValueError: '  /* \"a.pyx\":1\\n-' was not found, presumably in ['\\n', '  /* \"a.pyx\":1\\n', ' * x = 1             # <<<<<<<<<<<<<<\\n', ' */\\n', '  __pyx_v_1a_x = 1.0;\\n', '  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)\\n', '  __Pyx_GOTREF(__pyx_t_1);\\n', '  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\\n', '  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\\n']\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T11:45:37Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657015275",
            "id": 657015275,
            "in_reply_to_id": 656655249,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAxNTI3NQ==",
            "original_commit_id": "5df40b48373a0ce11fb8f783e9ba71724adbbd14",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": 66,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690542614,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T11:46:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657015275",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657022835"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657022835"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/991717ddf2214b6b0fceba81f69f6d787fb65afd)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T11:56:52Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))\n+        except Exception as e:\n+            raise e\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        return self.relative_lines(lines, line, start, end)\n+\n+    def recythonize_on_pxd_change(self, ext, creating_pxd):\n+        a_pxd = os.path.join(self.src_dir, 'a.pxd')  # will be changed\n+        a_source = os.path.join(self.src_dir, 'a' + ext)\n+        a_c = os.path.join(self.src_dir, 'a.c')  # change check",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657022835",
            "id": 657022835,
            "in_reply_to_id": 656404476,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAyMjgzNQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 72,
            "original_position": 72,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690552579,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-23T11:56:52Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657022835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657024281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657024281"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ok, @scoder is it enough to just make `relative_lines_from_file` always join lines?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T11:59:00Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657024281",
            "id": 657024281,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAyNDI4MQ==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690554532,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-23T11:59:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657024281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657029063"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657029063"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Sounds better to have a string, but I haven't seen the output. Whatever you think is clearer when the test fails.\r\n\r\n@scoder The point is that in the case of join + {1} we have a nice output, but in the case of no join + {1}/{1!r} it is easier to understand why the search failed, because we see where and how the lines end.\r\nIn the third case, we can try to understand what is wrong with the search, but this is a little more difficult, since the line is merged into one and we do not see where it ends immediately.\r\n\r\nI think if we conclude in the form\r\n```python\r\nValueError: 'line' was not found, presumably in\r\n'line x'\r\n'line x + 1'\r\n```\r\nit will be both nice and easy to look for an error.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T12:06:16Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657029063",
            "id": 657029063,
            "in_reply_to_id": 656655249,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAyOTA2Mw==",
            "original_commit_id": "5df40b48373a0ce11fb8f783e9ba71724adbbd14",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": 66,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690561212,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T12:06:16Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657029063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657038050"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657038050"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/bc1ad78558e36b8d360824d3cf983b7c7db998eb)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T12:19:09Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657038050",
            "id": 657038050,
            "in_reply_to_id": 656655249,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAzODA1MA==",
            "original_commit_id": "5df40b48373a0ce11fb8f783e9ba71724adbbd14",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": 66,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690573226,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T12:19:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657038050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657039350"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657039350"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> resolved [here](https://github.com/cython/cython/pull/4241/commits/bc1ad78558e36b8d360824d3cf983b7c7db998eb)\r\n\r\nimplemented this idea\r\n\r\n> I think if we conclude in the form\r\n> \r\n> ```python\r\n> ValueError: 'line' was not found, presumably in\r\n> 'line x'\r\n> 'line x + 1'\r\n> ```\r\n> \r\n> it will be both nice and easy to look for an error.\r\n\r\n",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T12:20:57Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):\n+        try:\n+            ind = lines.index(line)\n+            return lines[ind+start: ind+end]\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in {1}\".format(\n+                    line, lines[ind-10: ind-1]))",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657039350",
            "id": 657039350,
            "in_reply_to_id": 656655249,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzAzOTM1MA==",
            "original_commit_id": "5df40b48373a0ce11fb8f783e9ba71724adbbd14",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": 66,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690574928,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T12:20:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657039350",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657046103"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657046103"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`clear_instance_method_caches` vs `clear_method_caches`",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T12:29:37Z",
            "diff_hunk": "@@ -54,6 +54,21 @@ def wrapper(*args):\n     return wrapper\n \n \n+# or clear_instance_method_caches\n+def clear_method_caches(instance):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657046103",
            "id": 657046103,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzA0NjEwMw==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 58,
            "original_position": 5,
            "original_start_line": 57,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 690583441,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T12:29:37Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657046103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657052375"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657052375"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think it will be useful to move the auxiliary functions, such as [`fresh_cythonize`](https://github.com/cython/cython/pull/4241/files#diff-e4fc2a69422e9be305ea77db346411e8e2e3e179943ee3ef90cf1f00e64e7b7cR46-R49), [`write_to_file`](https://github.com/cython/cython/pull/4241/files#diff-e4fc2a69422e9be305ea77db346411e8e2e3e179943ee3ef90cf1f00e64e7b7cR42-R44) and [`сlear_function_and_Dependencies_caches`](https://github.com/cython/cython/pull/4241/files#diff-e4fc2a69422e9be305ea77db346411e8e2e3e179943ee3ef90cf1f00e64e7b7cR21-R23), into a separate file with the name, for example, `UnitTestHelpers`. Moreover, these functions are also used / can already be used with other files, for example [`TestCyCache.py`](https://github.com/cython/cython/blob/master/Cython/Build/Tests/TestCyCache.py)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T12:37:04Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657052375",
            "id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzA1MjM3NQ==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690593668,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T12:37:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657052375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657054520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657054520"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "*A version of `fresh_cythonize` without `language_level`:\r\n```python\r\ndef fresh_cythonize(self, *args, **kwargs):\r\n    self.сlear_function_and_Dependencies_caches()\r\n    Cython.Build.Dependencies.cythonize(*args, **kwargs)\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-23T12:39:18Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657054520",
            "id": 657054520,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzA1NDUyMA==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 690595819,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-23T12:39:18Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657054520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r657849570"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/657849570"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder What do you think is worth moving these functions to another file?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-24T11:07:47Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r657849570",
            "id": 657849570,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1Nzg0OTU3MA==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 691623499,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-24T11:07:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/657849570",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r659978966"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/659978966"
                }
            },
            "author_association": "MEMBER",
            "body": "That's what I meant, yes. `relative_lines()` isn't used anywhere directly, is it?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T17:26:40Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r659978966",
            "id": 659978966,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTk3ODk2Ng==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694211832,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T17:26:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/659978966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r660010718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660010718"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # Make sure that the file has a newer timestamp than any of the previously written files.\r\n```\r\nWe probably don't need to do this for all files, though, right? It should be enough to add a sleep whenever we explicitly want a file to be newer.\r\n\r\nYou could add an additional argument `newer_than=None` and pass the file path that we want to be older. Then we can check the timestamp here and add a `while` loop that runs until `os.touch(path)` results in a newer timestamp.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T18:10:27Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r660010718",
            "id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAxMDcxOA==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694254269,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T18:13:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660010718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r660016416"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660016416"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> `relative_lines()` isn't used anywhere directly, is it?\r\n\r\nBecause I just created them for this PR, they are not used anywhere except for the test case. In it, `relative_lines` was not used directly.\r\nBy the way, I think this (or `relative_lines_from_file`) function can be used to improve the output on failure in the similar [TestCyCache.py](https://github.com/cython/cython/blob/304b82267eda219fb801552341fa888b17f7db33/Cython/Build/Tests/TestCyCache.py#L52)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T18:19:20Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r660016416",
            "id": 660016416,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAxNjQxNg==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694261583,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-28T18:19:21Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660016416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r660030772"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660030772"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder well, are we going to carry out the [same functionality](https://github.com/cython/cython/pull/4241#discussion_r657052375) outside the test cases?\r\nIt's just that otherwise it won't be very DRY to have the same `fresh_cythonize` in two different files.\r\n\r\nWell also, [which name is better](https://github.com/cython/cython/pull/4241#discussion_r657046103)?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T18:43:03Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r660030772",
            "id": 660030772,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAzMDc3Mg==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694280755,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T18:43:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660030772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r660039982"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660039982"
                }
            },
            "author_association": "MEMBER",
            "body": "To be clear, my guess is that this works on some systems because creating the files takes sufficiently long there and/or the resolution of file timestamps is sufficiently high on these systems to create a newer timestamp for the second file. Feels like an accident though. We should prevent this from depending on the speed of the system it runs on and make sure that we have a newer timestamp when we depend on it to be newer.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T18:57:49Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r660039982",
            "id": 660039982,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDAzOTk4Mg==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694292747,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T18:57:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660039982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r660045900"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660045900"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> We should prevent this from depending on the speed of the system it runs on and make sure that we have a newer timestamp when we depend on it to be newer.\r\n\r\nExactly! Therefore, #4245 is waiting for its PR, separate from this. In this we have already made a kludge, and it doesn't make much sense to improve it (kludge).",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T19:07:34Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r660045900",
            "id": 660045900,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDA0NTkwMA==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694300804,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T19:07:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660045900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r660057111"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660057111"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "> Exactly! Therefore, #4245 is waiting for its PR, separate from this. In this we have already made a kludge, and it doesn't make much sense to improve it (kludge).\r\n\r\nDisagree with this. It is perfectly reasonable for Cython to use a timestamp to determine if a file has changed (because there's no other information it can sensibly use, and because the resolution is fine for human use).\r\n\r\nThe only place that this matters is in this particular test. Therefore there's nothing else to fix except this test. And the correct fix is to wait long enough that the timestamp has changed. There is no broader issue that needs fixing.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T19:26:14Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r660057111",
            "id": 660057111,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDA1NzExMQ==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694315547,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T19:26:14Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660057111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r660069600"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660069600"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> The only place that this matters is in this particular test\r\n\r\nWhat if the user encounters such a problem? As for me, if you run cythonization, then it should use the most recent versions of the files, regardless of which system the code is run on and how the system works.\r\n\r\nI do not want, even if it is only a handful of users, to face this problem.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T19:46:25Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r660069600",
            "id": 660069600,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDA2OTYwMA==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694332768,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T19:46:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660069600",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r660089865"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/660089865"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": ">  until os.touch(path) results in a newer timestamp\r\n\r\n@scoder `os.utime`? `os.stat`?\r\nThere is no `os.touch`. .. Since python 3.4 we have `pathlib.Path.touch`, but this is not what we want.\r\n\r\nA note to `os.utime`, I think, related to our problem:\r\n> Note that the exact times you set here may not be returned by a subsequent `stat()` call, depending on the resolution with which your operating system records access and modification times; see `stat()`. The best way to preserve exact times is to use the `st_atime_ns` and `st_mtime_ns` fields from the `os.stat()` result object with the ns parameter to `utime`.\r\n\r\n\r\nAnd the problem with the solution you proposed is this: you do not always need to `sleep`, sometimes the timestamp of files has time to update within a given time, here is an [example](https://github.com/cython/cython/pull/4241#issuecomment-865472087) (due to the inconsistent load of the system, such differences appear in the test results). Thus, if the timestamp of the file has been updated before the first check, then we will get stuck in an infinite loop, you can, of course, again, make a kludge and limit the number of cycles, depending on the existing understanding (based on tests) about how long it takes to the timestamp of the file to definitely update.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-28T20:19:52Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r660089865",
            "id": 660089865,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDA4OTg2NQ==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 694359013,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-28T20:25:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/660089865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661175663"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661175663"
                }
            },
            "author_association": "MEMBER",
            "body": "> > until os.touch(path) results in a newer timestamp\r\n> \r\n> @scoder `os.utime`? `os.stat`?\r\n> There is no `os.touch`. .. Since python 3.4 we have `pathlib.Path.touch`, but this is not what we want.\r\n\r\nIt's what I meant, though. Let me rephrase: \"add a while loop that runs until an update of the file's timestamp leads to a visibly newer timestamp\". Feel free to use `os.stat()` for the \"visibly\" part. Or `os.path.getmtime()`, preferably.\r\n\r\n\r\n> What if the user encounters such a problem?\r\n\r\nThey won't. The failure is the result of an artificial test setup that does not correctly model the situation to test. At least not safely so.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T06:45:51Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661175663",
            "id": 661175663,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTE3NTY2Mw==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 695750276,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T06:45:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661175663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661556125"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661556125"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Here is the [implementation](https://github.com/cython/cython/pull/4241/commits/a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6), let's see if it passes the tests",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T14:56:11Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661556125",
            "id": 661556125,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTU1NjEyNQ==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696274254,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T14:56:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661556125",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661577043"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661577043"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Small [fix](https://github.com/cython/cython/pull/4241/commits/d9109485be7c1ddc2200eecb3b764a9803516b5f) for compatibility reasons, but the solution apparently still doesn't work",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T15:19:08Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661577043",
            "id": 661577043,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTU3NzA0Mw==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696302456,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T15:19:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661577043",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661581326"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661581326"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If you are satisfied with the [implementation](https://github.com/cython/cython/pull/4241/commits/8b622df536a5fe1c40e632500c2b4ac61ce974a5), resolve the conversation.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T15:24:10Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661581326",
            "id": 661581326,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTU4MTMyNg==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696308543,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-30T15:24:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661581326",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661602361"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661602361"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "*sigh* I can't debug the solution properly, and there is already an issue dedicated to this, and we already have a way to make this work .. it requires a lot more investigation, the problem is not as obvious as it seemed, maybe we will transfer responsibility for this to the very issue, please?\r\n\r\nOne way or another, if you try to solve this problem through me, then the process will be very delayed, it must first of all be someone with a Linux-like system.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T15:47:32Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661602361",
            "id": 661602361,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTYwMjM2MQ==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696339008,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T15:56:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661602361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661744929"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661744929"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> \r\n> \r\n> Here is the [implementation](https://github.com/cython/cython/pull/4241/commits/a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6), let's see if it passes the tests\r\n\r\nWhat inside the while loop changes the path's timestamp?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T19:13:30Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661744929",
            "id": 661744929,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTc0NDkyOQ==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696529861,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T19:13:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661744929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11340332?v=4",
                "events_url": "https://api.github.com/users/goldenrockefeller/events{/privacy}",
                "followers_url": "https://api.github.com/users/goldenrockefeller/followers",
                "following_url": "https://api.github.com/users/goldenrockefeller/following{/other_user}",
                "gists_url": "https://api.github.com/users/goldenrockefeller/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/goldenrockefeller",
                "id": 11340332,
                "login": "goldenrockefeller",
                "node_id": "MDQ6VXNlcjExMzQwMzMy",
                "organizations_url": "https://api.github.com/users/goldenrockefeller/orgs",
                "received_events_url": "https://api.github.com/users/goldenrockefeller/received_events",
                "repos_url": "https://api.github.com/users/goldenrockefeller/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/goldenrockefeller/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/goldenrockefeller/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/goldenrockefeller"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661748146"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661748146"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> What inside the while loop changes the path's timestamp?\r\n \r\n@goldenrockefeller  It's not about the while loop, it's just waiting for the timestamp to change.  It is about writing to a file and waiting for the OS to update the timestamp of that file.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T19:18:44Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661748146",
            "id": 661748146,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTc0ODE0Ng==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696533928,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T19:18:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661748146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661753168"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661753168"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There is simply an assumption that if the OS has changed the timestamp of the file, the cythonize function can access the new version of the file, but it seems that this is not the case, at least on Linux again it does not work.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T19:27:28Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661753168",
            "id": 661753168,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTc1MzE2OA==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696540646,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T19:27:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661753168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661757139"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661757139"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "ohhh, I pushed .. `res` ... ohh that was temporary name ..",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T19:33:41Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661757139",
            "id": 661757139,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTc1NzEzOQ==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696545669,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T19:33:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661757139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661759013"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661759013"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Even though [it](https://github.com/cython/cython/pull/4241/commits/75cbe31826c61e25d7a0bab57eb9d41853b49b9d) doesn't change anything in terms of failures on Linux",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T19:36:56Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661759013",
            "id": 661759013,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTc1OTAxMw==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696548196,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T19:37:22Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661759013",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661759926"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661759926"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I could write it like this\r\n```python\r\nwhile os.path.getmtime(path) == timestamp_before_change:\r\n    pass\r\n```\r\nbut I think the current way is easier to understand.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T19:38:26Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661759926",
            "id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTc1OTkyNg==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696549426,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T19:38:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661759926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661795988"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661795988"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> \r\n> \r\n> > What inside the while loop changes the path's timestamp?\r\n> \r\n> @goldenrockefeller It's not about the while loop, it's just waiting for the timestamp to change. It is about writing to a file and waiting for the OS to update the timestamp of that file.\r\n\r\nTry continuously writing to file until the timestamp changes:\r\n```\r\n        # Make sure the file has a newer timestamp,\r\n        # otherwise cythonize does not work as expected\r\n        # on Linux-like systems #4245\r\n        with open(path, \"w\") as f:\r\n            f.write(text)\r\n        while os.path.getmtime(path) == timestamp_before_change:\r\n            with open(path, \"w\") as f:\r\n                f.write(text)\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T20:40:09Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661795988",
            "id": 661795988,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTc5NTk4OA==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696597957,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T20:40:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661795988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11340332?v=4",
                "events_url": "https://api.github.com/users/goldenrockefeller/events{/privacy}",
                "followers_url": "https://api.github.com/users/goldenrockefeller/followers",
                "following_url": "https://api.github.com/users/goldenrockefeller/following{/other_user}",
                "gists_url": "https://api.github.com/users/goldenrockefeller/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/goldenrockefeller",
                "id": 11340332,
                "login": "goldenrockefeller",
                "node_id": "MDQ6VXNlcjExMzQwMzMy",
                "organizations_url": "https://api.github.com/users/goldenrockefeller/orgs",
                "received_events_url": "https://api.github.com/users/goldenrockefeller/received_events",
                "repos_url": "https://api.github.com/users/goldenrockefeller/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/goldenrockefeller/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/goldenrockefeller/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/goldenrockefeller"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661801436"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661801436"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Try continuously writing to file until the timestamp changes:\r\n\r\nWhat for? In this case, are the tests run?\r\n(and it looks like a kludge, tbh)\r\n\r\nNot sure what you are trying to solve, the timestamp is changing, but the problem persists, it's not about the timestamp.\r\nTake a look at the test output in the case of Linux. [example](https://github.com/cython/cython/pull/4241/checks?check_run_id=2955886458#step:5:14137)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T20:49:23Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661801436",
            "id": 661801436,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgwMTQzNg==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696604916,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T20:49:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661801436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661807262"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661807262"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "On Linux, some process takes relatively long time, so `cythonize` doesn't see the latest version of files, so the easiest way to deal with this in this PR is to just [wait a bit](https://github.com/cython/cython/pull/4241#issuecomment-867390141)\r\n\r\nRegardless of the source of the problem and the possibility of solving it inside `cythonize`, I think this is what needs to be solved in #4245, and not try to guess the reason for it in this PR. It just delays the merge, thus adding useful testing.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T20:59:31Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661807262",
            "id": 661807262,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgwNzI2Mg==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696612668,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T20:59:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661807262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661812625"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661812625"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> the possibility of solving it inside `cythonize`\r\n\r\nAs I said earlier, since `all_dependencies` always detects a newer version of files (because it never crashes), I think it can be solved by changing something inside `cythonize`, but that requires a lot more research. This is problematic for me, since I work under Windows and do not have this problem.\r\n\r\nWe have already made sure that the problem is not as simple as it seemed, so I propose to leave the kludge with `sleep` and move on.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T21:08:47Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661812625",
            "id": 661812625,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgxMjYyNQ==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696619737,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T21:10:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661812625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661817392"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661817392"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If someone has an intention to solve this problem, they would create a separate PR related to the #4245 and there they would already try to find a good solution.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T21:17:34Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661817392",
            "id": 661817392,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgxNzM5Mg==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696625912,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T21:17:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661817392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661820314"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661820314"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder I never got a single answer to my questions in [this](https://github.com/cython/cython/pull/4241#discussion_r660030772) conversation. If you think that it is not worth doing, say so, if you are thinking about it, then please say it.\r\nI just don't understand why you are responding to other conversations but ignoring this one.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T21:22:57Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661820314",
            "id": 661820314,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgyMDMxNA==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696629650,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T21:22:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661820314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661831750"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661831750"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Not sure what you are trying to solve, the timestamp is changing, but the problem persists, it's not about the timestamp.\r\n\r\nWaiting before writing to file helps in these tests, but waiting after writing to file doesn't. I am thinking that trying out alternative solutions like putting `time.sleep(1)` after the writing to file or doing what I suggested will help investigate the problem. If this is really about timestamp resolution on Ubuntu, or how Ubuntu processes are scheduled, there is not much I can see being done on the cython side to fix this problem. Maybe, force a recythonization if the current time is within a few seconds of the file's last modification time? (whether or not the file actually changed of not, since we can not know for sure)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T21:44:31Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661831750",
            "id": 661831750,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTgzMTc1MA==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696643911,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T21:45:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661831750",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11340332?v=4",
                "events_url": "https://api.github.com/users/goldenrockefeller/events{/privacy}",
                "followers_url": "https://api.github.com/users/goldenrockefeller/followers",
                "following_url": "https://api.github.com/users/goldenrockefeller/following{/other_user}",
                "gists_url": "https://api.github.com/users/goldenrockefeller/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/goldenrockefeller",
                "id": 11340332,
                "login": "goldenrockefeller",
                "node_id": "MDQ6VXNlcjExMzQwMzMy",
                "organizations_url": "https://api.github.com/users/goldenrockefeller/orgs",
                "received_events_url": "https://api.github.com/users/goldenrockefeller/received_events",
                "repos_url": "https://api.github.com/users/goldenrockefeller/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/goldenrockefeller/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/goldenrockefeller/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/goldenrockefeller"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r661843996"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/661843996"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Good assumptions @goldenrockefeller, however, I would rather suggest that you test them not through me, but by creating a [new PR based on this](https://github.com/cython/cython/pull/4241#issuecomment-866215524) (I can tell you what is needed for github desktop, I sort of figured out how this can be done) It will be faster this way\r\n\r\n.. and I'm already tired of this desire to solve everything on the spot no matter what.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-06-30T22:10:42Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r661843996",
            "id": 661843996,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTg0Mzk5Ng==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 696659591,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-30T22:10:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/661843996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663021431"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663021431"
                }
            },
            "author_association": "MEMBER",
            "body": "It took me a while to understand what you want to say with this comment. It's clearer without it, I think.\r\n```suggestion\r\n        os.mkdir(self.src_dir)\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T13:40:15Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663021431",
            "id": 663021431,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzAyMTQzMQ==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 34,
            "original_position": 39,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698198024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-02T13:53:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663021431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663024002"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663024002"
                }
            },
            "author_association": "MEMBER",
            "body": "What you've written here is an infinite loop. You're not updating the timestamp inside of the loop.\r\nAlso, this isn't _always_ necessary, only in a few cases. Maybe we should have a separate method for this to make it explicit in the test functions exactly _when_ this is needed.\r\nPlease also add a little `time.sleep(0.01)` to avoid busy looping.\r\nAnd I very much prefer to have the condition in the where-loop clause, where it belongs.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T13:43:50Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663024002",
            "id": 663024002,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzAyNDAwMg==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698198024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-02T13:53:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663024002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663025680"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663025680"
                }
            },
            "author_association": "MEMBER",
            "body": "As I suggested before, I don't see a need for two methods. One seems enough. It can always be refactored later, if the need arises.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T13:46:21Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663025680",
            "id": 663025680,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzAyNTY4MA==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698198024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-02T13:53:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663025680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663029871"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663029871"
                }
            },
            "author_association": "MEMBER",
            "body": "I think `clear_method_caches` is clear enough (no pun intended). The word \"instance\" doesn't add anything, IMHO.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T13:52:26Z",
            "diff_hunk": "@@ -54,6 +54,21 @@ def wrapper(*args):\n     return wrapper\n \n \n+# or clear_instance_method_caches\n+def clear_method_caches(instance):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663029871",
            "id": 663029871,
            "in_reply_to_id": 657046103,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzAyOTg3MQ==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 58,
            "original_position": 5,
            "original_start_line": 57,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 698198024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-02T13:53:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663029871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663225589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663225589"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> What you've written here is an infinite loop. You're not updating the timestamp inside of the loop.\r\n\r\nUm in the code before that I open the file, so the OS has to update the timestamp ...",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T20:06:29Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663225589",
            "id": 663225589,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzIyNTU4OQ==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698471873,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-02T20:06:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663225589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663226724"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663226724"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> And I very much prefer to have the condition in the where-loop clause, where it belongs.\r\n\r\nWdym? Do you prefer `while os.path.getmtime (path) == timestamp_before_change` or what?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T20:09:34Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663226724",
            "id": 663226724,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzIyNjcyNA==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698473349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-02T20:09:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663226724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663241166"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663241166"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T20:49:27Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCOR = \"Incorrect cythonization\"\n+LINE_1 = '  /* \"{name}{ext}\":1\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        self.dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        self.language_level = 3\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        shutil.rmtree(self.temp_dir)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines(self, lines, line, start, end):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663241166",
            "id": 663241166,
            "in_reply_to_id": 656406773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI0MTE2Ng==",
            "original_commit_id": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698491484,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-02T20:49:27Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663241166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663285132"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663285132"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Also, this isn't _always_ necessary, only in a few cases. Maybe we should have a separate method for this to make it explicit in the test functions exactly _when_ this is needed.\r\n> Please also add a little `time.sleep(0.01)` to avoid busy looping.\r\n\r\n[Done](https://github.com/cython/cython/pull/4241/commits/cdec3726ec8632c2a68823d1465e71c73ea79430), by the way, on average, getting the timestamp update takes literally a few iterations, so reducing the time will make the test faster .. although it does not affect much.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T23:41:58Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663285132",
            "id": 663285132,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI4NTEzMg==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698542013,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-02T23:41:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663285132",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663287436"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663287436"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "added \"Pure\" for easier understanding",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-02T23:55:25Z",
            "diff_hunk": "@@ -36,8 +36,24 @@ Bugs fixed\n * Code optimisations were not applied to methods of Cython implemented C++ classes.\n   Patch by David Woods.  (Github issue :issue:`4212`)\n \n+* The special ``cython`` module was not always detected in PEP-484 type annotations.\n+  Patch by David Woods.  (Github issue :issue:`4243`)\n+\n+* Conversion from Python dicts to ``std::map`` was broken.\n+  Patch by David Woods and Mikkel Skofelt.  (Github issues :issue:`4231`, :issue:`4228`)\n+\n+* The exception handling annotation ``except +*`` was broken.\n+  Patch by David Woods.  (Github issues :issue:`3065`, :issue:`3066`)\n+\n+* Attribute annotations in Python classes are now ignored, because they are\n+  just Python objects in a dict (as opposed to the fields of extension types).\n+  Patch by David Woods.  (Github issues :issue:`4196`, :issue:`4198`)\n+\n * An unnecessary slow-down at import time was removed from ``Cython.Distutils``.\n-  Original patch by Anthony Sottile.  (Github pull request :pr:`4224`)\n+  Original patch by Anthony Sottile.  (Github issue :issue:`4224`)\n+\n+* Pure Python modules were not automatically recompiled when only their ``.pxd`` file changed.",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663287436",
            "id": 663287436,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI4NzQzNg==",
            "original_commit_id": "488afd2bd79ea0d2aea51b58bfc7539604440e6f",
            "original_line": 55,
            "original_position": 21,
            "original_start_line": null,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698544197,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-02T23:55:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663287436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663288594"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663288594"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "comment removed [here](https://github.com/cython/cython/pull/4241/commits/4974fa843a599eff29b02585415923fa78b76313)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T00:02:38Z",
            "diff_hunk": "@@ -54,6 +54,21 @@ def wrapper(*args):\n     return wrapper\n \n \n+# or clear_instance_method_caches\n+def clear_method_caches(instance):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663288594",
            "id": 663288594,
            "in_reply_to_id": 657046103,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI4ODU5NA==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 58,
            "original_position": 5,
            "original_start_line": 57,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 698545338,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T00:02:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663288594",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663288892"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663288892"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`write_to_file_with_timestamp_update` is still not used because I am trying to find the right places to use it",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T00:04:42Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663288892",
            "id": 663288892,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzI4ODg5Mg==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698545652,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T00:04:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663288892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663323090"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663323090"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry, but such a change really isn't within the scope of this PR.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T05:58:03Z",
            "diff_hunk": "@@ -75,7 +75,7 @@ Other changes\n   Patch by David Woods.  (Github issue :issue:`887`)\n \n * Support for the now unsupported Pyston V1 was removed in favour of Pyston V2.\n-  Patch by Marius Wachtler.  (Github issue :issue:`4211`)\n+  Patch by Marius Wachtler.  (Github pull request :pr:`4211`)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663323090",
            "id": 663323090,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyMzA5MA==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 78,
            "original_position": 28,
            "original_start_line": null,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698569227,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-03T06:11:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663323090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663323817"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663323817"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok, maybe we have different ideas about why this issue arises. My understanding is as follows.\r\n\r\nIn some tests, we create two files (or overwrite a file with new content), and the second one is _intended_ to be newer than the first. If we create the files fast enough, they may end up with the same timestamp. This makes the test fail, because `cythonize` considers the relevant file \"not newer\" and thus \"already up to date\", and thus refuses to recreate it.\r\n\r\nThus my proposal to _make sure_ that the second file has a newer timestamp than the first that we created.\r\nI intended the new method to be used whenever we create files in the test that need to have different timestamps. I asked for a second method because that makes it explicit in the test code whenever we want a file to be newer. Thus, it should both fix the test and help with understanding them for humans.\r\n\r\nDoes this match your understanding, or could you explain your view on the matter?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:07:39Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663323817",
            "id": 663323817,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyMzgxNw==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698569227,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T06:48:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663323817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663325634"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663325634"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry, seems that I overlooked it. Certainly not intentional. There are just way too many comments on this PR, which makes it easy for me as a human being to miss some. Less is certainly more, when it comes to ticket conversations.\r\n\r\nTo answer your questions, feel free to move these three methods as functions into `Cython/TestUtils.py` (which, BTW, is a bad name because it starts with `Test`, suggesting a test module, but does not contain any tests… oh, well…). Their names look good as they stand.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:28:55Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663325634",
            "id": 663325634,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyNTYzNA==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698570750,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T06:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663325634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663326367"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663326367"
                }
            },
            "author_association": "MEMBER",
            "body": "Since future readers of this code are very likely outside of the scope of github, any reference to a ticket should use the complete URL to look it up directly.\r\n```suggestion\r\n        # on Linux-like systems.\r\n        # See https://github.com/cython/cython/issues/4245\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:36:51Z",
            "diff_hunk": "@@ -1,212 +1,221 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def write_to_file_with_timestamp_update(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        self.write_to_file(path, text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663326367",
            "id": 663326367,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyNjM2Nw==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 55,
            "original_position": 71,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698571107,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T06:36:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663326367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663326802"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663326802"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Sorry, seems that I overlooked it. Certainly not intentional\r\n\r\nWe are people, it's okay to overlook something, but it's already good that you answered at least now :)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:41:58Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663326802",
            "id": 663326802,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyNjgwMg==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698571348,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T06:41:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663326802",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663327221"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663327221"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> `Cython/TestUtils.py` (which, BTW, is a bad name because it starts with `Test`, suggesting a test module, but does not contain any tests… oh, well…)\r\n\r\nThis is not the best name, I see. Is it possible to fix this by calling it \"UtilsForTests\"/\"TestingUtils\"?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:47:11Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663327221",
            "id": 663327221,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyNzIyMQ==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698571580,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T06:47:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663327221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663327971"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663327971"
                }
            },
            "author_association": "MEMBER",
            "body": "> > `Cython/TestUtils.py` (which, BTW, is a bad name because it starts with `Test`, suggesting a test module, but does not contain any tests… oh, well…)\r\n> \r\n> This is not the best name, I see. Is it possible to fix this by calling it \"UtilsForTests\"/\"TestingUtils\"?\r\n\r\n1) it's not much of an issue, 2) not in this PR, 3) maybe, at some point, 4) not the second name, since that also starts with `Test`.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:53:28Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663327971",
            "id": 663327971,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyNzk3MQ==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698571978,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T06:53:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663327971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663327979"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663327979"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Should I create separate PRs just for such little things? And as the Boy Scout Rule says: Leave your code better than you found it.\r\nIn this case, not the code :) .. but I think it applies to the text too.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:53:36Z",
            "diff_hunk": "@@ -75,7 +75,7 @@ Other changes\n   Patch by David Woods.  (Github issue :issue:`887`)\n \n * Support for the now unsupported Pyston V1 was removed in favour of Pyston V2.\n-  Patch by Marius Wachtler.  (Github issue :issue:`4211`)\n+  Patch by Marius Wachtler.  (Github pull request :pr:`4211`)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663327979",
            "id": 663327979,
            "in_reply_to_id": 663323090,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyNzk3OQ==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 78,
            "original_position": 28,
            "original_start_line": null,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698571989,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-03T06:53:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663327979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663328253"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663328253"
                }
            },
            "author_association": "MEMBER",
            "body": "I personally don't think it makes any difference and reduces readability, but I really don't want to discuss it in the context of this PR.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:56:27Z",
            "diff_hunk": "@@ -75,7 +75,7 @@ Other changes\n   Patch by David Woods.  (Github issue :issue:`887`)\n \n * Support for the now unsupported Pyston V1 was removed in favour of Pyston V2.\n-  Patch by Marius Wachtler.  (Github issue :issue:`4211`)\n+  Patch by Marius Wachtler.  (Github pull request :pr:`4211`)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663328253",
            "id": 663328253,
            "in_reply_to_id": 663323090,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyODI1Mw==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 78,
            "original_position": 28,
            "original_start_line": null,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698572138,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-03T06:56:27Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663328253",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663328490"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663328490"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> 1. it's not much of an issue, 2) not in this PR, 3) maybe, at some point\r\n\r\nLooks to me, so it won't change for very long if it doesn't change now. But as you wish, as a matter of fact.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T06:59:06Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663328490",
            "id": 663328490,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyODQ5MA==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698572281,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T06:59:07Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663328490",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663328599"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663328599"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> but I really don't want to discuss it in the context of this PR\r\n\r\nsoo\r\n\r\n> Should I create separate PRs just for such little things?\r\n\r\n",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T07:00:35Z",
            "diff_hunk": "@@ -75,7 +75,7 @@ Other changes\n   Patch by David Woods.  (Github issue :issue:`887`)\n \n * Support for the now unsupported Pyston V1 was removed in favour of Pyston V2.\n-  Patch by Marius Wachtler.  (Github issue :issue:`4211`)\n+  Patch by Marius Wachtler.  (Github pull request :pr:`4211`)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663328599",
            "id": 663328599,
            "in_reply_to_id": 663323090,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyODU5OQ==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 78,
            "original_position": 28,
            "original_start_line": null,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698572385,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-03T07:00:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663328599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663329139"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663329139"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> If we create the files fast enough, they may end up with the same timestamp.\r\n\r\nI didn't think about it that way. But doesn't my solution imply that the timestamp will be different?\r\nIf the file is not created, then there are no problems, and if it has already been created, then I save its timestamp and wait for a new one. Because nowhere were there any problems with infinite loops, the timestamp is always gets an update along the way.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T07:06:54Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663329139",
            "id": 663329139,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyOTEzOQ==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698572799,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T07:06:54Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663329139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663329733"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663329733"
                }
            },
            "author_association": "MEMBER",
            "body": ">> I personally don't think it makes any difference and reduces readability, but I really don't want to discuss it in the context of this PR.\r\n>\r\n> Should I create separate PRs just for such little things?\r\n\r\nIn general, yes. In this case, all I'm asking for is to exclude it from this PR.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T07:12:48Z",
            "diff_hunk": "@@ -75,7 +75,7 @@ Other changes\n   Patch by David Woods.  (Github issue :issue:`887`)\n \n * Support for the now unsupported Pyston V1 was removed in favour of Pyston V2.\n-  Patch by Marius Wachtler.  (Github issue :issue:`4211`)\n+  Patch by Marius Wachtler.  (Github pull request :pr:`4211`)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663329733",
            "id": 663329733,
            "in_reply_to_id": 663323090,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMyOTczMw==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 78,
            "original_position": 28,
            "original_start_line": null,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698573097,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-03T07:12:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663329733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663330333"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663330333"
                }
            },
            "author_association": "MEMBER",
            "body": "> doesn't my solution imply that the timestamp will be different?\r\n\r\nNot if my assumptions about the reason for the issue above are correct, no. Unix behaviour isn't random. It will not sit there and think \"Oh, should I tell the user that I updated the timestamp? Maybe I'll tell them a little later and finish my cup of tea first.\" That's not how operating systems work. At least not the ones that people commonly use.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T07:18:59Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663330333",
            "id": 663330333,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzMzMDMzMw==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698573465,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T07:19:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663330333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663357913"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663357913"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T12:08:51Z",
            "diff_hunk": "@@ -1,212 +1,221 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def write_to_file_with_timestamp_update(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        self.write_to_file(path, text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663357913",
            "id": 663357913,
            "in_reply_to_id": 663326367,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzM1NzkxMw==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 55,
            "original_position": 71,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698589672,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T12:08:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663357913",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663358047"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663358047"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "stop ..  was it intended to remove the \"Make sure the file has a newer timestamp,\"?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T12:10:02Z",
            "diff_hunk": "@@ -1,212 +1,221 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def write_to_file_with_timestamp_update(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        self.write_to_file(path, text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663358047",
            "id": 663358047,
            "in_reply_to_id": 663326367,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzM1ODA0Nw==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 55,
            "original_position": 71,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698589749,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T12:10:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663358047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663358759"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663358759"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry for that.\r\n```suggestion\r\n        # Make sure the file has a newer timestamp,\r\n        # otherwise cythonize may not consider it updated.\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T12:17:33Z",
            "diff_hunk": "@@ -1,212 +1,220 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def write_to_file_with_timestamp_update(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        self.write_to_file(path, text)\n+\n+        # on Linux-like systems.",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663358759",
            "id": 663358759,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzM1ODc1OQ==",
            "original_commit_id": "a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc",
            "original_line": 53,
            "original_position": 69,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698590118,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-03T12:17:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663358759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663360619"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663360619"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "fully resolved [here](https://github.com/cython/cython/pull/4241/commits/99bb30a604daf58f9a2e2a32110bcb9d16f7b58c)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T12:38:54Z",
            "diff_hunk": "@@ -1,212 +1,221 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def write_to_file_with_timestamp_update(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        self.write_to_file(path, text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663360619",
            "id": 663360619,
            "in_reply_to_id": 663326367,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzM2MDYxOQ==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 55,
            "original_position": 71,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698591209,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T12:38:54Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663360619",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663361902"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663361902"
                }
            },
            "author_association": "MEMBER",
            "body": "As the saying goes, some things are easier done than said. I implemented the helper functions in https://github.com/cython/cython/commit/f7eb64034890495654e0728f0362c848348c6674 – let's see if they do the trick.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T12:51:24Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663361902",
            "id": 663361902,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzM2MTkwMg==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698591863,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-03T12:51:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663361902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663420368"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663420368"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/c6dd30d85b62702ee39d087ab9a2ea570866af05)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-03T23:16:35Z",
            "diff_hunk": "@@ -75,7 +75,7 @@ Other changes\n   Patch by David Woods.  (Github issue :issue:`887`)\n \n * Support for the now unsupported Pyston V1 was removed in favour of Pyston V2.\n-  Patch by Marius Wachtler.  (Github issue :issue:`4211`)\n+  Patch by Marius Wachtler.  (Github pull request :pr:`4211`)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663420368",
            "id": 663420368,
            "in_reply_to_id": 663323090,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQyMDM2OA==",
            "original_commit_id": "90cac60c97089520a5ab16682225334b65eb8229",
            "original_line": 78,
            "original_position": 28,
            "original_start_line": null,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698624818,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-03T23:16:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663420368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663441884"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663441884"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "partially resolved [here](https://github.com/cython/cython/pull/4241/commits/4e3f3c226271c024ddb3332dbdc279eb200d1d85), [here](https://github.com/cython/cython/pull/4241/commits/bbcf2dab4482f991adbf7625b91babac561c9c7a) and [here](https://github.com/cython/cython/pull/4241/commits/5162fa2dab618f600eaed82690d839ce67f7a30c)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T03:58:27Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663441884",
            "id": 663441884,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ0MTg4NA==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698635090,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-04T03:58:27Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663441884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663441928"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663441928"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "or let's resolve this conversation",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T03:59:11Z",
            "diff_hunk": "@@ -0,0 +1,213 @@\n+import shutil\n+import os\n+import tempfile\n+\n+import Cython.Build.Dependencies\n+import Cython.Utils\n+from Cython.TestUtils import CythonTest\n+\n+\n+\n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n+\n+\n+class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def сlear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n+\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        self.temp_dir = (\n+            tempfile.mkdtemp(\n+                prefix='recythonize-test',\n+                dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n+            )\n+        )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n+\n+    def tearDown(self):\n+        CythonTest.tearDown(self)\n+        self.сlear_function_and_Dependencies_caches()\n+        shutil.rmtree(self.temp_dir)\n+\n+    def write_to_file(self, path, text):\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+    def fresh_cythonize(self, *args, **kwargs):\n+        self.сlear_function_and_Dependencies_caches()\n+        kwargs.update(language_level=self.language_level)\n+        Cython.Build.Dependencies.cythonize(*args, **kwargs)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663441928",
            "id": 663441928,
            "in_reply_to_id": 657052375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ0MTkyOA==",
            "original_commit_id": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 21,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698635113,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-04T03:59:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663441928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663442289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663442289"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "For this case, I think to move `relative_lines_from_file` to `TestUtils`, only then either change the function, because it is suitable for specific cases, or change the name.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T04:03:40Z",
            "diff_hunk": "@@ -23,38 +23,34 @@ def cache_files(self, file_glob):\n         return glob.glob(os.path.join(self.cache_dir, file_glob))\n \n     def fresh_cythonize(self, *args, **kwargs):\n-        Cython.Utils.clear_function_caches()\n-        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+        kwargs.update(cache=self.cache_dir)\n+        fresh_cythonize(*args, **kwargs)\n \n     def test_cycache_switch(self):\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n         a_pyx = os.path.join(self.src_dir, 'a.pyx')\n         a_c = a_pyx[:-4] + '.c'\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content1)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content1)\n+        self.fresh_cythonize(a_pyx)\n+        self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n         with open(a_c) as f:\n             a_contents1 = f.read()\n         os.unlink(a_c)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content2)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content2)\n+        self.fresh_cythonize(a_pyx)\n         with open(a_c) as f:\n             a_contents2 = f.read()\n         os.unlink(a_c)\n \n         self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663442289",
            "id": 663442289,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ0MjI4OQ==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 49,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 698635277,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-04T04:03:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663442289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663442558"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663442558"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Should we make the default language level 3? I read that cython wants to drop support for python 2.7 by 3.1 release.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T04:07:43Z",
            "diff_hunk": "@@ -228,6 +232,17 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, language_level=3, **kwargs):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663442558",
            "id": 663442558,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ0MjU1OA==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 235,
            "original_position": 57,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 698635421,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-04T04:07:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663442558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663444867"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663444867"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Well, no, at least now it will not work, so I [remove `anguage_level`](https://github.com/cython/cython/pull/4241/commits/21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5).",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T04:37:33Z",
            "diff_hunk": "@@ -228,6 +232,17 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, language_level=3, **kwargs):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663444867",
            "id": 663444867,
            "in_reply_to_id": 663442558,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ0NDg2Nw==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 235,
            "original_position": 57,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 698636491,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-04T04:37:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663444867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663464720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663464720"
                }
            },
            "author_association": "MEMBER",
            "body": "Please undo this change.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T08:04:12Z",
            "diff_hunk": "@@ -52,15 +52,15 @@ Bugs fixed\n * An unnecessary slow-down at import time was removed from ``Cython.Distutils``.\n   Original patch by Anthony Sottile.  (Github issue :issue:`4224`)\n \n-* Python modules were not automatically recompiled when only their ``.pxd`` file changed.\n+* Pure Python modules were not automatically recompiled when only their ``.pxd`` file changed.\n   Patch by Golden Rockefeller.  (Github issue :issue:`1428`)\n \n * The signature of ``PyFloat_FromString()`` in ``cpython.float`` was changed\n   to match the signature in Py3.  It still has an automatic fallback for Py2.\n   (Github issue :issue:`3909`)\n \n * A compile error on MSVC was resolved.\n-  Patch by David Woods.  (Github issue :issue:`4202`)\n+  Patch by David Woods.  (Github issue #4202)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663464720",
            "id": 663464720,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ2NDcyMA==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 63,
            "original_position": 23,
            "original_start_line": 63,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698648133,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-07-04T08:22:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663464720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663465694"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663465694"
                }
            },
            "author_association": "MEMBER",
            "body": "I consider reordering imports as part of a PR not great but borderline ok-ish when new imports are being added.\r\n\r\nI do not consider reformatting arbitrary unrelated code ok. You can make `git blame` ignore dedicated formatting commits, but you can't ignore parts of a squashed commit (and this PR will be squashed on merge). Please undo the code reformatting.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T08:12:04Z",
            "diff_hunk": "@@ -1,18 +1,19 @@\n from __future__ import absolute_import\n \n import os\n-import unittest",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663465694",
            "id": 663465694,
            "line": 4,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ2NTY5NA==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": 4,
            "pull_request_review_id": 698648133,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-04T08:22:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663465694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663465855"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663465855"
                }
            },
            "author_association": "MEMBER",
            "body": "This change, although reasonable, is unrelated to this PR.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T08:13:36Z",
            "diff_hunk": "@@ -253,9 +253,11 @@ def create_pyx_pipeline(context, options, result, py=False, exclude_classes=()):\n         [parse_stage_factory(context)],\n         create_pipeline(context, mode, exclude_classes=exclude_classes),\n         test_support,\n-        [inject_pxd_code_stage_factory(context),\n-         inject_utility_code_stage_factory(context),\n-         abort_on_errors],\n+        [\n+            inject_pxd_code_stage_factory(context),\n+            inject_utility_code_stage_factory(context),\n+            abort_on_errors\n+        ],",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663465855",
            "id": 663465855,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ2NTg1NQ==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 260,
            "original_position": 11,
            "original_start_line": 256,
            "path": "Cython/Compiler/Pipeline.py",
            "position": null,
            "pull_request_review_id": 698648133,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-07-04T08:22:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663465855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663466196"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663466196"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems wrong. I think `newer_than` should refer to the `.c` file, not the `.pxd` file. (Probably also applies to other places.)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T08:15:57Z",
            "diff_hunk": "@@ -1,212 +1,197 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n-from Cython.TestUtils import CythonTest\n+from Cython.TestUtils import (CythonTest, clear_function_and_Dependencies_caches,\n+                              fresh_cythonize, write_file, write_newer_file)\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n-\n-        with open(a_pyx, 'w') as f:\n-            f.write('value = 1\\n')\n-\n-\n-        # The dependencies for \"a.pyx\" are \"a.pxd\" and \"a.pyx\".\n-        self.assertEqual({a_pxd, a_pyx}, dep_tree.all_dependencies(a_pyx))\n-\n-        # Cythonize to create a.c\n-        fresh_cythonize(a_pyx)\n-\n-        # Sleep to address coarse time-stamp precision.\n-        time.sleep(1)\n-\n-        with open(a_c) as f:\n-            a_c_contents1 = f.read()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef double value\\n')\n-\n-        fresh_cythonize(a_pyx)\n-\n-        with open(a_c) as f:\n-            a_c_contents2 = f.read()\n-\n-        self.assertTrue(\"__pyx_v_1a_value = 1;\" in a_c_contents1)\n-        self.assertFalse(\"__pyx_v_1a_value = 1;\" in a_c_contents2)\n-        self.assertTrue(\"__pyx_v_1a_value = 1.0;\" in a_c_contents2)\n-        self.assertFalse(\"__pyx_v_1a_value = 1.0;\" in a_c_contents1)\n-\n-\n-    def test_recythonize_py_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_py = os.path.join(src_dir, 'a.py')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n-\n-        with open(a_py, 'w') as f:\n-            f.write('value = 1\\n')\n-\n-\n-        # The dependencies for \"a.py\" are \"a.pxd\" and \"a.py\".\n-        self.assertEqual({a_pxd, a_py}, dep_tree.all_dependencies(a_py))\n-\n-        # Cythonize to create a.c\n-        fresh_cythonize(a_py)\n-\n-        # Sleep to address coarse time-stamp precision.\n-        time.sleep(1)\n-\n-        with open(a_c) as f:\n-            a_c_contents1 = f.read()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef double value\\n')\n+    def fresh_cythonize(self, *args, **kwargs):\n+        kwargs.update(language_level=self.language_level)\n+        fresh_cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        try:\n+            ind = lines.index(line)\n+            return \"\".join(lines[ind+start: ind+end])\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in \\n{1}\".format(\n+                    line, \"\\n\".join(map(repr, lines[ind-10: ind-1]))))\n+\n+    def recythonize_on_pxd_change(self, ext, pxd_exists_for_first_check):\n+        module_filename = 'a' + ext\n \n-        fresh_cythonize(a_py)\n+        pxd_to_be_modified = os.path.join(self.src_dir, 'a.pxd')\n+        module = os.path.join(self.src_dir, module_filename)\n+        module_c_file = os.path.join(self.src_dir, 'a.c')  # should change\n \n-        with open(a_c) as f:\n-            a_c_contents2 = f.read()\n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=module_filename, at_line=1)\n \n+        if pxd_exists_for_first_check:\n+            write_file(pxd_to_be_modified, 'cdef int x\\n')\n \n-        self.assertTrue(\"__pyx_v_1a_value = 1;\" in a_c_contents1)\n-        self.assertFalse(\"__pyx_v_1a_value = 1;\" in a_c_contents2)\n-        self.assertTrue(\"__pyx_v_1a_value = 1.0;\" in a_c_contents2)\n-        self.assertFalse(\"__pyx_v_1a_value = 1.0;\" in a_c_contents1)\n+        write_file(module, 'x = 1\\n')\n \n-    def test_recythonize_pyx_on_dep_pxd_change(self):\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        dependencies = self.fresh_all_dependencies(module)\n+        self.assertIn(module, dependencies)\n+        if pxd_exists_for_first_check:\n+            self.assertIn(pxd_to_be_modified, dependencies)\n+            self.assertEqual(2, len(dependencies))\n+        else:\n+            self.assertEqual(1, len(dependencies))\n \n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        b_pyx = os.path.join(src_dir, 'b.pyx')\n-        b_c = os.path.join(src_dir, 'b.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        # Create a.c\n+        self.fresh_cythonize(module)\n \n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+        definition_before = self.relative_lines_from_file(\n+            module_c_file, module_line_1, 0, 7)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write('value = 1\\n')\n+        if pxd_exists_for_first_check:\n+            self.assertIn(\"a_x = 1;\", definition_before, INCORRECT)\n+        else:\n+            self.assertNotIn(\"a_x = 1;\", definition_before, INCORRECT)\n \n-        with open(b_pyx, 'w') as f:\n-            f.write('cimport a\\n' + 'a.value = 2\\n')\n+        # See https://github.com/cython/cython/issues/4245\n+        write_newer_file(pxd_to_be_modified, pxd_to_be_modified, 'cdef float x\\n')\n \n+        # otherwise nothing changes since there are no new files\n+        if not pxd_exists_for_first_check:\n+            dependencies = self.fresh_all_dependencies(module)\n+            self.assertIn(module, dependencies)\n+            self.assertIn(pxd_to_be_modified, dependencies)\n+            self.assertEqual(2, len(dependencies))\n \n-        # The dependencies for \"b.pyx\" are \"a.pxd\" and \"b.pyx\".\n-        self.assertEqual({a_pxd, b_pyx}, dep_tree.all_dependencies(b_pyx))\n+        # Change a.c\n+        self.fresh_cythonize(module)\n \n+        definition_after = self.relative_lines_from_file(\n+            module_c_file, module_line_1, 0, 7)\n \n-        # Cythonize to create b.c\n-        fresh_cythonize([a_pyx, b_pyx])\n+        self.assertNotIn(\"a_x = 1;\", definition_after, SAME)\n+        self.assertIn(\"a_x = 1.0;\", definition_after, INCORRECT)\n \n-        # Sleep to address coarse time-stamp precision.\n-        time.sleep(1)\n+    # pxd_exists_for_first_check is not used because cimport requires pxd\n+    # to import another script.\n+    def recythonize_on_dep_pxd_change(self, ext_a, ext_b):\n+        dep_filename, module_filename = \"a\" + ext_a, \"b\" + ext_b\n \n-        with open(b_c) as f:\n-            b_c_contents1 = f.read()\n+        pxd_to_be_modified = os.path.join(self.src_dir, 'a.pxd')\n+        module_dependency = os.path.join(self.src_dir, dep_filename)\n+        dep_c_file = os.path.join(self.src_dir, 'a.c')  # should change\n+        pxd_for_cimport = os.path.join(self.src_dir, 'b.pxd')\n+        module = os.path.join(self.src_dir, module_filename)\n+        module_c_file = os.path.join(self.src_dir, 'b.c')  # should change\n \n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef double value\\n')\n+        dep_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=dep_filename, at_line=1)\n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=module_filename, at_line=1)\n \n-        fresh_cythonize([a_pyx, b_pyx])\n+        write_file(pxd_to_be_modified, 'cdef int x\\n')\n+        write_file(module_dependency, 'x = 1\\n')\n+        write_file(pxd_for_cimport, 'cimport a\\n')\n+        write_file(module, 'a.x = 2\\n')\n+\n+        dependencies = self.fresh_all_dependencies(module)\n+        self.assertIn(pxd_for_cimport, dependencies)\n+        self.assertIn(module, dependencies)\n+        self.assertIn(pxd_to_be_modified, dependencies)\n+        self.assertEqual(3, len(dependencies))\n \n-        with open(b_c) as f:\n-            b_c_contents2 = f.read()\n+        # Create a.c and b.c\n+        self.fresh_cythonize([module_dependency, module])\n \n+        dep_definition_before = self.relative_lines_from_file(\n+            dep_c_file, dep_line_1, 0, 7)\n+\n+        module_definition_before = self.relative_lines_from_file(\n+            module_c_file, module_line_1, 0, 7)\n \n+        self.assertIn(\"a_x = 1;\", dep_definition_before, INCORRECT)\n+        self.assertIn(\"a_x = 2;\", module_definition_before, INCORRECT)\n \n-        self.assertTrue(\"__pyx_v_1a_value = 2;\" in b_c_contents1)\n-        self.assertFalse(\"__pyx_v_1a_value = 2;\" in b_c_contents2)\n-        self.assertTrue(\"__pyx_v_1a_value = 2.0;\" in b_c_contents2)\n-        self.assertFalse(\"__pyx_v_1a_value = 2.0;\" in b_c_contents1)\n+        # See https://github.com/cython/cython/issues/4245\n+        write_newer_file(pxd_to_be_modified, pxd_to_be_modified, 'cdef float x\\n')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663466196",
            "id": 663466196,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ2NjE5Ng==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 159,
            "original_position": 274,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698648133,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-04T08:22:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663466196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663466966"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663466966"
                }
            },
            "author_association": "MEMBER",
            "body": "Seems a reasonable addition there, but I repeat my suggestion from https://github.com/cython/cython/pull/4241#discussion_r656600320",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T08:22:06Z",
            "diff_hunk": "@@ -23,38 +23,34 @@ def cache_files(self, file_glob):\n         return glob.glob(os.path.join(self.cache_dir, file_glob))\n \n     def fresh_cythonize(self, *args, **kwargs):\n-        Cython.Utils.clear_function_caches()\n-        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+        kwargs.update(cache=self.cache_dir)\n+        fresh_cythonize(*args, **kwargs)\n \n     def test_cycache_switch(self):\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n         a_pyx = os.path.join(self.src_dir, 'a.pyx')\n         a_c = a_pyx[:-4] + '.c'\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content1)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content1)\n+        self.fresh_cythonize(a_pyx)\n+        self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n         with open(a_c) as f:\n             a_contents1 = f.read()\n         os.unlink(a_c)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content2)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content2)\n+        self.fresh_cythonize(a_pyx)\n         with open(a_c) as f:\n             a_contents2 = f.read()\n         os.unlink(a_c)\n \n         self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663466966",
            "id": 663466966,
            "in_reply_to_id": 663442289,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzQ2Njk2Ng==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 49,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 698648133,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-04T08:22:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663466966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663556272"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663556272"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is it bad that the codebase is getting better? Even if it is not related .. after all\r\n\r\n..\r\n\r\nWell, should I remove these changes too?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T21:02:16Z",
            "diff_hunk": "@@ -253,9 +253,11 @@ def create_pyx_pipeline(context, options, result, py=False, exclude_classes=()):\n         [parse_stage_factory(context)],\n         create_pipeline(context, mode, exclude_classes=exclude_classes),\n         test_support,\n-        [inject_pxd_code_stage_factory(context),\n-         inject_utility_code_stage_factory(context),\n-         abort_on_errors],\n+        [\n+            inject_pxd_code_stage_factory(context),\n+            inject_utility_code_stage_factory(context),\n+            abort_on_errors\n+        ],",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663556272",
            "id": 663556272,
            "in_reply_to_id": 663465855,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU1NjI3Mg==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 260,
            "original_position": 11,
            "original_start_line": 256,
            "path": "Cython/Compiler/Pipeline.py",
            "position": null,
            "pull_request_review_id": 698707899,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-07-04T21:02:16Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663556272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663556434"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663556434"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "oh yeah sorry",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T21:04:16Z",
            "diff_hunk": "@@ -52,15 +52,15 @@ Bugs fixed\n * An unnecessary slow-down at import time was removed from ``Cython.Distutils``.\n   Original patch by Anthony Sottile.  (Github issue :issue:`4224`)\n \n-* Python modules were not automatically recompiled when only their ``.pxd`` file changed.\n+* Pure Python modules were not automatically recompiled when only their ``.pxd`` file changed.\n   Patch by Golden Rockefeller.  (Github issue :issue:`1428`)\n \n * The signature of ``PyFloat_FromString()`` in ``cpython.float`` was changed\n   to match the signature in Py3.  It still has an automatic fallback for Py2.\n   (Github issue :issue:`3909`)\n \n * A compile error on MSVC was resolved.\n-  Patch by David Woods.  (Github issue :issue:`4202`)\n+  Patch by David Woods.  (Github issue #4202)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663556434",
            "id": 663556434,
            "in_reply_to_id": 663464720,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU1NjQzNA==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 63,
            "original_position": 23,
            "original_start_line": 63,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698708058,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-07-04T21:04:17Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663556434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663556918"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663556918"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": ".. the conversation went a little too far, and went beyond the original topic of the conversation, I will resolve this conversation.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T21:09:08Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663556918",
            "id": 663556918,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU1NjkxOA==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698708376,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-04T21:22:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663556918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663558305"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663558305"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "And scoder has already written the solution himself",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-04T21:23:09Z",
            "diff_hunk": "@@ -1,212 +1,215 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+    def write_to_file(self, path, text):\n+        # BUG: without sleep on Linux-like systems,\n+        # cythonize not working properly #4245",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663558305",
            "id": 663558305,
            "in_reply_to_id": 660010718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU1ODMwNQ==",
            "original_commit_id": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "original_line": 43,
            "original_position": 59,
            "original_start_line": 42,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698709224,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-04T21:23:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663558305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663577868"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663577868"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I implemented the helper functions in [f7eb640](https://github.com/cython/cython/commit/f7eb64034890495654e0728f0362c848348c6674) – let's see if they do the trick.\r\n\r\nI think I can resolve the conversation.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T00:26:23Z",
            "diff_hunk": "@@ -1,212 +1,218 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n from Cython.TestUtils import CythonTest\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+\n+    def clear_function_and_Dependencies_caches(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        self.clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)  # self.temp_dir is already a temp\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        self.clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n+    def write_to_file(self, path, text):\n+        try:\n+            timestamp_before_change = os.path.getmtime(path)\n+        except OSError:  # not FileNotFoundError for compatibility\n+            timestamp_before_change = .0\n+\n+        with open(path, \"w\") as f:\n+            f.write(text)\n+\n+        # Make sure the file has a newer timestamp,\n+        # otherwise cythonize does not work as expected\n+        # on Linux-like systems #4245\n+        while 1:\n+            if os.path.getmtime(path) != timestamp_before_change:\n+                return",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663577868",
            "id": 663577868,
            "in_reply_to_id": 661759926,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU3Nzg2OA==",
            "original_commit_id": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "original_line": 55,
            "original_position": 61,
            "original_start_line": 53,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698724290,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-05T00:26:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663577868",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663578510"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663578510"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/07c56aa7c5101fc677d82edeed86c083993d12d8)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T00:30:19Z",
            "diff_hunk": "@@ -1,212 +1,197 @@\n-import shutil\n import os\n+import shutil\n import tempfile\n import time\n \n import Cython.Build.Dependencies\n import Cython.Utils\n-from Cython.TestUtils import CythonTest\n+from Cython.TestUtils import (CythonTest, clear_function_and_Dependencies_caches,\n+                              fresh_cythonize, write_file, write_newer_file)\n \n+SAME = \"The result of cytonization is the same\"\n+INCORRECT = \"Incorrect cythonization\"\n+LINE_BEFORE_IMPLEMENTATION = '  /* \"{filename}\":{at_line}\\n'\n+VARS_LINE = '  /*--- Wrapped vars code ---*/\\n'\n \n-def fresh_cythonize(*args, **kwargs):\n-    Cython.Utils.clear_function_caches()\n-    Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-    Cython.Build.Dependencies.cythonize(*args, **kwargs)\n \n class TestRecythonize(CythonTest):\n+    language_level = 3\n+    dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n \n     def setUp(self):\n         CythonTest.setUp(self)\n+        clear_function_and_Dependencies_caches()\n         self.temp_dir = (\n             tempfile.mkdtemp(\n                 prefix='recythonize-test',\n                 dir='TEST_TMP' if os.path.isdir('TEST_TMP') else None\n             )\n         )\n+        self.src_dir = os.path.join(self.temp_dir, 'src')\n+        os.mkdir(self.src_dir)\n \n     def tearDown(self):\n         CythonTest.tearDown(self)\n+        clear_function_and_Dependencies_caches()\n         shutil.rmtree(self.temp_dir)\n \n-    def test_recythonize_pyx_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n-\n-        with open(a_pyx, 'w') as f:\n-            f.write('value = 1\\n')\n-\n-\n-        # The dependencies for \"a.pyx\" are \"a.pxd\" and \"a.pyx\".\n-        self.assertEqual({a_pxd, a_pyx}, dep_tree.all_dependencies(a_pyx))\n-\n-        # Cythonize to create a.c\n-        fresh_cythonize(a_pyx)\n-\n-        # Sleep to address coarse time-stamp precision.\n-        time.sleep(1)\n-\n-        with open(a_c) as f:\n-            a_c_contents1 = f.read()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef double value\\n')\n-\n-        fresh_cythonize(a_pyx)\n-\n-        with open(a_c) as f:\n-            a_c_contents2 = f.read()\n-\n-        self.assertTrue(\"__pyx_v_1a_value = 1;\" in a_c_contents1)\n-        self.assertFalse(\"__pyx_v_1a_value = 1;\" in a_c_contents2)\n-        self.assertTrue(\"__pyx_v_1a_value = 1.0;\" in a_c_contents2)\n-        self.assertFalse(\"__pyx_v_1a_value = 1.0;\" in a_c_contents1)\n-\n-\n-    def test_recythonize_py_on_pxd_change(self):\n-\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n-\n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_py = os.path.join(src_dir, 'a.py')\n-        a_c = os.path.join(src_dir, 'a.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n-\n-        with open(a_py, 'w') as f:\n-            f.write('value = 1\\n')\n-\n-\n-        # The dependencies for \"a.py\" are \"a.pxd\" and \"a.py\".\n-        self.assertEqual({a_pxd, a_py}, dep_tree.all_dependencies(a_py))\n-\n-        # Cythonize to create a.c\n-        fresh_cythonize(a_py)\n-\n-        # Sleep to address coarse time-stamp precision.\n-        time.sleep(1)\n-\n-        with open(a_c) as f:\n-            a_c_contents1 = f.read()\n-\n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef double value\\n')\n+    def fresh_cythonize(self, *args, **kwargs):\n+        kwargs.update(language_level=self.language_level)\n+        fresh_cythonize(*args, **kwargs)\n+\n+    def refresh_dep_tree(self):\n+        Cython.Utils.clear_function_caches()\n+        Cython.Utils.clear_method_caches(self.dep_tree)\n+        self.dep_tree._transitive_cache.clear()\n+\n+    def fresh_all_dependencies(self, *args, **kwargs):\n+        self.refresh_dep_tree()\n+        return self.dep_tree.all_dependencies(*args, **kwargs)\n+\n+    def relative_lines_from_file(self, path, line, start, end):\n+        with open(path) as f:\n+            lines = f.readlines()\n+\n+        try:\n+            ind = lines.index(line)\n+            return \"\".join(lines[ind+start: ind+end])\n+        except ValueError:\n+            # XXX: It is assumed that VARS_LINE is always present.\n+            ind = lines.index(VARS_LINE)\n+            raise ValueError(\n+                \"{0!r} was not found, presumably in \\n{1}\".format(\n+                    line, \"\\n\".join(map(repr, lines[ind-10: ind-1]))))\n+\n+    def recythonize_on_pxd_change(self, ext, pxd_exists_for_first_check):\n+        module_filename = 'a' + ext\n \n-        fresh_cythonize(a_py)\n+        pxd_to_be_modified = os.path.join(self.src_dir, 'a.pxd')\n+        module = os.path.join(self.src_dir, module_filename)\n+        module_c_file = os.path.join(self.src_dir, 'a.c')  # should change\n \n-        with open(a_c) as f:\n-            a_c_contents2 = f.read()\n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=module_filename, at_line=1)\n \n+        if pxd_exists_for_first_check:\n+            write_file(pxd_to_be_modified, 'cdef int x\\n')\n \n-        self.assertTrue(\"__pyx_v_1a_value = 1;\" in a_c_contents1)\n-        self.assertFalse(\"__pyx_v_1a_value = 1;\" in a_c_contents2)\n-        self.assertTrue(\"__pyx_v_1a_value = 1.0;\" in a_c_contents2)\n-        self.assertFalse(\"__pyx_v_1a_value = 1.0;\" in a_c_contents1)\n+        write_file(module, 'x = 1\\n')\n \n-    def test_recythonize_pyx_on_dep_pxd_change(self):\n-        src_dir = tempfile.mkdtemp(prefix='src', dir=self.temp_dir)\n+        dependencies = self.fresh_all_dependencies(module)\n+        self.assertIn(module, dependencies)\n+        if pxd_exists_for_first_check:\n+            self.assertIn(pxd_to_be_modified, dependencies)\n+            self.assertEqual(2, len(dependencies))\n+        else:\n+            self.assertEqual(1, len(dependencies))\n \n-        a_pxd = os.path.join(src_dir, 'a.pxd')\n-        a_pyx = os.path.join(src_dir, 'a.pyx')\n-        b_pyx = os.path.join(src_dir, 'b.pyx')\n-        b_c = os.path.join(src_dir, 'b.c')\n-        dep_tree = Cython.Build.Dependencies.create_dependency_tree()\n+        # Create a.c\n+        self.fresh_cythonize(module)\n \n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef int value\\n')\n+        definition_before = self.relative_lines_from_file(\n+            module_c_file, module_line_1, 0, 7)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write('value = 1\\n')\n+        if pxd_exists_for_first_check:\n+            self.assertIn(\"a_x = 1;\", definition_before, INCORRECT)\n+        else:\n+            self.assertNotIn(\"a_x = 1;\", definition_before, INCORRECT)\n \n-        with open(b_pyx, 'w') as f:\n-            f.write('cimport a\\n' + 'a.value = 2\\n')\n+        # See https://github.com/cython/cython/issues/4245\n+        write_newer_file(pxd_to_be_modified, pxd_to_be_modified, 'cdef float x\\n')\n \n+        # otherwise nothing changes since there are no new files\n+        if not pxd_exists_for_first_check:\n+            dependencies = self.fresh_all_dependencies(module)\n+            self.assertIn(module, dependencies)\n+            self.assertIn(pxd_to_be_modified, dependencies)\n+            self.assertEqual(2, len(dependencies))\n \n-        # The dependencies for \"b.pyx\" are \"a.pxd\" and \"b.pyx\".\n-        self.assertEqual({a_pxd, b_pyx}, dep_tree.all_dependencies(b_pyx))\n+        # Change a.c\n+        self.fresh_cythonize(module)\n \n+        definition_after = self.relative_lines_from_file(\n+            module_c_file, module_line_1, 0, 7)\n \n-        # Cythonize to create b.c\n-        fresh_cythonize([a_pyx, b_pyx])\n+        self.assertNotIn(\"a_x = 1;\", definition_after, SAME)\n+        self.assertIn(\"a_x = 1.0;\", definition_after, INCORRECT)\n \n-        # Sleep to address coarse time-stamp precision.\n-        time.sleep(1)\n+    # pxd_exists_for_first_check is not used because cimport requires pxd\n+    # to import another script.\n+    def recythonize_on_dep_pxd_change(self, ext_a, ext_b):\n+        dep_filename, module_filename = \"a\" + ext_a, \"b\" + ext_b\n \n-        with open(b_c) as f:\n-            b_c_contents1 = f.read()\n+        pxd_to_be_modified = os.path.join(self.src_dir, 'a.pxd')\n+        module_dependency = os.path.join(self.src_dir, dep_filename)\n+        dep_c_file = os.path.join(self.src_dir, 'a.c')  # should change\n+        pxd_for_cimport = os.path.join(self.src_dir, 'b.pxd')\n+        module = os.path.join(self.src_dir, module_filename)\n+        module_c_file = os.path.join(self.src_dir, 'b.c')  # should change\n \n-        with open(a_pxd, 'w') as f:\n-            f.write('cdef double value\\n')\n+        dep_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=dep_filename, at_line=1)\n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=module_filename, at_line=1)\n \n-        fresh_cythonize([a_pyx, b_pyx])\n+        write_file(pxd_to_be_modified, 'cdef int x\\n')\n+        write_file(module_dependency, 'x = 1\\n')\n+        write_file(pxd_for_cimport, 'cimport a\\n')\n+        write_file(module, 'a.x = 2\\n')\n+\n+        dependencies = self.fresh_all_dependencies(module)\n+        self.assertIn(pxd_for_cimport, dependencies)\n+        self.assertIn(module, dependencies)\n+        self.assertIn(pxd_to_be_modified, dependencies)\n+        self.assertEqual(3, len(dependencies))\n \n-        with open(b_c) as f:\n-            b_c_contents2 = f.read()\n+        # Create a.c and b.c\n+        self.fresh_cythonize([module_dependency, module])\n \n+        dep_definition_before = self.relative_lines_from_file(\n+            dep_c_file, dep_line_1, 0, 7)\n+\n+        module_definition_before = self.relative_lines_from_file(\n+            module_c_file, module_line_1, 0, 7)\n \n+        self.assertIn(\"a_x = 1;\", dep_definition_before, INCORRECT)\n+        self.assertIn(\"a_x = 2;\", module_definition_before, INCORRECT)\n \n-        self.assertTrue(\"__pyx_v_1a_value = 2;\" in b_c_contents1)\n-        self.assertFalse(\"__pyx_v_1a_value = 2;\" in b_c_contents2)\n-        self.assertTrue(\"__pyx_v_1a_value = 2.0;\" in b_c_contents2)\n-        self.assertFalse(\"__pyx_v_1a_value = 2.0;\" in b_c_contents1)\n+        # See https://github.com/cython/cython/issues/4245\n+        write_newer_file(pxd_to_be_modified, pxd_to_be_modified, 'cdef float x\\n')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663578510",
            "id": 663578510,
            "in_reply_to_id": 663466196,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU3ODUxMA==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 159,
            "original_position": 274,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestRecythonize.py",
            "position": null,
            "pull_request_review_id": 698724871,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T00:30:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663578510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663578620"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663578620"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "resolved [here](https://github.com/cython/cython/pull/4241/commits/7f7cda56d79cd6d72e0cfd89492c106da686cb05)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T00:30:55Z",
            "diff_hunk": "@@ -1,18 +1,19 @@\n from __future__ import absolute_import\n \n import os\n-import unittest",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663578620",
            "id": 663578620,
            "in_reply_to_id": 663465694,
            "line": 4,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU3ODYyMA==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": 4,
            "pull_request_review_id": 698724967,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T00:30:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663578620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663578726"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663578726"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "[resolved](https://github.com/cython/cython/pull/4241/commits/365bc99d260d0edd546566eecedaa90b316bdbc0)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T00:31:38Z",
            "diff_hunk": "@@ -52,15 +52,15 @@ Bugs fixed\n * An unnecessary slow-down at import time was removed from ``Cython.Distutils``.\n   Original patch by Anthony Sottile.  (Github issue :issue:`4224`)\n \n-* Python modules were not automatically recompiled when only their ``.pxd`` file changed.\n+* Pure Python modules were not automatically recompiled when only their ``.pxd`` file changed.\n   Patch by Golden Rockefeller.  (Github issue :issue:`1428`)\n \n * The signature of ``PyFloat_FromString()`` in ``cpython.float`` was changed\n   to match the signature in Py3.  It still has an automatic fallback for Py2.\n   (Github issue :issue:`3909`)\n \n * A compile error on MSVC was resolved.\n-  Patch by David Woods.  (Github issue :issue:`4202`)\n+  Patch by David Woods.  (Github issue #4202)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663578726",
            "id": 663578726,
            "in_reply_to_id": 663464720,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU3ODcyNg==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 63,
            "original_position": 23,
            "original_start_line": 63,
            "path": "CHANGES.rst",
            "position": null,
            "pull_request_review_id": 698725089,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-07-05T00:31:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663578726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663579892"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663579892"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If the only thing we need is to change the timestamp, then it makes little sense to load the system with I/O operations with potentially large amounts of data.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T00:39:10Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663579892",
            "id": 663579892,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU3OTg5Mg==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 698726204,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T00:39:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663579892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663581822"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663581822"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`content` in `bytes` + `dedent = True` are incompatible and therefore `write_file(<path>, bytes(), dedent=True)` will raise an exception: `TypeError: cannot use a string pattern on a bytes-like object` in `dedent`. The same applies to `write_newer_file`.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T00:51:29Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663581822",
            "id": 663581822,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU4MTgyMg==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 243,
            "original_position": 38,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 698728079,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T00:51:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663581822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663583612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663583612"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fails on Windows: `AssertionError: b'\\r\\nA horse is a horse,\\r\\nof course, of c[53 chars]\\r\\n' != b'\\nA horse is a horse,\\nof course, of cours[43 chars]se\\n' : (\"b'\\\\nA horse is a horse,\\\\nof course, of course,\\\\nAnd no one can talk to a horse\\\\nof course\\\\n'\", \"b'\\\\r\\\\nA horse is a horse,\\\\r\\\\nof course, of course,\\\\r\\\\nAnd no one can talk to a horse\\\\r\\\\nof course\\\\r\\\\n'\")`\r\n\r\nThe reason for this is the different handling of [linesep](https://docs.python.org/3/library/os.html#os.linesep) / [universal newlines\r\n](https://docs.python.org/3/glossary.html#term-universal-newlines) when writing to files. Since `_test_write_file` uses `'rb'`, the difference is revealed. For the same reason, the `self._test_write_file(\"\\n\", \"\\n\".encode('utf-8'))` code will not work, unlike the `self._test_write_file(\"\\n\".encode('utf-8'), \"\\n\".encode('utf-8'))\r\n`.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T01:02:00Z",
            "diff_hunk": "@@ -42,7 +42,7 @@ def test_write_file_dedent(self):\n         And no one can talk to a horse\n         of course\n         \"\"\"\n-        self._test_write_file(text, textwrap.dedent(text).encode('utf8'), dedent=True)\n+        self._test_write_file(text, textwrap.dedent(text).encode('utf-8'), dedent=True)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663583612",
            "id": 663583612,
            "line": 52,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU4MzYxMg==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 45,
            "original_position": 24,
            "original_start_line": 42,
            "path": "Cython/Tests/TestTestUtils.py",
            "position": 44,
            "pull_request_review_id": 698730000,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 49,
            "start_side": "RIGHT",
            "updated_at": "2021-07-05T01:10:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663583612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663584415"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663584415"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is `Cython/Utils.py` being tested somewhere? It's just that I haven't added any tests for `clear_method_caches`",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T01:06:46Z",
            "diff_hunk": "@@ -54,6 +54,20 @@ def wrapper(*args):\n     return wrapper\n \n \n+def clear_method_caches(instance):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663584415",
            "id": 663584415,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU4NDQxNQ==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 57,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 698730883,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T01:06:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663584415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663883919"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663883919"
                }
            },
            "author_association": "MEMBER",
            "body": "Sort-of, although not much. There's `Cython/Tests/TestCythonUtils.py`.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:13:55Z",
            "diff_hunk": "@@ -54,6 +54,20 @@ def wrapper(*args):\n     return wrapper\n \n \n+def clear_method_caches(instance):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663883919",
            "id": 663883919,
            "in_reply_to_id": 663584415,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mzg4MzkxOQ==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 57,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 699115972,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:13:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663883919",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663886557"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663886557"
                }
            },
            "author_association": "MEMBER",
            "body": "I had to look up the second argument in the documentation to understand what this does. Let's use at least a keyword argument (as should always be done for parameters like `None`, `False`, and the like).\r\n```suggestion\r\n        os.utime(file_path, times=None)\r\n```\r\nAlternatively, a helper function `touch_file(file_path)` would probably be a helpful addition.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:18:23Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path, None)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663886557",
            "id": 663886557,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mzg4NjU1Nw==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699119469,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:31:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663886557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663887925"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663887925"
                }
            },
            "author_association": "MEMBER",
            "body": "This can be simplified by setting `encoding = None` and always passing it here. In fact, `encoding='utf-8'` should be a parameter of the two helper functions, which is only ignored for `bytes` input.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:20:38Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:\n+        # unlike OS X or Linux,\n+        # Windows defaults to 8-bit character set like windows-1252\n+        kwargs[\"encoding\"] = \"utf-8\"\n+\n     if dedent:\n         content = textwrap.dedent(content)\n \n-    with open(file_path, mode=mode) as f:\n+    with open(file_path, mode=mode, **kwargs) as f:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663887925",
            "id": 663887925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mzg4NzkyNQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 261,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699119469,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:31:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663887925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663888557"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663888557"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't mind the code base getting better. I do mind making `git blame` refer to unrelated changes and PRs.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:21:37Z",
            "diff_hunk": "@@ -253,9 +253,11 @@ def create_pyx_pipeline(context, options, result, py=False, exclude_classes=()):\n         [parse_stage_factory(context)],\n         create_pipeline(context, mode, exclude_classes=exclude_classes),\n         test_support,\n-        [inject_pxd_code_stage_factory(context),\n-         inject_utility_code_stage_factory(context),\n-         abort_on_errors],\n+        [\n+            inject_pxd_code_stage_factory(context),\n+            inject_utility_code_stage_factory(context),\n+            abort_on_errors\n+        ],",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663888557",
            "id": 663888557,
            "in_reply_to_id": 663465855,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mzg4ODU1Nw==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 260,
            "original_position": 11,
            "original_start_line": 256,
            "path": "Cython/Compiler/Pipeline.py",
            "position": null,
            "pull_request_review_id": 699119469,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-07-05T12:31:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663888557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663892515"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663892515"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we can afford spelling this out.\r\n```suggestion\r\n    if isinstance(content, bytes):\r\n        mode = \"wb\"\r\n    else:\r\n        mode = \"w\"\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:27:50Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663892515",
            "id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mzg5MjUxNQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 699119469,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-05T12:31:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663892515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663897650"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663897650"
                }
            },
            "author_association": "MEMBER",
            "body": "This is used with literals strings in test functions. I don't expect those \"large amounts of data\" to reach even a kilobyte.\r\n\r\nIt seemed simpler as it was, since it only did one thing, twice, that was easy to understand, but I don't care enough to fight for it.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:35:44Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663897650",
            "id": 663897650,
            "in_reply_to_id": 663579892,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mzg5NzY1MA==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699134005,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:35:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663897650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663901822"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663901822"
                }
            },
            "author_association": "MEMBER",
            "body": "(Also, just for the record: in tests, this file will almost certainly be in a temp folder. Any decent operating system would only create it in memory and never even write it to disk.)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:42:13Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663901822",
            "id": 663901822,
            "in_reply_to_id": 663579892,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkwMTgyMg==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699139552,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:42:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663901822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663902149"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663902149"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I don't expect those \"large amounts of data\"\r\n\r\n\r\n> potentially\r\n\r\n",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:42:44Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663902149",
            "id": 663902149,
            "in_reply_to_id": 663579892,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkwMjE0OQ==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699140021,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:42:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663902149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663904224"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663904224"
                }
            },
            "author_association": "MEMBER",
            "body": "That's fine. Users will notice that when they try it.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:45:58Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663904224",
            "id": 663904224,
            "in_reply_to_id": 663581822,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkwNDIyNA==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 243,
            "original_position": 38,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699142782,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:45:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663904224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663906863"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663906863"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, lovely. Yeah, that's worth fixing then. We can probably just do the usual\r\n`.replace('\\r\\n', '\\n').replace('\\r', '\\n')`\r\nafter reading the file back in. It's test code, that'll do.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:50:07Z",
            "diff_hunk": "@@ -42,7 +42,7 @@ def test_write_file_dedent(self):\n         And no one can talk to a horse\n         of course\n         \"\"\"\n-        self._test_write_file(text, textwrap.dedent(text).encode('utf8'), dedent=True)\n+        self._test_write_file(text, textwrap.dedent(text).encode('utf-8'), dedent=True)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663906863",
            "id": 663906863,
            "in_reply_to_id": 663583612,
            "line": 52,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkwNjg2Mw==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 45,
            "original_position": 24,
            "original_start_line": 42,
            "path": "Cython/Tests/TestTestUtils.py",
            "position": 44,
            "pull_request_review_id": 699146261,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 49,
            "start_side": "RIGHT",
            "updated_at": "2021-07-05T12:50:07Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663906863",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663908024"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663908024"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> helper function touch_file(file_path) would probably be a helpful addition\r\n\r\nGood idea, I'll add it.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:51:58Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path, None)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663908024",
            "id": 663908024,
            "in_reply_to_id": 663886557,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkwODAyNA==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699147788,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663908024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663909808"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663909808"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> in tests, this file will almost certainly be in a temp folder. Any decent operating system would only create it in memory and never even write it to disk\r\n\r\nAlso true",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:54:42Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663909808",
            "id": 663909808,
            "in_reply_to_id": 663579892,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkwOTgwOA==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699150161,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:54:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663909808",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663912301"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663912301"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I don't care enough to fight for it.\r\n\r\nWe are not fighting, but looking for a middle ground. Aren't we?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T12:58:21Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663912301",
            "id": 663912301,
            "in_reply_to_id": 663579892,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkxMjMwMQ==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699153474,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T12:58:21Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663912301",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663918244"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663918244"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`TypeError: utime() takes no keyword arguments` in python 2.7, ironically",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T13:07:31Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path, None)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663918244",
            "id": 663918244,
            "in_reply_to_id": 663886557,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkxODI0NA==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 699161749,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-05T13:07:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663918244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663920495"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663920495"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "What if we want to support more modes, i.e.  not only `w`, but also `a`, for example?  Add conditions for every string / byte and `w` / `a` use case?\r\n\r\none could do it like this:\r\n```\r\n    mode = \"w\"\r\n    if <use a>:\r\n        mode = \"a\"\r\n\r\n    if isinstance(content, bytes):\r\n        mode += \"b\"\r\n    else:\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T13:10:48Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663920495",
            "id": 663920495,
            "in_reply_to_id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkyMDQ5NQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 699164768,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-05T13:10:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663920495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r663921087"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/663921087"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Of course, I am theorizing again, but still.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T13:11:44Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r663921087",
            "id": 663921087,
            "in_reply_to_id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzkyMTA4Nw==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 699165555,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-05T13:11:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/663921087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664012385"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664012385"
                }
            },
            "author_association": "MEMBER",
            "body": "> What if we want to support more modes\r\n\r\nThen, at the point where someone writes a test that needs this functionality, that person can change the function in the necessary way. Code is not carved in stone once it's written. Even Voyager-1 received software updates along the way.\r\n\r\nLet's keep things as simple as possible, until we know that we need to accommodate for a change that requires more complexity. YAGNI, unless proven otherwise.\r\n\r\n(I am aware that I am myself guilty of adding the \"dedent\" parameter without a strict need. I was only guessing that files with more than one line of code were likely to come up in the tests. Maybe that was a mistake. Maybe I should not have done that. You can probably tell better than I can at the moment.)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T15:30:46Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664012385",
            "id": 664012385,
            "in_reply_to_id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDAxMjM4NQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 699285040,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-05T15:30:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664012385",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664057855"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664057855"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Even Voyager-1 received software updates along the way.\r\n\r\nWell it seems that when discussing how to make a wrapper function to write to files and someone mentions Voyager ... well it seems the discussion has gone a little too far ;)\r\n\r\n> YAGNI, unless proven otherwise.\r\n\r\n> (I am aware that I am myself guilty of adding the \"dedent\" parameter without a strict need\r\n\r\nActually, if you look at it from this point of view, then there is another YAGNI - the binary mode itself... yeah\r\n\r\nI just think that if you can predict some future changes and make them easier, or help a future programmer figure it out one way or another, then that's good.\r\n\r\n> that requires more complexity.\r\n\r\nIMHO my solution does not add any particular complexity\r\n\r\nFor me right now, it looks more like an opinion-based thingie. You think one implementation is better and easier to understand, but I think the other ...\r\nWell, in this situation, I don't care what solution the end result is, and if you want, you can push yours. So yeah.\r\n",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-05T17:11:25Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664057855",
            "id": 664057855,
            "in_reply_to_id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDA1Nzg1NQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 699339524,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-05T17:11:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664057855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664168696"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664168696"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm talking about a little different, about the `except` part, there is a search for `VARS_LINE` and `lines[ind-10: ind-1]`, which fits well that test case, but not all, it was assumed for those tests that all important parts in the case the failure will be in `VARS_LINE` area.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-06T00:43:55Z",
            "diff_hunk": "@@ -23,38 +23,34 @@ def cache_files(self, file_glob):\n         return glob.glob(os.path.join(self.cache_dir, file_glob))\n \n     def fresh_cythonize(self, *args, **kwargs):\n-        Cython.Utils.clear_function_caches()\n-        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+        kwargs.update(cache=self.cache_dir)\n+        fresh_cythonize(*args, **kwargs)\n \n     def test_cycache_switch(self):\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n         a_pyx = os.path.join(self.src_dir, 'a.pyx')\n         a_c = a_pyx[:-4] + '.c'\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content1)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content1)\n+        self.fresh_cythonize(a_pyx)\n+        self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n         with open(a_c) as f:\n             a_contents1 = f.read()\n         os.unlink(a_c)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content2)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content2)\n+        self.fresh_cythonize(a_pyx)\n         with open(a_c) as f:\n             a_contents2 = f.read()\n         os.unlink(a_c)\n \n         self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664168696",
            "id": 664168696,
            "in_reply_to_id": 663442289,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDE2ODY5Ng==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 49,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 699459164,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-06T00:43:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664168696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664170378"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664170378"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There is an idea to do this: take out part of `try` into a helper function, and then use it in test cases with a special modification for them.\r\nOr add something like \"if not found\" kw argument, though we need to pass a string around which we should search if not found, and also what lines around we should present in an error.\r\nMaybe it can be a function that will return all this, or rather a tuple .. oh, how many ideas :)\r\n",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-06T00:51:39Z",
            "diff_hunk": "@@ -23,38 +23,34 @@ def cache_files(self, file_glob):\n         return glob.glob(os.path.join(self.cache_dir, file_glob))\n \n     def fresh_cythonize(self, *args, **kwargs):\n-        Cython.Utils.clear_function_caches()\n-        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+        kwargs.update(cache=self.cache_dir)\n+        fresh_cythonize(*args, **kwargs)\n \n     def test_cycache_switch(self):\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n         a_pyx = os.path.join(self.src_dir, 'a.pyx')\n         a_c = a_pyx[:-4] + '.c'\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content1)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content1)\n+        self.fresh_cythonize(a_pyx)\n+        self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n         with open(a_c) as f:\n             a_contents1 = f.read()\n         os.unlink(a_c)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content2)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content2)\n+        self.fresh_cythonize(a_pyx)\n         with open(a_c) as f:\n             a_contents2 = f.read()\n         os.unlink(a_c)\n \n         self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664170378",
            "id": 664170378,
            "in_reply_to_id": 663442289,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDE3MDM3OA==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 49,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 699460831,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-06T00:51:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664170378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664822397"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664822397"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Maybe just read in normal mode and then convert to bytes? And why do we need bytes anyway? Doesn't this complicate matters?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-06T19:27:14Z",
            "diff_hunk": "@@ -42,7 +42,7 @@ def test_write_file_dedent(self):\n         And no one can talk to a horse\n         of course\n         \"\"\"\n-        self._test_write_file(text, textwrap.dedent(text).encode('utf8'), dedent=True)\n+        self._test_write_file(text, textwrap.dedent(text).encode('utf-8'), dedent=True)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664822397",
            "id": 664822397,
            "in_reply_to_id": 663583612,
            "line": 52,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDgyMjM5Nw==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 45,
            "original_position": 24,
            "original_start_line": 42,
            "path": "Cython/Tests/TestTestUtils.py",
            "position": 44,
            "pull_request_review_id": 700308361,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 49,
            "start_side": "RIGHT",
            "updated_at": "2021-07-06T19:27:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664822397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664948853"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664948853"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> In fact, `encoding='utf-8'` should be a parameter of the two helper functions, which is only ignored for `bytes` input.\r\n\r\nYAGNI?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-06T23:59:58Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:\n+        # unlike OS X or Linux,\n+        # Windows defaults to 8-bit character set like windows-1252\n+        kwargs[\"encoding\"] = \"utf-8\"\n+\n     if dedent:\n         content = textwrap.dedent(content)\n \n-    with open(file_path, mode=mode) as f:\n+    with open(file_path, mode=mode, **kwargs) as f:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664948853",
            "id": 664948853,
            "in_reply_to_id": 663887925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk0ODg1Mw==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 261,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 700468014,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-06T23:59:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664948853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664949836"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664949836"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "So should we go back to basics and make a simple solution without functionality that nobody asked for?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T00:03:12Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664949836",
            "id": 664949836,
            "in_reply_to_id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk0OTgzNg==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 700469205,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-07T00:03:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664949836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664951250"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664951250"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Are you sure you want to use something other than utf-8?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T00:08:19Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:\n+        # unlike OS X or Linux,\n+        # Windows defaults to 8-bit character set like windows-1252\n+        kwargs[\"encoding\"] = \"utf-8\"\n+\n     if dedent:\n         content = textwrap.dedent(content)\n \n-    with open(file_path, mode=mode) as f:\n+    with open(file_path, mode=mode, **kwargs) as f:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664951250",
            "id": 664951250,
            "in_reply_to_id": 663887925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk1MTI1MA==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 261,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 700471004,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-07T00:08:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664951250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r664975239"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/664975239"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "YAGNI is very slippery topic ...",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T01:28:29Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r664975239",
            "id": 664975239,
            "in_reply_to_id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk3NTIzOQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 700498716,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-07T01:29:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/664975239",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r665384235"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/665384235"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "[resolved](https://github.com/cython/cython/pull/4241/commits/615dad02b139c1b9f0ce0288c9d570ab1d51f90a)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T13:43:13Z",
            "diff_hunk": "@@ -253,9 +253,11 @@ def create_pyx_pipeline(context, options, result, py=False, exclude_classes=()):\n         [parse_stage_factory(context)],\n         create_pipeline(context, mode, exclude_classes=exclude_classes),\n         test_support,\n-        [inject_pxd_code_stage_factory(context),\n-         inject_utility_code_stage_factory(context),\n-         abort_on_errors],\n+        [\n+            inject_pxd_code_stage_factory(context),\n+            inject_utility_code_stage_factory(context),\n+            abort_on_errors\n+        ],",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r665384235",
            "id": 665384235,
            "in_reply_to_id": 663465855,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTM4NDIzNQ==",
            "original_commit_id": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "original_line": 260,
            "original_position": 11,
            "original_start_line": 256,
            "path": "Cython/Compiler/Pipeline.py",
            "position": null,
            "pull_request_review_id": 701024052,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-07-07T13:43:14Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/665384235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r665386824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/665386824"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "[resolved](https://github.com/cython/cython/pull/4241/commits/4e33d3168370d28653e75139c7a7af80615172d5)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T13:46:13Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:\n+        # unlike OS X or Linux,\n+        # Windows defaults to 8-bit character set like windows-1252\n+        kwargs[\"encoding\"] = \"utf-8\"\n+\n     if dedent:\n         content = textwrap.dedent(content)\n \n-    with open(file_path, mode=mode) as f:\n+    with open(file_path, mode=mode, **kwargs) as f:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r665386824",
            "id": 665386824,
            "in_reply_to_id": 663887925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTM4NjgyNA==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 261,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 701027655,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-07T13:46:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/665386824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r665387520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/665387520"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "[resolved](https://github.com/cython/cython/pull/4241/commits/05ed378b474bf6552a642eba259d0eba448bb747)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T13:47:04Z",
            "diff_hunk": "@@ -42,7 +42,7 @@ def test_write_file_dedent(self):\n         And no one can talk to a horse\n         of course\n         \"\"\"\n-        self._test_write_file(text, textwrap.dedent(text).encode('utf8'), dedent=True)\n+        self._test_write_file(text, textwrap.dedent(text).encode('utf-8'), dedent=True)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r665387520",
            "id": 665387520,
            "in_reply_to_id": 663583612,
            "line": 52,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTM4NzUyMA==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 45,
            "original_position": 24,
            "original_start_line": 42,
            "path": "Cython/Tests/TestTestUtils.py",
            "position": 44,
            "pull_request_review_id": 701028662,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 49,
            "start_side": "RIGHT",
            "updated_at": "2021-07-07T13:47:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/665387520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r665388008"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/665388008"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sketched out [here](https://github.com/cython/cython/pull/4241/commits/d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0), it remains to add tests and use",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T13:47:35Z",
            "diff_hunk": "@@ -23,38 +23,34 @@ def cache_files(self, file_glob):\n         return glob.glob(os.path.join(self.cache_dir, file_glob))\n \n     def fresh_cythonize(self, *args, **kwargs):\n-        Cython.Utils.clear_function_caches()\n-        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+        kwargs.update(cache=self.cache_dir)\n+        fresh_cythonize(*args, **kwargs)\n \n     def test_cycache_switch(self):\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n         a_pyx = os.path.join(self.src_dir, 'a.pyx')\n         a_c = a_pyx[:-4] + '.c'\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content1)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content1)\n+        self.fresh_cythonize(a_pyx)\n+        self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n         with open(a_c) as f:\n             a_contents1 = f.read()\n         os.unlink(a_c)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content2)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content2)\n+        self.fresh_cythonize(a_pyx)\n         with open(a_c) as f:\n             a_contents2 = f.read()\n         os.unlink(a_c)\n \n         self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r665388008",
            "id": 665388008,
            "in_reply_to_id": 663442289,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTM4ODAwOA==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 49,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 701029310,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-07T13:47:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/665388008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r665389365"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/665389365"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "[resolved](https://github.com/cython/cython/pull/4241/commits/8e65bcfeb364b332b8fb7aa5153026cac43205ff)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T13:49:06Z",
            "diff_hunk": "@@ -253,4 +275,4 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        os.utime(file_path, None)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r665389365",
            "id": 665389365,
            "in_reply_to_id": 663886557,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTM4OTM2NQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 278,
            "original_position": 75,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 701031148,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-07T13:49:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/665389365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r665645110"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/665645110"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It seems to me that copying a few lines from `relative_lines` here is not the best approach.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-07T19:20:06Z",
            "diff_hunk": "@@ -228,21 +235,96 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def touch_file(path):\n+    \"\"\"Set the access and modified times of the file\n+    specified by path as the current time\"\"\"\n+\n+    os.utime(path, None)\n+\n+\n+def relative_lines(lines, line, start, end, fallback=None):\n+    \"\"\"Returns the lines specified by `start` and `end` relative to `line`.\n+\n+    If `fallback` (Sized Iterable) is specified, it will be used for `line`, `start`, `end`\n+    applied to `lines` to generate a message for a ValueError\n+    if the original `line` is not found in `lines`.\"\"\"\n+\n+    if fallback:\n+        if not isinstance(fallback, Sized):\n+            raise TypeError(\"'fallback' must be a Sized instance\")\n+\n+        if not isinstance(fallback, Iterable):\n+            raise TypeError(\"'fallback' must be an instance of the Iterable\")\n+\n+        if len(fallback) != 3:\n+            raise ValueError(\"'fallback' must contain three values\"\n+                             \" for 'line', 'start', 'end'\")\n+\n+    try:\n+        ind = lines.index(line)\n+        return lines[ind+start: ind+end]\n+    except ValueError as e:\n+        if fallback is None:\n+            raise e\n+\n+        fallback_lines = map(repr, relative_lines(lines, *fallback))\n+\n+        raise ValueError(\n+            \"{0!r} was not found, presumably in \\n{1}\".format(\n+                line, \"\\n\".join(fallback_lines)))\n+\n+\n+def relative_lines_from_file(path, line, start, end, fallback=None):\n+    \"\"\"Same as `relative_lines`, but uses `path`\n+    as source for `lines` and returns joined lines.\"\"\"",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r665645110",
            "id": 665645110,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTY0NTExMA==",
            "original_commit_id": "40eef18a89dabedf3a2ccd97e06171ada3bb7571",
            "original_line": 290,
            "original_position": 85,
            "original_start_line": 288,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 701366534,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-07T19:20:07Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/665645110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667278813"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667278813"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`difflib` would generally be more convenient to use, but only with `assertEqual`, with `assertNotEqual` I see no way to use the diff.\r\n\r\nWe can force something like `self.assertEqual(a, b, c)` not to dump `a` and `b` and only output `c` by setting up `longMessage = False` for this test case.\r\nIf we use `somediff(a, b)` for `c`, then it will probably be easier to use in new test cases and a little more informative(?), but the current implementation still works fine, and I do not want to implement this idea now (everyone sometimes needs to be lazy `:3`)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T02:48:16Z",
            "diff_hunk": "@@ -26,38 +33,50 @@ def fresh_cythonize(self, *args, **kwargs):\n         kwargs.update(cache=self.cache_dir)\n         fresh_cythonize(*args, **kwargs)\n \n+    def relative_lines_from_file(self, path, line, start, end):\n+        return relative_lines_from_file(\n+            path, line, start, end, fallback=self.fallback_lines)\n+\n     def test_cycache_switch(self):\n+        a_filename = 'a.pyx'\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n-        a_pyx = os.path.join(self.src_dir, 'a.pyx')\n+        a_pyx = os.path.join(self.src_dir, a_filename)\n         a_c = a_pyx[:-4] + '.c'\n+        \n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=a_filename, at_line=1)\n+        definition_1 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_1)\"\n+        definition_2 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_2)\"\n \n         write_file(a_pyx, content1)\n         self.fresh_cythonize(a_pyx)\n         self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n-        with open(a_c) as f:\n-            a_contents1 = f.read()\n+        a_contents1 = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n         os.unlink(a_c)\n \n+        self.assertIn(definition_1, a_contents1, INCORRECT)\n+\n         write_file(a_pyx, content2)\n         self.fresh_cythonize(a_pyx)\n-        with open(a_c) as f:\n-            a_contents2 = f.read()\n+        self.assertEqual(2, len(self.cache_files('a.c*')))\n+        a_contents2 = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n         os.unlink(a_c)\n \n-        self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')\n-        self.assertEqual(2, len(self.cache_files('a.c*')))\n+        self.assertNotIn(definition_1, a_contents2, SAME)\n+        self.assertIn(definition_2, a_contents2, INCORRECT)\n \n         write_file(a_pyx, content1)\n         self.fresh_cythonize(a_pyx)\n         self.assertEqual(2, len(self.cache_files('a.c*')))\n-        with open(a_c) as f:\n-            a_contents = f.read()\n-        self.assertEqual(\n-            a_contents, a_contents1,\n-            msg='\\n'.join(list(difflib.unified_diff(\n-                a_contents.split('\\n'), a_contents1.split('\\n')))[:10]))\n+        a_contents = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n+\n+        self.assertIn(definition_1, a_contents, INCORRECT)\n+        self.assertNotIn(definition_2, a_contents, INCORRECT)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667278813",
            "id": 667278813,
            "line": 77,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzI3ODgxMw==",
            "original_commit_id": "0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
            "original_line": 79,
            "original_position": 79,
            "original_start_line": 57,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": 101,
            "pull_request_review_id": 703464368,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 61,
            "start_side": "LEFT",
            "updated_at": "2021-07-10T02:48:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667278813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667281136"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667281136"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hope no one (@scoder) has to `blame` me for the change? :]\r\nOr should I say `git blame`? ;D",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T03:11:41Z",
            "diff_hunk": "@@ -1,12 +1,10 @@\n-import difflib\n import glob\n import gzip\n import os\n import tempfile\n \n-import Cython.Build.Dependencies\n-import Cython.Utils\n-from Cython.TestUtils import CythonTest, write_file, fresh_cythonize, relative_lines_from_file\n+from Cython.TestUtils import (CythonTest, write_file, fresh_cythonize,\n+                              relative_lines_from_file)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667281136",
            "id": 667281136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzI4MTEzNg==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 7,
            "original_position": 11,
            "original_start_line": 1,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 703465913,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-07-10T03:11:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667281136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667281745"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667281745"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "used [here](https://github.com/cython/cython/pull/4241/commits/6cebfd32cc9f3b462aad5528a03057b3eb194213) and [here](https://github.com/cython/cython/pull/4241/commits/0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe), remains to add tests",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T03:18:25Z",
            "diff_hunk": "@@ -23,38 +23,34 @@ def cache_files(self, file_glob):\n         return glob.glob(os.path.join(self.cache_dir, file_glob))\n \n     def fresh_cythonize(self, *args, **kwargs):\n-        Cython.Utils.clear_function_caches()\n-        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+        kwargs.update(cache=self.cache_dir)\n+        fresh_cythonize(*args, **kwargs)\n \n     def test_cycache_switch(self):\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n         a_pyx = os.path.join(self.src_dir, 'a.pyx')\n         a_c = a_pyx[:-4] + '.c'\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content1)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content1)\n+        self.fresh_cythonize(a_pyx)\n+        self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n         with open(a_c) as f:\n             a_contents1 = f.read()\n         os.unlink(a_c)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content2)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content2)\n+        self.fresh_cythonize(a_pyx)\n         with open(a_c) as f:\n             a_contents2 = f.read()\n         os.unlink(a_c)\n \n         self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667281745",
            "id": 667281745,
            "in_reply_to_id": 663442289,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzI4MTc0NQ==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 49,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 703466264,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-10T03:18:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667281745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667311067"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667311067"
                }
            },
            "author_association": "MEMBER",
            "body": "Typo\r\n```suggestion\r\nSAME = \"The result of cythonization is the same\"\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T08:34:02Z",
            "diff_hunk": "@@ -1,15 +1,20 @@\n-import difflib\n import glob\n import gzip\n import os\n import tempfile\n \n-import Cython.Build.Dependencies\n-import Cython.Utils\n-from Cython.TestUtils import CythonTest, write_file, fresh_cythonize\n+from Cython.TestUtils import (CythonTest, write_file, fresh_cythonize,\n+                              relative_lines_from_file)\n+\n+SAME = \"The result of cytonization is the same\"",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667311067",
            "id": 667311067,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzMxMTA2Nw==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 9,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 703483914,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-10T08:50:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667311067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667311295"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667311295"
                }
            },
            "author_association": "MEMBER",
            "body": "The variable names here don't seem like something we should rely on. Do we have to look at the C code at all here? That's not something we commonly do. And this specific piece of C code doesn't seem to be specifically induced by this test but rather indirectly generated.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T08:35:56Z",
            "diff_hunk": "@@ -26,38 +31,50 @@ def fresh_cythonize(self, *args, **kwargs):\n         kwargs.update(cache=self.cache_dir)\n         fresh_cythonize(*args, **kwargs)\n \n+    def relative_lines_from_file(self, path, line, start, end):\n+        return relative_lines_from_file(\n+            path, line, start, end, fallback=self.fallback_lines)\n+\n     def test_cycache_switch(self):\n+        a_filename = 'a.pyx'\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n-        a_pyx = os.path.join(self.src_dir, 'a.pyx')\n+        a_pyx = os.path.join(self.src_dir, a_filename)\n         a_c = a_pyx[:-4] + '.c'\n \n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=a_filename, at_line=1)\n+        definition_1 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_1)\"\n+        definition_2 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_2)\"",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667311295",
            "id": 667311295,
            "line": 48,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzMxMTI5NQ==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 48,
            "original_position": 44,
            "original_start_line": 47,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": 54,
            "pull_request_review_id": 703483914,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 47,
            "start_side": "RIGHT",
            "updated_at": "2021-07-10T08:50:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667311295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667311843"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667311843"
                }
            },
            "author_association": "MEMBER",
            "body": "> `difflib` would generally be more convenient to use, but only with `assertEqual`, with `assertNotEqual` I see no way to use the diff.\r\n\r\nIf `assertNotEqual()` fails, it means that we do not need the (then empty) diff.\r\n\r\nI agree that using `difflib` seems nice for unexpected inequality. I also agree that using it in this ad-hoc fashion isn't ideal. There should be a helper function/method for this.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T08:41:28Z",
            "diff_hunk": "@@ -26,38 +33,50 @@ def fresh_cythonize(self, *args, **kwargs):\n         kwargs.update(cache=self.cache_dir)\n         fresh_cythonize(*args, **kwargs)\n \n+    def relative_lines_from_file(self, path, line, start, end):\n+        return relative_lines_from_file(\n+            path, line, start, end, fallback=self.fallback_lines)\n+\n     def test_cycache_switch(self):\n+        a_filename = 'a.pyx'\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n-        a_pyx = os.path.join(self.src_dir, 'a.pyx')\n+        a_pyx = os.path.join(self.src_dir, a_filename)\n         a_c = a_pyx[:-4] + '.c'\n+        \n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=a_filename, at_line=1)\n+        definition_1 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_1)\"\n+        definition_2 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_2)\"\n \n         write_file(a_pyx, content1)\n         self.fresh_cythonize(a_pyx)\n         self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n-        with open(a_c) as f:\n-            a_contents1 = f.read()\n+        a_contents1 = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n         os.unlink(a_c)\n \n+        self.assertIn(definition_1, a_contents1, INCORRECT)\n+\n         write_file(a_pyx, content2)\n         self.fresh_cythonize(a_pyx)\n-        with open(a_c) as f:\n-            a_contents2 = f.read()\n+        self.assertEqual(2, len(self.cache_files('a.c*')))\n+        a_contents2 = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n         os.unlink(a_c)\n \n-        self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')\n-        self.assertEqual(2, len(self.cache_files('a.c*')))\n+        self.assertNotIn(definition_1, a_contents2, SAME)\n+        self.assertIn(definition_2, a_contents2, INCORRECT)\n \n         write_file(a_pyx, content1)\n         self.fresh_cythonize(a_pyx)\n         self.assertEqual(2, len(self.cache_files('a.c*')))\n-        with open(a_c) as f:\n-            a_contents = f.read()\n-        self.assertEqual(\n-            a_contents, a_contents1,\n-            msg='\\n'.join(list(difflib.unified_diff(\n-                a_contents.split('\\n'), a_contents1.split('\\n')))[:10]))\n+        a_contents = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n+\n+        self.assertIn(definition_1, a_contents, INCORRECT)\n+        self.assertNotIn(definition_2, a_contents, INCORRECT)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667311843",
            "id": 667311843,
            "in_reply_to_id": 667278813,
            "line": 77,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzMxMTg0Mw==",
            "original_commit_id": "0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
            "original_line": 79,
            "original_position": 79,
            "original_start_line": 57,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": 101,
            "pull_request_review_id": 703483914,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 61,
            "start_side": "LEFT",
            "updated_at": "2021-07-10T08:50:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667311843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667311987"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667311987"
                }
            },
            "author_association": "MEMBER",
            "body": "If we can afford the extra newline in other parts of this PR, we can afford it here, too.\r\n```suggestion\r\nfrom Cython.TestUtils import (\r\n    CythonTest, write_file, fresh_cythonize, relative_lines_from_file)\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T08:42:45Z",
            "diff_hunk": "@@ -1,15 +1,20 @@\n-import difflib\n import glob\n import gzip\n import os\n import tempfile\n \n-import Cython.Build.Dependencies\n-import Cython.Utils\n-from Cython.TestUtils import CythonTest, write_file, fresh_cythonize\n+from Cython.TestUtils import (CythonTest, write_file, fresh_cythonize,\n+                              relative_lines_from_file)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667311987",
            "id": 667311987,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzMxMTk4Nw==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 7,
            "original_position": 11,
            "original_start_line": 6,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 703483914,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-10T08:50:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667311987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667312360"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667312360"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think this is necessary. It would fail below if it's something else. That seems enough. This isn't user facing code, it's just test code.\r\n```suggestion\r\n```",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T08:47:40Z",
            "diff_hunk": "@@ -229,42 +236,96 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def fresh_cythonize(*args, **kwargs):\n     \"\"\"Clear function caches and run cythonize\"\"\"\n     clear_function_and_Dependencies_caches()\n     Dependencies.cythonize(*args, **kwargs)\n \n \n-def clear_function_and_Dependencies_caches():\n-    Utils.clear_function_caches()\n-    Dependencies._dep_tree = None  # discard method caches\n+def touch_file(path):\n+    \"\"\"Set the access and modified times of the file\n+    specified by path as the current time\"\"\"\n+\n+    os.utime(path, None)\n+\n+\n+def relative_lines(lines, line, start, end, fallback=None):\n+    \"\"\"Returns the lines specified by `start` and `end` relative to `line`.\n+\n+    If `fallback` (Sized Iterable) is specified, it will be used for `line`, `start`, `end`\n+    applied to `lines` to generate a message for a ValueError\n+    if the original `line` is not found in `lines`.\"\"\"\n+\n+    if fallback:\n+        if not isinstance(fallback, Sized):\n+            raise TypeError(\"'fallback' must be a Sized instance\")\n+\n+        if not isinstance(fallback, Iterable):\n+            raise TypeError(\"'fallback' must be an instance of the Iterable\")\n+\n+        if len(fallback) != 3:\n+            raise ValueError(\"'fallback' must contain three values\"\n+                             \" for 'line', 'start', 'end'\")\n+",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667312360",
            "id": 667312360,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzMxMjM2MA==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 274,
            "original_position": 63,
            "original_start_line": 263,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 703483914,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-10T08:50:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667312360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667313281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667313281"
                }
            },
            "author_association": "MEMBER",
            "body": "> there is another YAGNI - the binary mode itself\r\n\r\nI left that out as a topic in my comment above because I though that one example would be enough.\r\n\r\nI get the general feeling that we keep wasting time on discussing things in this PR that we don't need. We should try to keep our work more focussed, both yours and mine.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T08:55:54Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667313281",
            "id": 667313281,
            "in_reply_to_id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzMxMzI4MQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 703485160,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-10T08:55:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667313281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667314154"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667314154"
                }
            },
            "author_association": "MEMBER",
            "body": ">> This can be simplified by setting `encoding = None` and always passing it here. In fact, `encoding='utf-8'` should be a parameter of the two helper functions, which is only ignored for `bytes` input.\r\n>\r\n> YAGNI ?\r\n\r\nThis isn't about adding a new feature. You have to put the default somewhere. If I have to decide between putting it into a code line inside of the function body here and making it a default argument of the function, then I don't see why we shouldn't make it a default argument. It totally seems like something that we may want to pass in.\r\n\r\n> Are you sure you want to use something other than utf-8?\r\n\r\nDoesn't seem unreasonable to me, give that this is a compiler project that processes source code files. ;-)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T09:05:49Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:\n+        # unlike OS X or Linux,\n+        # Windows defaults to 8-bit character set like windows-1252\n+        kwargs[\"encoding\"] = \"utf-8\"\n+\n     if dedent:\n         content = textwrap.dedent(content)\n \n-    with open(file_path, mode=mode) as f:\n+    with open(file_path, mode=mode, **kwargs) as f:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667314154",
            "id": 667314154,
            "in_reply_to_id": 663887925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzMxNDE1NA==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 261,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 703485883,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-10T09:05:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667314154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667352896"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667352896"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I agree that using `difflib` seems nice for unexpected inequality.\r\n\r\nThe point is, should we rely on the fact that other tests cover everything else and shouldn't try to see any other unexpected behavior? This looks like additional safety, but it might be superfluous.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T15:32:11Z",
            "diff_hunk": "@@ -26,38 +33,50 @@ def fresh_cythonize(self, *args, **kwargs):\n         kwargs.update(cache=self.cache_dir)\n         fresh_cythonize(*args, **kwargs)\n \n+    def relative_lines_from_file(self, path, line, start, end):\n+        return relative_lines_from_file(\n+            path, line, start, end, fallback=self.fallback_lines)\n+\n     def test_cycache_switch(self):\n+        a_filename = 'a.pyx'\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n-        a_pyx = os.path.join(self.src_dir, 'a.pyx')\n+        a_pyx = os.path.join(self.src_dir, a_filename)\n         a_c = a_pyx[:-4] + '.c'\n+        \n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=a_filename, at_line=1)\n+        definition_1 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_1)\"\n+        definition_2 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_2)\"\n \n         write_file(a_pyx, content1)\n         self.fresh_cythonize(a_pyx)\n         self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n-        with open(a_c) as f:\n-            a_contents1 = f.read()\n+        a_contents1 = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n         os.unlink(a_c)\n \n+        self.assertIn(definition_1, a_contents1, INCORRECT)\n+\n         write_file(a_pyx, content2)\n         self.fresh_cythonize(a_pyx)\n-        with open(a_c) as f:\n-            a_contents2 = f.read()\n+        self.assertEqual(2, len(self.cache_files('a.c*')))\n+        a_contents2 = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n         os.unlink(a_c)\n \n-        self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')\n-        self.assertEqual(2, len(self.cache_files('a.c*')))\n+        self.assertNotIn(definition_1, a_contents2, SAME)\n+        self.assertIn(definition_2, a_contents2, INCORRECT)\n \n         write_file(a_pyx, content1)\n         self.fresh_cythonize(a_pyx)\n         self.assertEqual(2, len(self.cache_files('a.c*')))\n-        with open(a_c) as f:\n-            a_contents = f.read()\n-        self.assertEqual(\n-            a_contents, a_contents1,\n-            msg='\\n'.join(list(difflib.unified_diff(\n-                a_contents.split('\\n'), a_contents1.split('\\n')))[:10]))\n+        a_contents = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n+\n+        self.assertIn(definition_1, a_contents, INCORRECT)\n+        self.assertNotIn(definition_2, a_contents, INCORRECT)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667352896",
            "id": 667352896,
            "in_reply_to_id": 667278813,
            "line": 77,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzM1Mjg5Ng==",
            "original_commit_id": "0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
            "original_line": 79,
            "original_position": 79,
            "original_start_line": 57,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": 101,
            "pull_request_review_id": 703509528,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 61,
            "start_side": "LEFT",
            "updated_at": "2021-07-10T15:32:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667352896",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667353158"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667353158"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "same in the TestRecythonize, i will fix it there",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T15:34:37Z",
            "diff_hunk": "@@ -1,15 +1,20 @@\n-import difflib\n import glob\n import gzip\n import os\n import tempfile\n \n-import Cython.Build.Dependencies\n-import Cython.Utils\n-from Cython.TestUtils import CythonTest, write_file, fresh_cythonize\n+from Cython.TestUtils import (CythonTest, write_file, fresh_cythonize,\n+                              relative_lines_from_file)\n+\n+SAME = \"The result of cytonization is the same\"",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667353158",
            "id": 667353158,
            "in_reply_to_id": 667311067,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzM1MzE1OA==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 9,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 703509710,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-10T15:34:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667353158",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667354259"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667354259"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> It would fail below if it's something else. \r\n\r\nI thought it would be better if it crashes immediately if the `fallback` is something else (`fallback` is not always used), but I think it really isn't that necessary",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T15:46:07Z",
            "diff_hunk": "@@ -229,42 +236,96 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def fresh_cythonize(*args, **kwargs):\n     \"\"\"Clear function caches and run cythonize\"\"\"\n     clear_function_and_Dependencies_caches()\n     Dependencies.cythonize(*args, **kwargs)\n \n \n-def clear_function_and_Dependencies_caches():\n-    Utils.clear_function_caches()\n-    Dependencies._dep_tree = None  # discard method caches\n+def touch_file(path):\n+    \"\"\"Set the access and modified times of the file\n+    specified by path as the current time\"\"\"\n+\n+    os.utime(path, None)\n+\n+\n+def relative_lines(lines, line, start, end, fallback=None):\n+    \"\"\"Returns the lines specified by `start` and `end` relative to `line`.\n+\n+    If `fallback` (Sized Iterable) is specified, it will be used for `line`, `start`, `end`\n+    applied to `lines` to generate a message for a ValueError\n+    if the original `line` is not found in `lines`.\"\"\"\n+\n+    if fallback:\n+        if not isinstance(fallback, Sized):\n+            raise TypeError(\"'fallback' must be a Sized instance\")\n+\n+        if not isinstance(fallback, Iterable):\n+            raise TypeError(\"'fallback' must be an instance of the Iterable\")\n+\n+        if len(fallback) != 3:\n+            raise ValueError(\"'fallback' must contain three values\"\n+                             \" for 'line', 'start', 'end'\")\n+",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667354259",
            "id": 667354259,
            "in_reply_to_id": 667312360,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzM1NDI1OQ==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 274,
            "original_position": 63,
            "original_start_line": 263,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 703510454,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-10T15:46:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667354259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667371028"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667371028"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "also [sorted](https://github.com/cython/cython/pull/4241/commits/b771523e583377b68ad21f31f4fd7ed6b683d169)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T18:34:41Z",
            "diff_hunk": "@@ -1,15 +1,20 @@\n-import difflib\n import glob\n import gzip\n import os\n import tempfile\n \n-import Cython.Build.Dependencies\n-import Cython.Utils\n-from Cython.TestUtils import CythonTest, write_file, fresh_cythonize\n+from Cython.TestUtils import (CythonTest, write_file, fresh_cythonize,\n+                              relative_lines_from_file)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667371028",
            "id": 667371028,
            "in_reply_to_id": 667311987,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzM3MTAyOA==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 7,
            "original_position": 11,
            "original_start_line": 6,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 703521135,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-10T18:34:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667371028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667371119"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667371119"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "[resolved](https://github.com/cython/cython/pull/4241/commits/cd1aec02767c176ad0e298e12a52b47286924f2f)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T18:35:31Z",
            "diff_hunk": "@@ -229,42 +236,96 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def fresh_cythonize(*args, **kwargs):\n     \"\"\"Clear function caches and run cythonize\"\"\"\n     clear_function_and_Dependencies_caches()\n     Dependencies.cythonize(*args, **kwargs)\n \n \n-def clear_function_and_Dependencies_caches():\n-    Utils.clear_function_caches()\n-    Dependencies._dep_tree = None  # discard method caches\n+def touch_file(path):\n+    \"\"\"Set the access and modified times of the file\n+    specified by path as the current time\"\"\"\n+\n+    os.utime(path, None)\n+\n+\n+def relative_lines(lines, line, start, end, fallback=None):\n+    \"\"\"Returns the lines specified by `start` and `end` relative to `line`.\n+\n+    If `fallback` (Sized Iterable) is specified, it will be used for `line`, `start`, `end`\n+    applied to `lines` to generate a message for a ValueError\n+    if the original `line` is not found in `lines`.\"\"\"\n+\n+    if fallback:\n+        if not isinstance(fallback, Sized):\n+            raise TypeError(\"'fallback' must be a Sized instance\")\n+\n+        if not isinstance(fallback, Iterable):\n+            raise TypeError(\"'fallback' must be an instance of the Iterable\")\n+\n+        if len(fallback) != 3:\n+            raise ValueError(\"'fallback' must contain three values\"\n+                             \" for 'line', 'start', 'end'\")\n+",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667371119",
            "id": 667371119,
            "in_reply_to_id": 667312360,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzM3MTExOQ==",
            "original_commit_id": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "original_line": 274,
            "original_position": 63,
            "original_start_line": 263,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 703521181,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-10T18:35:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667371119",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667372209"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667372209"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> We should try to keep our work more focussed, both yours and mine.\r\n\r\nLet's try",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-10T18:42:19Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667372209",
            "id": 667372209,
            "in_reply_to_id": 663892515,
            "line": 294,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzM3MjIwOQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 253,
            "original_position": 50,
            "original_start_line": 250,
            "path": "Cython/TestUtils.py",
            "position": 100,
            "pull_request_review_id": 703522013,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 291,
            "start_side": "RIGHT",
            "updated_at": "2021-07-10T18:42:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667372209",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667505130"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667505130"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder, It may be I should say that I am writing these tests, but you shouldn't have to resolve this conversation",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-11T16:26:58Z",
            "diff_hunk": "@@ -54,6 +54,20 @@ def wrapper(*args):\n     return wrapper\n \n \n+def clear_method_caches(instance):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667505130",
            "id": 667505130,
            "in_reply_to_id": 663584415,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzUwNTEzMA==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 57,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 703604579,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-11T16:26:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667505130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667505540"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667505540"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "And yes, one more thing, if you want to continue the conversation, it would be more convenient if you open it again. If you are just commenting and do not want me to change anything, then you can leave the conversation resolved.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-11T16:30:10Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:\n+        # unlike OS X or Linux,\n+        # Windows defaults to 8-bit character set like windows-1252\n+        kwargs[\"encoding\"] = \"utf-8\"\n+\n     if dedent:\n         content = textwrap.dedent(content)\n \n-    with open(file_path, mode=mode) as f:\n+    with open(file_path, mode=mode, **kwargs) as f:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667505540",
            "id": 667505540,
            "in_reply_to_id": 663887925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzUwNTU0MA==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 261,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 703604820,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-11T16:30:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667505540",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r667506325"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/667506325"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I unresolved it so it easier to see.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-11T16:36:18Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:\n+        # unlike OS X or Linux,\n+        # Windows defaults to 8-bit character set like windows-1252\n+        kwargs[\"encoding\"] = \"utf-8\"\n+\n     if dedent:\n         content = textwrap.dedent(content)\n \n-    with open(file_path, mode=mode) as f:\n+    with open(file_path, mode=mode, **kwargs) as f:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r667506325",
            "id": 667506325,
            "in_reply_to_id": 663887925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzUwNjMyNQ==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 261,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 703605254,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-11T16:36:18Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/667506325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r668382182"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/668382182"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "basically test are [here](https://github.com/cython/cython/pull/4241/commits/35035f363004fee16314e88c20dc68deafc636f2), [here](https://github.com/cython/cython/pull/4241/commits/14079b723b2baaea79cd417ce53eee9c51da072b), [here](https://github.com/cython/cython/pull/4241/commits/b3eecfbbeb632977525453fe5dbb323a05e281e6), [here](https://github.com/cython/cython/pull/4241/commits/6ea3c569dd1482521fff9b58e76ac2e314a588cd), and [here](https://github.com/cython/cython/pull/4241/commits/1edc3543105beaa2e7d3e15b63131ab7d269d81a)",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-13T02:31:51Z",
            "diff_hunk": "@@ -54,6 +54,20 @@ def wrapper(*args):\n     return wrapper\n \n \n+def clear_method_caches(instance):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r668382182",
            "id": 668382182,
            "in_reply_to_id": 663584415,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODM4MjE4Mg==",
            "original_commit_id": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "original_line": 57,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 704691729,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-13T02:32:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/668382182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r668384049"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/668384049"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "i think it works fine, i resolving this",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-13T02:37:30Z",
            "diff_hunk": "@@ -228,21 +235,96 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def touch_file(path):\n+    \"\"\"Set the access and modified times of the file\n+    specified by path as the current time\"\"\"\n+\n+    os.utime(path, None)\n+\n+\n+def relative_lines(lines, line, start, end, fallback=None):\n+    \"\"\"Returns the lines specified by `start` and `end` relative to `line`.\n+\n+    If `fallback` (Sized Iterable) is specified, it will be used for `line`, `start`, `end`\n+    applied to `lines` to generate a message for a ValueError\n+    if the original `line` is not found in `lines`.\"\"\"\n+\n+    if fallback:\n+        if not isinstance(fallback, Sized):\n+            raise TypeError(\"'fallback' must be a Sized instance\")\n+\n+        if not isinstance(fallback, Iterable):\n+            raise TypeError(\"'fallback' must be an instance of the Iterable\")\n+\n+        if len(fallback) != 3:\n+            raise ValueError(\"'fallback' must contain three values\"\n+                             \" for 'line', 'start', 'end'\")\n+\n+    try:\n+        ind = lines.index(line)\n+        return lines[ind+start: ind+end]\n+    except ValueError as e:\n+        if fallback is None:\n+            raise e\n+\n+        fallback_lines = map(repr, relative_lines(lines, *fallback))\n+\n+        raise ValueError(\n+            \"{0!r} was not found, presumably in \\n{1}\".format(\n+                line, \"\\n\".join(fallback_lines)))\n+\n+\n+def relative_lines_from_file(path, line, start, end, fallback=None):\n+    \"\"\"Same as `relative_lines`, but uses `path`\n+    as source for `lines` and returns joined lines.\"\"\"",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r668384049",
            "id": 668384049,
            "in_reply_to_id": 665645110,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODM4NDA0OQ==",
            "original_commit_id": "40eef18a89dabedf3a2ccd97e06171ada3bb7571",
            "original_line": 290,
            "original_position": 85,
            "original_start_line": 288,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 704693746,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-13T02:38:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/668384049",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r668384896"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/668384896"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder resolve this conversation if it is okay not to implement assert with `difflib` in this PR",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-13T02:40:07Z",
            "diff_hunk": "@@ -26,38 +33,50 @@ def fresh_cythonize(self, *args, **kwargs):\n         kwargs.update(cache=self.cache_dir)\n         fresh_cythonize(*args, **kwargs)\n \n+    def relative_lines_from_file(self, path, line, start, end):\n+        return relative_lines_from_file(\n+            path, line, start, end, fallback=self.fallback_lines)\n+\n     def test_cycache_switch(self):\n+        a_filename = 'a.pyx'\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n-        a_pyx = os.path.join(self.src_dir, 'a.pyx')\n+        a_pyx = os.path.join(self.src_dir, a_filename)\n         a_c = a_pyx[:-4] + '.c'\n+        \n+        module_line_1 = LINE_BEFORE_IMPLEMENTATION.format(\n+            filename=a_filename, at_line=1)\n+        definition_1 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_1)\"\n+        definition_2 = \"PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_int_2)\"\n \n         write_file(a_pyx, content1)\n         self.fresh_cythonize(a_pyx)\n         self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n-        with open(a_c) as f:\n-            a_contents1 = f.read()\n+        a_contents1 = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n         os.unlink(a_c)\n \n+        self.assertIn(definition_1, a_contents1, INCORRECT)\n+\n         write_file(a_pyx, content2)\n         self.fresh_cythonize(a_pyx)\n-        with open(a_c) as f:\n-            a_contents2 = f.read()\n+        self.assertEqual(2, len(self.cache_files('a.c*')))\n+        a_contents2 = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n         os.unlink(a_c)\n \n-        self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')\n-        self.assertEqual(2, len(self.cache_files('a.c*')))\n+        self.assertNotIn(definition_1, a_contents2, SAME)\n+        self.assertIn(definition_2, a_contents2, INCORRECT)\n \n         write_file(a_pyx, content1)\n         self.fresh_cythonize(a_pyx)\n         self.assertEqual(2, len(self.cache_files('a.c*')))\n-        with open(a_c) as f:\n-            a_contents = f.read()\n-        self.assertEqual(\n-            a_contents, a_contents1,\n-            msg='\\n'.join(list(difflib.unified_diff(\n-                a_contents.split('\\n'), a_contents1.split('\\n')))[:10]))\n+        a_contents = self.relative_lines_from_file(\n+            a_c, module_line_1, 0, 7)\n+\n+        self.assertIn(definition_1, a_contents, INCORRECT)\n+        self.assertNotIn(definition_2, a_contents, INCORRECT)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r668384896",
            "id": 668384896,
            "in_reply_to_id": 667278813,
            "line": 77,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODM4NDg5Ng==",
            "original_commit_id": "0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
            "original_line": 79,
            "original_position": 79,
            "original_start_line": 57,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": 101,
            "pull_request_review_id": 704694719,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 61,
            "start_side": "LEFT",
            "updated_at": "2021-07-13T02:40:07Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/668384896",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r668391030"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/668391030"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It is assumed that the sandbox will not change the values of the caches, for confirmation I use `deepcopy`, some tests do not pass line `self.assertEqual(caches_copy, Utils._function_caches)` (more precisely, only versions 2.7 and 3.6)\r\nIs it worth exploring this in more detail, or just write a comment about the expected behavior and stop using `deepcopy`?",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-13T02:59:36Z",
            "diff_hunk": "@@ -72,3 +74,56 @@ def test_write_newer_file_fresh(self):\n         self.assertFalse(os.path.exists(file_path))\n         write_newer_file(file_path, file_path, \"xyz\")\n         self.assertTrue(os.path.isfile(file_path))\n+\n+    ################################# Sandbox ##################################\n+\n+    def _sandbox_set_up(self):\n+        Utils._function_caches = self._function_caches\n+\n+    def sandboxed(self):\n+        # setup value\n+        self.assertEqual(Utils._function_caches, self._function_caches)\n+\n+        Utils._function_caches = [\n+            \"What is the airspeed velocity of an unladen swallow?\",\n+            \"I don't know that\"]\n+\n+    def _test_sandbox_for_function_caches(self, add_setup_func, asserted):\n+        self.assertFalse(hasattr(self, \"set_up_test_in_sandbox\"))\n+        if add_setup_func:\n+            self.set_up_test_in_sandbox = self._sandbox_set_up\n+\n+        caches_before = Utils._function_caches\n+        caches_contents = Utils._function_caches[:]\n+        caches_copy = deepcopy(Utils._function_caches)\n+\n+        sandboxed = sandbox_for_function_caches(asserted)(self.sandboxed)\n+\n+        self.assertIs(caches_before, Utils._function_caches)\n+        self.assertEqual(caches_copy, Utils._function_caches)",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r668391030",
            "id": 668391030,
            "line": 105,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODM5MTAzMA==",
            "original_commit_id": "b3eecfbbeb632977525453fe5dbb323a05e281e6",
            "original_line": 103,
            "original_position": 39,
            "original_start_line": 98,
            "path": "Cython/Tests/TestTestUtils.py",
            "position": 79,
            "pull_request_review_id": 704702062,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 100,
            "start_side": "RIGHT",
            "updated_at": "2021-07-13T02:59:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/668391030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r668420666"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/668420666"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> `encoding='utf-8'` should be a parameter of the two helper functions\r\n\r\nJust to progress in this PR, and not argue about YAGNI, I implemented it [here](https://github.com/cython/cython/pull/4241/commits/c45b37e0a8469de641cbcc479410a5bacce0f836)\r\n\r\n",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-13T04:37:58Z",
            "diff_hunk": "@@ -228,21 +229,42 @@ def unpack_source_tree(tree_file, workdir, cython_root):\n     return workdir, header\n \n \n+def fresh_cythonize(*args, **kwargs):\n+    \"\"\"Clear function caches and run cythonize\"\"\"\n+    clear_function_and_Dependencies_caches()\n+    Dependencies.cythonize(*args, **kwargs)\n+\n+\n+def clear_function_and_Dependencies_caches():\n+    Utils.clear_function_caches()\n+    Dependencies._dep_tree = None  # discard method caches\n+\n+\n def write_file(file_path, content, dedent=False):\n     \"\"\"\n-    Write some content (text or bytes) to the file at \"file_path\".\n+    Write some content (text or bytes) to the file at `file_path` in utf-8.\n     \"\"\"\n-    mode = 'wb' if isinstance(content, bytes) else 'w'\n+\n+    kwargs = {}\n+\n+    mode = \"w\"\n+    if isinstance(content, bytes):\n+        mode += \"b\"\n+    else:\n+        # unlike OS X or Linux,\n+        # Windows defaults to 8-bit character set like windows-1252\n+        kwargs[\"encoding\"] = \"utf-8\"\n+\n     if dedent:\n         content = textwrap.dedent(content)\n \n-    with open(file_path, mode=mode) as f:\n+    with open(file_path, mode=mode, **kwargs) as f:",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r668420666",
            "id": 668420666,
            "in_reply_to_id": 663887925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODQyMDY2Ng==",
            "original_commit_id": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "original_line": 261,
            "original_position": 59,
            "original_start_line": null,
            "path": "Cython/TestUtils.py",
            "position": null,
            "pull_request_review_id": 704736500,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-13T04:38:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/668420666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r668421700"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/668421700"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "and [here](https://github.com/cython/cython/pull/4241/commits/03c3668a0e7524146d058ae410df29542b166334) are the tests\r\n\r\nfinally resolved",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-13T04:41:28Z",
            "diff_hunk": "@@ -23,38 +23,34 @@ def cache_files(self, file_glob):\n         return glob.glob(os.path.join(self.cache_dir, file_glob))\n \n     def fresh_cythonize(self, *args, **kwargs):\n-        Cython.Utils.clear_function_caches()\n-        Cython.Build.Dependencies._dep_tree = None  # discard method caches\n-        Cython.Build.Dependencies.cythonize(*args, **kwargs)\n+        kwargs.update(cache=self.cache_dir)\n+        fresh_cythonize(*args, **kwargs)\n \n     def test_cycache_switch(self):\n         content1 = 'value = 1\\n'\n         content2 = 'value = 2\\n'\n         a_pyx = os.path.join(self.src_dir, 'a.pyx')\n         a_c = a_pyx[:-4] + '.c'\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content1)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content1)\n+        self.fresh_cythonize(a_pyx)\n+        self.fresh_cythonize(a_pyx)\n         self.assertEqual(1, len(self.cache_files('a.c*')))\n         with open(a_c) as f:\n             a_contents1 = f.read()\n         os.unlink(a_c)\n \n-        with open(a_pyx, 'w') as f:\n-            f.write(content2)\n-        self.fresh_cythonize(a_pyx, cache=self.cache_dir)\n+        write_file(a_pyx, content2)\n+        self.fresh_cythonize(a_pyx)\n         with open(a_c) as f:\n             a_contents2 = f.read()\n         os.unlink(a_c)\n \n         self.assertNotEqual(a_contents1, a_contents2, 'C file not changed!')",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r668421700",
            "id": 668421700,
            "in_reply_to_id": 663442289,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODQyMTcwMA==",
            "original_commit_id": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "original_line": 49,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestCyCache.py",
            "position": null,
            "pull_request_review_id": 704737838,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-07-13T04:41:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/668421700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r668433277"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/668433277"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`function_caches_sandbox` vs `sandbox_for_function_caches`",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-13T05:16:23Z",
            "diff_hunk": "@@ -253,4 +320,39 @@ def write_newer_file(file_path, newer_than, content, dedent=False):\n         other_time = None\n \n     while other_time is None or other_time >= os.path.getmtime(file_path):\n-        write_file(file_path, content, dedent=dedent)\n+        touch_file(file_path)\n+\n+\n+def filled_function_caches():\n+    for cache in Utils._function_caches:\n+        if len(cache) != 0:\n+            yield cache\n+\n+\n+def number_of_filled_caches():\n+    return len(list(filled_function_caches()))\n+\n+\n+# or function_caches_sandbox\n+def sandbox_for_function_caches(asserted=True):",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r668433277",
            "id": 668433277,
            "line": 337,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODQzMzI3Nw==",
            "original_commit_id": "03c3668a0e7524146d058ae410df29542b166334",
            "original_line": 337,
            "original_position": 148,
            "original_start_line": 336,
            "path": "Cython/TestUtils.py",
            "position": 148,
            "pull_request_review_id": 704752393,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": 336,
            "start_side": "RIGHT",
            "updated_at": "2021-07-13T05:16:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/668433277",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r672835205"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/672835205"
                }
            },
            "author_association": "MEMBER",
            "body": "This function seems overkill to me. Definitely as a public function (without leading `_`).\r\nAnd almost half of it is a docstring that I don't even understand.\r\nI'd rather keep this in the `clear_method_cache()` function to make it clearer what that does.\r\n\r\nI'm also not all that happy with the constants. I understand that they keep both strings closer to each other. But the code that uses them doesn't seem to benefit from the constants.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-20T06:16:20Z",
            "diff_hunk": "@@ -54,8 +57,28 @@ def wrapper(*args):\n     return wrapper\n \n \n+def method_and_cache_names(instance):\n+    \"\"\"Yields the method name and cache name,\n+    the cache name already exists in the instance,\n+    whereas the method name may be missing\"\"\"\n+\n+    for attr_name in dir(instance):\n+        match = _METHOD_CACHE_PATTERN.match(attr_name)\n+        if match is None:\n+            continue\n+\n+        yield match.group(1), attr_name",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r672835205",
            "id": 672835205,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjgzNTIwNQ==",
            "original_commit_id": "03c3668a0e7524146d058ae410df29542b166334",
            "original_line": 70,
            "original_position": 24,
            "original_start_line": 60,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 710205285,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-20T06:26:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/672835205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4241#discussion_r672863869"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4241"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/672863869"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> But the code that uses them doesn't seem to benefit from the constants.\r\n\r\nWdym?\r\n\r\nAlso they are used in tests, not like we couldn't copy strings to tests, but constants seems to be a bit clearer.",
            "commit_id": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "created_at": "2021-07-20T07:10:13Z",
            "diff_hunk": "@@ -54,8 +57,28 @@ def wrapper(*args):\n     return wrapper\n \n \n+def method_and_cache_names(instance):\n+    \"\"\"Yields the method name and cache name,\n+    the cache name already exists in the instance,\n+    whereas the method name may be missing\"\"\"\n+\n+    for attr_name in dir(instance):\n+        match = _METHOD_CACHE_PATTERN.match(attr_name)\n+        if match is None:\n+            continue\n+\n+        yield match.group(1), attr_name",
            "html_url": "https://github.com/cython/cython/pull/4241#discussion_r672863869",
            "id": 672863869,
            "in_reply_to_id": 672835205,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Mjg2Mzg2OQ==",
            "original_commit_id": "03c3668a0e7524146d058ae410df29542b166334",
            "original_line": 70,
            "original_position": 24,
            "original_start_line": 60,
            "path": "Cython/Utils.py",
            "position": null,
            "pull_request_review_id": 710245108,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4241",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-07-20T07:10:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/672863869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4241/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d6174eb2d4ea7aca668f172a74d6e77a0c0decf2/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T10:59:30Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T10:59:30Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Dependencies.py: Recreate implementation from #4063",
                "tree": {
                    "sha": "b4eb3035287ed079308cb66e53f8fb3c9e81c348",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b4eb3035287ed079308cb66e53f8fb3c9e81c348"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d6174eb2d4ea7aca668f172a74d6e77a0c0decf2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/d6174eb2d4ea7aca668f172a74d6e77a0c0decf2",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmQ2MTc0ZWIyZDRlYTdhY2E2NjhmMTcyYTc0ZDZlNzdhMGMwZGVjZjI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/580b4817360b6ac8372f69b57a3ddcab2480ab70",
                    "sha": "580b4817360b6ac8372f69b57a3ddcab2480ab70",
                    "url": "https://api.github.com/repos/cython/cython/commits/580b4817360b6ac8372f69b57a3ddcab2480ab70"
                }
            ],
            "sha": "d6174eb2d4ea7aca668f172a74d6e77a0c0decf2",
            "url": "https://api.github.com/repos/cython/cython/commits/d6174eb2d4ea7aca668f172a74d6e77a0c0decf2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f7813f16997802eb0b06526d44f46c15491dbd40/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T17:45:30Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T17:45:30Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Utils.py: create clear_method_caches",
                "tree": {
                    "sha": "dd86ad42e9b0259323b7b14ad5725969335eba45",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/dd86ad42e9b0259323b7b14ad5725969335eba45"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f7813f16997802eb0b06526d44f46c15491dbd40",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/f7813f16997802eb0b06526d44f46c15491dbd40",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmY3ODEzZjE2OTk3ODAyZWIwYjA2NTI2ZDQ0ZjQ2YzE1NDkxZGJkNDA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d6174eb2d4ea7aca668f172a74d6e77a0c0decf2",
                    "sha": "d6174eb2d4ea7aca668f172a74d6e77a0c0decf2",
                    "url": "https://api.github.com/repos/cython/cython/commits/d6174eb2d4ea7aca668f172a74d6e77a0c0decf2"
                }
            ],
            "sha": "f7813f16997802eb0b06526d44f46c15491dbd40",
            "url": "https://api.github.com/repos/cython/cython/commits/f7813f16997802eb0b06526d44f46c15491dbd40"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4d382619b75f24e7e71f8f76ea7fa4a2f1c62470/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T17:51:08Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T17:51:08Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Create TestRecythonize.py based on #4063",
                "tree": {
                    "sha": "765dc2be9bcf75cfbcc54eb6491d674046b1683b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/765dc2be9bcf75cfbcc54eb6491d674046b1683b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4d382619b75f24e7e71f8f76ea7fa4a2f1c62470",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/4d382619b75f24e7e71f8f76ea7fa4a2f1c62470",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjRkMzgyNjE5Yjc1ZjI0ZTdlNzFmOGY3NmVhN2ZhNGEyZjFjNjI0NzA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f7813f16997802eb0b06526d44f46c15491dbd40",
                    "sha": "f7813f16997802eb0b06526d44f46c15491dbd40",
                    "url": "https://api.github.com/repos/cython/cython/commits/f7813f16997802eb0b06526d44f46c15491dbd40"
                }
            ],
            "sha": "4d382619b75f24e7e71f8f76ea7fa4a2f1c62470",
            "url": "https://api.github.com/repos/cython/cython/commits/4d382619b75f24e7e71f8f76ea7fa4a2f1c62470"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/14cea095acdaa9e53142d280128cdb1ba45849d8/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T17:51:57Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T17:51:57Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Update .gitignore",
                "tree": {
                    "sha": "c17098175a7f370a3911f81fef37fe61b951495d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c17098175a7f370a3911f81fef37fe61b951495d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/14cea095acdaa9e53142d280128cdb1ba45849d8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/14cea095acdaa9e53142d280128cdb1ba45849d8",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjE0Y2VhMDk1YWNkYWE5ZTUzMTQyZDI4MDEyOGNkYjFiYTQ1ODQ5ZDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4d382619b75f24e7e71f8f76ea7fa4a2f1c62470",
                    "sha": "4d382619b75f24e7e71f8f76ea7fa4a2f1c62470",
                    "url": "https://api.github.com/repos/cython/cython/commits/4d382619b75f24e7e71f8f76ea7fa4a2f1c62470"
                }
            ],
            "sha": "14cea095acdaa9e53142d280128cdb1ba45849d8",
            "url": "https://api.github.com/repos/cython/cython/commits/14cea095acdaa9e53142d280128cdb1ba45849d8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d35a7cd3ab1e7bdd5efd6a6e5ca5c0b97e73c428/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T18:23:40Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T18:23:40Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: remove whitespaces",
                "tree": {
                    "sha": "36d756e6dcd9babf9762610779891f55bc5b2cf0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/36d756e6dcd9babf9762610779891f55bc5b2cf0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d35a7cd3ab1e7bdd5efd6a6e5ca5c0b97e73c428",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/d35a7cd3ab1e7bdd5efd6a6e5ca5c0b97e73c428",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmQzNWE3Y2QzYWIxZTdiZGQ1ZWZkNmE2ZTVjYTVjMGI5N2U3M2M0Mjg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/14cea095acdaa9e53142d280128cdb1ba45849d8",
                    "sha": "14cea095acdaa9e53142d280128cdb1ba45849d8",
                    "url": "https://api.github.com/repos/cython/cython/commits/14cea095acdaa9e53142d280128cdb1ba45849d8"
                }
            ],
            "sha": "d35a7cd3ab1e7bdd5efd6a6e5ca5c0b97e73c428",
            "url": "https://api.github.com/repos/cython/cython/commits/d35a7cd3ab1e7bdd5efd6a6e5ca5c0b97e73c428"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/eab912e89b797483fad8f13e6130ddb11681d6a3/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T18:24:45Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T18:24:45Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: remove unnecessary parts of messages to asserts",
                "tree": {
                    "sha": "3e687b2aab207fbfe15c07041bf4584cbdfd2fe6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3e687b2aab207fbfe15c07041bf4584cbdfd2fe6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/eab912e89b797483fad8f13e6130ddb11681d6a3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/eab912e89b797483fad8f13e6130ddb11681d6a3",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmVhYjkxMmU4OWI3OTc0ODNmYWQ4ZjEzZTYxMzBkZGIxMTY4MWQ2YTM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d35a7cd3ab1e7bdd5efd6a6e5ca5c0b97e73c428",
                    "sha": "d35a7cd3ab1e7bdd5efd6a6e5ca5c0b97e73c428",
                    "url": "https://api.github.com/repos/cython/cython/commits/d35a7cd3ab1e7bdd5efd6a6e5ca5c0b97e73c428"
                }
            ],
            "sha": "eab912e89b797483fad8f13e6130ddb11681d6a3",
            "url": "https://api.github.com/repos/cython/cython/commits/eab912e89b797483fad8f13e6130ddb11681d6a3"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a4027eb20712989a267c40c67871c175b78b6d72/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T19:02:22Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T19:02:22Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: set language_level",
                "tree": {
                    "sha": "2d7fa4844bc19335ec0a1d3b42f45844a013b231",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2d7fa4844bc19335ec0a1d3b42f45844a013b231"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a4027eb20712989a267c40c67871c175b78b6d72",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/a4027eb20712989a267c40c67871c175b78b6d72",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmE0MDI3ZWIyMDcxMjk4OWEyNjdjNDBjNjc4NzFjMTc1Yjc4YjZkNzI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/eab912e89b797483fad8f13e6130ddb11681d6a3",
                    "sha": "eab912e89b797483fad8f13e6130ddb11681d6a3",
                    "url": "https://api.github.com/repos/cython/cython/commits/eab912e89b797483fad8f13e6130ddb11681d6a3"
                }
            ],
            "sha": "a4027eb20712989a267c40c67871c175b78b6d72",
            "url": "https://api.github.com/repos/cython/cython/commits/a4027eb20712989a267c40c67871c175b78b6d72"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b0dd46c02c0afcdffbca5394a8a2851bddd05200/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T19:05:29Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T19:05:29Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Update TestRecythonize.py",
                "tree": {
                    "sha": "66119628f6793ff646f6ae7573028f3824fc00ac",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/66119628f6793ff646f6ae7573028f3824fc00ac"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b0dd46c02c0afcdffbca5394a8a2851bddd05200",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/b0dd46c02c0afcdffbca5394a8a2851bddd05200",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmIwZGQ0NmMwMmMwYWZjZGZmYmNhNTM5NGE4YTI4NTFiZGRkMDUyMDA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a4027eb20712989a267c40c67871c175b78b6d72",
                    "sha": "a4027eb20712989a267c40c67871c175b78b6d72",
                    "url": "https://api.github.com/repos/cython/cython/commits/a4027eb20712989a267c40c67871c175b78b6d72"
                }
            ],
            "sha": "b0dd46c02c0afcdffbca5394a8a2851bddd05200",
            "url": "https://api.github.com/repos/cython/cython/commits/b0dd46c02c0afcdffbca5394a8a2851bddd05200"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c21309f8be1d4292814f744908592c6d0b8ff655/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T20:30:08Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T20:30:08Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Utils.py make clear_method_caches compatible with python 2.7",
                "tree": {
                    "sha": "bf2ae0c51e8d25bb2eb99fdd5980999577f18338",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/bf2ae0c51e8d25bb2eb99fdd5980999577f18338"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c21309f8be1d4292814f744908592c6d0b8ff655",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/c21309f8be1d4292814f744908592c6d0b8ff655",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmMyMTMwOWY4YmUxZDQyOTI4MTRmNzQ0OTA4NTkyYzZkMGI4ZmY2NTU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b0dd46c02c0afcdffbca5394a8a2851bddd05200",
                    "sha": "b0dd46c02c0afcdffbca5394a8a2851bddd05200",
                    "url": "https://api.github.com/repos/cython/cython/commits/b0dd46c02c0afcdffbca5394a8a2851bddd05200"
                }
            ],
            "sha": "c21309f8be1d4292814f744908592c6d0b8ff655",
            "url": "https://api.github.com/repos/cython/cython/commits/c21309f8be1d4292814f744908592c6d0b8ff655"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/24269de14db1e44496d067bd62c67999c8f9d5ed/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T22:38:15Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T22:38:15Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: assertTrue -> assertNotIn / assertIn",
                "tree": {
                    "sha": "98db611db45bc866fc8bc0badcc9df1b6e4551a8",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/98db611db45bc866fc8bc0badcc9df1b6e4551a8"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/24269de14db1e44496d067bd62c67999c8f9d5ed",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/24269de14db1e44496d067bd62c67999c8f9d5ed",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjI0MjY5ZGUxNGRiMWU0NDQ5NmQwNjdiZDYyYzY3OTk5YzhmOWQ1ZWQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c21309f8be1d4292814f744908592c6d0b8ff655",
                    "sha": "c21309f8be1d4292814f744908592c6d0b8ff655",
                    "url": "https://api.github.com/repos/cython/cython/commits/c21309f8be1d4292814f744908592c6d0b8ff655"
                }
            ],
            "sha": "24269de14db1e44496d067bd62c67999c8f9d5ed",
            "url": "https://api.github.com/repos/cython/cython/commits/24269de14db1e44496d067bd62c67999c8f9d5ed"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2e1a96e34dda993733ab94d72e8da78746d4e104/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T22:41:26Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T22:41:26Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: make CI run?",
                "tree": {
                    "sha": "e1895cd21fa80ff18792d5e7c64bf8812c04c850",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e1895cd21fa80ff18792d5e7c64bf8812c04c850"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2e1a96e34dda993733ab94d72e8da78746d4e104",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/2e1a96e34dda993733ab94d72e8da78746d4e104",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjJlMWE5NmUzNGRkYTk5MzczM2FiOTRkNzJlOGRhNzg3NDZkNGUxMDQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/24269de14db1e44496d067bd62c67999c8f9d5ed",
                    "sha": "24269de14db1e44496d067bd62c67999c8f9d5ed",
                    "url": "https://api.github.com/repos/cython/cython/commits/24269de14db1e44496d067bd62c67999c8f9d5ed"
                }
            ],
            "sha": "2e1a96e34dda993733ab94d72e8da78746d4e104",
            "url": "https://api.github.com/repos/cython/cython/commits/2e1a96e34dda993733ab94d72e8da78746d4e104"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3a37aa34b7a209e9fb467de8d1def3f3625299cf/comments",
            "commit": {
                "author": {
                    "date": "2021-06-21T22:42:53Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-21T22:42:53Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: remove unnecessary comment",
                "tree": {
                    "sha": "87b28593aa07b6508789ec803976a1b80b2bf2f8",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/87b28593aa07b6508789ec803976a1b80b2bf2f8"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3a37aa34b7a209e9fb467de8d1def3f3625299cf",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/3a37aa34b7a209e9fb467de8d1def3f3625299cf",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjNhMzdhYTM0YjdhMjA5ZTlmYjQ2N2RlOGQxZGVmM2YzNjI1Mjk5Y2Y=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2e1a96e34dda993733ab94d72e8da78746d4e104",
                    "sha": "2e1a96e34dda993733ab94d72e8da78746d4e104",
                    "url": "https://api.github.com/repos/cython/cython/commits/2e1a96e34dda993733ab94d72e8da78746d4e104"
                }
            ],
            "sha": "3a37aa34b7a209e9fb467de8d1def3f3625299cf",
            "url": "https://api.github.com/repos/cython/cython/commits/3a37aa34b7a209e9fb467de8d1def3f3625299cf"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1f24ca2aba09f3106752a8ff732932f8cf5c7e47/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T20:15:24Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T20:15:24Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": ".gitignore: ignore .pyd everywhere",
                "tree": {
                    "sha": "65a2c652cea6d757e9b08e6beefa0d60ab525c28",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/65a2c652cea6d757e9b08e6beefa0d60ab525c28"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1f24ca2aba09f3106752a8ff732932f8cf5c7e47",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/1f24ca2aba09f3106752a8ff732932f8cf5c7e47",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjFmMjRjYTJhYmEwOWYzMTA2NzUyYThmZjczMjkzMmY4Y2Y1YzdlNDc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3a37aa34b7a209e9fb467de8d1def3f3625299cf",
                    "sha": "3a37aa34b7a209e9fb467de8d1def3f3625299cf",
                    "url": "https://api.github.com/repos/cython/cython/commits/3a37aa34b7a209e9fb467de8d1def3f3625299cf"
                }
            ],
            "sha": "1f24ca2aba09f3106752a8ff732932f8cf5c7e47",
            "url": "https://api.github.com/repos/cython/cython/commits/1f24ca2aba09f3106752a8ff732932f8cf5c7e47"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9ccd7d3889f551107450acc8854630b00d68aa1f/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T20:25:46Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T20:25:46Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: make language_level a class variable",
                "tree": {
                    "sha": "4a016105bab7b065bba85a96bc628ccef9487ced",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4a016105bab7b065bba85a96bc628ccef9487ced"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9ccd7d3889f551107450acc8854630b00d68aa1f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/9ccd7d3889f551107450acc8854630b00d68aa1f",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjljY2Q3ZDM4ODlmNTUxMTA3NDUwYWNjODg1NDYzMGIwMGQ2OGFhMWY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1f24ca2aba09f3106752a8ff732932f8cf5c7e47",
                    "sha": "1f24ca2aba09f3106752a8ff732932f8cf5c7e47",
                    "url": "https://api.github.com/repos/cython/cython/commits/1f24ca2aba09f3106752a8ff732932f8cf5c7e47"
                }
            ],
            "sha": "9ccd7d3889f551107450acc8854630b00d68aa1f",
            "url": "https://api.github.com/repos/cython/cython/commits/9ccd7d3889f551107450acc8854630b00d68aa1f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f4f7ff218123afcc493dcbc8ffacd1b0ea563bea/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T20:27:20Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T20:27:20Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: INCOR -> INCORRECT",
                "tree": {
                    "sha": "4b6993f0eb8c0269bfab4ce5850c419594095b72",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4b6993f0eb8c0269bfab4ce5850c419594095b72"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f4f7ff218123afcc493dcbc8ffacd1b0ea563bea",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/f4f7ff218123afcc493dcbc8ffacd1b0ea563bea",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmY0ZjdmZjIxODEyM2FmY2M0OTNkY2JjOGZmYWNkMWIwZWE1NjNiZWE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9ccd7d3889f551107450acc8854630b00d68aa1f",
                    "sha": "9ccd7d3889f551107450acc8854630b00d68aa1f",
                    "url": "https://api.github.com/repos/cython/cython/commits/9ccd7d3889f551107450acc8854630b00d68aa1f"
                }
            ],
            "sha": "f4f7ff218123afcc493dcbc8ffacd1b0ea563bea",
            "url": "https://api.github.com/repos/cython/cython/commits/f4f7ff218123afcc493dcbc8ffacd1b0ea563bea"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/059a5f883d787a5b2664dcd79e43fe12a7730d29/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T21:21:59Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T21:21:59Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: creating_pxd -> pxd_exists_for_first_check",
                "tree": {
                    "sha": "5aaeea247e08b6004c3c33152be8a2de7e50326d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5aaeea247e08b6004c3c33152be8a2de7e50326d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/059a5f883d787a5b2664dcd79e43fe12a7730d29",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/059a5f883d787a5b2664dcd79e43fe12a7730d29",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjA1OWE1Zjg4M2Q3ODdhNWIyNjY0ZGNkNzllNDNmZTEyYTc3MzBkMjk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f4f7ff218123afcc493dcbc8ffacd1b0ea563bea",
                    "sha": "f4f7ff218123afcc493dcbc8ffacd1b0ea563bea",
                    "url": "https://api.github.com/repos/cython/cython/commits/f4f7ff218123afcc493dcbc8ffacd1b0ea563bea"
                }
            ],
            "sha": "059a5f883d787a5b2664dcd79e43fe12a7730d29",
            "url": "https://api.github.com/repos/cython/cython/commits/059a5f883d787a5b2664dcd79e43fe12a7730d29"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3b011a943c3b1da6fd6399946f4e6856c387820f/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T21:38:36Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T21:38:36Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: make dep_tree a class variable",
                "tree": {
                    "sha": "b6c8ee03500ff37bc7c6353ff04bb484345af39c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b6c8ee03500ff37bc7c6353ff04bb484345af39c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3b011a943c3b1da6fd6399946f4e6856c387820f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/3b011a943c3b1da6fd6399946f4e6856c387820f",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjNiMDExYTk0M2MzYjFkYTZmZDYzOTk5NDZmNGU2ODU2YzM4NzgyMGY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/059a5f883d787a5b2664dcd79e43fe12a7730d29",
                    "sha": "059a5f883d787a5b2664dcd79e43fe12a7730d29",
                    "url": "https://api.github.com/repos/cython/cython/commits/059a5f883d787a5b2664dcd79e43fe12a7730d29"
                }
            ],
            "sha": "3b011a943c3b1da6fd6399946f4e6856c387820f",
            "url": "https://api.github.com/repos/cython/cython/commits/3b011a943c3b1da6fd6399946f4e6856c387820f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T21:39:38Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T21:39:38Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: create сlear_function_and_Dependencies_caches",
                "tree": {
                    "sha": "8817ac94f8c533cfa01321b229343973a064cdef",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8817ac94f8c533cfa01321b229343973a064cdef"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmY3ZDc0ZjRmYzBkYzNjMGI4YWM2ZDZjMWM1YmM5MmVkYmZiYWY4MTY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3b011a943c3b1da6fd6399946f4e6856c387820f",
                    "sha": "3b011a943c3b1da6fd6399946f4e6856c387820f",
                    "url": "https://api.github.com/repos/cython/cython/commits/3b011a943c3b1da6fd6399946f4e6856c387820f"
                }
            ],
            "sha": "f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816",
            "url": "https://api.github.com/repos/cython/cython/commits/f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a049908de6a1f023dd46a09eb462eb963a3ee2aa/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T22:06:50Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T22:06:50Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: add join kw to relative_lines_from_file and use it",
                "tree": {
                    "sha": "8b622609bbf37ed53c7af6532a7525ad57af3e0f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8b622609bbf37ed53c7af6532a7525ad57af3e0f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a049908de6a1f023dd46a09eb462eb963a3ee2aa",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/a049908de6a1f023dd46a09eb462eb963a3ee2aa",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmEwNDk5MDhkZTZhMWYwMjNkZDQ2YTA5ZWI0NjJlYjk2M2EzZWUyYWE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816",
                    "sha": "f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816",
                    "url": "https://api.github.com/repos/cython/cython/commits/f7d74f4fc0dc3c0b8ac6d6c1c5bc92edbfbaf816"
                }
            ],
            "sha": "a049908de6a1f023dd46a09eb462eb963a3ee2aa",
            "url": "https://api.github.com/repos/cython/cython/commits/a049908de6a1f023dd46a09eb462eb963a3ee2aa"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3dbf753badb8cd1481bebc355b13e4443c67801c/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T22:20:29Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T22:20:29Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: make variable names more meaningful",
                "tree": {
                    "sha": "d1f1e26b79d10a7621b9ba1b6a8e1ba7a54c99e2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d1f1e26b79d10a7621b9ba1b6a8e1ba7a54c99e2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3dbf753badb8cd1481bebc355b13e4443c67801c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/3dbf753badb8cd1481bebc355b13e4443c67801c",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjNkYmY3NTNiYWRiOGNkMTQ4MWJlYmMzNTViMTNlNDQ0M2M2NzgwMWM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a049908de6a1f023dd46a09eb462eb963a3ee2aa",
                    "sha": "a049908de6a1f023dd46a09eb462eb963a3ee2aa",
                    "url": "https://api.github.com/repos/cython/cython/commits/a049908de6a1f023dd46a09eb462eb963a3ee2aa"
                }
            ],
            "sha": "3dbf753badb8cd1481bebc355b13e4443c67801c",
            "url": "https://api.github.com/repos/cython/cython/commits/3dbf753badb8cd1481bebc355b13e4443c67801c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7cedb626075795239ee0ea7375315fd78e41d5e7/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T22:37:14Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T22:37:14Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: LINE_1 -> LINE_BEFORE_IMPLEMENTATION",
                "tree": {
                    "sha": "cccc4ffaa0f1e9fde4616830d596be5dc405f8e4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cccc4ffaa0f1e9fde4616830d596be5dc405f8e4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7cedb626075795239ee0ea7375315fd78e41d5e7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/7cedb626075795239ee0ea7375315fd78e41d5e7",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjdjZWRiNjI2MDc1Nzk1MjM5ZWUwZWE3Mzc1MzE1ZmQ3OGU0MWQ1ZTc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3dbf753badb8cd1481bebc355b13e4443c67801c",
                    "sha": "3dbf753badb8cd1481bebc355b13e4443c67801c",
                    "url": "https://api.github.com/repos/cython/cython/commits/3dbf753badb8cd1481bebc355b13e4443c67801c"
                }
            ],
            "sha": "7cedb626075795239ee0ea7375315fd78e41d5e7",
            "url": "https://api.github.com/repos/cython/cython/commits/7cedb626075795239ee0ea7375315fd78e41d5e7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/07f7c5e86229436536661b3e69120bd60d605506/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T22:49:46Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T22:49:46Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: fix typo",
                "tree": {
                    "sha": "c10129aa527ce4fd7924df163f7c3212236c1db1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c10129aa527ce4fd7924df163f7c3212236c1db1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/07f7c5e86229436536661b3e69120bd60d605506",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/07f7c5e86229436536661b3e69120bd60d605506",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjA3ZjdjNWU4NjIyOTQzNjUzNjY2MWIzZTY5MTIwYmQ2MGQ2MDU1MDY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7cedb626075795239ee0ea7375315fd78e41d5e7",
                    "sha": "7cedb626075795239ee0ea7375315fd78e41d5e7",
                    "url": "https://api.github.com/repos/cython/cython/commits/7cedb626075795239ee0ea7375315fd78e41d5e7"
                }
            ],
            "sha": "07f7c5e86229436536661b3e69120bd60d605506",
            "url": "https://api.github.com/repos/cython/cython/commits/07f7c5e86229436536661b3e69120bd60d605506"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/11c64cdc54600c724c5323213087bd263c55be33/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T22:52:09Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T22:52:09Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: tempfile.mkdtemp -> os.mkdir",
                "tree": {
                    "sha": "fb195b881672e672972464e5a9d5b0a6f3eb172e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fb195b881672e672972464e5a9d5b0a6f3eb172e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/11c64cdc54600c724c5323213087bd263c55be33",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/11c64cdc54600c724c5323213087bd263c55be33",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjExYzY0Y2RjNTQ2MDBjNzI0YzUzMjMyMTMwODdiZDI2M2M1NWJlMzM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/07f7c5e86229436536661b3e69120bd60d605506",
                    "sha": "07f7c5e86229436536661b3e69120bd60d605506",
                    "url": "https://api.github.com/repos/cython/cython/commits/07f7c5e86229436536661b3e69120bd60d605506"
                }
            ],
            "sha": "11c64cdc54600c724c5323213087bd263c55be33",
            "url": "https://api.github.com/repos/cython/cython/commits/11c64cdc54600c724c5323213087bd263c55be33"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/27973ce592d11533ae6e4bcdae78163b7358195c/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T23:18:32Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T23:18:32Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: shorten very large variable names",
                "tree": {
                    "sha": "434c6ed1abfa39f40b4e70d9101f2e4ee4ad1d65",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/434c6ed1abfa39f40b4e70d9101f2e4ee4ad1d65"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/27973ce592d11533ae6e4bcdae78163b7358195c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/27973ce592d11533ae6e4bcdae78163b7358195c",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjI3OTczY2U1OTJkMTE1MzNhZTZlNGJjZGFlNzgxNjNiNzM1ODE5NWM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/11c64cdc54600c724c5323213087bd263c55be33",
                    "sha": "11c64cdc54600c724c5323213087bd263c55be33",
                    "url": "https://api.github.com/repos/cython/cython/commits/11c64cdc54600c724c5323213087bd263c55be33"
                }
            ],
            "sha": "27973ce592d11533ae6e4bcdae78163b7358195c",
            "url": "https://api.github.com/repos/cython/cython/commits/27973ce592d11533ae6e4bcdae78163b7358195c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0c9f5640e171849ca26dc82175b997a3d9a5936c/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T23:39:48Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T23:39:48Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: make variable names more meaningful",
                "tree": {
                    "sha": "0653b8e13a73868bcdbaa9f8ca8afc4edf730015",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0653b8e13a73868bcdbaa9f8ca8afc4edf730015"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0c9f5640e171849ca26dc82175b997a3d9a5936c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/0c9f5640e171849ca26dc82175b997a3d9a5936c",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjBjOWY1NjQwZTE3MTg0OWNhMjZkYzgyMTc1Yjk5N2EzZDlhNTkzNmM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/27973ce592d11533ae6e4bcdae78163b7358195c",
                    "sha": "27973ce592d11533ae6e4bcdae78163b7358195c",
                    "url": "https://api.github.com/repos/cython/cython/commits/27973ce592d11533ae6e4bcdae78163b7358195c"
                }
            ],
            "sha": "0c9f5640e171849ca26dc82175b997a3d9a5936c",
            "url": "https://api.github.com/repos/cython/cython/commits/0c9f5640e171849ca26dc82175b997a3d9a5936c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5df40b48373a0ce11fb8f783e9ba71724adbbd14/comments",
            "commit": {
                "author": {
                    "date": "2021-06-22T23:41:03Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-22T23:41:03Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: create and use write_to_file",
                "tree": {
                    "sha": "f7d23fbd0238fa98adb3861d829751c9d715f5ca",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f7d23fbd0238fa98adb3861d829751c9d715f5ca"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5df40b48373a0ce11fb8f783e9ba71724adbbd14",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/5df40b48373a0ce11fb8f783e9ba71724adbbd14",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjVkZjQwYjQ4MzczYTBjZTExZmI4Zjc4M2U5YmE3MTcyNGFkYmJkMTQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0c9f5640e171849ca26dc82175b997a3d9a5936c",
                    "sha": "0c9f5640e171849ca26dc82175b997a3d9a5936c",
                    "url": "https://api.github.com/repos/cython/cython/commits/0c9f5640e171849ca26dc82175b997a3d9a5936c"
                }
            ],
            "sha": "5df40b48373a0ce11fb8f783e9ba71724adbbd14",
            "url": "https://api.github.com/repos/cython/cython/commits/5df40b48373a0ce11fb8f783e9ba71724adbbd14"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/991717ddf2214b6b0fceba81f69f6d787fb65afd/comments",
            "commit": {
                "author": {
                    "date": "2021-06-23T11:54:12Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-23T11:54:12Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: source -> module, change variable names for c files",
                "tree": {
                    "sha": "37ffb359b95637fd245961512196e0bbc95e94f3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/37ffb359b95637fd245961512196e0bbc95e94f3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/991717ddf2214b6b0fceba81f69f6d787fb65afd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/991717ddf2214b6b0fceba81f69f6d787fb65afd",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjk5MTcxN2RkZjIyMTRiNmIwZmNlYmE4MWY2OWY2ZDc4N2ZiNjVhZmQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5df40b48373a0ce11fb8f783e9ba71724adbbd14",
                    "sha": "5df40b48373a0ce11fb8f783e9ba71724adbbd14",
                    "url": "https://api.github.com/repos/cython/cython/commits/5df40b48373a0ce11fb8f783e9ba71724adbbd14"
                }
            ],
            "sha": "991717ddf2214b6b0fceba81f69f6d787fb65afd",
            "url": "https://api.github.com/repos/cython/cython/commits/991717ddf2214b6b0fceba81f69f6d787fb65afd"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bc1ad78558e36b8d360824d3cf983b7c7db998eb/comments",
            "commit": {
                "author": {
                    "date": "2021-06-23T12:18:06Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-23T12:18:06Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: improve the output of ValueError for relative_lines",
                "tree": {
                    "sha": "e57ab4250bcdd4b646dfd76379dfa601559b57b8",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e57ab4250bcdd4b646dfd76379dfa601559b57b8"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bc1ad78558e36b8d360824d3cf983b7c7db998eb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmJjMWFkNzg1NThlMzZiOGQzNjA4MjRkM2NmOTgzYjdjN2RiOTk4ZWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/991717ddf2214b6b0fceba81f69f6d787fb65afd",
                    "sha": "991717ddf2214b6b0fceba81f69f6d787fb65afd",
                    "url": "https://api.github.com/repos/cython/cython/commits/991717ddf2214b6b0fceba81f69f6d787fb65afd"
                }
            ],
            "sha": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
            "url": "https://api.github.com/repos/cython/cython/commits/bc1ad78558e36b8d360824d3cf983b7c7db998eb"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b675db40aa02117a834a8c3e35144cca8eec77cc/comments",
            "commit": {
                "author": {
                    "date": "2021-06-23T12:42:46Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-23T12:42:46Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: format",
                "tree": {
                    "sha": "2ec93c7d6dde10d9f27b58d539624770dce0d2cd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2ec93c7d6dde10d9f27b58d539624770dce0d2cd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b675db40aa02117a834a8c3e35144cca8eec77cc",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/b675db40aa02117a834a8c3e35144cca8eec77cc",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmI2NzVkYjQwYWEwMjExN2E4MzRhOGMzZTM1MTQ0Y2NhOGVlYzc3Y2M=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bc1ad78558e36b8d360824d3cf983b7c7db998eb",
                    "sha": "bc1ad78558e36b8d360824d3cf983b7c7db998eb",
                    "url": "https://api.github.com/repos/cython/cython/commits/bc1ad78558e36b8d360824d3cf983b7c7db998eb"
                }
            ],
            "sha": "b675db40aa02117a834a8c3e35144cca8eec77cc",
            "url": "https://api.github.com/repos/cython/cython/commits/b675db40aa02117a834a8c3e35144cca8eec77cc"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/68de52c5c27a0770536d183bb32d94d292c7734b/comments",
            "commit": {
                "author": {
                    "date": "2021-06-24T11:42:00Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-24T11:42:00Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: sort imports, format",
                "tree": {
                    "sha": "10ba866e5dc87f3a4b8c68b0d47ff9fcbba01f36",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/10ba866e5dc87f3a4b8c68b0d47ff9fcbba01f36"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/68de52c5c27a0770536d183bb32d94d292c7734b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/68de52c5c27a0770536d183bb32d94d292c7734b",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjY4ZGU1MmM1YzI3YTA3NzA1MzZkMTgzYmIzMmQ5NGQyOTJjNzczNGI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b675db40aa02117a834a8c3e35144cca8eec77cc",
                    "sha": "b675db40aa02117a834a8c3e35144cca8eec77cc",
                    "url": "https://api.github.com/repos/cython/cython/commits/b675db40aa02117a834a8c3e35144cca8eec77cc"
                }
            ],
            "sha": "68de52c5c27a0770536d183bb32d94d292c7734b",
            "url": "https://api.github.com/repos/cython/cython/commits/68de52c5c27a0770536d183bb32d94d292c7734b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4626a93a975710dac962d5d7b13ee53bc6ee9cda/comments",
            "commit": {
                "author": {
                    "date": "2021-06-24T11:42:46Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-24T11:42:46Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: add time.sleep to write_to_file #4245",
                "tree": {
                    "sha": "e7918437254502419898e9f6026cd07d9411b31e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e7918437254502419898e9f6026cd07d9411b31e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4626a93a975710dac962d5d7b13ee53bc6ee9cda",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/4626a93a975710dac962d5d7b13ee53bc6ee9cda",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjQ2MjZhOTNhOTc1NzEwZGFjOTYyZDVkN2IxM2VlNTNiYzZlZTljZGE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/68de52c5c27a0770536d183bb32d94d292c7734b",
                    "sha": "68de52c5c27a0770536d183bb32d94d292c7734b",
                    "url": "https://api.github.com/repos/cython/cython/commits/68de52c5c27a0770536d183bb32d94d292c7734b"
                }
            ],
            "sha": "4626a93a975710dac962d5d7b13ee53bc6ee9cda",
            "url": "https://api.github.com/repos/cython/cython/commits/4626a93a975710dac962d5d7b13ee53bc6ee9cda"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ba1a48619da3a1b5bfc7c790f6fe65decab4956f/comments",
            "commit": {
                "author": {
                    "date": "2021-06-24T12:44:19Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-24T12:44:19Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: declare coding",
                "tree": {
                    "sha": "3d32d3592b1c86e005a8ca5dc62bdaa41f325e29",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3d32d3592b1c86e005a8ca5dc62bdaa41f325e29"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ba1a48619da3a1b5bfc7c790f6fe65decab4956f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/ba1a48619da3a1b5bfc7c790f6fe65decab4956f",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmJhMWE0ODYxOWRhM2ExYjViZmM3Yzc5MGY2ZmU2NWRlY2FiNDk1NmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4626a93a975710dac962d5d7b13ee53bc6ee9cda",
                    "sha": "4626a93a975710dac962d5d7b13ee53bc6ee9cda",
                    "url": "https://api.github.com/repos/cython/cython/commits/4626a93a975710dac962d5d7b13ee53bc6ee9cda"
                }
            ],
            "sha": "ba1a48619da3a1b5bfc7c790f6fe65decab4956f",
            "url": "https://api.github.com/repos/cython/cython/commits/ba1a48619da3a1b5bfc7c790f6fe65decab4956f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2/comments",
            "commit": {
                "author": {
                    "date": "2021-06-24T12:58:38Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-24T12:58:38Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: 'с' -> 'c' / chr(1089) -> chr(99)",
                "tree": {
                    "sha": "00a74747c4946051e70a8e611dbba6fd2d581ea6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/00a74747c4946051e70a8e611dbba6fd2d581ea6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjFhYTNlYmY0MmYzNjY3YTAxZWEyYmQzY2Q5MDE1NzZiMjVlYmFlYTI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ba1a48619da3a1b5bfc7c790f6fe65decab4956f",
                    "sha": "ba1a48619da3a1b5bfc7c790f6fe65decab4956f",
                    "url": "https://api.github.com/repos/cython/cython/commits/ba1a48619da3a1b5bfc7c790f6fe65decab4956f"
                }
            ],
            "sha": "1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2",
            "url": "https://api.github.com/repos/cython/cython/commits/1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a53ea79262d6e383d4246e698afebc06a96127c5/comments",
            "commit": {
                "author": {
                    "date": "2021-06-28T18:00:54Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-28T18:00:54Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into recythonize-pxd-for-py",
                "tree": {
                    "sha": "4c7c198b8760bcd56aa2b7786f96cadd478d254a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4c7c198b8760bcd56aa2b7786f96cadd478d254a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a53ea79262d6e383d4246e698afebc06a96127c5",
                "verification": {
                    "payload": "tree 4c7c198b8760bcd56aa2b7786f96cadd478d254a\nparent 1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2\nparent 304b82267eda219fb801552341fa888b17f7db33\nauthor scoder <stefan_ml@behnel.de> 1624903254 +0200\ncommitter GitHub <noreply@github.com> 1624903254 +0200\n\nMerge branch 'master' into recythonize-pxd-for-py",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg2g5WCRBK7hj4Ov3rIwAAc9YIACva5RegzCbK3aP8x10znNUu\ndKv0YupgjyPVhkTOOhtiAu1rYsFEekSTXMUI8xmldqhwsyTHkS3mN2wVh7rLlQZf\npomJuB6NK4aFjrXICiJWivnnIXKY+WdEnulywCSOsFEIemKQaRUAn0aFya+e8ATS\ndEdWDkVOeAFHgzV6+nGAdXSqWjE515+oQfNj18YQvEYMflekTpwRGN86LQputD5a\ngrbIwODT2YKDU+AfDEHUG2WFHQNOn7Z+ybCYvEMymLfMgaM7TUlHoaKzNIQiJynl\n4dQgJHgZkl5UU9rwAvwPfA17ZHFbUeWH2ILUpHX/z3hg5mSVzWwf6oA2Hlq7tzc=\n=jJjo\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/a53ea79262d6e383d4246e698afebc06a96127c5",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmE1M2VhNzkyNjJkNmUzODNkNDI0NmU2OThhZmViYzA2YTk2MTI3YzU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2",
                    "sha": "1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2",
                    "url": "https://api.github.com/repos/cython/cython/commits/1aa3ebf42f3667a01ea2bd3cd901576b25ebaea2"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/304b82267eda219fb801552341fa888b17f7db33",
                    "sha": "304b82267eda219fb801552341fa888b17f7db33",
                    "url": "https://api.github.com/repos/cython/cython/commits/304b82267eda219fb801552341fa888b17f7db33"
                }
            ],
            "sha": "a53ea79262d6e383d4246e698afebc06a96127c5",
            "url": "https://api.github.com/repos/cython/cython/commits/a53ea79262d6e383d4246e698afebc06a96127c5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6/comments",
            "commit": {
                "author": {
                    "date": "2021-06-30T14:37:02Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-30T14:37:02Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: write_to_file: wait for timestamp update",
                "tree": {
                    "sha": "1d61a41fbfba32da8d4d3b8aa5031103b9ec6aaa",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1d61a41fbfba32da8d4d3b8aa5031103b9ec6aaa"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmE0YzFkYTJhMWU5NTEyZWM3YTExMGIzMGJmZDhhMTNhNWExMzZjYTY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a53ea79262d6e383d4246e698afebc06a96127c5",
                    "sha": "a53ea79262d6e383d4246e698afebc06a96127c5",
                    "url": "https://api.github.com/repos/cython/cython/commits/a53ea79262d6e383d4246e698afebc06a96127c5"
                }
            ],
            "sha": "a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6",
            "url": "https://api.github.com/repos/cython/cython/commits/a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1239073115e1a41fe729b01c109ce04f2b8e1fee/comments",
            "commit": {
                "author": {
                    "date": "2021-06-30T14:39:22Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-30T14:39:22Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: relative_lines: remove unnecessary `except` expr",
                "tree": {
                    "sha": "31ba516987ec48c91d1bace7ef59107acea55cd3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/31ba516987ec48c91d1bace7ef59107acea55cd3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1239073115e1a41fe729b01c109ce04f2b8e1fee",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/1239073115e1a41fe729b01c109ce04f2b8e1fee",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjEyMzkwNzMxMTVlMWE0MWZlNzI5YjAxYzEwOWNlMDRmMmI4ZTFmZWU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6",
                    "sha": "a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6",
                    "url": "https://api.github.com/repos/cython/cython/commits/a4c1da2a1e9512ec7a110b30bfd8a13a5a136ca6"
                }
            ],
            "sha": "1239073115e1a41fe729b01c109ce04f2b8e1fee",
            "url": "https://api.github.com/repos/cython/cython/commits/1239073115e1a41fe729b01c109ce04f2b8e1fee"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8b622df536a5fe1c40e632500c2b4ac61ce974a5/comments",
            "commit": {
                "author": {
                    "date": "2021-06-30T14:53:29Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-30T14:53:29Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: relative_lines_from_file always joins lines",
                "tree": {
                    "sha": "16412fd18540410bbe5710f99782b1940b227d81",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/16412fd18540410bbe5710f99782b1940b227d81"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8b622df536a5fe1c40e632500c2b4ac61ce974a5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/8b622df536a5fe1c40e632500c2b4ac61ce974a5",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjhiNjIyZGY1MzZhNWZlMWM0MGU2MzI1MDBjMmI0YWM2MWNlOTc0YTU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1239073115e1a41fe729b01c109ce04f2b8e1fee",
                    "sha": "1239073115e1a41fe729b01c109ce04f2b8e1fee",
                    "url": "https://api.github.com/repos/cython/cython/commits/1239073115e1a41fe729b01c109ce04f2b8e1fee"
                }
            ],
            "sha": "8b622df536a5fe1c40e632500c2b4ac61ce974a5",
            "url": "https://api.github.com/repos/cython/cython/commits/8b622df536a5fe1c40e632500c2b4ac61ce974a5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d9109485be7c1ddc2200eecb3b764a9803516b5f/comments",
            "commit": {
                "author": {
                    "date": "2021-06-30T15:17:25Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-30T15:17:25Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: make write_to_file work with python 2.7",
                "tree": {
                    "sha": "a4bbade9bfe82251350da79ca1e0a43fe30c9bef",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a4bbade9bfe82251350da79ca1e0a43fe30c9bef"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d9109485be7c1ddc2200eecb3b764a9803516b5f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/d9109485be7c1ddc2200eecb3b764a9803516b5f",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmQ5MTA5NDg1YmU3YzFkZGMyMjAwZWVjYjNiNzY0YTk4MDM1MTZiNWY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8b622df536a5fe1c40e632500c2b4ac61ce974a5",
                    "sha": "8b622df536a5fe1c40e632500c2b4ac61ce974a5",
                    "url": "https://api.github.com/repos/cython/cython/commits/8b622df536a5fe1c40e632500c2b4ac61ce974a5"
                }
            ],
            "sha": "d9109485be7c1ddc2200eecb3b764a9803516b5f",
            "url": "https://api.github.com/repos/cython/cython/commits/d9109485be7c1ddc2200eecb3b764a9803516b5f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/75cbe31826c61e25d7a0bab57eb9d41853b49b9d/comments",
            "commit": {
                "author": {
                    "date": "2021-06-30T19:36:05Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-30T19:36:05Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: write_to_file use nice var name, not of temp one",
                "tree": {
                    "sha": "1ede072c9bcfd90d5cb71ae8292550672833958f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1ede072c9bcfd90d5cb71ae8292550672833958f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjc1Y2JlMzE4MjZjNjFlMjVkN2EwYmFiNTdlYjlkNDE4NTNiNDliOWQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d9109485be7c1ddc2200eecb3b764a9803516b5f",
                    "sha": "d9109485be7c1ddc2200eecb3b764a9803516b5f",
                    "url": "https://api.github.com/repos/cython/cython/commits/d9109485be7c1ddc2200eecb3b764a9803516b5f"
                }
            ],
            "sha": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
            "url": "https://api.github.com/repos/cython/cython/commits/75cbe31826c61e25d7a0bab57eb9d41853b49b9d"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/40016d96ab7f2d4354037e523ce3e60896c0b795/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T20:03:57Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T20:03:57Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "TestRecythonize.py: make the code more readable?\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "a9ff97bfbe99ef26e47c3b96fc058619303e155f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a9ff97bfbe99ef26e47c3b96fc058619303e155f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/40016d96ab7f2d4354037e523ce3e60896c0b795",
                "verification": {
                    "payload": "tree a9ff97bfbe99ef26e47c3b96fc058619303e155f\nparent 75cbe31826c61e25d7a0bab57eb9d41853b49b9d\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625256237 +0300\ncommitter GitHub <noreply@github.com> 1625256237 +0300\n\nTestRecythonize.py: make the code more readable?\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg33EtCRBK7hj4Ov3rIwAAKRgIAAKbDxXQG9frH4ROYu/h+zic\npaQiP9jI4+t8ZLwyewnyAXN3etx2Cnu494Ee97SjJzN5Ovbv/IyWSypn66sDg3dX\nF7OSIe7flQ8PzFQhbWrVn+c4GFClBizEcpYQxjm+n6F5JmeK1Z7+yCD3Zj8p9+AH\nPRscpaW+dXKD86tHZlNywGXOjJRDTvV+uSl7XDZDVJ9Us6JZUVufTEcwW9OJtkd9\nEAscuQq4CevpsMcuGDhBq5/IS9KIXSjO07x4KvIogfp19/dAC5lDDwFTekt4Hg6j\nvqTZGs8UOhdN2b6zXErvsye7ogy4PAzD69C6Q7h3r6Uxu+1VUad5L9CrmYlTKeo=\n=wQLL\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/40016d96ab7f2d4354037e523ce3e60896c0b795",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjQwMDE2ZDk2YWI3ZjJkNDM1NDAzN2U1MjNjZTNlNjA4OTZjMGI3OTU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
                    "sha": "75cbe31826c61e25d7a0bab57eb9d41853b49b9d",
                    "url": "https://api.github.com/repos/cython/cython/commits/75cbe31826c61e25d7a0bab57eb9d41853b49b9d"
                }
            ],
            "sha": "40016d96ab7f2d4354037e523ce3e60896c0b795",
            "url": "https://api.github.com/repos/cython/cython/commits/40016d96ab7f2d4354037e523ce3e60896c0b795"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T20:34:07Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T20:34:07Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: include relative_lines in relative_lines_from_file",
                "tree": {
                    "sha": "3471fe02cf7bb26d9fdc3a0132e235d1d490901e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3471fe02cf7bb26d9fdc3a0132e235d1d490901e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmI2ZTc5NWVmM2VhNTBhNWQ3OTdjNWFmMmM3MTIwZGY1ZDdiMmVlYmM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/40016d96ab7f2d4354037e523ce3e60896c0b795",
                    "sha": "40016d96ab7f2d4354037e523ce3e60896c0b795",
                    "url": "https://api.github.com/repos/cython/cython/commits/40016d96ab7f2d4354037e523ce3e60896c0b795"
                }
            ],
            "sha": "b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc",
            "url": "https://api.github.com/repos/cython/cython/commits/b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4974fa843a599eff29b02585415923fa78b76313/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T21:02:05Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T21:02:05Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Utils.py: remove unnecessary comment",
                "tree": {
                    "sha": "f363bd82fec240a82dce6cbb9cf543df6053c3e5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f363bd82fec240a82dce6cbb9cf543df6053c3e5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4974fa843a599eff29b02585415923fa78b76313",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/4974fa843a599eff29b02585415923fa78b76313",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjQ5NzRmYTg0M2E1OTllZmYyOWIwMjU4NTQxNTkyM2ZhNzhiNzYzMTM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc",
                    "sha": "b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc",
                    "url": "https://api.github.com/repos/cython/cython/commits/b6e795ef3ea50a5d797c5af2c7120df5d7b2eebc"
                }
            ],
            "sha": "4974fa843a599eff29b02585415923fa78b76313",
            "url": "https://api.github.com/repos/cython/cython/commits/4974fa843a599eff29b02585415923fa78b76313"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/268041c0f93a613c187ecff6d09700013d94d016/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T23:18:04Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T23:18:04Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "format CHANGES.rst\n\n`(Github issue #x) -> (Github issue :issue:`x`)` for every except PR-s\nfor them rule is `(Github issue #x) -> (Github pull request :pr:`x`)`\n\nmet PRs: 3790, 3611, 4224, 4211, 4154, 4081, 3906, 4128, 3767, 3811, 3976, 4151, 3692, 3708, 3660, 3639, 3637, 3606, 3348, 3433,",
                "tree": {
                    "sha": "05b49cd5c056422af919292060c2a000ec8fc0b1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/05b49cd5c056422af919292060c2a000ec8fc0b1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/268041c0f93a613c187ecff6d09700013d94d016",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/268041c0f93a613c187ecff6d09700013d94d016",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjI2ODA0MWMwZjkzYTYxM2MxODdlY2ZmNmQwOTcwMDAxM2Q5NGQwMTY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4974fa843a599eff29b02585415923fa78b76313",
                    "sha": "4974fa843a599eff29b02585415923fa78b76313",
                    "url": "https://api.github.com/repos/cython/cython/commits/4974fa843a599eff29b02585415923fa78b76313"
                }
            ],
            "sha": "268041c0f93a613c187ecff6d09700013d94d016",
            "url": "https://api.github.com/repos/cython/cython/commits/268041c0f93a613c187ecff6d09700013d94d016"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7e39f502a4c0b21675fd0ebe2ba1d3dfe5bb292a/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T23:20:41Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T23:20:41Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "CHANGES.rst: add an item about the #1428",
                "tree": {
                    "sha": "a3e2b5144110ff6057bde4743002ed9bdf04a8b7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a3e2b5144110ff6057bde4743002ed9bdf04a8b7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7e39f502a4c0b21675fd0ebe2ba1d3dfe5bb292a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/7e39f502a4c0b21675fd0ebe2ba1d3dfe5bb292a",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjdlMzlmNTAyYTRjMGIyMTY3NWZkMGViZTJiYTFkM2RmZTViYjI5MmE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/268041c0f93a613c187ecff6d09700013d94d016",
                    "sha": "268041c0f93a613c187ecff6d09700013d94d016",
                    "url": "https://api.github.com/repos/cython/cython/commits/268041c0f93a613c187ecff6d09700013d94d016"
                }
            ],
            "sha": "7e39f502a4c0b21675fd0ebe2ba1d3dfe5bb292a",
            "url": "https://api.github.com/repos/cython/cython/commits/7e39f502a4c0b21675fd0ebe2ba1d3dfe5bb292a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cdec3726ec8632c2a68823d1465e71c73ea79430/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T23:34:07Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T23:34:07Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize: split write_to_file to update timestamp if needed",
                "tree": {
                    "sha": "9ed449f5de46d28a7f832e6816cc4d8334870d99",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9ed449f5de46d28a7f832e6816cc4d8334870d99"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cdec3726ec8632c2a68823d1465e71c73ea79430",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/cdec3726ec8632c2a68823d1465e71c73ea79430",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmNkZWMzNzI2ZWM4NjMyYzJhNjg4MjNkMTQ2NWU3MWM3M2VhNzk0MzA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7e39f502a4c0b21675fd0ebe2ba1d3dfe5bb292a",
                    "sha": "7e39f502a4c0b21675fd0ebe2ba1d3dfe5bb292a",
                    "url": "https://api.github.com/repos/cython/cython/commits/7e39f502a4c0b21675fd0ebe2ba1d3dfe5bb292a"
                }
            ],
            "sha": "cdec3726ec8632c2a68823d1465e71c73ea79430",
            "url": "https://api.github.com/repos/cython/cython/commits/cdec3726ec8632c2a68823d1465e71c73ea79430"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/37e3fed41ab9f4120462b38e0e893225e4a5b9b3/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T23:35:01Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T23:35:01Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: localization of the problem",
                "tree": {
                    "sha": "0378683b9874fdfac07cf085e9943939c27d6828",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0378683b9874fdfac07cf085e9943939c27d6828"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/37e3fed41ab9f4120462b38e0e893225e4a5b9b3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/37e3fed41ab9f4120462b38e0e893225e4a5b9b3",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjM3ZTNmZWQ0MWFiOWY0MTIwNDYyYjM4ZTBlODkzMjI1ZTRhNWI5YjM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cdec3726ec8632c2a68823d1465e71c73ea79430",
                    "sha": "cdec3726ec8632c2a68823d1465e71c73ea79430",
                    "url": "https://api.github.com/repos/cython/cython/commits/cdec3726ec8632c2a68823d1465e71c73ea79430"
                }
            ],
            "sha": "37e3fed41ab9f4120462b38e0e893225e4a5b9b3",
            "url": "https://api.github.com/repos/cython/cython/commits/37e3fed41ab9f4120462b38e0e893225e4a5b9b3"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/be49a2465c72134a1cb5f8132d280993edb8f0ee/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T23:37:57Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T23:37:57Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Pipeline.py: format create_pyx_pipeline",
                "tree": {
                    "sha": "360b3fe32b47c23cf5fe662973fd8aca05815377",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/360b3fe32b47c23cf5fe662973fd8aca05815377"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/be49a2465c72134a1cb5f8132d280993edb8f0ee",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/be49a2465c72134a1cb5f8132d280993edb8f0ee",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmJlNDlhMjQ2NWM3MjEzNGExY2I1ZjgxMzJkMjgwOTkzZWRiOGYwZWU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/37e3fed41ab9f4120462b38e0e893225e4a5b9b3",
                    "sha": "37e3fed41ab9f4120462b38e0e893225e4a5b9b3",
                    "url": "https://api.github.com/repos/cython/cython/commits/37e3fed41ab9f4120462b38e0e893225e4a5b9b3"
                }
            ],
            "sha": "be49a2465c72134a1cb5f8132d280993edb8f0ee",
            "url": "https://api.github.com/repos/cython/cython/commits/be49a2465c72134a1cb5f8132d280993edb8f0ee"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/488afd2bd79ea0d2aea51b58bfc7539604440e6f/comments",
            "commit": {
                "author": {
                    "date": "2021-07-02T23:52:55Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-02T23:52:55Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into recythonize-pxd-for-py",
                "tree": {
                    "sha": "f4d9e96cbb116fbccd4fab033c1a2418e34db4c7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f4d9e96cbb116fbccd4fab033c1a2418e34db4c7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/488afd2bd79ea0d2aea51b58bfc7539604440e6f",
                "verification": {
                    "payload": "tree f4d9e96cbb116fbccd4fab033c1a2418e34db4c7\nparent be49a2465c72134a1cb5f8132d280993edb8f0ee\nparent c81b2d13a625cac6b399c0f8468027cb9f8d6ab6\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625269975 +0300\ncommitter GitHub <noreply@github.com> 1625269975 +0300\n\nMerge branch 'master' into recythonize-pxd-for-py",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg36bXCRBK7hj4Ov3rIwAAT4AIAGOdQhySniS7oTLrIxkgjUej\nbXmjOWoCNdrBfVBlFDtr+tKlZoZ+67FegC8Q7PRaLITWA6ifSTT8HaAinOdhJAlH\nFV4atjp4wRYMduolIZYb8Si3wOVonrkpVeHf0g4T3rNHqFDi1sXvEaIhneZUvWb4\nCr/KtOPCHQ+xqQAmDhVxRuwIES69X/Mj7ZfiMOCPKNKQsZpcWTVPNZWaJyVykkpt\ntFgaybz3RIk+t7gdBapuWiaioqJvGhw33lj1qeFIdOmDlsss2wZYliOTuXDVYxSP\n3VWY4RQRQtdtUiiyV9BQqbaB2k7om/Mvk9O3w38zQ9CNY/tKF3Sp0GQdv33RMv0=\n=SxHA\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/488afd2bd79ea0d2aea51b58bfc7539604440e6f",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjQ4OGFmZDJiZDc5ZWEwZDJhZWE1MWI1OGJmYzc1Mzk2MDQ0NDBlNmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/be49a2465c72134a1cb5f8132d280993edb8f0ee",
                    "sha": "be49a2465c72134a1cb5f8132d280993edb8f0ee",
                    "url": "https://api.github.com/repos/cython/cython/commits/be49a2465c72134a1cb5f8132d280993edb8f0ee"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/c81b2d13a625cac6b399c0f8468027cb9f8d6ab6",
                    "sha": "c81b2d13a625cac6b399c0f8468027cb9f8d6ab6",
                    "url": "https://api.github.com/repos/cython/cython/commits/c81b2d13a625cac6b399c0f8468027cb9f8d6ab6"
                }
            ],
            "sha": "488afd2bd79ea0d2aea51b58bfc7539604440e6f",
            "url": "https://api.github.com/repos/cython/cython/commits/488afd2bd79ea0d2aea51b58bfc7539604440e6f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/90cac60c97089520a5ab16682225334b65eb8229/comments",
            "commit": {
                "author": {
                    "date": "2021-07-03T00:00:26Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-03T00:00:26Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize.py: localization of the problem",
                "tree": {
                    "sha": "236641e7c73783bb0e141cb50358c4a65988aec8",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/236641e7c73783bb0e141cb50358c4a65988aec8"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/90cac60c97089520a5ab16682225334b65eb8229",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/90cac60c97089520a5ab16682225334b65eb8229",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjkwY2FjNjBjOTcwODk1MjBhNWFiMTY2ODIyMjUzMzRiNjVlYjgyMjk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/488afd2bd79ea0d2aea51b58bfc7539604440e6f",
                    "sha": "488afd2bd79ea0d2aea51b58bfc7539604440e6f",
                    "url": "https://api.github.com/repos/cython/cython/commits/488afd2bd79ea0d2aea51b58bfc7539604440e6f"
                }
            ],
            "sha": "90cac60c97089520a5ab16682225334b65eb8229",
            "url": "https://api.github.com/repos/cython/cython/commits/90cac60c97089520a5ab16682225334b65eb8229"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc/comments",
            "commit": {
                "author": {
                    "date": "2021-07-03T06:56:43Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-03T06:56:43Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "TestRecythonize.py: add a link to the issue instead of an id\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "2ba01b9251d3ed3449d52e590b728b891a86d209",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2ba01b9251d3ed3449d52e590b728b891a86d209"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc",
                "verification": {
                    "payload": "tree 2ba01b9251d3ed3449d52e590b728b891a86d209\nparent 90cac60c97089520a5ab16682225334b65eb8229\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625295403 +0300\ncommitter GitHub <noreply@github.com> 1625295403 +0300\n\nTestRecythonize.py: add a link to the issue instead of an id\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4AorCRBK7hj4Ov3rIwAAs6cIAEgeyyT4lirQ8cxH+Mk9itLW\nf4MhzUo5jfwYtGady80mqBoTjxXKCUVRvz+APXSefZK8CRgN0xdkA4EzXwsp7a1A\ndE0HUaghc6Rxm5naB6PKCZDXxp7f6D4FH6zJsAtBM6viKRg0+bZmXo052iQqb8qR\nlW9DITIG15xtG8yhPwwUyak4qUhUcBeJxi5GD4fCr94jTWkuUjEMCX3TOoRHO6ss\ni7l1XR3CaraN/1H0dNFApgydPzN+qG0eWc2Nk4DqRj6Ir4aa5f/NK6KQ+Vpt4Kdi\nSt8vKYput0z7vNNFM/m7VHrghWPhGzkvMl9Ahq3gnet0AnOT+1nGewFhdhTs9Lk=\n=1kSG\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmE2ZDNkMGE4NGE0N2Q3Zjg0ZmEzOTQ3ZGNjOGE1NmQ5ZTc5ZGQwZGM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/90cac60c97089520a5ab16682225334b65eb8229",
                    "sha": "90cac60c97089520a5ab16682225334b65eb8229",
                    "url": "https://api.github.com/repos/cython/cython/commits/90cac60c97089520a5ab16682225334b65eb8229"
                }
            ],
            "sha": "a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc",
            "url": "https://api.github.com/repos/cython/cython/commits/a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/99bb30a604daf58f9a2e2a32110bcb9d16f7b58c/comments",
            "commit": {
                "author": {
                    "date": "2021-07-03T12:18:11Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-03T12:18:11Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Reinstate (and simplify) accidentally removed comment.",
                "tree": {
                    "sha": "59b2e7367adbacfb301400baa170d44ca83df3ab",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/59b2e7367adbacfb301400baa170d44ca83df3ab"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/99bb30a604daf58f9a2e2a32110bcb9d16f7b58c",
                "verification": {
                    "payload": "tree 59b2e7367adbacfb301400baa170d44ca83df3ab\nparent a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc\nauthor scoder <stefan_ml@behnel.de> 1625314691 +0200\ncommitter GitHub <noreply@github.com> 1625314691 +0200\n\nReinstate (and simplify) accidentally removed comment.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4FWDCRBK7hj4Ov3rIwAAj1EIAJeRuxSRLwPi60lac4W/lSrj\nx4qjZ8kb5v6rcDzTrEeielJ/l09foCH1UJQGfaJeiqz1GCjLJpCWa6HB4IohqF3E\nifQFwyWpX2TjODb4UkGwBNnbNUGSeLJxxpEvBSS5tIvpr0iPfh/yCqDqCkMzcSl7\nJgocAQgrsJuNsjIBj2zA5g9sEH6MiHX5Py8qeWPudqrQ21Xuouc4pqNHnIn7QuPc\nKuzw+AU0JZKqXmokQvPKLwZhBFtMTWtR8Bv1xSxDIwhBVIwXn1cleXT8V8IMQ87b\ngiZGHC8Wrbt4H6ZoLFfUnVsqzYT5KDRJ9vo9t5EGQxhvRcD+fihMWDUKA8cEnv4=\n=DN2Q\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/99bb30a604daf58f9a2e2a32110bcb9d16f7b58c",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjk5YmIzMGE2MDRkYWY1OGY5YTJlMmEzMjExMGJjYjlkMTZmN2I1OGM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc",
                    "sha": "a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc",
                    "url": "https://api.github.com/repos/cython/cython/commits/a6d3d0a84a47d7f84fa3947dcc8a56d9e79dd0dc"
                }
            ],
            "sha": "99bb30a604daf58f9a2e2a32110bcb9d16f7b58c",
            "url": "https://api.github.com/repos/cython/cython/commits/99bb30a604daf58f9a2e2a32110bcb9d16f7b58c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f46c809b7a5b0594d3d5bd6ba4366623cece8317/comments",
            "commit": {
                "author": {
                    "date": "2021-07-03T23:02:43Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-03T23:02:43Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'cython:master' into recythonize-pxd-for-py",
                "tree": {
                    "sha": "b0c5a791bd9cb909b1ee4a91fb80896b4a202c28",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b0c5a791bd9cb909b1ee4a91fb80896b4a202c28"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f46c809b7a5b0594d3d5bd6ba4366623cece8317",
                "verification": {
                    "payload": "tree b0c5a791bd9cb909b1ee4a91fb80896b4a202c28\nparent 99bb30a604daf58f9a2e2a32110bcb9d16f7b58c\nparent 559ef7494ffb386a308f74b707560edbabe3f15d\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625353363 +0300\ncommitter GitHub <noreply@github.com> 1625353363 +0300\n\nMerge branch 'cython:master' into recythonize-pxd-for-py\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4OyTCRBK7hj4Ov3rIwAAV0UIAK7tx5WW1BIpVaTAAdKfp7Iu\n7UaoP93TGwBK+Ppigk5gyb7Xf2oerZLSIN5H7Sxnu0FdFU1zWb2R9dXjrq8mnNl6\nEyq3+pAehQmdGSC2cKUQcF3zrqCeKigqdf/DQLoZyB1+G50OGnIN3UqNQAZ4q62M\nWlz3+0/Y3euRs4AjE0x8R2Ik4JDYPaROel7cHhaqGH0Z0Fok2Wx8jyQrEe4Pvf4x\n8kzyuUnSKIfmK83BtoGNSYWTnWQ0QCIvnD7hchEtFvRaMkstfOwIOFy6BU8Nv3Kl\naLctD3a29SJ2UdUXsFX3BxD6kV6dQkGNtNlxLjxg6FqUziw8bw68hL/VD9cxLd0=\n=WWEf\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/f46c809b7a5b0594d3d5bd6ba4366623cece8317",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmY0NmM4MDliN2E1YjA1OTRkM2Q1YmQ2YmE0MzY2NjIzY2VjZTgzMTc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/99bb30a604daf58f9a2e2a32110bcb9d16f7b58c",
                    "sha": "99bb30a604daf58f9a2e2a32110bcb9d16f7b58c",
                    "url": "https://api.github.com/repos/cython/cython/commits/99bb30a604daf58f9a2e2a32110bcb9d16f7b58c"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/559ef7494ffb386a308f74b707560edbabe3f15d",
                    "sha": "559ef7494ffb386a308f74b707560edbabe3f15d",
                    "url": "https://api.github.com/repos/cython/cython/commits/559ef7494ffb386a308f74b707560edbabe3f15d"
                }
            ],
            "sha": "f46c809b7a5b0594d3d5bd6ba4366623cece8317",
            "url": "https://api.github.com/repos/cython/cython/commits/f46c809b7a5b0594d3d5bd6ba4366623cece8317"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c6dd30d85b62702ee39d087ab9a2ea570866af05/comments",
            "commit": {
                "author": {
                    "date": "2021-07-03T23:15:38Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-03T23:15:38Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Revert changes in CHANGES.rst",
                "tree": {
                    "sha": "aef98aaceba2e20e7cd1eabb53e679ce4d927c81",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/aef98aaceba2e20e7cd1eabb53e679ce4d927c81"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c6dd30d85b62702ee39d087ab9a2ea570866af05",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/c6dd30d85b62702ee39d087ab9a2ea570866af05",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmM2ZGQzMGQ4NWI2MjcwMmVlMzlkMDg3YWI5YTJlYTU3MDg2NmFmMDU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f46c809b7a5b0594d3d5bd6ba4366623cece8317",
                    "sha": "f46c809b7a5b0594d3d5bd6ba4366623cece8317",
                    "url": "https://api.github.com/repos/cython/cython/commits/f46c809b7a5b0594d3d5bd6ba4366623cece8317"
                }
            ],
            "sha": "c6dd30d85b62702ee39d087ab9a2ea570866af05",
            "url": "https://api.github.com/repos/cython/cython/commits/c6dd30d85b62702ee39d087ab9a2ea570866af05"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/59323db18ef8aeef7ecff2ef969cf412b853f960/comments",
            "commit": {
                "author": {
                    "date": "2021-07-03T23:40:16Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-03T23:40:16Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: format, sort and add imports",
                "tree": {
                    "sha": "6295e38d17a06ca53549ca4faedebf154b651545",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6295e38d17a06ca53549ca4faedebf154b651545"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/59323db18ef8aeef7ecff2ef969cf412b853f960",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/59323db18ef8aeef7ecff2ef969cf412b853f960",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjU5MzIzZGIxOGVmOGFlZWY3ZWNmZjJlZjk2OWNmNDEyYjg1M2Y5NjA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c6dd30d85b62702ee39d087ab9a2ea570866af05",
                    "sha": "c6dd30d85b62702ee39d087ab9a2ea570866af05",
                    "url": "https://api.github.com/repos/cython/cython/commits/c6dd30d85b62702ee39d087ab9a2ea570866af05"
                }
            ],
            "sha": "59323db18ef8aeef7ecff2ef969cf412b853f960",
            "url": "https://api.github.com/repos/cython/cython/commits/59323db18ef8aeef7ecff2ef969cf412b853f960"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4e3f3c226271c024ddb3332dbdc279eb200d1d85/comments",
            "commit": {
                "author": {
                    "date": "2021-07-03T23:41:08Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-03T23:41:08Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: add fresh_cythonize, clear_function_and_Dependencies_caches",
                "tree": {
                    "sha": "c97ad6e20af68093d1fb8faf48ab6daf7c6419e1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c97ad6e20af68093d1fb8faf48ab6daf7c6419e1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4e3f3c226271c024ddb3332dbdc279eb200d1d85",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/4e3f3c226271c024ddb3332dbdc279eb200d1d85",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjRlM2YzYzIyNjI3MWMwMjRkZGIzMzMyZGJkYzI3OWViMjAwZDFkODU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/59323db18ef8aeef7ecff2ef969cf412b853f960",
                    "sha": "59323db18ef8aeef7ecff2ef969cf412b853f960",
                    "url": "https://api.github.com/repos/cython/cython/commits/59323db18ef8aeef7ecff2ef969cf412b853f960"
                }
            ],
            "sha": "4e3f3c226271c024ddb3332dbdc279eb200d1d85",
            "url": "https://api.github.com/repos/cython/cython/commits/4e3f3c226271c024ddb3332dbdc279eb200d1d85"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3e2538d6e27b28c7020f2d673e2c4a719fe2bcc8/comments",
            "commit": {
                "author": {
                    "date": "2021-07-03T23:58:34Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-03T23:58:34Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: add docsting for fresh_cythonize",
                "tree": {
                    "sha": "5c4993beefb5af0660e5f8906cc7361c44a31a6a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5c4993beefb5af0660e5f8906cc7361c44a31a6a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3e2538d6e27b28c7020f2d673e2c4a719fe2bcc8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/3e2538d6e27b28c7020f2d673e2c4a719fe2bcc8",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjNlMjUzOGQ2ZTI3YjI4YzcwMjBmMmQ2NzNlMmM0YTcxOWZlMmJjYzg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4e3f3c226271c024ddb3332dbdc279eb200d1d85",
                    "sha": "4e3f3c226271c024ddb3332dbdc279eb200d1d85",
                    "url": "https://api.github.com/repos/cython/cython/commits/4e3f3c226271c024ddb3332dbdc279eb200d1d85"
                }
            ],
            "sha": "3e2538d6e27b28c7020f2d673e2c4a719fe2bcc8",
            "url": "https://api.github.com/repos/cython/cython/commits/3e2538d6e27b28c7020f2d673e2c4a719fe2bcc8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bbcf2dab4482f991adbf7625b91babac561c9c7a/comments",
            "commit": {
                "author": {
                    "date": "2021-07-04T00:06:57Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-04T00:06:57Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize: use new functionality from TestUtils",
                "tree": {
                    "sha": "f1a6424dedeacad2a9aed9d7351fc78fa849a574",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f1a6424dedeacad2a9aed9d7351fc78fa849a574"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bbcf2dab4482f991adbf7625b91babac561c9c7a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/bbcf2dab4482f991adbf7625b91babac561c9c7a",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmJiY2YyZGFiNDQ4MmY5OTFhZGJmNzYyNWI5MWJhYmFjNTYxYzljN2E=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3e2538d6e27b28c7020f2d673e2c4a719fe2bcc8",
                    "sha": "3e2538d6e27b28c7020f2d673e2c4a719fe2bcc8",
                    "url": "https://api.github.com/repos/cython/cython/commits/3e2538d6e27b28c7020f2d673e2c4a719fe2bcc8"
                }
            ],
            "sha": "bbcf2dab4482f991adbf7625b91babac561c9c7a",
            "url": "https://api.github.com/repos/cython/cython/commits/bbcf2dab4482f991adbf7625b91babac561c9c7a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5162fa2dab618f600eaed82690d839ce67f7a30c/comments",
            "commit": {
                "author": {
                    "date": "2021-07-04T03:52:45Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-04T03:52:45Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCyCache: use new functionality from TestUtils",
                "tree": {
                    "sha": "cbef84803e307a4b64efcf590c361bb693ac8fd3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cbef84803e307a4b64efcf590c361bb693ac8fd3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5162fa2dab618f600eaed82690d839ce67f7a30c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/5162fa2dab618f600eaed82690d839ce67f7a30c",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjUxNjJmYTJkYWI2MThmNjAwZWFlZDgyNjkwZDgzOWNlNjdmN2EzMGM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bbcf2dab4482f991adbf7625b91babac561c9c7a",
                    "sha": "bbcf2dab4482f991adbf7625b91babac561c9c7a",
                    "url": "https://api.github.com/repos/cython/cython/commits/bbcf2dab4482f991adbf7625b91babac561c9c7a"
                }
            ],
            "sha": "5162fa2dab618f600eaed82690d839ce67f7a30c",
            "url": "https://api.github.com/repos/cython/cython/commits/5162fa2dab618f600eaed82690d839ce67f7a30c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fecac80db32dd82c9ee7fa2903d33cd5fcd675fd/comments",
            "commit": {
                "author": {
                    "date": "2021-07-04T04:29:42Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-04T04:29:42Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Update TestUtils.py",
                "tree": {
                    "sha": "95110db3b4c019fd86e066daf3f8cea5fd3336e3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/95110db3b4c019fd86e066daf3f8cea5fd3336e3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fecac80db32dd82c9ee7fa2903d33cd5fcd675fd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/fecac80db32dd82c9ee7fa2903d33cd5fcd675fd",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmZlY2FjODBkYjMyZGQ4MmM5ZWU3ZmEyOTAzZDMzY2Q1ZmNkNjc1ZmQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5162fa2dab618f600eaed82690d839ce67f7a30c",
                    "sha": "5162fa2dab618f600eaed82690d839ce67f7a30c",
                    "url": "https://api.github.com/repos/cython/cython/commits/5162fa2dab618f600eaed82690d839ce67f7a30c"
                }
            ],
            "sha": "fecac80db32dd82c9ee7fa2903d33cd5fcd675fd",
            "url": "https://api.github.com/repos/cython/cython/commits/fecac80db32dd82c9ee7fa2903d33cd5fcd675fd"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5/comments",
            "commit": {
                "author": {
                    "date": "2021-07-04T04:33:54Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-04T04:33:54Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize: return language_level back",
                "tree": {
                    "sha": "8aed4f474949fa316630860e7eaf83d4d338d930",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8aed4f474949fa316630860e7eaf83d4d338d930"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjIxNDM4ZDE5OGYyZjllMmZkNDdhM2QyZThmNWIyMjAwY2NhYjI3ZjU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fecac80db32dd82c9ee7fa2903d33cd5fcd675fd",
                    "sha": "fecac80db32dd82c9ee7fa2903d33cd5fcd675fd",
                    "url": "https://api.github.com/repos/cython/cython/commits/fecac80db32dd82c9ee7fa2903d33cd5fcd675fd"
                }
            ],
            "sha": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
            "url": "https://api.github.com/repos/cython/cython/commits/21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/07c56aa7c5101fc677d82edeed86c083993d12d8/comments",
            "commit": {
                "author": {
                    "date": "2021-07-04T20:48:14Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-04T20:48:14Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize: use the .c file for the newer_than in write_newer_file",
                "tree": {
                    "sha": "c4bece432427c2d6ff58b43558e8b62fa018b649",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c4bece432427c2d6ff58b43558e8b62fa018b649"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/07c56aa7c5101fc677d82edeed86c083993d12d8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/07c56aa7c5101fc677d82edeed86c083993d12d8",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjA3YzU2YWE3YzUxMDFmYzY3N2Q4MmVkZWVkODZjMDgzOTkzZDEyZDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
                    "sha": "21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5",
                    "url": "https://api.github.com/repos/cython/cython/commits/21438d198f2f9e2fd47a3d2e8f5b2200ccab27f5"
                }
            ],
            "sha": "07c56aa7c5101fc677d82edeed86c083993d12d8",
            "url": "https://api.github.com/repos/cython/cython/commits/07c56aa7c5101fc677d82edeed86c083993d12d8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3d47ae95ed5c86f77052c69c23a62e63dc932d7a/comments",
            "commit": {
                "author": {
                    "date": "2021-07-04T23:24:05Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-04T23:24:05Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestStringIOTree, TestTestUtils: assert -> self.assertX, 'utf8'-> 'utf-8'",
                "tree": {
                    "sha": "0ffe5b9da6d0e941e57d97e68bbcace1a4ca9185",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0ffe5b9da6d0e941e57d97e68bbcace1a4ca9185"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3d47ae95ed5c86f77052c69c23a62e63dc932d7a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/3d47ae95ed5c86f77052c69c23a62e63dc932d7a",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjNkNDdhZTk1ZWQ1Yzg2Zjc3MDUyYzY5YzIzYTYyZTYzZGM5MzJkN2E=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/07c56aa7c5101fc677d82edeed86c083993d12d8",
                    "sha": "07c56aa7c5101fc677d82edeed86c083993d12d8",
                    "url": "https://api.github.com/repos/cython/cython/commits/07c56aa7c5101fc677d82edeed86c083993d12d8"
                }
            ],
            "sha": "3d47ae95ed5c86f77052c69c23a62e63dc932d7a",
            "url": "https://api.github.com/repos/cython/cython/commits/3d47ae95ed5c86f77052c69c23a62e63dc932d7a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7f7cda56d79cd6d72e0cfd89492c106da686cb05/comments",
            "commit": {
                "author": {
                    "date": "2021-07-05T00:16:45Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-05T00:16:45Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: revert back formatting",
                "tree": {
                    "sha": "d6b4f1c78599bb1b73cd2cafa097fe758cdfc600",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d6b4f1c78599bb1b73cd2cafa097fe758cdfc600"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7f7cda56d79cd6d72e0cfd89492c106da686cb05",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/7f7cda56d79cd6d72e0cfd89492c106da686cb05",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjdmN2NkYTU2ZDc5Y2Q2ZDcyZTBjZmQ4OTQ5MmMxMDZkYTY4NmNiMDU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3d47ae95ed5c86f77052c69c23a62e63dc932d7a",
                    "sha": "3d47ae95ed5c86f77052c69c23a62e63dc932d7a",
                    "url": "https://api.github.com/repos/cython/cython/commits/3d47ae95ed5c86f77052c69c23a62e63dc932d7a"
                }
            ],
            "sha": "7f7cda56d79cd6d72e0cfd89492c106da686cb05",
            "url": "https://api.github.com/repos/cython/cython/commits/7f7cda56d79cd6d72e0cfd89492c106da686cb05"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a40ccd78724b4d76b9c1f5dc443c23c4f79ab8e6/comments",
            "commit": {
                "author": {
                    "date": "2021-07-05T00:19:04Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-05T00:19:04Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: use utf-8 in write_file and os.utime in write_newer_file",
                "tree": {
                    "sha": "eb91134ffe4d3225367214353891756761cab689",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/eb91134ffe4d3225367214353891756761cab689"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a40ccd78724b4d76b9c1f5dc443c23c4f79ab8e6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/a40ccd78724b4d76b9c1f5dc443c23c4f79ab8e6",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmE0MGNjZDc4NzI0YjRkNzZiOWMxZjVkYzQ0M2MyM2M0Zjc5YWI4ZTY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7f7cda56d79cd6d72e0cfd89492c106da686cb05",
                    "sha": "7f7cda56d79cd6d72e0cfd89492c106da686cb05",
                    "url": "https://api.github.com/repos/cython/cython/commits/7f7cda56d79cd6d72e0cfd89492c106da686cb05"
                }
            ],
            "sha": "a40ccd78724b4d76b9c1f5dc443c23c4f79ab8e6",
            "url": "https://api.github.com/repos/cython/cython/commits/a40ccd78724b4d76b9c1f5dc443c23c4f79ab8e6"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/365bc99d260d0edd546566eecedaa90b316bdbc0/comments",
            "commit": {
                "author": {
                    "date": "2021-07-05T00:22:54Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-05T00:22:54Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Revert \"Revert changes in CHANGES.rst\" but pr -> issue\n\nThis reverts commit c6dd30d85b62702ee39d087ab9a2ea570866af05.",
                "tree": {
                    "sha": "ab071ab1409f1f0c612a9a8a49901c0b39926b8c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ab071ab1409f1f0c612a9a8a49901c0b39926b8c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/365bc99d260d0edd546566eecedaa90b316bdbc0",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/365bc99d260d0edd546566eecedaa90b316bdbc0",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjM2NWJjOTlkMjYwZDBlZGQ1NDY1NjZlZWNlZGFhOTBiMzE2YmRiYzA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a40ccd78724b4d76b9c1f5dc443c23c4f79ab8e6",
                    "sha": "a40ccd78724b4d76b9c1f5dc443c23c4f79ab8e6",
                    "url": "https://api.github.com/repos/cython/cython/commits/a40ccd78724b4d76b9c1f5dc443c23c4f79ab8e6"
                }
            ],
            "sha": "365bc99d260d0edd546566eecedaa90b316bdbc0",
            "url": "https://api.github.com/repos/cython/cython/commits/365bc99d260d0edd546566eecedaa90b316bdbc0"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a11e9c03ae9b8722e72eae34b777021d16613a2e/comments",
            "commit": {
                "author": {
                    "date": "2021-07-05T00:34:32Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-05T00:34:32Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: format",
                "tree": {
                    "sha": "41fe31a1e4561568cf18083de3cca41810706209",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/41fe31a1e4561568cf18083de3cca41810706209"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a11e9c03ae9b8722e72eae34b777021d16613a2e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmExMWU5YzAzYWU5Yjg3MjJlNzJlYWUzNGI3NzcwMjFkMTY2MTNhMmU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/365bc99d260d0edd546566eecedaa90b316bdbc0",
                    "sha": "365bc99d260d0edd546566eecedaa90b316bdbc0",
                    "url": "https://api.github.com/repos/cython/cython/commits/365bc99d260d0edd546566eecedaa90b316bdbc0"
                }
            ],
            "sha": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
            "url": "https://api.github.com/repos/cython/cython/commits/a11e9c03ae9b8722e72eae34b777021d16613a2e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4150ff662f8db15af5f7c77acf332b5fc82c1182/comments",
            "commit": {
                "author": {
                    "date": "2021-07-05T01:14:23Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-05T01:14:23Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: make `os.utime` compatible with python2.7",
                "tree": {
                    "sha": "7b664421bb701fbb9a50ce308422236785f753f0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7b664421bb701fbb9a50ce308422236785f753f0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4150ff662f8db15af5f7c77acf332b5fc82c1182",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjQxNTBmZjY2MmY4ZGIxNWFmNWY3Yzc3YWNmMzMyYjVmYzgyYzExODI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a11e9c03ae9b8722e72eae34b777021d16613a2e",
                    "sha": "a11e9c03ae9b8722e72eae34b777021d16613a2e",
                    "url": "https://api.github.com/repos/cython/cython/commits/a11e9c03ae9b8722e72eae34b777021d16613a2e"
                }
            ],
            "sha": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
            "url": "https://api.github.com/repos/cython/cython/commits/4150ff662f8db15af5f7c77acf332b5fc82c1182"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fe06fc4f6ae2ca85db35ebbbfc7e988f32405e2f/comments",
            "commit": {
                "author": {
                    "date": "2021-07-05T12:50:02Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-05T12:50:02Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "TestUtils: use a kw argument explicitly for utime\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "2fa4a271519118551728bfb458d061cecd5e599a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2fa4a271519118551728bfb458d061cecd5e599a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fe06fc4f6ae2ca85db35ebbbfc7e988f32405e2f",
                "verification": {
                    "payload": "tree 2fa4a271519118551728bfb458d061cecd5e599a\nparent 4150ff662f8db15af5f7c77acf332b5fc82c1182\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625489402 +0300\ncommitter GitHub <noreply@github.com> 1625489402 +0300\n\nTestUtils: use a kw argument explicitly for utime\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4v/6CRBK7hj4Ov3rIwAAtMIIAKmSxjbjum+BwGdHUS47hKbR\nmP2nHDBQbz/LfOKUrrB/+di1FkgqzJ1jQ4tZM6EUbjujDi8RETTUYvR/zWMB2KHG\nPhCcUJkdPu5yfwrfq5AWQjRUECyi3drDLnf++PduiXmKYT/EkoIK68SkwHCuYkk7\n0K3Aj4AzOeL9KNE8cKsiDua28TUzcoeGmmTTBEPvjfmJLzY6MRlGc0fGzL/av4pW\nOfZ6fsXVKX2BPS2cdn98C0DcuA3erSayVEviHAfnHfHnGrb6z6cNZGerw3LhmT2r\n9hhEkQidDC02Tm/ZGot/ksXfhMU2k9dWPEO9EnF5ZjrNdHx3mrjyJfnUkBPfB4k=\n=xKBC\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/fe06fc4f6ae2ca85db35ebbbfc7e988f32405e2f",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmZlMDZmYzRmNmFlMmNhODVkYjM1ZWJiYmZjN2U5ODhmMzI0MDVlMmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4150ff662f8db15af5f7c77acf332b5fc82c1182",
                    "sha": "4150ff662f8db15af5f7c77acf332b5fc82c1182",
                    "url": "https://api.github.com/repos/cython/cython/commits/4150ff662f8db15af5f7c77acf332b5fc82c1182"
                }
            ],
            "sha": "fe06fc4f6ae2ca85db35ebbbfc7e988f32405e2f",
            "url": "https://api.github.com/repos/cython/cython/commits/fe06fc4f6ae2ca85db35ebbbfc7e988f32405e2f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/615dad02b139c1b9f0ce0288c9d570ab1d51f90a/comments",
            "commit": {
                "author": {
                    "date": "2021-07-06T19:47:00Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-06T19:47:00Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Pipeline: `create_pyx_pipeline` is getting ugly again",
                "tree": {
                    "sha": "db7af7c252d0dc0b02684c26f1f85c70f82ce06d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/db7af7c252d0dc0b02684c26f1f85c70f82ce06d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/615dad02b139c1b9f0ce0288c9d570ab1d51f90a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/615dad02b139c1b9f0ce0288c9d570ab1d51f90a",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjYxNWRhZDAyYjEzOWMxYjlmMGNlMDI4OGM5ZDU3MGFiMWQ1MWY5MGE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fe06fc4f6ae2ca85db35ebbbfc7e988f32405e2f",
                    "sha": "fe06fc4f6ae2ca85db35ebbbfc7e988f32405e2f",
                    "url": "https://api.github.com/repos/cython/cython/commits/fe06fc4f6ae2ca85db35ebbbfc7e988f32405e2f"
                }
            ],
            "sha": "615dad02b139c1b9f0ce0288c9d570ab1d51f90a",
            "url": "https://api.github.com/repos/cython/cython/commits/615dad02b139c1b9f0ce0288c9d570ab1d51f90a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4e33d3168370d28653e75139c7a7af80615172d5/comments",
            "commit": {
                "author": {
                    "date": "2021-07-07T13:24:24Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-07T13:24:24Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: default to use None for encoding in write_file, write_newer_file",
                "tree": {
                    "sha": "ab9bbf76103558a353a1e34a1543d94271c12e0f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ab9bbf76103558a353a1e34a1543d94271c12e0f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4e33d3168370d28653e75139c7a7af80615172d5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/4e33d3168370d28653e75139c7a7af80615172d5",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjRlMzNkMzE2ODM3MGQyODY1M2U3NTEzOWM3YTdhZjgwNjE1MTcyZDU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/615dad02b139c1b9f0ce0288c9d570ab1d51f90a",
                    "sha": "615dad02b139c1b9f0ce0288c9d570ab1d51f90a",
                    "url": "https://api.github.com/repos/cython/cython/commits/615dad02b139c1b9f0ce0288c9d570ab1d51f90a"
                }
            ],
            "sha": "4e33d3168370d28653e75139c7a7af80615172d5",
            "url": "https://api.github.com/repos/cython/cython/commits/4e33d3168370d28653e75139c7a7af80615172d5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/05ed378b474bf6552a642eba259d0eba448bb747/comments",
            "commit": {
                "author": {
                    "date": "2021-07-07T13:27:22Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-07T13:27:22Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: use newline=\"\\n\" in write_file and write_newer_file",
                "tree": {
                    "sha": "21a967e61271acca5840f0cc007b1195f2c66126",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/21a967e61271acca5840f0cc007b1195f2c66126"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/05ed378b474bf6552a642eba259d0eba448bb747",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/05ed378b474bf6552a642eba259d0eba448bb747",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjA1ZWQzNzhiNDc0YmY2NTUyYTY0MmViYTI1OWQwZWJhNDQ4YmI3NDc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4e33d3168370d28653e75139c7a7af80615172d5",
                    "sha": "4e33d3168370d28653e75139c7a7af80615172d5",
                    "url": "https://api.github.com/repos/cython/cython/commits/4e33d3168370d28653e75139c7a7af80615172d5"
                }
            ],
            "sha": "05ed378b474bf6552a642eba259d0eba448bb747",
            "url": "https://api.github.com/repos/cython/cython/commits/05ed378b474bf6552a642eba259d0eba448bb747"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8e65bcfeb364b332b8fb7aa5153026cac43205ff/comments",
            "commit": {
                "author": {
                    "date": "2021-07-07T13:30:42Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-07T13:30:42Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: create and use touch_file in write_newer_file, format",
                "tree": {
                    "sha": "752ff0ab74eb801d1a0d3e62beff44d27f1af483",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/752ff0ab74eb801d1a0d3e62beff44d27f1af483"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8e65bcfeb364b332b8fb7aa5153026cac43205ff",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/8e65bcfeb364b332b8fb7aa5153026cac43205ff",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjhlNjViY2ZlYjM2NGIzMzJiOGZiN2FhNTE1MzAyNmNhYzQzMjA1ZmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/05ed378b474bf6552a642eba259d0eba448bb747",
                    "sha": "05ed378b474bf6552a642eba259d0eba448bb747",
                    "url": "https://api.github.com/repos/cython/cython/commits/05ed378b474bf6552a642eba259d0eba448bb747"
                }
            ],
            "sha": "8e65bcfeb364b332b8fb7aa5153026cac43205ff",
            "url": "https://api.github.com/repos/cython/cython/commits/8e65bcfeb364b332b8fb7aa5153026cac43205ff"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0/comments",
            "commit": {
                "author": {
                    "date": "2021-07-07T13:41:47Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-07T13:41:47Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: create relative_lines, relative_lines_from_file",
                "tree": {
                    "sha": "ad3f5244bbc81b56e8c869ffcc01d39887bc5c58",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ad3f5244bbc81b56e8c869ffcc01d39887bc5c58"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmQ5YWI2Njc2NWY1ZTYyMDdiNjBjZTlmZjE3MTZkNGU4OGQ3NWMwZjA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8e65bcfeb364b332b8fb7aa5153026cac43205ff",
                    "sha": "8e65bcfeb364b332b8fb7aa5153026cac43205ff",
                    "url": "https://api.github.com/repos/cython/cython/commits/8e65bcfeb364b332b8fb7aa5153026cac43205ff"
                }
            ],
            "sha": "d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0",
            "url": "https://api.github.com/repos/cython/cython/commits/d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/91aedc693b207a01bdffc4afb032be72fe4f99c8/comments",
            "commit": {
                "author": {
                    "date": "2021-07-07T14:01:53Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-07T14:01:53Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtilsL use Sized Iterator instaed of Collection",
                "tree": {
                    "sha": "1fc7be5ecdf2e2786830d5ab7789acfbeb8378ed",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1fc7be5ecdf2e2786830d5ab7789acfbeb8378ed"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/91aedc693b207a01bdffc4afb032be72fe4f99c8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/91aedc693b207a01bdffc4afb032be72fe4f99c8",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjkxYWVkYzY5M2IyMDdhMDFiZGZmYzRhZmIwMzJiZTcyZmU0Zjk5Yzg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0",
                    "sha": "d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0",
                    "url": "https://api.github.com/repos/cython/cython/commits/d9ab66765f5e6207b60ce9ff1716d4e88d75c0f0"
                }
            ],
            "sha": "91aedc693b207a01bdffc4afb032be72fe4f99c8",
            "url": "https://api.github.com/repos/cython/cython/commits/91aedc693b207a01bdffc4afb032be72fe4f99c8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/018e814a25186203d604160f3c6939f9102bdef9/comments",
            "commit": {
                "author": {
                    "date": "2021-07-07T14:12:25Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-07T14:12:25Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "TestUtils: format",
                "tree": {
                    "sha": "b2af8417efa9a755ea0c00442c3c555e0761b91e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b2af8417efa9a755ea0c00442c3c555e0761b91e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/018e814a25186203d604160f3c6939f9102bdef9",
                "verification": {
                    "payload": "tree b2af8417efa9a755ea0c00442c3c555e0761b91e\nparent 91aedc693b207a01bdffc4afb032be72fe4f99c8\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625667145 +0300\ncommitter GitHub <noreply@github.com> 1625667145 +0300\n\nTestUtils: format",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg5bZJCRBK7hj4Ov3rIwAAYi0IADaC2b5gw6NLPaXGlVsI3yzH\nOWVbFBKIfhyyKKtLM8CGa7WqrEFCLGOJ3aAHsGB6PShtzR28idl2/DiGktsnrV26\nOMiDY1OjmFkr0g9t9I+I2JoJE1e2ddPb10m3unnOk0QpFdsqP2KNpiYIT9dvZOQi\nur4Hp1DA1Iv+e1pPTMhxQeykg+y3zUwgs7oFBdP86+vYJ4q9y+Ln6vvsHP6p6apM\nlUVa5YkYf44M70EaoftbQFIJJuLyhjekaAw360sBuspYwatI+wHnYyuw/E4kTjFu\nnchgzvckZGesJ4Liqobt/eDWUMOuKo67eC/kEwDwcF98P5xNVsuCzNr0KVSJLVg=\n=wix7\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/018e814a25186203d604160f3c6939f9102bdef9",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjAxOGU4MTRhMjUxODYyMDNkNjA0MTYwZjNjNjkzOWY5MTAyYmRlZjk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/91aedc693b207a01bdffc4afb032be72fe4f99c8",
                    "sha": "91aedc693b207a01bdffc4afb032be72fe4f99c8",
                    "url": "https://api.github.com/repos/cython/cython/commits/91aedc693b207a01bdffc4afb032be72fe4f99c8"
                }
            ],
            "sha": "018e814a25186203d604160f3c6939f9102bdef9",
            "url": "https://api.github.com/repos/cython/cython/commits/018e814a25186203d604160f3c6939f9102bdef9"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/40eef18a89dabedf3a2ccd97e06171ada3bb7571/comments",
            "commit": {
                "author": {
                    "date": "2021-07-07T15:59:46Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-07T15:59:46Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Iterator -> Iterable, improve the TypeError message",
                "tree": {
                    "sha": "d634dbdc8bd6729d344fb273fb7a94f21659d7bd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d634dbdc8bd6729d344fb273fb7a94f21659d7bd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/40eef18a89dabedf3a2ccd97e06171ada3bb7571",
                "verification": {
                    "payload": "tree d634dbdc8bd6729d344fb273fb7a94f21659d7bd\nparent 018e814a25186203d604160f3c6939f9102bdef9\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625673586 +0300\ncommitter GitHub <noreply@github.com> 1625673586 +0300\n\nIterator -> Iterable, improve the TypeError message",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg5c9yCRBK7hj4Ov3rIwAAQhgIAEUgaV/qSg0vZFdie3S3kfSl\nD+4OfsQbovyVSA0CimBYstowUxo2rEufVwjpm4BUrefTzXjEWPbotDMvOMHDkMvv\nucG4UvNSws2smK4wlcCgWmGs2lNS+GVzlwlxZZhVvpYZCEySy7tVdr+FKVf8Rgkd\ndgyQt6OP4TqmAaxvhIAPmezVwke5eDmcFItXy9POqq/XhV5uTHxTxD4u/fHyxK9L\nGwqUkXWJCE8wfItFRdlgeWfd3LAUgYQ+8ppd7KSJLsJojBVu90C1MFbCp7/sw8vL\nK2gvt5qgmJGc3FDAMF5ZM2G6PeXe+ozgQn6HsSXNKSrgyvefxTLIX0FSeeYj2P8=\n=I7un\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/40eef18a89dabedf3a2ccd97e06171ada3bb7571",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjQwZWVmMThhODlkYWJlZGYzYTJjY2Q5N2UwNjE3MWFkYTNiYjc1NzE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/018e814a25186203d604160f3c6939f9102bdef9",
                    "sha": "018e814a25186203d604160f3c6939f9102bdef9",
                    "url": "https://api.github.com/repos/cython/cython/commits/018e814a25186203d604160f3c6939f9102bdef9"
                }
            ],
            "sha": "40eef18a89dabedf3a2ccd97e06171ada3bb7571",
            "url": "https://api.github.com/repos/cython/cython/commits/40eef18a89dabedf3a2ccd97e06171ada3bb7571"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e6708b0f5e48137d8b3f86a4296f007353e215c5/comments",
            "commit": {
                "author": {
                    "date": "2021-07-08T22:56:51Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-08T22:56:51Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: use kw fallback with relative_lines",
                "tree": {
                    "sha": "82cb0e1fdadf8d5c434a2bddc0504b4a6fce71ee",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/82cb0e1fdadf8d5c434a2bddc0504b4a6fce71ee"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e6708b0f5e48137d8b3f86a4296f007353e215c5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/e6708b0f5e48137d8b3f86a4296f007353e215c5",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmU2NzA4YjBmNWU0ODEzN2Q4YjNmODZhNDI5NmYwMDczNTNlMjE1YzU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/40eef18a89dabedf3a2ccd97e06171ada3bb7571",
                    "sha": "40eef18a89dabedf3a2ccd97e06171ada3bb7571",
                    "url": "https://api.github.com/repos/cython/cython/commits/40eef18a89dabedf3a2ccd97e06171ada3bb7571"
                }
            ],
            "sha": "e6708b0f5e48137d8b3f86a4296f007353e215c5",
            "url": "https://api.github.com/repos/cython/cython/commits/e6708b0f5e48137d8b3f86a4296f007353e215c5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6cebfd32cc9f3b462aad5528a03057b3eb194213/comments",
            "commit": {
                "author": {
                    "date": "2021-07-08T22:57:33Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-08T22:57:33Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize: use relative_lines_from_file from TestUtils",
                "tree": {
                    "sha": "cb829e51640b064ca6b7c62d3ad4c670da53b0e1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cb829e51640b064ca6b7c62d3ad4c670da53b0e1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6cebfd32cc9f3b462aad5528a03057b3eb194213",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/6cebfd32cc9f3b462aad5528a03057b3eb194213",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjZjZWJmZDMyY2M5ZjNiNDYyYWFkNTUyOGEwMzA1N2IzZWIxOTQyMTM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e6708b0f5e48137d8b3f86a4296f007353e215c5",
                    "sha": "e6708b0f5e48137d8b3f86a4296f007353e215c5",
                    "url": "https://api.github.com/repos/cython/cython/commits/e6708b0f5e48137d8b3f86a4296f007353e215c5"
                }
            ],
            "sha": "6cebfd32cc9f3b462aad5528a03057b3eb194213",
            "url": "https://api.github.com/repos/cython/cython/commits/6cebfd32cc9f3b462aad5528a03057b3eb194213"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T02:22:31Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T02:22:31Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCyCache: use relative_lines_from_file",
                "tree": {
                    "sha": "1a41bb99ced8e9c61d01b50408743696c0129d71",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1a41bb99ced8e9c61d01b50408743696c0129d71"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjBlYTdlZDE2N2QxOTM1ZDg3YjM5Y2RhMGJhMWYzYmE2ZjA3ZmNlYmU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6cebfd32cc9f3b462aad5528a03057b3eb194213",
                    "sha": "6cebfd32cc9f3b462aad5528a03057b3eb194213",
                    "url": "https://api.github.com/repos/cython/cython/commits/6cebfd32cc9f3b462aad5528a03057b3eb194213"
                }
            ],
            "sha": "0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
            "url": "https://api.github.com/repos/cython/cython/commits/0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/354effea9143067b8c26b207ded9eb3933e12bfa/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T02:27:27Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T02:27:27Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: update CythonTest",
                "tree": {
                    "sha": "afb508e36cb9d946c70da3b8de1928447ef6a810",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/afb508e36cb9d946c70da3b8de1928447ef6a810"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/354effea9143067b8c26b207ded9eb3933e12bfa",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/354effea9143067b8c26b207ded9eb3933e12bfa",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjM1NGVmZmVhOTE0MzA2N2I4YzI2YjIwN2RlZDllYjM5MzNlMTJiZmE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
                    "sha": "0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe",
                    "url": "https://api.github.com/repos/cython/cython/commits/0ea7ed167d1935d87b39cda0ba1f3ba6f07fcebe"
                }
            ],
            "sha": "354effea9143067b8c26b207ded9eb3933e12bfa",
            "url": "https://api.github.com/repos/cython/cython/commits/354effea9143067b8c26b207ded9eb3933e12bfa"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d819c014f4453a7b9504b99a2379aae0696fe931/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T02:50:40Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T02:50:40Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCyCache: format, remove unused imports",
                "tree": {
                    "sha": "e1104d6058d29397462dfd03a5a2bdd4b66610b4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e1104d6058d29397462dfd03a5a2bdd4b66610b4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d819c014f4453a7b9504b99a2379aae0696fe931",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/d819c014f4453a7b9504b99a2379aae0696fe931",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmQ4MTljMDE0ZjQ0NTNhN2I5NTA0Yjk5YTIzNzlhYWUwNjk2ZmU5MzE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/354effea9143067b8c26b207ded9eb3933e12bfa",
                    "sha": "354effea9143067b8c26b207ded9eb3933e12bfa",
                    "url": "https://api.github.com/repos/cython/cython/commits/354effea9143067b8c26b207ded9eb3933e12bfa"
                }
            ],
            "sha": "d819c014f4453a7b9504b99a2379aae0696fe931",
            "url": "https://api.github.com/repos/cython/cython/commits/d819c014f4453a7b9504b99a2379aae0696fe931"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ff8e27fc3a5d3e6975e7ce70bee9e7fa93bdd480/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T15:34:54Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T15:34:54Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "TestCyCache: fix typo\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "43c3ff12c6972bc404f1f05987c4ef3b020f0a7f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/43c3ff12c6972bc404f1f05987c4ef3b020f0a7f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ff8e27fc3a5d3e6975e7ce70bee9e7fa93bdd480",
                "verification": {
                    "payload": "tree 43c3ff12c6972bc404f1f05987c4ef3b020f0a7f\nparent d819c014f4453a7b9504b99a2379aae0696fe931\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625931294 +0300\ncommitter GitHub <noreply@github.com> 1625931294 +0300\n\nTestCyCache: fix typo\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg6b4eCRBK7hj4Ov3rIwAAj0kIALAWjcRU3ROJT5+Ra1GEEIdj\nLTgZni+Fb6dY4DY52G4M+eeUpxsLj/fxnF1OTNWdftSRACgsYYJUHJFtXArOsr4w\nSLt1m2c22xTlBdeGGxEBJH4/pJGNwDZ/la6jDA2KZJJfXfaN/cUEIUw4KLXw4nNS\nCeyA5dk3978k3zYm8wLVrCePG64qFQGyT4oqmhWjX6zmB8ACNlrtIEwRHccon1PQ\n3bXZ+XvdaAbZkcGfxhrClG5MjUvOEWTEZYugORDNee1zgMFtnQDSEcx1Rg6iYj9q\nuJJPxwCr0PLLv7+CN96ZP4YLAj6qQIZ7CfYcYaaPHXN1Nou/jc+AWxTSIDsNvUo=\n=7eRi\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/ff8e27fc3a5d3e6975e7ce70bee9e7fa93bdd480",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmZmOGUyN2ZjM2E1ZDNlNjk3NWU3Y2U3MGJlZTllN2ZhOTNiZGQ0ODA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d819c014f4453a7b9504b99a2379aae0696fe931",
                    "sha": "d819c014f4453a7b9504b99a2379aae0696fe931",
                    "url": "https://api.github.com/repos/cython/cython/commits/d819c014f4453a7b9504b99a2379aae0696fe931"
                }
            ],
            "sha": "ff8e27fc3a5d3e6975e7ce70bee9e7fa93bdd480",
            "url": "https://api.github.com/repos/cython/cython/commits/ff8e27fc3a5d3e6975e7ce70bee9e7fa93bdd480"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/51ed99832f7cfeb89130c3ae89adb6ef76aedbe9/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T15:36:36Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T15:36:36Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize: fix typo",
                "tree": {
                    "sha": "8c8c89f9aa6d43788ccdd70b93633c2672e27196",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8c8c89f9aa6d43788ccdd70b93633c2672e27196"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/51ed99832f7cfeb89130c3ae89adb6ef76aedbe9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/51ed99832f7cfeb89130c3ae89adb6ef76aedbe9",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjUxZWQ5OTgzMmY3Y2ZlYjg5MTMwYzNhZTg5YWRiNmVmNzZhZWRiZTk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ff8e27fc3a5d3e6975e7ce70bee9e7fa93bdd480",
                    "sha": "ff8e27fc3a5d3e6975e7ce70bee9e7fa93bdd480",
                    "url": "https://api.github.com/repos/cython/cython/commits/ff8e27fc3a5d3e6975e7ce70bee9e7fa93bdd480"
                }
            ],
            "sha": "51ed99832f7cfeb89130c3ae89adb6ef76aedbe9",
            "url": "https://api.github.com/repos/cython/cython/commits/51ed99832f7cfeb89130c3ae89adb6ef76aedbe9"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b771523e583377b68ad21f31f4fd7ed6b683d169/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T15:41:36Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T15:41:36Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCyCache: sort and format imports",
                "tree": {
                    "sha": "ca592df4c319fca7e92bd09f797d8a5079d76ae0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ca592df4c319fca7e92bd09f797d8a5079d76ae0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b771523e583377b68ad21f31f4fd7ed6b683d169",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/b771523e583377b68ad21f31f4fd7ed6b683d169",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmI3NzE1MjNlNTgzMzc3YjY4YWQyMWYzMWY0ZmQ3ZWQ2YjY4M2QxNjk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/51ed99832f7cfeb89130c3ae89adb6ef76aedbe9",
                    "sha": "51ed99832f7cfeb89130c3ae89adb6ef76aedbe9",
                    "url": "https://api.github.com/repos/cython/cython/commits/51ed99832f7cfeb89130c3ae89adb6ef76aedbe9"
                }
            ],
            "sha": "b771523e583377b68ad21f31f4fd7ed6b683d169",
            "url": "https://api.github.com/repos/cython/cython/commits/b771523e583377b68ad21f31f4fd7ed6b683d169"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cd1aec02767c176ad0e298e12a52b47286924f2f/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T18:01:16Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T18:01:16Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: remove type check, format docstrigns and code",
                "tree": {
                    "sha": "6a237cd27bc6da0d80c498a75bff006011e773c4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6a237cd27bc6da0d80c498a75bff006011e773c4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cd1aec02767c176ad0e298e12a52b47286924f2f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/cd1aec02767c176ad0e298e12a52b47286924f2f",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmNkMWFlYzAyNzY3YzE3NmFkMGUyOThlMTJhNTJiNDcyODY5MjRmMmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b771523e583377b68ad21f31f4fd7ed6b683d169",
                    "sha": "b771523e583377b68ad21f31f4fd7ed6b683d169",
                    "url": "https://api.github.com/repos/cython/cython/commits/b771523e583377b68ad21f31f4fd7ed6b683d169"
                }
            ],
            "sha": "cd1aec02767c176ad0e298e12a52b47286924f2f",
            "url": "https://api.github.com/repos/cython/cython/commits/cd1aec02767c176ad0e298e12a52b47286924f2f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c084ffc4f030c7791c31769a8474eb80660a77f5/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T18:31:51Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T18:31:51Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestRecythonize: remove unused import",
                "tree": {
                    "sha": "991b7f173a85d9ce5c9bc6e557ac78c6ea1fc274",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/991b7f173a85d9ce5c9bc6e557ac78c6ea1fc274"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c084ffc4f030c7791c31769a8474eb80660a77f5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/c084ffc4f030c7791c31769a8474eb80660a77f5",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmMwODRmZmM0ZjAzMGM3NzkxYzMxNzY5YTg0NzRlYjgwNjYwYTc3ZjU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cd1aec02767c176ad0e298e12a52b47286924f2f",
                    "sha": "cd1aec02767c176ad0e298e12a52b47286924f2f",
                    "url": "https://api.github.com/repos/cython/cython/commits/cd1aec02767c176ad0e298e12a52b47286924f2f"
                }
            ],
            "sha": "c084ffc4f030c7791c31769a8474eb80660a77f5",
            "url": "https://api.github.com/repos/cython/cython/commits/c084ffc4f030c7791c31769a8474eb80660a77f5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e1edbe748a8938367f2ed7b95710ec3b48ab9248/comments",
            "commit": {
                "author": {
                    "date": "2021-07-10T18:45:36Z",
                    "email": "52697657+0dminnimda@users.noreply.github.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-10T18:45:36Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'cython:master' into recythonize-pxd-for-py",
                "tree": {
                    "sha": "e87361ca5cd7b94500d0c037bfbaf910192b9772",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e87361ca5cd7b94500d0c037bfbaf910192b9772"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e1edbe748a8938367f2ed7b95710ec3b48ab9248",
                "verification": {
                    "payload": "tree e87361ca5cd7b94500d0c037bfbaf910192b9772\nparent c084ffc4f030c7791c31769a8474eb80660a77f5\nparent fae33cf7d42559384deb7a9949f47b0881b0a29b\nauthor 0dminnimda <52697657+0dminnimda@users.noreply.github.com> 1625942736 +0300\ncommitter GitHub <noreply@github.com> 1625942736 +0300\n\nMerge branch 'cython:master' into recythonize-pxd-for-py\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg6erQCRBK7hj4Ov3rIwAA03sIAEFj1BTeiogL3Y9KkWzQZDOP\nsHtCChxZ+7huOKOEDIurp4gCBxdRxDq6e4uYxWMae4tszqdka6Ct32xSB8DrQtSU\nmd4HdciPsG7L1DQruPp8DGNpXvVvxtkHmPP1uw66akXSeBzg38cvD4P9/0wggzwd\nwozZadKEdD+/ESj6NRapm6r1kTUqnJlnKRX34xiE8L4TXjbw0M5RE0G9+3yghcSL\nkTtdhRP3qwqDDr6dJcY07UAKvYHAvMoI1W83yJaTLTRpFrOD4xdiLHpiMWhOTdSu\nZ+5E8vazN0OP2CwNZjZEaRQqJ0J7b9zmeW8hH0RqAsh+h1gJ6uYow4O/FmvVnjk=\n=kOpt\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/e1edbe748a8938367f2ed7b95710ec3b48ab9248",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmUxZWRiZTc0OGE4OTM4MzY3ZjJlZDdiOTU3MTBlYzNiNDhhYjkyNDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c084ffc4f030c7791c31769a8474eb80660a77f5",
                    "sha": "c084ffc4f030c7791c31769a8474eb80660a77f5",
                    "url": "https://api.github.com/repos/cython/cython/commits/c084ffc4f030c7791c31769a8474eb80660a77f5"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/fae33cf7d42559384deb7a9949f47b0881b0a29b",
                    "sha": "fae33cf7d42559384deb7a9949f47b0881b0a29b",
                    "url": "https://api.github.com/repos/cython/cython/commits/fae33cf7d42559384deb7a9949f47b0881b0a29b"
                }
            ],
            "sha": "e1edbe748a8938367f2ed7b95710ec3b48ab9248",
            "url": "https://api.github.com/repos/cython/cython/commits/e1edbe748a8938367f2ed7b95710ec3b48ab9248"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2f7566e184352f555e98d092a951557fe9319ae9/comments",
            "commit": {
                "author": {
                    "date": "2021-07-12T14:36:01Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-12T14:36:01Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Utils: use _CACHE_METHOD_NAME and _METHOD_CACHE_PATTERN",
                "tree": {
                    "sha": "9c91d0bd13b1226c4799277388ddc70fd78b7b32",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9c91d0bd13b1226c4799277388ddc70fd78b7b32"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2f7566e184352f555e98d092a951557fe9319ae9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/2f7566e184352f555e98d092a951557fe9319ae9",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjJmNzU2NmUxODQzNTJmNTU1ZTk4ZDA5MmE5NTE1NTdmZTkzMTlhZTk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e1edbe748a8938367f2ed7b95710ec3b48ab9248",
                    "sha": "e1edbe748a8938367f2ed7b95710ec3b48ab9248",
                    "url": "https://api.github.com/repos/cython/cython/commits/e1edbe748a8938367f2ed7b95710ec3b48ab9248"
                }
            ],
            "sha": "2f7566e184352f555e98d092a951557fe9319ae9",
            "url": "https://api.github.com/repos/cython/cython/commits/2f7566e184352f555e98d092a951557fe9319ae9"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e1ebfa4ec88069912601cef14dd7e9f8cb5b3482/comments",
            "commit": {
                "author": {
                    "date": "2021-07-12T14:41:06Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-12T14:41:06Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCythonUtils: use Cython.Utils instead of relative import",
                "tree": {
                    "sha": "94aa3fd8dad1c8ce1a29299d7a8dd761ce22d6fa",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/94aa3fd8dad1c8ce1a29299d7a8dd761ce22d6fa"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e1ebfa4ec88069912601cef14dd7e9f8cb5b3482",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/e1ebfa4ec88069912601cef14dd7e9f8cb5b3482",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmUxZWJmYTRlYzg4MDY5OTEyNjAxY2VmMTRkZDdlOWY4Y2I1YjM0ODI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2f7566e184352f555e98d092a951557fe9319ae9",
                    "sha": "2f7566e184352f555e98d092a951557fe9319ae9",
                    "url": "https://api.github.com/repos/cython/cython/commits/2f7566e184352f555e98d092a951557fe9319ae9"
                }
            ],
            "sha": "e1ebfa4ec88069912601cef14dd7e9f8cb5b3482",
            "url": "https://api.github.com/repos/cython/cython/commits/e1ebfa4ec88069912601cef14dd7e9f8cb5b3482"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/35035f363004fee16314e88c20dc68deafc636f2/comments",
            "commit": {
                "author": {
                    "date": "2021-07-12T15:11:48Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-12T15:11:48Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCythonUtils: test cached_method and clear_method_caches",
                "tree": {
                    "sha": "cbdf114c506a9f15e3b96ea3d2a0b75b67fb0c15",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cbdf114c506a9f15e3b96ea3d2a0b75b67fb0c15"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/35035f363004fee16314e88c20dc68deafc636f2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/35035f363004fee16314e88c20dc68deafc636f2",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjM1MDM1ZjM2MzAwNGZlZTE2MzE0ZTg4YzIwZGM2OGRlYWZjNjM2ZjI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e1ebfa4ec88069912601cef14dd7e9f8cb5b3482",
                    "sha": "e1ebfa4ec88069912601cef14dd7e9f8cb5b3482",
                    "url": "https://api.github.com/repos/cython/cython/commits/e1ebfa4ec88069912601cef14dd7e9f8cb5b3482"
                }
            ],
            "sha": "35035f363004fee16314e88c20dc68deafc636f2",
            "url": "https://api.github.com/repos/cython/cython/commits/35035f363004fee16314e88c20dc68deafc636f2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/14079b723b2baaea79cd417ce53eee9c51da072b/comments",
            "commit": {
                "author": {
                    "date": "2021-07-12T15:13:13Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-12T15:13:13Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCythonUtils: test new constsnts from Utils",
                "tree": {
                    "sha": "c0a9473848050459a0cd66c73517db23db223f6f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c0a9473848050459a0cd66c73517db23db223f6f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/14079b723b2baaea79cd417ce53eee9c51da072b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/14079b723b2baaea79cd417ce53eee9c51da072b",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjE0MDc5YjcyM2IyYmFhZWE3OWNkNDE3Y2U1M2VlZTljNTFkYTA3MmI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/35035f363004fee16314e88c20dc68deafc636f2",
                    "sha": "35035f363004fee16314e88c20dc68deafc636f2",
                    "url": "https://api.github.com/repos/cython/cython/commits/35035f363004fee16314e88c20dc68deafc636f2"
                }
            ],
            "sha": "14079b723b2baaea79cd417ce53eee9c51da072b",
            "url": "https://api.github.com/repos/cython/cython/commits/14079b723b2baaea79cd417ce53eee9c51da072b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/37bb1d1c7dca6b2e242257fa0bc705ed879f6a8c/comments",
            "commit": {
                "author": {
                    "date": "2021-07-12T17:26:15Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-12T17:26:15Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: add filled_function_caches, number_of_filled_caches",
                "tree": {
                    "sha": "ec676cbf914964f052fa765584a56cdcac1c9f3e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ec676cbf914964f052fa765584a56cdcac1c9f3e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/37bb1d1c7dca6b2e242257fa0bc705ed879f6a8c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/37bb1d1c7dca6b2e242257fa0bc705ed879f6a8c",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjM3YmIxZDFjN2RjYTZiMmUyNDIyNTdmYTBiYzcwNWVkODc5ZjZhOGM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/14079b723b2baaea79cd417ce53eee9c51da072b",
                    "sha": "14079b723b2baaea79cd417ce53eee9c51da072b",
                    "url": "https://api.github.com/repos/cython/cython/commits/14079b723b2baaea79cd417ce53eee9c51da072b"
                }
            ],
            "sha": "37bb1d1c7dca6b2e242257fa0bc705ed879f6a8c",
            "url": "https://api.github.com/repos/cython/cython/commits/37bb1d1c7dca6b2e242257fa0bc705ed879f6a8c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/67099c9a4b72a09bc2c6bdff0c4ae5063669cb6c/comments",
            "commit": {
                "author": {
                    "date": "2021-07-12T17:26:31Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-12T17:26:31Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: add sandbox_for_function_caches",
                "tree": {
                    "sha": "549e81c36da654fa10dc77d20a39ebcc6f51d37c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/549e81c36da654fa10dc77d20a39ebcc6f51d37c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/67099c9a4b72a09bc2c6bdff0c4ae5063669cb6c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/67099c9a4b72a09bc2c6bdff0c4ae5063669cb6c",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjY3MDk5YzlhNGI3MmEwOWJjMmM2YmRmZjBjNGFlNTA2MzY2OWNiNmM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/37bb1d1c7dca6b2e242257fa0bc705ed879f6a8c",
                    "sha": "37bb1d1c7dca6b2e242257fa0bc705ed879f6a8c",
                    "url": "https://api.github.com/repos/cython/cython/commits/37bb1d1c7dca6b2e242257fa0bc705ed879f6a8c"
                }
            ],
            "sha": "67099c9a4b72a09bc2c6bdff0c4ae5063669cb6c",
            "url": "https://api.github.com/repos/cython/cython/commits/67099c9a4b72a09bc2c6bdff0c4ae5063669cb6c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/44a7146eedf16ad7054a8855db8079665bd68008/comments",
            "commit": {
                "author": {
                    "date": "2021-07-12T17:28:09Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-12T17:28:09Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestTestUtils: sort imports, use regular import instad of relative one",
                "tree": {
                    "sha": "94412d6c1d21f99d934dd35470737328b21584d6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/94412d6c1d21f99d934dd35470737328b21584d6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/44a7146eedf16ad7054a8855db8079665bd68008",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/44a7146eedf16ad7054a8855db8079665bd68008",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjQ0YTcxNDZlZWRmMTZhZDcwNTRhODg1NWRiODA3OTY2NWJkNjgwMDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/67099c9a4b72a09bc2c6bdff0c4ae5063669cb6c",
                    "sha": "67099c9a4b72a09bc2c6bdff0c4ae5063669cb6c",
                    "url": "https://api.github.com/repos/cython/cython/commits/67099c9a4b72a09bc2c6bdff0c4ae5063669cb6c"
                }
            ],
            "sha": "44a7146eedf16ad7054a8855db8079665bd68008",
            "url": "https://api.github.com/repos/cython/cython/commits/44a7146eedf16ad7054a8855db8079665bd68008"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b3eecfbbeb632977525453fe5dbb323a05e281e6/comments",
            "commit": {
                "author": {
                    "date": "2021-07-12T17:29:13Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-12T17:29:13Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestTestUtils: add Sandbox tests",
                "tree": {
                    "sha": "56975e6c1445ed69a44c37fd54d0bcc7c5c133ab",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/56975e6c1445ed69a44c37fd54d0bcc7c5c133ab"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b3eecfbbeb632977525453fe5dbb323a05e281e6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/b3eecfbbeb632977525453fe5dbb323a05e281e6",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmIzZWVjZmJiZWI2MzI5Nzc1MjU0NTNmZTVkYmIzMjNhMDVlMjgxZTY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/44a7146eedf16ad7054a8855db8079665bd68008",
                    "sha": "44a7146eedf16ad7054a8855db8079665bd68008",
                    "url": "https://api.github.com/repos/cython/cython/commits/44a7146eedf16ad7054a8855db8079665bd68008"
                }
            ],
            "sha": "b3eecfbbeb632977525453fe5dbb323a05e281e6",
            "url": "https://api.github.com/repos/cython/cython/commits/b3eecfbbeb632977525453fe5dbb323a05e281e6"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6ea3c569dd1482521fff9b58e76ac2e314a588cd/comments",
            "commit": {
                "author": {
                    "date": "2021-07-13T00:59:49Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-13T00:59:49Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestTestUtils: test Function caches + finish up _test_sandbox",
                "tree": {
                    "sha": "27d928988e8c7ff13cf508a2949e7dd0bee1f74b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/27d928988e8c7ff13cf508a2949e7dd0bee1f74b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6ea3c569dd1482521fff9b58e76ac2e314a588cd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/6ea3c569dd1482521fff9b58e76ac2e314a588cd",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjZlYTNjNTY5ZGQxNDgyNTIxZmZmOWI1OGU3NmFjMmUzMTRhNTg4Y2Q=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b3eecfbbeb632977525453fe5dbb323a05e281e6",
                    "sha": "b3eecfbbeb632977525453fe5dbb323a05e281e6",
                    "url": "https://api.github.com/repos/cython/cython/commits/b3eecfbbeb632977525453fe5dbb323a05e281e6"
                }
            ],
            "sha": "6ea3c569dd1482521fff9b58e76ac2e314a588cd",
            "url": "https://api.github.com/repos/cython/cython/commits/6ea3c569dd1482521fff9b58e76ac2e314a588cd"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1edc3543105beaa2e7d3e15b63131ab7d269d81a/comments",
            "commit": {
                "author": {
                    "date": "2021-07-13T01:30:38Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-13T01:30:38Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCythonUtils: test Function caches",
                "tree": {
                    "sha": "6af46747f6ae22fe55c21145f44df27082932f44",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6af46747f6ae22fe55c21145f44df27082932f44"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1edc3543105beaa2e7d3e15b63131ab7d269d81a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/1edc3543105beaa2e7d3e15b63131ab7d269d81a",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjFlZGMzNTQzMTA1YmVhYTJlN2QzZTE1YjYzMTMxYWI3ZDI2OWQ4MWE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6ea3c569dd1482521fff9b58e76ac2e314a588cd",
                    "sha": "6ea3c569dd1482521fff9b58e76ac2e314a588cd",
                    "url": "https://api.github.com/repos/cython/cython/commits/6ea3c569dd1482521fff9b58e76ac2e314a588cd"
                }
            ],
            "sha": "1edc3543105beaa2e7d3e15b63131ab7d269d81a",
            "url": "https://api.github.com/repos/cython/cython/commits/1edc3543105beaa2e7d3e15b63131ab7d269d81a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/963a8bafc82c30a98d32957f3f9daa7ba0ca7724/comments",
            "commit": {
                "author": {
                    "date": "2021-07-13T01:45:57Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-13T01:45:57Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: fix sandbox_for_function_caches",
                "tree": {
                    "sha": "cf953cc7ab38d72bf692558176172773c00820ab",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cf953cc7ab38d72bf692558176172773c00820ab"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/963a8bafc82c30a98d32957f3f9daa7ba0ca7724",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/963a8bafc82c30a98d32957f3f9daa7ba0ca7724",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjk2M2E4YmFmYzgyYzMwYTk4ZDMyOTU3ZjNmOWRhYTdiYTBjYTc3MjQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1edc3543105beaa2e7d3e15b63131ab7d269d81a",
                    "sha": "1edc3543105beaa2e7d3e15b63131ab7d269d81a",
                    "url": "https://api.github.com/repos/cython/cython/commits/1edc3543105beaa2e7d3e15b63131ab7d269d81a"
                }
            ],
            "sha": "963a8bafc82c30a98d32957f3f9daa7ba0ca7724",
            "url": "https://api.github.com/repos/cython/cython/commits/963a8bafc82c30a98d32957f3f9daa7ba0ca7724"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c45b37e0a8469de641cbcc479410a5bacce0f836/comments",
            "commit": {
                "author": {
                    "date": "2021-07-13T03:52:40Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-13T03:52:40Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestUtils: make encoding the kwarg in write_file and write_newer_file",
                "tree": {
                    "sha": "265e586b9a083bbe6b24c205f89c928bce852807",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/265e586b9a083bbe6b24c205f89c928bce852807"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c45b37e0a8469de641cbcc479410a5bacce0f836",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/c45b37e0a8469de641cbcc479410a5bacce0f836",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmM0NWIzN2UwYTg0NjlkZTY0MWNiY2M0Nzk0MTBhNWJhY2NlMGY4MzY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/963a8bafc82c30a98d32957f3f9daa7ba0ca7724",
                    "sha": "963a8bafc82c30a98d32957f3f9daa7ba0ca7724",
                    "url": "https://api.github.com/repos/cython/cython/commits/963a8bafc82c30a98d32957f3f9daa7ba0ca7724"
                }
            ],
            "sha": "c45b37e0a8469de641cbcc479410a5bacce0f836",
            "url": "https://api.github.com/repos/cython/cython/commits/c45b37e0a8469de641cbcc479410a5bacce0f836"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cfeac2c3ee73eb6ab455f3bb8cec0c863f4a16ae/comments",
            "commit": {
                "author": {
                    "date": "2021-07-13T03:59:35Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-13T03:59:35Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestTestUtils: add missed line in sandboxed",
                "tree": {
                    "sha": "f85dc9dd1f591c289d240cfe5e3c6a95799e2fea",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f85dc9dd1f591c289d240cfe5e3c6a95799e2fea"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cfeac2c3ee73eb6ab455f3bb8cec0c863f4a16ae",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/cfeac2c3ee73eb6ab455f3bb8cec0c863f4a16ae",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmNmZWFjMmMzZWU3M2ViNmFiNDU1ZjNiYjhjZWMwYzg2M2Y0YTE2YWU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c45b37e0a8469de641cbcc479410a5bacce0f836",
                    "sha": "c45b37e0a8469de641cbcc479410a5bacce0f836",
                    "url": "https://api.github.com/repos/cython/cython/commits/c45b37e0a8469de641cbcc479410a5bacce0f836"
                }
            ],
            "sha": "cfeac2c3ee73eb6ab455f3bb8cec0c863f4a16ae",
            "url": "https://api.github.com/repos/cython/cython/commits/cfeac2c3ee73eb6ab455f3bb8cec0c863f4a16ae"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/03c3668a0e7524146d058ae410df29542b166334/comments",
            "commit": {
                "author": {
                    "date": "2021-07-13T04:33:51Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-07-13T04:33:51Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestTestUtils: test Relative things",
                "tree": {
                    "sha": "2def500ef2b3c404cb007de6e94e48511aefe19d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2def500ef2b3c404cb007de6e94e48511aefe19d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/03c3668a0e7524146d058ae410df29542b166334",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/03c3668a0e7524146d058ae410df29542b166334",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjAzYzM2NjhhMGU3NTI0MTQ2ZDA1OGFlNDEwZGYyOTU0MmIxNjYzMzQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cfeac2c3ee73eb6ab455f3bb8cec0c863f4a16ae",
                    "sha": "cfeac2c3ee73eb6ab455f3bb8cec0c863f4a16ae",
                    "url": "https://api.github.com/repos/cython/cython/commits/cfeac2c3ee73eb6ab455f3bb8cec0c863f4a16ae"
                }
            ],
            "sha": "03c3668a0e7524146d058ae410df29542b166334",
            "url": "https://api.github.com/repos/cython/cython/commits/03c3668a0e7524146d058ae410df29542b166334"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8707610116cbf80974b38f4a70a6394a8f31a933/comments",
            "commit": {
                "author": {
                    "date": "2021-08-11T13:43:41Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-08-11T13:43:41Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "CHANGES.rst: remove my changes",
                "tree": {
                    "sha": "1622dae1800b939b19d96d40f37d28efb14bd54d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1622dae1800b939b19d96d40f37d28efb14bd54d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8707610116cbf80974b38f4a70a6394a8f31a933",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/8707610116cbf80974b38f4a70a6394a8f31a933",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjg3MDc2MTAxMTZjYmY4MDk3NGIzOGY0YTcwYTYzOTRhOGYzMWE5MzM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/03c3668a0e7524146d058ae410df29542b166334",
                    "sha": "03c3668a0e7524146d058ae410df29542b166334",
                    "url": "https://api.github.com/repos/cython/cython/commits/03c3668a0e7524146d058ae410df29542b166334"
                }
            ],
            "sha": "8707610116cbf80974b38f4a70a6394a8f31a933",
            "url": "https://api.github.com/repos/cython/cython/commits/8707610116cbf80974b38f4a70a6394a8f31a933"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/184ee6b979d6395e1876c654ab4f2fd32a7bbbc3/comments",
            "commit": {
                "author": {
                    "date": "2021-08-12T16:45:41Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-08-12T16:45:41Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Utils.py: undo the changes that are in #4338",
                "tree": {
                    "sha": "d0fd317585526c89c234d05bd98aa219e5ef058f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d0fd317585526c89c234d05bd98aa219e5ef058f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/184ee6b979d6395e1876c654ab4f2fd32a7bbbc3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/184ee6b979d6395e1876c654ab4f2fd32a7bbbc3",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjE4NGVlNmI5NzlkNjM5NWUxODc2YzY1NGFiNGYyZmQzMmE3YmJiYzM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8707610116cbf80974b38f4a70a6394a8f31a933",
                    "sha": "8707610116cbf80974b38f4a70a6394a8f31a933",
                    "url": "https://api.github.com/repos/cython/cython/commits/8707610116cbf80974b38f4a70a6394a8f31a933"
                }
            ],
            "sha": "184ee6b979d6395e1876c654ab4f2fd32a7bbbc3",
            "url": "https://api.github.com/repos/cython/cython/commits/184ee6b979d6395e1876c654ab4f2fd32a7bbbc3"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/25e2296de934ce59d4e810d50427304ca03c7142/comments",
            "commit": {
                "author": {
                    "date": "2021-08-12T17:03:00Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-08-12T17:03:00Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "TestCythonUtils.py: undo the changes that are in #4338",
                "tree": {
                    "sha": "7dcc4e367c54928c6e5906c5434034e9f2908161",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7dcc4e367c54928c6e5906c5434034e9f2908161"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/25e2296de934ce59d4e810d50427304ca03c7142",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/25e2296de934ce59d4e810d50427304ca03c7142",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOjI1ZTIyOTZkZTkzNGNlNTlkNGU4MTBkNTA0MjczMDRjYTAzYzcxNDI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/184ee6b979d6395e1876c654ab4f2fd32a7bbbc3",
                    "sha": "184ee6b979d6395e1876c654ab4f2fd32a7bbbc3",
                    "url": "https://api.github.com/repos/cython/cython/commits/184ee6b979d6395e1876c654ab4f2fd32a7bbbc3"
                }
            ],
            "sha": "25e2296de934ce59d4e810d50427304ca03c7142",
            "url": "https://api.github.com/repos/cython/cython/commits/25e2296de934ce59d4e810d50427304ca03c7142"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309/comments",
            "commit": {
                "author": {
                    "date": "2021-08-13T00:54:49Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-08-13T00:54:49Z",
                    "email": "0dminnimda@gmail.com",
                    "name": "0dminnimda"
                },
                "message": "Undo the changes that are in #4340",
                "tree": {
                    "sha": "c6b177278a0c907b476a1aa6c120bd647a05339f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c6b177278a0c907b476a1aa6c120bd647a05339f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "html_url": "https://github.com/cython/cython/commit/d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "node_id": "MDY6Q29tbWl0Mzc3MjI1MjAxOmQ5ZDliNDJjYTFlMWM3NGE3MGEzY2RjMDZiZmJmNDc2YTQxMmUzMDk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/25e2296de934ce59d4e810d50427304ca03c7142",
                    "sha": "25e2296de934ce59d4e810d50427304ca03c7142",
                    "url": "https://api.github.com/repos/cython/cython/commits/25e2296de934ce59d4e810d50427304ca03c7142"
                }
            ],
            "sha": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
            "url": "https://api.github.com/repos/cython/cython/commits/d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/4241/commits",
    "created_at": "2021-06-21T18:08:40Z",
    "diff_url": "https://github.com/cython/cython/pull/4241.diff",
    "draft": false,
    "head": {
        "label": "0dminnimda:recythonize-pxd-for-py",
        "ref": "recythonize-pxd-for-py",
        "repo": {
            "archive_url": "https://api.github.com/repos/0dminnimda/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/0dminnimda/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/0dminnimda/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/0dminnimda/cython/branches{/branch}",
            "clone_url": "https://github.com/0dminnimda/cython.git",
            "collaborators_url": "https://api.github.com/repos/0dminnimda/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/0dminnimda/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/0dminnimda/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/0dminnimda/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/0dminnimda/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/0dminnimda/cython/contributors",
            "created_at": "2021-06-15T16:20:06Z",
            "default_branch": "main",
            "deployments_url": "https://api.github.com/repos/0dminnimda/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/0dminnimda/cython/downloads",
            "events_url": "https://api.github.com/repos/0dminnimda/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/0dminnimda/cython/forks",
            "full_name": "0dminnimda/cython",
            "git_commits_url": "https://api.github.com/repos/0dminnimda/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/0dminnimda/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/0dminnimda/cython/git/tags{/sha}",
            "git_url": "git://github.com/0dminnimda/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/0dminnimda/cython/hooks",
            "html_url": "https://github.com/0dminnimda/cython",
            "id": 377225201,
            "issue_comment_url": "https://api.github.com/repos/0dminnimda/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/0dminnimda/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/0dminnimda/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/0dminnimda/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/0dminnimda/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/0dminnimda/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/0dminnimda/cython/merges",
            "milestones_url": "https://api.github.com/repos/0dminnimda/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzcyMjUyMDE=",
            "notifications_url": "https://api.github.com/repos/0dminnimda/cython/notifications{?since,all,participating}",
            "open_issues": 2,
            "open_issues_count": 2,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/0dminnimda/cython/pulls{/number}",
            "pushed_at": "2021-08-13T00:55:06Z",
            "releases_url": "https://api.github.com/repos/0dminnimda/cython/releases{/id}",
            "size": 63163,
            "ssh_url": "git@github.com:0dminnimda/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/0dminnimda/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/0dminnimda/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/0dminnimda/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/0dminnimda/cython/subscription",
            "svn_url": "https://github.com/0dminnimda/cython",
            "tags_url": "https://api.github.com/repos/0dminnimda/cython/tags",
            "teams_url": "https://api.github.com/repos/0dminnimda/cython/teams",
            "trees_url": "https://api.github.com/repos/0dminnimda/cython/git/trees{/sha}",
            "updated_at": "2021-07-16T00:20:05Z",
            "url": "https://api.github.com/repos/0dminnimda/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
            "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
            "followers_url": "https://api.github.com/users/0dminnimda/followers",
            "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
            "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/0dminnimda",
            "id": 52697657,
            "login": "0dminnimda",
            "node_id": "MDQ6VXNlcjUyNjk3NjU3",
            "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
            "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
            "repos_url": "https://api.github.com/users/0dminnimda/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/0dminnimda"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/4241",
    "id": 674769538,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/4241",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "50401afd37d4481becf5bf5c20c8e9dde44554b7",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njc0NzY5NTM4",
    "number": 4241,
    "patch_url": "https://github.com/cython/cython/pull/4241.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/4241/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/d9d9b42ca1e1c74a70a3cdc06bfbf476a412e309",
    "title": "Allow cythonize to recompile .py file when .pxd file has changed, attempt 2",
    "updated_at": "2021-08-13T00:55:09Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/4241",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
        "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
        "followers_url": "https://api.github.com/users/0dminnimda/followers",
        "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
        "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/0dminnimda",
        "id": 52697657,
        "login": "0dminnimda",
        "node_id": "MDQ6VXNlcjUyNjk3NjU3",
        "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
        "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
        "repos_url": "https://api.github.com/users/0dminnimda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/0dminnimda"
    }
}