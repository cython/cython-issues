{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3285/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3285/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3285"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3285"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3285/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3285"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/69e464d509252bd4ad023b7e822447f290ea2858"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 955,
            "forks_count": 955,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 792,
            "open_issues_count": 792,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-01-01T14:48:33Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 55708,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4784,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-01-01T14:48:09Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4784,
            "watchers_count": 4784
        },
        "sha": "6b174f8243cad1bea11c34c9a1f590c56b810709",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Annotations are now dealt with according to PEP-563 - there are\r\nsaved as strings, rather than evaluated as Python objects.\r\nThey can/are still be used by Cython for typing.\r\nPrevious behaviour for evaluating them as Python objects was\r\nconvoluted and has been removed entirely, which hopefully doesn't\r\nbreak too much.\r\n\r\n------------------\r\n\r\nI'd created a previous version of this that attempted to preserve the old behaviour too. Upon thinking about it a bit more, most of the messy code was just trying to make the pre-PEP-563 behaviour work, so I ditched it (like I should have done from the start).\r\n\r\nI believe this should fix the test `embedsignatures` from the enablebinding branch too. It might be worth copying a few of my extra tests from the PR there, but that can be looked at separately (if it's worthwhile at all)",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361795958"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361795958"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it's a good idea to have a dedicated parser function and node class for this, but could you please make this more like the rest of the parser code, i.e. calculate partial results before building nodes, and then passing the node attributes as keyword arguments?\r\n\r\nAlso, please add `p_annotation` to `Parsing.pxd` as an internal `cdef` function.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T13:47:29Z",
            "diff_hunk": "@@ -3865,3 +3865,12 @@ def print_parse_tree(f, node, level, key = None):\n             f.write(\"%s]\\n\" % ind)\n             return\n     f.write(\"%s%s\\n\" % (ind, node))\n+\n+def p_annotation(s):\n+    \"\"\"An annotation just has the \"test\" syntax, but also stores the string it came from\n+\n+    Note that the string is *allowed* to be changed/processed (although isn't here)\n+    so may not exactly match the string generated by Python, and if it doesn't\n+    then it is not a bug\"\"\"\n+    pos = s.position()\n+    return ExprNodes.AnnotationNode(pos, p_test(s))",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361795958",
            "id": 361795958,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NTk1OA==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 48,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361795958",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796164"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796164"
                }
            },
            "author_association": "MEMBER",
            "body": "https://www.python.org/dev/peps/pep-0008/#other-recommendations",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T13:52:22Z",
            "diff_hunk": "@@ -140,6 +140,12 @@ def str_type_is_str():\n     cdef str s = 'abc'\n     return str, s\n \n+def strip_wrapped_string(s):\n+    # PEP 563 translates an annotation of \"test new test\" to '\"test new test\"'\n+    # but choice of string delimiters is a bit arbitrary\n+    #  this function handles that\n+    assert s[0]==s[-1] # delimiters on either end are the same",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796164",
            "id": 361796164,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NjE2NA==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 8,
            "path": "tests/run/cython3_no_unicode_literals.pyx",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796164",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796287"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796287"
                }
            },
            "author_association": "MEMBER",
            "body": "This sentence fails to parse in my English.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T13:55:31Z",
            "diff_hunk": "@@ -1,10 +1,14 @@\n #cython: embedsignature=True, annotation_typing=False\n \n+# signatures here are a little fragile - exactly when\n+# during the build process they generated gives slightly\n+# different (but equivalent) forms",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796287",
            "id": 361796287,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NjI4Nw==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 5,
            "path": "tests/run/embedsignatures.pyx",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796287",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796424"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796424"
                }
            },
            "author_association": "MEMBER",
            "body": "This test is not using annotations and should not be commented out.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T13:58:26Z",
            "diff_hunk": "@@ -383,23 +384,23 @@ class AsyncBadSyntaxTest(unittest.TestCase):\n                        await\n             \"\"\",\n \n-            \"\"\"async def foo():\n-                   return lambda async: await\n-            \"\"\",\n+            #\"\"\"async def foo():\n+            #       return lambda async: await",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796424",
            "id": 361796424,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NjQyNA==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 22,
            "path": "tests/run/test_coroutines_pep492.pyx",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796424",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796444"
                }
            },
            "author_association": "MEMBER",
            "body": "This test is not using annotations and should not be commented out.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T13:58:32Z",
            "diff_hunk": "@@ -383,23 +384,23 @@ class AsyncBadSyntaxTest(unittest.TestCase):\n                        await\n             \"\"\",\n \n-            \"\"\"async def foo():\n-                   return lambda async: await\n-            \"\"\",\n+            #\"\"\"async def foo():\n+            #       return lambda async: await\n+            #\"\"\",\n \n-            \"\"\"async def foo():\n-                   return lambda a: await\n-            \"\"\",\n+            #\"\"\"async def foo():\n+            #       return lambda a: await",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796444",
            "id": 361796444,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NjQ0NA==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 29,
            "path": "tests/run/test_coroutines_pep492.pyx",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796444",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796459"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796459"
                }
            },
            "author_association": "MEMBER",
            "body": "This test is not using annotations and should not be commented out.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T13:58:44Z",
            "diff_hunk": "@@ -598,23 +599,23 @@ class AsyncBadSyntaxTest(unittest.TestCase):\n                        await\n             \"\"\",\n \n-            \"\"\"async def foo():\n-                   return lambda async: await\n-            \"\"\",\n+            #\"\"\"async def foo():\n+            #       return lambda async: await",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796459",
            "id": 361796459,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NjQ1OQ==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 55,
            "path": "tests/run/test_coroutines_pep492.pyx",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796459",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796466"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796466"
                }
            },
            "author_association": "MEMBER",
            "body": "This test is not using annotations and should not be commented out.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T13:58:52Z",
            "diff_hunk": "@@ -598,23 +599,23 @@ class AsyncBadSyntaxTest(unittest.TestCase):\n                        await\n             \"\"\",\n \n-            \"\"\"async def foo():\n-                   return lambda async: await\n-            \"\"\",\n+            #\"\"\"async def foo():\n+            #       return lambda async: await\n+            #\"\"\",\n \n-            \"\"\"async def foo():\n-                   return lambda a: await\n-            \"\"\",\n+            #\"\"\"async def foo():\n+            #       return lambda a: await",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796466",
            "id": 361796466,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NjQ2Ng==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 62,
            "path": "tests/run/test_coroutines_pep492.pyx",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796466",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796536"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796536"
                }
            },
            "author_association": "MEMBER",
            "body": "I like sentences to end with a dot. :)",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T14:00:59Z",
            "diff_hunk": "@@ -3865,3 +3865,12 @@ def print_parse_tree(f, node, level, key = None):\n             f.write(\"%s]\\n\" % ind)\n             return\n     f.write(\"%s%s\\n\" % (ind, node))\n+\n+def p_annotation(s):\n+    \"\"\"An annotation just has the \"test\" syntax, but also stores the string it came from\n+\n+    Note that the string is *allowed* to be changed/processed (although isn't here)\n+    so may not exactly match the string generated by Python, and if it doesn't\n+    then it is not a bug\"\"\"",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796536",
            "id": 361796536,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NjUzNg==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 46,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796536",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796611"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796611"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is this no longer needed? Shouldn't the nodes still be analysed? It's up to the annotation node itself to decide to do nothing, not the node that contains it.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T14:02:50Z",
            "diff_hunk": "@@ -3207,9 +3146,6 @@ def declare_python_arg(self, env, arg):\n     def analyse_expressions(self, env):\n         self.local_scope.directives = env.directives\n         self.analyse_default_values(env)\n-        self.analyse_annotations(env)\n-        if self.return_type_annotation:\n-            self.return_type_annotation = self.analyse_annotation(env, self.return_type_annotation)",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796611",
            "id": 361796611,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5NjYxMQ==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 124,
            "path": "Cython/Compiler/Nodes.py",
            "position": 117,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796611",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796976"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796976"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder if this is really still true. Shouldn't string literals behave just like any other type declaration now?",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T14:11:38Z",
            "diff_hunk": "@@ -1930,15 +1930,15 @@ def declare_from_annotation(self, env, as_target=False):\n             return\n \n         annotation = self.annotation\n-        if annotation.is_string_literal:\n+        if annotation.expr.is_string_literal:\n             # name: \"description\" => not a type, but still a declared variable or attribute",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796976",
            "id": 361796976,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5Njk3Ng==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 15,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 15,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796976",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361796986"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361796986"
                }
            },
            "author_association": "MEMBER",
            "body": "This is dangerous. Calling `coerce_to_pyobject()` is intended to be semantically like `coerce_to(py_object_type)`. Here, both would do entirely different things.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T14:11:45Z",
            "diff_hunk": "@@ -13563,7 +13555,83 @@ def generate_result_code(self, code):\n             code.error_goto_if_null(self.result(), self.pos)))\n         code.put_gotref(self.result())\n \n+class AnnotationNode(ExprNode):\n+    # Deals with the two possible uses of an annotation.\n+    # 1. The post PEP-563 use where an annotation is stored\n+    #  as a string\n+    # 2. The Cython use where the annotation can indicate an\n+    #  object type\n+    #\n+    # doesn't handle the pre PEP-563 version where the\n+    # annotation is evaluated into a Python Object\n+\n+    subexprs = []\n+    def __init__(self, pos, expr, string=None):\n+        \"\"\"string is expected to already be a StringNode or None\"\"\"\n+        ExprNode.__init__(self, pos)\n+        if string is None:\n+            # import doesn't work at top of file?\n+            from .AutoDocTransforms import AnnotationWriter\n+            string = StringEncoding.EncodedString(AnnotationWriter().write(expr))\n+            string = StringNode(pos, unicode_value=string, value=string.as_utf8_string())\n+        self.string = string\n+        self.expr = expr\n+\n+    # def analyse_types doesn't exist because nothing needs doing\n+\n+    def coerce_to_pyobject(self, env):\n+        return self.string",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361796986",
            "id": 361796986,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5Njk4Ng==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 132,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 336916648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361796986",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361797775"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361797775"
                }
            },
            "author_association": "NONE",
            "body": "I'm just wandering around, but does Cython follows PEP 257?\r\n\r\n> Unless the entire docstring fits on a line, place the closing quotes on a line by themselves.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T14:31:21Z",
            "diff_hunk": "@@ -3865,3 +3865,12 @@ def print_parse_tree(f, node, level, key = None):\n             f.write(\"%s]\\n\" % ind)\n             return\n     f.write(\"%s%s\\n\" % (ind, node))\n+\n+def p_annotation(s):\n+    \"\"\"An annotation just has the \"test\" syntax, but also stores the string it came from\n+\n+    Note that the string is *allowed* to be changed/processed (although isn't here)\n+    so may not exactly match the string generated by Python, and if it doesn't\n+    then it is not a bug\"\"\"",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361797775",
            "id": 361797775,
            "in_reply_to_id": 361796536,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5Nzc3NQ==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 46,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 336918010,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361797775",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361798153"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361798153"
                }
            },
            "author_association": "MEMBER",
            "body": "Cython's code base (more exactly, Pyrex's code base) is actually older than PEP-8 and PEP-257. :)\r\nBut yes, the triple quotes should be on their own next line, too.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T14:42:21Z",
            "diff_hunk": "@@ -3865,3 +3865,12 @@ def print_parse_tree(f, node, level, key = None):\n             f.write(\"%s]\\n\" % ind)\n             return\n     f.write(\"%s%s\\n\" % (ind, node))\n+\n+def p_annotation(s):\n+    \"\"\"An annotation just has the \"test\" syntax, but also stores the string it came from\n+\n+    Note that the string is *allowed* to be changed/processed (although isn't here)\n+    so may not exactly match the string generated by Python, and if it doesn't\n+    then it is not a bug\"\"\"",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361798153",
            "id": 361798153,
            "in_reply_to_id": 361796536,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc5ODE1Mw==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 46,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 336918328,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361798153",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361812291"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361812291"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've added these back in (and in ExprNodes.py too) in a slightly simplified form.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T20:27:09Z",
            "diff_hunk": "@@ -3207,9 +3146,6 @@ def declare_python_arg(self, env, arg):\n     def analyse_expressions(self, env):\n         self.local_scope.directives = env.directives\n         self.analyse_default_values(env)\n-        self.analyse_annotations(env)\n-        if self.return_type_annotation:\n-            self.return_type_annotation = self.analyse_annotation(env, self.return_type_annotation)",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361812291",
            "id": 361812291,
            "in_reply_to_id": 361796611,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgxMjI5MQ==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 124,
            "path": "Cython/Compiler/Nodes.py",
            "position": 117,
            "pull_request_review_id": 336929404,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361812291",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361812746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361812746"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Not sure... string literals are distinguishable from other types. E.g.\r\n\r\n```\r\ndef f(a: \"something\"):\r\n    pass\r\n```\r\n\r\ngets translated to an annotation of `'\"something\"'` (i.e. it's quoted inside the string literal).\r\n\r\nSo I don't automatically think it makes sense to change how Cython infers the types from the annotations - it has exactly the same information as before and all that's really changed is the representation in the `__annotations__` dictionary.\r\n\r\nWith that said, this looks like a silly and inconsistent special case, so maybe it should go. I haven't addressed it in this set of changes commit though\r\n\r\n```\r\ndef f(a: float, b: 'float'):\r\n    c: float = a\r\n    d: 'float' = a\r\n    e: float\r\n    f: 'float'\r\n```\r\n\r\nIn the above `a`, `c`, `d`, `e` end up typed as a C double, `b` ends up as a C float, and `f` ends up as a PyObject so it's all a bit odd",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T20:38:09Z",
            "diff_hunk": "@@ -1930,15 +1930,15 @@ def declare_from_annotation(self, env, as_target=False):\n             return\n \n         annotation = self.annotation\n-        if annotation.is_string_literal:\n+        if annotation.expr.is_string_literal:\n             # name: \"description\" => not a type, but still a declared variable or attribute",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361812746",
            "id": 361812746,
            "in_reply_to_id": 361796976,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgxMjc0Ng==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 15,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 15,
            "pull_request_review_id": 336929748,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361812746",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361813069"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361813069"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Don't know if it adds anything, but it's tested in https://github.com/cython/cython/blob/20787f28fae6c0c828940a25e580b56a1f594efd/tests/run/pep526_variable_annotations.py#L40 (and a few other places in the same file)",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-28T20:48:14Z",
            "diff_hunk": "@@ -1930,15 +1930,15 @@ def declare_from_annotation(self, env, as_target=False):\n             return\n \n         annotation = self.annotation\n-        if annotation.is_string_literal:\n+        if annotation.expr.is_string_literal:\n             # name: \"description\" => not a type, but still a declared variable or attribute",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361813069",
            "id": 361813069,
            "in_reply_to_id": 361796976,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgxMzA2OQ==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 15,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 15,
            "pull_request_review_id": 336930027,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361813069",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361919240"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361919240"
                }
            },
            "author_association": "MEMBER",
            "body": "Your example shows that it's definitely inconsistent currently. Given PEP-563, I think strings can be ignored now, because forward declarations are no longer a problem. However, they weren't (always) ignored before, so maybe we should show a warning for them if we detect a type in a string in 3.0, and really ignore them in 3.1?",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-30T07:56:46Z",
            "diff_hunk": "@@ -1930,15 +1930,15 @@ def declare_from_annotation(self, env, as_target=False):\n             return\n \n         annotation = self.annotation\n-        if annotation.is_string_literal:\n+        if annotation.expr.is_string_literal:\n             # name: \"description\" => not a type, but still a declared variable or attribute",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361919240",
            "id": 361919240,
            "in_reply_to_id": 361796976,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTkxOTI0MA==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 15,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 15,
            "pull_request_review_id": 337022661,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361919240",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361921332"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361921332"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this is the right way to do it, but there's still this:\r\nhttps://github.com/cython/cython/blob/edf9350a63cbb6906e564ab15cef19532b1517fc/Cython/Compiler/AutoDocTransforms.py#L12-L17\r\nBy making annotations depend on the `AnnotationWriter`, I think we should have at least a way to notify the user when Cython isn't capable of correctly representing what she originally wrote in the generated module. Let's add at least a visible warning for these fallback methods.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-30T08:08:08Z",
            "diff_hunk": "@@ -13563,7 +13558,81 @@ def generate_result_code(self, code):\n             code.error_goto_if_null(self.result(), self.pos)))\n         code.put_gotref(self.result())\n \n+class AnnotationNode(ExprNode):\n+    # Deals with the two possible uses of an annotation.\n+    # 1. The post PEP-563 use where an annotation is stored\n+    #  as a string\n+    # 2. The Cython use where the annotation can indicate an\n+    #  object type\n+    #\n+    # doesn't handle the pre PEP-563 version where the\n+    # annotation is evaluated into a Python Object\n+\n+    subexprs = []\n+    def __init__(self, pos, expr, string=None):\n+        \"\"\"string is expected to already be a StringNode or None\"\"\"\n+        ExprNode.__init__(self, pos)\n+        if string is None:\n+            # import doesn't work at top of file?\n+            from .AutoDocTransforms import AnnotationWriter\n+            string = StringEncoding.EncodedString(AnnotationWriter().write(expr))",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361921332",
            "id": 361921332,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTkyMTMzMg==",
            "original_commit_id": "49e26030b57be5694ccc8241f2f41bb35411f04c",
            "original_position": 127,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 337025024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361921332",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361925945"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361925945"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder if we should keep the `u` string prefix for Cython 3.0 (or remove it only in 3.1?). But that's a separate discussion.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-30T08:34:29Z",
            "diff_hunk": "@@ -578,15 +578,15 @@ def annotation_syntax(a: \"test new test\", b : \"other\" = 2, *args: \"ARGS\", **kwar\n     >>> len(annotation_syntax.__annotations__)\n     5\n     >>> print(annotation_syntax.__annotations__['a'])\n-    test new test\n+    u'test new test'",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361925945",
            "id": 361925945,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTkyNTk0NQ==",
            "original_commit_id": "49e26030b57be5694ccc8241f2f41bb35411f04c",
            "original_position": 5,
            "path": "tests/run/cython3.pyx",
            "position": 5,
            "pull_request_review_id": 337025024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361925945",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r361937355"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/361937355"
                }
            },
            "author_association": "MEMBER",
            "body": "I think Cython 3.0 is the right time to remove this. But that's not part of this PR.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-30T09:29:03Z",
            "diff_hunk": "@@ -13563,7 +13558,81 @@ def generate_result_code(self, code):\n             code.error_goto_if_null(self.result(), self.pos)))\n         code.put_gotref(self.result())\n \n+class AnnotationNode(ExprNode):\n+    # Deals with the two possible uses of an annotation.\n+    # 1. The post PEP-563 use where an annotation is stored\n+    #  as a string\n+    # 2. The Cython use where the annotation can indicate an\n+    #  object type\n+    #\n+    # doesn't handle the pre PEP-563 version where the\n+    # annotation is evaluated into a Python Object\n+\n+    subexprs = []\n+    def __init__(self, pos, expr, string=None):\n+        \"\"\"string is expected to already be a StringNode or None\"\"\"\n+        ExprNode.__init__(self, pos)\n+        if string is None:\n+            # import doesn't work at top of file?\n+            from .AutoDocTransforms import AnnotationWriter\n+            string = StringEncoding.EncodedString(AnnotationWriter().write(expr))\n+            string = StringNode(pos, unicode_value=string, value=string.as_utf8_string())\n+        self.string = string\n+        self.expr = expr\n \n+    def analyse_types(self, env):\n+        return self # nothing needs doing\n+\n+    def analyse_as_type(self, env):\n+        # for compatibility when used as a return_type_node, have this interface too\n+        return self.analyse_type_annotation(env)[1]\n+\n+    def analyse_type_annotation(self, env, assigned_value=None):\n+        annotation = self.expr\n+        base_type = None\n+        is_ambiguous = False\n+        explicit_pytype = explicit_ctype = False\n+        if annotation.is_dict_literal:\n+            warning(annotation.pos,\n+                    \"Dicts should no longer be used as type annotations. Use 'cython.int' etc. directly.\")",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r361937355",
            "id": 361937355,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTkzNzM1NQ==",
            "original_commit_id": "49e26030b57be5694ccc8241f2f41bb35411f04c",
            "original_position": 146,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 147,
            "pull_request_review_id": 337025024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/361937355",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r362268821"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362268821"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There was actually already a warning for annotations as strings (I'm struggling to work out how to link to it here, but in this commit it's in ExprNodes.py line 13625) so I've just increased the level so it shows by default.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-31T19:26:25Z",
            "diff_hunk": "@@ -1930,15 +1930,15 @@ def declare_from_annotation(self, env, as_target=False):\n             return\n \n         annotation = self.annotation\n-        if annotation.is_string_literal:\n+        if annotation.expr.is_string_literal:\n             # name: \"description\" => not a type, but still a declared variable or attribute",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r362268821",
            "id": 362268821,
            "in_reply_to_id": 361796976,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjI2ODgyMQ==",
            "original_commit_id": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "original_position": 15,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 15,
            "pull_request_review_id": 337437759,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:28:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362268821",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r362269463"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362269463"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've added a warning for these. I originally tried looking for ways to just copy the original code rather than regenerating it, but I couldn't work out a good way to do it. It's the sort of change that would be easy to make in the future though.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-31T19:31:08Z",
            "diff_hunk": "@@ -13563,7 +13558,81 @@ def generate_result_code(self, code):\n             code.error_goto_if_null(self.result(), self.pos)))\n         code.put_gotref(self.result())\n \n+class AnnotationNode(ExprNode):\n+    # Deals with the two possible uses of an annotation.\n+    # 1. The post PEP-563 use where an annotation is stored\n+    #  as a string\n+    # 2. The Cython use where the annotation can indicate an\n+    #  object type\n+    #\n+    # doesn't handle the pre PEP-563 version where the\n+    # annotation is evaluated into a Python Object\n+\n+    subexprs = []\n+    def __init__(self, pos, expr, string=None):\n+        \"\"\"string is expected to already be a StringNode or None\"\"\"\n+        ExprNode.__init__(self, pos)\n+        if string is None:\n+            # import doesn't work at top of file?\n+            from .AutoDocTransforms import AnnotationWriter\n+            string = StringEncoding.EncodedString(AnnotationWriter().write(expr))",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r362269463",
            "id": 362269463,
            "in_reply_to_id": 361921332,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjI2OTQ2Mw==",
            "original_commit_id": "49e26030b57be5694ccc8241f2f41bb35411f04c",
            "original_position": 127,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 337438431,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:31:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362269463",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3285#discussion_r362270633"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3285"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362270633"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't think it does any harm. It's added by the code generation in `AnnotationWriter` (or it's base classes). The only real reason to change it would be that it generates a slightly different representation to Python, but since equivalent representations are OK in the PEP I don't think it's a big problem.",
            "commit_id": "69e464d509252bd4ad023b7e822447f290ea2858",
            "created_at": "2019-12-31T19:40:31Z",
            "diff_hunk": "@@ -578,15 +578,15 @@ def annotation_syntax(a: \"test new test\", b : \"other\" = 2, *args: \"ARGS\", **kwar\n     >>> len(annotation_syntax.__annotations__)\n     5\n     >>> print(annotation_syntax.__annotations__['a'])\n-    test new test\n+    u'test new test'",
            "html_url": "https://github.com/cython/cython/pull/3285#discussion_r362270633",
            "id": 362270633,
            "in_reply_to_id": 361925945,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjI3MDYzMw==",
            "original_commit_id": "49e26030b57be5694ccc8241f2f41bb35411f04c",
            "original_position": 5,
            "path": "tests/run/cython3.pyx",
            "position": 5,
            "pull_request_review_id": 337439764,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3285",
            "updated_at": "2019-12-31T19:40:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362270633",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3285/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e2468550a70550967dd8cd1ef367c2d5fd3ace1f/comments",
            "commit": {
                "author": {
                    "date": "2019-12-23T23:50:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-12-23T23:50:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "PEP-563\n\nAnnotations are now dealt with according to PEP-563 - there are\nsaved as strings, rather than evaluated as Python objects.\nThey can/are still be used by Cython for typing.\nPrevious behaviour for evaluating them as Python objects was\nconvoluted and has been removed entirely, which hopefully doesn't\nbreak too much",
                "tree": {
                    "sha": "173101cc806e454d8f4cf527f6d6794662be6e27",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/173101cc806e454d8f4cf527f6d6794662be6e27"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e2468550a70550967dd8cd1ef367c2d5fd3ace1f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/e2468550a70550967dd8cd1ef367c2d5fd3ace1f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZTI0Njg1NTBhNzA1NTA5NjdkZDhjZDFlZjM2N2MyZDVmZDNhY2UxZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/758aaad041dddef318f7eb476612d66eb8f7d082",
                    "sha": "758aaad041dddef318f7eb476612d66eb8f7d082",
                    "url": "https://api.github.com/repos/cython/cython/commits/758aaad041dddef318f7eb476612d66eb8f7d082"
                }
            ],
            "sha": "e2468550a70550967dd8cd1ef367c2d5fd3ace1f",
            "url": "https://api.github.com/repos/cython/cython/commits/e2468550a70550967dd8cd1ef367c2d5fd3ace1f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bbec9769d605dc413759a9b2ac1d91d7feca4186/comments",
            "commit": {
                "author": {
                    "date": "2019-12-24T10:31:50Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-12-24T10:31:50Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixes for tests\n\nMostly updating the tests to reflect the new behaviour.\nAlso changed type annotation to be str rather than unicode\n - this seems to make sense but doesn't have huge precent\n given annotations don't exist in py2",
                "tree": {
                    "sha": "3a96cad362d77fbe2221e88662cdb9f4ba9941bd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3a96cad362d77fbe2221e88662cdb9f4ba9941bd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bbec9769d605dc413759a9b2ac1d91d7feca4186",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/bbec9769d605dc413759a9b2ac1d91d7feca4186",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YmJlYzk3NjlkNjA1ZGM0MTM3NTlhOWIyYWMxZDkxZDdmZWNhNDE4Ng==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e2468550a70550967dd8cd1ef367c2d5fd3ace1f",
                    "sha": "e2468550a70550967dd8cd1ef367c2d5fd3ace1f",
                    "url": "https://api.github.com/repos/cython/cython/commits/e2468550a70550967dd8cd1ef367c2d5fd3ace1f"
                }
            ],
            "sha": "bbec9769d605dc413759a9b2ac1d91d7feca4186",
            "url": "https://api.github.com/repos/cython/cython/commits/bbec9769d605dc413759a9b2ac1d91d7feca4186"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7efcb03ae59f7c064a9523ac1b98a13089c45c92/comments",
            "commit": {
                "author": {
                    "date": "2019-12-24T11:18:21Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-12-24T11:18:21Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Two more fixes\n\nHopefully the last ones",
                "tree": {
                    "sha": "586b69d8ea21d6f44c23cf872522143221c1dddd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/586b69d8ea21d6f44c23cf872522143221c1dddd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7efcb03ae59f7c064a9523ac1b98a13089c45c92",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6N2VmY2IwM2FlNTlmN2MwNjRhOTUyM2FjMWI5OGExMzA4OWM0NWM5Mg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bbec9769d605dc413759a9b2ac1d91d7feca4186",
                    "sha": "bbec9769d605dc413759a9b2ac1d91d7feca4186",
                    "url": "https://api.github.com/repos/cython/cython/commits/bbec9769d605dc413759a9b2ac1d91d7feca4186"
                }
            ],
            "sha": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
            "url": "https://api.github.com/repos/cython/cython/commits/7efcb03ae59f7c064a9523ac1b98a13089c45c92"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/49e26030b57be5694ccc8241f2f41bb35411f04c/comments",
            "commit": {
                "author": {
                    "date": "2019-12-28T20:24:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-12-28T20:24:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Addressing comments from review",
                "tree": {
                    "sha": "402dd3cabbea94c1b967f42ba61d7b3ab00f197a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/402dd3cabbea94c1b967f42ba61d7b3ab00f197a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/49e26030b57be5694ccc8241f2f41bb35411f04c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/49e26030b57be5694ccc8241f2f41bb35411f04c",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NDllMjYwMzBiNTdiZTU2OTRjY2M4MjQxZjJmNDFiYjM1NDExZjA0Yw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7efcb03ae59f7c064a9523ac1b98a13089c45c92",
                    "sha": "7efcb03ae59f7c064a9523ac1b98a13089c45c92",
                    "url": "https://api.github.com/repos/cython/cython/commits/7efcb03ae59f7c064a9523ac1b98a13089c45c92"
                }
            ],
            "sha": "49e26030b57be5694ccc8241f2f41bb35411f04c",
            "url": "https://api.github.com/repos/cython/cython/commits/49e26030b57be5694ccc8241f2f41bb35411f04c"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/69e464d509252bd4ad023b7e822447f290ea2858/comments",
            "commit": {
                "author": {
                    "date": "2019-12-31T19:19:44Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-12-31T19:28:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added warnings for annotations",
                "tree": {
                    "sha": "aa61824f4a744d84a70f5ad74ef09fdc77f2bc2a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/aa61824f4a744d84a70f5ad74ef09fdc77f2bc2a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/69e464d509252bd4ad023b7e822447f290ea2858",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/69e464d509252bd4ad023b7e822447f290ea2858",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjllNDY0ZDUwOTI1MmJkNGFkMDIzYjdlODIyNDQ3ZjI5MGVhMjg1OA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/49e26030b57be5694ccc8241f2f41bb35411f04c",
                    "sha": "49e26030b57be5694ccc8241f2f41bb35411f04c",
                    "url": "https://api.github.com/repos/cython/cython/commits/49e26030b57be5694ccc8241f2f41bb35411f04c"
                }
            ],
            "sha": "69e464d509252bd4ad023b7e822447f290ea2858",
            "url": "https://api.github.com/repos/cython/cython/commits/69e464d509252bd4ad023b7e822447f290ea2858"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3285/commits",
    "created_at": "2019-12-23T23:55:59Z",
    "diff_url": "https://github.com/cython/cython/pull/3285.diff",
    "head": {
        "label": "da-woods:pep563_",
        "ref": "pep563_",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2019-12-31T19:28:54Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 55791,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2019-10-24T09:38:07Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "69e464d509252bd4ad023b7e822447f290ea2858",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3285",
    "id": 356480306,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3285",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "c58dcad0484c0bb4cc039d1f83fb3d2eb612bd23",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU2NDgwMzA2",
    "number": 3285,
    "patch_url": "https://github.com/cython/cython/pull/3285.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3285/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/69e464d509252bd4ad023b7e822447f290ea2858",
    "title": "PEP-563",
    "updated_at": "2019-12-31T19:40:32Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3285",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}