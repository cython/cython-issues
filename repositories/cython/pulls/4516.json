{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/4516/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4516/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/4516"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/4516"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4516/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4516"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/19828592a16a48cce95977433755c09bfa465381"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1309,
            "forks_count": 1309,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1093,
            "open_issues_count": 1093,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2022-07-08T13:58:29Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 64242,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7143,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2022-07-08T14:22:32Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7143,
            "watchers_count": 7143,
            "web_commit_signoff_required": false
        },
        "sha": "796fd06da1fa1d5481ce43a6b6c901bc87f0ce9a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Part of #4187.\r\n",
    "closed_at": "2022-07-07T12:42:56Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r775176074"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/775176074"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2021-12-25T22:44:42Z",
            "diff_hunk": "@@ -0,0 +1,11 @@\n+cimport cython\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r775176074",
            "id": 775176074,
            "line": 2,
            "node_id": "PRRC_kwDOABDGAc4uND-K",
            "original_commit_id": "474473c1b025911ddd9ad4d9e699da25b560f460",
            "original_line": 2,
            "original_position": 2,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/penguin2.pyx",
            "position": 2,
            "pull_request_review_id": 840040845,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/775176074/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-12-25T22:50:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/775176074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r798803801"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/798803801"
                }
            },
            "author_association": "MEMBER",
            "body": "This sentence doesn't quite seem complete.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-03T17:26:10Z",
            "diff_hunk": "@@ -291,28 +291,36 @@ extension type and its C-level attributes (stored in object’s C struct.) and\n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r798803801",
            "id": 798803801,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vnMdZ",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 310,
            "original_position": 26,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872182539,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/798803801/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-03T17:26:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/798803801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r798804750"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/798804750"
                }
            },
            "author_association": "MEMBER",
            "body": "I think line 312 just needs moving up a line",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-03T17:27:14Z",
            "diff_hunk": "@@ -291,28 +291,36 @@ extension type and its C-level attributes (stored in object’s C struct.) and\n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r798804750",
            "id": 798804750,
            "in_reply_to_id": 798803801,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vnMsO",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 310,
            "original_position": 26,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872183857,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/798804750/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-03T17:27:14Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/798804750",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799354712"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799354712"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should generally try to present \"easy to maintain\" spellings in code that we show to users. It might stick in the end.\r\n```suggestion\r\n    b = cython.int,\r\n)\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T10:44:14Z",
            "diff_hunk": "@@ -0,0 +1,59 @@\n+import cython\n+from cython.cimports.libc.stdlib import malloc, free\n+\n+# Example C struct\n+my_c_struct = cython.struct(\n+    a = cython.int,\n+    b = cython.int)",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799354712",
            "id": 799354712,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpS9Y",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 7,
            "original_position": 7,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/wrapper_class.py",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799354712/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799354712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799357181"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799357181"
                }
            },
            "author_association": "MEMBER",
            "body": "This is a funny claim to make in a class that previously had no `__init__` constructor. :)\r\n```suggestion\r\n        # Fast call to __new__() that bypasses the __init__() constructor.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T10:47:31Z",
            "diff_hunk": "@@ -0,0 +1,59 @@\n+import cython\n+from cython.cimports.libc.stdlib import malloc, free\n+\n+# Example C struct\n+my_c_struct = cython.struct(\n+    a = cython.int,\n+    b = cython.int)\n+\n+@cython.cclass\n+class WrapperClass:\n+    \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+    _ptr: cython.pointer(my_c_struct)\n+    ptr_owner: cython.bint\n+\n+    def __cinit__(self):\n+        self.ptr_owner = False\n+\n+    def __dealloc__(self):\n+        # De-allocate if not null and flag is set\n+        if self._ptr is not cython.NULL and self.ptr_owner is True:\n+            free(self._ptr)\n+            self._ptr = cython.NULL\n+\n+    # Extension class properties\n+    @property\n+    def a(self):\n+        return self._ptr.a if self._ptr is not cython.NULL else None\n+\n+    @property\n+    def b(self):\n+        return self._ptr.b if self._ptr is not cython.NULL else None\n+\n+    @staticmethod\n+    @cython.cfunc\n+    def from_ptr(_ptr: cython.pointer(my_c_struct), owner: cython.bint=False) -> WrapperClass:\n+        \"\"\"Factory function to create WrapperClass objects from\n+        given my_c_struct pointer.\n+\n+        Setting ``owner`` flag to ``True`` causes\n+        the extension type to ``free`` the structure pointed to by ``_ptr``\n+        when the wrapper object is deallocated.\"\"\"\n+        # Call to __new__ bypasses __init__ constructor",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799357181",
            "id": 799357181,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpTj9",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 42,
            "original_position": 42,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/wrapper_class.py",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799357181/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799357181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799357404"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799357404"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # Fast call to __new__() that bypasses the __init__() constructor.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T10:47:49Z",
            "diff_hunk": "@@ -0,0 +1,59 @@\n+ \n+from libc.stdlib cimport malloc, free\n+\n+# Example C struct\n+ctypedef struct my_c_struct:\n+    int a\n+    int b\n+\n+\n+cdef class WrapperClass:\n+    \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+    cdef my_c_struct *_ptr\n+    cdef bint ptr_owner\n+\n+    def __cinit__(self):\n+        self.ptr_owner = False\n+\n+    def __dealloc__(self):\n+        # De-allocate if not null and flag is set\n+        if self._ptr is not NULL and self.ptr_owner is True:\n+            free(self._ptr)\n+            self._ptr = NULL\n+\n+    # Extension class properties\n+    @property\n+    def a(self):\n+        return self._ptr.a if self._ptr is not NULL else None\n+\n+    @property\n+    def b(self):\n+        return self._ptr.b if self._ptr is not NULL else None\n+\n+\n+    @staticmethod\n+    cdef WrapperClass from_ptr(my_c_struct *_ptr, bint owner=False):\n+        \"\"\"Factory function to create WrapperClass objects from\n+        given my_c_struct pointer.\n+\n+        Setting ``owner`` flag to ``True`` causes\n+        the extension type to ``free`` the structure pointed to by ``_ptr``\n+        when the wrapper object is deallocated.\"\"\"\n+        # Call to __new__ bypasses __init__ constructor",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799357404",
            "id": 799357404,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpTnc",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 42,
            "original_position": 42,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/wrapper_class.pyx",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799357404/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799357404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799363556"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799363556"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n    def __init__(self):\r\n        # Prevent accidental instantiation from normal Python code\r\n        # since we cannot pass a struct pointer into a Python constructor.\r\n        raise TypeError(\"This class cannot be instantiated directly.\")\r\n\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T10:56:24Z",
            "diff_hunk": "@@ -0,0 +1,59 @@\n+import cython\n+from cython.cimports.libc.stdlib import malloc, free\n+\n+# Example C struct\n+my_c_struct = cython.struct(\n+    a = cython.int,\n+    b = cython.int)\n+\n+@cython.cclass\n+class WrapperClass:\n+    \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+    _ptr: cython.pointer(my_c_struct)\n+    ptr_owner: cython.bint\n+\n+    def __cinit__(self):\n+        self.ptr_owner = False\n+\n+    def __dealloc__(self):\n+        # De-allocate if not null and flag is set\n+        if self._ptr is not cython.NULL and self.ptr_owner is True:\n+            free(self._ptr)\n+            self._ptr = cython.NULL\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799363556",
            "id": 799363556,
            "line": 24,
            "node_id": "PRRC_kwDOABDGAc4vpVHk",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 23,
            "original_position": 23,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/wrapper_class.py",
            "position": 24,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799363556/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:52:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799363556",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799363678"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799363678"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n    def __init__(self):\r\n        # Prevent accidental instantiation from normal Python code\r\n        # since we cannot pass a struct pointer into a Python constructor.\r\n        raise TypeError(\"This class cannot be instantiated directly.\")\r\n\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T10:56:34Z",
            "diff_hunk": "@@ -0,0 +1,59 @@\n+ \n+from libc.stdlib cimport malloc, free\n+\n+# Example C struct\n+ctypedef struct my_c_struct:\n+    int a\n+    int b\n+\n+\n+cdef class WrapperClass:\n+    \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+    cdef my_c_struct *_ptr\n+    cdef bint ptr_owner\n+\n+    def __cinit__(self):\n+        self.ptr_owner = False\n+\n+    def __dealloc__(self):\n+        # De-allocate if not null and flag is set\n+        if self._ptr is not NULL and self.ptr_owner is True:\n+            free(self._ptr)\n+            self._ptr = NULL\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799363678",
            "id": 799363678,
            "line": 24,
            "node_id": "PRRC_kwDOABDGAc4vpVJe",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 23,
            "original_position": 23,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/wrapper_class.pyx",
            "position": 24,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799363678/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:52:14Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799363678",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799364610"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799364610"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nstatement or decorating the class with the ``@cclass`` decorator.  Here's an example:\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T10:57:57Z",
            "diff_hunk": "@@ -9,20 +9,55 @@ Extension Types\n Introduction\n ==============\n \n+.. include::\n+    ../two-syntax-variants-used\n+\n As well as creating normal user-defined classes with the Python class\n statement, Cython also lets you create new built-in Python types, known as\n :term:`extension types<Extension type>`. You define an extension type using the :keyword:`cdef` class\n-statement.  Here's an example:\n+statement or decorating the class with ``@cclass`` decorator.  Here's an example:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799364610",
            "id": 799364610,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpVYC",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 18,
            "original_position": 11,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799364610/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799364610",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799365647"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799365647"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n* the annotation of an attribute name.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T10:59:27Z",
            "diff_hunk": "@@ -9,20 +9,55 @@ Extension Types\n Introduction\n ==============\n \n+.. include::\n+    ../two-syntax-variants-used\n+\n As well as creating normal user-defined classes with the Python class\n statement, Cython also lets you create new built-in Python types, known as\n :term:`extension types<Extension type>`. You define an extension type using the :keyword:`cdef` class\n-statement.  Here's an example:\n+statement or decorating the class with ``@cclass`` decorator.  Here's an example:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n \n-.. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.py\n+\n+    .. group-tab:: Cython\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n \n As you can see, a Cython extension type definition looks a lot like a Python\n-class definition. Within it, you use the def statement to define methods that\n+class definition. Within it, you use the :keyword:`def` statement to define methods that\n can be called from Python code. You can even define many of the special\n methods such as :meth:`__init__` as you would in Python.\n \n-The main difference is that you can use the :keyword:`cdef` statement to define\n-attributes. The attributes may be Python objects (either generic or of a\n+The main difference is that you can define attributes using\n+\n+* the :keyword:`cdef` statement,\n+* the :func:`cython.declare()` function or\n+* the annotation of attribute.",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799365647",
            "id": 799365647,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpVoP",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 39,
            "original_position": 36,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799365647/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799365647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799368730"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799368730"
                }
            },
            "author_association": "MEMBER",
            "body": "Setting related words too far apart in a sentence makes it difficult to understand.\r\n```suggestion\r\n    Here, we *cimport* the class :class:`Shrubbery` (using the :keyword:`cimport` statement\r\n    or importing from special ``cython.cimports`` package) , and this is necessary\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:03:52Z",
            "diff_hunk": "@@ -107,18 +181,35 @@ will be very inefficient. If the attribute is private, it will not work at all\n The solution is to declare ``sh`` as being of type :class:`Shrubbery`, as\n follows:\n \n-.. literalinclude:: ../../examples/userguide/extension_types/widen_shrubbery.pyx\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/widen_shrubbery.py\n+\n+    .. group-tab:: Cython\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/widen_shrubbery.pyx\n \n Now the Cython compiler knows that ``sh`` has a C attribute called\n :attr:`width` and will generate code to access it directly and efficiently.\n The same consideration applies to local variables, for example:\n \n-.. literalinclude:: ../../examples/userguide/extension_types/shrubbery_2.pyx\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery_2.py\n+\n+    .. group-tab:: Cython\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery_2.pyx\n \n .. note::\n \n-    We here ``cimport`` the class :class:`Shrubbery`, and this is necessary\n-    to declare the type at compile time. To be able to ``cimport`` an extension type,\n+    We here *cimport* (using :keyword:`cimport` statement or importing from special\n+    ``cython.cimports`` package) the class :class:`Shrubbery`, and this is necessary",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799368730",
            "id": 799368730,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpWYa",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 211,
            "original_position": 177,
            "original_start_line": 210,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799368730/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799368730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799368981"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799368981"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nTo access its width I could write\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:04:15Z",
            "diff_hunk": "@@ -128,24 +219,61 @@ Type Testing and Casting\n ------------------------\n \n Suppose I have a method :meth:`quest` which returns an object of type :class:`Shrubbery`.\n-To access it's width I could write::\n+To access it's width I could write",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799368981",
            "id": 799368981,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpWcV",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 222,
            "original_position": 187,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799368981/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799368981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799369634"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799369634"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nextension type and its C-level attributes (stored in the object’s C struct) and\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:05:15Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799369634",
            "id": 799369634,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpWmi",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 286,
            "original_position": 256,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799369634/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799369634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799370401"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799370401"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nCython handles :keyword:`None` values differently in C-like type declarations and when Python annotations are used.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:06:26Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799370401",
            "id": 799370401,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpWyh",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 294,
            "original_position": 266,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799370401/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799370401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799372636"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799372636"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nIn :keyword:`cdef` declarations and C-like function argument declarations (``func(list x)``),\r\nwhen you declare an argument or C variable as having an extension or Python builtin type,\r\nCython will allow it to take on the value :keyword:`None` as well as values of its\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:09:50Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799372636",
            "id": 799372636,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpXVc",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 297,
            "original_position": 269,
            "original_start_line": 296,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799372636/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799372636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799375504"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799375504"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nWhen annotations are used, the behaviour follows the Python typing semantics of\r\n`PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_ instead.\r\nThe value :keyword:`None` is not allowed when a variable is annotated only with its plain type.\r\nTo allow also :keyword:`None`, ``typing.Optional[ ]`` must be used explicitly.\r\nFor function arguments, this is also automatically allowed when they have a\r\ndefault argument of :keyword:`None`, e.g. ``func(x: list = None)`` does not require ``typing.Optional``.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:14:04Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799375504",
            "id": 799375504,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpYCQ",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 308,
            "original_position": 284,
            "original_start_line": 306,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799375504/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799375504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799377641"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799377641"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nThe upside of using annotations here is that they are safe by default because\r\nyou need to explicitly allow :keyword:`None` values for them.\r\nWith the C-like declaration syntax, you need to be particularly careful when\r\nexposing Python functions which take extension types as arguments:\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:17:16Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799377641",
            "id": 799377641,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpYjp",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 312,
            "original_position": 288,
            "original_start_line": 310,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799377641/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799377641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799379863"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799379863"
                }
            },
            "author_association": "MEMBER",
            "body": "This example is not clear as it stands. I think we should instead remove the tabs here and show both variants in direct comparison, in the same way as we directly compare them in the text before. This variant also shouldn't use `Optional[]` since that's the key difference that we explained and now try to illustrate with these examples.\r\n\r\nThe same applies to the following few examples, I think. Whenever we compare syntax variants and their semantics, we should show all variants.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:20:43Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799379863",
            "id": 799379863,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpZGX",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 323,
            "original_position": 302,
            "original_start_line": 322,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799379863/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799379863",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799387386"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799387386"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think \"the Cython language\" is a good description. The distinction that you are trying to draw here is not about the language in general (which includes all of Python, including decorators and annotations) but only about two specific syntax constructs: `cdef` variable declarations and C-like function argument declarations. These terms may seem lengthy in comparison, but this is documentation, not a poem. For someone learning Cython for the first time, there are so many concepts to grasp and distinguish that each piece of information that the documentation delivers should clearly fall into one of those concept buckets for the reader, or help in drawing a line between concepts. Repetition is fine, long wordings are also ok, as long as both help with clarity and consistency.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:32:19Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh, extra_width): # This is\n+                sh.width = sh.width + extra_width           # dangerous!\n+\n+The users of our module could crash it by passing :keyword:`None` for the ``sh``\n parameter.\n \n-One way to fix this would be::\n+In the Cython language, one way to fix this would be to check :keyword:`None` value:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799387386",
            "id": 799387386,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpa76",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 335,
            "original_position": 315,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799387386/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799387386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799388999"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799388999"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nAs in Python, whenever it is unclear whether a variable can be :keyword:`None`,\r\nbut the code requires a non-None value, an explicit check can help:\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:35:04Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh, extra_width): # This is\n+                sh.width = sh.width + extra_width           # dangerous!\n+\n+The users of our module could crash it by passing :keyword:`None` for the ``sh``\n parameter.\n \n-One way to fix this would be::\n+In the Cython language, one way to fix this would be to check :keyword:`None` value:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799388999",
            "id": 799388999,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpbVH",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 335,
            "original_position": 315,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799388999/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799388999",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799396905"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799396905"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:47:34Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh, extra_width): # This is\n+                sh.width = sh.width + extra_width           # dangerous!\n+\n+The users of our module could crash it by passing :keyword:`None` for the ``sh``\n parameter.\n \n-One way to fix this would be::\n+In the Cython language, one way to fix this would be to check :keyword:`None` value:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            from typing import Optional\n+\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width):\n+                if sh is None:\n+                    raise TypeError\n+                sh.width = sh.width + extra_width\n+\n+    .. group-tab:: Cython\n \n-    def widen_shrubbery(Shrubbery sh, extra_width):\n-        if sh is None:\n-            raise TypeError\n-        sh.width = sh.width + extra_width\n+        .. code-block:: cython\n \n-but since this is anticipated to be such a frequent requirement, Cython\n+            def widen_shrubbery(Shrubbery sh, extra_width):\n+                if sh is None:\n+                    raise TypeError\n+                sh.width = sh.width + extra_width\n+\n+but since this is anticipated to be such a frequent requirement, Cython language\n provides a more convenient way. Parameters of a Python function declared as an\n-extension type can have a ``not None`` clause::\n+extension type can have a ``not None`` clause:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            def widen_shrubbery(sh: Shrubbery, extra_width):\n+                sh.width = sh.width + extra_width\n \n-    def widen_shrubbery(Shrubbery sh not None, extra_width):\n-        sh.width = sh.width + extra_width\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh not None, extra_width):\n+                sh.width = sh.width + extra_width\n \n Now the function will automatically check that ``sh`` is ``not None`` along\n with checking that it has the right type.\n \n .. note::\n \n-    ``not None`` clause can only be used in Python functions (defined with\n-    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).  If\n+    ``not None`` and ``typing.Annotation`` clause can only be used in Python functions (defined with",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799396905",
            "id": 799396905,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpdQp",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 384,
            "original_position": 374,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799396905/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799396905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799398334"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799398334"
                }
            },
            "author_association": "MEMBER",
            "body": "This sentence lacks an object. What can be used?",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:49:25Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh, extra_width): # This is\n+                sh.width = sh.width + extra_width           # dangerous!\n+\n+The users of our module could crash it by passing :keyword:`None` for the ``sh``\n parameter.\n \n-One way to fix this would be::\n+In the Cython language, one way to fix this would be to check :keyword:`None` value:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            from typing import Optional\n+\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width):\n+                if sh is None:\n+                    raise TypeError\n+                sh.width = sh.width + extra_width\n+\n+    .. group-tab:: Cython\n \n-    def widen_shrubbery(Shrubbery sh, extra_width):\n-        if sh is None:\n-            raise TypeError\n-        sh.width = sh.width + extra_width\n+        .. code-block:: cython\n \n-but since this is anticipated to be such a frequent requirement, Cython\n+            def widen_shrubbery(Shrubbery sh, extra_width):\n+                if sh is None:\n+                    raise TypeError\n+                sh.width = sh.width + extra_width\n+\n+but since this is anticipated to be such a frequent requirement, Cython language\n provides a more convenient way. Parameters of a Python function declared as an\n-extension type can have a ``not None`` clause::\n+extension type can have a ``not None`` clause:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            def widen_shrubbery(sh: Shrubbery, extra_width):\n+                sh.width = sh.width + extra_width\n \n-    def widen_shrubbery(Shrubbery sh not None, extra_width):\n-        sh.width = sh.width + extra_width\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh not None, extra_width):\n+                sh.width = sh.width + extra_width\n \n Now the function will automatically check that ``sh`` is ``not None`` along\n with checking that it has the right type.\n \n .. note::\n \n-    ``not None`` clause can only be used in Python functions (defined with\n-    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).  If\n+    ``not None`` and ``typing.Annotation`` clause can only be used in Python functions (defined with\n+    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n+    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n     you need to check whether a parameter to a C function is None, you will\n     need to do it yourself.\n \n+    On the other hand,  can be used also for C functions and methods\n+    (decorated using ``@cython.cfunc``)",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799398334",
            "id": 799398334,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpdm-",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 391,
            "original_position": 381,
            "original_start_line": 390,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799398334/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799398334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799401063"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799401063"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not always sure that it's good to remove the colons (`:`) in the end completely. At least sometimes it would be good to leave one there as a forward reference to the code that follows. In any case, sentences should generally end with a punctuation mark, be it a dot or a colon.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:53:53Z",
            "diff_hunk": "@@ -232,23 +416,50 @@ extension types.\n Properties\n ============\n \n-You can declare properties in an extension class using the same syntax as in ordinary Python code::\n+You can declare properties in an extension class using the same syntax as in ordinary Python code",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799401063",
            "id": 799401063,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpeRn",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 419,
            "original_position": 400,
            "original_start_line": 235,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799401063/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799401063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799403356"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799403356"
                }
            },
            "author_association": "MEMBER",
            "body": "We are talking about a specific package here, so it needs a definite article (\"the\").\r\n```suggestion\r\n:keyword:`cimport` statement or importing from the special ``cython.cimports`` package.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:57:33Z",
            "diff_hunk": "@@ -328,20 +514,38 @@ Subclassing\n =============\n \n If an extension type inherits from other types, the first base class must be\n-a built-in type or another extension type::\n+a built-in type or another extension type\n \n-    cdef class Parrot:\n-        ...\n+.. tabs::\n \n-    cdef class Norwegian(Parrot):\n-        ...\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Parrot:\n+                ...\n+\n+            @cython.cclass\n+            class Norwegian(Parrot):\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef class Parrot:\n+                ...\n+\n+            cdef class Norwegian(Parrot):\n+                ...\n \n \n A complete definition of the base type must be available to Cython, so if the\n base type is a built-in type, it must have been previously declared as an\n extern extension type. If the base type is defined in another Cython module, it\n must either be declared as an extern extension type or imported using the\n-:keyword:`cimport` statement.\n+:keyword:`cimport` statement or importing from special ``cython.cimports`` package.",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799403356",
            "id": 799403356,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpe1c",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 548,
            "original_position": 549,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799403356/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799403356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799404808"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799404808"
                }
            },
            "author_association": "MEMBER",
            "body": "Python is a name, not an adjective.\r\n```suggestion\r\nextension types. In addition, :keyword:`cpdef`/``@ccall`` methods can even be overridden by Python\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T11:59:57Z",
            "diff_hunk": "@@ -375,32 +596,25 @@ C methods\n =========\n \n Extension types can have C methods as well as Python methods. Like C\n-functions, C methods are declared using :keyword:`cdef` or :keyword:`cpdef` instead of\n-:keyword:`def`. C methods are \"virtual\", and may be overridden in derived\n-extension types. In addition, :keyword:`cpdef` methods can even be overridden by python\n-methods when called as C method. This adds a little to their calling overhead\n-compared to a :keyword:`cdef` method::\n+functions, C methods are declared using\n \n-    # pets.pyx\n-    cdef class Parrot:\n+* :keyword:`cdef` instead of :keyword:`def` or ``@cfunc`` decorator for *C methods*, or\n+* :keyword:`cpdef` instead of :keyword:`def` or ``@ccall`` decorator for *hybrid methods*.\n \n-        cdef void describe(self):\n-            print(\"This parrot is resting.\")\n+C methods are \"virtual\", and may be overridden in derived\n+extension types. In addition, :keyword:`cpdef`/``@ccall`` methods can even be overridden by python",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799404808",
            "id": 799404808,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpfMI",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 605,
            "original_position": 608,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799404808/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799404808",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799408468"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799408468"
                }
            },
            "author_association": "MEMBER",
            "body": "This would normally be a classical example for a `@classmethod` and not a `@staticmethod`. I hope there is a test that this actually works (not just compiles but actually runs correctly), but since documentation should always aim to show best practices, I would suggest switching to `@classmethod` here and using the `cls` argument for the instantiation to nicely support subclassing.\r\n\r\nAccordingly, the longer example below about factory methods would be a good candidate for `@classmethod` as well, but since it also shows the usage of `.__new__()`, which is only fast when the types are known at compile time, I'm not sure if it should. Not sure what Cython does for `cls.__new__(cls)` – probably nothing special, but worth testing out. Could be a missed opportunity for an optimisation in class methods.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T12:05:46Z",
            "diff_hunk": "@@ -416,22 +630,19 @@ method using the usual Python technique, i.e.::\n \n     Parrot.describe(self)\n \n-`cdef` methods can be declared static by using the @staticmethod decorator.\n+:keyword:`cdef`/``@ccall`` methods can be declared static by using the ``@staticmethod`` decorator.\n This can be especially useful for constructing classes that take non-Python\n-compatible types.::\n+compatible types.:\n+\n+.. tabs::\n \n-    cdef class OwnedPointer:\n-        cdef void* ptr\n+    .. group-tab:: Pure Python\n \n-        def __dealloc__(self):\n-            if self.ptr is not NULL:\n-                free(self.ptr)\n+        .. literalinclude:: ../../examples/userguide/extension_types/owned_pointer.py\n \n-        @staticmethod\n-        cdef create(void* ptr):\n-            p = OwnedPointer()\n-            p.ptr = ptr\n-            return p",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799408468",
            "id": 799408468,
            "line": 434,
            "node_id": "PRRC_kwDOABDGAc4vpgFU",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 434,
            "original_position": 660,
            "original_start_line": 430,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 621,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799408468/reactions"
            },
            "side": "LEFT",
            "start_line": 430,
            "start_side": "LEFT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799408468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799421633"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799421633"
                }
            },
            "author_association": "MEMBER",
            "body": "This note should either be left out, or explain that this is not a draw-back because forward-declaring types is not necessary at all. As it stands, it reads like a missing feature.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T12:25:47Z",
            "diff_hunk": "@@ -453,26 +664,29 @@ definition, for example,::\n     cdef class A(B):\n         # attributes and methods\n \n+.. note::\n+\n+    Cython currently does not support Forward-declaring extension types\n+    in Pure Python mode.\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799421633",
            "id": 799421633,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpjTB",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 671,
            "original_position": 675,
            "original_start_line": 667,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799421633/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799421633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799422199"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799422199"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nstatically sized freelist of ``N`` instances for a given type.  Example:\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T12:26:40Z",
            "diff_hunk": "@@ -484,19 +698,17 @@ types.\n The second performance improvement applies to types that are often created\n and deleted in a row, so that they can benefit from a freelist.  Cython\n provides the decorator ``@cython.freelist(N)`` for this, which creates a\n-statically sized freelist of ``N`` instances for a given type.  Example::\n+statically sized freelist of ``N`` instances for a given type.  Example",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799422199",
            "id": 799422199,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpjb3",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 701,
            "original_position": 711,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799422199/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799422199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799422609"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799422609"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nconstructors, this necessitates the use of factory functions or factory methods. For example, \r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T12:27:18Z",
            "diff_hunk": "@@ -507,63 +719,17 @@ It is quite common to want to instantiate an extension class from an existing\n (pointer to a) data structure, often as returned by external C/C++ functions.\n \n As extension classes can only accept Python objects as arguments in their\n-constructors, this necessitates the use of factory functions. For example, ::\n-\n-    from libc.stdlib cimport malloc, free\n-\n-    # Example C struct\n-    ctypedef struct my_c_struct:\n-        int a\n-        int b\n-\n-\n-    cdef class WrapperClass:\n-        \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n-        cdef my_c_struct *_ptr\n-        cdef bint ptr_owner\n-\n-        def __cinit__(self):\n-            self.ptr_owner = False\n-\n-        def __dealloc__(self):\n-            # De-allocate if not null and flag is set\n-            if self._ptr is not NULL and self.ptr_owner is True:\n-                free(self._ptr)\n-                self._ptr = NULL\n-\n-        # Extension class properties\n-        @property\n-        def a(self):\n-            return self._ptr.a if self._ptr is not NULL else None\n-\n-        @property\n-        def b(self):\n-            return self._ptr.b if self._ptr is not NULL else None\n-\n-        @staticmethod\n-        cdef WrapperClass from_ptr(my_c_struct *_ptr, bint owner=False):\n-            \"\"\"Factory function to create WrapperClass objects from\n-            given my_c_struct pointer.\n-\n-            Setting ``owner`` flag to ``True`` causes\n-            the extension type to ``free`` the structure pointed to by ``_ptr``\n-            when the wrapper object is deallocated.\"\"\"\n-            # Call to __new__ bypasses __init__ constructor\n-            cdef WrapperClass wrapper = WrapperClass.__new__(WrapperClass)\n-            wrapper._ptr = _ptr\n-            wrapper.ptr_owner = owner\n-            return wrapper\n-\n-        @staticmethod\n-        cdef WrapperClass new_struct():\n-            \"\"\"Factory function to create WrapperClass objects with\n-            newly allocated my_c_struct\"\"\"\n-            cdef my_c_struct *_ptr = <my_c_struct *>malloc(sizeof(my_c_struct))\n-            if _ptr is NULL:\n-                raise MemoryError\n-            _ptr.a = 0\n-            _ptr.b = 0\n-            return WrapperClass.from_ptr(_ptr, owner=True)\n+constructors, this necessitates the use of factory functions. For example, ",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799422609",
            "id": 799422609,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpjiR",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 722,
            "original_position": 795,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799422609/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799422609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r799427054"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/799427054"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    Cython currently does not support Extension types declared as extern or public\r\n    in Pure Python mode.  This is not considered an issue since public/extern extension\r\n    types are most commonly declared in `.pxd` files and not in `.py` files.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-04T12:34:15Z",
            "diff_hunk": "@@ -782,6 +1016,12 @@ declaration makes an extension type defined in external C code available to a\n Cython module. A public extension type declaration makes an extension type\n defined in a Cython module available to external C code.\n \n+.. note::\n+\n+    Cython currently does not support Extension types declared as extern or public\n+    in Pure Python mode.",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r799427054",
            "id": 799427054,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vpknu",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 1022,
            "original_position": 963,
            "original_start_line": 1021,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 872932473,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/799427054/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-04T12:51:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/799427054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r800085473"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/800085473"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I have removed the note.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-05T18:19:04Z",
            "diff_hunk": "@@ -453,26 +664,29 @@ definition, for example,::\n     cdef class A(B):\n         # attributes and methods\n \n+.. note::\n+\n+    Cython currently does not support Forward-declaring extension types\n+    in Pure Python mode.\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r800085473",
            "id": 800085473,
            "in_reply_to_id": 799421633,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vsFXh",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 671,
            "original_position": 675,
            "original_start_line": 667,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 873958181,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/800085473/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-05T18:19:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/800085473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r800087431"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/800087431"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This should be fixed.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-05T18:39:22Z",
            "diff_hunk": "@@ -232,23 +416,50 @@ extension types.\n Properties\n ============\n \n-You can declare properties in an extension class using the same syntax as in ordinary Python code::\n+You can declare properties in an extension class using the same syntax as in ordinary Python code",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r800087431",
            "id": 800087431,
            "in_reply_to_id": 799401063,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vsF2H",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 419,
            "original_position": 400,
            "original_start_line": 235,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 873959778,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/800087431/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-05T18:39:22Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/800087431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r800088682"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/800088682"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This was left by mistake. Removed.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-05T18:53:55Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh, extra_width): # This is\n+                sh.width = sh.width + extra_width           # dangerous!\n+\n+The users of our module could crash it by passing :keyword:`None` for the ``sh``\n parameter.\n \n-One way to fix this would be::\n+In the Cython language, one way to fix this would be to check :keyword:`None` value:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            from typing import Optional\n+\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width):\n+                if sh is None:\n+                    raise TypeError\n+                sh.width = sh.width + extra_width\n+\n+    .. group-tab:: Cython\n \n-    def widen_shrubbery(Shrubbery sh, extra_width):\n-        if sh is None:\n-            raise TypeError\n-        sh.width = sh.width + extra_width\n+        .. code-block:: cython\n \n-but since this is anticipated to be such a frequent requirement, Cython\n+            def widen_shrubbery(Shrubbery sh, extra_width):\n+                if sh is None:\n+                    raise TypeError\n+                sh.width = sh.width + extra_width\n+\n+but since this is anticipated to be such a frequent requirement, Cython language\n provides a more convenient way. Parameters of a Python function declared as an\n-extension type can have a ``not None`` clause::\n+extension type can have a ``not None`` clause:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            def widen_shrubbery(sh: Shrubbery, extra_width):\n+                sh.width = sh.width + extra_width\n \n-    def widen_shrubbery(Shrubbery sh not None, extra_width):\n-        sh.width = sh.width + extra_width\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh not None, extra_width):\n+                sh.width = sh.width + extra_width\n \n Now the function will automatically check that ``sh`` is ``not None`` along\n with checking that it has the right type.\n \n .. note::\n \n-    ``not None`` clause can only be used in Python functions (defined with\n-    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).  If\n+    ``not None`` and ``typing.Annotation`` clause can only be used in Python functions (defined with\n+    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n+    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n     you need to check whether a parameter to a C function is None, you will\n     need to do it yourself.\n \n+    On the other hand,  can be used also for C functions and methods\n+    (decorated using ``@cython.cfunc``)",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r800088682",
            "id": 800088682,
            "in_reply_to_id": 799398334,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4vsGJq",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 391,
            "original_position": 381,
            "original_start_line": 390,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 873960838,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/800088682/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-05T18:53:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/800088682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805212766"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805212766"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It seems that `@classmethod` is not supported with `cdef` methods:\r\n```\r\ncython -3a owned_pointer.pyx\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    def __dealloc__(self):\r\n        if self.ptr is not NULL:\r\n            free(self.ptr)\r\n\r\n\r\n    @classmethod\r\n   ^\r\n------------------------------------------------------------\r\n\r\nowned_pointer.pyx:13:4: Cdef functions cannot take arbitrary decorators.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n\r\n    @classmethod\r\n    cdef create(cls, void* ptr):\r\n        p = cls()\r\n        p.ptr = ptr\r\n               ^\r\n------------------------------------------------------------\r\n\r\nowned_pointer.pyx:16:16: Cannot convert 'void *' to Python object\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-12T22:48:09Z",
            "diff_hunk": "@@ -416,22 +630,19 @@ method using the usual Python technique, i.e.::\n \n     Parrot.describe(self)\n \n-`cdef` methods can be declared static by using the @staticmethod decorator.\n+:keyword:`cdef`/``@ccall`` methods can be declared static by using the ``@staticmethod`` decorator.\n This can be especially useful for constructing classes that take non-Python\n-compatible types.::\n+compatible types.:\n+\n+.. tabs::\n \n-    cdef class OwnedPointer:\n-        cdef void* ptr\n+    .. group-tab:: Pure Python\n \n-        def __dealloc__(self):\n-            if self.ptr is not NULL:\n-                free(self.ptr)\n+        .. literalinclude:: ../../examples/userguide/extension_types/owned_pointer.py\n \n-        @staticmethod\n-        cdef create(void* ptr):\n-            p = OwnedPointer()\n-            p.ptr = ptr\n-            return p",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805212766",
            "id": 805212766,
            "in_reply_to_id": 799408468,
            "line": 434,
            "node_id": "PRRC_kwDOABDGAc4v_pJe",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 434,
            "original_position": 660,
            "original_start_line": 430,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 621,
            "pull_request_review_id": 880896875,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805212766/reactions"
            },
            "side": "LEFT",
            "start_line": 430,
            "start_side": "LEFT",
            "updated_at": "2022-02-12T22:48:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805212766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805215022"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805215022"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I partially agree. What I consider challenging when writing documentation is lack of stable defined terms. Cython is complex language with a lot of constructs with different semantics - `cdef`/`@cfunc` functions, `cpdef`/`@ccall` functions, .... My personal opinion is that each term should be documented in glossary and documentation should have links to glossary when the term is used (at least for the first time).\r\n\r\nWhen we will have these terms it will be much easier to write documentation (and even write more clear code in cython itself since we can use this terms in classes/functions etc...). E.g. in documentation we have this horrific sentence:\r\n\r\n> C Functions declared using cdef or the `@cfunc` decorator with a Python object return type, like Python functions, will return a None value when execution leaves the function body without an explicit return value [1]\r\n\r\nThe cdef keyword was already defined above but since we did not name the special functions declared by `cdef` we need to describe (mention that the function is declared by cdef or `@cfunc` decorator) it every time. This is cumbersome and difficult to read. Instead, if during definition of cdef keyword name the construct name is defined (e.g. as *C-function* as an example) explicitly, we can reference it only by the name without mentioning the same all the time. Hence the sentence above will look as follows:\r\n\r\n> *C-Functions*  with a Python object return type, like Python functions, will return a None value when execution leaves the function body without an explicit return value\r\n\r\nSee that I have removed the detail about `cdef`/`@cfunc` since they are not needed. They were introduced during definition of term `C-function` and user can easily go back to term definition (or to glossary) and look up how c-function is declared in Cython.\r\n\r\n[1] https://cython.readthedocs.io/en/latest/src/userguide/language_basics.html#python-functions-vs-c-functions",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-12T23:18:04Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh, extra_width): # This is\n+                sh.width = sh.width + extra_width           # dangerous!\n+\n+The users of our module could crash it by passing :keyword:`None` for the ``sh``\n parameter.\n \n-One way to fix this would be::\n+In the Cython language, one way to fix this would be to check :keyword:`None` value:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805215022",
            "id": 805215022,
            "in_reply_to_id": 799387386,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4v_psu",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 335,
            "original_position": 315,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 880898445,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805215022/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-12T23:18:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805215022",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805307286"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805307286"
                }
            },
            "author_association": "MEMBER",
            "body": "We used to call them \"cdef functions\" because that's how they were defined and it was thus obvious to users what was meant. That was before we had \"@cfunc\". But it was also clearer because \"C function\" is ambiguous. Is it a function from an external library implemented in C? That is somewhat different from a \"cdef function\" implemented in Cython, even though in the end both are C functions. Depending on the context, this can be obvious to users or confusing. \"cdef function\" was a very concrete and clear term. Talking about \"Cython implemented C functions\" seems fairly verbose in contrast.\r\n\r\nI think, nowadays, \"C function\" is the term that we should use. Maybe not in all cases, but at least when it does not matter whether the function is implemented in Cython on in C. And it should be in the glossary, also mentioning the different names that people would find and the different ways to write it. Here's a proposal, up for debate:\r\n\r\n```\r\ncdef function – A Cython implemented -> C function\r\n\r\nC function – A function with C interface and calling semantics, either\r\n    implemented directly in Cython (sometimes referred to as \"cdef function\"),\r\n    or implemented in plain C and declared as \"extern\" for its usage in Cython code.\r\n\r\n    Cython code uses either the \"cdef\"  keyword or the \"@cfunc\" decorator when\r\n    implementing such a function.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-13T09:35:47Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh, extra_width): # This is\n+                sh.width = sh.width + extra_width           # dangerous!\n+\n+The users of our module could crash it by passing :keyword:`None` for the ``sh``\n parameter.\n \n-One way to fix this would be::\n+In the Cython language, one way to fix this would be to check :keyword:`None` value:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805307286",
            "id": 805307286,
            "in_reply_to_id": 799387386,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wAAOW",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 335,
            "original_position": 315,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 880957827,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805307286/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-13T09:36:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805307286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805307798"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805307798"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok, good to know. It should be possible to implement C class methods but would require a bit of work on the caller side since I think it should be the callers responsibility to pass the right class. And that means that the caller would have to know that it's calling a class method.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-13T09:39:57Z",
            "diff_hunk": "@@ -416,22 +630,19 @@ method using the usual Python technique, i.e.::\n \n     Parrot.describe(self)\n \n-`cdef` methods can be declared static by using the @staticmethod decorator.\n+:keyword:`cdef`/``@ccall`` methods can be declared static by using the ``@staticmethod`` decorator.\n This can be especially useful for constructing classes that take non-Python\n-compatible types.::\n+compatible types.:\n+\n+.. tabs::\n \n-    cdef class OwnedPointer:\n-        cdef void* ptr\n+    .. group-tab:: Pure Python\n \n-        def __dealloc__(self):\n-            if self.ptr is not NULL:\n-                free(self.ptr)\n+        .. literalinclude:: ../../examples/userguide/extension_types/owned_pointer.py\n \n-        @staticmethod\n-        cdef create(void* ptr):\n-            p = OwnedPointer()\n-            p.ptr = ptr\n-            return p",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805307798",
            "id": 805307798,
            "in_reply_to_id": 799408468,
            "line": 434,
            "node_id": "PRRC_kwDOABDGAc4wAAWW",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 434,
            "original_position": 660,
            "original_start_line": 430,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 621,
            "pull_request_review_id": 880958316,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805307798/reactions"
            },
            "side": "LEFT",
            "start_line": 430,
            "start_side": "LEFT",
            "updated_at": "2022-02-13T09:39:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805307798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805386775"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805386775"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "My point was mainly not about a name itself (name can be C function, cdef function, whatever we decide). My point was that we should define the names and put it in glossary with links to it. It will make documentation much easier to work with.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-13T16:56:34Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            def widen_shrubbery(Shrubbery sh, extra_width): # This is\n+                sh.width = sh.width + extra_width           # dangerous!\n+\n+The users of our module could crash it by passing :keyword:`None` for the ``sh``\n parameter.\n \n-One way to fix this would be::\n+In the Cython language, one way to fix this would be to check :keyword:`None` value:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805386775",
            "id": 805386775,
            "in_reply_to_id": 799387386,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wAToX",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 335,
            "original_position": 315,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 881020180,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805386775/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-13T20:26:17Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805386775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805410620"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805410620"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I have added note about that to documentation.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-13T20:25:44Z",
            "diff_hunk": "@@ -416,22 +630,19 @@ method using the usual Python technique, i.e.::\n \n     Parrot.describe(self)\n \n-`cdef` methods can be declared static by using the @staticmethod decorator.\n+:keyword:`cdef`/``@ccall`` methods can be declared static by using the ``@staticmethod`` decorator.\n This can be especially useful for constructing classes that take non-Python\n-compatible types.::\n+compatible types.:\n+\n+.. tabs::\n \n-    cdef class OwnedPointer:\n-        cdef void* ptr\n+    .. group-tab:: Pure Python\n \n-        def __dealloc__(self):\n-            if self.ptr is not NULL:\n-                free(self.ptr)\n+        .. literalinclude:: ../../examples/userguide/extension_types/owned_pointer.py\n \n-        @staticmethod\n-        cdef create(void* ptr):\n-            p = OwnedPointer()\n-            p.ptr = ptr\n-            return p",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805410620",
            "id": 805410620,
            "in_reply_to_id": 799408468,
            "line": 434,
            "node_id": "PRRC_kwDOABDGAc4wAZc8",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 434,
            "original_position": 660,
            "original_start_line": 430,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 621,
            "pull_request_review_id": 881039892,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805410620/reactions"
            },
            "side": "LEFT",
            "start_line": 430,
            "start_side": "LEFT",
            "updated_at": "2022-02-13T20:25:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805410620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805417304"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805417304"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Changes pushed in latest commit",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-13T21:25:11Z",
            "diff_hunk": "@@ -155,64 +283,120 @@ For known builtin or extension types, Cython translates these into a\n fast and safe type check that ignores changes to\n the object's ``__class__`` attribute etc., so that after a successful\n :meth:`isinstance` test, code can rely on the expected C structure of the\n-extension type and its :keyword:`cdef` attributes and methods.\n+extension type and its C-level attributes (stored in object’s C struct.) and\n+:keyword:`cdef`/``@cfunc`` methods.\n \n .. _extension_types_and_none:\n \n Extension types and None\n =========================\n \n-When you declare a parameter or C variable as being of an extension type,\n-Cython will allow it to take on the value ``None`` as well as values of its\n+Cython handles :keyword:`None` values differently in Cython language and when annotations are used.\n+\n+In the Cython language, when you declare a parameter or C variable as being of an extension type,\n+Cython language will allow it to take on the value :keyword:`None` as well as values of its\n declared type. This is analogous to the way a C pointer can take on the value\n ``NULL``, and you need to exercise the same caution because of it. There is no\n problem as long as you are performing Python operations on it, because full\n dynamic type checking will be applied. However, when you access C attributes\n of an extension type (as in the widen_shrubbery function above), it's up to\n-you to make sure the reference you're using is not ``None`` -- in the\n+you to make sure the reference you're using is not :keyword:`None` -- in the\n interests of efficiency, Cython does not check this.\n \n-You need to be particularly careful when exposing Python functions which take\n-extension types as arguments. If we wanted to make :func:`widen_shrubbery` a\n-Python function, for example, if we simply wrote::\n+When annotations are used, the behaviour is close to `PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_.\n+The value :keyword:`None` is not allowed when variable is annotated only by type. To allow also :keyword:`None` value,\n+``typing.Optional`` must be used.\n+\n+In the Cython language, you need to be particularly careful when exposing Python functions which take\n+on the other hand, annotations are safe since you need to explicitly enable :keyword:`None` value.\n+extension types as arguments:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n \n-    def widen_shrubbery(Shrubbery sh, extra_width): # This is\n-        sh.width = sh.width + extra_width           # dangerous!\n+            from typing import Optional\n \n-then users of our module could crash it by passing ``None`` for the ``sh``\n+            def widen_shrubbery(sh: Optional[Shrubbery], extra_width): # This is\n+                sh.width = sh.width + extra_width                      # dangerous!",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805417304",
            "id": 805417304,
            "in_reply_to_id": 799379863,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wAbFY",
            "original_commit_id": "2ab987b0591081db223379cd40d5b009a8329b15",
            "original_line": 323,
            "original_position": 302,
            "original_start_line": 322,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 881045753,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805417304/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-02-13T21:25:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805417304",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805426684"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805426684"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm. Was this really wrong? I'm not sure if we allow `Optional[]` in C functions. And if it has an effect if we do.\r\n(BTW, it's \"The ... clause\", because it's a specific one.)",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-13T22:44:02Z",
            "diff_hunk": "@@ -355,9 +355,10 @@ you need to explicitly allow :keyword:`None` values for them.\n \n .. note::\n \n-    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\n-    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n-    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n+    ``not None`` clause can only be used in Python functions (defined with\n+    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).\n+    Type annotations can be used in either Python functions and C functions,\n+    but :keyword:`None` value is not checked when used in C functions. If",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805426684",
            "id": 805426684,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wAdX8",
            "original_commit_id": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "original_line": 361,
            "original_position": 10,
            "original_start_line": 358,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 881054565,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805426684/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-13T22:44:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805426684",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805436627"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805436627"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes it works:\r\n```python\r\nimport typing\r\nimport cython\r\n\r\n@cython.cclass\r\nclass Bar:\r\n    i: cython.int\r\n\r\n    def __init__(self, i):\r\n        self.i = i\r\n\r\n@cython.cfunc\r\ndef foo(bar: typing.Optional[Bar]) -> cython.int:\r\n    if bar is None:\r\n        return -2\r\n    return bar.i * 2\r\n\r\nprint(foo(Bar(1)))\r\nprint(foo(None))\r\n```\r\n```\r\n$ python -c 'import test'\r\n2\r\n-2\r\n```\r\nBasically, the behaviour is following for typing annotations:\r\n* if python function + non-Optional type (`Bar`) -> parameter enforces non-None value\r\n* if python function + Optional type (`Optional[Bar]`) -> parameter allows None value\r\n* if `@cfunc` function + non-Optional type (`Bar`) -> parameter **allows** None value\r\n* if `@cfunc` function + Optional type (`Optional[Bar]`) -> parameter **allows** None value",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-14T00:02:23Z",
            "diff_hunk": "@@ -355,9 +355,10 @@ you need to explicitly allow :keyword:`None` values for them.\n \n .. note::\n \n-    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\n-    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n-    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n+    ``not None`` clause can only be used in Python functions (defined with\n+    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).\n+    Type annotations can be used in either Python functions and C functions,\n+    but :keyword:`None` value is not checked when used in C functions. If",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805436627",
            "id": 805436627,
            "in_reply_to_id": 805426684,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wAfzT",
            "original_commit_id": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "original_line": 361,
            "original_position": 10,
            "original_start_line": 358,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 881064785,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805436627/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-14T00:07:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805436627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r805437752"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/805437752"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> (BTW, it's \"The ... clause\", because it's a specific one.)\r\n\r\nfixed",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-14T00:10:43Z",
            "diff_hunk": "@@ -355,9 +355,10 @@ you need to explicitly allow :keyword:`None` values for them.\n \n .. note::\n \n-    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\n-    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n-    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n+    ``not None`` clause can only be used in Python functions (defined with\n+    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).\n+    Type annotations can be used in either Python functions and C functions,\n+    but :keyword:`None` value is not checked when used in C functions. If",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r805437752",
            "id": 805437752,
            "in_reply_to_id": 805426684,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wAgE4",
            "original_commit_id": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "original_line": 361,
            "original_position": 10,
            "original_start_line": 358,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 881066253,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/805437752/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-14T00:10:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/805437752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r806116949"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/806116949"
                }
            },
            "author_association": "MEMBER",
            "body": "That used to be the original behaviour, though. Slightly extending your example shows that `Optional` is not taken into account here:\r\n```python\r\nimport typing\r\nimport cython\r\n\r\n@cython.cclass\r\nclass Bar:\r\n    i: cython.int\r\n\r\n    def __init__(self, i):\r\n        self.i = i\r\n\r\n@cython.cfunc\r\ndef foo_nonopt(bar: Bar) -> cython.int:\r\n    if bar is None:\r\n        return -2\r\n    return bar.i * 2\r\n\r\n@cython.cfunc\r\ndef foo_opt(bar: typing.Optional[Bar]) -> cython.int:\r\n    if bar is None:\r\n        return -2\r\n    return bar.i * 2\r\n\r\nprint(foo_opt(Bar(1)))\r\nprint(foo_opt(None))\r\n\r\nprint(foo_nonopt(Bar(1)))\r\nprint(foo_nonopt(None))\r\n```\r\nOutput is:\r\n```\r\n2\r\n-2\r\n2\r\n-2\r\n```\r\nNot sure what to do here for the time being. We'd better not let users run into this trap.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-14T18:15:29Z",
            "diff_hunk": "@@ -355,9 +355,10 @@ you need to explicitly allow :keyword:`None` values for them.\n \n .. note::\n \n-    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\n-    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n-    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n+    ``not None`` clause can only be used in Python functions (defined with\n+    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).\n+    Type annotations can be used in either Python functions and C functions,\n+    but :keyword:`None` value is not checked when used in C functions. If",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r806116949",
            "id": 806116949,
            "in_reply_to_id": 805426684,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wDF5V",
            "original_commit_id": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "original_line": 361,
            "original_position": 10,
            "original_start_line": 358,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 882018886,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/806116949/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-14T18:15:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/806116949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r806192547"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/806192547"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Not sure what to do here for the time being. We'd better not let users run into this trap.\r\n\r\nI agree it is difficult situation.I think in case of:\r\n\r\n```python\r\n@cython.cfunc\r\ndef foo_nonopt(bar: Bar) -> cython.int:\r\n```\r\nwe should raise a warning explaining that `None` value is not checked. Maybe we can propose a fix to the user in that warning. @da-woods what do you think?",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-14T19:58:25Z",
            "diff_hunk": "@@ -355,9 +355,10 @@ you need to explicitly allow :keyword:`None` values for them.\n \n .. note::\n \n-    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\n-    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n-    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n+    ``not None`` clause can only be used in Python functions (defined with\n+    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).\n+    Type annotations can be used in either Python functions and C functions,\n+    but :keyword:`None` value is not checked when used in C functions. If",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r806192547",
            "id": 806192547,
            "in_reply_to_id": 805426684,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wDYWj",
            "original_commit_id": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "original_line": 361,
            "original_position": 10,
            "original_start_line": 358,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 882122489,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/806192547/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-14T20:02:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/806192547",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r806212252"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/806212252"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was thinking. Cython currently does not detect `@exceptval` decorator:\r\n```python\r\n@cython.exceptval(check=True)\r\n@cython.cfunc\r\ndef foo_nonopt(bar: Bar) -> cython.int:\r\n# We can now check None value of bar and raise exception when has None value\r\n...\r\n```\r\nIn this case if cython detects problematic cdef function:\r\n```python\r\n@cython.cfunc\r\ndef foo_nonopt(bar: Bar) -> cython.int:\r\n```\r\nWe can print an warning (even maybe error - not sure) during compilation like this:\r\n```\r\nWARNING: C function cannot guarantee non-None value of parameter 'bar'.\r\nYou should use Optional[] type to allow None values or add @exceptval decorator\r\nto allow propagate exceptions.\r\n```\r\n\r\n**Edit**: Now as I am thinking more and more about it, I think we should enforce user to or use `Optional[]` type to allow pass None values or add `@exceptval` decorator to propagate exception. \r\nAdditional reason is that it is easier to relax this constrain  if we will find it wrong than opposite way.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-14T20:26:52Z",
            "diff_hunk": "@@ -355,9 +355,10 @@ you need to explicitly allow :keyword:`None` values for them.\n \n .. note::\n \n-    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\n-    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n-    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n+    ``not None`` clause can only be used in Python functions (defined with\n+    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).\n+    Type annotations can be used in either Python functions and C functions,\n+    but :keyword:`None` value is not checked when used in C functions. If",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r806212252",
            "id": 806212252,
            "in_reply_to_id": 805426684,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wDdKc",
            "original_commit_id": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "original_line": 361,
            "original_position": 10,
            "original_start_line": 358,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 882149800,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/806212252/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-14T20:41:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/806212252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r808498625"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/808498625"
                }
            },
            "author_association": "MEMBER",
            "body": "A warning sounds too annoying here. The code will be fine in too many cases, and users won't have a good way to resolve the issue anyway. Let's at least revert the documentation change, because `Optional` really isn't supported here.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-16T22:14:49Z",
            "diff_hunk": "@@ -355,9 +355,10 @@ you need to explicitly allow :keyword:`None` values for them.\n \n .. note::\n \n-    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\n-    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n-    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n+    ``not None`` clause can only be used in Python functions (defined with\n+    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).\n+    Type annotations can be used in either Python functions and C functions,\n+    but :keyword:`None` value is not checked when used in C functions. If",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r808498625",
            "id": 808498625,
            "in_reply_to_id": 805426684,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wMLXB",
            "original_commit_id": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "original_line": 361,
            "original_position": 10,
            "original_start_line": 358,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 885206316,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/808498625/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-16T22:14:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/808498625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r809441700"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/809441700"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Let's at least revert the documentation change\r\n\r\ndone.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-17T20:28:11Z",
            "diff_hunk": "@@ -355,9 +355,10 @@ you need to explicitly allow :keyword:`None` values for them.\n \n .. note::\n \n-    ``not None`` and ``typing.Optional`` can only be used in Python functions (defined with\n-    :keyword:`def` and without ``@cython.cfunc`` decorator) and not C functions\n-    (defined with :keyword:`cdef` or decorated using ``@cython.cfunc``).  If\n+    ``not None`` clause can only be used in Python functions (defined with\n+    :keyword:`def`) and not C functions (defined with :keyword:`cdef`).\n+    Type annotations can be used in either Python functions and C functions,\n+    but :keyword:`None` value is not checked when used in C functions. If",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r809441700",
            "id": 809441700,
            "in_reply_to_id": 805426684,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc4wPxmk",
            "original_commit_id": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "original_line": 361,
            "original_position": 10,
            "original_start_line": 358,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 886515090,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/809441700/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2022-02-17T20:28:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/809441700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r809482995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/809482995"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not sure what the best way to present this is. The only line in the old-style syntax was:\r\n\r\n```\r\n# fields can also be declared using `cdef\r\ncdef str c\r\nc = \"hello\"  # assignment of default value on a separate line\r\n```\r\n\r\nwith every other line in the new-style syntax. The way it was written was designed to show both in a single example, which I think is probably fine?",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-17T21:30:10Z",
            "diff_hunk": "@@ -0,0 +1,21 @@\n+import cython\n+try:\n+    import typing\n+    import dataclasses\n+except ImportError:\n+    pass  # The modules don't actually have to exists for Cython to use them as annotations\n+\n+@cython.dataclasses.dataclass\n+@cython.cclass\n+class MyDataclass:\n+    # fields can be declared using annotations\n+    a: cython.int = 0\n+    b: double = cython.dataclasses.field(default_factory = lambda: 10, repr=False)\n+\n+\n+    c: str = 'hello'",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r809482995",
            "id": 809482995,
            "line": 16,
            "node_id": "PRRC_kwDOABDGAc4wP7rz",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 16,
            "original_position": 16,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/dataclass.py",
            "position": 16,
            "pull_request_review_id": 886575211,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/809482995/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-17T21:30:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/809482995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r809504488"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/809504488"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> with every other line in the new-style syntax.\r\n\r\nYes and no. In the example also constructs `cimport` and `cdef class` are used (Yes I know that they are not connected to directly to dataclass).\r\n\r\n> The way it was written was designed to show both in a single example, which I think is probably fine?\r\n\r\nI was also puzzled. I liked the idea to show that author can mix both syntaxes. But on the other hand, I wanted to show example using only python syntax. I think it make sense to show user whole example done in python syntax only - this is how we started to build the documentation.\r\n\r\nI would like to hear @scoder opinion. In worst case, I will just revert the commit.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-17T22:01:57Z",
            "diff_hunk": "@@ -0,0 +1,21 @@\n+import cython\n+try:\n+    import typing\n+    import dataclasses\n+except ImportError:\n+    pass  # The modules don't actually have to exists for Cython to use them as annotations\n+\n+@cython.dataclasses.dataclass\n+@cython.cclass\n+class MyDataclass:\n+    # fields can be declared using annotations\n+    a: cython.int = 0\n+    b: double = cython.dataclasses.field(default_factory = lambda: 10, repr=False)\n+\n+\n+    c: str = 'hello'",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r809504488",
            "id": 809504488,
            "in_reply_to_id": 809482995,
            "line": 16,
            "node_id": "PRRC_kwDOABDGAc4wQA7o",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 16,
            "original_position": 16,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/dataclass.py",
            "position": 16,
            "pull_request_review_id": 886608873,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/809504488/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-17T22:02:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/809504488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r809509587"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/809509587"
                }
            },
            "author_association": "MEMBER",
            "body": "> In the example also constructs cimport and cdef class are used\r\n\r\nYou're right - I missed those.\r\n\r\nI think with Cython dataclasses we're expecting people to use annotation syntax (even in \"Cython\" mode) just because that's closer to Python dataclasses. So I really only wanted a quick note to say \"you can use cdef attributes if you like\"\r\n\r\nIt's probably fine as you have it though - I don't feel too strongly about it.\r\n",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-17T22:09:13Z",
            "diff_hunk": "@@ -0,0 +1,21 @@\n+import cython\n+try:\n+    import typing\n+    import dataclasses\n+except ImportError:\n+    pass  # The modules don't actually have to exists for Cython to use them as annotations\n+\n+@cython.dataclasses.dataclass\n+@cython.cclass\n+class MyDataclass:\n+    # fields can be declared using annotations\n+    a: cython.int = 0\n+    b: double = cython.dataclasses.field(default_factory = lambda: 10, repr=False)\n+\n+\n+    c: str = 'hello'",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r809509587",
            "id": 809509587,
            "in_reply_to_id": 809482995,
            "line": 16,
            "node_id": "PRRC_kwDOABDGAc4wQCLT",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 16,
            "original_position": 16,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/dataclass.py",
            "position": 16,
            "pull_request_review_id": 886615199,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/809509587/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-17T22:09:14Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/809509587",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r813380525"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/813380525"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Oh, @matusvalo  .. that's so nice of you that now you give more attention to the alignment, so cool!\r\nSorry, I couldn't resist making this comment 😅",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-23T22:28:53Z",
            "diff_hunk": "@@ -0,0 +1,36 @@\n+ \n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r813380525",
            "id": 813380525,
            "line": 3,
            "node_id": "PRRC_kwDOABDGAc4wezOt",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 3,
            "original_position": 3,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/cheesy.pyx",
            "position": 3,
            "pull_request_review_id": 891773092,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/813380525/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-23T22:29:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/813380525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r813565920"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/813565920"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I am getting better every day.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-02-24T05:50:22Z",
            "diff_hunk": "@@ -0,0 +1,36 @@\n+ \n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r813565920",
            "id": 813565920,
            "in_reply_to_id": 813380525,
            "line": 3,
            "node_id": "PRRC_kwDOABDGAc4wfgfg",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 3,
            "original_position": 3,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/cheesy.pyx",
            "position": 3,
            "pull_request_review_id": 892005876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/813565920/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-02-24T05:50:22Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/813565920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r906665998"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/906665998"
                }
            },
            "author_association": "MEMBER",
            "body": "1. We aren't normally putting `import cython` in these I think?\r\n2. It doesn't quite line up with the pyx file. I think it will if you remove one of these two lines `import cython`",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-06-25T10:30:39Z",
            "diff_hunk": "@@ -1,4 +1,5 @@\n-from __future__ import print_function\n+import cython\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r906665998",
            "id": 906665998,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42CqAO",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 2,
            "original_position": 3,
            "original_start_line": 1,
            "path": "docs/examples/userguide/extension_types/shrubbery.py",
            "position": null,
            "pull_request_review_id": 1019294502,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/906665998/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-06-25T11:00:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/906665998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r906666287"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/906666287"
                }
            },
            "author_association": "MEMBER",
            "body": "It'd be good to insert a new line above `cdef class Shrubbery`.\r\n\r\nAlthough \"no, that's too hard to do in markdown\" may be an acceptable answer here!",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-06-25T10:33:27Z",
            "diff_hunk": "@@ -9,20 +9,55 @@ Extension Types\n Introduction\n ==============\n \n+.. include::\n+    ../two-syntax-variants-used\n+\n As well as creating normal user-defined classes with the Python class\n statement, Cython also lets you create new built-in Python types, known as\n :term:`extension types<Extension type>`. You define an extension type using the :keyword:`cdef` class\n-statement.  Here's an example:\n+statement or decorating the class with the ``@cclass`` decorator.  Here's an example:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.py\n+\n+    .. group-tab:: Cython\n \n-.. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n \n As you can see, a Cython extension type definition looks a lot like a Python\n-class definition. Within it, you use the def statement to define methods that\n+class definition. Within it, you use the :keyword:`def` statement to define methods that\n can be called from Python code. You can even define many of the special\n methods such as :meth:`__init__` as you would in Python.\n \n-The main difference is that you can use the :keyword:`cdef` statement to define\n-attributes. The attributes may be Python objects (either generic or of a\n+The main difference is that you can define attributes using\n+\n+* the :keyword:`cdef` statement,\n+* the :func:`cython.declare()` function or\n+* the annotation of an attribute name.\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Shrubbery:\n+                width = declare(cython.int)\n+                height: cython.int\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef class Shrubbery:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r906666287",
            "id": 906666287,
            "line": 56,
            "node_id": "PRRC_kwDOABDGAc42CqEv",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 56,
            "original_position": 53,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 53,
            "pull_request_review_id": 1019294502,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/906666287/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-06-25T11:00:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/906666287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r906666651"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/906666651"
                }
            },
            "author_association": "MEMBER",
            "body": "At least when building on locally on my PC it seems to be dropping these three blank lines unfortunately. I don't know how easy that is to fix. Probably doesn't block this PR anyway.\r\n\r\nOddly it isn't doing it for \"dict_animal\"",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-06-25T10:37:55Z",
            "diff_hunk": "@@ -1,3 +1,6 @@\n+\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r906666651",
            "id": 906666651,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42CqKb",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 3,
            "original_position": 3,
            "original_start_line": 1,
            "path": "docs/examples/userguide/extension_types/extendable_animal.pyx",
            "position": null,
            "pull_request_review_id": 1019294502,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/906666651/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-06-25T11:00:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/906666651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r906666983"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/906666983"
                }
            },
            "author_association": "MEMBER",
            "body": "This would ideally have a spacing line (if possible)",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-06-25T10:41:31Z",
            "diff_hunk": "@@ -93,10 +153,24 @@ generic Python object. It knows this already in the case of the ``self``\n parameter of the methods of that type, but in other cases you will have to use\n a type declaration.\n \n-For example, in the following function::\n+For example, in the following function:\n \n-    cdef widen_shrubbery(sh, extra_width): # BAD\n-        sh.width = sh.width + extra_width\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cfunc\n+            def widen_shrubbery(sh, extra_width): # BAD\n+                sh.width = sh.width + extra_width\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef widen_shrubbery(sh, extra_width): # BAD",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r906666983",
            "id": 906666983,
            "line": 173,
            "node_id": "PRRC_kwDOABDGAc42CqPn",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 172,
            "original_position": 139,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 140,
            "pull_request_review_id": 1019294502,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/906666983/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-06-25T11:00:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/906666983",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r906667044"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/906667044"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    or importing from special ``cython.cimports`` package), and this is necessary\r\n```\r\n\r\n(Removed a space after the bracket)",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-06-25T10:42:40Z",
            "diff_hunk": "@@ -107,18 +181,35 @@ will be very inefficient. If the attribute is private, it will not work at all\n The solution is to declare ``sh`` as being of type :class:`Shrubbery`, as\n follows:\n \n-.. literalinclude:: ../../examples/userguide/extension_types/widen_shrubbery.pyx\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/widen_shrubbery.py\n+\n+    .. group-tab:: Cython\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/widen_shrubbery.pyx\n \n Now the Cython compiler knows that ``sh`` has a C attribute called\n :attr:`width` and will generate code to access it directly and efficiently.\n The same consideration applies to local variables, for example:\n \n-.. literalinclude:: ../../examples/userguide/extension_types/shrubbery_2.pyx\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery_2.py\n+\n+    .. group-tab:: Cython\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery_2.pyx\n \n .. note::\n \n-    We here ``cimport`` the class :class:`Shrubbery`, and this is necessary\n-    to declare the type at compile time. To be able to ``cimport`` an extension type,\n+    Here, we *cimport* the class :class:`Shrubbery` (using the :keyword:`cimport` statement\n+    or importing from special ``cython.cimports`` package) , and this is necessary",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r906667044",
            "id": 906667044,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42CqQk",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 211,
            "original_position": 179,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 1019294502,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/906667044/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-06-25T11:00:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/906667044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r906667468"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/906667468"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nTo also allow :keyword:`None`, ``typing.Optional[ ]`` must be used explicitly.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-06-25T10:47:17Z",
            "diff_hunk": "@@ -199,20 +331,43 @@ extension type can have a ``not None`` clause::\n Now the function will automatically check that ``sh`` is ``not None`` along\n with checking that it has the right type.\n \n+When annotations are used, the behaviour follows the Python typing semantics of\n+`PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_ instead.\n+The value :keyword:`None` is not allowed when a variable is annotated only with its plain type::\n+\n+    def widen_shrubbery(sh: Shrubbery, extra_width):  # TypeError is raised\n+        sh.width = sh.width + extra_width             # when sh is None\n+\n+To allow also :keyword:`None`, ``typing.Optional[ ]`` must be used explicitly.",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r906667468",
            "id": 906667468,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42CqXM",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 341,
            "original_position": 320,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 1019294502,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/906667468/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-06-25T11:00:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/906667468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r906668205"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/906668205"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n\r\n```\r\n\r\nExtra blank line to help it line up....",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-06-25T10:55:47Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+ \n+from libc.stdlib cimport malloc, free\n+\n+# Example C struct\n+ctypedef struct my_c_struct:\n+    int a\n+    int b\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r906668205",
            "id": 906668205,
            "line": 9,
            "node_id": "PRRC_kwDOABDGAc42Cqit",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 9,
            "original_position": 9,
            "original_start_line": null,
            "path": "docs/examples/userguide/extension_types/wrapper_class.pyx",
            "position": 9,
            "pull_request_review_id": 1019294502,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/906668205/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-06-25T11:00:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/906668205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r914865050"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/914865050"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I have removed `import cython` and lined up examples.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-06T13:50:50Z",
            "diff_hunk": "@@ -1,4 +1,5 @@\n-from __future__ import print_function\n+import cython\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r914865050",
            "id": 914865050,
            "in_reply_to_id": 906665998,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42h7ua",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 2,
            "original_position": 3,
            "original_start_line": 1,
            "path": "docs/examples/userguide/extension_types/shrubbery.py",
            "position": null,
            "pull_request_review_id": 1030134402,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/914865050/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-07-06T13:50:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/914865050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r914868751"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/914868751"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "no, that's too hard to do in markdown",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-06T13:53:48Z",
            "diff_hunk": "@@ -9,20 +9,55 @@ Extension Types\n Introduction\n ==============\n \n+.. include::\n+    ../two-syntax-variants-used\n+\n As well as creating normal user-defined classes with the Python class\n statement, Cython also lets you create new built-in Python types, known as\n :term:`extension types<Extension type>`. You define an extension type using the :keyword:`cdef` class\n-statement.  Here's an example:\n+statement or decorating the class with the ``@cclass`` decorator.  Here's an example:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.py\n+\n+    .. group-tab:: Cython\n \n-.. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n \n As you can see, a Cython extension type definition looks a lot like a Python\n-class definition. Within it, you use the def statement to define methods that\n+class definition. Within it, you use the :keyword:`def` statement to define methods that\n can be called from Python code. You can even define many of the special\n methods such as :meth:`__init__` as you would in Python.\n \n-The main difference is that you can use the :keyword:`cdef` statement to define\n-attributes. The attributes may be Python objects (either generic or of a\n+The main difference is that you can define attributes using\n+\n+* the :keyword:`cdef` statement,\n+* the :func:`cython.declare()` function or\n+* the annotation of an attribute name.\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Shrubbery:\n+                width = declare(cython.int)\n+                height: cython.int\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef class Shrubbery:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r914868751",
            "id": 914868751,
            "in_reply_to_id": 906666287,
            "line": 56,
            "node_id": "PRRC_kwDOABDGAc42h8oP",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 56,
            "original_position": 53,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 53,
            "pull_request_review_id": 1030139392,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/914868751/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-07-06T13:53:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/914868751",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r914869415"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/914869415"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Unfortunatelly, you cannot do the trick as in included files that you put space in the lines you would like to have there :-(",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-06T13:54:22Z",
            "diff_hunk": "@@ -9,20 +9,55 @@ Extension Types\n Introduction\n ==============\n \n+.. include::\n+    ../two-syntax-variants-used\n+\n As well as creating normal user-defined classes with the Python class\n statement, Cython also lets you create new built-in Python types, known as\n :term:`extension types<Extension type>`. You define an extension type using the :keyword:`cdef` class\n-statement.  Here's an example:\n+statement or decorating the class with the ``@cclass`` decorator.  Here's an example:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.py\n+\n+    .. group-tab:: Cython\n \n-.. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n \n As you can see, a Cython extension type definition looks a lot like a Python\n-class definition. Within it, you use the def statement to define methods that\n+class definition. Within it, you use the :keyword:`def` statement to define methods that\n can be called from Python code. You can even define many of the special\n methods such as :meth:`__init__` as you would in Python.\n \n-The main difference is that you can use the :keyword:`cdef` statement to define\n-attributes. The attributes may be Python objects (either generic or of a\n+The main difference is that you can define attributes using\n+\n+* the :keyword:`cdef` statement,\n+* the :func:`cython.declare()` function or\n+* the annotation of an attribute name.\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Shrubbery:\n+                width = declare(cython.int)\n+                height: cython.int\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef class Shrubbery:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r914869415",
            "id": 914869415,
            "in_reply_to_id": 906666287,
            "line": 56,
            "node_id": "PRRC_kwDOABDGAc42h8yn",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 56,
            "original_position": 53,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 53,
            "pull_request_review_id": 1030140369,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/914869415/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-07-06T13:54:22Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/914869415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r914878201"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/914878201"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If you want to enforce empty lines you need just to put white space in the first line. I took liberty and removed also `import cython` from the examples.",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-06T14:01:32Z",
            "diff_hunk": "@@ -1,3 +1,6 @@\n+\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r914878201",
            "id": 914878201,
            "in_reply_to_id": 906666651,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42h-75",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 3,
            "original_position": 3,
            "original_start_line": 1,
            "path": "docs/examples/userguide/extension_types/extendable_animal.pyx",
            "position": null,
            "pull_request_review_id": 1030153096,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/914878201/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-07-06T14:01:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/914878201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r914880681"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/914880681"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "You cannot do that. If you include file you can enforce spacing line with white character ` ` but in `code-blocks` you cannot do this trick",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-06T14:03:32Z",
            "diff_hunk": "@@ -93,10 +153,24 @@ generic Python object. It knows this already in the case of the ``self``\n parameter of the methods of that type, but in other cases you will have to use\n a type declaration.\n \n-For example, in the following function::\n+For example, in the following function:\n \n-    cdef widen_shrubbery(sh, extra_width): # BAD\n-        sh.width = sh.width + extra_width\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cfunc\n+            def widen_shrubbery(sh, extra_width): # BAD\n+                sh.width = sh.width + extra_width\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef widen_shrubbery(sh, extra_width): # BAD",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r914880681",
            "id": 914880681,
            "in_reply_to_id": 906666983,
            "line": 173,
            "node_id": "PRRC_kwDOABDGAc42h_ip",
            "original_commit_id": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "original_line": 172,
            "original_position": 139,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 140,
            "pull_request_review_id": 1030156655,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/914880681/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-07-06T14:03:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/914880681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r915771817"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/915771817"
                }
            },
            "author_association": "MEMBER",
            "body": "If we can't insert a line above, let's insert a line below, so that the attributes still align.\r\n```suggestion\r\n            cdef class Shrubbery:\r\n\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-07T11:37:23Z",
            "diff_hunk": "@@ -9,20 +9,55 @@ Extension Types\n Introduction\n ==============\n \n+.. include::\n+    ../two-syntax-variants-used\n+\n As well as creating normal user-defined classes with the Python class\n statement, Cython also lets you create new built-in Python types, known as\n :term:`extension types<Extension type>`. You define an extension type using the :keyword:`cdef` class\n-statement.  Here's an example:\n+statement or decorating the class with the ``@cclass`` decorator.  Here's an example:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.py\n+\n+    .. group-tab:: Cython\n \n-.. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n+        .. literalinclude:: ../../examples/userguide/extension_types/shrubbery.pyx\n \n As you can see, a Cython extension type definition looks a lot like a Python\n-class definition. Within it, you use the def statement to define methods that\n+class definition. Within it, you use the :keyword:`def` statement to define methods that\n can be called from Python code. You can even define many of the special\n methods such as :meth:`__init__` as you would in Python.\n \n-The main difference is that you can use the :keyword:`cdef` statement to define\n-attributes. The attributes may be Python objects (either generic or of a\n+The main difference is that you can define attributes using\n+\n+* the :keyword:`cdef` statement,\n+* the :func:`cython.declare()` function or\n+* the annotation of an attribute name.\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Shrubbery:\n+                width = declare(cython.int)\n+                height: cython.int\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef class Shrubbery:",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r915771817",
            "id": 915771817,
            "line": 56,
            "node_id": "PRRC_kwDOABDGAc42lZGp",
            "original_commit_id": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "original_line": 56,
            "original_position": 53,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 53,
            "pull_request_review_id": 1031426045,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/915771817/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-07-07T11:49:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/915771817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r915775238"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/915775238"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            # We want to raise a custom exception in case of a None value.\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-07T11:41:42Z",
            "diff_hunk": "@@ -199,18 +331,41 @@ extension type can have a ``not None`` clause::\n Now the function will automatically check that ``sh`` is ``not None`` along\n with checking that it has the right type.\n \n+When annotations are used, the behaviour follows the Python typing semantics of\n+`PEP-484 <https://www.python.org/dev/peps/pep-0484/>`_ instead.\n+The value ``None`` is not allowed when a variable is annotated only with its plain type::\n+\n+    def widen_shrubbery(sh: Shrubbery, extra_width):  # TypeError is raised\n+        sh.width = sh.width + extra_width             # when sh is None\n+\n+To also allow ``None``, ``typing.Optional[ ]`` must be used explicitly.\n+For function arguments, this is also automatically allowed when they have a\n+default argument of `None``, e.g. ``func(x: list = None)`` does not require ``typing.Optional``::\n+\n+    import typing\n+    def widen_shrubbery(sh: typing.Optional[Shrubbery], extra_width):\n+        if sh is None:\n+            # We want to raise custom exception in case of None value.",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r915775238",
            "id": 915775238,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42lZ8G",
            "original_commit_id": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "original_line": 348,
            "original_position": 323,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 1031426045,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/915775238/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-07-07T11:49:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/915775238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r915776246"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/915776246"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's align the properties.\r\n```suggestion\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-07T11:43:06Z",
            "diff_hunk": "@@ -232,23 +387,50 @@ extension types.\n Properties\n ============\n \n-You can declare properties in an extension class using the same syntax as in ordinary Python code::\n+You can declare properties in an extension class using the same syntax as in ordinary Python code:\n \n-    cdef class Spam:\n+.. tabs::\n \n-        @property\n-        def cheese(self):\n-            # This is called when the property is read.\n-            ...\n+    .. group-tab:: Pure Python\n \n-        @cheese.setter\n-        def cheese(self, value):\n-                # This is called when the property is written.\n-                ...\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Spam:\n+",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r915776246",
            "id": 915776246,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42laL2",
            "original_commit_id": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "original_line": 400,
            "original_position": 375,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 1031426045,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/915776246/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-07-07T11:49:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/915776246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r915776491"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/915776491"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                    # This is called when the property is written.\r\n                    ...\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-07T11:43:27Z",
            "diff_hunk": "@@ -232,23 +387,50 @@ extension types.\n Properties\n ============\n \n-You can declare properties in an extension class using the same syntax as in ordinary Python code::\n+You can declare properties in an extension class using the same syntax as in ordinary Python code:\n \n-    cdef class Spam:\n+.. tabs::\n \n-        @property\n-        def cheese(self):\n-            # This is called when the property is read.\n-            ...\n+    .. group-tab:: Pure Python\n \n-        @cheese.setter\n-        def cheese(self, value):\n-                # This is called when the property is written.\n-                ...\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Spam:\n+\n+                @property\n+                def cheese(self):\n+                    # This is called when the property is read.\n+                    ...\n+\n+                @cheese.setter\n+                def cheese(self, value):\n+                        # This is called when the property is written.\n+                        ...",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r915776491",
            "id": 915776491,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42laPr",
            "original_commit_id": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "original_line": 409,
            "original_position": 384,
            "original_start_line": 408,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 1031426045,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/915776491/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-07-07T11:49:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/915776491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r915776851"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/915776851"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                    # This is called when the property is written.\r\n                    ...\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-07T11:43:53Z",
            "diff_hunk": "@@ -232,23 +387,50 @@ extension types.\n Properties\n ============\n \n-You can declare properties in an extension class using the same syntax as in ordinary Python code::\n+You can declare properties in an extension class using the same syntax as in ordinary Python code:\n \n-    cdef class Spam:\n+.. tabs::\n \n-        @property\n-        def cheese(self):\n-            # This is called when the property is read.\n-            ...\n+    .. group-tab:: Pure Python\n \n-        @cheese.setter\n-        def cheese(self, value):\n-                # This is called when the property is written.\n-                ...\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Spam:\n+\n+                @property\n+                def cheese(self):\n+                    # This is called when the property is read.\n+                    ...\n+\n+                @cheese.setter\n+                def cheese(self, value):\n+                        # This is called when the property is written.\n+                        ...\n+\n+                @cheese.deleter\n+                def cheese(self):\n+                    # This is called when the property is deleted.\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n \n-        @cheese.deleter\n-        def cheese(self):\n-            # This is called when the property is deleted.\n+            cdef class Spam:\n+\n+                @property\n+                def cheese(self):\n+                    # This is called when the property is read.\n+                    ...\n+\n+                @cheese.setter\n+                def cheese(self, value):\n+                        # This is called when the property is written.\n+                        ...",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r915776851",
            "id": 915776851,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc42laVT",
            "original_commit_id": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "original_line": 429,
            "original_position": 407,
            "original_start_line": 428,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 1031426045,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/915776851/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-07-07T11:49:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/915776851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r915777949"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/915777949"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n            cdef class Norwegian(Parrot):\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-07T11:45:17Z",
            "diff_hunk": "@@ -328,20 +485,38 @@ Subclassing\n =============\n \n If an extension type inherits from other types, the first base class must be\n-a built-in type or another extension type::\n+a built-in type or another extension type:\n \n-    cdef class Parrot:\n-        ...\n+.. tabs::\n \n-    cdef class Norwegian(Parrot):\n-        ...\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.cclass\n+            class Parrot:\n+                ...\n+\n+            @cython.cclass\n+            class Norwegian(Parrot):\n+                ...\n+\n+    .. group-tab:: Cython\n+\n+        .. code-block:: cython\n+\n+            cdef class Parrot:\n+                ...\n+\n+            cdef class Norwegian(Parrot):",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r915777949",
            "id": 915777949,
            "line": 512,
            "node_id": "PRRC_kwDOABDGAc42lamd",
            "original_commit_id": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "original_line": 511,
            "original_position": 496,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 497,
            "pull_request_review_id": 1031426045,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/915777949/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-07-07T11:49:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/915777949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4516#discussion_r915780404"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4516"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/915780404"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n                cdef str name\r\n```",
            "commit_id": "19828592a16a48cce95977433755c09bfa465381",
            "created_at": "2022-07-07T11:48:27Z",
            "diff_hunk": "@@ -748,12 +936,28 @@ but the compiler won't be able to prove this. This would be the case if\n the class can never reference itself, even indirectly.\n In that case, you can manually disable cycle collection by using the\n ``no_gc`` directive, but beware that doing so when in fact the extension type\n-can participate in cycles could cause memory leaks ::\n+can participate in cycles could cause memory leaks:\n+\n+.. tabs::\n+\n+    .. group-tab:: Pure Python\n+\n+        .. code-block:: python\n+\n+            @cython.no_gc\n+            @cython.cclass\n+            class UserInfo:\n+                name: str\n+                addresses: tuple\n+\n+    .. group-tab:: Cython\n \n-    @cython.no_gc\n-    cdef class UserInfo:\n-        cdef str name\n-        cdef tuple addresses\n+        .. code-block:: cython\n+\n+            @cython.no_gc\n+            cdef class UserInfo:\n+                cdef str name",
            "html_url": "https://github.com/cython/cython/pull/4516#discussion_r915780404",
            "id": 915780404,
            "line": 961,
            "node_id": "PRRC_kwDOABDGAc42lbM0",
            "original_commit_id": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "original_line": 959,
            "original_position": 899,
            "original_start_line": null,
            "path": "docs/src/userguide/extension_types.rst",
            "position": 901,
            "pull_request_review_id": 1031426045,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/915780404/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-07-07T11:49:04Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/915780404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4516/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/965b5ecc58fcfa5f782e7fb04c418ae15230262d/comments",
            "commit": {
                "author": {
                    "date": "2021-12-22T20:03:57Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-12-23T12:45:37Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Migrate examples to pure python in extension_types.rst",
                "tree": {
                    "sha": "ef4d1952550b2ae2172cf7989da9286b810beed1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ef4d1952550b2ae2172cf7989da9286b810beed1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/965b5ecc58fcfa5f782e7fb04c418ae15230262d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/965b5ecc58fcfa5f782e7fb04c418ae15230262d",
            "node_id": "C_kwDOFL4z49oAKDk2NWI1ZWNjNThmY2ZhNWY3ODJlN2ZiMDRjNDE4YWUxNTIzMDI2MmQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cb5eb5a139cbefddffa54a7bddf64b3a03f349fd",
                    "sha": "cb5eb5a139cbefddffa54a7bddf64b3a03f349fd",
                    "url": "https://api.github.com/repos/cython/cython/commits/cb5eb5a139cbefddffa54a7bddf64b3a03f349fd"
                }
            ],
            "sha": "965b5ecc58fcfa5f782e7fb04c418ae15230262d",
            "url": "https://api.github.com/repos/cython/cython/commits/965b5ecc58fcfa5f782e7fb04c418ae15230262d"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/474473c1b025911ddd9ad4d9e699da25b560f460/comments",
            "commit": {
                "author": {
                    "date": "2021-12-23T17:28:33Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-12-23T17:28:33Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Adjust extension_types.rst to support pure python mode",
                "tree": {
                    "sha": "b1ad7c22e7e45c452dcba931bca89811356836ae",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b1ad7c22e7e45c452dcba931bca89811356836ae"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/474473c1b025911ddd9ad4d9e699da25b560f460",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/474473c1b025911ddd9ad4d9e699da25b560f460",
            "node_id": "C_kwDOFL4z49oAKDQ3NDQ3M2MxYjAyNTkxMWRkZDlhZDRkOWU2OTlkYTI1YjU2MGY0NjA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/965b5ecc58fcfa5f782e7fb04c418ae15230262d",
                    "sha": "965b5ecc58fcfa5f782e7fb04c418ae15230262d",
                    "url": "https://api.github.com/repos/cython/cython/commits/965b5ecc58fcfa5f782e7fb04c418ae15230262d"
                }
            ],
            "sha": "474473c1b025911ddd9ad4d9e699da25b560f460",
            "url": "https://api.github.com/repos/cython/cython/commits/474473c1b025911ddd9ad4d9e699da25b560f460"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/65e6382ac23277ec7a51500214f322554865d443/comments",
            "commit": {
                "author": {
                    "date": "2021-12-25T22:50:42Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-12-25T22:50:42Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Align py/pyx examples",
                "tree": {
                    "sha": "dc6a7efde4342a87ef1e541a6a07af6eb3ca6f2e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/dc6a7efde4342a87ef1e541a6a07af6eb3ca6f2e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/65e6382ac23277ec7a51500214f322554865d443",
                "verification": {
                    "payload": "tree dc6a7efde4342a87ef1e541a6a07af6eb3ca6f2e\nparent 474473c1b025911ddd9ad4d9e699da25b560f460\nauthor scoder <stefan_ml@behnel.de> 1640472642 +0100\ncommitter GitHub <noreply@github.com> 1640472642 +0100\n\nAlign py/pyx examples",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhx6BCCRBK7hj4Ov3rIwAAK78IAH8NS+T90YiKMT9ungHcRCB4\nJ51qs5WcxAMChn7Q8sL7Y0Dp9pb5y1CKkA9NiDV1cCoT6WBKR8Ko9JxxTgxPG+/V\nGcGJzDEXiBe/Wh7eqk93E0Nr+UMvJacVGV0ZA3PBXOGHKfgLXRuTpHih9PQlmBFE\nQQH2c1WdeiPnXoerr2el76Q1EVwMXWTOnInv8lZgCpUQLR2f9zEGHKlOxMosj4IG\njmyVKUJAHXVMsKB+P4GYRfWAR/Nv9HauHDzeZEUTvpQo2TiRrFAu4H5e8yUjmtVp\nH2L0+f7SUR/9NZcev5ZES6E3Ys9/9jTrzYsuXr+k0BVx3+BOEd3w2FN91rV+1QU=\n=4WUy\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/65e6382ac23277ec7a51500214f322554865d443",
            "node_id": "C_kwDOFL4z49oAKDY1ZTYzODJhYzIzMjc3ZWM3YTUxNTAwMjE0ZjMyMjU1NDg2NWQ0NDM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/474473c1b025911ddd9ad4d9e699da25b560f460",
                    "sha": "474473c1b025911ddd9ad4d9e699da25b560f460",
                    "url": "https://api.github.com/repos/cython/cython/commits/474473c1b025911ddd9ad4d9e699da25b560f460"
                }
            ],
            "sha": "65e6382ac23277ec7a51500214f322554865d443",
            "url": "https://api.github.com/repos/cython/cython/commits/65e6382ac23277ec7a51500214f322554865d443"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3cddff15bc0a57c0af7b5f87aa379caefa2eed7e/comments",
            "commit": {
                "author": {
                    "date": "2022-02-03T11:57:35Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-03T11:57:35Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Merge remote-tracking branch 'upstream/master' into pure_python_extension_types",
                "tree": {
                    "sha": "2ea27ad5b9c9991ab5ec11292265744c078821a6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2ea27ad5b9c9991ab5ec11292265744c078821a6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3cddff15bc0a57c0af7b5f87aa379caefa2eed7e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/3cddff15bc0a57c0af7b5f87aa379caefa2eed7e",
            "node_id": "C_kwDOFL4z49oAKDNjZGRmZjE1YmMwYTU3YzBhZjdiNWY4N2FhMzc5Y2FlZmEyZWVkN2U",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/65e6382ac23277ec7a51500214f322554865d443",
                    "sha": "65e6382ac23277ec7a51500214f322554865d443",
                    "url": "https://api.github.com/repos/cython/cython/commits/65e6382ac23277ec7a51500214f322554865d443"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/b859cf2bd72d525a724149a6e552abecf9cd9d89",
                    "sha": "b859cf2bd72d525a724149a6e552abecf9cd9d89",
                    "url": "https://api.github.com/repos/cython/cython/commits/b859cf2bd72d525a724149a6e552abecf9cd9d89"
                }
            ],
            "sha": "3cddff15bc0a57c0af7b5f87aa379caefa2eed7e",
            "url": "https://api.github.com/repos/cython/cython/commits/3cddff15bc0a57c0af7b5f87aa379caefa2eed7e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2ab987b0591081db223379cd40d5b009a8329b15/comments",
            "commit": {
                "author": {
                    "date": "2022-02-03T17:00:18Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-03T17:00:18Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Adjust documenation after introduction support of typing.Optional",
                "tree": {
                    "sha": "dd765a4bbda2e93d4eb0cba9e664be978eb21f69",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/dd765a4bbda2e93d4eb0cba9e664be978eb21f69"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2ab987b0591081db223379cd40d5b009a8329b15",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/2ab987b0591081db223379cd40d5b009a8329b15",
            "node_id": "C_kwDOFL4z49oAKDJhYjk4N2IwNTkxMDgxZGIyMjMzNzljZDQwZDViMDA5YTgzMjliMTU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3cddff15bc0a57c0af7b5f87aa379caefa2eed7e",
                    "sha": "3cddff15bc0a57c0af7b5f87aa379caefa2eed7e",
                    "url": "https://api.github.com/repos/cython/cython/commits/3cddff15bc0a57c0af7b5f87aa379caefa2eed7e"
                }
            ],
            "sha": "2ab987b0591081db223379cd40d5b009a8329b15",
            "url": "https://api.github.com/repos/cython/cython/commits/2ab987b0591081db223379cd40d5b009a8329b15"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98/comments",
            "commit": {
                "author": {
                    "date": "2022-02-04T23:45:42Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-04T23:45:42Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "0f81c061ce20b307eb82be886118a550ef2aba81",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0f81c061ce20b307eb82be886118a550ef2aba81"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98",
                "verification": {
                    "payload": "tree 0f81c061ce20b307eb82be886118a550ef2aba81\nparent 2ab987b0591081db223379cd40d5b009a8329b15\nauthor Matus Valo <matusvalo@users.noreply.github.com> 1644018342 +0100\ncommitter GitHub <noreply@github.com> 1644018342 +0100\n\nApply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh/bqmCRBK7hj4Ov3rIwAAt0EIAB8xb712FbqNH2UCXyNbYuPy\ncP5Lxlj8p7ATw02QjvfBshs9qGOPoSXRpN5ZdjgJ2wNAnixFxex1tptk80Kstkkc\nyoIq5BZcLdly9f/H9etp1C2vpdjVKpg5yh6jAeiN7WklZZvOxmhxKrGStpEsQthU\nMGLFuvgHHmln+NQshTbcmOSzlMrfg9jtBOTsmVmYSY2yfFyX6xsTRifgMqOVO0h0\nF2yj3zrSs8fDXpQ1IzZzHe3oV8DtlYkqp+3KXDeCzv8pckikKt5Tz+e4FwcnzdFw\nRYKuG2uW4LMB+JXFpdPa0btM4f2d+NalxPILk2B/AJL/wXWM5bZp0iZBOQinWbA=\n=rTCO\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98",
            "node_id": "C_kwDOFL4z49oAKGZiZmQzNTIxN2UwNmE2ZjNmNWM5YmIxY2VmZTNiZGY3OWJlYzZmOTg",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2ab987b0591081db223379cd40d5b009a8329b15",
                    "sha": "2ab987b0591081db223379cd40d5b009a8329b15",
                    "url": "https://api.github.com/repos/cython/cython/commits/2ab987b0591081db223379cd40d5b009a8329b15"
                }
            ],
            "sha": "fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98",
            "url": "https://api.github.com/repos/cython/cython/commits/fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c54af9be9b303fe2e4288f7d395ffea7c9e05a8a/comments",
            "commit": {
                "author": {
                    "date": "2022-02-04T23:55:45Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-04T23:55:45Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "10b0c01d35d42c6c67ed5a08f5825ac348785cbb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/10b0c01d35d42c6c67ed5a08f5825ac348785cbb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c54af9be9b303fe2e4288f7d395ffea7c9e05a8a",
                "verification": {
                    "payload": "tree 10b0c01d35d42c6c67ed5a08f5825ac348785cbb\nparent fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98\nauthor Matus Valo <matusvalo@users.noreply.github.com> 1644018945 +0100\ncommitter GitHub <noreply@github.com> 1644018945 +0100\n\nApply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh/b0BCRBK7hj4Ov3rIwAAhpwIAJNz1ybl65nK6zakFIfdF7Or\nv+E9u0L2XYFv1SOa2L1Qm0YwMTC6c0ntjcv551JMLwha9MJFJvuNAHMywKk/BDUH\necXpewnP5DjF6YIbWJMJ85q0X+6Ngu9rvJfoONLU/2mqh4ykTTcZgw8mMZHkUN/e\n/2CmCq1o7oraogORaPSt7heghHGFeMr047XsN8NzVLXzAdV0M63ta55i+wnf3IWT\n4a/gZTDaZzLI6dRIpM7YVYe+ZMlR9zw4qAZApRwwgNiOAUcwYWfnTPYt3GDQqaNr\nLtTTcRqhB5mnIY22Jg5VPPArHVhFslyzGv/uNUqhOvwujUkQEGGpsQ17p8r+/Bs=\n=+TVc\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/c54af9be9b303fe2e4288f7d395ffea7c9e05a8a",
            "node_id": "C_kwDOFL4z49oAKGM1NGFmOWJlOWIzMDNmZTJlNDI4OGY3ZDM5NWZmZWE3YzllMDVhOGE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98",
                    "sha": "fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98",
                    "url": "https://api.github.com/repos/cython/cython/commits/fbfd35217e06a6f3f5c9bb1cefe3bdf79bec6f98"
                }
            ],
            "sha": "c54af9be9b303fe2e4288f7d395ffea7c9e05a8a",
            "url": "https://api.github.com/repos/cython/cython/commits/c54af9be9b303fe2e4288f7d395ffea7c9e05a8a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b0e339741264164f426a659919ce1e60e1a5c645/comments",
            "commit": {
                "author": {
                    "date": "2022-02-05T18:17:55Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-05T18:18:46Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Remove note",
                "tree": {
                    "sha": "3c45a69a9df5ebbc9511f137b9fbb5a4ae536042",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3c45a69a9df5ebbc9511f137b9fbb5a4ae536042"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b0e339741264164f426a659919ce1e60e1a5c645",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/b0e339741264164f426a659919ce1e60e1a5c645",
            "node_id": "C_kwDOFL4z49oAKGIwZTMzOTc0MTI2NDE2NGY0MjZhNjU5OTE5Y2UxZTYwZTFhNWM2NDU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c54af9be9b303fe2e4288f7d395ffea7c9e05a8a",
                    "sha": "c54af9be9b303fe2e4288f7d395ffea7c9e05a8a",
                    "url": "https://api.github.com/repos/cython/cython/commits/c54af9be9b303fe2e4288f7d395ffea7c9e05a8a"
                }
            ],
            "sha": "b0e339741264164f426a659919ce1e60e1a5c645",
            "url": "https://api.github.com/repos/cython/cython/commits/b0e339741264164f426a659919ce1e60e1a5c645"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f4730c8fd8db15fee38c15da4a4e685fef62676a/comments",
            "commit": {
                "author": {
                    "date": "2022-02-05T18:32:51Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-05T18:37:11Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Add colon character before examples",
                "tree": {
                    "sha": "86beab77aff3a1c742d3cbcbe9a4ce5af25b3b22",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/86beab77aff3a1c742d3cbcbe9a4ce5af25b3b22"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f4730c8fd8db15fee38c15da4a4e685fef62676a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/f4730c8fd8db15fee38c15da4a4e685fef62676a",
            "node_id": "C_kwDOFL4z49oAKGY0NzMwYzhmZDhkYjE1ZmVlMzhjMTVkYTRhNGU2ODVmZWY2MjY3NmE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b0e339741264164f426a659919ce1e60e1a5c645",
                    "sha": "b0e339741264164f426a659919ce1e60e1a5c645",
                    "url": "https://api.github.com/repos/cython/cython/commits/b0e339741264164f426a659919ce1e60e1a5c645"
                }
            ],
            "sha": "f4730c8fd8db15fee38c15da4a4e685fef62676a",
            "url": "https://api.github.com/repos/cython/cython/commits/f4730c8fd8db15fee38c15da4a4e685fef62676a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3bf11b6646e211e83492646801925fed432c8736/comments",
            "commit": {
                "author": {
                    "date": "2022-02-05T18:53:07Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-05T18:53:07Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Remove broken sentense",
                "tree": {
                    "sha": "959cc0ca85da44723001b30fede410ea98dbf491",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/959cc0ca85da44723001b30fede410ea98dbf491"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3bf11b6646e211e83492646801925fed432c8736",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/3bf11b6646e211e83492646801925fed432c8736",
            "node_id": "C_kwDOFL4z49oAKDNiZjExYjY2NDZlMjExZTgzNDkyNjQ2ODAxOTI1ZmVkNDMyYzg3MzY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f4730c8fd8db15fee38c15da4a4e685fef62676a",
                    "sha": "f4730c8fd8db15fee38c15da4a4e685fef62676a",
                    "url": "https://api.github.com/repos/cython/cython/commits/f4730c8fd8db15fee38c15da4a4e685fef62676a"
                }
            ],
            "sha": "3bf11b6646e211e83492646801925fed432c8736",
            "url": "https://api.github.com/repos/cython/cython/commits/3bf11b6646e211e83492646801925fed432c8736"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b36f69092fb3b3e0a8e8285f529dc7c2119e0103/comments",
            "commit": {
                "author": {
                    "date": "2022-02-13T20:25:05Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-13T20:25:05Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Add note that cython does not support classmethod decorator",
                "tree": {
                    "sha": "556a69a82b9f4cafa75e74a13397745eb5923730",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/556a69a82b9f4cafa75e74a13397745eb5923730"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b36f69092fb3b3e0a8e8285f529dc7c2119e0103",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/b36f69092fb3b3e0a8e8285f529dc7c2119e0103",
            "node_id": "C_kwDOFL4z49oAKGIzNmY2OTA5MmZiM2IzZTBhOGU4Mjg1ZjUyOWRjN2MyMTE5ZTAxMDM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3bf11b6646e211e83492646801925fed432c8736",
                    "sha": "3bf11b6646e211e83492646801925fed432c8736",
                    "url": "https://api.github.com/repos/cython/cython/commits/3bf11b6646e211e83492646801925fed432c8736"
                }
            ],
            "sha": "b36f69092fb3b3e0a8e8285f529dc7c2119e0103",
            "url": "https://api.github.com/repos/cython/cython/commits/b36f69092fb3b3e0a8e8285f529dc7c2119e0103"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9a171a59027d6a9606c29f43aae7f2acf7db9c2a/comments",
            "commit": {
                "author": {
                    "date": "2022-02-13T21:24:29Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-13T21:24:29Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Split Extension types and None section to cython and pure mode",
                "tree": {
                    "sha": "d6be2a3b9fe4ca48862fa05cd17554b28d3793cc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d6be2a3b9fe4ca48862fa05cd17554b28d3793cc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9a171a59027d6a9606c29f43aae7f2acf7db9c2a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/9a171a59027d6a9606c29f43aae7f2acf7db9c2a",
            "node_id": "C_kwDOFL4z49oAKDlhMTcxYTU5MDI3ZDZhOTYwNmMyOWY0M2FhZTdmMmFjZjdkYjljMmE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b36f69092fb3b3e0a8e8285f529dc7c2119e0103",
                    "sha": "b36f69092fb3b3e0a8e8285f529dc7c2119e0103",
                    "url": "https://api.github.com/repos/cython/cython/commits/b36f69092fb3b3e0a8e8285f529dc7c2119e0103"
                }
            ],
            "sha": "9a171a59027d6a9606c29f43aae7f2acf7db9c2a",
            "url": "https://api.github.com/repos/cython/cython/commits/9a171a59027d6a9606c29f43aae7f2acf7db9c2a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/edfc30a26c730b80efa9d27b5994d9502d9f68a7/comments",
            "commit": {
                "author": {
                    "date": "2022-02-13T22:11:56Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-13T22:11:56Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Fix wrong note about using typing.Optional in C functions",
                "tree": {
                    "sha": "d56017936bd574da335b2b2076f19d3f930db60a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d56017936bd574da335b2b2076f19d3f930db60a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/edfc30a26c730b80efa9d27b5994d9502d9f68a7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "node_id": "C_kwDOFL4z49oAKGVkZmMzMGEyNmM3MzBiODBlZmE5ZDI3YjU5OTRkOTUwMmQ5ZjY4YTc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9a171a59027d6a9606c29f43aae7f2acf7db9c2a",
                    "sha": "9a171a59027d6a9606c29f43aae7f2acf7db9c2a",
                    "url": "https://api.github.com/repos/cython/cython/commits/9a171a59027d6a9606c29f43aae7f2acf7db9c2a"
                }
            ],
            "sha": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
            "url": "https://api.github.com/repos/cython/cython/commits/edfc30a26c730b80efa9d27b5994d9502d9f68a7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9e8b654dcb947fa0303831ac327494624f1b5e6f/comments",
            "commit": {
                "author": {
                    "date": "2022-02-14T00:10:19Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-14T00:10:19Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Fix grammar",
                "tree": {
                    "sha": "bd64ed0dbe44da582a40c2f89ae38079721b3381",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/bd64ed0dbe44da582a40c2f89ae38079721b3381"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9e8b654dcb947fa0303831ac327494624f1b5e6f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/9e8b654dcb947fa0303831ac327494624f1b5e6f",
            "node_id": "C_kwDOFL4z49oAKDllOGI2NTRkY2I5NDdmYTAzMDM4MzFhYzMyNzQ5NDYyNGYxYjVlNmY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/edfc30a26c730b80efa9d27b5994d9502d9f68a7",
                    "sha": "edfc30a26c730b80efa9d27b5994d9502d9f68a7",
                    "url": "https://api.github.com/repos/cython/cython/commits/edfc30a26c730b80efa9d27b5994d9502d9f68a7"
                }
            ],
            "sha": "9e8b654dcb947fa0303831ac327494624f1b5e6f",
            "url": "https://api.github.com/repos/cython/cython/commits/9e8b654dcb947fa0303831ac327494624f1b5e6f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/96ec4dcf9346bac75cc81f3c73179e25f8425b7b/comments",
            "commit": {
                "author": {
                    "date": "2022-02-17T20:20:31Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-17T20:20:31Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Revert \"Fix grammar\"\n\nThis reverts commit 9e8b654dcb947fa0303831ac327494624f1b5e6f.",
                "tree": {
                    "sha": "d56017936bd574da335b2b2076f19d3f930db60a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d56017936bd574da335b2b2076f19d3f930db60a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/96ec4dcf9346bac75cc81f3c73179e25f8425b7b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/96ec4dcf9346bac75cc81f3c73179e25f8425b7b",
            "node_id": "C_kwDOFL4z49oAKDk2ZWM0ZGNmOTM0NmJhYzc1Y2M4MWYzYzczMTc5ZTI1Zjg0MjViN2I",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9e8b654dcb947fa0303831ac327494624f1b5e6f",
                    "sha": "9e8b654dcb947fa0303831ac327494624f1b5e6f",
                    "url": "https://api.github.com/repos/cython/cython/commits/9e8b654dcb947fa0303831ac327494624f1b5e6f"
                }
            ],
            "sha": "96ec4dcf9346bac75cc81f3c73179e25f8425b7b",
            "url": "https://api.github.com/repos/cython/cython/commits/96ec4dcf9346bac75cc81f3c73179e25f8425b7b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c16a9376c6fad8056d23061afe9f95414bccdfe0/comments",
            "commit": {
                "author": {
                    "date": "2022-02-17T20:20:40Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-17T20:20:40Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Revert \"Fix wrong note about using typing.Optional in C functions\"\n\nThis reverts commit edfc30a26c730b80efa9d27b5994d9502d9f68a7.",
                "tree": {
                    "sha": "d6be2a3b9fe4ca48862fa05cd17554b28d3793cc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d6be2a3b9fe4ca48862fa05cd17554b28d3793cc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c16a9376c6fad8056d23061afe9f95414bccdfe0",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/c16a9376c6fad8056d23061afe9f95414bccdfe0",
            "node_id": "C_kwDOFL4z49oAKGMxNmE5Mzc2YzZmYWQ4MDU2ZDIzMDYxYWZlOWY5NTQxNGJjY2RmZTA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/96ec4dcf9346bac75cc81f3c73179e25f8425b7b",
                    "sha": "96ec4dcf9346bac75cc81f3c73179e25f8425b7b",
                    "url": "https://api.github.com/repos/cython/cython/commits/96ec4dcf9346bac75cc81f3c73179e25f8425b7b"
                }
            ],
            "sha": "c16a9376c6fad8056d23061afe9f95414bccdfe0",
            "url": "https://api.github.com/repos/cython/cython/commits/c16a9376c6fad8056d23061afe9f95414bccdfe0"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/80900ea4c1efa8c41b5541e1059e61b2d8ecdc0e/comments",
            "commit": {
                "author": {
                    "date": "2022-02-17T20:27:06Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-17T20:27:06Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Minor fixes",
                "tree": {
                    "sha": "ce9f199ebc7e1fd1251f00c77fb2f2d270f3ed03",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ce9f199ebc7e1fd1251f00c77fb2f2d270f3ed03"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/80900ea4c1efa8c41b5541e1059e61b2d8ecdc0e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/80900ea4c1efa8c41b5541e1059e61b2d8ecdc0e",
            "node_id": "C_kwDOFL4z49oAKDgwOTAwZWE0YzFlZmE4YzQxYjU1NDFlMTA1OWU2MWIyZDhlY2RjMGU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c16a9376c6fad8056d23061afe9f95414bccdfe0",
                    "sha": "c16a9376c6fad8056d23061afe9f95414bccdfe0",
                    "url": "https://api.github.com/repos/cython/cython/commits/c16a9376c6fad8056d23061afe9f95414bccdfe0"
                }
            ],
            "sha": "80900ea4c1efa8c41b5541e1059e61b2d8ecdc0e",
            "url": "https://api.github.com/repos/cython/cython/commits/80900ea4c1efa8c41b5541e1059e61b2d8ecdc0e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c743e4810a344aa6b800285ed2d9c17d71aba925/comments",
            "commit": {
                "author": {
                    "date": "2022-02-17T20:30:59Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-17T20:30:59Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Merge branch 'master' into pure_python_extension_types",
                "tree": {
                    "sha": "3c1c82f51c766672f25d4ef60f0300ef09118ed6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3c1c82f51c766672f25d4ef60f0300ef09118ed6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c743e4810a344aa6b800285ed2d9c17d71aba925",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/c743e4810a344aa6b800285ed2d9c17d71aba925",
            "node_id": "C_kwDOFL4z49oAKGM3NDNlNDgxMGEzNDRhYTZiODAwMjg1ZWQyZDljMTdkNzFhYmE5MjU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/80900ea4c1efa8c41b5541e1059e61b2d8ecdc0e",
                    "sha": "80900ea4c1efa8c41b5541e1059e61b2d8ecdc0e",
                    "url": "https://api.github.com/repos/cython/cython/commits/80900ea4c1efa8c41b5541e1059e61b2d8ecdc0e"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/8a59142db687b733b4ffe55c40fa03dc132122c6",
                    "sha": "8a59142db687b733b4ffe55c40fa03dc132122c6",
                    "url": "https://api.github.com/repos/cython/cython/commits/8a59142db687b733b4ffe55c40fa03dc132122c6"
                }
            ],
            "sha": "c743e4810a344aa6b800285ed2d9c17d71aba925",
            "url": "https://api.github.com/repos/cython/cython/commits/c743e4810a344aa6b800285ed2d9c17d71aba925"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/21f5debd07b2bf2aabb4325df66df0b434f7a44b/comments",
            "commit": {
                "author": {
                    "date": "2022-02-17T20:58:30Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-17T20:58:30Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Migrate dataclass to pure python",
                "tree": {
                    "sha": "64b87368d58736d19cf2c18de3115fc809c2a477",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/64b87368d58736d19cf2c18de3115fc809c2a477"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/21f5debd07b2bf2aabb4325df66df0b434f7a44b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "node_id": "C_kwDOFL4z49oAKDIxZjVkZWJkMDdiMmJmMmFhYmI0MzI1ZGY2NmRmMGI0MzRmN2E0NGI",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c743e4810a344aa6b800285ed2d9c17d71aba925",
                    "sha": "c743e4810a344aa6b800285ed2d9c17d71aba925",
                    "url": "https://api.github.com/repos/cython/cython/commits/c743e4810a344aa6b800285ed2d9c17d71aba925"
                }
            ],
            "sha": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
            "url": "https://api.github.com/repos/cython/cython/commits/21f5debd07b2bf2aabb4325df66df0b434f7a44b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2bb45258075188be44fb8df8f8796c832415fa2e/comments",
            "commit": {
                "author": {
                    "date": "2022-07-06T13:40:12Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-06T13:40:12Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Update docs/examples/userguide/extension_types/wrapper_class.pyx\n\nCo-authored-by: da-woods <dw-git@d-woods.co.uk>",
                "tree": {
                    "sha": "dadb4c82bd2feef76813617c4beb3a9c3dceadb7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/dadb4c82bd2feef76813617c4beb3a9c3dceadb7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2bb45258075188be44fb8df8f8796c832415fa2e",
                "verification": {
                    "payload": "tree dadb4c82bd2feef76813617c4beb3a9c3dceadb7\nparent 21f5debd07b2bf2aabb4325df66df0b434f7a44b\nauthor Matus Valo <matusvalo@users.noreply.github.com> 1657114812 +0200\ncommitter GitHub <noreply@github.com> 1657114812 +0200\n\nUpdate docs/examples/userguide/extension_types/wrapper_class.pyx\n\nCo-authored-by: da-woods <dw-git@d-woods.co.uk>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixZC8CRBK7hj4Ov3rIwAArKoIAHrTgCGFZLVYa7FrXOqIw2gx\nM5y6Tw8vwUOhI7veraGAiNkaVhys9z8fgpr5xtgqppr+/TQQ3JR8Qazsx6PwMG0m\n/7VbV/hbAnBM1aecL5JqCacr2HzgdxhgBjUqTBrRPr0hT5pC3YCUr7zqygm3ApIc\navtmKATY5ucwRdu/PbJn/NlJ6YWVymTNFUoN8P/DwLq6JKbYqzZxYf0vSgCZmcpu\nltP0iNk6w43yGb73e+qKU24QcIIz699a8mWAzRU6wv/AB7yEEDgbhRsnDZlNojTi\n/C+mzH97JTT3DfYPzbmsokm7BXzkLF4K5deZgSAgaQr2p/eb1SLNRX7iDXEh/u0=\n=KmwS\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/2bb45258075188be44fb8df8f8796c832415fa2e",
            "node_id": "C_kwDOFL4z49oAKDJiYjQ1MjU4MDc1MTg4YmU0NGZiOGRmOGY4Nzk2YzgzMjQxNWZhMmU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/21f5debd07b2bf2aabb4325df66df0b434f7a44b",
                    "sha": "21f5debd07b2bf2aabb4325df66df0b434f7a44b",
                    "url": "https://api.github.com/repos/cython/cython/commits/21f5debd07b2bf2aabb4325df66df0b434f7a44b"
                }
            ],
            "sha": "2bb45258075188be44fb8df8f8796c832415fa2e",
            "url": "https://api.github.com/repos/cython/cython/commits/2bb45258075188be44fb8df8f8796c832415fa2e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b6b5a6ae141a8862cdae95d9d8d956e421fb3926/comments",
            "commit": {
                "author": {
                    "date": "2022-07-06T13:42:30Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-06T13:42:30Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: da-woods <dw-git@d-woods.co.uk>",
                "tree": {
                    "sha": "1f31af2409285f868f0b0611fd883e5f1b717901",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1f31af2409285f868f0b0611fd883e5f1b717901"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b6b5a6ae141a8862cdae95d9d8d956e421fb3926",
                "verification": {
                    "payload": "tree 1f31af2409285f868f0b0611fd883e5f1b717901\nparent 2bb45258075188be44fb8df8f8796c832415fa2e\nauthor Matus Valo <matusvalo@users.noreply.github.com> 1657114950 +0200\ncommitter GitHub <noreply@github.com> 1657114950 +0200\n\nApply suggestions from code review\n\nCo-authored-by: da-woods <dw-git@d-woods.co.uk>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixZFGCRBK7hj4Ov3rIwAArwMIADZXMsr+4xA4vUv3oHB4Y52r\ns1d3OwlRDX9PZ8pW3qN0ijZUTQ+gelt/H5Mn5K7coRGZ42P/8WW1rMfnOGFGt+oy\nJ6OKSREvsJoaUSERXgkNmpcp6AjUBhMhKOop126UiSLknCJ+ygAVt9QeHcT6U/js\nfCTfU8yxZIzCjWiumaaaxzek+e7APEpgHKfVxJsBu/FGfQ3x+zTbUYcFNRBYwaIy\neiV2xWIP3wI/DJkTG9l+LjPj7tlVg+pZdzizJ4g0R55KXVMXh/FCDnCZbbZeNdPA\ni9zOrjJrz8m0d5coi1E06xjS4hkq7ltzaQ6mK23R+tkBI+NIKmUi9M/9+RVpyGo=\n=X+NT\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/b6b5a6ae141a8862cdae95d9d8d956e421fb3926",
            "node_id": "C_kwDOFL4z49oAKGI2YjVhNmFlMTQxYTg4NjJjZGFlOTVkOWQ4ZDk1NmU0MjFmYjM5MjY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2bb45258075188be44fb8df8f8796c832415fa2e",
                    "sha": "2bb45258075188be44fb8df8f8796c832415fa2e",
                    "url": "https://api.github.com/repos/cython/cython/commits/2bb45258075188be44fb8df8f8796c832415fa2e"
                }
            ],
            "sha": "b6b5a6ae141a8862cdae95d9d8d956e421fb3926",
            "url": "https://api.github.com/repos/cython/cython/commits/b6b5a6ae141a8862cdae95d9d8d956e421fb3926"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6d910bb5118a46c9add32b7d1614b27daff73454/comments",
            "commit": {
                "author": {
                    "date": "2022-07-06T13:49:53Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-06T13:49:53Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Fix shrubbery.py example",
                "tree": {
                    "sha": "1b6990b7a0449d6dd988af618a16d3051a4b6f53",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1b6990b7a0449d6dd988af618a16d3051a4b6f53"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6d910bb5118a46c9add32b7d1614b27daff73454",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/6d910bb5118a46c9add32b7d1614b27daff73454",
            "node_id": "C_kwDOFL4z49oAKDZkOTEwYmI1MTE4YTQ2YzlhZGQzMmI3ZDE2MTRiMjdkYWZmNzM0NTQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b6b5a6ae141a8862cdae95d9d8d956e421fb3926",
                    "sha": "b6b5a6ae141a8862cdae95d9d8d956e421fb3926",
                    "url": "https://api.github.com/repos/cython/cython/commits/b6b5a6ae141a8862cdae95d9d8d956e421fb3926"
                }
            ],
            "sha": "6d910bb5118a46c9add32b7d1614b27daff73454",
            "url": "https://api.github.com/repos/cython/cython/commits/6d910bb5118a46c9add32b7d1614b27daff73454"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8cfc0f9035198d98521021b5f4b228a4b172efb7/comments",
            "commit": {
                "author": {
                    "date": "2022-07-06T13:59:27Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-06T13:59:27Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Remove import cython from animal examples",
                "tree": {
                    "sha": "a93493a7175df90c1facd4da406b93d0a15f2232",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a93493a7175df90c1facd4da406b93d0a15f2232"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8cfc0f9035198d98521021b5f4b228a4b172efb7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/8cfc0f9035198d98521021b5f4b228a4b172efb7",
            "node_id": "C_kwDOFL4z49oAKDhjZmMwZjkwMzUxOThkOTg1MjEwMjFiNWY0YjIyOGE0YjE3MmVmYjc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6d910bb5118a46c9add32b7d1614b27daff73454",
                    "sha": "6d910bb5118a46c9add32b7d1614b27daff73454",
                    "url": "https://api.github.com/repos/cython/cython/commits/6d910bb5118a46c9add32b7d1614b27daff73454"
                }
            ],
            "sha": "8cfc0f9035198d98521021b5f4b228a4b172efb7",
            "url": "https://api.github.com/repos/cython/cython/commits/8cfc0f9035198d98521021b5f4b228a4b172efb7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4642671ac1393f7e327a9f154a9ea0d5c1189fe8/comments",
            "commit": {
                "author": {
                    "date": "2022-07-07T05:50:28Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-07T05:52:29Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Make pycodestyle happy",
                "tree": {
                    "sha": "db99964c91d517cf627c973483e4710a834074e6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/db99964c91d517cf627c973483e4710a834074e6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4642671ac1393f7e327a9f154a9ea0d5c1189fe8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/4642671ac1393f7e327a9f154a9ea0d5c1189fe8",
            "node_id": "C_kwDOFL4z49oAKDQ2NDI2NzFhYzEzOTNmN2UzMjdhOWYxNTRhOWVhMGQ1YzExODlmZTg",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8cfc0f9035198d98521021b5f4b228a4b172efb7",
                    "sha": "8cfc0f9035198d98521021b5f4b228a4b172efb7",
                    "url": "https://api.github.com/repos/cython/cython/commits/8cfc0f9035198d98521021b5f4b228a4b172efb7"
                }
            ],
            "sha": "4642671ac1393f7e327a9f154a9ea0d5c1189fe8",
            "url": "https://api.github.com/repos/cython/cython/commits/4642671ac1393f7e327a9f154a9ea0d5c1189fe8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ffce8c0f48c0a2f060b28785fd7ddd8c26ae7240/comments",
            "commit": {
                "author": {
                    "date": "2022-07-07T06:03:15Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-07T06:03:15Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Fix warnings about `None`",
                "tree": {
                    "sha": "6ab7a7f0bceebbdfd4e98653acfb268f43788a5b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6ab7a7f0bceebbdfd4e98653acfb268f43788a5b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ffce8c0f48c0a2f060b28785fd7ddd8c26ae7240",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/ffce8c0f48c0a2f060b28785fd7ddd8c26ae7240",
            "node_id": "C_kwDOFL4z49oAKGZmY2U4YzBmNDhjMGEyZjA2MGIyODc4NWZkN2RkZDhjMjZhZTcyNDA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4642671ac1393f7e327a9f154a9ea0d5c1189fe8",
                    "sha": "4642671ac1393f7e327a9f154a9ea0d5c1189fe8",
                    "url": "https://api.github.com/repos/cython/cython/commits/4642671ac1393f7e327a9f154a9ea0d5c1189fe8"
                }
            ],
            "sha": "ffce8c0f48c0a2f060b28785fd7ddd8c26ae7240",
            "url": "https://api.github.com/repos/cython/cython/commits/ffce8c0f48c0a2f060b28785fd7ddd8c26ae7240"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b4ad815e5bacab77f7404c2838dc47ad3375d1d1/comments",
            "commit": {
                "author": {
                    "date": "2022-07-07T06:25:46Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-07T06:25:46Z",
                    "email": "matusvalo@gmail.com",
                    "name": "Matus Valo"
                },
                "message": "Fix warning in reference",
                "tree": {
                    "sha": "e9c2b9e846d2e7321a30bc203be97931c0686daf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e9c2b9e846d2e7321a30bc203be97931c0686daf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b4ad815e5bacab77f7404c2838dc47ad3375d1d1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "html_url": "https://github.com/cython/cython/commit/b4ad815e5bacab77f7404c2838dc47ad3375d1d1",
            "node_id": "C_kwDOFL4z49oAKGI0YWQ4MTVlNWJhY2FiNzdmNzQwNGMyODM4ZGM0N2FkMzM3NWQxZDE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ffce8c0f48c0a2f060b28785fd7ddd8c26ae7240",
                    "sha": "ffce8c0f48c0a2f060b28785fd7ddd8c26ae7240",
                    "url": "https://api.github.com/repos/cython/cython/commits/ffce8c0f48c0a2f060b28785fd7ddd8c26ae7240"
                }
            ],
            "sha": "b4ad815e5bacab77f7404c2838dc47ad3375d1d1",
            "url": "https://api.github.com/repos/cython/cython/commits/b4ad815e5bacab77f7404c2838dc47ad3375d1d1"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ed4ec4234c5cfc6113880b8ae346f8305afb2b8c/comments",
            "commit": {
                "author": {
                    "date": "2022-07-07T06:28:04Z",
                    "email": "matusvalo@users.noreply.github.com",
                    "name": "Matus Valo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-07T06:28:04Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into pure_python_extension_types",
                "tree": {
                    "sha": "5e57f5d1f30d475f62de7fde23fcb307411c2e0b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5e57f5d1f30d475f62de7fde23fcb307411c2e0b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
                "verification": {
                    "payload": "tree 5e57f5d1f30d475f62de7fde23fcb307411c2e0b\nparent b4ad815e5bacab77f7404c2838dc47ad3375d1d1\nparent 796fd06da1fa1d5481ce43a6b6c901bc87f0ce9a\nauthor Matus Valo <matusvalo@users.noreply.github.com> 1657175284 +0200\ncommitter GitHub <noreply@github.com> 1657175284 +0200\n\nMerge branch 'master' into pure_python_extension_types",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixnz0CRBK7hj4Ov3rIwAA9aQIAIg2XkbkNc/8q0MI30GjPe4R\ndF2FXfYoFgk0ggBqWj5LO9ikEGa9YWSICYv1igSH7Dl4AIbh9ffeBnJV4xlGufbm\n/EFW/FV77CY/F4ooot+C3uIIAGJMoW18zUIhVFT0tUEKKSd+koMnEnGxGDjNDlNl\nGdIQsgduQ2SMjCJVFLBSmqmH/GJQcuXMHjIIVrFEN9QaPmjFtsyDVxSoRfgZWVPX\nGui/6g2jpAc1XYOATz9M4xYBzSe80ZNtMbBu2f93GFwy91BeWG5idB/Dp5JBfLwI\nI86k/OkVAng9v128avGlD+5WhkzBV32zbzOMVEJTP5gVo5LRpGbanRHpxp+GEas=\n=6MR3\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "node_id": "C_kwDOFL4z49oAKGVkNGVjNDIzNGM1Y2ZjNjExMzg4MGI4YWUzNDZmODMwNWFmYjJiOGM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b4ad815e5bacab77f7404c2838dc47ad3375d1d1",
                    "sha": "b4ad815e5bacab77f7404c2838dc47ad3375d1d1",
                    "url": "https://api.github.com/repos/cython/cython/commits/b4ad815e5bacab77f7404c2838dc47ad3375d1d1"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/796fd06da1fa1d5481ce43a6b6c901bc87f0ce9a",
                    "sha": "796fd06da1fa1d5481ce43a6b6c901bc87f0ce9a",
                    "url": "https://api.github.com/repos/cython/cython/commits/796fd06da1fa1d5481ce43a6b6c901bc87f0ce9a"
                }
            ],
            "sha": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
            "url": "https://api.github.com/repos/cython/cython/commits/ed4ec4234c5cfc6113880b8ae346f8305afb2b8c"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/19828592a16a48cce95977433755c09bfa465381/comments",
            "commit": {
                "author": {
                    "date": "2022-07-07T11:51:17Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-07-07T11:51:17Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Indentation and spacing.",
                "tree": {
                    "sha": "0cd6981c6562ff39ecbafac08173487faf70f8ca",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0cd6981c6562ff39ecbafac08173487faf70f8ca"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/19828592a16a48cce95977433755c09bfa465381",
                "verification": {
                    "payload": "tree 0cd6981c6562ff39ecbafac08173487faf70f8ca\nparent ed4ec4234c5cfc6113880b8ae346f8305afb2b8c\nauthor scoder <stefan_ml@behnel.de> 1657194677 +0200\ncommitter GitHub <noreply@github.com> 1657194677 +0200\n\nIndentation and spacing.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixsi1CRBK7hj4Ov3rIwAAmpcIAB5gfRoR2yzD8kIV00n3UqsK\nd+f3GlkIvq7Q/nlWAUM9Rv2f3qQrgteUrCy52rbOIO29euXZltWKgzRGKZVV0WC1\n72D0Axdfzel6S74+2ae5i++tUpgq1zyLVy3t7iv9Z+ef2j6xxC1wt/MIQ50sXCLM\n2kw40BE+QrFzXNVN+DhLhua3oA2O2n0NL8njiWX0StNde1esvvQ6ePeY7/h+fJA8\neBDCh6bZQcN+/zVOyc2a7mvNrspS8e16K1UqOxBJA/hyJ/xyQtvl0SXFtX2zLWDG\n2LQfs9buW6iX2cQupdFTculFt/jaLgNW52cd87bgVcQB9xVyg12wLJu5E4uTlIM=\n=rZgH\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/19828592a16a48cce95977433755c09bfa465381",
            "node_id": "C_kwDOFL4z49oAKDE5ODI4NTkyYTE2YTQ4Y2NlOTU5Nzc0MzM3NTVjMDliZmE0NjUzODE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
                    "sha": "ed4ec4234c5cfc6113880b8ae346f8305afb2b8c",
                    "url": "https://api.github.com/repos/cython/cython/commits/ed4ec4234c5cfc6113880b8ae346f8305afb2b8c"
                }
            ],
            "sha": "19828592a16a48cce95977433755c09bfa465381",
            "url": "https://api.github.com/repos/cython/cython/commits/19828592a16a48cce95977433755c09bfa465381"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/4516/commits",
    "created_at": "2021-12-22T20:05:07Z",
    "diff_url": "https://github.com/cython/cython/pull/4516.diff",
    "draft": false,
    "head": {
        "label": "matusvalo:pure_python_extension_types",
        "ref": "pure_python_extension_types",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/matusvalo/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/matusvalo/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/matusvalo/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/matusvalo/cython/branches{/branch}",
            "clone_url": "https://github.com/matusvalo/cython.git",
            "collaborators_url": "https://api.github.com/repos/matusvalo/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/matusvalo/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/matusvalo/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/matusvalo/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/matusvalo/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/matusvalo/cython/contributors",
            "created_at": "2021-03-15T14:49:34Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/matusvalo/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/matusvalo/cython/downloads",
            "events_url": "https://api.github.com/repos/matusvalo/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/matusvalo/cython/forks",
            "full_name": "matusvalo/cython",
            "git_commits_url": "https://api.github.com/repos/matusvalo/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/matusvalo/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/matusvalo/cython/git/tags{/sha}",
            "git_url": "git://github.com/matusvalo/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/matusvalo/cython/hooks",
            "html_url": "https://github.com/matusvalo/cython",
            "id": 348009443,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/matusvalo/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/matusvalo/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/matusvalo/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/matusvalo/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/matusvalo/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/matusvalo/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/matusvalo/cython/merges",
            "milestones_url": "https://api.github.com/repos/matusvalo/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNDgwMDk0NDM=",
            "notifications_url": "https://api.github.com/repos/matusvalo/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
                "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
                "followers_url": "https://api.github.com/users/matusvalo/followers",
                "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
                "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matusvalo",
                "id": 827060,
                "login": "matusvalo",
                "node_id": "MDQ6VXNlcjgyNzA2MA==",
                "organizations_url": "https://api.github.com/users/matusvalo/orgs",
                "received_events_url": "https://api.github.com/users/matusvalo/received_events",
                "repos_url": "https://api.github.com/users/matusvalo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matusvalo"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/matusvalo/cython/pulls{/number}",
            "pushed_at": "2022-07-07T13:04:02Z",
            "releases_url": "https://api.github.com/repos/matusvalo/cython/releases{/id}",
            "size": 64529,
            "ssh_url": "git@github.com:matusvalo/cython.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/matusvalo/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/matusvalo/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/matusvalo/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/matusvalo/cython/subscription",
            "svn_url": "https://github.com/matusvalo/cython",
            "tags_url": "https://api.github.com/repos/matusvalo/cython/tags",
            "teams_url": "https://api.github.com/repos/matusvalo/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/matusvalo/cython/git/trees{/sha}",
            "updated_at": "2022-01-01T09:57:48Z",
            "url": "https://api.github.com/repos/matusvalo/cython",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "19828592a16a48cce95977433755c09bfa465381",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
            "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
            "followers_url": "https://api.github.com/users/matusvalo/followers",
            "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
            "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/matusvalo",
            "id": 827060,
            "login": "matusvalo",
            "node_id": "MDQ6VXNlcjgyNzA2MA==",
            "organizations_url": "https://api.github.com/users/matusvalo/orgs",
            "received_events_url": "https://api.github.com/users/matusvalo/received_events",
            "repos_url": "https://api.github.com/users/matusvalo/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/matusvalo"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/4516",
    "id": 808684856,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/4516",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425561345,
            "name": "Documentation",
            "node_id": "MDU6TGFiZWw0MjU1NjEzNDU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Documentation"
        }
    ],
    "locked": false,
    "merge_commit_sha": "a44bbd363029aa9ba16fefcb485c68162f8ab663",
    "merged_at": "2022-07-07T12:42:55Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 626,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 39,
        "state": "open",
        "title": "3.0",
        "updated_at": "2022-07-08T07:18:25Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "PR_kwDOABDGAc4wM404",
    "number": 4516,
    "patch_url": "https://github.com/cython/cython/pull/4516.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/4516/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/19828592a16a48cce95977433755c09bfa465381",
    "title": "Migrate extension_types.rst to pure python",
    "updated_at": "2022-07-07T13:05:09Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/4516",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/827060?v=4",
        "events_url": "https://api.github.com/users/matusvalo/events{/privacy}",
        "followers_url": "https://api.github.com/users/matusvalo/followers",
        "following_url": "https://api.github.com/users/matusvalo/following{/other_user}",
        "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/matusvalo",
        "id": 827060,
        "login": "matusvalo",
        "node_id": "MDQ6VXNlcjgyNzA2MA==",
        "organizations_url": "https://api.github.com/users/matusvalo/orgs",
        "received_events_url": "https://api.github.com/users/matusvalo/received_events",
        "repos_url": "https://api.github.com/users/matusvalo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/matusvalo"
    }
}