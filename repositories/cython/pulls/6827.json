{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/6827/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6827/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/6827"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/6827"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6827/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6827"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/dfaa3ed4472397e0e2bf54616497abd8ccaedc69"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1528,
            "forks_count": 1528,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1441,
            "open_issues_count": 1441,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2025-05-18T15:29:27Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 75711,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 9994,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2025-05-18T15:29:31Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 9994,
            "watchers_count": 9994,
            "web_commit_signoff_required": false
        },
        "sha": "d42f59113beeb40fe7ff0060b26967d8d692adff",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython",
            "user_view_type": "public"
        }
    },
    "body": "Don't mark extern C++ methods as \"inherited\" - this isn't correct and I think was probably only there to make the compiler ignore some signature mismatches.\r\n\r\nFix an issue where methods returning a pointer wouldn't be marked as a const method correctly (this was meaning that some const accessors for C++ allocator) were being seen as having the same signature, generating a warning.\r\n\r\nTreat const methods/non-const methods as having a different signature. This means that both are declared as alternatives.\r\n\r\nTreat methods with different numbers of template parameters as having different signatures (so that they appear in the list of alternative).\r\n\r\nAdd some logic to IndexNode to look at the list of alternatives and select one with a suitable number of template arguments when there's multiple options.\r\n\r\n------------------------------------------\r\n\r\nThis fixes #6823 (at least the cut-down example provided - I'm not sure about the full issue that it was based on). However the whole \"overloaded methods\" thing is really quite fragile which makes me a bit nervous about it in general",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6827#discussion_r2089145836"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6827"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2089145836"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is this not a case for `PyrexTypes.best_match()`? Is it just because you want to raise a warning?",
            "commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "created_at": "2025-05-14T14:53:52Z",
            "diff_hunk": "@@ -4325,11 +4325,34 @@ def analyse_as_cpp(self, env, setting):\n \n     def analyse_as_c_function(self, env):\n         base_type = self.base.type\n+\n         if base_type.is_fused:\n             self.parse_indexed_fused_cdef(env)\n         else:\n             self.type_indices = self.parse_index_as_types(env)\n             self.index = None  # FIXME: use a dedicated Node class instead of generic IndexNode\n+\n+            if hasattr(self.base, \"entry\"):\n+                alternatives = self.base.entry.all_alternatives()\n+                if len(alternatives) > 1:\n+                    alternatives = [\n+                        a for a in alternatives\n+                        if (a.type.is_cfunction and\n+                            a.type.templates is not None and\n+                            len(a.type.templates) == len(self.type_indices))\n+                    ]\n+                    if len(alternatives) >= 1:\n+                        self.base.entry  = alternatives[0]\n+                        base_type = self.base.type = self.base.entry.type\n+                    if len(alternatives) > 1:\n+                        # warning rather than error because we used to just pick the first one in all cases.\n+                        # TODO - a better lookup might work co-operatively with a surrounding CallNode to further\n+                        # reduce the list of viable alternatives.\n+                        warning(\n+                            self.pos,\n+                            \"No unambiguous choice when parameterizing template function\"\n+                        )",
            "html_url": "https://github.com/cython/cython/pull/6827#discussion_r2089145836",
            "id": 2089145836,
            "line": 4354,
            "node_id": "PRRC_kwDOABDGAc58hdXs",
            "original_commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "original_line": 4354,
            "original_position": 30,
            "original_start_line": 4335,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 30,
            "pull_request_review_id": 2840534044,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2089145836/reactions"
            },
            "side": "RIGHT",
            "start_line": 4335,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-14T15:00:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2089145836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6827#discussion_r2089158632"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6827"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2089158632"
                }
            },
            "author_association": "MEMBER",
            "body": "Could you say why you removed this? (I'm not implying that it should be there, just asking.)",
            "commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "created_at": "2025-05-14T14:59:43Z",
            "diff_hunk": "@@ -2861,8 +2861,6 @@ def declare_var(self, name, type, pos,\n                 error(pos, \"Function signature does not match previous declaration\")\n         else:\n             entry = self.declare(name, cname, type, pos, visibility)\n-            if type.is_cfunction and not defining:\n-                entry.is_inherited = 1",
            "html_url": "https://github.com/cython/cython/pull/6827#discussion_r2089158632",
            "id": 2089158632,
            "line": 2865,
            "node_id": "PRRC_kwDOABDGAc58hgfo",
            "original_commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "original_line": 2865,
            "original_position": 5,
            "original_start_line": 2864,
            "path": "Cython/Compiler/Symtab.py",
            "position": 5,
            "pull_request_review_id": 2840534044,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2089158632/reactions"
            },
            "side": "LEFT",
            "start_line": 2864,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-05-14T15:00:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2089158632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6827#discussion_r2089626915"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6827"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2089626915"
                }
            },
            "author_association": "MEMBER",
            "body": "I think there's two cases where this code is use:\r\n\r\n* `&template_func[some_type]` (to get a function pointer).\r\n* `template_func[some_type](some_arguments)`\r\n\r\nThe first case is probably pretty rare, but does rely on it being unambiguous.\r\n\r\nFor the second case it would be nice to use `best_match` as you say. It ends up being\r\n\r\n```\r\nCallNode:\r\n   - function: IndexNode\r\n        - base: NameNode\r\n             - name = template_func\r\n        - index: NameNode\r\n             - name = some_type\r\n```\r\n\r\nSo when we analyse `IndexNode` it doesn't know about the surrounding `CallNode`. And I don't think we easily can.\r\n\r\nSo I think you're right that the best thing to do would be to use `best_match` on the filtered list of valid functions. But I can't easily see how to do that here. I think we'd have to create a duplicate entry with a shorter alternatives list.",
            "commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "created_at": "2025-05-14T19:44:52Z",
            "diff_hunk": "@@ -4325,11 +4325,34 @@ def analyse_as_cpp(self, env, setting):\n \n     def analyse_as_c_function(self, env):\n         base_type = self.base.type\n+\n         if base_type.is_fused:\n             self.parse_indexed_fused_cdef(env)\n         else:\n             self.type_indices = self.parse_index_as_types(env)\n             self.index = None  # FIXME: use a dedicated Node class instead of generic IndexNode\n+\n+            if hasattr(self.base, \"entry\"):\n+                alternatives = self.base.entry.all_alternatives()\n+                if len(alternatives) > 1:\n+                    alternatives = [\n+                        a for a in alternatives\n+                        if (a.type.is_cfunction and\n+                            a.type.templates is not None and\n+                            len(a.type.templates) == len(self.type_indices))\n+                    ]\n+                    if len(alternatives) >= 1:\n+                        self.base.entry  = alternatives[0]\n+                        base_type = self.base.type = self.base.entry.type\n+                    if len(alternatives) > 1:\n+                        # warning rather than error because we used to just pick the first one in all cases.\n+                        # TODO - a better lookup might work co-operatively with a surrounding CallNode to further\n+                        # reduce the list of viable alternatives.\n+                        warning(\n+                            self.pos,\n+                            \"No unambiguous choice when parameterizing template function\"\n+                        )",
            "html_url": "https://github.com/cython/cython/pull/6827#discussion_r2089626915",
            "id": 2089626915,
            "in_reply_to_id": 2089145836,
            "line": 4354,
            "node_id": "PRRC_kwDOABDGAc58jS0j",
            "original_commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "original_line": 4354,
            "original_position": 30,
            "original_start_line": 4335,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 30,
            "pull_request_review_id": 2841320356,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2089626915/reactions"
            },
            "side": "RIGHT",
            "start_line": 4335,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-14T19:44:52Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2089626915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6827#discussion_r2089635477"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6827"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2089635477"
                }
            },
            "author_association": "MEMBER",
            "body": "This was triggering based on\r\n\r\n```\r\ncdef extern from ...:\r\n    cdef cppclass TemplateNonTemplate:\r\n        TemplateNonTemplate()\r\n        int func[T, U]()\r\n        int func[T]()\r\n        int func()\r\n```\r\n\r\nIn this case `defining` is false (because they're external. But they aren't inherited so `is_inherited` is wrong (and was triggering the entries to silently overwrite each other since it believed that they have a similar enough signature).\r\n\r\nInherited attributes are copied elsewhere so as far as I can tell this was always wrong.",
            "commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "created_at": "2025-05-14T19:50:33Z",
            "diff_hunk": "@@ -2861,8 +2861,6 @@ def declare_var(self, name, type, pos,\n                 error(pos, \"Function signature does not match previous declaration\")\n         else:\n             entry = self.declare(name, cname, type, pos, visibility)\n-            if type.is_cfunction and not defining:\n-                entry.is_inherited = 1",
            "html_url": "https://github.com/cython/cython/pull/6827#discussion_r2089635477",
            "id": 2089635477,
            "in_reply_to_id": 2089158632,
            "line": 2865,
            "node_id": "PRRC_kwDOABDGAc58jU6V",
            "original_commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "original_line": 2865,
            "original_position": 5,
            "original_start_line": 2864,
            "path": "Cython/Compiler/Symtab.py",
            "position": 5,
            "pull_request_review_id": 2841336706,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2089635477/reactions"
            },
            "side": "LEFT",
            "start_line": 2864,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-05-14T19:51:07Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2089635477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6827#discussion_r2094382371"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6827"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2094382371"
                }
            },
            "author_association": "MEMBER",
            "body": "> we'd have to create a duplicate entry with a shorter alternatives list.\r\n\r\nThat sounds like a way to do it. It might have to be special and not turn up in all places where name entries are stored (it's not a name, after all), maybe even solely exist on the `IndexNode`. But the `IndexNode` really refers to \"something\", different from its bare base `NameNode`, so giving it its own entry seems reasonable.",
            "commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "created_at": "2025-05-18T05:53:45Z",
            "diff_hunk": "@@ -4325,11 +4325,34 @@ def analyse_as_cpp(self, env, setting):\n \n     def analyse_as_c_function(self, env):\n         base_type = self.base.type\n+\n         if base_type.is_fused:\n             self.parse_indexed_fused_cdef(env)\n         else:\n             self.type_indices = self.parse_index_as_types(env)\n             self.index = None  # FIXME: use a dedicated Node class instead of generic IndexNode\n+\n+            if hasattr(self.base, \"entry\"):\n+                alternatives = self.base.entry.all_alternatives()\n+                if len(alternatives) > 1:\n+                    alternatives = [\n+                        a for a in alternatives\n+                        if (a.type.is_cfunction and\n+                            a.type.templates is not None and\n+                            len(a.type.templates) == len(self.type_indices))\n+                    ]\n+                    if len(alternatives) >= 1:\n+                        self.base.entry  = alternatives[0]\n+                        base_type = self.base.type = self.base.entry.type\n+                    if len(alternatives) > 1:\n+                        # warning rather than error because we used to just pick the first one in all cases.\n+                        # TODO - a better lookup might work co-operatively with a surrounding CallNode to further\n+                        # reduce the list of viable alternatives.\n+                        warning(\n+                            self.pos,\n+                            \"No unambiguous choice when parameterizing template function\"\n+                        )",
            "html_url": "https://github.com/cython/cython/pull/6827#discussion_r2094382371",
            "id": 2094382371,
            "in_reply_to_id": 2089145836,
            "line": 4354,
            "node_id": "PRRC_kwDOABDGAc581b0j",
            "original_commit_id": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "original_line": 4354,
            "original_position": 30,
            "original_start_line": 4335,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 30,
            "pull_request_review_id": 2848737330,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2094382371/reactions"
            },
            "side": "RIGHT",
            "start_line": 4335,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-18T05:53:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2094382371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6827/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/dfaa3ed4472397e0e2bf54616497abd8ccaedc69/comments",
            "commit": {
                "author": {
                    "date": "2025-05-03T09:36:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-05-03T10:07:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix some issues with C++ templated function overloading\n\nDon't mark extern C++ methods as \"inherited\" - this isn't correct\nand I think was probably only there to make the compiler\nignore some signature mismatches.\n\nFix an issue where methods returning a pointer wouldn't be marked\nas a const method correctly (this was meaning that some const\naccessors for C++ allocator) were being seen as having the same\nsignature, generating a warning.\n\nTreat const methods/non-const methods as having a different\nsignature. This means that both are declared as alternatives.\n\nTreat methods with different numbers of template parameters\nas having different signatures (so that they appear in the list\nof alternative).\n\nAdd some logic to IndexNode to look at the list of alternatives\nand select one with a suitable number of template arguments when\nthere's multiple options.",
                "tree": {
                    "sha": "3b0b4dbcba9c0ea9add4611d814a002220d0b6e2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3b0b4dbcba9c0ea9add4611d814a002220d0b6e2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "node_id": "C_kwDOAhr4b9oAKGRmYWEzZWQ0NDcyMzk3ZTBlMmJmNTQ2MTY0OTdhYmQ4Y2NhZWRjNjk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d42f59113beeb40fe7ff0060b26967d8d692adff",
                    "sha": "d42f59113beeb40fe7ff0060b26967d8d692adff",
                    "url": "https://api.github.com/repos/cython/cython/commits/d42f59113beeb40fe7ff0060b26967d8d692adff"
                }
            ],
            "sha": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
            "url": "https://api.github.com/repos/cython/cython/commits/dfaa3ed4472397e0e2bf54616497abd8ccaedc69"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/6827/commits",
    "created_at": "2025-05-03T10:11:18Z",
    "diff_url": "https://github.com/cython/cython/pull/6827.diff",
    "draft": false,
    "head": {
        "label": "da-woods:templated-function-overloading",
        "ref": "templated-function-overloading",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 2,
            "open_issues_count": 2,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2025-05-18T15:30:08Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 78819,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2025-03-12T23:15:39Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/6827",
    "id": 2496792245,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/6827",
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        }
    ],
    "locked": false,
    "merge_commit_sha": "3b9b3df4bf4484eba227694125468e2f7a19e3e2",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOABDGAc6U0ga1",
    "number": 6827,
    "patch_url": "https://github.com/cython/cython/pull/6827.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/6827/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/dfaa3ed4472397e0e2bf54616497abd8ccaedc69",
    "title": "Fix some issues with C++ templated function overloading",
    "updated_at": "2025-05-18T05:53:46Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/6827",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods",
        "user_view_type": "public"
    }
}