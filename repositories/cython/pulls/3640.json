{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3640/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3640/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3640"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3640"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3640/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3640"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/4ad92d43debc4d3cc718695d5de539dc40d3d2bb"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1020,
            "forks_count": 1020,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 821,
            "open_issues_count": 821,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-05-27T06:50:24Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 58614,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 5193,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-05-27T12:02:41Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 5193,
            "watchers_count": 5193
        },
        "sha": "e4e1aa37eb4dcc5f5a8eaf4df23b347f513e63b8",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This PR adds support for C++ scoped enumerations, (`enum class`). Addresses https://github.com/cython/cython/issues/1603.\r\n\r\nWorkarounds exist for wrapping external C++ enum classes.  These are reported in the issue above. However, they don't solve the following problems:\r\n\r\n* The names of the enum values leak into the outer scope as described in https://github.com/cython/cython/issues/1603#issuecomment-571415849.\r\n* Converting between Python values and scoped enums requires further awkward workarounds -- see an example of our workaround [here](https://github.com/rapidsai/cudf/blob/branch-0.14/python/cudf/cudf/_lib/csv.pyx#L39-L63).    \r\n\r\nThis PR addresses the above by adding \"true\" support for scoped enums.\r\n\r\n- [x] Enum classes are defined using `cdef enumclass` syntax\r\n- [x] Adds a new `ScopedEnumDefNode` node type\r\n- [x] Adds a new `ScopedEnum` PyrexType\r\n- [x] Adds a new `ScopedEnumScope` for the enum values\r\n- [ ] Adds utilities `enum.from_py` and `enum.to_py` for converting between Python int-like objects and enum values --- currently buggy\r\n- [x] Adds support for `cpdef enumclass`, which generates a Python Enum similar to `cpdef enum`\r\n- [ ] Replace `enumclass` keyword with `enum class`. Also support `enum struct`.\r\n\r\nPlease note: this is my first time contributing to Cython - please forgive coding faux pas on my part :-) ",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430638204"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430638204"
                }
            },
            "author_association": "MEMBER",
            "body": "`enum class` seems better here, I think, and should be perfectly backwards compatible.\r\n\r\nAlso, this should be restricted to C++ mode.",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-26T18:59:07Z",
            "diff_hunk": "@@ -3085,6 +3085,10 @@ def p_cdef_statement(s, ctx):\n             if s.systring != 'enum':\n                 error(pos, \"C struct/union cannot be declared cpdef\")\n         return p_struct_enum(s, pos, ctx)\n+    elif s.sy == 'IDENT' and s.systring == 'enumclass':",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430638204",
            "id": 430638204,
            "line": 3088,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzODIwNA==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 3088,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": 4,
            "pull_request_review_id": 418588561,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-05-26T19:14:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430638204",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430640598"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430640598"
                }
            },
            "author_association": "MEMBER",
            "body": "Is a \"scoped enum\" not an \"enum\"? I.e. is it better to have separate types and say \"or\" from time to time, or have scoped enums be a subtype and say \"and not\" when they should behave differently?",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-26T19:03:26Z",
            "diff_hunk": "@@ -2092,7 +2092,7 @@ def check_identifier_kind(self):\n         entry = self.entry\n         if entry.is_type and entry.type.is_extension_type:\n             self.type_entry = entry\n-        if entry.is_type and entry.type.is_enum:\n+        if entry.is_type and (entry.type.is_enum or entry.type.is_scoped_enum):",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430640598",
            "id": 430640598,
            "line": 2095,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MDU5OA==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 2095,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 5,
            "pull_request_review_id": 418588561,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-05-26T19:14:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430640598",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430641676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430641676"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems fairly late for such an error. Isn't this something that the parser could detect? Or at least the declaration analysis?",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-26T19:05:25Z",
            "diff_hunk": "@@ -1055,6 +1057,34 @@ def generate_enum_definition(self, entry, code):\n             # Not pre-declared.\n             code.putln(\"typedef enum %s %s;\" % (name, name))\n \n+    def generate_scoped_enum_definition(self, entry, code):\n+        code.mark_pos(entry.pos)\n+        type = entry.type\n+        name = entry.cname or entry.name or \"\"\n+        header, footer = self.sue_header_footer(type, \"enum class\", name)\n+        code.putln(header)\n+        enum_values = entry.enum_values\n+        if not enum_values:\n+            error(entry.pos, \"Empty enum definition not allowed outside a 'cdef extern from' block\")",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430641676",
            "id": 430641676,
            "line": 1068,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MTY3Ng==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 1068,
            "original_position": 30,
            "original_start_line": 1067,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 30,
            "pull_request_review_id": 418588561,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": 1067,
            "start_side": "RIGHT",
            "updated_at": "2020-05-26T19:14:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430641676",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430642843"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430642843"
                }
            },
            "author_association": "MEMBER",
            "body": "Seems worth naming this `CppScopedEnumType` to make it stick out in the code as something C++  specific.",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-26T19:07:34Z",
            "diff_hunk": "@@ -3876,6 +3878,104 @@ def check_nullary_constructor(self, pos, msg=\"stack allocated\"):\n         if constructor is not None and best_match([], constructor.all_alternatives()) is None:\n             error(pos, \"C++ class must have a nullary constructor to be %s\" % msg)\n \n+class ScopedEnumType(CType):",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430642843",
            "id": 430642843,
            "line": 3881,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0Mjg0Mw==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 3881,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": 20,
            "pull_request_review_id": 418588561,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-05-26T19:14:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430642843",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430644672"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430644672"
                }
            },
            "author_association": "MEMBER",
            "body": "This suggests an error test (in `tests/errors/` with `# mode: error`) that a redeclaration gets detected and rejected.",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-26T19:11:01Z",
            "diff_hunk": "@@ -697,6 +697,25 @@ def declare_enum(self, name, pos, cname, typedef_flag,\n         self.sue_entries.append(entry)\n         return entry\n \n+    def declare_scoped_enum(self, name, pos, cname, create_wrapper = 0):\n+        if name:\n+            if not cname:\n+                cname = name\n+        if self.is_cpp_class_scope:\n+            namespace = self.outer_scope.lookup(self.name).type\n+        else:\n+            namespace = None\n+\n+        entry = self.lookup_here(name)\n+        if not entry:",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430644672",
            "id": 430644672,
            "line": 710,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NDY3Mg==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 710,
            "original_position": 14,
            "original_start_line": 709,
            "path": "Cython/Compiler/Symtab.py",
            "position": 14,
            "pull_request_review_id": 418588561,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": 709,
            "start_side": "RIGHT",
            "updated_at": "2020-05-26T19:14:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430644672",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430660428"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430660428"
                }
            },
            "author_association": "NONE",
            "body": "Agreed - `enumclass` was just easier to add support for quickly, but will change this to `enum class`.",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-26T19:37:51Z",
            "diff_hunk": "@@ -3085,6 +3085,10 @@ def p_cdef_statement(s, ctx):\n             if s.systring != 'enum':\n                 error(pos, \"C struct/union cannot be declared cpdef\")\n         return p_struct_enum(s, pos, ctx)\n+    elif s.sy == 'IDENT' and s.systring == 'enumclass':",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430660428",
            "id": 430660428,
            "in_reply_to_id": 430638204,
            "line": 3088,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2MDQyOA==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 3088,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": 4,
            "pull_request_review_id": 418620990,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-05-26T19:37:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430660428",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430664189"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430664189"
                }
            },
            "author_association": "NONE",
            "body": "I don't feel strongly here. I can make it such that a scoped enum \"is a\" enum.\r\n\r\nSemantically speaking, I guess the correct thing would be to have `is_enum`, `is_scoped_enum`, and `is_unscoped_enum`, where `scoped_enum` and `unscoped_enum` are the two distinct types of `enum`.\r\n\r\nNot advocating for this though, just presenting it as a third option if it's appealing to you :)",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-26T19:42:16Z",
            "diff_hunk": "@@ -2092,7 +2092,7 @@ def check_identifier_kind(self):\n         entry = self.entry\n         if entry.is_type and entry.type.is_extension_type:\n             self.type_entry = entry\n-        if entry.is_type and entry.type.is_enum:\n+        if entry.is_type and (entry.type.is_enum or entry.type.is_scoped_enum):",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430664189",
            "id": 430664189,
            "in_reply_to_id": 430640598,
            "line": 2095,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NDE4OQ==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 2095,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 5,
            "pull_request_review_id": 418623887,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-05-26T19:42:16Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430664189",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430740368"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430740368"
                }
            },
            "author_association": "NONE",
            "body": "Duplicate file (`scoped_enums.pyx` is the same).",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-26T22:23:16Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+# tag: cpp",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430740368",
            "id": 430740368,
            "line": 1,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc0MDM2OA==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "tests/run/cpp_scoped_enums.pyx",
            "position": 1,
            "pull_request_review_id": 418719930,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-05-26T22:23:16Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430740368",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3640#discussion_r430774055"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3640"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/430774055"
                }
            },
            "author_association": "NONE",
            "body": "Stale code",
            "commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "created_at": "2020-05-27T00:09:58Z",
            "diff_hunk": "@@ -3876,6 +3878,104 @@ def check_nullary_constructor(self, pos, msg=\"stack allocated\"):\n         if constructor is not None and best_match([], constructor.all_alternatives()) is None:\n             error(pos, \"C++ class must have a nullary constructor to be %s\" % msg)\n \n+class ScopedEnumType(CType):\n+    # name    string\n+    # cname   string\n+\n+    is_scoped_enum = 1\n+\n+    def __init__(self, name, cname, namespace=None):\n+        self.name = name\n+        self.cname = cname\n+        self.values = []\n+        self.namespace = namespace\n+\n+    def __str__(self):\n+        return self.name\n+\n+    def declaration_code(self, entity_code,\n+                        for_display=0, dll_linkage=None, pyrex=0):\n+        if pyrex or for_display:\n+            base_code = self.name\n+        else:\n+            if self.namespace:\n+                base_code = \"%s::%s\" % (\n+                    self.namespace.empty_declaration_code(),\n+                    self.cname\n+                )\n+            else:\n+                base_code = \"enum %s\" % self.cname\n+            base_code = public_decl(base_code, dll_linkage)\n+        return self.base_declaration_code(base_code, entity_code)\n+\n+    def create_from_py_utility_code(self, env):\n+        if self.from_py_function is not None:\n+            return True\n+        context = {}\n+        cname = \"__pyx_convert_%s_from_%s\" % (\n+            type_identifier(self),\n+            \"PyObject\"\n+        )\n+        context.update({\n+            \"cname\": cname,\n+            \"TYPE\": self.name,\n+            self.name: self\n+        })\n+        from .UtilityCode import CythonUtilityCode\n+        env.use_utility_code(CythonUtilityCode.load(\n+            \"enum.from_py\",\n+            \"CppConvert.pyx\",\n+            context=context,\n+            outer_module_scope=env.global_scope(),  # need access to types declared in module\n+            compiler_directives=env.directives\n+        ))\n+        self.from_py_function = cname\n+        return True\n+\n+    def create_to_py_utility_code(self, env):\n+        if self.to_py_function is not None:\n+            return True\n+        context = {}\n+        cname = \"__pyx_convert_%s_from_%s\" % (\n+            \"PyObject\",\n+            type_identifier(self)\n+        )\n+        context.update({\n+            \"cname\": cname,\n+            \"TYPE\": self.name,\n+            self.name: self\n+        })\n+        from .UtilityCode import CythonUtilityCode\n+        env.use_utility_code(CythonUtilityCode.load(\n+            \"enum.to_py\",\n+            \"CppConvert.pyx\",\n+            context=context,\n+            outer_module_scope=env.global_scope(),  # need access to types declared in module\n+            compiler_directives=env.directives\n+        ))\n+        self.to_py_function = cname\n+        return True\n+\n+    def create_type_wrapper(self, env):\n+        from .UtilityCode import CythonUtilityCode\n+        rst = CythonUtilityCode.load(\n+            \"ScopedEnumType\", \"CpdefEnums.pyx\",\n+            context={\"name\": self.name,\n+                     \"cname\": self.cname.split(\"::\")[-1],\n+                     \"items\": tuple(self.values)},\n+            outer_module_scope=env.global_scope())\n+\n+        env.use_utility_code(rst)\n+\n+        # context.update({",
            "html_url": "https://github.com/cython/cython/pull/3640#discussion_r430774055",
            "id": 430774055,
            "line": 3970,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc3NDA1NQ==",
            "original_commit_id": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "original_line": 3970,
            "original_position": 109,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": 109,
            "pull_request_review_id": 418759703,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3640",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-05-27T00:09:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/430774055",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3640/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4ad92d43debc4d3cc718695d5de539dc40d3d2bb/comments",
            "commit": {
                "author": {
                    "date": "2020-05-26T15:14:40Z",
                    "email": "shwina@users.noreply.github.com",
                    "name": "Ashwin Srinath"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-26T15:14:40Z",
                    "email": "shwina@users.noreply.github.com",
                    "name": "Ashwin Srinath"
                },
                "message": "Add initial support for C++ scoped enums",
                "tree": {
                    "sha": "7eef4070bca82c47294169f4e256a0197e326e70",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7eef4070bca82c47294169f4e256a0197e326e70"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            },
            "html_url": "https://github.com/cython/cython/commit/4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "node_id": "MDY6Q29tbWl0MjEyMTk2MDgyOjRhZDkyZDQzZGViYzRkM2NjNzE4Njk1ZDVkZTUzOWRjNDBkM2QyYmI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/074362b47093febfe5273ea7a00f4ba5ded6e73f",
                    "sha": "074362b47093febfe5273ea7a00f4ba5ded6e73f",
                    "url": "https://api.github.com/repos/cython/cython/commits/074362b47093febfe5273ea7a00f4ba5ded6e73f"
                }
            ],
            "sha": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
            "url": "https://api.github.com/repos/cython/cython/commits/4ad92d43debc4d3cc718695d5de539dc40d3d2bb"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3640/commits",
    "created_at": "2020-05-26T17:04:45Z",
    "diff_url": "https://github.com/cython/cython/pull/3640.diff",
    "draft": false,
    "head": {
        "label": "shwina:add-scoped-enums-support",
        "ref": "add-scoped-enums-support",
        "repo": {
            "archive_url": "https://api.github.com/repos/shwina/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/shwina/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/shwina/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/shwina/cython/branches{/branch}",
            "clone_url": "https://github.com/shwina/cython.git",
            "collaborators_url": "https://api.github.com/repos/shwina/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/shwina/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/shwina/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/shwina/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/shwina/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/shwina/cython/contributors",
            "created_at": "2019-10-01T20:44:42Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/shwina/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/shwina/cython/downloads",
            "events_url": "https://api.github.com/repos/shwina/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/shwina/cython/forks",
            "full_name": "shwina/cython",
            "git_commits_url": "https://api.github.com/repos/shwina/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/shwina/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/shwina/cython/git/tags{/sha}",
            "git_url": "git://github.com/shwina/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/shwina/cython/hooks",
            "html_url": "https://github.com/shwina/cython",
            "id": 212196082,
            "issue_comment_url": "https://api.github.com/repos/shwina/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/shwina/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/shwina/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/shwina/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/shwina/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/shwina/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/shwina/cython/merges",
            "milestones_url": "https://api.github.com/repos/shwina/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTIxOTYwODI=",
            "notifications_url": "https://api.github.com/repos/shwina/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
                "events_url": "https://api.github.com/users/shwina/events{/privacy}",
                "followers_url": "https://api.github.com/users/shwina/followers",
                "following_url": "https://api.github.com/users/shwina/following{/other_user}",
                "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shwina",
                "id": 3190405,
                "login": "shwina",
                "node_id": "MDQ6VXNlcjMxOTA0MDU=",
                "organizations_url": "https://api.github.com/users/shwina/orgs",
                "received_events_url": "https://api.github.com/users/shwina/received_events",
                "repos_url": "https://api.github.com/users/shwina/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shwina"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/shwina/cython/pulls{/number}",
            "pushed_at": "2020-05-26T15:14:58Z",
            "releases_url": "https://api.github.com/repos/shwina/cython/releases{/id}",
            "size": 55652,
            "ssh_url": "git@github.com:shwina/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/shwina/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/shwina/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/shwina/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/shwina/cython/subscription",
            "svn_url": "https://github.com/shwina/cython",
            "tags_url": "https://api.github.com/repos/shwina/cython/tags",
            "teams_url": "https://api.github.com/repos/shwina/cython/teams",
            "trees_url": "https://api.github.com/repos/shwina/cython/git/trees{/sha}",
            "updated_at": "2019-10-01T20:44:43Z",
            "url": "https://api.github.com/repos/shwina/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/shwina",
            "id": 3190405,
            "login": "shwina",
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/shwina"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3640",
    "id": 423335274,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3640",
    "labels": [],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzMzM1Mjc0",
    "number": 3640,
    "patch_url": "https://github.com/cython/cython/pull/3640.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3640/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/4ad92d43debc4d3cc718695d5de539dc40d3d2bb",
    "title": "[WIP] Add support for C++ scoped enums",
    "updated_at": "2020-05-27T00:09:58Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3640",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/3190405?v=4",
        "events_url": "https://api.github.com/users/shwina/events{/privacy}",
        "followers_url": "https://api.github.com/users/shwina/followers",
        "following_url": "https://api.github.com/users/shwina/following{/other_user}",
        "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/shwina",
        "id": 3190405,
        "login": "shwina",
        "node_id": "MDQ6VXNlcjMxOTA0MDU=",
        "organizations_url": "https://api.github.com/users/shwina/orgs",
        "received_events_url": "https://api.github.com/users/shwina/received_events",
        "repos_url": "https://api.github.com/users/shwina/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/shwina"
    }
}