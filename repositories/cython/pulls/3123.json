{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3123/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3123/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3123"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3123"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3123/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3123"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/f2852d61cce5146c9ab7d7864f30f0ca16b67bf9"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 986,
            "forks_count": 986,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 793,
            "open_issues_count": 793,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-02-12T14:41:37Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56135,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4889,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-02-12T14:59:00Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4889,
            "watchers_count": 4889
        },
        "sha": "d86aebefd33ecd232317e4becc15bb1d2f9f4bb7",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Follows CPython behaviour\r\n\r\nIssue https://github.com/cython/cython/issues/1382\r\n\r\nI think this is fairly straightforward. The only small question is whether to make an exception for `__pyx_` names. I don't think so, but it merits a little thought.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321978889"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321978889"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not also for cdef classes?",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-07T18:26:06Z",
            "diff_hunk": "@@ -318,25 +318,33 @@ class ScopeTrackingTransform(CythonTransform):\n     #scope_type: can be either of 'module', 'function', 'cclass', 'pyclass', 'struct'\n     #scope_node: the node that owns the current scope\n \n+    def __init__(self, *args, **kwargs):\n+        super(ScopeTrackingTransform, self).__init__(*args, **kwargs)\n+        self.last_class_name = None\n+\n     def visit_ModuleNode(self, node):\n         self.scope_type = 'module'\n         self.scope_node = node\n         self._process_children(node)\n         return node\n \n-    def visit_scope(self, node, scope_type):\n+    def visit_scope(self, node, scope_type, attrs=None):\n         prev = self.scope_type, self.scope_node\n         self.scope_type = scope_type\n         self.scope_node = node\n-        self._process_children(node)\n+        self._process_children(node, attrs)\n         self.scope_type, self.scope_node = prev\n         return node\n \n     def visit_CClassDefNode(self, node):\n         return self.visit_scope(node, 'cclass')\n \n-    def visit_PyClassDefNode(self, node):\n-        return self.visit_scope(node, 'pyclass')\n+    def visit_PyClassDefNode(self, node, attrs=None):",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321978889",
            "id": 321978889,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk3ODg4OQ==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 29,
            "path": "Cython/Compiler/Visitor.py",
            "position": null,
            "pull_request_review_id": 285182908,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321978889",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321979006"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321979006"
                }
            },
            "author_association": "MEMBER",
            "body": "There is a mechanism for this that uses the list of `outer_attrs` for a node. Look for `visit_scoped_children`. Seems like the `ScopeTrackingTransform` should implement this as well. Having a special argument for a `visit_…()` method seems … surprising.",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-07T18:30:19Z",
            "diff_hunk": "@@ -2202,12 +2201,79 @@ def visit_FuncDefNode(self, node):\n     def visit_ClassDefNode(self, node):\n         orig_qualified_name = self.qualified_name[:]\n         entry = (getattr(node, 'entry', None) or             # PyClass\n-                 self.current_env().lookup_here(node.name))  # CClass\n+                 self.current_env().lookup_here(node.target.name))  # CClass\n         self._append_entry(entry)\n         self._super_visit_ClassDefNode(node)\n         self.qualified_name = orig_qualified_name\n         return node\n \n+class MangleDunderNamesTransform(ScopeTrackingTransform):\n+    \"\"\"__names appearing inside classes are mangled to their _classname__names form\n+\n+    This should be called after the pure Python @cython directives have all been\n+    applied\"\"\"\n+    def visit_PyClassDefNode(self, node):\n+        # The class name (target), list of bases and metaclass name should be\n+        # processed without being mangled by the class itself.\n+        # Note that for Python 2 the exclusion of the metaclass is incorrect\n+        # since it is defined inside the class as __metaclass__\n+        exclude_at_first = ['bases', 'metaclass', 'target']",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321979006",
            "id": 321979006,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk3OTAwNg==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 29,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 42,
            "pull_request_review_id": 285182908,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321979006",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321979141"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321979141"
                }
            },
            "author_association": "MEMBER",
            "body": "\"… and the reason why there are two test files is …\"\r\n(It's nice to not have to think too much about where a new test should go.)",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-07T18:35:33Z",
            "diff_hunk": "@@ -1,6 +1,8 @@\n # mode: run\n # ticket: 5\n \n+# Some more tests for the same sort of thing are in \"methodmangling_T1382\"",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321979141",
            "id": 321979141,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk3OTE0MQ==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 4,
            "path": "tests/run/methodmangling_T5.py",
            "position": null,
            "pull_request_review_id": 285182908,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321979141",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321979189"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321979189"
                }
            },
            "author_association": "MEMBER",
            "body": "Erm, what was it again that changes in Py3.9?",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-07T18:37:09Z",
            "diff_hunk": "@@ -0,0 +1,83 @@\n+# mode: run\n+# tag: pure3.9",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321979189",
            "id": 321979189,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk3OTE4OQ==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 2,
            "path": "tests/run/methodmangling_pure_T1382.py",
            "position": null,
            "pull_request_review_id": 285182908,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321979189",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321979233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321979233"
                }
            },
            "author_association": "MEMBER",
            "body": "Spaces around `==`.",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-07T18:38:59Z",
            "diff_hunk": "@@ -2202,12 +2201,79 @@ def visit_FuncDefNode(self, node):\n     def visit_ClassDefNode(self, node):\n         orig_qualified_name = self.qualified_name[:]\n         entry = (getattr(node, 'entry', None) or             # PyClass\n-                 self.current_env().lookup_here(node.name))  # CClass\n+                 self.current_env().lookup_here(node.target.name))  # CClass\n         self._append_entry(entry)\n         self._super_visit_ClassDefNode(node)\n         self.qualified_name = orig_qualified_name\n         return node\n \n+class MangleDunderNamesTransform(ScopeTrackingTransform):\n+    \"\"\"__names appearing inside classes are mangled to their _classname__names form\n+\n+    This should be called after the pure Python @cython directives have all been\n+    applied\"\"\"\n+    def visit_PyClassDefNode(self, node):\n+        # The class name (target), list of bases and metaclass name should be\n+        # processed without being mangled by the class itself.\n+        # Note that for Python 2 the exclusion of the metaclass is incorrect\n+        # since it is defined inside the class as __metaclass__\n+        exclude_at_first = ['bases', 'metaclass', 'target']\n+        attrs = [ attr for attr in node.child_attrs if attr not in exclude_at_first ]\n+\n+        node = super(MangleDunderNamesTransform, self).visit_PyClassDefNode(node, attrs=attrs)\n+\n+        self.visitchildren(node, attrs=exclude_at_first)\n+        return node\n+\n+    def visit_NameNode(self, node):\n+        node.name = self.mangle_special_name(node.name)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CNameDeclaratorNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_DefNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_AttributeNode(self, node):\n+        node.attribute = self.mangle_special_name(node.attribute)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CompilerDirectivesNode(self, node):\n+        # It probably isn't desirable to wait until ForwardDeclareTypes to\n+        # mangle the names (the earlier the better as far as possible).\n+        # Therefore, attempt to change the relevant compiler directives\n+        directives = node.directives\n+        locals_ = directives.get('locals', None)\n+        if locals_:\n+            new_locals = { self.mangle_special_name(k): v for k, v in locals_.items() }\n+            directives['locals'] = new_locals\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CallNode(self, node):\n+        # Attempt to catch \"declare\"\n+        name = node.function.as_cython_attribute()\n+        if name==\"declare\":",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321979233",
            "id": 321979233,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk3OTIzMw==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 68,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 285182908,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321979233",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321979584"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321979584"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was following the existing behaviour which only mangled names on Python classes. I'm happy to change it though.",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-07T18:49:26Z",
            "diff_hunk": "@@ -318,25 +318,33 @@ class ScopeTrackingTransform(CythonTransform):\n     #scope_type: can be either of 'module', 'function', 'cclass', 'pyclass', 'struct'\n     #scope_node: the node that owns the current scope\n \n+    def __init__(self, *args, **kwargs):\n+        super(ScopeTrackingTransform, self).__init__(*args, **kwargs)\n+        self.last_class_name = None\n+\n     def visit_ModuleNode(self, node):\n         self.scope_type = 'module'\n         self.scope_node = node\n         self._process_children(node)\n         return node\n \n-    def visit_scope(self, node, scope_type):\n+    def visit_scope(self, node, scope_type, attrs=None):\n         prev = self.scope_type, self.scope_node\n         self.scope_type = scope_type\n         self.scope_node = node\n-        self._process_children(node)\n+        self._process_children(node, attrs)\n         self.scope_type, self.scope_node = prev\n         return node\n \n     def visit_CClassDefNode(self, node):\n         return self.visit_scope(node, 'cclass')\n \n-    def visit_PyClassDefNode(self, node):\n-        return self.visit_scope(node, 'pyclass')\n+    def visit_PyClassDefNode(self, node, attrs=None):",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321979584",
            "id": 321979584,
            "in_reply_to_id": 321978889,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk3OTU4NA==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 29,
            "path": "Cython/Compiler/Visitor.py",
            "position": null,
            "pull_request_review_id": 285183646,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321979584",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321979738"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321979738"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I though I'd set to to a higher number (e.g. `pure100`). I was trying to turn off the \"pure\" tests for this file since the tests are designed to check that Cython typing is being applied correctly to `__names`. I couldn't find another way to do it. I guess it should (a) actually be higher, and (b) be documented why\r\n\r\n(Now removed in favour of `if cython.compiled`)",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-07T18:53:39Z",
            "diff_hunk": "@@ -0,0 +1,83 @@\n+# mode: run\n+# tag: pure3.9",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321979738",
            "id": 321979738,
            "in_reply_to_id": 321979189,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk3OTczOA==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 2,
            "path": "tests/run/methodmangling_pure_T1382.py",
            "position": null,
            "pull_request_review_id": 285183822,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321979738",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321996950"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321996950"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've solved this by no-longer inheriting from `ScopeTrackingTransform`. I wasn't actually using any features of it, except for the `last_class_name` attribute I added.",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-08T08:17:15Z",
            "diff_hunk": "@@ -2202,12 +2201,79 @@ def visit_FuncDefNode(self, node):\n     def visit_ClassDefNode(self, node):\n         orig_qualified_name = self.qualified_name[:]\n         entry = (getattr(node, 'entry', None) or             # PyClass\n-                 self.current_env().lookup_here(node.name))  # CClass\n+                 self.current_env().lookup_here(node.target.name))  # CClass\n         self._append_entry(entry)\n         self._super_visit_ClassDefNode(node)\n         self.qualified_name = orig_qualified_name\n         return node\n \n+class MangleDunderNamesTransform(ScopeTrackingTransform):\n+    \"\"\"__names appearing inside classes are mangled to their _classname__names form\n+\n+    This should be called after the pure Python @cython directives have all been\n+    applied\"\"\"\n+    def visit_PyClassDefNode(self, node):\n+        # The class name (target), list of bases and metaclass name should be\n+        # processed without being mangled by the class itself.\n+        # Note that for Python 2 the exclusion of the metaclass is incorrect\n+        # since it is defined inside the class as __metaclass__\n+        exclude_at_first = ['bases', 'metaclass', 'target']",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321996950",
            "id": 321996950,
            "in_reply_to_id": 321979006,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk5Njk1MA==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 29,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 42,
            "pull_request_review_id": 285202860,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321996950",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r321997009"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/321997009"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The bulk of the tests are now in `methodmangling_T5.py`. There's still an extra \"pure\" and \"cdef\" file to test specific features that don't fit in the main file, but they're small and with a well-defined purpose.",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2019-09-08T08:18:49Z",
            "diff_hunk": "@@ -1,6 +1,8 @@\n # mode: run\n # ticket: 5\n \n+# Some more tests for the same sort of thing are in \"methodmangling_T1382\"",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r321997009",
            "id": 321997009,
            "in_reply_to_id": 321979141,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk5NzAwOQ==",
            "original_commit_id": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "original_position": 4,
            "path": "tests/run/methodmangling_T5.py",
            "position": null,
            "pull_request_review_id": 285202927,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-04T17:32:15Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/321997009",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r377694726"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/377694726"
                }
            },
            "author_association": "MEMBER",
            "body": "Please over-indent the dangling lines by four characters to give a clear separation between the conditions and the following code block.",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2020-02-11T15:09:32Z",
            "diff_hunk": "@@ -2202,12 +2202,111 @@ def visit_FuncDefNode(self, node):\n     def visit_ClassDefNode(self, node):\n         orig_qualified_name = self.qualified_name[:]\n         entry = (getattr(node, 'entry', None) or             # PyClass\n-                 self.current_env().lookup_here(node.name))  # CClass\n+                 self.current_env().lookup_here(node.target.name))  # CClass\n         self._append_entry(entry)\n         self._super_visit_ClassDefNode(node)\n         self.qualified_name = orig_qualified_name\n         return node\n \n+class MangleDunderNamesTransform(CythonTransform):\n+    \"\"\"__names appearing inside classes are mangled to their _classname__names form\n+\n+    This should be called after the pure Python @cython directives have all been\n+    applied\"\"\"\n+    def __init__(self, *args, **kwargs):\n+        super(MangleDunderNamesTransform, self).__init__(*args, **kwargs)\n+        self.last_class_name = None\n+        self.dont_mangle_pyx = False\n+\n+    def _visit_class_common(self, node, name):\n+        # The class name (target), list of bases and metaclass name should be\n+        # processed without being mangled by the class itself.\n+        # Note that for Python 2 the exclusion of the metaclass is incorrect\n+        # since it is defined inside the class as __metaclass__\n+        exclude_at_first = ['bases', 'metaclass', 'target']\n+        attrs = [ attr for attr in node.child_attrs if attr not in exclude_at_first ]\n+\n+        prev = self.last_class_name\n+        self.last_class_name = name\n+        self.visitchildren(node, attrs=attrs)\n+        self.last_class_name = prev\n+\n+        self.visitchildren(node, attrs=exclude_at_first)\n+        return node\n+\n+    def visit_ModuleNode(self, node):\n+        dont_mangle_pyx = self.dont_mangle_pyx\n+        # classes defined in utility code are treated slightly and attributes\n+        # starting with __pyx_ aren't mangled (otherwise memoryviews break)\n+        self.dont_mangle_pyx = isinstance(node.scope, NonManglingModuleScope)\n+        self.visitchildren(node)\n+        self.dont_mangle_pyx = dont_mangle_pyx\n+        return node\n+\n+    def visit_PyClassDefNode(self, node):\n+        return self._visit_class_common(node, node.name)\n+\n+    def visit_CClassDefNode(self, node):\n+        # although neither metaclass or target exist for CClassDefNode this\n+        # does not prevent them being treated in the same way\n+        if node.visibility == \"extern\": # \"public\" too?\n+            # it's being imported from elsewhere so names are already set\n+            return node\n+        else:\n+            return self._visit_class_common(node, node.class_name)\n+\n+    def visit_NameNode(self, node):\n+        node.name = self.mangle_special_name(node.name)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CNameDeclaratorNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_DefNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_AttributeNode(self, node):\n+        node.attribute = self.mangle_special_name(node.attribute)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CompilerDirectivesNode(self, node):\n+        # It probably isn't desirable to wait until ForwardDeclareTypes to\n+        # mangle the names (the earlier the better as far as possible).\n+        # Therefore, attempt to change the relevant compiler directives\n+        directives = node.directives\n+        locals_ = directives.get('locals', None)\n+        if locals_:\n+            new_locals = { self.mangle_special_name(k): v for k, v in locals_.items() }\n+            directives['locals'] = new_locals\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CallNode(self, node):\n+        # Attempt to catch \"declare\"\n+        name = node.function.as_cython_attribute()\n+        if name == \"declare\":\n+            _, kwds = node.explicit_args_kwds()\n+            if kwds:\n+                for var, _ in kwds.key_value_pairs:\n+                    var.value = self.mangle_special_name(var.value)\n+        self.visitchildren(node)\n+        return node\n+\n+    def mangle_special_name(self, name):\n+        pyx_test = ((not self.dont_mangle_pyx) and\n+                    (not name.lower().startswith(Naming.pyrex_prefix)))\n+        if (self.last_class_name and\n+            name and name.startswith('__') and not name.endswith('__') and\n+            pyx_test):",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r377694726",
            "id": 377694726,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5NDcyNg==",
            "original_commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "original_position": 118,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 118,
            "pull_request_review_id": 356734859,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-11T15:27:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/377694726",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r377701944"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/377701944"
                }
            },
            "author_association": "MEMBER",
            "body": "I find this kind of double negation (\"not don't and not\") really hard to read. Is it the same as this?\r\n`is_internal_name = self.dont_mangle_pyx and name.lower().startswith(Naming.pyrex_prefix)`\r\nand then\r\n`if (self.last_class_name and not is_internal_name and …):`\r\n(And I would rather move the \"internal\" condition behind the `name.startswith(\"__\")` test, which seems the most likely to fail.)",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2020-02-11T15:20:10Z",
            "diff_hunk": "@@ -2202,12 +2202,111 @@ def visit_FuncDefNode(self, node):\n     def visit_ClassDefNode(self, node):\n         orig_qualified_name = self.qualified_name[:]\n         entry = (getattr(node, 'entry', None) or             # PyClass\n-                 self.current_env().lookup_here(node.name))  # CClass\n+                 self.current_env().lookup_here(node.target.name))  # CClass\n         self._append_entry(entry)\n         self._super_visit_ClassDefNode(node)\n         self.qualified_name = orig_qualified_name\n         return node\n \n+class MangleDunderNamesTransform(CythonTransform):\n+    \"\"\"__names appearing inside classes are mangled to their _classname__names form\n+\n+    This should be called after the pure Python @cython directives have all been\n+    applied\"\"\"\n+    def __init__(self, *args, **kwargs):\n+        super(MangleDunderNamesTransform, self).__init__(*args, **kwargs)\n+        self.last_class_name = None\n+        self.dont_mangle_pyx = False\n+\n+    def _visit_class_common(self, node, name):\n+        # The class name (target), list of bases and metaclass name should be\n+        # processed without being mangled by the class itself.\n+        # Note that for Python 2 the exclusion of the metaclass is incorrect\n+        # since it is defined inside the class as __metaclass__\n+        exclude_at_first = ['bases', 'metaclass', 'target']\n+        attrs = [ attr for attr in node.child_attrs if attr not in exclude_at_first ]\n+\n+        prev = self.last_class_name\n+        self.last_class_name = name\n+        self.visitchildren(node, attrs=attrs)\n+        self.last_class_name = prev\n+\n+        self.visitchildren(node, attrs=exclude_at_first)\n+        return node\n+\n+    def visit_ModuleNode(self, node):\n+        dont_mangle_pyx = self.dont_mangle_pyx\n+        # classes defined in utility code are treated slightly and attributes\n+        # starting with __pyx_ aren't mangled (otherwise memoryviews break)\n+        self.dont_mangle_pyx = isinstance(node.scope, NonManglingModuleScope)\n+        self.visitchildren(node)\n+        self.dont_mangle_pyx = dont_mangle_pyx\n+        return node\n+\n+    def visit_PyClassDefNode(self, node):\n+        return self._visit_class_common(node, node.name)\n+\n+    def visit_CClassDefNode(self, node):\n+        # although neither metaclass or target exist for CClassDefNode this\n+        # does not prevent them being treated in the same way\n+        if node.visibility == \"extern\": # \"public\" too?\n+            # it's being imported from elsewhere so names are already set\n+            return node\n+        else:\n+            return self._visit_class_common(node, node.class_name)\n+\n+    def visit_NameNode(self, node):\n+        node.name = self.mangle_special_name(node.name)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CNameDeclaratorNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_DefNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_AttributeNode(self, node):\n+        node.attribute = self.mangle_special_name(node.attribute)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CompilerDirectivesNode(self, node):\n+        # It probably isn't desirable to wait until ForwardDeclareTypes to\n+        # mangle the names (the earlier the better as far as possible).\n+        # Therefore, attempt to change the relevant compiler directives\n+        directives = node.directives\n+        locals_ = directives.get('locals', None)\n+        if locals_:\n+            new_locals = { self.mangle_special_name(k): v for k, v in locals_.items() }\n+            directives['locals'] = new_locals\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CallNode(self, node):\n+        # Attempt to catch \"declare\"\n+        name = node.function.as_cython_attribute()\n+        if name == \"declare\":\n+            _, kwds = node.explicit_args_kwds()\n+            if kwds:\n+                for var, _ in kwds.key_value_pairs:\n+                    var.value = self.mangle_special_name(var.value)\n+        self.visitchildren(node)\n+        return node\n+\n+    def mangle_special_name(self, name):\n+        pyx_test = ((not self.dont_mangle_pyx) and\n+                    (not name.lower().startswith(Naming.pyrex_prefix)))",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r377701944",
            "id": 377701944,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcwMTk0NA==",
            "original_commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "original_position": 115,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 115,
            "pull_request_review_id": 356734859,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-11T15:27:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/377701944",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r377705949"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/377705949"
                }
            },
            "author_association": "MEMBER",
            "body": "I would prefer having one place to evaluate these directives, and not pre-process them in a different place. They should first get mapped to normal declarations, and then those should be processed in the same way as the `cdef` and Python declarations.",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2020-02-11T15:25:53Z",
            "diff_hunk": "@@ -2202,12 +2202,111 @@ def visit_FuncDefNode(self, node):\n     def visit_ClassDefNode(self, node):\n         orig_qualified_name = self.qualified_name[:]\n         entry = (getattr(node, 'entry', None) or             # PyClass\n-                 self.current_env().lookup_here(node.name))  # CClass\n+                 self.current_env().lookup_here(node.target.name))  # CClass\n         self._append_entry(entry)\n         self._super_visit_ClassDefNode(node)\n         self.qualified_name = orig_qualified_name\n         return node\n \n+class MangleDunderNamesTransform(CythonTransform):\n+    \"\"\"__names appearing inside classes are mangled to their _classname__names form\n+\n+    This should be called after the pure Python @cython directives have all been\n+    applied\"\"\"\n+    def __init__(self, *args, **kwargs):\n+        super(MangleDunderNamesTransform, self).__init__(*args, **kwargs)\n+        self.last_class_name = None\n+        self.dont_mangle_pyx = False\n+\n+    def _visit_class_common(self, node, name):\n+        # The class name (target), list of bases and metaclass name should be\n+        # processed without being mangled by the class itself.\n+        # Note that for Python 2 the exclusion of the metaclass is incorrect\n+        # since it is defined inside the class as __metaclass__\n+        exclude_at_first = ['bases', 'metaclass', 'target']\n+        attrs = [ attr for attr in node.child_attrs if attr not in exclude_at_first ]\n+\n+        prev = self.last_class_name\n+        self.last_class_name = name\n+        self.visitchildren(node, attrs=attrs)\n+        self.last_class_name = prev\n+\n+        self.visitchildren(node, attrs=exclude_at_first)\n+        return node\n+\n+    def visit_ModuleNode(self, node):\n+        dont_mangle_pyx = self.dont_mangle_pyx\n+        # classes defined in utility code are treated slightly and attributes\n+        # starting with __pyx_ aren't mangled (otherwise memoryviews break)\n+        self.dont_mangle_pyx = isinstance(node.scope, NonManglingModuleScope)\n+        self.visitchildren(node)\n+        self.dont_mangle_pyx = dont_mangle_pyx\n+        return node\n+\n+    def visit_PyClassDefNode(self, node):\n+        return self._visit_class_common(node, node.name)\n+\n+    def visit_CClassDefNode(self, node):\n+        # although neither metaclass or target exist for CClassDefNode this\n+        # does not prevent them being treated in the same way\n+        if node.visibility == \"extern\": # \"public\" too?\n+            # it's being imported from elsewhere so names are already set\n+            return node\n+        else:\n+            return self._visit_class_common(node, node.class_name)\n+\n+    def visit_NameNode(self, node):\n+        node.name = self.mangle_special_name(node.name)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CNameDeclaratorNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_DefNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_AttributeNode(self, node):\n+        node.attribute = self.mangle_special_name(node.attribute)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CompilerDirectivesNode(self, node):\n+        # It probably isn't desirable to wait until ForwardDeclareTypes to\n+        # mangle the names (the earlier the better as far as possible).\n+        # Therefore, attempt to change the relevant compiler directives",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r377705949",
            "id": 377705949,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcwNTk0OQ==",
            "original_commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "original_position": 93,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 93,
            "pull_request_review_id": 356734859,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-11T15:27:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/377705949",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3123#discussion_r377796375"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3123"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/377796375"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm struggling to see how to get rid of this. The `locals` directive seems to be evaluated in `AnalyseDeclarationsTransform` (in contrast to what I've put in the comment...). By that time the names are already being put into scope entries tables, so it's too late for this transform to deal with them.\r\n\r\nIt's either what I've done here, or a big change to how the locals directive is processed.\r\n\r\n_Edit:_ Or it could go back into the `declare_*` Symtab stage, which I think is a bit fiddlier overall (name needs to be mangled at the start of pretty much every `declare_` function) but doesn't require anything special doing for the compiler directives.",
            "commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "created_at": "2020-02-11T17:48:45Z",
            "diff_hunk": "@@ -2202,12 +2202,111 @@ def visit_FuncDefNode(self, node):\n     def visit_ClassDefNode(self, node):\n         orig_qualified_name = self.qualified_name[:]\n         entry = (getattr(node, 'entry', None) or             # PyClass\n-                 self.current_env().lookup_here(node.name))  # CClass\n+                 self.current_env().lookup_here(node.target.name))  # CClass\n         self._append_entry(entry)\n         self._super_visit_ClassDefNode(node)\n         self.qualified_name = orig_qualified_name\n         return node\n \n+class MangleDunderNamesTransform(CythonTransform):\n+    \"\"\"__names appearing inside classes are mangled to their _classname__names form\n+\n+    This should be called after the pure Python @cython directives have all been\n+    applied\"\"\"\n+    def __init__(self, *args, **kwargs):\n+        super(MangleDunderNamesTransform, self).__init__(*args, **kwargs)\n+        self.last_class_name = None\n+        self.dont_mangle_pyx = False\n+\n+    def _visit_class_common(self, node, name):\n+        # The class name (target), list of bases and metaclass name should be\n+        # processed without being mangled by the class itself.\n+        # Note that for Python 2 the exclusion of the metaclass is incorrect\n+        # since it is defined inside the class as __metaclass__\n+        exclude_at_first = ['bases', 'metaclass', 'target']\n+        attrs = [ attr for attr in node.child_attrs if attr not in exclude_at_first ]\n+\n+        prev = self.last_class_name\n+        self.last_class_name = name\n+        self.visitchildren(node, attrs=attrs)\n+        self.last_class_name = prev\n+\n+        self.visitchildren(node, attrs=exclude_at_first)\n+        return node\n+\n+    def visit_ModuleNode(self, node):\n+        dont_mangle_pyx = self.dont_mangle_pyx\n+        # classes defined in utility code are treated slightly and attributes\n+        # starting with __pyx_ aren't mangled (otherwise memoryviews break)\n+        self.dont_mangle_pyx = isinstance(node.scope, NonManglingModuleScope)\n+        self.visitchildren(node)\n+        self.dont_mangle_pyx = dont_mangle_pyx\n+        return node\n+\n+    def visit_PyClassDefNode(self, node):\n+        return self._visit_class_common(node, node.name)\n+\n+    def visit_CClassDefNode(self, node):\n+        # although neither metaclass or target exist for CClassDefNode this\n+        # does not prevent them being treated in the same way\n+        if node.visibility == \"extern\": # \"public\" too?\n+            # it's being imported from elsewhere so names are already set\n+            return node\n+        else:\n+            return self._visit_class_common(node, node.class_name)\n+\n+    def visit_NameNode(self, node):\n+        node.name = self.mangle_special_name(node.name)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CNameDeclaratorNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_DefNode(self, node):\n+        return self.visit_NameNode(node)\n+\n+    def visit_AttributeNode(self, node):\n+        node.attribute = self.mangle_special_name(node.attribute)\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CompilerDirectivesNode(self, node):\n+        # It probably isn't desirable to wait until ForwardDeclareTypes to\n+        # mangle the names (the earlier the better as far as possible).\n+        # Therefore, attempt to change the relevant compiler directives",
            "html_url": "https://github.com/cython/cython/pull/3123#discussion_r377796375",
            "id": 377796375,
            "in_reply_to_id": 377705949,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5NjM3NQ==",
            "original_commit_id": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "original_position": 93,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 93,
            "pull_request_review_id": 356864942,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3123",
            "updated_at": "2020-02-11T19:30:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/377796375",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3123/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d1eb4ef4897761ee96a55ca3f1c5b792639ad38d/comments",
            "commit": {
                "author": {
                    "date": "2019-09-03T10:33:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-03T13:50:45Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Mangle __arg when passed to methods\n\nFollows Python behaviour",
                "tree": {
                    "sha": "6d5efae416f614d29cda814e4ca83cc1add6c554",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6d5efae416f614d29cda814e4ca83cc1add6c554"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d1eb4ef4897761ee96a55ca3f1c5b792639ad38d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/d1eb4ef4897761ee96a55ca3f1c5b792639ad38d",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZDFlYjRlZjQ4OTc3NjFlZTk2YTU1Y2EzZjFjNWI3OTI2MzlhZDM4ZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4a581eeff9e8d2842d7fecde514eac08e322fc0f",
                    "sha": "4a581eeff9e8d2842d7fecde514eac08e322fc0f",
                    "url": "https://api.github.com/repos/cython/cython/commits/4a581eeff9e8d2842d7fecde514eac08e322fc0f"
                }
            ],
            "sha": "d1eb4ef4897761ee96a55ca3f1c5b792639ad38d",
            "url": "https://api.github.com/repos/cython/cython/commits/d1eb4ef4897761ee96a55ca3f1c5b792639ad38d"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/95acd06514bffdd12f95e2db6f1da38a9a992291/comments",
            "commit": {
                "author": {
                    "date": "2019-09-03T14:45:15Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-03T14:45:15Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix Py2 conflict with __names and unicode identifiers",
                "tree": {
                    "sha": "6e067bfd1a75e46eb50052aa24a4e9883e50157e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6e067bfd1a75e46eb50052aa24a4e9883e50157e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/95acd06514bffdd12f95e2db6f1da38a9a992291",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/95acd06514bffdd12f95e2db6f1da38a9a992291",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OTVhY2QwNjUxNGJmZmRkMTJmOTVlMmRiNmYxZGEzOGE5YTk5MjI5MQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d1eb4ef4897761ee96a55ca3f1c5b792639ad38d",
                    "sha": "d1eb4ef4897761ee96a55ca3f1c5b792639ad38d",
                    "url": "https://api.github.com/repos/cython/cython/commits/d1eb4ef4897761ee96a55ca3f1c5b792639ad38d"
                }
            ],
            "sha": "95acd06514bffdd12f95e2db6f1da38a9a992291",
            "url": "https://api.github.com/repos/cython/cython/commits/95acd06514bffdd12f95e2db6f1da38a9a992291"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bc261a3e44a72ae88b3fd3c8d82232285735ac05/comments",
            "commit": {
                "author": {
                    "date": "2019-09-03T14:48:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-03T14:48:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed commented out code from testcase",
                "tree": {
                    "sha": "0d966c723f138793a2a7cbc3fe8eb42c6cc52545",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0d966c723f138793a2a7cbc3fe8eb42c6cc52545"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bc261a3e44a72ae88b3fd3c8d82232285735ac05",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/bc261a3e44a72ae88b3fd3c8d82232285735ac05",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YmMyNjFhM2U0NGE3MmFlODhiM2ZkM2M4ZDgyMjMyMjg1NzM1YWMwNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/95acd06514bffdd12f95e2db6f1da38a9a992291",
                    "sha": "95acd06514bffdd12f95e2db6f1da38a9a992291",
                    "url": "https://api.github.com/repos/cython/cython/commits/95acd06514bffdd12f95e2db6f1da38a9a992291"
                }
            ],
            "sha": "bc261a3e44a72ae88b3fd3c8d82232285735ac05",
            "url": "https://api.github.com/repos/cython/cython/commits/bc261a3e44a72ae88b3fd3c8d82232285735ac05"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b54f4f20e7db8516c45e4f9c56c7948d58f6fe8e/comments",
            "commit": {
                "author": {
                    "date": "2019-09-06T13:02:06Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-06T13:02:06Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Alternative approach for mangling __names in classes\n\nNow implemented as a parsetreetransform at the\nearliest viable time (just after scopes have been\nsetup).",
                "tree": {
                    "sha": "1e8fe28e2cc3eead9c1cfb7f03eec4b84b96554f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1e8fe28e2cc3eead9c1cfb7f03eec4b84b96554f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b54f4f20e7db8516c45e4f9c56c7948d58f6fe8e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b54f4f20e7db8516c45e4f9c56c7948d58f6fe8e",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjU0ZjRmMjBlN2RiODUxNmM0NWU0ZjljNTZjNzk0OGQ1OGY2ZmU4ZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bc261a3e44a72ae88b3fd3c8d82232285735ac05",
                    "sha": "bc261a3e44a72ae88b3fd3c8d82232285735ac05",
                    "url": "https://api.github.com/repos/cython/cython/commits/bc261a3e44a72ae88b3fd3c8d82232285735ac05"
                }
            ],
            "sha": "b54f4f20e7db8516c45e4f9c56c7948d58f6fe8e",
            "url": "https://api.github.com/repos/cython/cython/commits/b54f4f20e7db8516c45e4f9c56c7948d58f6fe8e"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9a1609b67652e3932d13757240debaa680ef5fd8/comments",
            "commit": {
                "author": {
                    "date": "2019-09-06T13:29:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-06T13:29:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Avoid internal cdef functions\n\nBroke Cython when it was compiled",
                "tree": {
                    "sha": "c6170286bad6b43d39653c8b94c7b83416116533",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c6170286bad6b43d39653c8b94c7b83416116533"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9a1609b67652e3932d13757240debaa680ef5fd8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9a1609b67652e3932d13757240debaa680ef5fd8",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OWExNjA5YjY3NjUyZTM5MzJkMTM3NTcyNDBkZWJhYTY4MGVmNWZkOA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b54f4f20e7db8516c45e4f9c56c7948d58f6fe8e",
                    "sha": "b54f4f20e7db8516c45e4f9c56c7948d58f6fe8e",
                    "url": "https://api.github.com/repos/cython/cython/commits/b54f4f20e7db8516c45e4f9c56c7948d58f6fe8e"
                }
            ],
            "sha": "9a1609b67652e3932d13757240debaa680ef5fd8",
            "url": "https://api.github.com/repos/cython/cython/commits/9a1609b67652e3932d13757240debaa680ef5fd8"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/afb99575afce1bcb2b31d5f3aa0f5e03f65f3570/comments",
            "commit": {
                "author": {
                    "date": "2019-09-07T12:58:25Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-07T12:58:25Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Mangling of __names in classes\n\nTransform moved earlier in the processing step\nto operate as much as possible on the \"raw\" AST.\nPut after the pure Python @cython directives have\nbeen processed",
                "tree": {
                    "sha": "7badafb6d86089916eaa54d6b374c05248a61e4f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7badafb6d86089916eaa54d6b374c05248a61e4f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/afb99575afce1bcb2b31d5f3aa0f5e03f65f3570",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/afb99575afce1bcb2b31d5f3aa0f5e03f65f3570",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YWZiOTk1NzVhZmNlMWJjYjJiMzFkNWYzYWEwZjVlMDNmNjVmMzU3MA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9a1609b67652e3932d13757240debaa680ef5fd8",
                    "sha": "9a1609b67652e3932d13757240debaa680ef5fd8",
                    "url": "https://api.github.com/repos/cython/cython/commits/9a1609b67652e3932d13757240debaa680ef5fd8"
                }
            ],
            "sha": "afb99575afce1bcb2b31d5f3aa0f5e03f65f3570",
            "url": "https://api.github.com/repos/cython/cython/commits/afb99575afce1bcb2b31d5f3aa0f5e03f65f3570"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b3a5b13510bf60e7c6bd59ab24eb0442160e446f/comments",
            "commit": {
                "author": {
                    "date": "2019-09-07T13:16:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-07T13:16:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed Cython compile (again)",
                "tree": {
                    "sha": "27035065812d426377386abc54afa470cdd8fe41",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/27035065812d426377386abc54afa470cdd8fe41"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjNhNWIxMzUxMGJmNjBlN2M2YmQ1OWFiMjRlYjA0NDIxNjBlNDQ2Zg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/afb99575afce1bcb2b31d5f3aa0f5e03f65f3570",
                    "sha": "afb99575afce1bcb2b31d5f3aa0f5e03f65f3570",
                    "url": "https://api.github.com/repos/cython/cython/commits/afb99575afce1bcb2b31d5f3aa0f5e03f65f3570"
                }
            ],
            "sha": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
            "url": "https://api.github.com/repos/cython/cython/commits/b3a5b13510bf60e7c6bd59ab24eb0442160e446f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bc5d99e8fd2f7a70d11de301bca71e6a3a10210a/comments",
            "commit": {
                "author": {
                    "date": "2019-09-08T08:12:37Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-08T08:12:37Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "More changes to __mangling for classes\n\nNow includes `cdef` classes. Also undoes the changes to Visitor.py\nCombines the tests (mostly) in one file",
                "tree": {
                    "sha": "580a1415036376f07303daded50c4c557fd8a7e0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/580a1415036376f07303daded50c4c557fd8a7e0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bc5d99e8fd2f7a70d11de301bca71e6a3a10210a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/bc5d99e8fd2f7a70d11de301bca71e6a3a10210a",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YmM1ZDk5ZThmZDJmN2E3MGQxMWRlMzAxYmNhNzFlNmEzYTEwMjEwYQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
                    "sha": "b3a5b13510bf60e7c6bd59ab24eb0442160e446f",
                    "url": "https://api.github.com/repos/cython/cython/commits/b3a5b13510bf60e7c6bd59ab24eb0442160e446f"
                }
            ],
            "sha": "bc5d99e8fd2f7a70d11de301bca71e6a3a10210a",
            "url": "https://api.github.com/repos/cython/cython/commits/bc5d99e8fd2f7a70d11de301bca71e6a3a10210a"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/eabf06e0a4e9f96dc5e22d07de25367f10bb9680/comments",
            "commit": {
                "author": {
                    "date": "2019-09-08T09:12:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-08T09:12:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Empty docstring so Python<3.4 doesn't fail doctest\n\nNo tests are supposed to run for methodmangling_pure in uncompiled\nmode. But doctest fails if it doesn't find a string",
                "tree": {
                    "sha": "3dc2d8c44e42881efe2194b0890bc3728337052a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3dc2d8c44e42881efe2194b0890bc3728337052a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/eabf06e0a4e9f96dc5e22d07de25367f10bb9680",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/eabf06e0a4e9f96dc5e22d07de25367f10bb9680",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZWFiZjA2ZTBhNGU5Zjk2ZGM1ZTIyZDA3ZGUyNTM2N2YxMGJiOTY4MA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bc5d99e8fd2f7a70d11de301bca71e6a3a10210a",
                    "sha": "bc5d99e8fd2f7a70d11de301bca71e6a3a10210a",
                    "url": "https://api.github.com/repos/cython/cython/commits/bc5d99e8fd2f7a70d11de301bca71e6a3a10210a"
                }
            ],
            "sha": "eabf06e0a4e9f96dc5e22d07de25367f10bb9680",
            "url": "https://api.github.com/repos/cython/cython/commits/eabf06e0a4e9f96dc5e22d07de25367f10bb9680"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f2852d61cce5146c9ab7d7864f30f0ca16b67bf9/comments",
            "commit": {
                "author": {
                    "date": "2020-02-04T17:28:38Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-04T17:28:38Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "__pyx_ names only kept unmangled in utility code\n\nHave to be excluded in utility code otherwise every memoryview\nbreaks. However, seems better to follow Python behaviour for\nnormal user code.",
                "tree": {
                    "sha": "2c39d5cbdeedc24fd51cfa71fc6e57c1373e5785",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2c39d5cbdeedc24fd51cfa71fc6e57c1373e5785"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZjI4NTJkNjFjY2U1MTQ2YzlhYjdkNzg2NGYzMGYwY2ExNmI2N2JmOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/eabf06e0a4e9f96dc5e22d07de25367f10bb9680",
                    "sha": "eabf06e0a4e9f96dc5e22d07de25367f10bb9680",
                    "url": "https://api.github.com/repos/cython/cython/commits/eabf06e0a4e9f96dc5e22d07de25367f10bb9680"
                }
            ],
            "sha": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
            "url": "https://api.github.com/repos/cython/cython/commits/f2852d61cce5146c9ab7d7864f30f0ca16b67bf9"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3123/commits",
    "created_at": "2019-09-03T13:55:42Z",
    "diff_url": "https://github.com/cython/cython/pull/3123.diff",
    "head": {
        "label": "da-woods:method_arg_mangling",
        "ref": "method_arg_mangling",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2020-02-12T14:40:44Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 56317,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2019-10-24T09:38:07Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3123",
    "id": 313605155,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3123",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "7723e1de08d3ed0da0010590ef91d5a2458dccbf",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEzNjA1MTU1",
    "number": 3123,
    "patch_url": "https://github.com/cython/cython/pull/3123.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3123/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/f2852d61cce5146c9ab7d7864f30f0ca16b67bf9",
    "title": "Mangle __arg when passed to methods",
    "updated_at": "2020-02-11T19:30:29Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3123",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}