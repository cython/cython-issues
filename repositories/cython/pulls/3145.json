{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3145/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3145/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3145"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3145"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3145/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3145"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/02a1d77c31fcb55add4da99c4c6e62d8962a96f8"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 909,
            "forks_count": 909,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 719,
            "open_issues_count": 719,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2019-10-09T14:34:04Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 55537,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4551,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2019-10-09T08:37:48Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4551,
            "watchers_count": 4551
        },
        "sha": "cd031618700bf8293818729ee07bfc855fb424a2",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Closes #555.\r\n\r\n@nevion's description in #555:\r\n> allows JIT/slightly AOC module compilation, similar to that of OpenCL/PyCUDA/PyOpenCL.\r\n> \r\n> This is useful for maximum performance with simpler reusable modules and simplifies flow code-fragment acceleration. The intent is to compile a (C/C++) module in initialization when all algorithm details are known (say those dependent on configuration or input data) - then put it in immediate high-performance use.\r\n\r\nIllustration of above point: Currently the use of `cdef function():` is not permitted in `inline`. This is however essential for specifying callbacks for c-libraries:\r\n```\r\nmodule = inline_module(\r\n    \"\"\"\r\n    from libc.stdint cimport uintptr_t\r\n\r\n    cdef foo(x):\r\n        return x * x\r\n\r\n    foo_ptr = <uintptr_t>&foo\r\n    \"\"\")\r\n\r\nprint(module.foo_ptr)\r\n```\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3145#discussion_r332335508"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3145"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/332335508"
                }
            },
            "author_association": "MEMBER",
            "body": "This isn't backwards compatible. ",
            "commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "created_at": "2019-10-08T04:56:17Z",
            "diff_hunk": "@@ -133,128 +289,123 @@ def _populate_unbound(kwds, unbound_symbols, locals=None, globals=None):\n             else:\n                 print(\"Couldn't find %r\" % symbol)\n \n-def cython_inline(code, get_type=unsafe_type,\n-                  lib_dir=os.path.join(get_cython_cache_dir(), 'inline'),\n-                  cython_include_dirs=None, cython_compiler_directives=None,\n-                  force=False, quiet=False, locals=None, globals=None, language_level=None, **kwds):\n+def cython_inline(\n+        code,\n+        get_type=unsafe_type,\n+        lib_dir=os.path.join(get_cython_cache_dir(), 'inline'),\n+        cython_include_dirs=None,\n+        cython_compiler_directives=None,\n+        force=False,\n+        quiet=False,\n+        locals=None,\n+        globals=None,\n+        language_level=None,\n+        **kwds):\n \n     if get_type is None:\n-        get_type = lambda x: 'object'\n-    ctx = _create_context(tuple(cython_include_dirs)) if cython_include_dirs else _cython_inline_default_context\n+        get_type = lambda x, ctx: 'object'",
            "html_url": "https://github.com/cython/cython/pull/3145#discussion_r332335508",
            "id": 332335508,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjMzNTUwOA==",
            "original_commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "original_position": 223,
            "path": "Cython/Build/Inline.py",
            "position": 223,
            "pull_request_review_id": 298533066,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3145",
            "updated_at": "2019-10-08T05:15:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/332335508",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3145#discussion_r332336694"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3145"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/332336694"
                }
            },
            "author_association": "MEMBER",
            "body": "Is there a need to return module_name? (In particular, retrieving the module from sys.modules when the cache was not hit above seems like a bug.)",
            "commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "created_at": "2019-10-08T05:04:35Z",
            "diff_hunk": "@@ -109,19 +109,175 @@ def _get_build_extension():\n     return build_extension\n \n \n+def cython_inline_raw(\n+        code,\n+        preprocessing_fn=None,\n+        transform_code_fn=None,\n+        module_cache_dir=os.path.join(get_cython_cache_dir(), 'inline'),\n+        c_include_dirs=None,\n+        distutils_extra_compile_args=None,\n+        cythonize_include_dirs=None,\n+        cythonize_compiler_directives=None,\n+        cythonize_kwargs=None,\n+        force=False,\n+        module_name_base=\"_cython_inline_raw_\",\n+        cache_key=None):\n+    \"\"\"Compiles code to a python extension and returns the imported module.\n+\n+    A preprocessing function to be run on the code may be supplied in the form:\n+\n+        preprocessed_code, module_name, transform_code_args = \\\n+            preprocessing_fn(code)\n+\n+    A code transformation function to be run before compilation may also be\n+    supplied in the form:\n+\n+        transformed_code, c_include_dirs, distutils_extra_compile_args = \\\n+            transform_code(code, c_include_dirs, distutils_extra_compile_args)\n+    \"\"\"\n+\n+    # set reasonable default values for undefined arguments\n+    c_include_dirs = c_include_dirs if c_include_dirs is not None else []\n+    distutils_extra_compile_args = distutils_extra_compile_args \\\n+        if distutils_extra_compile_args is not None else []\n+    cythonize_include_dirs = cythonize_include_dirs \\\n+        if cythonize_include_dirs is not None else ['.']\n+    cythonize_compiler_directives = cythonize_compiler_directives \\\n+        if cythonize_compiler_directives is not None else {}\n+    cythonize_kwargs = cythonize_kwargs if cythonize_kwargs is not None else {}\n+\n+    # Fast path if this has been called in this session with the same parameters\n+    preprocessing_code = preprocessing_fn.__code__ if preprocessing_fn else None\n+    transform_code_code = transform_code_fn.__code__ if transform_code_fn else None\n+    cache_key = (code, sys.version_info, sys.executable, Cython.__version__,\n+        preprocessing_code, transform_code_code, tuple(c_include_dirs),\n+        tuple(distutils_extra_compile_args), tuple(cythonize_include_dirs),\n+        tuple(cythonize_compiler_directives), tuple(cythonize_kwargs.items()),\n+        cache_key)\n+    module = cython_inline_raw.cache.get(cache_key)\n+    if module and not force:\n+        return module\n+\n+    if preprocessing_fn:\n+        code, module_name, transform_code_args = preprocessing_fn(code)",
            "html_url": "https://github.com/cython/cython/pull/3145#discussion_r332336694",
            "id": 332336694,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjMzNjY5NA==",
            "original_commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "original_position": 72,
            "path": "Cython/Build/Inline.py",
            "position": 72,
            "pull_request_review_id": 298533066,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3145",
            "updated_at": "2019-10-08T05:15:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/332336694",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3145#discussion_r332338059"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3145"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/332338059"
                }
            },
            "author_association": "MEMBER",
            "body": "In this case, this is only done to be able to strip common indent. Perhaps make that clearer?",
            "commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "created_at": "2019-10-08T05:13:59Z",
            "diff_hunk": "@@ -109,19 +109,175 @@ def _get_build_extension():\n     return build_extension\n \n \n+def cython_inline_raw(\n+        code,\n+        preprocessing_fn=None,\n+        transform_code_fn=None,\n+        module_cache_dir=os.path.join(get_cython_cache_dir(), 'inline'),\n+        c_include_dirs=None,\n+        distutils_extra_compile_args=None,\n+        cythonize_include_dirs=None,\n+        cythonize_compiler_directives=None,\n+        cythonize_kwargs=None,\n+        force=False,\n+        module_name_base=\"_cython_inline_raw_\",\n+        cache_key=None):\n+    \"\"\"Compiles code to a python extension and returns the imported module.\n+\n+    A preprocessing function to be run on the code may be supplied in the form:\n+\n+        preprocessed_code, module_name, transform_code_args = \\\n+            preprocessing_fn(code)\n+\n+    A code transformation function to be run before compilation may also be\n+    supplied in the form:\n+\n+        transformed_code, c_include_dirs, distutils_extra_compile_args = \\\n+            transform_code(code, c_include_dirs, distutils_extra_compile_args)\n+    \"\"\"\n+\n+    # set reasonable default values for undefined arguments\n+    c_include_dirs = c_include_dirs if c_include_dirs is not None else []\n+    distutils_extra_compile_args = distutils_extra_compile_args \\\n+        if distutils_extra_compile_args is not None else []\n+    cythonize_include_dirs = cythonize_include_dirs \\\n+        if cythonize_include_dirs is not None else ['.']\n+    cythonize_compiler_directives = cythonize_compiler_directives \\\n+        if cythonize_compiler_directives is not None else {}\n+    cythonize_kwargs = cythonize_kwargs if cythonize_kwargs is not None else {}\n+\n+    # Fast path if this has been called in this session with the same parameters\n+    preprocessing_code = preprocessing_fn.__code__ if preprocessing_fn else None\n+    transform_code_code = transform_code_fn.__code__ if transform_code_fn else None\n+    cache_key = (code, sys.version_info, sys.executable, Cython.__version__,\n+        preprocessing_code, transform_code_code, tuple(c_include_dirs),\n+        tuple(distutils_extra_compile_args), tuple(cythonize_include_dirs),\n+        tuple(cythonize_compiler_directives), tuple(cythonize_kwargs.items()),\n+        cache_key)\n+    module = cython_inline_raw.cache.get(cache_key)\n+    if module and not force:\n+        return module\n+\n+    if preprocessing_fn:\n+        code, module_name, transform_code_args = preprocessing_fn(code)\n+    if module_name is None:\n+        module_name = module_name_base + \\\n+            hashlib.sha1(_unicode(cache_key).encode('utf-8')).hexdigest()\n+\n+    if module_name in sys.modules:\n+        # fast-path: extension was previously compiled and imported\n+        #            return reference to existing module\n+        module = sys.modules[module_name]\n+        cython_inline_raw.cache[cache_key] = module\n+        return module\n+\n+    # extension was not yet imported in this session\n+    # construct the file-path for the python extension to load\n+    build_extension = None\n+    if cython_inline_raw.so_ext is None:\n+        # Figure out and cache current extension suffix\n+        build_extension = _get_build_extension()\n+        cython_inline_raw.so_ext = build_extension.get_ext_filename('')\n+    module_path = os.path.join(\n+        module_cache_dir, module_name + cython_inline_raw.so_ext)\n+    if not os.path.exists(module_cache_dir):\n+        os.makedirs(module_cache_dir)\n+\n+    # check if a python extension still needs to be compiled\n+    if force or not os.path.isfile(module_path):\n+        if transform_code_fn:\n+            # perform any code transformations if required\n+            code, c_include_dirs, distutils_extra_compile_args = transform_code_fn(\n+                    code, transform_code_args, list(c_include_dirs),\n+                    list(distutils_extra_compile_args))\n+        pyx_file = os.path.join(module_cache_dir, module_name + '.pyx')\n+        fh = open(pyx_file, 'w')\n+        try:\n+            fh.write(code)\n+        finally:\n+            fh.close()\n+        extension = Extension(\n+            name=module_name,\n+            sources=[pyx_file],\n+            include_dirs=c_include_dirs,\n+            extra_compile_args=distutils_extra_compile_args)\n+        if build_extension is None:\n+            build_extension = _get_build_extension()\n+        build_extension.extensions = cythonize(\n+            [extension],\n+            include_path=cythonize_include_dirs,\n+            compiler_directives=cythonize_compiler_directives,\n+            **cythonize_kwargs)\n+        build_extension.build_temp = os.path.dirname(pyx_file)\n+        build_extension.build_lib = module_cache_dir\n+        build_extension.run()\n+\n+    # load compiled python module\n+    module = imp.load_dynamic(module_name, module_path)\n+    cython_inline_raw.cache[cache_key] = module\n+    return module\n+\n+# Cached values used by cython_inline_raw above.\n+cython_inline_raw.so_ext = None\n+cython_inline_raw.cache = {}\n+\n+\n+def cython_inline_module(\n+        code,\n+        module_cache_dir=os.path.join(get_cython_cache_dir(), 'inline'),\n+        c_include_dirs=None,\n+        distutils_extra_compile_args=None,\n+        cythonize_include_dirs=None,\n+        cythonize_compiler_directives=None,\n+        cythonize_kwargs=None,\n+        language_level=None,\n+        quiet=False,\n+        force=False):\n+\n+    def preprocessing(code):\n+        code = to_unicode(code)\n+        code, literals = strip_string_literals(code)",
            "html_url": "https://github.com/cython/cython/pull/3145#discussion_r332338059",
            "id": 332338059,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjMzODA1OQ==",
            "original_commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "original_position": 149,
            "path": "Cython/Build/Inline.py",
            "position": 149,
            "pull_request_review_id": 298533066,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3145",
            "updated_at": "2019-10-08T05:15:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/332338059",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3145#discussion_r332338073"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3145"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/332338073"
                }
            },
            "author_association": "MEMBER",
            "body": "It seems taking preprocessing_fn and transform_code_fn as deferred callbacks makes this code harder to follow. Is the intent to see if we hit the cache before we apply these functions? If so, could we just apply both of these before invoking cython_inline_raw (possibly requiring a separate cache on the unprocesssed code, which I think should be fine.)",
            "commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "created_at": "2019-10-08T05:14:03Z",
            "diff_hunk": "@@ -109,19 +109,175 @@ def _get_build_extension():\n     return build_extension\n \n \n+def cython_inline_raw(\n+        code,\n+        preprocessing_fn=None,",
            "html_url": "https://github.com/cython/cython/pull/3145#discussion_r332338073",
            "id": 332338073,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjMzODA3Mw==",
            "original_commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "original_position": 24,
            "path": "Cython/Build/Inline.py",
            "position": 24,
            "pull_request_review_id": 298533066,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3145",
            "updated_at": "2019-10-08T05:15:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/332338073",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3145#discussion_r332338241"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3145"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/332338241"
                }
            },
            "author_association": "MEMBER",
            "body": "Could we infer this automatically here as well? ",
            "commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "created_at": "2019-10-08T05:15:20Z",
            "diff_hunk": "@@ -127,15 +127,31 @@ class _Optimization(object):\n \n \n _cython_inline = None\n-def inline(f, *args, **kwds):\n-    if isinstance(f, basestring):\n-        global _cython_inline\n-        if _cython_inline is None:\n-            from Cython.Build.Inline import cython_inline as _cython_inline\n-        return _cython_inline(f, *args, **kwds)\n-    else:\n+def inline(code, *args, **kwds):\n+    if not isinstance(code, basestring):\n         assert len(args) == len(kwds) == 0\n-        return f\n+        return code\n+    global _cython_inline\n+    if _cython_inline is None:\n+        from Cython.Build.Inline import cython_inline as _cython_inline\n+    return _cython_inline(code, *args, **kwds)\n+\n+\n+_cython_inline_module = None\n+def inline_module(code, *args, **kwds):\n+    \"\"\"Compiles code to a python extension and returns the imported module.\n+\n+    To use numpy within the code, please do not forget to set its:\n+\n+        c_include_dirs=[np.get_include()]",
            "html_url": "https://github.com/cython/cython/pull/3145#discussion_r332338241",
            "id": 332338241,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjMzODI0MQ==",
            "original_commit_id": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "original_position": 28,
            "path": "Cython/Shadow.py",
            "position": 28,
            "pull_request_review_id": 298533066,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3145",
            "updated_at": "2019-10-08T05:15:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/332338241",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3145/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/2229688?v=4",
                "events_url": "https://api.github.com/users/nevion/events{/privacy}",
                "followers_url": "https://api.github.com/users/nevion/followers",
                "following_url": "https://api.github.com/users/nevion/following{/other_user}",
                "gists_url": "https://api.github.com/users/nevion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nevion",
                "id": 2229688,
                "login": "nevion",
                "node_id": "MDQ6VXNlcjIyMjk2ODg=",
                "organizations_url": "https://api.github.com/users/nevion/orgs",
                "received_events_url": "https://api.github.com/users/nevion/received_events",
                "repos_url": "https://api.github.com/users/nevion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nevion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nevion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nevion"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/eedf2f52f5d0eff836f95a8edb94babd863d07de/comments",
            "commit": {
                "author": {
                    "date": "2016-08-14T00:29:04Z",
                    "email": "nevion@gmail.com",
                    "name": "Jason Newton"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-14T12:41:50Z",
                    "email": "arf1@github",
                    "name": "ARF1"
                },
                "message": "add cython.inline_module",
                "tree": {
                    "sha": "545deaf755d04ddd9b182908dd4679799b75401f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/545deaf755d04ddd9b182908dd4679799b75401f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/eedf2f52f5d0eff836f95a8edb94babd863d07de",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/eedf2f52f5d0eff836f95a8edb94babd863d07de",
            "node_id": "MDY6Q29tbWl0MjA4NTU5OTYzOmVlZGYyZjUyZjVkMGVmZjgzNmY5NWE4ZWRiOTRiYWJkODYzZDA3ZGU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cd031618700bf8293818729ee07bfc855fb424a2",
                    "sha": "cd031618700bf8293818729ee07bfc855fb424a2",
                    "url": "https://api.github.com/repos/cython/cython/commits/cd031618700bf8293818729ee07bfc855fb424a2"
                }
            ],
            "sha": "eedf2f52f5d0eff836f95a8edb94babd863d07de",
            "url": "https://api.github.com/repos/cython/cython/commits/eedf2f52f5d0eff836f95a8edb94babd863d07de"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0e44d43645b9d690520e470aa1e50d7d57dbd23e/comments",
            "commit": {
                "author": {
                    "date": "2019-09-14T09:20:32Z",
                    "email": "arf1@github",
                    "name": "ARF1"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-15T07:47:00Z",
                    "email": "arf1@github",
                    "name": "ARF1"
                },
                "message": "refactor inline_module",
                "tree": {
                    "sha": "3bcd88aa7a80af90127428fc79228b02aea6430d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3bcd88aa7a80af90127428fc79228b02aea6430d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0e44d43645b9d690520e470aa1e50d7d57dbd23e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/0e44d43645b9d690520e470aa1e50d7d57dbd23e",
            "node_id": "MDY6Q29tbWl0MjA4NTU5OTYzOjBlNDRkNDM2NDViOWQ2OTA1MjBlNDcwYWExZTUwZDdkNTdkYmQyM2U=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/eedf2f52f5d0eff836f95a8edb94babd863d07de",
                    "sha": "eedf2f52f5d0eff836f95a8edb94babd863d07de",
                    "url": "https://api.github.com/repos/cython/cython/commits/eedf2f52f5d0eff836f95a8edb94babd863d07de"
                }
            ],
            "sha": "0e44d43645b9d690520e470aa1e50d7d57dbd23e",
            "url": "https://api.github.com/repos/cython/cython/commits/0e44d43645b9d690520e470aa1e50d7d57dbd23e"
        },
        {
            "author": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4",
                "events_url": "https://api.github.com/users/ARF1/events{/privacy}",
                "followers_url": "https://api.github.com/users/ARF1/followers",
                "following_url": "https://api.github.com/users/ARF1/following{/other_user}",
                "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ARF1",
                "id": 5834577,
                "login": "ARF1",
                "node_id": "MDQ6VXNlcjU4MzQ1Nzc=",
                "organizations_url": "https://api.github.com/users/ARF1/orgs",
                "received_events_url": "https://api.github.com/users/ARF1/received_events",
                "repos_url": "https://api.github.com/users/ARF1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ARF1"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c2997685e54ad314433eab14964b044ebafa866a/comments",
            "commit": {
                "author": {
                    "date": "2019-09-15T08:26:06Z",
                    "email": "arik@funke.eu",
                    "name": "ARF1"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-15T08:26:06Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "typo in docstring",
                "tree": {
                    "sha": "cab167fbd85bfee6a27ee773442adea17e9a461e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cab167fbd85bfee6a27ee773442adea17e9a461e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c2997685e54ad314433eab14964b044ebafa866a",
                "verification": {
                    "payload": "tree cab167fbd85bfee6a27ee773442adea17e9a461e\nparent 0e44d43645b9d690520e470aa1e50d7d57dbd23e\nauthor ARF1 <arik@funke.eu> 1568535966 +0200\ncommitter GitHub <noreply@github.com> 1568535966 +0200\n\ntypo in docstring",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdffWeCRBK7hj4Ov3rIwAAdHIIACLz9iptC5KOPXwqTkVINDD8\n2jr7cJumEy9pzH+cyDBd+Z83zWiN44EW6tW6ZeN/AtltRSwHmGI9tZEh7zwaLaSt\n3pGjVTJijRHNCj5EBRMnOSCsvHgeAv2fhSa2bYM+COhwMnKXWg/cY3ixmhfilVlW\n+5fHD5TDELphw5J0NgabgfmjctTdmIrFiKYiUR8DWFSIfyHLppVz1gxID68SRVTP\n4sxRE9KB/VmIqAVhgEl2WppGoJmqYpbkDAApjDTLQd7Si8pHHAagkG4WJnlGBCMG\nQ1wu36u6reW9MNvGj7gUOXbNvZ/Vn8cxJGXQlZUOBoM5+5Svg8BfWJu7Vo9vH60=\n=gPjo\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/c2997685e54ad314433eab14964b044ebafa866a",
            "node_id": "MDY6Q29tbWl0MjA4NTU5OTYzOmMyOTk3Njg1ZTU0YWQzMTQ0MzNlYWIxNDk2NGIwNDRlYmFmYTg2NmE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0e44d43645b9d690520e470aa1e50d7d57dbd23e",
                    "sha": "0e44d43645b9d690520e470aa1e50d7d57dbd23e",
                    "url": "https://api.github.com/repos/cython/cython/commits/0e44d43645b9d690520e470aa1e50d7d57dbd23e"
                }
            ],
            "sha": "c2997685e54ad314433eab14964b044ebafa866a",
            "url": "https://api.github.com/repos/cython/cython/commits/c2997685e54ad314433eab14964b044ebafa866a"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/02a1d77c31fcb55add4da99c4c6e62d8962a96f8/comments",
            "commit": {
                "author": {
                    "date": "2019-09-15T11:18:45Z",
                    "email": "arf1@github",
                    "name": "ARF1"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-09-15T11:18:45Z",
                    "email": "arf1@github",
                    "name": "ARF1"
                },
                "message": "python 2.7 compatibility: remove list().copy() idioms",
                "tree": {
                    "sha": "e88fa54790bcb752eae1b85e2717b77a2d0f31b6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e88fa54790bcb752eae1b85e2717b77a2d0f31b6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "node_id": "MDY6Q29tbWl0MjA4NTU5OTYzOjAyYTFkNzdjMzFmY2I1NWFkZDRkYTk5YzRjNmU2MmQ4OTYyYTk2Zjg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c2997685e54ad314433eab14964b044ebafa866a",
                    "sha": "c2997685e54ad314433eab14964b044ebafa866a",
                    "url": "https://api.github.com/repos/cython/cython/commits/c2997685e54ad314433eab14964b044ebafa866a"
                }
            ],
            "sha": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
            "url": "https://api.github.com/repos/cython/cython/commits/02a1d77c31fcb55add4da99c4c6e62d8962a96f8"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3145/commits",
    "created_at": "2019-09-15T08:00:44Z",
    "diff_url": "https://github.com/cython/cython/pull/3145.diff",
    "head": {
        "label": "ARF1:module-inline-refactored",
        "ref": "module-inline-refactored",
        "repo": {
            "archive_url": "https://api.github.com/repos/ARF1/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ARF1/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ARF1/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ARF1/cython/branches{/branch}",
            "clone_url": "https://github.com/ARF1/cython.git",
            "collaborators_url": "https://api.github.com/repos/ARF1/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ARF1/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/ARF1/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ARF1/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ARF1/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ARF1/cython/contributors",
            "created_at": "2019-09-15T07:49:15Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ARF1/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ARF1/cython/downloads",
            "events_url": "https://api.github.com/repos/ARF1/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ARF1/cython/forks",
            "full_name": "ARF1/cython",
            "git_commits_url": "https://api.github.com/repos/ARF1/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ARF1/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ARF1/cython/git/tags{/sha}",
            "git_url": "git://github.com/ARF1/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/ARF1/cython/hooks",
            "html_url": "https://github.com/ARF1/cython",
            "id": 208559963,
            "issue_comment_url": "https://api.github.com/repos/ARF1/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ARF1/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ARF1/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/ARF1/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ARF1/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/ARF1/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ARF1/cython/merges",
            "milestones_url": "https://api.github.com/repos/ARF1/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMDg1NTk5NjM=",
            "notifications_url": "https://api.github.com/repos/ARF1/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4",
                "events_url": "https://api.github.com/users/ARF1/events{/privacy}",
                "followers_url": "https://api.github.com/users/ARF1/followers",
                "following_url": "https://api.github.com/users/ARF1/following{/other_user}",
                "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ARF1",
                "id": 5834577,
                "login": "ARF1",
                "node_id": "MDQ6VXNlcjU4MzQ1Nzc=",
                "organizations_url": "https://api.github.com/users/ARF1/orgs",
                "received_events_url": "https://api.github.com/users/ARF1/received_events",
                "repos_url": "https://api.github.com/users/ARF1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ARF1"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ARF1/cython/pulls{/number}",
            "pushed_at": "2019-09-15T11:18:54Z",
            "releases_url": "https://api.github.com/repos/ARF1/cython/releases{/id}",
            "size": 55499,
            "ssh_url": "git@github.com:ARF1/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ARF1/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/ARF1/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ARF1/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/ARF1/cython/subscription",
            "svn_url": "https://github.com/ARF1/cython",
            "tags_url": "https://api.github.com/repos/ARF1/cython/tags",
            "teams_url": "https://api.github.com/repos/ARF1/cython/teams",
            "trees_url": "https://api.github.com/repos/ARF1/cython/git/trees{/sha}",
            "updated_at": "2019-09-15T07:49:17Z",
            "url": "https://api.github.com/repos/ARF1/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
        "user": {
            "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4",
            "events_url": "https://api.github.com/users/ARF1/events{/privacy}",
            "followers_url": "https://api.github.com/users/ARF1/followers",
            "following_url": "https://api.github.com/users/ARF1/following{/other_user}",
            "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ARF1",
            "id": 5834577,
            "login": "ARF1",
            "node_id": "MDQ6VXNlcjU4MzQ1Nzc=",
            "organizations_url": "https://api.github.com/users/ARF1/orgs",
            "received_events_url": "https://api.github.com/users/ARF1/received_events",
            "repos_url": "https://api.github.com/users/ARF1/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ARF1"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3145",
    "id": 317618182,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3145",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "b73807270d73d73df06bee29a83c26960d647b68",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE3NjE4MTgy",
    "number": 3145,
    "patch_url": "https://github.com/cython/cython/pull/3145.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3145/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/02a1d77c31fcb55add4da99c4c6e62d8962a96f8",
    "title": "add cython.inline_module() - refactored",
    "updated_at": "2019-10-08T05:15:23Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3145",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4",
        "events_url": "https://api.github.com/users/ARF1/events{/privacy}",
        "followers_url": "https://api.github.com/users/ARF1/followers",
        "following_url": "https://api.github.com/users/ARF1/following{/other_user}",
        "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ARF1",
        "id": 5834577,
        "login": "ARF1",
        "node_id": "MDQ6VXNlcjU4MzQ1Nzc=",
        "organizations_url": "https://api.github.com/users/ARF1/orgs",
        "received_events_url": "https://api.github.com/users/ARF1/received_events",
        "repos_url": "https://api.github.com/users/ARF1/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ARF1"
    }
}