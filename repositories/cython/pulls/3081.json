{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3081/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3081/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3081"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3081"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3081/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3081"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/ac06ad7ed48fe2710850ea75486360aa12d0d738"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 876,
            "forks_count": 876,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 684,
            "open_issues_count": 684,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2019-08-26T14:25:48Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 55245,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4322,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2019-08-26T11:32:17Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4322,
            "watchers_count": 4322
        },
        "sha": "14acda8e7e0b4246ef80331146e66d4f5b70c4e8",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Issue: https://github.com/cython/cython/issues/2601\r\n\r\nI'm sure this isn't 100% complete and bug-free but it basically seems to work and doesn't look to break the tests (on my PC in Python 3 at least).\r\n\r\nThere's a few things you may want to query:\r\n1. I wonder if the changes to the lexer lexicon.py should be switchable by environment or confirguation options - at the moment they're permanently on.\r\n2. I'm also not completely convinced all the changes are done in the right place - I had to scatter them around a bit between different levels (mostly symtab and nodes, but also one in vistor) which seems slighly illogical.\r\n3. I think it is possible to get name collisions (if you really try) - the name mangling doesn't distinguish between unicode in a class name or in a function name or both. It may not be a huge concern but possibly deserves a closer look",
    "closed_at": "2019-08-24T08:22:06Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315212738"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315212738"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not add this method also to `BytesLiteral`? That would simplify all those `AttributeError` catching cases.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T13:34:20Z",
            "diff_hunk": "@@ -138,6 +138,13 @@ def contains_surrogates(self):\n     def as_utf8_string(self):\n         return bytes_literal(self.utf8encode(), 'utf8')\n \n+    def as_encoded_c_string_literal(self):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315212738",
            "id": 315212738,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIxMjczOA==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 4,
            "path": "Cython/Compiler/StringEncoding.py",
            "position": null,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315212738",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315213728"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315213728"
                }
            },
            "author_association": "MEMBER",
            "body": "Space after comma, please. Also in the calls below.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T13:36:09Z",
            "diff_hunk": "@@ -180,16 +179,22 @@ def error(position, message):\n \n LEVEL = 1 # warn about all errors level 1 or higher\n \n+def _write_file_encode(file,line):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315213728",
            "id": 315213728,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIxMzcyOA==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 12,
            "path": "Cython/Compiler/Errors.py",
            "position": null,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315213728",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315214169"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315214169"
                }
            },
            "author_association": "MEMBER",
            "body": "Space after comma.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T13:36:55Z",
            "diff_hunk": "@@ -16,7 +16,7 @@\n def make_lexicon():\n     from ..Plex import \\\n         Str, Any, AnyBut, AnyChar, Rep, Rep1, Opt, Bol, Eol, Eof, \\\n-        TEXT, IGNORE, Method, State, Lexicon\n+        TEXT, IGNORE, Method, State, Lexicon,Range",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315214169",
            "id": 315214169,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIxNDE2OQ==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 5,
            "path": "Cython/Compiler/Lexicon.py",
            "position": null,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315214169",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315214917"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315214917"
                }
            },
            "author_association": "MEMBER",
            "body": "Wow – isn't there a way to read these from `unicodedata`?",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T13:38:24Z",
            "diff_hunk": "@@ -26,6 +26,408 @@ def make_lexicon():\n     hexdigit = Any(\"0123456789ABCDEFabcdef\")\n     indentation = Bol + Rep(Any(\" \\t\"))\n \n+    # Some functions at the end of the file show how to generate these strings.\n+    # They're pretty slow to generate at runtime, and require Python3, so\n+    # are just included directly here\n+    unicode_start_character = (",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315214917",
            "id": 315214917,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIxNDkxNw==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 16,
            "path": "Cython/Compiler/Lexicon.py",
            "position": null,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315214917",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315225719"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315225719"
                }
            },
            "author_association": "MEMBER",
            "body": "Could we represent these as \"start characters + some more\", as done in the language spec?",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T13:59:25Z",
            "diff_hunk": "@@ -26,6 +26,408 @@ def make_lexicon():\n     hexdigit = Any(\"0123456789ABCDEFabcdef\")\n     indentation = Bol + Rep(Any(\" \\t\"))\n \n+    # Some functions at the end of the file show how to generate these strings.\n+    # They're pretty slow to generate at runtime, and require Python3, so\n+    # are just included directly here\n+    unicode_start_character = (\n+    Any((b'_\\xc2\\xaa\\xc2\\xb5\\xc2\\xba\\xcb\\xac\\xcb\\xae\\xcd\\xbf\\xce\\x86\\xce\\x8c\\xd5\\x99\\xdb'+\n+    b'\\x95\\xdb\\xbf\\xdc\\x90\\xde\\xb1\\xdf\\xba\\xe0\\xa0\\x9a\\xe0\\xa0\\xa4\\xe0\\xa0\\xa8\\xe0\\xa4'+\n+    b'\\xbd\\xe0\\xa5\\x90\\xe0\\xa6\\xb2\\xe0\\xa6\\xbd\\xe0\\xa7\\x8e\\xe0\\xa7\\xbc\\xe0\\xa9\\x9e\\xe0'+\n+    b'\\xaa\\xbd\\xe0\\xab\\x90\\xe0\\xab\\xb9\\xe0\\xac\\xbd\\xe0\\xad\\xb1\\xe0\\xae\\x83\\xe0\\xae\\x9c'+\n+    b'\\xe0\\xaf\\x90\\xe0\\xb0\\xbd\\xe0\\xb2\\x80\\xe0\\xb2\\xbd\\xe0\\xb3\\x9e\\xe0\\xb4\\xbd\\xe0\\xb5'+\n+    b'\\x8e\\xe0\\xb6\\xbd\\xe0\\xb8\\xb2\\xe0\\xba\\x84\\xe0\\xba\\x8a\\xe0\\xba\\x8d\\xe0\\xba\\xa5\\xe0'+\n+    b'\\xba\\xa7\\xe0\\xba\\xb2\\xe0\\xba\\xbd\\xe0\\xbb\\x86\\xe0\\xbc\\x80\\xe1\\x80\\xbf\\xe1\\x81\\xa1'+\n+    b'\\xe1\\x82\\x8e\\xe1\\x83\\x87\\xe1\\x83\\x8d\\xe1\\x89\\x98\\xe1\\x8b\\x80\\xe1\\x9f\\x97\\xe1\\x9f'+\n+    b'\\x9c\\xe1\\xa2\\xaa\\xe1\\xaa\\xa7\\xe1\\xbd\\x99\\xe1\\xbd\\x9b\\xe1\\xbd\\x9d\\xe1\\xbe\\xbe\\xe2'+\n+    b'\\x81\\xb1\\xe2\\x81\\xbf\\xe2\\x84\\x82\\xe2\\x84\\x87\\xe2\\x84\\x95\\xe2\\x84\\xa4\\xe2\\x84\\xa6'+\n+    b'\\xe2\\x84\\xa8\\xe2\\x85\\x8e\\xe2\\xb4\\xa7\\xe2\\xb4\\xad\\xe2\\xb5\\xaf\\xea\\xa3\\xbb\\xea\\xa7'+\n+    b'\\x8f\\xea\\xa9\\xba\\xea\\xaa\\xb1\\xea\\xab\\x80\\xea\\xab\\x82\\xef\\xac\\x9d\\xef\\xac\\xbe\\xef'+\n+    b'\\xb9\\xb1\\xef\\xb9\\xb3\\xef\\xb9\\xb7\\xef\\xb9\\xb9\\xef\\xb9\\xbb\\xef\\xb9\\xbd\\xf0\\x90\\xa0'+\n+    b'\\x88\\xf0\\x90\\xa0\\xbc\\xf0\\x90\\xa8\\x80\\xf0\\x90\\xbc\\xa7\\xf0\\x91\\x85\\x84\\xf0\\x91\\x85'+\n+    b'\\xb6\\xf0\\x91\\x87\\x9a\\xf0\\x91\\x87\\x9c\\xf0\\x91\\x8a\\x88\\xf0\\x91\\x8c\\xbd\\xf0\\x91\\x8d'+\n+    b'\\x90\\xf0\\x91\\x93\\x87\\xf0\\x91\\x99\\x84\\xf0\\x91\\xa3\\xbf\\xf0\\x91\\xa8\\x80\\xf0\\x91\\xa8'+\n+    b'\\xba\\xf0\\x91\\xa9\\x90\\xf0\\x91\\xaa\\x9d\\xf0\\x91\\xb1\\x80\\xf0\\x91\\xb5\\x86\\xf0\\x91\\xb6'+\n+    b'\\x98\\xf0\\x96\\xbd\\x90\\xf0\\x9d\\x92\\xa2\\xf0\\x9d\\x92\\xbb\\xf0\\x9d\\x95\\x86\\xf0\\x9e\\xb8'+\n+    b'\\xa4\\xf0\\x9e\\xb8\\xa7\\xf0\\x9e\\xb8\\xb9\\xf0\\x9e\\xb8\\xbb\\xf0\\x9e\\xb9\\x82\\xf0\\x9e\\xb9'+\n+    b'\\x87\\xf0\\x9e\\xb9\\x89\\xf0\\x9e\\xb9\\x8b\\xf0\\x9e\\xb9\\x94\\xf0\\x9e\\xb9\\x97\\xf0\\x9e\\xb9'+\n+    b'\\x99\\xf0\\x9e\\xb9\\x9b\\xf0\\x9e\\xb9\\x9d\\xf0\\x9e\\xb9\\x9f\\xf0\\x9e\\xb9\\xa4\\xf0\\x9e\\xb9'+\n+    b'\\xbe').decode('utf-8')) |\n+    Range((b'AZaz\\xc3\\x80\\xc3\\x96\\xc3\\x98\\xc3\\xb6\\xc3\\xb8\\xcb\\x81\\xcb\\x86\\xcb\\x91'+\n+    b'\\xcb\\xa0\\xcb\\xa4\\xcd\\xb0\\xcd\\xb4\\xcd\\xb6\\xcd\\xb7\\xcd\\xbb\\xcd\\xbd\\xce\\x88\\xce\\x8a'+\n+    b'\\xce\\x8e\\xce\\xa1\\xce\\xa3\\xcf\\xb5\\xcf\\xb7\\xd2\\x81\\xd2\\x8a\\xd4\\xaf\\xd4\\xb1\\xd5\\x96'+\n+    b'\\xd5\\xa0\\xd6\\x88\\xd7\\x90\\xd7\\xaa\\xd7\\xaf\\xd7\\xb2\\xd8\\xa0\\xd9\\x8a\\xd9\\xae\\xd9\\xaf'+\n+    b'\\xd9\\xb1\\xdb\\x93\\xdb\\xa5\\xdb\\xa6\\xdb\\xae\\xdb\\xaf\\xdb\\xba\\xdb\\xbc\\xdc\\x92\\xdc\\xaf'+\n+    b'\\xdd\\x8d\\xde\\xa5\\xdf\\x8a\\xdf\\xaa\\xdf\\xb4\\xdf\\xb5\\xe0\\xa0\\x80\\xe0\\xa0\\x95\\xe0\\xa1'+\n+    b'\\x80\\xe0\\xa1\\x98\\xe0\\xa1\\xa0\\xe0\\xa1\\xaa\\xe0\\xa2\\xa0\\xe0\\xa2\\xb4\\xe0\\xa2\\xb6\\xe0'+\n+    b'\\xa2\\xbd\\xe0\\xa4\\x84\\xe0\\xa4\\xb9\\xe0\\xa5\\x98\\xe0\\xa5\\xa1\\xe0\\xa5\\xb1\\xe0\\xa6\\x80'+\n+    b'\\xe0\\xa6\\x85\\xe0\\xa6\\x8c\\xe0\\xa6\\x8f\\xe0\\xa6\\x90\\xe0\\xa6\\x93\\xe0\\xa6\\xa8\\xe0\\xa6'+\n+    b'\\xaa\\xe0\\xa6\\xb0\\xe0\\xa6\\xb6\\xe0\\xa6\\xb9\\xe0\\xa7\\x9c\\xe0\\xa7\\x9d\\xe0\\xa7\\x9f\\xe0'+\n+    b'\\xa7\\xa1\\xe0\\xa7\\xb0\\xe0\\xa7\\xb1\\xe0\\xa8\\x85\\xe0\\xa8\\x8a\\xe0\\xa8\\x8f\\xe0\\xa8\\x90'+\n+    b'\\xe0\\xa8\\x93\\xe0\\xa8\\xa8\\xe0\\xa8\\xaa\\xe0\\xa8\\xb0\\xe0\\xa8\\xb2\\xe0\\xa8\\xb3\\xe0\\xa8'+\n+    b'\\xb5\\xe0\\xa8\\xb6\\xe0\\xa8\\xb8\\xe0\\xa8\\xb9\\xe0\\xa9\\x99\\xe0\\xa9\\x9c\\xe0\\xa9\\xb2\\xe0'+\n+    b'\\xa9\\xb4\\xe0\\xaa\\x85\\xe0\\xaa\\x8d\\xe0\\xaa\\x8f\\xe0\\xaa\\x91\\xe0\\xaa\\x93\\xe0\\xaa\\xa8'+\n+    b'\\xe0\\xaa\\xaa\\xe0\\xaa\\xb0\\xe0\\xaa\\xb2\\xe0\\xaa\\xb3\\xe0\\xaa\\xb5\\xe0\\xaa\\xb9\\xe0\\xab'+\n+    b'\\xa0\\xe0\\xab\\xa1\\xe0\\xac\\x85\\xe0\\xac\\x8c\\xe0\\xac\\x8f\\xe0\\xac\\x90\\xe0\\xac\\x93\\xe0'+\n+    b'\\xac\\xa8\\xe0\\xac\\xaa\\xe0\\xac\\xb0\\xe0\\xac\\xb2\\xe0\\xac\\xb3\\xe0\\xac\\xb5\\xe0\\xac\\xb9'+\n+    b'\\xe0\\xad\\x9c\\xe0\\xad\\x9d\\xe0\\xad\\x9f\\xe0\\xad\\xa1\\xe0\\xae\\x85\\xe0\\xae\\x8a\\xe0\\xae'+\n+    b'\\x8e\\xe0\\xae\\x90\\xe0\\xae\\x92\\xe0\\xae\\x95\\xe0\\xae\\x99\\xe0\\xae\\x9a\\xe0\\xae\\x9e\\xe0'+\n+    b'\\xae\\x9f\\xe0\\xae\\xa3\\xe0\\xae\\xa4\\xe0\\xae\\xa8\\xe0\\xae\\xaa\\xe0\\xae\\xae\\xe0\\xae\\xb9'+\n+    b'\\xe0\\xb0\\x85\\xe0\\xb0\\x8c\\xe0\\xb0\\x8e\\xe0\\xb0\\x90\\xe0\\xb0\\x92\\xe0\\xb0\\xa8\\xe0\\xb0'+\n+    b'\\xaa\\xe0\\xb0\\xb9\\xe0\\xb1\\x98\\xe0\\xb1\\x9a\\xe0\\xb1\\xa0\\xe0\\xb1\\xa1\\xe0\\xb2\\x85\\xe0'+\n+    b'\\xb2\\x8c\\xe0\\xb2\\x8e\\xe0\\xb2\\x90\\xe0\\xb2\\x92\\xe0\\xb2\\xa8\\xe0\\xb2\\xaa\\xe0\\xb2\\xb3'+\n+    b'\\xe0\\xb2\\xb5\\xe0\\xb2\\xb9\\xe0\\xb3\\xa0\\xe0\\xb3\\xa1\\xe0\\xb3\\xb1\\xe0\\xb3\\xb2\\xe0\\xb4'+\n+    b'\\x85\\xe0\\xb4\\x8c\\xe0\\xb4\\x8e\\xe0\\xb4\\x90\\xe0\\xb4\\x92\\xe0\\xb4\\xba\\xe0\\xb5\\x94\\xe0'+\n+    b'\\xb5\\x96\\xe0\\xb5\\x9f\\xe0\\xb5\\xa1\\xe0\\xb5\\xba\\xe0\\xb5\\xbf\\xe0\\xb6\\x85\\xe0\\xb6\\x96'+\n+    b'\\xe0\\xb6\\x9a\\xe0\\xb6\\xb1\\xe0\\xb6\\xb3\\xe0\\xb6\\xbb\\xe0\\xb7\\x80\\xe0\\xb7\\x86\\xe0\\xb8'+\n+    b'\\x81\\xe0\\xb8\\xb0\\xe0\\xb9\\x80\\xe0\\xb9\\x86\\xe0\\xba\\x81\\xe0\\xba\\x82\\xe0\\xba\\x87\\xe0'+\n+    b'\\xba\\x88\\xe0\\xba\\x94\\xe0\\xba\\x97\\xe0\\xba\\x99\\xe0\\xba\\x9f\\xe0\\xba\\xa1\\xe0\\xba\\xa3'+\n+    b'\\xe0\\xba\\xaa\\xe0\\xba\\xab\\xe0\\xba\\xad\\xe0\\xba\\xb0\\xe0\\xbb\\x80\\xe0\\xbb\\x84\\xe0\\xbb'+\n+    b'\\x9c\\xe0\\xbb\\x9f\\xe0\\xbd\\x80\\xe0\\xbd\\x87\\xe0\\xbd\\x89\\xe0\\xbd\\xac\\xe0\\xbe\\x88\\xe0'+\n+    b'\\xbe\\x8c\\xe1\\x80\\x80\\xe1\\x80\\xaa\\xe1\\x81\\x90\\xe1\\x81\\x95\\xe1\\x81\\x9a\\xe1\\x81\\x9d'+\n+    b'\\xe1\\x81\\xa5\\xe1\\x81\\xa6\\xe1\\x81\\xae\\xe1\\x81\\xb0\\xe1\\x81\\xb5\\xe1\\x82\\x81\\xe1\\x82'+\n+    b'\\xa0\\xe1\\x83\\x85\\xe1\\x83\\x90\\xe1\\x83\\xba\\xe1\\x83\\xbc\\xe1\\x89\\x88\\xe1\\x89\\x8a\\xe1'+\n+    b'\\x89\\x8d\\xe1\\x89\\x90\\xe1\\x89\\x96\\xe1\\x89\\x9a\\xe1\\x89\\x9d\\xe1\\x89\\xa0\\xe1\\x8a\\x88'+\n+    b'\\xe1\\x8a\\x8a\\xe1\\x8a\\x8d\\xe1\\x8a\\x90\\xe1\\x8a\\xb0\\xe1\\x8a\\xb2\\xe1\\x8a\\xb5\\xe1\\x8a'+\n+    b'\\xb8\\xe1\\x8a\\xbe\\xe1\\x8b\\x82\\xe1\\x8b\\x85\\xe1\\x8b\\x88\\xe1\\x8b\\x96\\xe1\\x8b\\x98\\xe1'+\n+    b'\\x8c\\x90\\xe1\\x8c\\x92\\xe1\\x8c\\x95\\xe1\\x8c\\x98\\xe1\\x8d\\x9a\\xe1\\x8e\\x80\\xe1\\x8e\\x8f'+\n+    b'\\xe1\\x8e\\xa0\\xe1\\x8f\\xb5\\xe1\\x8f\\xb8\\xe1\\x8f\\xbd\\xe1\\x90\\x81\\xe1\\x99\\xac\\xe1\\x99'+\n+    b'\\xaf\\xe1\\x99\\xbf\\xe1\\x9a\\x81\\xe1\\x9a\\x9a\\xe1\\x9a\\xa0\\xe1\\x9b\\xaa\\xe1\\x9b\\xae\\xe1'+\n+    b'\\x9b\\xb8\\xe1\\x9c\\x80\\xe1\\x9c\\x8c\\xe1\\x9c\\x8e\\xe1\\x9c\\x91\\xe1\\x9c\\xa0\\xe1\\x9c\\xb1'+\n+    b'\\xe1\\x9d\\x80\\xe1\\x9d\\x91\\xe1\\x9d\\xa0\\xe1\\x9d\\xac\\xe1\\x9d\\xae\\xe1\\x9d\\xb0\\xe1\\x9e'+\n+    b'\\x80\\xe1\\x9e\\xb3\\xe1\\xa0\\xa0\\xe1\\xa1\\xb8\\xe1\\xa2\\x80\\xe1\\xa2\\xa8\\xe1\\xa2\\xb0\\xe1'+\n+    b'\\xa3\\xb5\\xe1\\xa4\\x80\\xe1\\xa4\\x9e\\xe1\\xa5\\x90\\xe1\\xa5\\xad\\xe1\\xa5\\xb0\\xe1\\xa5\\xb4'+\n+    b'\\xe1\\xa6\\x80\\xe1\\xa6\\xab\\xe1\\xa6\\xb0\\xe1\\xa7\\x89\\xe1\\xa8\\x80\\xe1\\xa8\\x96\\xe1\\xa8'+\n+    b'\\xa0\\xe1\\xa9\\x94\\xe1\\xac\\x85\\xe1\\xac\\xb3\\xe1\\xad\\x85\\xe1\\xad\\x8b\\xe1\\xae\\x83\\xe1'+\n+    b'\\xae\\xa0\\xe1\\xae\\xae\\xe1\\xae\\xaf\\xe1\\xae\\xba\\xe1\\xaf\\xa5\\xe1\\xb0\\x80\\xe1\\xb0\\xa3'+\n+    b'\\xe1\\xb1\\x8d\\xe1\\xb1\\x8f\\xe1\\xb1\\x9a\\xe1\\xb1\\xbd\\xe1\\xb2\\x80\\xe1\\xb2\\x88\\xe1\\xb2'+\n+    b'\\x90\\xe1\\xb2\\xba\\xe1\\xb2\\xbd\\xe1\\xb2\\xbf\\xe1\\xb3\\xa9\\xe1\\xb3\\xac\\xe1\\xb3\\xae\\xe1'+\n+    b'\\xb3\\xb1\\xe1\\xb3\\xb5\\xe1\\xb3\\xb6\\xe1\\xb4\\x80\\xe1\\xb6\\xbf\\xe1\\xb8\\x80\\xe1\\xbc\\x95'+\n+    b'\\xe1\\xbc\\x98\\xe1\\xbc\\x9d\\xe1\\xbc\\xa0\\xe1\\xbd\\x85\\xe1\\xbd\\x88\\xe1\\xbd\\x8d\\xe1\\xbd'+\n+    b'\\x90\\xe1\\xbd\\x97\\xe1\\xbd\\x9f\\xe1\\xbd\\xbd\\xe1\\xbe\\x80\\xe1\\xbe\\xb4\\xe1\\xbe\\xb6\\xe1'+\n+    b'\\xbe\\xbc\\xe1\\xbf\\x82\\xe1\\xbf\\x84\\xe1\\xbf\\x86\\xe1\\xbf\\x8c\\xe1\\xbf\\x90\\xe1\\xbf\\x93'+\n+    b'\\xe1\\xbf\\x96\\xe1\\xbf\\x9b\\xe1\\xbf\\xa0\\xe1\\xbf\\xac\\xe1\\xbf\\xb2\\xe1\\xbf\\xb4\\xe1\\xbf'+\n+    b'\\xb6\\xe1\\xbf\\xbc\\xe2\\x82\\x90\\xe2\\x82\\x9c\\xe2\\x84\\x8a\\xe2\\x84\\x93\\xe2\\x84\\x98\\xe2'+\n+    b'\\x84\\x9d\\xe2\\x84\\xaa\\xe2\\x84\\xb9\\xe2\\x84\\xbc\\xe2\\x84\\xbf\\xe2\\x85\\x85\\xe2\\x85\\x89'+\n+    b'\\xe2\\x85\\xa0\\xe2\\x86\\x88\\xe2\\xb0\\x80\\xe2\\xb0\\xae\\xe2\\xb0\\xb0\\xe2\\xb1\\x9e\\xe2\\xb1'+\n+    b'\\xa0\\xe2\\xb3\\xa4\\xe2\\xb3\\xab\\xe2\\xb3\\xae\\xe2\\xb3\\xb2\\xe2\\xb3\\xb3\\xe2\\xb4\\x80\\xe2'+\n+    b'\\xb4\\xa5\\xe2\\xb4\\xb0\\xe2\\xb5\\xa7\\xe2\\xb6\\x80\\xe2\\xb6\\x96\\xe2\\xb6\\xa0\\xe2\\xb6\\xa6'+\n+    b'\\xe2\\xb6\\xa8\\xe2\\xb6\\xae\\xe2\\xb6\\xb0\\xe2\\xb6\\xb6\\xe2\\xb6\\xb8\\xe2\\xb6\\xbe\\xe2\\xb7'+\n+    b'\\x80\\xe2\\xb7\\x86\\xe2\\xb7\\x88\\xe2\\xb7\\x8e\\xe2\\xb7\\x90\\xe2\\xb7\\x96\\xe2\\xb7\\x98\\xe2'+\n+    b'\\xb7\\x9e\\xe3\\x80\\x85\\xe3\\x80\\x87\\xe3\\x80\\xa1\\xe3\\x80\\xa9\\xe3\\x80\\xb1\\xe3\\x80\\xb5'+\n+    b'\\xe3\\x80\\xb8\\xe3\\x80\\xbc\\xe3\\x81\\x81\\xe3\\x82\\x96\\xe3\\x82\\x9d\\xe3\\x82\\x9f\\xe3\\x82'+\n+    b'\\xa1\\xe3\\x83\\xba\\xe3\\x83\\xbc\\xe3\\x83\\xbf\\xe3\\x84\\x85\\xe3\\x84\\xaf\\xe3\\x84\\xb1\\xe3'+\n+    b'\\x86\\x8e\\xe3\\x86\\xa0\\xe3\\x86\\xba\\xe3\\x87\\xb0\\xe3\\x87\\xbf\\xe3\\x90\\x80\\xe4\\xb6\\xb5'+\n+    b'\\xe4\\xb8\\x80\\xe9\\xbf\\xaf\\xea\\x80\\x80\\xea\\x92\\x8c\\xea\\x93\\x90\\xea\\x93\\xbd\\xea\\x94'+\n+    b'\\x80\\xea\\x98\\x8c\\xea\\x98\\x90\\xea\\x98\\x9f\\xea\\x98\\xaa\\xea\\x98\\xab\\xea\\x99\\x80\\xea'+\n+    b'\\x99\\xae\\xea\\x99\\xbf\\xea\\x9a\\x9d\\xea\\x9a\\xa0\\xea\\x9b\\xaf\\xea\\x9c\\x97\\xea\\x9c\\x9f'+\n+    b'\\xea\\x9c\\xa2\\xea\\x9e\\x88\\xea\\x9e\\x8b\\xea\\x9e\\xb9\\xea\\x9f\\xb7\\xea\\xa0\\x81\\xea\\xa0'+\n+    b'\\x83\\xea\\xa0\\x85\\xea\\xa0\\x87\\xea\\xa0\\x8a\\xea\\xa0\\x8c\\xea\\xa0\\xa2\\xea\\xa1\\x80\\xea'+\n+    b'\\xa1\\xb3\\xea\\xa2\\x82\\xea\\xa2\\xb3\\xea\\xa3\\xb2\\xea\\xa3\\xb7\\xea\\xa3\\xbd\\xea\\xa3\\xbe'+\n+    b'\\xea\\xa4\\x8a\\xea\\xa4\\xa5\\xea\\xa4\\xb0\\xea\\xa5\\x86\\xea\\xa5\\xa0\\xea\\xa5\\xbc\\xea\\xa6'+\n+    b'\\x84\\xea\\xa6\\xb2\\xea\\xa7\\xa0\\xea\\xa7\\xa4\\xea\\xa7\\xa6\\xea\\xa7\\xaf\\xea\\xa7\\xba\\xea'+\n+    b'\\xa7\\xbe\\xea\\xa8\\x80\\xea\\xa8\\xa8\\xea\\xa9\\x80\\xea\\xa9\\x82\\xea\\xa9\\x84\\xea\\xa9\\x8b'+\n+    b'\\xea\\xa9\\xa0\\xea\\xa9\\xb6\\xea\\xa9\\xbe\\xea\\xaa\\xaf\\xea\\xaa\\xb5\\xea\\xaa\\xb6\\xea\\xaa'+\n+    b'\\xb9\\xea\\xaa\\xbd\\xea\\xab\\x9b\\xea\\xab\\x9d\\xea\\xab\\xa0\\xea\\xab\\xaa\\xea\\xab\\xb2\\xea'+\n+    b'\\xab\\xb4\\xea\\xac\\x81\\xea\\xac\\x86\\xea\\xac\\x89\\xea\\xac\\x8e\\xea\\xac\\x91\\xea\\xac\\x96'+\n+    b'\\xea\\xac\\xa0\\xea\\xac\\xa6\\xea\\xac\\xa8\\xea\\xac\\xae\\xea\\xac\\xb0\\xea\\xad\\x9a\\xea\\xad'+\n+    b'\\x9c\\xea\\xad\\xa5\\xea\\xad\\xb0\\xea\\xaf\\xa2\\xea\\xb0\\x80\\xed\\x9e\\xa3\\xed\\x9e\\xb0\\xed'+\n+    b'\\x9f\\x86\\xed\\x9f\\x8b\\xed\\x9f\\xbb\\xef\\xa4\\x80\\xef\\xa9\\xad\\xef\\xa9\\xb0\\xef\\xab\\x99'+\n+    b'\\xef\\xac\\x80\\xef\\xac\\x86\\xef\\xac\\x93\\xef\\xac\\x97\\xef\\xac\\x9f\\xef\\xac\\xa8\\xef\\xac'+\n+    b'\\xaa\\xef\\xac\\xb6\\xef\\xac\\xb8\\xef\\xac\\xbc\\xef\\xad\\x80\\xef\\xad\\x81\\xef\\xad\\x83\\xef'+\n+    b'\\xad\\x84\\xef\\xad\\x86\\xef\\xae\\xb1\\xef\\xaf\\x93\\xef\\xb1\\x9d\\xef\\xb1\\xa4\\xef\\xb4\\xbd'+\n+    b'\\xef\\xb5\\x90\\xef\\xb6\\x8f\\xef\\xb6\\x92\\xef\\xb7\\x87\\xef\\xb7\\xb0\\xef\\xb7\\xb9\\xef\\xb9'+\n+    b'\\xbf\\xef\\xbb\\xbc\\xef\\xbc\\xa1\\xef\\xbc\\xba\\xef\\xbd\\x81\\xef\\xbd\\x9a\\xef\\xbd\\xa6\\xef'+\n+    b'\\xbe\\x9d\\xef\\xbe\\xa0\\xef\\xbe\\xbe\\xef\\xbf\\x82\\xef\\xbf\\x87\\xef\\xbf\\x8a\\xef\\xbf\\x8f'+\n+    b'\\xef\\xbf\\x92\\xef\\xbf\\x97\\xef\\xbf\\x9a\\xef\\xbf\\x9c\\xf0\\x90\\x80\\x80\\xf0\\x90\\x80\\x8b'+\n+    b'\\xf0\\x90\\x80\\x8d\\xf0\\x90\\x80\\xa6\\xf0\\x90\\x80\\xa8\\xf0\\x90\\x80\\xba\\xf0\\x90\\x80\\xbc'+\n+    b'\\xf0\\x90\\x80\\xbd\\xf0\\x90\\x80\\xbf\\xf0\\x90\\x81\\x8d\\xf0\\x90\\x81\\x90\\xf0\\x90\\x81\\x9d'+\n+    b'\\xf0\\x90\\x82\\x80\\xf0\\x90\\x83\\xba\\xf0\\x90\\x85\\x80\\xf0\\x90\\x85\\xb4\\xf0\\x90\\x8a\\x80'+\n+    b'\\xf0\\x90\\x8a\\x9c\\xf0\\x90\\x8a\\xa0\\xf0\\x90\\x8b\\x90\\xf0\\x90\\x8c\\x80\\xf0\\x90\\x8c\\x9f'+\n+    b'\\xf0\\x90\\x8c\\xad\\xf0\\x90\\x8d\\x8a\\xf0\\x90\\x8d\\x90\\xf0\\x90\\x8d\\xb5\\xf0\\x90\\x8e\\x80'+\n+    b'\\xf0\\x90\\x8e\\x9d\\xf0\\x90\\x8e\\xa0\\xf0\\x90\\x8f\\x83\\xf0\\x90\\x8f\\x88\\xf0\\x90\\x8f\\x8f'+\n+    b'\\xf0\\x90\\x8f\\x91\\xf0\\x90\\x8f\\x95\\xf0\\x90\\x90\\x80\\xf0\\x90\\x92\\x9d\\xf0\\x90\\x92\\xb0'+\n+    b'\\xf0\\x90\\x93\\x93\\xf0\\x90\\x93\\x98\\xf0\\x90\\x93\\xbb\\xf0\\x90\\x94\\x80\\xf0\\x90\\x94\\xa7'+\n+    b'\\xf0\\x90\\x94\\xb0\\xf0\\x90\\x95\\xa3\\xf0\\x90\\x98\\x80\\xf0\\x90\\x9c\\xb6\\xf0\\x90\\x9d\\x80'+\n+    b'\\xf0\\x90\\x9d\\x95\\xf0\\x90\\x9d\\xa0\\xf0\\x90\\x9d\\xa7\\xf0\\x90\\xa0\\x80\\xf0\\x90\\xa0\\x85'+\n+    b'\\xf0\\x90\\xa0\\x8a\\xf0\\x90\\xa0\\xb5\\xf0\\x90\\xa0\\xb7\\xf0\\x90\\xa0\\xb8\\xf0\\x90\\xa0\\xbf'+\n+    b'\\xf0\\x90\\xa1\\x95\\xf0\\x90\\xa1\\xa0\\xf0\\x90\\xa1\\xb6\\xf0\\x90\\xa2\\x80\\xf0\\x90\\xa2\\x9e'+\n+    b'\\xf0\\x90\\xa3\\xa0\\xf0\\x90\\xa3\\xb2\\xf0\\x90\\xa3\\xb4\\xf0\\x90\\xa3\\xb5\\xf0\\x90\\xa4\\x80'+\n+    b'\\xf0\\x90\\xa4\\x95\\xf0\\x90\\xa4\\xa0\\xf0\\x90\\xa4\\xb9\\xf0\\x90\\xa6\\x80\\xf0\\x90\\xa6\\xb7'+\n+    b'\\xf0\\x90\\xa6\\xbe\\xf0\\x90\\xa6\\xbf\\xf0\\x90\\xa8\\x90\\xf0\\x90\\xa8\\x93\\xf0\\x90\\xa8\\x95'+\n+    b'\\xf0\\x90\\xa8\\x97\\xf0\\x90\\xa8\\x99\\xf0\\x90\\xa8\\xb5\\xf0\\x90\\xa9\\xa0\\xf0\\x90\\xa9\\xbc'+\n+    b'\\xf0\\x90\\xaa\\x80\\xf0\\x90\\xaa\\x9c\\xf0\\x90\\xab\\x80\\xf0\\x90\\xab\\x87\\xf0\\x90\\xab\\x89'+\n+    b'\\xf0\\x90\\xab\\xa4\\xf0\\x90\\xac\\x80\\xf0\\x90\\xac\\xb5\\xf0\\x90\\xad\\x80\\xf0\\x90\\xad\\x95'+\n+    b'\\xf0\\x90\\xad\\xa0\\xf0\\x90\\xad\\xb2\\xf0\\x90\\xae\\x80\\xf0\\x90\\xae\\x91\\xf0\\x90\\xb0\\x80'+\n+    b'\\xf0\\x90\\xb1\\x88\\xf0\\x90\\xb2\\x80\\xf0\\x90\\xb2\\xb2\\xf0\\x90\\xb3\\x80\\xf0\\x90\\xb3\\xb2'+\n+    b'\\xf0\\x90\\xb4\\x80\\xf0\\x90\\xb4\\xa3\\xf0\\x90\\xbc\\x80\\xf0\\x90\\xbc\\x9c\\xf0\\x90\\xbc\\xb0'+\n+    b'\\xf0\\x90\\xbd\\x85\\xf0\\x91\\x80\\x83\\xf0\\x91\\x80\\xb7\\xf0\\x91\\x82\\x83\\xf0\\x91\\x82\\xaf'+\n+    b'\\xf0\\x91\\x83\\x90\\xf0\\x91\\x83\\xa8\\xf0\\x91\\x84\\x83\\xf0\\x91\\x84\\xa6\\xf0\\x91\\x85\\x90'+\n+    b'\\xf0\\x91\\x85\\xb2\\xf0\\x91\\x86\\x83\\xf0\\x91\\x86\\xb2\\xf0\\x91\\x87\\x81\\xf0\\x91\\x87\\x84'+\n+    b'\\xf0\\x91\\x88\\x80\\xf0\\x91\\x88\\x91\\xf0\\x91\\x88\\x93\\xf0\\x91\\x88\\xab\\xf0\\x91\\x8a\\x80'+\n+    b'\\xf0\\x91\\x8a\\x86\\xf0\\x91\\x8a\\x8a\\xf0\\x91\\x8a\\x8d\\xf0\\x91\\x8a\\x8f\\xf0\\x91\\x8a\\x9d'+\n+    b'\\xf0\\x91\\x8a\\x9f\\xf0\\x91\\x8a\\xa8\\xf0\\x91\\x8a\\xb0\\xf0\\x91\\x8b\\x9e\\xf0\\x91\\x8c\\x85'+\n+    b'\\xf0\\x91\\x8c\\x8c\\xf0\\x91\\x8c\\x8f\\xf0\\x91\\x8c\\x90\\xf0\\x91\\x8c\\x93\\xf0\\x91\\x8c\\xa8'+\n+    b'\\xf0\\x91\\x8c\\xaa\\xf0\\x91\\x8c\\xb0\\xf0\\x91\\x8c\\xb2\\xf0\\x91\\x8c\\xb3\\xf0\\x91\\x8c\\xb5'+\n+    b'\\xf0\\x91\\x8c\\xb9\\xf0\\x91\\x8d\\x9d\\xf0\\x91\\x8d\\xa1\\xf0\\x91\\x90\\x80\\xf0\\x91\\x90\\xb4'+\n+    b'\\xf0\\x91\\x91\\x87\\xf0\\x91\\x91\\x8a\\xf0\\x91\\x92\\x80\\xf0\\x91\\x92\\xaf\\xf0\\x91\\x93\\x84'+\n+    b'\\xf0\\x91\\x93\\x85\\xf0\\x91\\x96\\x80\\xf0\\x91\\x96\\xae\\xf0\\x91\\x97\\x98\\xf0\\x91\\x97\\x9b'+\n+    b'\\xf0\\x91\\x98\\x80\\xf0\\x91\\x98\\xaf\\xf0\\x91\\x9a\\x80\\xf0\\x91\\x9a\\xaa\\xf0\\x91\\x9c\\x80'+\n+    b'\\xf0\\x91\\x9c\\x9a\\xf0\\x91\\xa0\\x80\\xf0\\x91\\xa0\\xab\\xf0\\x91\\xa2\\xa0\\xf0\\x91\\xa3\\x9f'+\n+    b'\\xf0\\x91\\xa8\\x8b\\xf0\\x91\\xa8\\xb2\\xf0\\x91\\xa9\\x9c\\xf0\\x91\\xaa\\x83\\xf0\\x91\\xaa\\x86'+\n+    b'\\xf0\\x91\\xaa\\x89\\xf0\\x91\\xab\\x80\\xf0\\x91\\xab\\xb8\\xf0\\x91\\xb0\\x80\\xf0\\x91\\xb0\\x88'+\n+    b'\\xf0\\x91\\xb0\\x8a\\xf0\\x91\\xb0\\xae\\xf0\\x91\\xb1\\xb2\\xf0\\x91\\xb2\\x8f\\xf0\\x91\\xb4\\x80'+\n+    b'\\xf0\\x91\\xb4\\x86\\xf0\\x91\\xb4\\x88\\xf0\\x91\\xb4\\x89\\xf0\\x91\\xb4\\x8b\\xf0\\x91\\xb4\\xb0'+\n+    b'\\xf0\\x91\\xb5\\xa0\\xf0\\x91\\xb5\\xa5\\xf0\\x91\\xb5\\xa7\\xf0\\x91\\xb5\\xa8\\xf0\\x91\\xb5\\xaa'+\n+    b'\\xf0\\x91\\xb6\\x89\\xf0\\x91\\xbb\\xa0\\xf0\\x91\\xbb\\xb2\\xf0\\x92\\x80\\x80\\xf0\\x92\\x8e\\x99'+\n+    b'\\xf0\\x92\\x90\\x80\\xf0\\x92\\x91\\xae\\xf0\\x92\\x92\\x80\\xf0\\x92\\x95\\x83\\xf0\\x93\\x80\\x80'+\n+    b'\\xf0\\x93\\x90\\xae\\xf0\\x94\\x90\\x80\\xf0\\x94\\x99\\x86\\xf0\\x96\\xa0\\x80\\xf0\\x96\\xa8\\xb8'+\n+    b'\\xf0\\x96\\xa9\\x80\\xf0\\x96\\xa9\\x9e\\xf0\\x96\\xab\\x90\\xf0\\x96\\xab\\xad\\xf0\\x96\\xac\\x80'+\n+    b'\\xf0\\x96\\xac\\xaf\\xf0\\x96\\xad\\x80\\xf0\\x96\\xad\\x83\\xf0\\x96\\xad\\xa3\\xf0\\x96\\xad\\xb7'+\n+    b'\\xf0\\x96\\xad\\xbd\\xf0\\x96\\xae\\x8f\\xf0\\x96\\xb9\\x80\\xf0\\x96\\xb9\\xbf\\xf0\\x96\\xbc\\x80'+\n+    b'\\xf0\\x96\\xbd\\x84\\xf0\\x96\\xbe\\x93\\xf0\\x96\\xbe\\x9f\\xf0\\x96\\xbf\\xa0\\xf0\\x96\\xbf\\xa1'+\n+    b'\\xf0\\x97\\x80\\x80\\xf0\\x98\\x9f\\xb1\\xf0\\x98\\xa0\\x80\\xf0\\x98\\xab\\xb2\\xf0\\x9b\\x80\\x80'+\n+    b'\\xf0\\x9b\\x84\\x9e\\xf0\\x9b\\x85\\xb0\\xf0\\x9b\\x8b\\xbb\\xf0\\x9b\\xb0\\x80\\xf0\\x9b\\xb1\\xaa'+\n+    b'\\xf0\\x9b\\xb1\\xb0\\xf0\\x9b\\xb1\\xbc\\xf0\\x9b\\xb2\\x80\\xf0\\x9b\\xb2\\x88\\xf0\\x9b\\xb2\\x90'+\n+    b'\\xf0\\x9b\\xb2\\x99\\xf0\\x9d\\x90\\x80\\xf0\\x9d\\x91\\x94\\xf0\\x9d\\x91\\x96\\xf0\\x9d\\x92\\x9c'+\n+    b'\\xf0\\x9d\\x92\\x9e\\xf0\\x9d\\x92\\x9f\\xf0\\x9d\\x92\\xa5\\xf0\\x9d\\x92\\xa6\\xf0\\x9d\\x92\\xa9'+\n+    b'\\xf0\\x9d\\x92\\xac\\xf0\\x9d\\x92\\xae\\xf0\\x9d\\x92\\xb9\\xf0\\x9d\\x92\\xbd\\xf0\\x9d\\x93\\x83'+\n+    b'\\xf0\\x9d\\x93\\x85\\xf0\\x9d\\x94\\x85\\xf0\\x9d\\x94\\x87\\xf0\\x9d\\x94\\x8a\\xf0\\x9d\\x94\\x8d'+\n+    b'\\xf0\\x9d\\x94\\x94\\xf0\\x9d\\x94\\x96\\xf0\\x9d\\x94\\x9c\\xf0\\x9d\\x94\\x9e\\xf0\\x9d\\x94\\xb9'+\n+    b'\\xf0\\x9d\\x94\\xbb\\xf0\\x9d\\x94\\xbe\\xf0\\x9d\\x95\\x80\\xf0\\x9d\\x95\\x84\\xf0\\x9d\\x95\\x8a'+\n+    b'\\xf0\\x9d\\x95\\x90\\xf0\\x9d\\x95\\x92\\xf0\\x9d\\x9a\\xa5\\xf0\\x9d\\x9a\\xa8\\xf0\\x9d\\x9b\\x80'+\n+    b'\\xf0\\x9d\\x9b\\x82\\xf0\\x9d\\x9b\\x9a\\xf0\\x9d\\x9b\\x9c\\xf0\\x9d\\x9b\\xba\\xf0\\x9d\\x9b\\xbc'+\n+    b'\\xf0\\x9d\\x9c\\x94\\xf0\\x9d\\x9c\\x96\\xf0\\x9d\\x9c\\xb4\\xf0\\x9d\\x9c\\xb6\\xf0\\x9d\\x9d\\x8e'+\n+    b'\\xf0\\x9d\\x9d\\x90\\xf0\\x9d\\x9d\\xae\\xf0\\x9d\\x9d\\xb0\\xf0\\x9d\\x9e\\x88\\xf0\\x9d\\x9e\\x8a'+\n+    b'\\xf0\\x9d\\x9e\\xa8\\xf0\\x9d\\x9e\\xaa\\xf0\\x9d\\x9f\\x82\\xf0\\x9d\\x9f\\x84\\xf0\\x9d\\x9f\\x8b'+\n+    b'\\xf0\\x9e\\xa0\\x80\\xf0\\x9e\\xa3\\x84\\xf0\\x9e\\xa4\\x80\\xf0\\x9e\\xa5\\x83\\xf0\\x9e\\xb8\\x80'+\n+    b'\\xf0\\x9e\\xb8\\x83\\xf0\\x9e\\xb8\\x85\\xf0\\x9e\\xb8\\x9f\\xf0\\x9e\\xb8\\xa1\\xf0\\x9e\\xb8\\xa2'+\n+    b'\\xf0\\x9e\\xb8\\xa9\\xf0\\x9e\\xb8\\xb2\\xf0\\x9e\\xb8\\xb4\\xf0\\x9e\\xb8\\xb7\\xf0\\x9e\\xb9\\x8d'+\n+    b'\\xf0\\x9e\\xb9\\x8f\\xf0\\x9e\\xb9\\x91\\xf0\\x9e\\xb9\\x92\\xf0\\x9e\\xb9\\xa1\\xf0\\x9e\\xb9\\xa2'+\n+    b'\\xf0\\x9e\\xb9\\xa7\\xf0\\x9e\\xb9\\xaa\\xf0\\x9e\\xb9\\xac\\xf0\\x9e\\xb9\\xb2\\xf0\\x9e\\xb9\\xb4'+\n+    b'\\xf0\\x9e\\xb9\\xb7\\xf0\\x9e\\xb9\\xb9\\xf0\\x9e\\xb9\\xbc\\xf0\\x9e\\xba\\x80\\xf0\\x9e\\xba\\x89'+\n+    b'\\xf0\\x9e\\xba\\x8b\\xf0\\x9e\\xba\\x9b\\xf0\\x9e\\xba\\xa1\\xf0\\x9e\\xba\\xa3\\xf0\\x9e\\xba\\xa5'+\n+    b'\\xf0\\x9e\\xba\\xa9\\xf0\\x9e\\xba\\xab\\xf0\\x9e\\xba\\xbb\\xf0\\xa0\\x80\\x80\\xf0\\xaa\\x9b\\x96'+\n+    b'\\xf0\\xaa\\x9c\\x80\\xf0\\xab\\x9c\\xb4\\xf0\\xab\\x9d\\x80\\xf0\\xab\\xa0\\x9d\\xf0\\xab\\xa0\\xa0'+\n+    b'\\xf0\\xac\\xba\\xa1\\xf0\\xac\\xba\\xb0\\xf0\\xae\\xaf\\xa0').decode('utf-8')))\n+    unicode_continuation_character = (",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315225719",
            "id": 315225719,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIyNTcxOQ==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 196,
            "path": "Cython/Compiler/Lexicon.py",
            "position": 22,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315225719",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315228786"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315228786"
                }
            },
            "author_association": "MEMBER",
            "body": "No need for a `+` here, just let the parser join the strings.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T14:05:38Z",
            "diff_hunk": "@@ -143,3 +546,65 @@ def prefixed_digits(prefix, digits):\n         #debug_file = scanner_dump_file\n         )\n \n+# Unicode character set explanation:\n+#  The easiest way to generate an appropriate character set is just to use the str.isidentifier method\n+#  This is only valid on Python 3; however, since these functions are just to illustrate how the unicode\n+#  plex strings were generated (and not actually used) compatibility doesn't matter\n+def _get_start_chrs_num():\n+    import sys\n+    return [ i for i in range(sys.maxunicode) if str.isidentifier(chr(i)) ]\n+\n+def _get_cont_chrs_num():\n+    import sys\n+    return [ i for i in range(sys.maxunicode) if str.isidentifier('a'+chr(i)) ]\n+# An alternative approach for getting character sets is at https://stackoverflow.com/a/49332214/4657412\n+\n+# The large lists of character digits are then converted to ranges with:\n+def _to_ranges(char_num_list):\n+    char_num_list = sorted(char_num_list)\n+    first_good_val = char_num_list[0]\n+\n+    out = []\n+    for n in range(1,len(char_num_list)):\n+        if char_num_list[n]-1 != char_num_list[n-1]:\n+            # discontinuous\n+            if first_good_val==char_num_list[n-1]:\n+                out.append(char_num_list[n-1])\n+            else:\n+                out.append(range(first_good_val,char_num_list[n-1]+1))\n+            first_good_val = char_num_list[n]\n+    return out\n+# and to the Plex commands copied into the code with\n+def _ranges_to_plex(ranges):\n+    single_chars = []\n+    plex_ranges = []\n+    for x in ranges:\n+        try:\n+            start = x.start\n+        except AttributeError:\n+            single_chars.append(chr(x))\n+        else:\n+            stop = x.stop\n+            plex_ranges.append((chr(start)+chr(stop-1)))\n+    # formatting\n+    single_chars = _make_split_strings(single_chars)\n+    plex_ranges = _make_split_strings(plex_ranges)\n+    return \"Any(({0}).decode('utf-8')) | Range(({1}).decode('utf-8'))\".format(\n+        single_chars,plex_ranges)\n+\n+def _make_split_strings(chars,splitby=20):\n+    chars = \"\".join(chars).encode('utf-8')\n+    out = []\n+    for i in range(0,len(chars),splitby):\n+        out.append(repr(chars[i:i+splitby]))\n+    return \"+\\n\".join(out)",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315228786",
            "id": 315228786,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIyODc4Ng==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 483,
            "path": "Cython/Compiler/Lexicon.py",
            "position": null,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315228786",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315230575"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315230575"
                }
            },
            "author_association": "MEMBER",
            "body": "Worth reverting this change.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T14:09:24Z",
            "diff_hunk": "@@ -1895,7 +1906,8 @@ def generate_function_definitions(self, env, code):\n         if use_refnanny:\n             tempvardecl_code.put_declare_refcount_context()\n             code.put_setup_refcount_context(\n-                self.entry.name, acquire_gil=acquire_gil_for_refnanny_only)\n+                self.entry.name,\n+                acquire_gil=acquire_gil_for_refnanny_only)",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315230575",
            "id": 315230575,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzMDU3NQ==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 40,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315230575",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315230644"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315230644"
                }
            },
            "author_association": "MEMBER",
            "body": "Can probably be avoided by avoiding the `AttributeError`.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T14:09:32Z",
            "diff_hunk": "@@ -879,6 +883,13 @@ class CArgDeclNode(Node):\n     annotation = None\n     is_dynamic = 0\n \n+    @property\n+    def name_cstring(self):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315230644",
            "id": 315230644,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzMDY0NA==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 25,
            "path": "Cython/Compiler/Nodes.py",
            "position": 25,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315230644",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315233721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315233721"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is this needed?",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T14:15:30Z",
            "diff_hunk": "@@ -659,6 +660,7 @@ def _dispatch_to_handler(self, node, function, arg_list, kwargs):\n     def _dispatch_to_method_handler(self, attr_name, self_arg,\n                                     is_unbound_method, type_name,\n                                     node, function, arg_list, kwargs):\n+        type_name = punycodify_name(type_name) # FIXME: this seems like it should be handled much earlier",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315233721",
            "id": 315233721,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzMzcyMQ==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 12,
            "path": "Cython/Compiler/Visitor.py",
            "position": null,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315233721",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315235577"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315235577"
                }
            },
            "author_association": "MEMBER",
            "body": "I would rather like to see punicode identifiers use a different prefix. For example, we use `__pyx_v_` for variables. Why not use `__pyx_vp_` for punicode variable names?",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T14:18:55Z",
            "diff_hunk": "@@ -42,6 +42,22 @@ def c_safe_identifier(cname):\n         cname = Naming.pyrex_prefix + cname\n     return cname\n \n+def punycodify_name(cname):\n+    # modified from  PEP489\n+    try:\n+        cname = cname.encode('ascii')\n+    except UnicodeEncodeError:\n+        cname = cname.encode('punycode').replace(b'-', b'_')\n+        if cname.startswith(Naming.pyrex_prefix.encode('ascii')):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315235577",
            "id": 315235577,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzNTU3Nw==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 10,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315235577",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315237173"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315237173"
                }
            },
            "author_association": "MEMBER",
            "body": "Could be that something like this is needed in a couple of more places – might be one of the reasons why the `AttributeError`s appeared for you.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T14:21:55Z",
            "diff_hunk": "@@ -3393,7 +3405,7 @@ def generate_function_definitions(self, env, code):\n                 self.return_type.declaration_code(Naming.retval_cname),\n                 retval_init))\n         code.put_declare_refcount_context()\n-        code.put_setup_refcount_context('%s (wrapper)' % self.name)\n+        code.put_setup_refcount_context(EncodedString('%s (wrapper)' % self.name))",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315237173",
            "id": 315237173,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzNzE3Mw==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 117,
            "path": "Cython/Compiler/Nodes.py",
            "position": 104,
            "pull_request_review_id": 276561053,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315237173",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315285788"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315285788"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I can't find an interface that lets you request all the characters in category. It's certainly possible to iterate character-by-character and use `unicodedata` to look up the category. However both this and my current approach of \"iterate through strings trying `isidentifier`) are pretty slow - about 0.5s on my PC. Therefore I don't think this code should be run every time Cython starts, hence the huge constants.\r\n\r\nI agree that if a better way exists it'd be good to use it!",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T15:53:27Z",
            "diff_hunk": "@@ -26,6 +26,408 @@ def make_lexicon():\n     hexdigit = Any(\"0123456789ABCDEFabcdef\")\n     indentation = Bol + Rep(Any(\" \\t\"))\n \n+    # Some functions at the end of the file show how to generate these strings.\n+    # They're pretty slow to generate at runtime, and require Python3, so\n+    # are just included directly here\n+    unicode_start_character = (",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315285788",
            "id": 315285788,
            "in_reply_to_id": 315214917,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI4NTc4OA==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 16,
            "path": "Cython/Compiler/Lexicon.py",
            "position": null,
            "pull_request_review_id": 276654466,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315285788",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315289404"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315289404"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The line after this snippet does that, so a variable becomes `__pyx_Uv_`; a function becomes `__pyx_Uf`. It does that just by inserting the `U` rather than adding more prefixes `Naming.py`.\r\n\r\n(Where that might cause problems is on unicode attributes in unicode classes - only one `U` gets inserted so it isn't clear which part of the identifier is unicode. I think if you're really unlucky you could end up with a name collision, but it's pretty unlikely)",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T16:01:00Z",
            "diff_hunk": "@@ -42,6 +42,22 @@ def c_safe_identifier(cname):\n         cname = Naming.pyrex_prefix + cname\n     return cname\n \n+def punycodify_name(cname):\n+    # modified from  PEP489\n+    try:\n+        cname = cname.encode('ascii')\n+    except UnicodeEncodeError:\n+        cname = cname.encode('punycode').replace(b'-', b'_')\n+        if cname.startswith(Naming.pyrex_prefix.encode('ascii')):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315289404",
            "id": 315289404,
            "in_reply_to_id": 315235577,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI4OTQwNA==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 10,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 276659021,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315289404",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315355503"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315355503"
                }
            },
            "author_association": "MEMBER",
            "body": "Then, let's make that an official `pyunicode_identifier_prefix` in `Naming.py`, so that it's visible where the prefix comes from.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T18:40:46Z",
            "diff_hunk": "@@ -42,6 +42,22 @@ def c_safe_identifier(cname):\n         cname = Naming.pyrex_prefix + cname\n     return cname\n \n+def punycodify_name(cname):\n+    # modified from  PEP489\n+    try:\n+        cname = cname.encode('ascii')\n+    except UnicodeEncodeError:\n+        cname = cname.encode('punycode').replace(b'-', b'_')\n+        if cname.startswith(Naming.pyrex_prefix.encode('ascii')):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315355503",
            "id": 315355503,
            "in_reply_to_id": 315235577,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTM1NTUwMw==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 10,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 276743177,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315355503",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315359856"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315359856"
                }
            },
            "author_association": "MEMBER",
            "body": "Thinking some more, since `unicodedata` is regularly updated with new CPython releases, and might learn new identifier characters over time, we should keep this set of characters independent of the specific CPython version that Cython runs with. Meaning, this set should be generated in a controlled way, always with the latest CPython version, and then committed.\r\n\r\nBTW, since this is Python code, and the string is generated and guaranteed to consist only of printable characters, why not leave the character decoding to the Python parser and use the real Unicode characters instead of byte strings? (That would make `Lexicon.py` a UTF-8 file, but I'm fine with that.)",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T18:51:27Z",
            "diff_hunk": "@@ -26,6 +26,408 @@ def make_lexicon():\n     hexdigit = Any(\"0123456789ABCDEFabcdef\")\n     indentation = Bol + Rep(Any(\" \\t\"))\n \n+    # Some functions at the end of the file show how to generate these strings.\n+    # They're pretty slow to generate at runtime, and require Python3, so\n+    # are just included directly here\n+    unicode_start_character = (",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315359856",
            "id": 315359856,
            "in_reply_to_id": 315214917,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTM1OTg1Ng==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 16,
            "path": "Cython/Compiler/Lexicon.py",
            "position": null,
            "pull_request_review_id": 276748686,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315359856",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315366814"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315366814"
                }
            },
            "author_association": "MEMBER",
            "body": "Also, I would prefer having the identifier character strings as global constants in the module, after the `make_lexicon()` function. That also simplifies their generation a bit. You can use start+end markers like `# GENERATED CODE STARTS HERE` to make them easy to update programmatically. Preferably by a separate script in `bin/`. And if you want to be really ambitious, then you can add a version marker of the CPython version that was used to generate the strings, and let the script print a big warning when they are regenerated with an older version. :)",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-19T19:09:05Z",
            "diff_hunk": "@@ -26,6 +26,408 @@ def make_lexicon():\n     hexdigit = Any(\"0123456789ABCDEFabcdef\")\n     indentation = Bol + Rep(Any(\" \\t\"))\n \n+    # Some functions at the end of the file show how to generate these strings.\n+    # They're pretty slow to generate at runtime, and require Python3, so\n+    # are just included directly here\n+    unicode_start_character = (",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315366814",
            "id": 315366814,
            "in_reply_to_id": 315214917,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTM2NjgxNA==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 16,
            "path": "Cython/Compiler/Lexicon.py",
            "position": null,
            "pull_request_review_id": 276757358,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315366814",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315700484"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315700484"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think I'd misidentified the problem slightly. _get_handler does `getattr` with a unicode string. This isn't valid when running Cython in Python 2 since only ascii strings are allowed. I've adopted a different approach of returning None from _get_handler if it's passed a unicode string. I'm not sure I understand the purpose of handlers enough to know if this is always valid, but it shouldn't break any existing code (since existing code should be passing unicode strings)",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T13:51:18Z",
            "diff_hunk": "@@ -659,6 +660,7 @@ def _dispatch_to_handler(self, node, function, arg_list, kwargs):\n     def _dispatch_to_method_handler(self, attr_name, self_arg,\n                                     is_unbound_method, type_name,\n                                     node, function, arg_list, kwargs):\n+        type_name = punycodify_name(type_name) # FIXME: this seems like it should be handled much earlier",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315700484",
            "id": 315700484,
            "in_reply_to_id": 315233721,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTcwMDQ4NA==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 12,
            "path": "Cython/Compiler/Visitor.py",
            "position": null,
            "pull_request_review_id": 277180897,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315700484",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315700835"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315700835"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've changed the name of this to be \"as_c_string_literal\" which matches what's already in BytesLiteral - on reflection that makes more sense than adding a new interface.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T13:51:52Z",
            "diff_hunk": "@@ -138,6 +138,13 @@ def contains_surrogates(self):\n     def as_utf8_string(self):\n         return bytes_literal(self.utf8encode(), 'utf8')\n \n+    def as_encoded_c_string_literal(self):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315700835",
            "id": 315700835,
            "in_reply_to_id": 315212738,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTcwMDgzNQ==",
            "original_commit_id": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "original_position": 4,
            "path": "Cython/Compiler/StringEncoding.py",
            "position": null,
            "pull_request_review_id": 277181346,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315700835",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315840928"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315840928"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, is the exception still an issue here? Maybe there is still a case where a class name is generated and not covered as `EncodedString`?",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T18:31:45Z",
            "diff_hunk": "@@ -2155,9 +2155,14 @@ def generate_typeobj_definition(self, modname, entry, code):\n         code.putln(header % type.typeobj_cname)\n         code.putln(\n             \"PyVarObject_HEAD_INIT(0, 0)\")\n+        try:\n+            classname = scope.class_name.as_c_string_literal()\n+        except AttributeError:\n+            classname = '\"%s\"' % scope.class_name",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315840928",
            "id": 315840928,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0MDkyOA==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 26,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315840928",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315842463"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315842463"
                }
            },
            "author_association": "MEMBER",
            "body": "Space after comma.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T18:35:19Z",
            "diff_hunk": "@@ -138,6 +138,14 @@ def contains_surrogates(self):\n     def as_utf8_string(self):\n         return bytes_literal(self.utf8encode(), 'utf8')\n \n+    def as_c_string_literal(self):\n+        # first encodes the string then produces a c string literal\n+        if self.encoding is None:\n+            s = self.as_utf8_string()\n+        else:\n+            s = bytes_literal(self.byteencode(),self.encoding)",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315842463",
            "id": 315842463,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0MjQ2Mw==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 9,
            "path": "Cython/Compiler/StringEncoding.py",
            "position": null,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315842463",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315845633"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315845633"
                }
            },
            "author_association": "MEMBER",
            "body": "Space after comma.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T18:42:18Z",
            "diff_hunk": "@@ -42,6 +42,23 @@ def c_safe_identifier(cname):\n         cname = Naming.pyrex_prefix + cname\n     return cname\n \n+def punycodify_name(cname):\n+    # modified from  PEP489\n+    try:\n+        cname = cname.encode('ascii')\n+    except UnicodeEncodeError:\n+        cname = cname.encode('punycode').replace(b'-', b'_')\n+        if cname.startswith(Naming.pyrex_prefix.encode('ascii')):\n+            # a punycode name could also be a valid ascii variable name so\n+            # change the prefix to distinguish\n+            cname = cname.replace(Naming.pyrex_prefix.encode('ascii'),\n+                                  Naming.pyunicode_identifier_prefix.encode('ascii'), 1)\n+    if not isinstance(cname,str):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315845633",
            "id": 315845633,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0NTYzMw==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 15,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315845633",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315848822"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315848822"
                }
            },
            "author_association": "MEMBER",
            "body": "Does it really hurt to allow them also in `language_level=2`?",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T18:49:35Z",
            "diff_hunk": "@@ -446,6 +463,19 @@ def declare(self, name, cname, type, pos, visibility, shadow = 0, is_type = 0, c\n         if not self.in_cinclude and cname and re.match(\"^_[_A-Z]+$\", cname):\n             # See https://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html#Reserved-Names\n             warning(pos, \"'%s' is a reserved name in C.\" % cname, -1)\n+\n+        try:\n+            ll2 = self.context.language_level == 2\n+        except AttributeError:\n+            # some scopes, for example the builtin scope, don't\n+            # seem to have a context - don't worry about these ones\n+            ll2 = False\n+        if ll2 and name:\n+            try:\n+                name.encode('ascii')\n+            except UnicodeEncodeError:\n+                error(pos, \"Unicode identifiers are only supported at language_level>=3\")",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315848822",
            "id": 315848822,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0ODgyMg==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 48,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315848822",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315849522"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315849522"
                }
            },
            "author_association": "MEMBER",
            "body": "This isn't the right place to wrap the name. It should be done by whatever creates the name string, not here (because many callers should already pass an `EncodedString`, and we shouldn't re-wrap those here).",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T18:51:09Z",
            "diff_hunk": "@@ -2538,7 +2569,7 @@ def declare_pyfunction(self, name, pos, allow_redefine=False):\n         # Add an entry for a method.\n         signature = get_property_accessor_signature(name)\n         if signature:\n-            entry = self.declare(name, name, py_object_type, pos, 'private')\n+            entry = self.declare(EncodedString(name), name, py_object_type, pos, 'private')",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315849522",
            "id": 315849522,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0OTUyMg==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 111,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315849522",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315851249"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315851249"
                }
            },
            "author_association": "MEMBER",
            "body": "Space after comma (and some more below).",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T18:55:22Z",
            "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+\n+#\n+#   Updates Cython's Lexicon.py with the unicode characters that are accepted as\n+#   identifiers. Should be run with the most recent version of Python possible\n+#   to ensure that Lexicon is as complete as possible.\n+#\n+#   Python3 only (it relies on str.isidentifier which is a Python 3 addition)\n+#\n+#   Run with either\n+#    --overwrite    to update the existing Lexicon.py file\n+#    --here         to create a copy of Lexicon.py in the current directory\n+\n+import sys\n+from io import StringIO\n+import os\n+\n+# Make sure we import the right Cython\n+cythonpath, _ = os.path.split(os.path.realpath(__file__)) # bin directory\n+cythonpath, _ = os.path.split(cythonpath)\n+if os.path.exists(os.path.join(cythonpath,\"Cython\")):",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315851249",
            "id": 315851249,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg1MTI0OQ==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 21,
            "path": "bin/cython-generate-lexicon.py",
            "position": 22,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315851249",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315851613"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315851613"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this can happily be the default – the file is under version control, so overwriting it is just fine and gives a nice diff.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T18:56:16Z",
            "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+\n+#\n+#   Updates Cython's Lexicon.py with the unicode characters that are accepted as\n+#   identifiers. Should be run with the most recent version of Python possible\n+#   to ensure that Lexicon is as complete as possible.\n+#\n+#   Python3 only (it relies on str.isidentifier which is a Python 3 addition)\n+#\n+#   Run with either\n+#    --overwrite    to update the existing Lexicon.py file\n+#    --here         to create a copy of Lexicon.py in the current directory\n+\n+import sys\n+from io import StringIO\n+import os\n+\n+# Make sure we import the right Cython\n+cythonpath, _ = os.path.split(os.path.realpath(__file__)) # bin directory\n+cythonpath, _ = os.path.split(cythonpath)\n+if os.path.exists(os.path.join(cythonpath,\"Cython\")):\n+    sys.path.insert(0, cythonpath)\n+    print(\"Found (and using) local cython directory\")\n+# else we aren't in a development directory\n+\n+from Cython.Compiler import Lexicon\n+\n+def main():\n+    if (len(sys.argv) != 2 or\n+        (sys.argv[1] not in ['--overwrite','--here'])):\n+        print(\"\"\"Call the script with either:\n+  --overwrite    to update the existing Lexicon.py file",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315851613",
            "id": 315851613,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg1MTYxMw==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 32,
            "path": "bin/cython-generate-lexicon.py",
            "position": null,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315851613",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315853666"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315853666"
                }
            },
            "author_association": "MEMBER",
            "body": "Feel free to use `@functools.lru_cache()` to avoid creating this list more than once.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T19:01:08Z",
            "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+\n+#\n+#   Updates Cython's Lexicon.py with the unicode characters that are accepted as\n+#   identifiers. Should be run with the most recent version of Python possible\n+#   to ensure that Lexicon is as complete as possible.\n+#\n+#   Python3 only (it relies on str.isidentifier which is a Python 3 addition)\n+#\n+#   Run with either\n+#    --overwrite    to update the existing Lexicon.py file\n+#    --here         to create a copy of Lexicon.py in the current directory\n+\n+import sys\n+from io import StringIO\n+import os\n+\n+# Make sure we import the right Cython\n+cythonpath, _ = os.path.split(os.path.realpath(__file__)) # bin directory\n+cythonpath, _ = os.path.split(cythonpath)\n+if os.path.exists(os.path.join(cythonpath,\"Cython\")):\n+    sys.path.insert(0, cythonpath)\n+    print(\"Found (and using) local cython directory\")\n+# else we aren't in a development directory\n+\n+from Cython.Compiler import Lexicon\n+\n+def main():\n+    if (len(sys.argv) != 2 or\n+        (sys.argv[1] not in ['--overwrite','--here'])):\n+        print(\"\"\"Call the script with either:\n+  --overwrite    to update the existing Lexicon.py file\n+  --here         to create an version of Lexicon.py in the current directory\n+\"\"\")\n+        return\n+\n+    generated_code = StringIO()\n+    print(\"# generated with:\\n #\", sys.implementation.name, sys.version, file=generated_code)\n+    print(file=generated_code)\n+    print(start_expression(), file=generated_code)\n+    print(file=generated_code)\n+    print(cont_expression(),file=generated_code)\n+    print(file=generated_code)\n+    generated_code = generated_code.getvalue()\n+\n+    output = StringIO()\n+    mode = 0 # 1 when found generated section, 2 afterwards\n+    print(\"Reading file\", Lexicon.__file__)\n+    with open(Lexicon.__file__,'r') as f:\n+        for line in f:\n+            if mode != 1:\n+                output.write(line)\n+            else:\n+                if line.strip() == \"# END GENERATED CODE\":\n+                    mode = 2\n+                    output.write(line)\n+            if mode == 0:\n+                if line.strip() == \"# BEGIN GENERATED CODE\":\n+                    mode = 1\n+                    output.write(generated_code)\n+\n+    if mode != 2:\n+        print(\"Warning: generated code section not found - code not inserted\")\n+        return\n+\n+    if sys.argv[1] == \"--here\":\n+        outfile = \"Lexicon.py\"\n+    elif sys.argv[1] == \"--overwrite\":\n+        outfile = Lexicon.__file__\n+    else:\n+        raise ValueError('argv: \"{0}\" not recognised', sys.argv[1])\n+\n+    print(\"Writing to file\", outfile)\n+    with open(outfile,'w') as f:\n+        f.write(output.getvalue())\n+\n+\n+# The easiest way to generate an appropriate character set is just to use the str.isidentifier method\n+# An alternative approach for getting character sets is at https://stackoverflow.com/a/49332214/4657412\n+def get_start_characters_as_number():",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315853666",
            "id": 315853666,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg1MzY2Ng==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 80,
            "path": "bin/cython-generate-lexicon.py",
            "position": 83,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315853666",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r315854573"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/315854573"
                }
            },
            "author_association": "MEMBER",
            "body": "Please always keep spaces around these operators, especially in non-trivial expressions.\r\nhttps://www.python.org/dev/peps/pep-0008/#other-recommendations",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-20T19:03:26Z",
            "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+\n+#\n+#   Updates Cython's Lexicon.py with the unicode characters that are accepted as\n+#   identifiers. Should be run with the most recent version of Python possible\n+#   to ensure that Lexicon is as complete as possible.\n+#\n+#   Python3 only (it relies on str.isidentifier which is a Python 3 addition)\n+#\n+#   Run with either\n+#    --overwrite    to update the existing Lexicon.py file\n+#    --here         to create a copy of Lexicon.py in the current directory\n+\n+import sys\n+from io import StringIO\n+import os\n+\n+# Make sure we import the right Cython\n+cythonpath, _ = os.path.split(os.path.realpath(__file__)) # bin directory\n+cythonpath, _ = os.path.split(cythonpath)\n+if os.path.exists(os.path.join(cythonpath,\"Cython\")):\n+    sys.path.insert(0, cythonpath)\n+    print(\"Found (and using) local cython directory\")\n+# else we aren't in a development directory\n+\n+from Cython.Compiler import Lexicon\n+\n+def main():\n+    if (len(sys.argv) != 2 or\n+        (sys.argv[1] not in ['--overwrite','--here'])):\n+        print(\"\"\"Call the script with either:\n+  --overwrite    to update the existing Lexicon.py file\n+  --here         to create an version of Lexicon.py in the current directory\n+\"\"\")\n+        return\n+\n+    generated_code = StringIO()\n+    print(\"# generated with:\\n #\", sys.implementation.name, sys.version, file=generated_code)\n+    print(file=generated_code)\n+    print(start_expression(), file=generated_code)\n+    print(file=generated_code)\n+    print(cont_expression(),file=generated_code)\n+    print(file=generated_code)\n+    generated_code = generated_code.getvalue()\n+\n+    output = StringIO()\n+    mode = 0 # 1 when found generated section, 2 afterwards\n+    print(\"Reading file\", Lexicon.__file__)\n+    with open(Lexicon.__file__,'r') as f:\n+        for line in f:\n+            if mode != 1:\n+                output.write(line)\n+            else:\n+                if line.strip() == \"# END GENERATED CODE\":\n+                    mode = 2\n+                    output.write(line)\n+            if mode == 0:\n+                if line.strip() == \"# BEGIN GENERATED CODE\":\n+                    mode = 1\n+                    output.write(generated_code)\n+\n+    if mode != 2:\n+        print(\"Warning: generated code section not found - code not inserted\")\n+        return\n+\n+    if sys.argv[1] == \"--here\":\n+        outfile = \"Lexicon.py\"\n+    elif sys.argv[1] == \"--overwrite\":\n+        outfile = Lexicon.__file__\n+    else:\n+        raise ValueError('argv: \"{0}\" not recognised', sys.argv[1])\n+\n+    print(\"Writing to file\", outfile)\n+    with open(outfile,'w') as f:\n+        f.write(output.getvalue())\n+\n+\n+# The easiest way to generate an appropriate character set is just to use the str.isidentifier method\n+# An alternative approach for getting character sets is at https://stackoverflow.com/a/49332214/4657412\n+def get_start_characters_as_number():\n+    return [ i for i in range(sys.maxunicode) if str.isidentifier(chr(i)) ]\n+\n+def get_continue_characters_as_number():\n+    return [ i for i in range(sys.maxunicode) if str.isidentifier('a'+chr(i)) ]\n+\n+def get_continue_not_start_as_number():\n+    start = get_start_characters_as_number()\n+    cont = get_continue_characters_as_number()\n+    return sorted(set(cont)-set(start))\n+\n+def to_ranges(char_num_list):\n+    # Convert the large lists of character digits to\n+    #  list of characters\n+    #  a list pairs of characters representing closed ranges\n+    char_num_list = sorted(char_num_list)\n+    first_good_val = char_num_list[0]\n+\n+    single_chars = []\n+    ranges = []\n+    for n in range(1,len(char_num_list)):\n+        if char_num_list[n]-1 != char_num_list[n-1]:\n+            # discontinuous\n+            if first_good_val==char_num_list[n-1]:",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r315854573",
            "id": 315854573,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg1NDU3Mw==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 103,
            "path": "bin/cython-generate-lexicon.py",
            "position": null,
            "pull_request_review_id": 277359987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/315854573",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r316122642"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/316122642"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "No - not really. I've removed the check.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-21T10:55:49Z",
            "diff_hunk": "@@ -446,6 +463,19 @@ def declare(self, name, cname, type, pos, visibility, shadow = 0, is_type = 0, c\n         if not self.in_cinclude and cname and re.match(\"^_[_A-Z]+$\", cname):\n             # See https://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html#Reserved-Names\n             warning(pos, \"'%s' is a reserved name in C.\" % cname, -1)\n+\n+        try:\n+            ll2 = self.context.language_level == 2\n+        except AttributeError:\n+            # some scopes, for example the builtin scope, don't\n+            # seem to have a context - don't worry about these ones\n+            ll2 = False\n+        if ll2 and name:\n+            try:\n+                name.encode('ascii')\n+            except UnicodeEncodeError:\n+                error(pos, \"Unicode identifiers are only supported at language_level>=3\")",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r316122642",
            "id": 316122642,
            "in_reply_to_id": 315848822,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjEyMjY0Mg==",
            "original_commit_id": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "original_position": 48,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 277714699,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/316122642",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r316330590"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/316330590"
                }
            },
            "author_association": "MEMBER",
            "body": "`if len(sys.argv) > 2 or …`",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-21T18:16:51Z",
            "diff_hunk": "@@ -26,10 +27,12 @@\n from Cython.Compiler import Lexicon\n \n def main():\n-    if (len(sys.argv) != 2 or\n-        (sys.argv[1] not in ['--overwrite','--here'])):\n+    arg = '--overwrite'\n+    if len(sys.argv) == 2:\n+        arg = sys.argv[1]\n+    if arg not in ['--overwrite','--here']:",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r316330590",
            "id": 316330590,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjMzMDU5MA==",
            "original_commit_id": "27fcd6ecf233fccda5333589fa9bfa13c8065f89",
            "original_position": 17,
            "path": "bin/cython-generate-lexicon.py",
            "position": null,
            "pull_request_review_id": 277981632,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/316330590",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r316331501"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/316331501"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this should say `'…'.format(arg)`, but since this case is already handled above, a bare `else:` for the second case, maybe with an `assert`, seems enough.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-21T18:18:54Z",
            "diff_hunk": "@@ -63,12 +66,12 @@ def main():\n         print(\"Warning: generated code section not found - code not inserted\")\n         return\n \n-    if sys.argv[1] == \"--here\":\n+    if arg == \"--here\":\n         outfile = \"Lexicon.py\"\n-    elif sys.argv[1] == \"--overwrite\":\n+    elif arg == \"--overwrite\":\n         outfile = Lexicon.__file__\n     else:\n-        raise ValueError('argv: \"{0}\" not recognised', sys.argv[1])\n+        raise ValueError('argument \"{0}\" not recognised', arg)",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r316331501",
            "id": 316331501,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjMzMTUwMQ==",
            "original_commit_id": "27fcd6ecf233fccda5333589fa9bfa13c8065f89",
            "original_position": 45,
            "path": "bin/cython-generate-lexicon.py",
            "position": null,
            "pull_request_review_id": 277981632,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/316331501",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r316332223"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/316332223"
                }
            },
            "author_association": "MEMBER",
            "body": "-> `can only be run in Python 3`\r\n\r\nThat's not entirely true, though. A compiled ASCII-named Python function that internally uses and calls non-ASCII names and functions should be usable from a Python (2) doctest. Would be nice to have this case included (in both Py2 and Py3). If that works, it allows Cython modules also in Python 2 that can use Unicode identifiers internally, as long as they provide an ASCII-only Python-level API.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-21T18:20:23Z",
            "diff_hunk": "@@ -1,9 +1,48 @@\n # -*- coding: utf-8 -*-\n # cython: language_level=3\n-# mode: compile\n+# mode: run\n # tag: pep3131\n \n-\"ναμε1\"\n+# Code with unicode_identifiers can be compiled with Cython running either Python 2 or 3.\n+# However it can only be run in Python 2. Therefore no doctests are run in Python2.",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r316332223",
            "id": 316332223,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjMzMjIyMw==",
            "original_commit_id": "27fcd6ecf233fccda5333589fa9bfa13c8065f89",
            "original_position": 9,
            "path": "tests/run/unicode_identifiers.pyx",
            "position": null,
            "pull_request_review_id": 277981632,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/316332223",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r316335870"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/316335870"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, nice. Thanks for catching these.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-21T18:28:14Z",
            "diff_hunk": "@@ -1325,9 +1325,9 @@ class DecoratorTransform(ScopeTrackingTransform, SkipDeclarations):\n     _properties = None\n \n     _map_property_attribute = {\n-        'getter': '__get__',\n-        'setter': '__set__',\n-        'deleter': '__del__',\n+        'getter': EncodedString('__get__'),\n+        'setter': EncodedString('__set__'),\n+        'deleter': EncodedString('__del__'),",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r316335870",
            "id": 316335870,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjMzNTg3MA==",
            "original_commit_id": "27fcd6ecf233fccda5333589fa9bfa13c8065f89",
            "original_position": 9,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 9,
            "pull_request_review_id": 277981632,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/316335870",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r316587950"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/316587950"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've added a few runtime tests for using Python 2 as you described. I'd be reluctant to really advertise this as a feature since it's hard to avoid any unicode leaking back to Python when it shouldn't do and there's no attempt to diagnose when the \"ASCII-only Python-level API\" is crossed, but practically a lot of it works so there's no harm in testing it,\r\n\r\nThe tests are fairly basic since it's surprisingly hard to write doctests that output unicode and work in all versions (I gave up on inspecting the traceback and locals in Python 2 for example). ",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-22T09:43:53Z",
            "diff_hunk": "@@ -1,9 +1,48 @@\n # -*- coding: utf-8 -*-\n # cython: language_level=3\n-# mode: compile\n+# mode: run\n # tag: pep3131\n \n-\"ναμε1\"\n+# Code with unicode_identifiers can be compiled with Cython running either Python 2 or 3.\n+# However it can only be run in Python 2. Therefore no doctests are run in Python2.",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r316587950",
            "id": 316587950,
            "in_reply_to_id": 316332223,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjU4Nzk1MA==",
            "original_commit_id": "27fcd6ecf233fccda5333589fa9bfa13c8065f89",
            "original_position": 9,
            "path": "tests/run/unicode_identifiers.pyx",
            "position": null,
            "pull_request_review_id": 278305780,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/316587950",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r316980092"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/316980092"
                }
            },
            "author_association": "MEMBER",
            "body": "I also find it much better when the constants in `Naming` are text and not (surprisingly) some of them bytes. `punicodify_name()` is the only place where bytes are handled (temporarily), everything else is text. So this is a good change.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-23T05:37:26Z",
            "diff_hunk": "@@ -13,7 +13,7 @@\n \n temp_prefix       = u\"__cyt_\"\n \n-pyunicode_identifier_prefix = (pyrex_prefix + 'U').encode('ascii')\n+pyunicode_identifier_prefix = pyrex_prefix + 'U'",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r316980092",
            "id": 316980092,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk4MDA5Mg==",
            "original_commit_id": "6ba540075013ed0e4c619827e4da65d2dd013ce1",
            "original_position": 5,
            "path": "Cython/Compiler/Naming.py",
            "position": 4,
            "pull_request_review_id": 278803342,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/316980092",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r316980493"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/316980493"
                }
            },
            "author_association": "MEMBER",
            "body": "You probably meant the comment to read \"for Python 3\", but I would suggest always doing this, i.e. just decode the byte string right after punycode-encoding it, also in Py2 (because, why not).",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-23T05:39:44Z",
            "diff_hunk": "@@ -46,23 +46,22 @@ def punycodify_name(cname, mangle_with=None):\n     # if passed the mangle_with should be a byte string\n     # modified from  PEP489\n     try:\n-        cname = cname.encode('ascii')\n+        cname.encode('ascii')\n     except UnicodeEncodeError:\n-        pyrex_prefix = Naming.pyrex_prefix.encode('ascii')\n         cname = cname.encode('punycode').replace(b'-', b'_')\n+        if not isinstance(cname,str):\n+            cname = cname.decode('ascii') # for Python",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r316980493",
            "id": 316980493,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk4MDQ5Mw==",
            "original_commit_id": "6ba540075013ed0e4c619827e4da65d2dd013ce1",
            "original_position": 10,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 278803342,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:10:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/316980493",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3081#discussion_r317086431"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/317086431"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes - that makes sense. I've made the change.",
            "commit_id": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "created_at": "2019-08-23T11:17:19Z",
            "diff_hunk": "@@ -46,23 +46,22 @@ def punycodify_name(cname, mangle_with=None):\n     # if passed the mangle_with should be a byte string\n     # modified from  PEP489\n     try:\n-        cname = cname.encode('ascii')\n+        cname.encode('ascii')\n     except UnicodeEncodeError:\n-        pyrex_prefix = Naming.pyrex_prefix.encode('ascii')\n         cname = cname.encode('punycode').replace(b'-', b'_')\n+        if not isinstance(cname,str):\n+            cname = cname.decode('ascii') # for Python",
            "html_url": "https://github.com/cython/cython/pull/3081#discussion_r317086431",
            "id": 317086431,
            "in_reply_to_id": 316980493,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzA4NjQzMQ==",
            "original_commit_id": "6ba540075013ed0e4c619827e4da65d2dd013ce1",
            "original_position": 10,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 278939869,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3081",
            "updated_at": "2019-08-23T11:17:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/317086431",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3081/comments",
    "commit_data": [
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e9a99214737d671a5c48f8d10ad706950b59cc30/comments",
            "commit": {
                "author": {
                    "date": "2019-08-16T08:29:52Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-16T08:29:52Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Accept unicode in identifiers (step 1)\n\nThis only accepts it from a code matching point of view - it\ntends to break if you actually use it in Cython. However existing\n(ascii only) is still handled OK by this.\n\nIt's possible this should turn itself on and off appropriately\ndepending on version and encoding however there isn't anywhere\nobvious to do it",
                "tree": {
                    "sha": "966124a29500d9359f2176b5379655d32c5a812a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/966124a29500d9359f2176b5379655d32c5a812a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e9a99214737d671a5c48f8d10ad706950b59cc30",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/e9a99214737d671a5c48f8d10ad706950b59cc30",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZTlhOTkyMTQ3MzdkNjcxYTVjNDhmOGQxMGFkNzA2OTUwYjU5Y2MzMA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/14acda8e7e0b4246ef80331146e66d4f5b70c4e8",
                    "sha": "14acda8e7e0b4246ef80331146e66d4f5b70c4e8",
                    "url": "https://api.github.com/repos/cython/cython/commits/14acda8e7e0b4246ef80331146e66d4f5b70c4e8"
                }
            ],
            "sha": "e9a99214737d671a5c48f8d10ad706950b59cc30",
            "url": "https://api.github.com/repos/cython/cython/commits/e9a99214737d671a5c48f8d10ad706950b59cc30"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/541554bab2274b4f38a250e6684c641d2fb5dddb/comments",
            "commit": {
                "author": {
                    "date": "2019-08-16T13:38:00Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-16T13:38:00Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Warnings and messages deal with unicode better\n\nUnicode identifiers tend to emit unicode errors/warnings",
                "tree": {
                    "sha": "8374c92c81e8d86dfebf3ad0c3385eada4cbfacf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8374c92c81e8d86dfebf3ad0c3385eada4cbfacf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/541554bab2274b4f38a250e6684c641d2fb5dddb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/541554bab2274b4f38a250e6684c641d2fb5dddb",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NTQxNTU0YmFiMjI3NGI0ZjM4YTI1MGU2Njg0YzY0MWQyZmI1ZGRkYg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e9a99214737d671a5c48f8d10ad706950b59cc30",
                    "sha": "e9a99214737d671a5c48f8d10ad706950b59cc30",
                    "url": "https://api.github.com/repos/cython/cython/commits/e9a99214737d671a5c48f8d10ad706950b59cc30"
                }
            ],
            "sha": "541554bab2274b4f38a250e6684c641d2fb5dddb",
            "url": "https://api.github.com/repos/cython/cython/commits/541554bab2274b4f38a250e6684c641d2fb5dddb"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/61f44f1041095626e558bf63c9b4ce3669285bf5/comments",
            "commit": {
                "author": {
                    "date": "2019-08-16T15:50:30Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-16T15:50:30Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Support unicode identifiers\n\nThis adds support for unicode identifiers (PEP3131) in most\nsensible situations where they should appear\n\nTests added to show that the code compiles appropriate.\n\nSupport covers the Python side of things\n(including cdef classes and c[p]def functions)\n- I've made no effort to support structs with a unicode name\nsince that's less important for Python compatibility.\n\nThere's undoubtedly various cases that aren't covered, but\nit seems to work and doesn't appear to break anything",
                "tree": {
                    "sha": "9705c7ee0ab43877fad8c85129417b16ba6d906e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9705c7ee0ab43877fad8c85129417b16ba6d906e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/61f44f1041095626e558bf63c9b4ce3669285bf5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/61f44f1041095626e558bf63c9b4ce3669285bf5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjFmNDRmMTA0MTA5NTYyNmU1NThiZjYzYzliNGNlMzY2OTI4NWJmNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/541554bab2274b4f38a250e6684c641d2fb5dddb",
                    "sha": "541554bab2274b4f38a250e6684c641d2fb5dddb",
                    "url": "https://api.github.com/repos/cython/cython/commits/541554bab2274b4f38a250e6684c641d2fb5dddb"
                }
            ],
            "sha": "61f44f1041095626e558bf63c9b4ce3669285bf5",
            "url": "https://api.github.com/repos/cython/cython/commits/61f44f1041095626e558bf63c9b4ce3669285bf5"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/dac26a3d04d4e2ac42aa186f9c78833078e9bd40/comments",
            "commit": {
                "author": {
                    "date": "2019-08-16T17:05:33Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-16T17:05:33Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Fixed ultralong lines",
                "tree": {
                    "sha": "5bcf2cca33c5ba67601362d0eb5f5afa4d0ea067",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5bcf2cca33c5ba67601362d0eb5f5afa4d0ea067"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZGFjMjZhM2QwNGQ0ZTJhYzQyYWExODZmOWM3ODgzMzA3OGU5YmQ0MA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/61f44f1041095626e558bf63c9b4ce3669285bf5",
                    "sha": "61f44f1041095626e558bf63c9b4ce3669285bf5",
                    "url": "https://api.github.com/repos/cython/cython/commits/61f44f1041095626e558bf63c9b4ce3669285bf5"
                }
            ],
            "sha": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
            "url": "https://api.github.com/repos/cython/cython/commits/dac26a3d04d4e2ac42aa186f9c78833078e9bd40"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9eea31f61a20c541ac618f5ca5e9453a26f3e013/comments",
            "commit": {
                "author": {
                    "date": "2019-08-20T08:37:01Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-20T08:37:01Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Cleaned up Lexicon.py + unicode\n\nStrings are now directly unicode (rather than escaped), moved to\nthe end of the file into a generated code section.\nContinue chars are now expressed as the additions to start chars.\nA script for updating Lexicon.py has been added to \"bin\"",
                "tree": {
                    "sha": "08ac56f14704120b50301b8a56881f661b51183f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/08ac56f14704120b50301b8a56881f661b51183f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9eea31f61a20c541ac618f5ca5e9453a26f3e013",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/9eea31f61a20c541ac618f5ca5e9453a26f3e013",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OWVlYTMxZjYxYTIwYzU0MWFjNjE4ZjVjYTVlOTQ1M2EyNmYzZTAxMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
                    "sha": "dac26a3d04d4e2ac42aa186f9c78833078e9bd40",
                    "url": "https://api.github.com/repos/cython/cython/commits/dac26a3d04d4e2ac42aa186f9c78833078e9bd40"
                }
            ],
            "sha": "9eea31f61a20c541ac618f5ca5e9453a26f3e013",
            "url": "https://api.github.com/repos/cython/cython/commits/9eea31f61a20c541ac618f5ca5e9453a26f3e013"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0a253554cc0799212be7d72928d12413b663a943/comments",
            "commit": {
                "author": {
                    "date": "2019-08-20T09:00:52Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-20T09:09:23Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Shortened \"generated with\" string\n\nTo avoid filename length",
                "tree": {
                    "sha": "ca429053ed693bdd6484c0b1d4f020ed69c7555c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ca429053ed693bdd6484c0b1d4f020ed69c7555c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0a253554cc0799212be7d72928d12413b663a943",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/0a253554cc0799212be7d72928d12413b663a943",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MGEyNTM1NTRjYzA3OTkyMTJiZTdkNzI5MjhkMTI0MTNiNjYzYTk0Mw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9eea31f61a20c541ac618f5ca5e9453a26f3e013",
                    "sha": "9eea31f61a20c541ac618f5ca5e9453a26f3e013",
                    "url": "https://api.github.com/repos/cython/cython/commits/9eea31f61a20c541ac618f5ca5e9453a26f3e013"
                }
            ],
            "sha": "0a253554cc0799212be7d72928d12413b663a943",
            "url": "https://api.github.com/repos/cython/cython/commits/0a253554cc0799212be7d72928d12413b663a943"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc/comments",
            "commit": {
                "author": {
                    "date": "2019-08-20T13:47:23Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-20T13:47:23Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Further work on unicode identifiers\n\nMostly removing \"try: encode; catch: \" pattern in favour of always\npassing encoding strings. Some cleaning up of code. Added error\nmessage if unicode is used in language_level=2",
                "tree": {
                    "sha": "d807b5662207a94766a51c473a9b0ced00a07353",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d807b5662207a94766a51c473a9b0ced00a07353"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OGM4Yzg1ZWJhMTAxODc3YmJiMmVjNDdmZjllZWFmODFmMDg1N2JmYw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0a253554cc0799212be7d72928d12413b663a943",
                    "sha": "0a253554cc0799212be7d72928d12413b663a943",
                    "url": "https://api.github.com/repos/cython/cython/commits/0a253554cc0799212be7d72928d12413b663a943"
                }
            ],
            "sha": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
            "url": "https://api.github.com/repos/cython/cython/commits/8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/27fcd6ecf233fccda5333589fa9bfa13c8065f89/comments",
            "commit": {
                "author": {
                    "date": "2019-08-21T10:52:04Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-21T10:52:04Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Unicode identifiers\n\nRemoved more try-catch in favour of passing the right types\nSome code tidying\nMade some runnable tests",
                "tree": {
                    "sha": "e04a5faabffbd6d7625ffaf1ddd6a1032efa44a9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e04a5faabffbd6d7625ffaf1ddd6a1032efa44a9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/27fcd6ecf233fccda5333589fa9bfa13c8065f89",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/27fcd6ecf233fccda5333589fa9bfa13c8065f89",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MjdmY2Q2ZWNmMjMzZmNjZGE1MzMzNTg5ZmE5YmZhMTNjODA2NWY4OQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
                    "sha": "8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc",
                    "url": "https://api.github.com/repos/cython/cython/commits/8c8c85eba101877bbb2ec47ff9eeaf81f0857bfc"
                }
            ],
            "sha": "27fcd6ecf233fccda5333589fa9bfa13c8065f89",
            "url": "https://api.github.com/repos/cython/cython/commits/27fcd6ecf233fccda5333589fa9bfa13c8065f89"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a586389276756d863a8fa3486ea32c45564ef7d3/comments",
            "commit": {
                "author": {
                    "date": "2019-08-21T12:21:44Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-21T12:21:44Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Fixed unicode_identifiers test\n\nIt used a feature of the traceback module that was added\nin Python 3.6. Changed to work with Python 3.x",
                "tree": {
                    "sha": "79c6d462a1cc95c6a30bc7b82702a9e07a1d55a2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/79c6d462a1cc95c6a30bc7b82702a9e07a1d55a2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a586389276756d863a8fa3486ea32c45564ef7d3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/a586389276756d863a8fa3486ea32c45564ef7d3",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTU4NjM4OTI3Njc1NmQ4NjNhOGZhMzQ4NmVhMzJjNDU1NjRlZjdkMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/27fcd6ecf233fccda5333589fa9bfa13c8065f89",
                    "sha": "27fcd6ecf233fccda5333589fa9bfa13c8065f89",
                    "url": "https://api.github.com/repos/cython/cython/commits/27fcd6ecf233fccda5333589fa9bfa13c8065f89"
                }
            ],
            "sha": "a586389276756d863a8fa3486ea32c45564ef7d3",
            "url": "https://api.github.com/repos/cython/cython/commits/a586389276756d863a8fa3486ea32c45564ef7d3"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1f2bd8eb0aa6e42b6ad05413f187959aa0daf732/comments",
            "commit": {
                "author": {
                    "date": "2019-08-22T09:35:47Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-22T09:35:47Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Unicode identifiers tests and public attributes\n\nChanged the tests to include a small number of Python 2 runtime tests\n\nAdded support for unicode in cdef class public attributes\n\nAdded a prefix to some unicode names that were being encorporated\ndirectly into C",
                "tree": {
                    "sha": "08ac91a6369f1b24c9bca5acba56a927b4594a69",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/08ac91a6369f1b24c9bca5acba56a927b4594a69"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1f2bd8eb0aa6e42b6ad05413f187959aa0daf732",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/1f2bd8eb0aa6e42b6ad05413f187959aa0daf732",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MWYyYmQ4ZWIwYWE2ZTQyYjZhZDA1NDEzZjE4Nzk1OWFhMGRhZjczMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a586389276756d863a8fa3486ea32c45564ef7d3",
                    "sha": "a586389276756d863a8fa3486ea32c45564ef7d3",
                    "url": "https://api.github.com/repos/cython/cython/commits/a586389276756d863a8fa3486ea32c45564ef7d3"
                }
            ],
            "sha": "1f2bd8eb0aa6e42b6ad05413f187959aa0daf732",
            "url": "https://api.github.com/repos/cython/cython/commits/1f2bd8eb0aa6e42b6ad05413f187959aa0daf732"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6ba540075013ed0e4c619827e4da65d2dd013ce1/comments",
            "commit": {
                "author": {
                    "date": "2019-08-22T14:00:07Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-22T14:00:07Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Fixed test error in Python3.4\n\nTo do with formatting bytes strings which wasn't supported on\nPython 3.4. Changed to always use `str`",
                "tree": {
                    "sha": "808039a57efcf9dd655dc27a5621ee742f03e789",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/808039a57efcf9dd655dc27a5621ee742f03e789"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6ba540075013ed0e4c619827e4da65d2dd013ce1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/6ba540075013ed0e4c619827e4da65d2dd013ce1",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NmJhNTQwMDc1MDEzZWQwZTRjNjE5ODI3ZTRkYTY1ZDJkZDAxM2NlMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1f2bd8eb0aa6e42b6ad05413f187959aa0daf732",
                    "sha": "1f2bd8eb0aa6e42b6ad05413f187959aa0daf732",
                    "url": "https://api.github.com/repos/cython/cython/commits/1f2bd8eb0aa6e42b6ad05413f187959aa0daf732"
                }
            ],
            "sha": "6ba540075013ed0e4c619827e4da65d2dd013ce1",
            "url": "https://api.github.com/repos/cython/cython/commits/6ba540075013ed0e4c619827e4da65d2dd013ce1"
        },
        {
            "author": {},
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ac06ad7ed48fe2710850ea75486360aa12d0d738/comments",
            "commit": {
                "author": {
                    "date": "2019-08-23T11:08:32Z",
                    "email": "",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-08-23T11:08:32Z",
                    "email": "",
                    "name": "da-woods"
                },
                "message": "Remove unnecessary if from Symtab\n\nSmall change to always return unicode string",
                "tree": {
                    "sha": "079f8d6554ebb05f61e135443aa16f0342d374c7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/079f8d6554ebb05f61e135443aa16f0342d374c7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ac06ad7ed48fe2710850ea75486360aa12d0d738",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {},
            "html_url": "https://github.com/cython/cython/commit/ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YWMwNmFkN2VkNDhmZTI3MTA4NTBlYTc1NDg2MzYwYWExMmQwZDczOA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6ba540075013ed0e4c619827e4da65d2dd013ce1",
                    "sha": "6ba540075013ed0e4c619827e4da65d2dd013ce1",
                    "url": "https://api.github.com/repos/cython/cython/commits/6ba540075013ed0e4c619827e4da65d2dd013ce1"
                }
            ],
            "sha": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
            "url": "https://api.github.com/repos/cython/cython/commits/ac06ad7ed48fe2710850ea75486360aa12d0d738"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3081/commits",
    "created_at": "2019-08-16T16:07:24Z",
    "diff_url": "https://github.com/cython/cython/pull/3081.diff",
    "head": {
        "label": "da-woods:unicode_identifiers",
        "ref": "unicode_identifiers",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2019-08-25T20:25:29Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 55230,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2016-04-28T19:40:03Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "ac06ad7ed48fe2710850ea75486360aa12d0d738",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3081",
    "id": 308133154,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3081",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "locked": false,
    "merge_commit_sha": "270bf960a25374d3eb19a6040c395fd4bf4d6a25",
    "merged_at": "2019-08-24T08:22:06Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 94,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 25,
        "state": "open",
        "title": "3.0",
        "updated_at": "2019-08-24T09:35:55Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA4MTMzMTU0",
    "number": 3081,
    "patch_url": "https://github.com/cython/cython/pull/3081.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3081/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/ac06ad7ed48fe2710850ea75486360aa12d0d738",
    "title": "Unicode identifiers (PEP 3131)",
    "updated_at": "2019-08-25T20:29:11Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3081",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}